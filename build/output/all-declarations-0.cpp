#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------------------------------------------------*

#include "class-abstractBlockTerminationForBlockInstruction.h"
#include "class-baseline_andCondition.h"
#include "class-baseline_assembly_instruction.h"
#include "class-baseline_bitTest_in_structured_if_condition.h"
#include "class-baseline_conditionExpression.h"
#include "class-baseline_incDecRegisterInCondition.h"
#include "class-baseline_instruction.h"
#include "class-baseline_instruction_CALL.h"
#include "class-baseline_instruction_F.h"
#include "class-baseline_instruction_FB.h"
#include "class-baseline_instruction_FD.h"
#include "class-baseline_instruction_FOREVER.h"
#include "class-baseline_instruction_GOTO.h"
#include "class-baseline_instruction_IF_BitTest.h"
#include "class-baseline_instruction_IF_IncDec.h"
#include "class-baseline_instruction_JSR.h"
#include "class-baseline_instruction_JUMP.h"
#include "class-baseline_instruction_MNOP.h"
#include "class-baseline_instruction_STATIC_REPEAT.h"
#include "class-baseline_instruction_TRIS.h"
#include "class-baseline_instruction_WO_OPERAND.h"
#include "class-baseline_instruction_do_while.h"
#include "class-baseline_instruction_literalOperation.h"
#include "class-baseline_instruction_structured_if.h"
#include "class-baseline_intermediate_instruction.h"
#include "class-baseline_negateCondition.h"
#include "class-bitNumberExpression.h"
#include "class-bitNumberLabelValue.h"
#include "class-bitNumberLiteralValue.h"
#include "class-byteDeclarationInRam.h"
#include "class-declarationInRam.h"
#include "class-exitBlockTerminationForBlockInstruction.h"
#include "class-gotoTerminationForBlockInstruction.h"
#include "class-immediatAdd.h"
#include "class-immediatAnd.h"
#include "class-immediatComplement.h"
#include "class-immediatDiv.h"
#include "class-immediatEqualTest.h"
#include "class-immediatExpression.h"
#include "class-immediatGreaterOrEqualTest.h"
#include "class-immediatGreaterTest.h"
#include "class-immediatInteger.h"
#include "class-immediatLeftShift.h"
#include "class-immediatLowerOrEqualTest.h"
#include "class-immediatLowerTest.h"
#include "class-immediatMod.h"
#include "class-immediatMul.h"
#include "class-immediatNegate.h"
#include "class-immediatNotEqualTest.h"
#include "class-immediatOr.h"
#include "class-immediatRegister.h"
#include "class-immediatRightShift.h"
#include "class-immediatSlice.h"
#include "class-immediatSub.h"
#include "class-immediatXor.h"
#include "class-ipic18SequentialInstruction.h"
#include "class-midrangeInstruction_checkbank.h"
#include "class-midrangeInstruction_checknobank.h"
#include "class-midrange_andCondition.h"
#include "class-midrange_bitTest_in_structured_if_condition.h"
#include "class-midrange_conditionExpression.h"
#include "class-midrange_incDecRegisterInCondition.h"
#include "class-midrange_instruction.h"
#include "class-midrange_instruction_CALL.h"
#include "class-midrange_instruction_CLRW.h"
#include "class-midrange_instruction_CLRWDT.h"
#include "class-midrange_instruction_F.h"
#include "class-midrange_instruction_FB.h"
#include "class-midrange_instruction_FD.h"
#include "class-midrange_instruction_FOREVER.h"
#include "class-midrange_instruction_GOTO.h"
#include "class-midrange_instruction_IF_BitTest.h"
#include "class-midrange_instruction_IF_IncDec.h"
#include "class-midrange_instruction_JSR.h"
#include "class-midrange_instruction_JUMP.h"
#include "class-midrange_instruction_MNOP.h"
#include "class-midrange_instruction_NOP.h"
#include "class-midrange_instruction_SLEEP.h"
#include "class-midrange_instruction_STATIC_REPEAT.h"
#include "class-midrange_instruction_banksel.h"
#include "class-midrange_instruction_banksel_register.h"
#include "class-midrange_instruction_do_while.h"
#include "class-midrange_instruction_literalOperation.h"
#include "class-midrange_instruction_nobanksel.h"
#include "class-midrange_instruction_savebank.h"
#include "class-midrange_instruction_structured_if.h"
#include "class-midrange_intermediate_instruction.h"
#include "class-midrange_negateCondition.h"
#include "class-pic18AbstractCaseItem.h"
#include "class-pic18AndCondition.h"
#include "class-pic18BccInStructuredCondition.h"
#include "class-pic18BitTestInStructuredCondition.h"
#include "class-pic18ConditionExpression.h"
#include "class-pic18IncDecRegisterInCondition.h"
#include "class-pic18Instruction_FA.h"
#include "class-pic18Instruction_FBA.h"
#include "class-pic18Instruction_FDA.h"
#include "class-pic18Instruction_FOREVER.h"
#include "class-pic18Instruction_IF_BitTest.h"
#include "class-pic18Instruction_IF_FA_SEMI_COLON.h"
#include "class-pic18Instruction_IF_IncDec.h"
#include "class-pic18Instruction_JSR.h"
#include "class-pic18Instruction_JUMP.h"
#include "class-pic18Instruction_JUMPCC.h"
#include "class-pic18Instruction_LDATAPTR.h"
#include "class-pic18Instruction_LFSR.h"
#include "class-pic18Instruction_LTBLPTR.h"
#include "class-pic18Instruction_MNOP.h"
#include "class-pic18Instruction_MOVFF.h"
#include "class-pic18Instruction_TBLRD.h"
#include "class-pic18Instruction_TBLWT.h"
#include "class-pic18Instruction_banksel.h"
#include "class-pic18Instruction_banksel_register.h"
#include "class-pic18Instruction_block.h"
#include "class-pic18Instruction_checkbank.h"
#include "class-pic18Instruction_checknobank.h"
#include "class-pic18Instruction_computed_bra.h"
#include "class-pic18Instruction_computed_goto.h"
#include "class-pic18Instruction_computed_rcall.h"
#include "class-pic18Instruction_computed_retlw.h"
#include "class-pic18Instruction_do_while.h"
#include "class-pic18Instruction_fnop.h"
#include "class-pic18Instruction_literalOperation.h"
#include "class-pic18Instruction_nobanksel.h"
#include "class-pic18Instruction_repetitionStatique.h"
#include "class-pic18Instruction_savebank.h"
#include "class-pic18Instruction_structured_if.h"
#include "class-pic18Instruction_switch.h"
#include "class-pic18Instruction_withNoOperand.h"
#include "class-pic18IntervalCaseItem.h"
#include "class-pic18NegateCondition.h"
#include "class-pic18PiccoloInstruction.h"
#include "class-pic18PiccoloSimpleInstruction.h"
#include "class-pic18RegisterComparisonCondition.h"
#include "class-pic18RegisterTestCondition.h"
#include "class-pic18SimpleConstantCaseItem.h"
#include "class-registerExpression.h"
#include "class-testTerminationForBlockInstruction.h"
#include "enum-FA_instruction_base_code.h"
#include "enum-FA_sequential_instruction_base_code.h"
#include "enum-baseline_F_instruction_base_code.h"
#include "enum-baseline_IF_BitTest_opcode.h"
#include "enum-baseline_WO_OPERAND_group.h"
#include "enum-baseline_bit_oriented_op.h"
#include "enum-baseline_instruction_FD_base_code.h"
#include "enum-baseline_literal_instruction_opcode.h"
#include "enum-bit_oriented_op.h"
#include "enum-conditionalBranchMode.h"
#include "enum-conditional_branch.h"
#include "enum-if_semi_colon_op.h"
#include "enum-ipic18RegisterComparison.h"
#include "enum-ipic18_compare_register_instruction_base_code.h"
#include "enum-jumpInstructionKind.h"
#include "enum-literal_instruction_opcode.h"
#include "enum-midrange_F_instruction_base_code.h"
#include "enum-midrange_bit_oriented_op.h"
#include "enum-midrange_call_goto_bit.h"
#include "enum-midrange_instruction_FD_base_code.h"
#include "enum-midrange_literal_instruction_opcode.h"
#include "enum-pic18InstructionWithNoOperandKind.h"
#include "enum-pic18Instruction_FDA_base_code_AST.h"
#include "enum-pic18RegisterComparison.h"
#include "enum-programKind.h"
#include "enum-routineKind.h"
#include "enum-skip_instruction_FDA_base_code.h"
#include "enum-tableAccessOption.h"
#include "grammar-pic18_include_grammar.h"
#include "graph-blockInvocationGraph.h"
#include "lexique-piccoloDevice_lexique.h"
#include "lexique-piccolo_lexique.h"
#include "list-baseline_assembly_instructionList.h"
#include "list-baseline_instructionList.h"
#include "list-baseline_intermediate_instructionList.h"
#include "list-baseline_partList.h"
#include "list-baseline_routineDefinitionList.h"
#include "list-checkpicList.h"
#include "list-clusterList.h"
#include "list-codeList.h"
#include "list-configDefinitionList.h"
#include "list-configSettingList.h"
#include "list-constantDefinitionList.h"
#include "list-dataList.h"
#include "list-declarationInRamList.h"
#include "list-immediatExpressionList.h"
#include "list-immediatSliceExpressionList.h"
#include "list-ipic18BlockList.h"
#include "list-ipic18SequentialInstructionList.h"
#include "list-midrange_instructionList.h"
#include "list-midrange_intermediate_instructionList.h"
#include "list-midrange_interruptDefinitionList.h"
#include "list-midrange_partList.h"
#include "list-midrange_routineDefinitionList.h"
#include "list-pic18BlockInstructionBlockList.h"
#include "list-pic18CaseExpressionList.h"
#include "list-pic18DoWhilePartList.h"
#include "list-pic18InstructionList.h"
#include "list-pic18InterruptDefinitionList.h"
#include "list-pic18RoutineDefinitionList.h"
#include "list-pic18SwitchInstructionCaseList.h"
#include "list-ramDefinitionList.h"
#include "list-routineDeclarationList.h"
#include "map-actualConfigurationMap.h"
#include "map-baselineRoutineMap.h"
#include "map-baselineSymbolTableForOptimizations.h"
#include "map-baseline_declaredRoutineMap.h"
#include "map-baseline_symbolTable.h"
#include "map-bitSliceTable.h"
#include "map-blockInitialBankSelectionMap.h"
#include "map-blockInstructionBlockMap.h"
#include "map-blockMapForStackComputation.h"
#include "map-bootloaderReservedRAMmap.h"
#include "map-caseConstantMap.h"
#include "map-configFieldMap.h"
#include "map-constantMap.h"
#include "map-dataMap.h"
#include "map-declaredByteMap.h"
#include "map-declaredRoutineMap.h"
#include "map-fieldSettingMap.h"
#include "map-midrange_declaredRoutineMap.h"
#include "map-midrange_symbolTable.h"
#include "map-midrange_symbolTableForConvertingRelatives.h"
#include "map-neededConversionForClusterOrder.h"
#include "map-pic18_dataAddressMap.h"
#include "map-pic18_dataMap.h"
#include "map-ramBankTable.h"
#include "map-registerTable.h"
#include "map-routineCallMap.h"
#include "map-routineMap.h"
#include "map-routineStackRequirementMap.h"
#include "map-symbolTableForBlockOptimization.h"
#include "map-symbolTableForClusterOrdering.h"
#include "map-symbolTableForOptimizations.h"
#include "map-symbolTableForRelativesResolution.h"
#include "method-bitNumberExpression-display.h"
#include "option-piccolo_options.h"
#include "proc-baseline_analysis.h"
#include "proc-midrange_analyze.h"
#include "proc-pic18BootloaderSpecificationAnalysis.h"
#include "proc-pic18_analyze.h"
#include "struct-actualConfigurationMap-element.h"
#include "struct-baselineRoutineMap-element.h"
#include "struct-baselineSymbolTableForOptimizations-element.h"
#include "struct-baseline_assembly_instructionList-element.h"
#include "struct-baseline_declaredRoutineMap-element.h"
#include "struct-baseline_instructionList-element.h"
#include "struct-baseline_intermediate_instructionList-element.h"
#include "struct-baseline_model.h"
#include "struct-baseline_partList-element.h"
#include "struct-baseline_routineDefinitionList-element.h"
#include "struct-baseline_symbolTable-element.h"
#include "struct-bitSliceTable-element.h"
#include "struct-blockInitialBankSelectionMap-element.h"
#include "struct-blockInstructionBlockMap-element.h"
#include "struct-blockMapForStackComputation-element.h"
#include "struct-bootloaderReservedRAMmap-element.h"
#include "struct-caseConstantMap-element.h"
#include "struct-checkpicList-element.h"
#include "struct-clusterList-element.h"
#include "struct-codeList-element.h"
#include "struct-configDefinitionList-element.h"
#include "struct-configFieldMap-element.h"
#include "struct-configSettingList-element.h"
#include "struct-constantDefinitionList-element.h"
#include "struct-constantMap-element.h"
#include "struct-dataList-element.h"
#include "struct-dataMap-element.h"
#include "struct-declarationInRamList-element.h"
#include "struct-declaredByteMap-element.h"
#include "struct-declaredRoutineMap-element.h"
#include "struct-fieldSettingMap-element.h"
#include "struct-immediatExpressionList-element.h"
#include "struct-immediatSliceExpressionList-element.h"
#include "struct-ipic18Block.h"
#include "struct-ipic18BlockList-element.h"
#include "struct-ipic18SequentialInstructionList-element.h"
#include "struct-midrange_declaredRoutineMap-element.h"
#include "struct-midrange_instructionList-element.h"
#include "struct-midrange_intermediate_instructionList-element.h"
#include "struct-midrange_interruptDefinitionList-element.h"
#include "struct-midrange_model.h"
#include "struct-midrange_partList-element.h"
#include "struct-midrange_routineDefinitionList-element.h"
#include "struct-midrange_symbolTable-element.h"
#include "struct-midrange_symbolTableForConvertingRelatives-element.h"
#include "struct-neededConversionForClusterOrder-element.h"
#include "struct-pic18AST.h"
#include "struct-pic18BlockInstructionBlockList-element.h"
#include "struct-pic18CaseExpressionList-element.h"
#include "struct-pic18DoWhilePartList-element.h"
#include "struct-pic18InstructionList-element.h"
#include "struct-pic18InterruptDefinitionList-element.h"
#include "struct-pic18RoutineDefinitionList-element.h"
#include "struct-pic18SwitchInstructionCaseList-element.h"
#include "struct-pic18_dataAddressMap-element.h"
#include "struct-pic18_dataMap-element.h"
#include "struct-piccoloDeviceModel.h"
#include "struct-ramDefinitionList-element.h"
#include "struct-routineCallMap-element.h"
#include "struct-routineDeclarationList-element.h"
#include "struct-routineMap-element.h"
#include "struct-routineStackRequirementMap-element.h"
#include "struct-symbolTableForBlockOptimization-element.h"
#include "struct-symbolTableForClusterOrdering-element.h"
#include "struct-symbolTableForOptimizations-element.h"
#include "struct-symbolTableForRelativesResolution-element.h"
#include "syntax-baseline_program.h"
#include "syntax-baseline_syntax.h"
#include "syntax-communs.h"
#include "syntax-midrange_syntax.h"
#include "syntax-pic18_bootloader_syntax.h"
#include "syntax-pic18_start_symbol.h"
#include "syntax-pic18_syntax.h"


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//     L E X I Q U E                                                                                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

#include "strings/unicode_character_cpp.h"
#include "galgas2/scanner_actions.h"

//---------------------------------------------------------------------------------------------------------------------*

cTokenFor_piccolo_5F_lexique::cTokenFor_piccolo_5F_lexique (void) :
mLexicalAttribute_charValue (),
mLexicalAttribute_identifierString (),
mLexicalAttribute_tokenString (),
mLexicalAttribute_uint_33__32_value () {
}

//---------------------------------------------------------------------------------------------------------------------*

C_Lexique_piccolo_5F_lexique::C_Lexique_piccolo_5F_lexique (C_Compiler * inCallerCompiler,
                const C_String & inDependencyFileExtension,
                const C_String & inDependencyFilePath,
                const C_String & inSourceFileName
                COMMA_LOCATION_ARGS) :
C_Lexique (inCallerCompiler, inDependencyFileExtension, inDependencyFilePath, inSourceFileName COMMA_THERE) {
}

//---------------------------------------------------------------------------------------------------------------------*

C_Lexique_piccolo_5F_lexique::C_Lexique_piccolo_5F_lexique (C_Compiler * inCallerCompiler,
                const C_String & inSourceString,
                const C_String & inStringForError
                COMMA_LOCATION_ARGS) :
C_Lexique (inCallerCompiler, inSourceString, inStringForError COMMA_THERE) {
}

//---------------------------------------------------------------------------------------------------------------------*
//                 I N D E X I N G    D I R E C T O R Y                                                                *
//---------------------------------------------------------------------------------------------------------------------*

C_String C_Lexique_piccolo_5F_lexique::indexingDirectory (void) const {
  return "PICCOLO_INDEXES" ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                        Lexical error message list                                                                   *
//---------------------------------------------------------------------------------------------------------------------*

static const utf32 gLexicalMessage_piccolo_5F_lexique_ASCIIcodeTooLargeError [] = {
  TO_UNICODE ('A'),
  TO_UNICODE ('S'),
  TO_UNICODE ('C'),
  TO_UNICODE ('I'),
  TO_UNICODE ('I'),
  TO_UNICODE (' '),
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('>'),
  TO_UNICODE (' '),
  TO_UNICODE ('2'),
  TO_UNICODE ('5'),
  TO_UNICODE ('5'),
  TO_UNICODE (0)
} ;

static const utf32 gLexicalMessage_piccolo_5F_lexique_binNumberTooLarge [] = {
  TO_UNICODE ('b'),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('u'),
  TO_UNICODE ('m'),
  TO_UNICODE ('b'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (' '),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('o'),
  TO_UNICODE (' '),
  TO_UNICODE ('l'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('g'),
  TO_UNICODE ('e'),
  TO_UNICODE (0)
} ;

static const utf32 gLexicalMessage_piccolo_5F_lexique_decimalNumberTooLarge [] = {
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('a'),
  TO_UNICODE ('l'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('u'),
  TO_UNICODE ('m'),
  TO_UNICODE ('b'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (' '),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('o'),
  TO_UNICODE (' '),
  TO_UNICODE ('l'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('g'),
  TO_UNICODE ('e'),
  TO_UNICODE (0)
} ;

static const utf32 gLexicalMessage_piccolo_5F_lexique_hexNumberTooLarge [] = {
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE ('x'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('u'),
  TO_UNICODE ('m'),
  TO_UNICODE ('b'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (' '),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('o'),
  TO_UNICODE (' '),
  TO_UNICODE ('l'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('g'),
  TO_UNICODE ('e'),
  TO_UNICODE (0)
} ;

static const utf32 gLexicalMessage_piccolo_5F_lexique_incorrectCharConstant [] = {
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE (' '),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE ('a'),
  TO_UNICODE ('l'),
  TO_UNICODE (' '),
  TO_UNICODE ('c'),
  TO_UNICODE ('h'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('a'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

static const utf32 gLexicalMessage_piccolo_5F_lexique_incorrectStringEnd [] = {
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('g'),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('o'),
  TO_UNICODE ('e'),
  TO_UNICODE ('s'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('t'),
  TO_UNICODE (' '),
  TO_UNICODE ('e'),
  TO_UNICODE ('n'),
  TO_UNICODE ('d'),
  TO_UNICODE (' '),
  TO_UNICODE ('w'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('\"'),
  TO_UNICODE ('\''),
  TO_UNICODE (0)
} ;

static const utf32 gLexicalMessage_piccolo_5F_lexique_internalError [] = {
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE ('n'),
  TO_UNICODE ('a'),
  TO_UNICODE ('l'),
  TO_UNICODE (' '),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE ('r'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------------------------------------------------*
//          Syntax error messages, for every terminal symbol                                                           *
//---------------------------------------------------------------------------------------------------------------------*

//--- Syntax error message for terminal '$identifier$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_identifier [] = {
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('n'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('f'),
  TO_UNICODE ('i'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$integer$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_integer [] = {
  TO_UNICODE ('a'),
  TO_UNICODE (' '),
  TO_UNICODE ('3'),
  TO_UNICODE ('2'),
  TO_UNICODE ('-'),
  TO_UNICODE ('b'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE (' '),
  TO_UNICODE ('u'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('i'),
  TO_UNICODE ('g'),
  TO_UNICODE ('n'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('u'),
  TO_UNICODE ('m'),
  TO_UNICODE ('b'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$literal_char$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_literal_5F_char [] = {
  TO_UNICODE ('a'),
  TO_UNICODE (' '),
  TO_UNICODE ('c'),
  TO_UNICODE ('h'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('a'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (' '),
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('t'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$literal_string$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_literal_5F_string [] = {
  TO_UNICODE ('a'),
  TO_UNICODE (' '),
  TO_UNICODE ('c'),
  TO_UNICODE ('h'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('a'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (' '),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('g'),
  TO_UNICODE (' '),
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('t'),
  TO_UNICODE (' '),
  TO_UNICODE ('\"'),
  TO_UNICODE ('.'),
  TO_UNICODE ('.'),
  TO_UNICODE ('.'),
  TO_UNICODE ('\"'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$comment$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_comment [] = {
  TO_UNICODE ('a'),
  TO_UNICODE (' '),
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('m'),
  TO_UNICODE ('m'),
  TO_UNICODE ('e'),
  TO_UNICODE ('n'),
  TO_UNICODE ('t'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$commentMark$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_commentMark [] = {
  TO_UNICODE ('a'),
  TO_UNICODE (' '),
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('m'),
  TO_UNICODE ('m'),
  TO_UNICODE ('e'),
  TO_UNICODE ('n'),
  TO_UNICODE ('t'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$bank$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_bank [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('b'),
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('k'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$banksave$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_banksave [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('b'),
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('k'),
  TO_UNICODE ('s'),
  TO_UNICODE ('a'),
  TO_UNICODE ('v'),
  TO_UNICODE ('e'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$banksel$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_banksel [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('b'),
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('k'),
  TO_UNICODE ('s'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$baseline$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_baseline [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('b'),
  TO_UNICODE ('a'),
  TO_UNICODE ('s'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('e'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$block$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_block [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('b'),
  TO_UNICODE ('l'),
  TO_UNICODE ('o'),
  TO_UNICODE ('c'),
  TO_UNICODE ('k'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$bootloader$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_bootloader [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('b'),
  TO_UNICODE ('o'),
  TO_UNICODE ('o'),
  TO_UNICODE ('t'),
  TO_UNICODE ('l'),
  TO_UNICODE ('o'),
  TO_UNICODE ('a'),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$byte$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_byte [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('b'),
  TO_UNICODE ('y'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$case$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_case [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('c'),
  TO_UNICODE ('a'),
  TO_UNICODE ('s'),
  TO_UNICODE ('e'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$checkbank$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_checkbank [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('c'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('k'),
  TO_UNICODE ('b'),
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('k'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$checknobank$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_checknobank [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('c'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('k'),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('b'),
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('k'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$checkpic$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_checkpic [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('c'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('k'),
  TO_UNICODE ('p'),
  TO_UNICODE ('i'),
  TO_UNICODE ('c'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$computed$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_computed [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('m'),
  TO_UNICODE ('p'),
  TO_UNICODE ('u'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$configuration$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_configuration [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE ('f'),
  TO_UNICODE ('i'),
  TO_UNICODE ('g'),
  TO_UNICODE ('u'),
  TO_UNICODE ('r'),
  TO_UNICODE ('a'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$const$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_const [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$contextsave$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_contextsave [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('x'),
  TO_UNICODE ('t'),
  TO_UNICODE ('s'),
  TO_UNICODE ('a'),
  TO_UNICODE ('v'),
  TO_UNICODE ('e'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$data$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_data [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('d'),
  TO_UNICODE ('a'),
  TO_UNICODE ('t'),
  TO_UNICODE ('a'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$do$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_do [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('d'),
  TO_UNICODE ('o'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$end$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_end [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('e'),
  TO_UNICODE ('n'),
  TO_UNICODE ('d'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$else$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_else [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('s'),
  TO_UNICODE ('e'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$elsif$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_elsif [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('s'),
  TO_UNICODE ('i'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$ensures$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_ensures [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('e'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('u'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('s'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$fast$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_fast [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('f'),
  TO_UNICODE ('a'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$forever$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_forever [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('f'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('v'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$if$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_if [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('i'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$implements$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_implements [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('p'),
  TO_UNICODE ('l'),
  TO_UNICODE ('e'),
  TO_UNICODE ('m'),
  TO_UNICODE ('e'),
  TO_UNICODE ('n'),
  TO_UNICODE ('t'),
  TO_UNICODE ('s'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$include$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_include [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('c'),
  TO_UNICODE ('l'),
  TO_UNICODE ('u'),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$inline$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_inline [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('e'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$interrupt$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_interrupt [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('p'),
  TO_UNICODE ('t'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$mark$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_mark [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('m'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('k'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$midrange$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_midrange [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('d'),
  TO_UNICODE ('r'),
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('g'),
  TO_UNICODE ('e'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$nobank$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_nobank [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('b'),
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('k'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$noreturn$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_noreturn [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('t'),
  TO_UNICODE ('u'),
  TO_UNICODE ('r'),
  TO_UNICODE ('n'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$page$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_page [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('p'),
  TO_UNICODE ('a'),
  TO_UNICODE ('g'),
  TO_UNICODE ('e'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$pic18$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_pic_31__38_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('p'),
  TO_UNICODE ('i'),
  TO_UNICODE ('c'),
  TO_UNICODE ('1'),
  TO_UNICODE ('8'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$preserved$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_preserved [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('p'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('s'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE ('v'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$ram$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_ram [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('r'),
  TO_UNICODE ('a'),
  TO_UNICODE ('m'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$requires$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_requires [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('q'),
  TO_UNICODE ('u'),
  TO_UNICODE ('i'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('s'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$rom$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_rom [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('r'),
  TO_UNICODE ('o'),
  TO_UNICODE ('m'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$routine$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_routine [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('r'),
  TO_UNICODE ('o'),
  TO_UNICODE ('u'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('e'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$switch$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_switch [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('s'),
  TO_UNICODE ('w'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('c'),
  TO_UNICODE ('h'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$unused$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_unused [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('u'),
  TO_UNICODE ('n'),
  TO_UNICODE ('u'),
  TO_UNICODE ('s'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$uses$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_uses [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('u'),
  TO_UNICODE ('s'),
  TO_UNICODE ('e'),
  TO_UNICODE ('s'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$w$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_w [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('w'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$while$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_while [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('w'),
  TO_UNICODE ('h'),
  TO_UNICODE ('i'),
  TO_UNICODE ('l'),
  TO_UNICODE ('e'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$addlw$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_addlw [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('a'),
  TO_UNICODE ('d'),
  TO_UNICODE ('d'),
  TO_UNICODE ('l'),
  TO_UNICODE ('w'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$addwf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_addwf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('a'),
  TO_UNICODE ('d'),
  TO_UNICODE ('d'),
  TO_UNICODE ('w'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$addwfc$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_addwfc [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('a'),
  TO_UNICODE ('d'),
  TO_UNICODE ('d'),
  TO_UNICODE ('w'),
  TO_UNICODE ('f'),
  TO_UNICODE ('c'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$andlw$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_andlw [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('d'),
  TO_UNICODE ('l'),
  TO_UNICODE ('w'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$andwf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_andwf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('d'),
  TO_UNICODE ('w'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$bc$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_bc [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('b'),
  TO_UNICODE ('c'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$bcf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_bcf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('b'),
  TO_UNICODE ('c'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$bn$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_bn [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('b'),
  TO_UNICODE ('n'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$bnc$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_bnc [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('b'),
  TO_UNICODE ('n'),
  TO_UNICODE ('c'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$bnn$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_bnn [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('b'),
  TO_UNICODE ('n'),
  TO_UNICODE ('n'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$bov$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_bov [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('b'),
  TO_UNICODE ('o'),
  TO_UNICODE ('v'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$bnov$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_bnov [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('b'),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('v'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$bnz$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_bnz [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('b'),
  TO_UNICODE ('n'),
  TO_UNICODE ('z'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$bsf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_bsf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('b'),
  TO_UNICODE ('s'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$bra$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_bra [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('b'),
  TO_UNICODE ('r'),
  TO_UNICODE ('a'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$btg$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_btg [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('b'),
  TO_UNICODE ('t'),
  TO_UNICODE ('g'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$bz$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_bz [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('b'),
  TO_UNICODE ('z'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$call$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_call [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('c'),
  TO_UNICODE ('a'),
  TO_UNICODE ('l'),
  TO_UNICODE ('l'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$clrf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_clrf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('c'),
  TO_UNICODE ('l'),
  TO_UNICODE ('r'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$clrw$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_clrw [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('c'),
  TO_UNICODE ('l'),
  TO_UNICODE ('r'),
  TO_UNICODE ('w'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$clrwdt$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_clrwdt [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('c'),
  TO_UNICODE ('l'),
  TO_UNICODE ('r'),
  TO_UNICODE ('w'),
  TO_UNICODE ('d'),
  TO_UNICODE ('t'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$comf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_comf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('m'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$daw$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_daw [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('d'),
  TO_UNICODE ('a'),
  TO_UNICODE ('w'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$decf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_decf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$incf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_incf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('c'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$iorlw$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_iorlw [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('l'),
  TO_UNICODE ('w'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$iorwf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_iorwf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('w'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$fnop$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_fnop [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('f'),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('p'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$goto$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_goto [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('g'),
  TO_UNICODE ('o'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$jsr$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_jsr [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('j'),
  TO_UNICODE ('s'),
  TO_UNICODE ('r'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$jump$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_jump [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('j'),
  TO_UNICODE ('u'),
  TO_UNICODE ('m'),
  TO_UNICODE ('p'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$lfsr$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_lfsr [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('l'),
  TO_UNICODE ('f'),
  TO_UNICODE ('s'),
  TO_UNICODE ('r'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$ldataptr$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_ldataptr [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('l'),
  TO_UNICODE ('d'),
  TO_UNICODE ('a'),
  TO_UNICODE ('t'),
  TO_UNICODE ('a'),
  TO_UNICODE ('p'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$ltblptr$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_ltblptr [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('l'),
  TO_UNICODE ('t'),
  TO_UNICODE ('b'),
  TO_UNICODE ('l'),
  TO_UNICODE ('p'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$mnop$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_mnop [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('m'),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('p'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$movf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_movf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('m'),
  TO_UNICODE ('o'),
  TO_UNICODE ('v'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$movff$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_movff [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('m'),
  TO_UNICODE ('o'),
  TO_UNICODE ('v'),
  TO_UNICODE ('f'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$movlw$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_movlw [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('m'),
  TO_UNICODE ('o'),
  TO_UNICODE ('v'),
  TO_UNICODE ('l'),
  TO_UNICODE ('w'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$movwf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_movwf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('m'),
  TO_UNICODE ('o'),
  TO_UNICODE ('v'),
  TO_UNICODE ('w'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$mullw$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_mullw [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('m'),
  TO_UNICODE ('u'),
  TO_UNICODE ('l'),
  TO_UNICODE ('l'),
  TO_UNICODE ('w'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$mulwf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_mulwf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('m'),
  TO_UNICODE ('u'),
  TO_UNICODE ('l'),
  TO_UNICODE ('w'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$negf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_negf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('n'),
  TO_UNICODE ('e'),
  TO_UNICODE ('g'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$nop$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_nop [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('p'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$pop$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_pop [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('p'),
  TO_UNICODE ('o'),
  TO_UNICODE ('p'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$option$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_option [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('o'),
  TO_UNICODE ('p'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$push$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_push [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('p'),
  TO_UNICODE ('u'),
  TO_UNICODE ('s'),
  TO_UNICODE ('h'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$rcall$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_rcall [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('r'),
  TO_UNICODE ('c'),
  TO_UNICODE ('a'),
  TO_UNICODE ('l'),
  TO_UNICODE ('l'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$reset$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_reset [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('s'),
  TO_UNICODE ('e'),
  TO_UNICODE ('t'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$retlw$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_retlw [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('t'),
  TO_UNICODE ('l'),
  TO_UNICODE ('w'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$rlcf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_rlcf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('r'),
  TO_UNICODE ('l'),
  TO_UNICODE ('c'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$rlf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_rlf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('r'),
  TO_UNICODE ('l'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$rlncf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_rlncf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('r'),
  TO_UNICODE ('l'),
  TO_UNICODE ('n'),
  TO_UNICODE ('c'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$rrcf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_rrcf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('r'),
  TO_UNICODE ('r'),
  TO_UNICODE ('c'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$rrf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_rrf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('r'),
  TO_UNICODE ('r'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$rrncf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_rrncf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('r'),
  TO_UNICODE ('r'),
  TO_UNICODE ('n'),
  TO_UNICODE ('c'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$setf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_setf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('s'),
  TO_UNICODE ('e'),
  TO_UNICODE ('t'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$sleep$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_sleep [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('s'),
  TO_UNICODE ('l'),
  TO_UNICODE ('e'),
  TO_UNICODE ('e'),
  TO_UNICODE ('p'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$subfwb$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_subfwb [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('s'),
  TO_UNICODE ('u'),
  TO_UNICODE ('b'),
  TO_UNICODE ('f'),
  TO_UNICODE ('w'),
  TO_UNICODE ('b'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$sublw$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_sublw [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('s'),
  TO_UNICODE ('u'),
  TO_UNICODE ('b'),
  TO_UNICODE ('l'),
  TO_UNICODE ('w'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$subwf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_subwf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('s'),
  TO_UNICODE ('u'),
  TO_UNICODE ('b'),
  TO_UNICODE ('w'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$subwfb$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_subwfb [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('s'),
  TO_UNICODE ('u'),
  TO_UNICODE ('b'),
  TO_UNICODE ('w'),
  TO_UNICODE ('f'),
  TO_UNICODE ('b'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$swapf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_swapf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('s'),
  TO_UNICODE ('w'),
  TO_UNICODE ('a'),
  TO_UNICODE ('p'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$tblrd$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_tblrd [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('t'),
  TO_UNICODE ('b'),
  TO_UNICODE ('l'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$tblwt$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_tblwt [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('t'),
  TO_UNICODE ('b'),
  TO_UNICODE ('l'),
  TO_UNICODE ('w'),
  TO_UNICODE ('t'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$tris$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_tris [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('i'),
  TO_UNICODE ('s'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$xorlw$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_xorlw [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('x'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('l'),
  TO_UNICODE ('w'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$xorwf$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique_xorwf [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('x'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('w'),
  TO_UNICODE ('f'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$*$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__2A_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('*'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$*+$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__2A__2B_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('*'),
  TO_UNICODE ('+'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$,$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__2C_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE (','),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$!=$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__21__3D_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('!'),
  TO_UNICODE ('='),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$<=$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__3C__3D_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('<'),
  TO_UNICODE ('='),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$>=$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__3E__3D_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('>'),
  TO_UNICODE ('='),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$*-$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__2A__2D_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('*'),
  TO_UNICODE ('-'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$+*$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__2B__2A_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('+'),
  TO_UNICODE ('*'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$;$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__3B_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE (';'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$:$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__3A_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE (':'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$==$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__3D__3D_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('='),
  TO_UNICODE ('='),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$<$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__3C_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('<'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$>$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__3E_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('>'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$[$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__5B_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('['),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$]$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__5D_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE (']'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$.$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__2E_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('.'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$!$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__21_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('!'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$&$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__26_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('&'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$|$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__7C_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('|'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$=$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__3D_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('='),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '${$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__7B_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('{'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$}$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__7D_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('}'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$($' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__28_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('('),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$)$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__29_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE (')'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$/$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__2F_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('/'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$-$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__2D_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('-'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$+$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__2B_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('+'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$?$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__3F_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('\?'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$^$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__5E_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('^'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$<<$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__3C__3C_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('<'),
  TO_UNICODE ('<'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$>>$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__3E__3E_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('>'),
  TO_UNICODE ('>'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$~$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__7E_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('~'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$%$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__25_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('%'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$@$' :
static const utf32 gSyntaxErrorMessage_piccolo_5F_lexique__40_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('@'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                getMessageForTerminal                                                                                *
//---------------------------------------------------------------------------------------------------------------------*

C_String C_Lexique_piccolo_5F_lexique::getMessageForTerminal (const int16_t inTerminalIndex) const {
  static const utf32 * syntaxErrorMessageArray [152] = {kEndOfSourceLexicalErrorMessage,
    gSyntaxErrorMessage_piccolo_5F_lexique_identifier,
    gSyntaxErrorMessage_piccolo_5F_lexique_integer,
    gSyntaxErrorMessage_piccolo_5F_lexique_literal_5F_char,
    gSyntaxErrorMessage_piccolo_5F_lexique_literal_5F_string,
    gSyntaxErrorMessage_piccolo_5F_lexique_comment,
    gSyntaxErrorMessage_piccolo_5F_lexique_commentMark,
    gSyntaxErrorMessage_piccolo_5F_lexique_bank,
    gSyntaxErrorMessage_piccolo_5F_lexique_banksave,
    gSyntaxErrorMessage_piccolo_5F_lexique_banksel,
    gSyntaxErrorMessage_piccolo_5F_lexique_baseline,
    gSyntaxErrorMessage_piccolo_5F_lexique_block,
    gSyntaxErrorMessage_piccolo_5F_lexique_bootloader,
    gSyntaxErrorMessage_piccolo_5F_lexique_byte,
    gSyntaxErrorMessage_piccolo_5F_lexique_case,
    gSyntaxErrorMessage_piccolo_5F_lexique_checkbank,
    gSyntaxErrorMessage_piccolo_5F_lexique_checknobank,
    gSyntaxErrorMessage_piccolo_5F_lexique_checkpic,
    gSyntaxErrorMessage_piccolo_5F_lexique_computed,
    gSyntaxErrorMessage_piccolo_5F_lexique_configuration,
    gSyntaxErrorMessage_piccolo_5F_lexique_const,
    gSyntaxErrorMessage_piccolo_5F_lexique_contextsave,
    gSyntaxErrorMessage_piccolo_5F_lexique_data,
    gSyntaxErrorMessage_piccolo_5F_lexique_do,
    gSyntaxErrorMessage_piccolo_5F_lexique_end,
    gSyntaxErrorMessage_piccolo_5F_lexique_else,
    gSyntaxErrorMessage_piccolo_5F_lexique_elsif,
    gSyntaxErrorMessage_piccolo_5F_lexique_ensures,
    gSyntaxErrorMessage_piccolo_5F_lexique_fast,
    gSyntaxErrorMessage_piccolo_5F_lexique_forever,
    gSyntaxErrorMessage_piccolo_5F_lexique_if,
    gSyntaxErrorMessage_piccolo_5F_lexique_implements,
    gSyntaxErrorMessage_piccolo_5F_lexique_include,
    gSyntaxErrorMessage_piccolo_5F_lexique_inline,
    gSyntaxErrorMessage_piccolo_5F_lexique_interrupt,
    gSyntaxErrorMessage_piccolo_5F_lexique_mark,
    gSyntaxErrorMessage_piccolo_5F_lexique_midrange,
    gSyntaxErrorMessage_piccolo_5F_lexique_nobank,
    gSyntaxErrorMessage_piccolo_5F_lexique_noreturn,
    gSyntaxErrorMessage_piccolo_5F_lexique_page,
    gSyntaxErrorMessage_piccolo_5F_lexique_pic_31__38_,
    gSyntaxErrorMessage_piccolo_5F_lexique_preserved,
    gSyntaxErrorMessage_piccolo_5F_lexique_ram,
    gSyntaxErrorMessage_piccolo_5F_lexique_requires,
    gSyntaxErrorMessage_piccolo_5F_lexique_rom,
    gSyntaxErrorMessage_piccolo_5F_lexique_routine,
    gSyntaxErrorMessage_piccolo_5F_lexique_switch,
    gSyntaxErrorMessage_piccolo_5F_lexique_unused,
    gSyntaxErrorMessage_piccolo_5F_lexique_uses,
    gSyntaxErrorMessage_piccolo_5F_lexique_w,
    gSyntaxErrorMessage_piccolo_5F_lexique_while,
    gSyntaxErrorMessage_piccolo_5F_lexique_addlw,
    gSyntaxErrorMessage_piccolo_5F_lexique_addwf,
    gSyntaxErrorMessage_piccolo_5F_lexique_addwfc,
    gSyntaxErrorMessage_piccolo_5F_lexique_andlw,
    gSyntaxErrorMessage_piccolo_5F_lexique_andwf,
    gSyntaxErrorMessage_piccolo_5F_lexique_bc,
    gSyntaxErrorMessage_piccolo_5F_lexique_bcf,
    gSyntaxErrorMessage_piccolo_5F_lexique_bn,
    gSyntaxErrorMessage_piccolo_5F_lexique_bnc,
    gSyntaxErrorMessage_piccolo_5F_lexique_bnn,
    gSyntaxErrorMessage_piccolo_5F_lexique_bov,
    gSyntaxErrorMessage_piccolo_5F_lexique_bnov,
    gSyntaxErrorMessage_piccolo_5F_lexique_bnz,
    gSyntaxErrorMessage_piccolo_5F_lexique_bsf,
    gSyntaxErrorMessage_piccolo_5F_lexique_bra,
    gSyntaxErrorMessage_piccolo_5F_lexique_btg,
    gSyntaxErrorMessage_piccolo_5F_lexique_bz,
    gSyntaxErrorMessage_piccolo_5F_lexique_call,
    gSyntaxErrorMessage_piccolo_5F_lexique_clrf,
    gSyntaxErrorMessage_piccolo_5F_lexique_clrw,
    gSyntaxErrorMessage_piccolo_5F_lexique_clrwdt,
    gSyntaxErrorMessage_piccolo_5F_lexique_comf,
    gSyntaxErrorMessage_piccolo_5F_lexique_daw,
    gSyntaxErrorMessage_piccolo_5F_lexique_decf,
    gSyntaxErrorMessage_piccolo_5F_lexique_incf,
    gSyntaxErrorMessage_piccolo_5F_lexique_iorlw,
    gSyntaxErrorMessage_piccolo_5F_lexique_iorwf,
    gSyntaxErrorMessage_piccolo_5F_lexique_fnop,
    gSyntaxErrorMessage_piccolo_5F_lexique_goto,
    gSyntaxErrorMessage_piccolo_5F_lexique_jsr,
    gSyntaxErrorMessage_piccolo_5F_lexique_jump,
    gSyntaxErrorMessage_piccolo_5F_lexique_lfsr,
    gSyntaxErrorMessage_piccolo_5F_lexique_ldataptr,
    gSyntaxErrorMessage_piccolo_5F_lexique_ltblptr,
    gSyntaxErrorMessage_piccolo_5F_lexique_mnop,
    gSyntaxErrorMessage_piccolo_5F_lexique_movf,
    gSyntaxErrorMessage_piccolo_5F_lexique_movff,
    gSyntaxErrorMessage_piccolo_5F_lexique_movlw,
    gSyntaxErrorMessage_piccolo_5F_lexique_movwf,
    gSyntaxErrorMessage_piccolo_5F_lexique_mullw,
    gSyntaxErrorMessage_piccolo_5F_lexique_mulwf,
    gSyntaxErrorMessage_piccolo_5F_lexique_negf,
    gSyntaxErrorMessage_piccolo_5F_lexique_nop,
    gSyntaxErrorMessage_piccolo_5F_lexique_pop,
    gSyntaxErrorMessage_piccolo_5F_lexique_option,
    gSyntaxErrorMessage_piccolo_5F_lexique_push,
    gSyntaxErrorMessage_piccolo_5F_lexique_rcall,
    gSyntaxErrorMessage_piccolo_5F_lexique_reset,
    gSyntaxErrorMessage_piccolo_5F_lexique_retlw,
    gSyntaxErrorMessage_piccolo_5F_lexique_rlcf,
    gSyntaxErrorMessage_piccolo_5F_lexique_rlf,
    gSyntaxErrorMessage_piccolo_5F_lexique_rlncf,
    gSyntaxErrorMessage_piccolo_5F_lexique_rrcf,
    gSyntaxErrorMessage_piccolo_5F_lexique_rrf,
    gSyntaxErrorMessage_piccolo_5F_lexique_rrncf,
    gSyntaxErrorMessage_piccolo_5F_lexique_setf,
    gSyntaxErrorMessage_piccolo_5F_lexique_sleep,
    gSyntaxErrorMessage_piccolo_5F_lexique_subfwb,
    gSyntaxErrorMessage_piccolo_5F_lexique_sublw,
    gSyntaxErrorMessage_piccolo_5F_lexique_subwf,
    gSyntaxErrorMessage_piccolo_5F_lexique_subwfb,
    gSyntaxErrorMessage_piccolo_5F_lexique_swapf,
    gSyntaxErrorMessage_piccolo_5F_lexique_tblrd,
    gSyntaxErrorMessage_piccolo_5F_lexique_tblwt,
    gSyntaxErrorMessage_piccolo_5F_lexique_tris,
    gSyntaxErrorMessage_piccolo_5F_lexique_xorlw,
    gSyntaxErrorMessage_piccolo_5F_lexique_xorwf,
    gSyntaxErrorMessage_piccolo_5F_lexique__2A_,
    gSyntaxErrorMessage_piccolo_5F_lexique__2A__2B_,
    gSyntaxErrorMessage_piccolo_5F_lexique__2C_,
    gSyntaxErrorMessage_piccolo_5F_lexique__21__3D_,
    gSyntaxErrorMessage_piccolo_5F_lexique__3C__3D_,
    gSyntaxErrorMessage_piccolo_5F_lexique__3E__3D_,
    gSyntaxErrorMessage_piccolo_5F_lexique__2A__2D_,
    gSyntaxErrorMessage_piccolo_5F_lexique__2B__2A_,
    gSyntaxErrorMessage_piccolo_5F_lexique__3B_,
    gSyntaxErrorMessage_piccolo_5F_lexique__3A_,
    gSyntaxErrorMessage_piccolo_5F_lexique__3D__3D_,
    gSyntaxErrorMessage_piccolo_5F_lexique__3C_,
    gSyntaxErrorMessage_piccolo_5F_lexique__3E_,
    gSyntaxErrorMessage_piccolo_5F_lexique__5B_,
    gSyntaxErrorMessage_piccolo_5F_lexique__5D_,
    gSyntaxErrorMessage_piccolo_5F_lexique__2E_,
    gSyntaxErrorMessage_piccolo_5F_lexique__21_,
    gSyntaxErrorMessage_piccolo_5F_lexique__26_,
    gSyntaxErrorMessage_piccolo_5F_lexique__7C_,
    gSyntaxErrorMessage_piccolo_5F_lexique__3D_,
    gSyntaxErrorMessage_piccolo_5F_lexique__7B_,
    gSyntaxErrorMessage_piccolo_5F_lexique__7D_,
    gSyntaxErrorMessage_piccolo_5F_lexique__28_,
    gSyntaxErrorMessage_piccolo_5F_lexique__29_,
    gSyntaxErrorMessage_piccolo_5F_lexique__2F_,
    gSyntaxErrorMessage_piccolo_5F_lexique__2D_,
    gSyntaxErrorMessage_piccolo_5F_lexique__2B_,
    gSyntaxErrorMessage_piccolo_5F_lexique__3F_,
    gSyntaxErrorMessage_piccolo_5F_lexique__5E_,
    gSyntaxErrorMessage_piccolo_5F_lexique__3C__3C_,
    gSyntaxErrorMessage_piccolo_5F_lexique__3E__3E_,
    gSyntaxErrorMessage_piccolo_5F_lexique__7E_,
    gSyntaxErrorMessage_piccolo_5F_lexique__25_,
    gSyntaxErrorMessage_piccolo_5F_lexique__40_} ;
  return syntaxErrorMessageArray [inTerminalIndex] ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                      U N I C O D E    S T R I N G S                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

//--- Unicode string for '$_21_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__21_ [] = {
  TO_UNICODE ('!'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_21__3D_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__21__3D_ [] = {
  TO_UNICODE ('!'),
  TO_UNICODE ('='),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_25_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__25_ [] = {
  TO_UNICODE ('%'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_26_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__26_ [] = {
  TO_UNICODE ('&'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_28_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__28_ [] = {
  TO_UNICODE ('('),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_29_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__29_ [] = {
  TO_UNICODE (')'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_2A_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__2A_ [] = {
  TO_UNICODE ('*'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_2A__2B_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__2A__2B_ [] = {
  TO_UNICODE ('*'),
  TO_UNICODE ('+'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_2A__2D_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__2A__2D_ [] = {
  TO_UNICODE ('*'),
  TO_UNICODE ('-'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_2B_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__2B_ [] = {
  TO_UNICODE ('+'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_2B__2A_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__2B__2A_ [] = {
  TO_UNICODE ('+'),
  TO_UNICODE ('*'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_2C_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__2C_ [] = {
  TO_UNICODE (','),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_2D_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__2D_ [] = {
  TO_UNICODE ('-'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_2E_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__2E_ [] = {
  TO_UNICODE ('.'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_2F_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__2F_ [] = {
  TO_UNICODE ('/'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_30_b$'
static const utf32 kUnicodeString_piccolo_5F_lexique__30_b [] = {
  TO_UNICODE ('0'),
  TO_UNICODE ('b'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_30_x$'
static const utf32 kUnicodeString_piccolo_5F_lexique__30_x [] = {
  TO_UNICODE ('0'),
  TO_UNICODE ('x'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_3A_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__3A_ [] = {
  TO_UNICODE (':'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_3B_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__3B_ [] = {
  TO_UNICODE (';'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_3C_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__3C_ [] = {
  TO_UNICODE ('<'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_3C__3C_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__3C__3C_ [] = {
  TO_UNICODE ('<'),
  TO_UNICODE ('<'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_3C__3D_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__3C__3D_ [] = {
  TO_UNICODE ('<'),
  TO_UNICODE ('='),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_3D_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__3D_ [] = {
  TO_UNICODE ('='),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_3D__3D_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__3D__3D_ [] = {
  TO_UNICODE ('='),
  TO_UNICODE ('='),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_3E_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__3E_ [] = {
  TO_UNICODE ('>'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_3E__3D_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__3E__3D_ [] = {
  TO_UNICODE ('>'),
  TO_UNICODE ('='),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_3E__3E_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__3E__3E_ [] = {
  TO_UNICODE ('>'),
  TO_UNICODE ('>'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_3F_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__3F_ [] = {
  TO_UNICODE ('\?'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_40_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__40_ [] = {
  TO_UNICODE ('@'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_5B_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__5B_ [] = {
  TO_UNICODE ('['),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_5D_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__5D_ [] = {
  TO_UNICODE (']'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_5E_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__5E_ [] = {
  TO_UNICODE ('^'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$addlw$'
static const utf32 kUnicodeString_piccolo_5F_lexique_addlw [] = {
  TO_UNICODE ('a'),
  TO_UNICODE ('d'),
  TO_UNICODE ('d'),
  TO_UNICODE ('l'),
  TO_UNICODE ('w'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$addwf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_addwf [] = {
  TO_UNICODE ('a'),
  TO_UNICODE ('d'),
  TO_UNICODE ('d'),
  TO_UNICODE ('w'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$addwfc$'
static const utf32 kUnicodeString_piccolo_5F_lexique_addwfc [] = {
  TO_UNICODE ('a'),
  TO_UNICODE ('d'),
  TO_UNICODE ('d'),
  TO_UNICODE ('w'),
  TO_UNICODE ('f'),
  TO_UNICODE ('c'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$andlw$'
static const utf32 kUnicodeString_piccolo_5F_lexique_andlw [] = {
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('d'),
  TO_UNICODE ('l'),
  TO_UNICODE ('w'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$andwf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_andwf [] = {
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('d'),
  TO_UNICODE ('w'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$bank$'
static const utf32 kUnicodeString_piccolo_5F_lexique_bank [] = {
  TO_UNICODE ('b'),
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('k'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$banksave$'
static const utf32 kUnicodeString_piccolo_5F_lexique_banksave [] = {
  TO_UNICODE ('b'),
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('k'),
  TO_UNICODE ('s'),
  TO_UNICODE ('a'),
  TO_UNICODE ('v'),
  TO_UNICODE ('e'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$banksel$'
static const utf32 kUnicodeString_piccolo_5F_lexique_banksel [] = {
  TO_UNICODE ('b'),
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('k'),
  TO_UNICODE ('s'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$baseline$'
static const utf32 kUnicodeString_piccolo_5F_lexique_baseline [] = {
  TO_UNICODE ('b'),
  TO_UNICODE ('a'),
  TO_UNICODE ('s'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('e'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$bc$'
static const utf32 kUnicodeString_piccolo_5F_lexique_bc [] = {
  TO_UNICODE ('b'),
  TO_UNICODE ('c'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$bcf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_bcf [] = {
  TO_UNICODE ('b'),
  TO_UNICODE ('c'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$block$'
static const utf32 kUnicodeString_piccolo_5F_lexique_block [] = {
  TO_UNICODE ('b'),
  TO_UNICODE ('l'),
  TO_UNICODE ('o'),
  TO_UNICODE ('c'),
  TO_UNICODE ('k'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$bn$'
static const utf32 kUnicodeString_piccolo_5F_lexique_bn [] = {
  TO_UNICODE ('b'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$bnc$'
static const utf32 kUnicodeString_piccolo_5F_lexique_bnc [] = {
  TO_UNICODE ('b'),
  TO_UNICODE ('n'),
  TO_UNICODE ('c'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$bnn$'
static const utf32 kUnicodeString_piccolo_5F_lexique_bnn [] = {
  TO_UNICODE ('b'),
  TO_UNICODE ('n'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$bnov$'
static const utf32 kUnicodeString_piccolo_5F_lexique_bnov [] = {
  TO_UNICODE ('b'),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('v'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$bnz$'
static const utf32 kUnicodeString_piccolo_5F_lexique_bnz [] = {
  TO_UNICODE ('b'),
  TO_UNICODE ('n'),
  TO_UNICODE ('z'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$bootloader$'
static const utf32 kUnicodeString_piccolo_5F_lexique_bootloader [] = {
  TO_UNICODE ('b'),
  TO_UNICODE ('o'),
  TO_UNICODE ('o'),
  TO_UNICODE ('t'),
  TO_UNICODE ('l'),
  TO_UNICODE ('o'),
  TO_UNICODE ('a'),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$bov$'
static const utf32 kUnicodeString_piccolo_5F_lexique_bov [] = {
  TO_UNICODE ('b'),
  TO_UNICODE ('o'),
  TO_UNICODE ('v'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$bra$'
static const utf32 kUnicodeString_piccolo_5F_lexique_bra [] = {
  TO_UNICODE ('b'),
  TO_UNICODE ('r'),
  TO_UNICODE ('a'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$bsf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_bsf [] = {
  TO_UNICODE ('b'),
  TO_UNICODE ('s'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$btg$'
static const utf32 kUnicodeString_piccolo_5F_lexique_btg [] = {
  TO_UNICODE ('b'),
  TO_UNICODE ('t'),
  TO_UNICODE ('g'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$byte$'
static const utf32 kUnicodeString_piccolo_5F_lexique_byte [] = {
  TO_UNICODE ('b'),
  TO_UNICODE ('y'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$bz$'
static const utf32 kUnicodeString_piccolo_5F_lexique_bz [] = {
  TO_UNICODE ('b'),
  TO_UNICODE ('z'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$call$'
static const utf32 kUnicodeString_piccolo_5F_lexique_call [] = {
  TO_UNICODE ('c'),
  TO_UNICODE ('a'),
  TO_UNICODE ('l'),
  TO_UNICODE ('l'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$case$'
static const utf32 kUnicodeString_piccolo_5F_lexique_case [] = {
  TO_UNICODE ('c'),
  TO_UNICODE ('a'),
  TO_UNICODE ('s'),
  TO_UNICODE ('e'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$checkbank$'
static const utf32 kUnicodeString_piccolo_5F_lexique_checkbank [] = {
  TO_UNICODE ('c'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('k'),
  TO_UNICODE ('b'),
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('k'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$checknobank$'
static const utf32 kUnicodeString_piccolo_5F_lexique_checknobank [] = {
  TO_UNICODE ('c'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('k'),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('b'),
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('k'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$checkpic$'
static const utf32 kUnicodeString_piccolo_5F_lexique_checkpic [] = {
  TO_UNICODE ('c'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('k'),
  TO_UNICODE ('p'),
  TO_UNICODE ('i'),
  TO_UNICODE ('c'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$clrf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_clrf [] = {
  TO_UNICODE ('c'),
  TO_UNICODE ('l'),
  TO_UNICODE ('r'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$clrw$'
static const utf32 kUnicodeString_piccolo_5F_lexique_clrw [] = {
  TO_UNICODE ('c'),
  TO_UNICODE ('l'),
  TO_UNICODE ('r'),
  TO_UNICODE ('w'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$clrwdt$'
static const utf32 kUnicodeString_piccolo_5F_lexique_clrwdt [] = {
  TO_UNICODE ('c'),
  TO_UNICODE ('l'),
  TO_UNICODE ('r'),
  TO_UNICODE ('w'),
  TO_UNICODE ('d'),
  TO_UNICODE ('t'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$comf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_comf [] = {
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('m'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$computed$'
static const utf32 kUnicodeString_piccolo_5F_lexique_computed [] = {
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('m'),
  TO_UNICODE ('p'),
  TO_UNICODE ('u'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$configuration$'
static const utf32 kUnicodeString_piccolo_5F_lexique_configuration [] = {
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE ('f'),
  TO_UNICODE ('i'),
  TO_UNICODE ('g'),
  TO_UNICODE ('u'),
  TO_UNICODE ('r'),
  TO_UNICODE ('a'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$const$'
static const utf32 kUnicodeString_piccolo_5F_lexique_const [] = {
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$contextsave$'
static const utf32 kUnicodeString_piccolo_5F_lexique_contextsave [] = {
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('x'),
  TO_UNICODE ('t'),
  TO_UNICODE ('s'),
  TO_UNICODE ('a'),
  TO_UNICODE ('v'),
  TO_UNICODE ('e'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$data$'
static const utf32 kUnicodeString_piccolo_5F_lexique_data [] = {
  TO_UNICODE ('d'),
  TO_UNICODE ('a'),
  TO_UNICODE ('t'),
  TO_UNICODE ('a'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$daw$'
static const utf32 kUnicodeString_piccolo_5F_lexique_daw [] = {
  TO_UNICODE ('d'),
  TO_UNICODE ('a'),
  TO_UNICODE ('w'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$decf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_decf [] = {
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$do$'
static const utf32 kUnicodeString_piccolo_5F_lexique_do [] = {
  TO_UNICODE ('d'),
  TO_UNICODE ('o'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$else$'
static const utf32 kUnicodeString_piccolo_5F_lexique_else [] = {
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('s'),
  TO_UNICODE ('e'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$elsif$'
static const utf32 kUnicodeString_piccolo_5F_lexique_elsif [] = {
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('s'),
  TO_UNICODE ('i'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$end$'
static const utf32 kUnicodeString_piccolo_5F_lexique_end [] = {
  TO_UNICODE ('e'),
  TO_UNICODE ('n'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$ensures$'
static const utf32 kUnicodeString_piccolo_5F_lexique_ensures [] = {
  TO_UNICODE ('e'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('u'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('s'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$fast$'
static const utf32 kUnicodeString_piccolo_5F_lexique_fast [] = {
  TO_UNICODE ('f'),
  TO_UNICODE ('a'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$fnop$'
static const utf32 kUnicodeString_piccolo_5F_lexique_fnop [] = {
  TO_UNICODE ('f'),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('p'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$forever$'
static const utf32 kUnicodeString_piccolo_5F_lexique_forever [] = {
  TO_UNICODE ('f'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('v'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$goto$'
static const utf32 kUnicodeString_piccolo_5F_lexique_goto [] = {
  TO_UNICODE ('g'),
  TO_UNICODE ('o'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$if$'
static const utf32 kUnicodeString_piccolo_5F_lexique_if [] = {
  TO_UNICODE ('i'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$implements$'
static const utf32 kUnicodeString_piccolo_5F_lexique_implements [] = {
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('p'),
  TO_UNICODE ('l'),
  TO_UNICODE ('e'),
  TO_UNICODE ('m'),
  TO_UNICODE ('e'),
  TO_UNICODE ('n'),
  TO_UNICODE ('t'),
  TO_UNICODE ('s'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$incf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_incf [] = {
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('c'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$include$'
static const utf32 kUnicodeString_piccolo_5F_lexique_include [] = {
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('c'),
  TO_UNICODE ('l'),
  TO_UNICODE ('u'),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$inline$'
static const utf32 kUnicodeString_piccolo_5F_lexique_inline [] = {
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('e'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$interrupt$'
static const utf32 kUnicodeString_piccolo_5F_lexique_interrupt [] = {
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE ('r'),
  TO_UNICODE ('u'),
  TO_UNICODE ('p'),
  TO_UNICODE ('t'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$iorlw$'
static const utf32 kUnicodeString_piccolo_5F_lexique_iorlw [] = {
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('l'),
  TO_UNICODE ('w'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$iorwf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_iorwf [] = {
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('w'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$jsr$'
static const utf32 kUnicodeString_piccolo_5F_lexique_jsr [] = {
  TO_UNICODE ('j'),
  TO_UNICODE ('s'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$jump$'
static const utf32 kUnicodeString_piccolo_5F_lexique_jump [] = {
  TO_UNICODE ('j'),
  TO_UNICODE ('u'),
  TO_UNICODE ('m'),
  TO_UNICODE ('p'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$ldataptr$'
static const utf32 kUnicodeString_piccolo_5F_lexique_ldataptr [] = {
  TO_UNICODE ('l'),
  TO_UNICODE ('d'),
  TO_UNICODE ('a'),
  TO_UNICODE ('t'),
  TO_UNICODE ('a'),
  TO_UNICODE ('p'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$lfsr$'
static const utf32 kUnicodeString_piccolo_5F_lexique_lfsr [] = {
  TO_UNICODE ('l'),
  TO_UNICODE ('f'),
  TO_UNICODE ('s'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$ltblptr$'
static const utf32 kUnicodeString_piccolo_5F_lexique_ltblptr [] = {
  TO_UNICODE ('l'),
  TO_UNICODE ('t'),
  TO_UNICODE ('b'),
  TO_UNICODE ('l'),
  TO_UNICODE ('p'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$mark$'
static const utf32 kUnicodeString_piccolo_5F_lexique_mark [] = {
  TO_UNICODE ('m'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('k'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$midrange$'
static const utf32 kUnicodeString_piccolo_5F_lexique_midrange [] = {
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('d'),
  TO_UNICODE ('r'),
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('g'),
  TO_UNICODE ('e'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$mnop$'
static const utf32 kUnicodeString_piccolo_5F_lexique_mnop [] = {
  TO_UNICODE ('m'),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('p'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$movf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_movf [] = {
  TO_UNICODE ('m'),
  TO_UNICODE ('o'),
  TO_UNICODE ('v'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$movff$'
static const utf32 kUnicodeString_piccolo_5F_lexique_movff [] = {
  TO_UNICODE ('m'),
  TO_UNICODE ('o'),
  TO_UNICODE ('v'),
  TO_UNICODE ('f'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$movlw$'
static const utf32 kUnicodeString_piccolo_5F_lexique_movlw [] = {
  TO_UNICODE ('m'),
  TO_UNICODE ('o'),
  TO_UNICODE ('v'),
  TO_UNICODE ('l'),
  TO_UNICODE ('w'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$movwf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_movwf [] = {
  TO_UNICODE ('m'),
  TO_UNICODE ('o'),
  TO_UNICODE ('v'),
  TO_UNICODE ('w'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$mullw$'
static const utf32 kUnicodeString_piccolo_5F_lexique_mullw [] = {
  TO_UNICODE ('m'),
  TO_UNICODE ('u'),
  TO_UNICODE ('l'),
  TO_UNICODE ('l'),
  TO_UNICODE ('w'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$mulwf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_mulwf [] = {
  TO_UNICODE ('m'),
  TO_UNICODE ('u'),
  TO_UNICODE ('l'),
  TO_UNICODE ('w'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$negf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_negf [] = {
  TO_UNICODE ('n'),
  TO_UNICODE ('e'),
  TO_UNICODE ('g'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$nobank$'
static const utf32 kUnicodeString_piccolo_5F_lexique_nobank [] = {
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('b'),
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('k'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$nop$'
static const utf32 kUnicodeString_piccolo_5F_lexique_nop [] = {
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('p'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$noreturn$'
static const utf32 kUnicodeString_piccolo_5F_lexique_noreturn [] = {
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('t'),
  TO_UNICODE ('u'),
  TO_UNICODE ('r'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$option$'
static const utf32 kUnicodeString_piccolo_5F_lexique_option [] = {
  TO_UNICODE ('o'),
  TO_UNICODE ('p'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$page$'
static const utf32 kUnicodeString_piccolo_5F_lexique_page [] = {
  TO_UNICODE ('p'),
  TO_UNICODE ('a'),
  TO_UNICODE ('g'),
  TO_UNICODE ('e'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$pic_31__38_$'
static const utf32 kUnicodeString_piccolo_5F_lexique_pic_31__38_ [] = {
  TO_UNICODE ('p'),
  TO_UNICODE ('i'),
  TO_UNICODE ('c'),
  TO_UNICODE ('1'),
  TO_UNICODE ('8'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$pop$'
static const utf32 kUnicodeString_piccolo_5F_lexique_pop [] = {
  TO_UNICODE ('p'),
  TO_UNICODE ('o'),
  TO_UNICODE ('p'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$preserved$'
static const utf32 kUnicodeString_piccolo_5F_lexique_preserved [] = {
  TO_UNICODE ('p'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('s'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE ('v'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$push$'
static const utf32 kUnicodeString_piccolo_5F_lexique_push [] = {
  TO_UNICODE ('p'),
  TO_UNICODE ('u'),
  TO_UNICODE ('s'),
  TO_UNICODE ('h'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$ram$'
static const utf32 kUnicodeString_piccolo_5F_lexique_ram [] = {
  TO_UNICODE ('r'),
  TO_UNICODE ('a'),
  TO_UNICODE ('m'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$rcall$'
static const utf32 kUnicodeString_piccolo_5F_lexique_rcall [] = {
  TO_UNICODE ('r'),
  TO_UNICODE ('c'),
  TO_UNICODE ('a'),
  TO_UNICODE ('l'),
  TO_UNICODE ('l'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$requires$'
static const utf32 kUnicodeString_piccolo_5F_lexique_requires [] = {
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('q'),
  TO_UNICODE ('u'),
  TO_UNICODE ('i'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('s'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$reset$'
static const utf32 kUnicodeString_piccolo_5F_lexique_reset [] = {
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('s'),
  TO_UNICODE ('e'),
  TO_UNICODE ('t'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$retlw$'
static const utf32 kUnicodeString_piccolo_5F_lexique_retlw [] = {
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('t'),
  TO_UNICODE ('l'),
  TO_UNICODE ('w'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$rlcf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_rlcf [] = {
  TO_UNICODE ('r'),
  TO_UNICODE ('l'),
  TO_UNICODE ('c'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$rlf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_rlf [] = {
  TO_UNICODE ('r'),
  TO_UNICODE ('l'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$rlncf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_rlncf [] = {
  TO_UNICODE ('r'),
  TO_UNICODE ('l'),
  TO_UNICODE ('n'),
  TO_UNICODE ('c'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$rom$'
static const utf32 kUnicodeString_piccolo_5F_lexique_rom [] = {
  TO_UNICODE ('r'),
  TO_UNICODE ('o'),
  TO_UNICODE ('m'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$routine$'
static const utf32 kUnicodeString_piccolo_5F_lexique_routine [] = {
  TO_UNICODE ('r'),
  TO_UNICODE ('o'),
  TO_UNICODE ('u'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('e'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$rrcf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_rrcf [] = {
  TO_UNICODE ('r'),
  TO_UNICODE ('r'),
  TO_UNICODE ('c'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$rrf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_rrf [] = {
  TO_UNICODE ('r'),
  TO_UNICODE ('r'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$rrncf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_rrncf [] = {
  TO_UNICODE ('r'),
  TO_UNICODE ('r'),
  TO_UNICODE ('n'),
  TO_UNICODE ('c'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$setf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_setf [] = {
  TO_UNICODE ('s'),
  TO_UNICODE ('e'),
  TO_UNICODE ('t'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$sleep$'
static const utf32 kUnicodeString_piccolo_5F_lexique_sleep [] = {
  TO_UNICODE ('s'),
  TO_UNICODE ('l'),
  TO_UNICODE ('e'),
  TO_UNICODE ('e'),
  TO_UNICODE ('p'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$subfwb$'
static const utf32 kUnicodeString_piccolo_5F_lexique_subfwb [] = {
  TO_UNICODE ('s'),
  TO_UNICODE ('u'),
  TO_UNICODE ('b'),
  TO_UNICODE ('f'),
  TO_UNICODE ('w'),
  TO_UNICODE ('b'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$sublw$'
static const utf32 kUnicodeString_piccolo_5F_lexique_sublw [] = {
  TO_UNICODE ('s'),
  TO_UNICODE ('u'),
  TO_UNICODE ('b'),
  TO_UNICODE ('l'),
  TO_UNICODE ('w'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$subwf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_subwf [] = {
  TO_UNICODE ('s'),
  TO_UNICODE ('u'),
  TO_UNICODE ('b'),
  TO_UNICODE ('w'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$subwfb$'
static const utf32 kUnicodeString_piccolo_5F_lexique_subwfb [] = {
  TO_UNICODE ('s'),
  TO_UNICODE ('u'),
  TO_UNICODE ('b'),
  TO_UNICODE ('w'),
  TO_UNICODE ('f'),
  TO_UNICODE ('b'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$swapf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_swapf [] = {
  TO_UNICODE ('s'),
  TO_UNICODE ('w'),
  TO_UNICODE ('a'),
  TO_UNICODE ('p'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$switch$'
static const utf32 kUnicodeString_piccolo_5F_lexique_switch [] = {
  TO_UNICODE ('s'),
  TO_UNICODE ('w'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('c'),
  TO_UNICODE ('h'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$tblrd$'
static const utf32 kUnicodeString_piccolo_5F_lexique_tblrd [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('b'),
  TO_UNICODE ('l'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$tblwt$'
static const utf32 kUnicodeString_piccolo_5F_lexique_tblwt [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('b'),
  TO_UNICODE ('l'),
  TO_UNICODE ('w'),
  TO_UNICODE ('t'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$tris$'
static const utf32 kUnicodeString_piccolo_5F_lexique_tris [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('i'),
  TO_UNICODE ('s'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$unused$'
static const utf32 kUnicodeString_piccolo_5F_lexique_unused [] = {
  TO_UNICODE ('u'),
  TO_UNICODE ('n'),
  TO_UNICODE ('u'),
  TO_UNICODE ('s'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$uses$'
static const utf32 kUnicodeString_piccolo_5F_lexique_uses [] = {
  TO_UNICODE ('u'),
  TO_UNICODE ('s'),
  TO_UNICODE ('e'),
  TO_UNICODE ('s'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$w$'
static const utf32 kUnicodeString_piccolo_5F_lexique_w [] = {
  TO_UNICODE ('w'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$while$'
static const utf32 kUnicodeString_piccolo_5F_lexique_while [] = {
  TO_UNICODE ('w'),
  TO_UNICODE ('h'),
  TO_UNICODE ('i'),
  TO_UNICODE ('l'),
  TO_UNICODE ('e'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$xorlw$'
static const utf32 kUnicodeString_piccolo_5F_lexique_xorlw [] = {
  TO_UNICODE ('x'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('l'),
  TO_UNICODE ('w'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$xorwf$'
static const utf32 kUnicodeString_piccolo_5F_lexique_xorwf [] = {
  TO_UNICODE ('x'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('w'),
  TO_UNICODE ('f'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_7B_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__7B_ [] = {
  TO_UNICODE ('{'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_7C_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__7C_ [] = {
  TO_UNICODE ('|'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_7D_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__7D_ [] = {
  TO_UNICODE ('}'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_7E_$'
static const utf32 kUnicodeString_piccolo_5F_lexique__7E_ [] = {
  TO_UNICODE ('~'),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------------------------------------------------*
//             Key words table 'controlKeyWordList'                            *
//---------------------------------------------------------------------------------------------------------------------*

static const int32_t ktable_size_piccolo_5F_lexique_controlKeyWordList = 44 ;

static const C_unicode_lexique_table_entry ktable_for_piccolo_5F_lexique_controlKeyWordList [ktable_size_piccolo_5F_lexique_controlKeyWordList] = {
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_w, 1, C_Lexique_piccolo_5F_lexique::kToken_w),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_do, 2, C_Lexique_piccolo_5F_lexique::kToken_do),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_if, 2, C_Lexique_piccolo_5F_lexique::kToken_if),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_end, 3, C_Lexique_piccolo_5F_lexique::kToken_end),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_ram, 3, C_Lexique_piccolo_5F_lexique::kToken_ram),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_rom, 3, C_Lexique_piccolo_5F_lexique::kToken_rom),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_bank, 4, C_Lexique_piccolo_5F_lexique::kToken_bank),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_byte, 4, C_Lexique_piccolo_5F_lexique::kToken_byte),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_case, 4, C_Lexique_piccolo_5F_lexique::kToken_case),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_data, 4, C_Lexique_piccolo_5F_lexique::kToken_data),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_else, 4, C_Lexique_piccolo_5F_lexique::kToken_else),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_fast, 4, C_Lexique_piccolo_5F_lexique::kToken_fast),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_mark, 4, C_Lexique_piccolo_5F_lexique::kToken_mark),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_page, 4, C_Lexique_piccolo_5F_lexique::kToken_page),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_uses, 4, C_Lexique_piccolo_5F_lexique::kToken_uses),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_block, 5, C_Lexique_piccolo_5F_lexique::kToken_block),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_const, 5, C_Lexique_piccolo_5F_lexique::kToken_const),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_elsif, 5, C_Lexique_piccolo_5F_lexique::kToken_elsif),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_pic_31__38_, 5, C_Lexique_piccolo_5F_lexique::kToken_pic_31__38_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_while, 5, C_Lexique_piccolo_5F_lexique::kToken_while),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_inline, 6, C_Lexique_piccolo_5F_lexique::kToken_inline),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_nobank, 6, C_Lexique_piccolo_5F_lexique::kToken_nobank),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_switch, 6, C_Lexique_piccolo_5F_lexique::kToken_switch),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_unused, 6, C_Lexique_piccolo_5F_lexique::kToken_unused),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_banksel, 7, C_Lexique_piccolo_5F_lexique::kToken_banksel),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_ensures, 7, C_Lexique_piccolo_5F_lexique::kToken_ensures),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_forever, 7, C_Lexique_piccolo_5F_lexique::kToken_forever),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_include, 7, C_Lexique_piccolo_5F_lexique::kToken_include),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_routine, 7, C_Lexique_piccolo_5F_lexique::kToken_routine),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_banksave, 8, C_Lexique_piccolo_5F_lexique::kToken_banksave),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_baseline, 8, C_Lexique_piccolo_5F_lexique::kToken_baseline),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_checkpic, 8, C_Lexique_piccolo_5F_lexique::kToken_checkpic),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_computed, 8, C_Lexique_piccolo_5F_lexique::kToken_computed),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_midrange, 8, C_Lexique_piccolo_5F_lexique::kToken_midrange),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_noreturn, 8, C_Lexique_piccolo_5F_lexique::kToken_noreturn),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_requires, 8, C_Lexique_piccolo_5F_lexique::kToken_requires),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_checkbank, 9, C_Lexique_piccolo_5F_lexique::kToken_checkbank),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_interrupt, 9, C_Lexique_piccolo_5F_lexique::kToken_interrupt),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_preserved, 9, C_Lexique_piccolo_5F_lexique::kToken_preserved),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_bootloader, 10, C_Lexique_piccolo_5F_lexique::kToken_bootloader),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_implements, 10, C_Lexique_piccolo_5F_lexique::kToken_implements),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_checknobank, 11, C_Lexique_piccolo_5F_lexique::kToken_checknobank),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_contextsave, 11, C_Lexique_piccolo_5F_lexique::kToken_contextsave),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_configuration, 13, C_Lexique_piccolo_5F_lexique::kToken_configuration)
} ;

int16_t C_Lexique_piccolo_5F_lexique::search_into_controlKeyWordList (const C_String & inSearchedString) {
  return searchInList (inSearchedString, ktable_for_piccolo_5F_lexique_controlKeyWordList, ktable_size_piccolo_5F_lexique_controlKeyWordList) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//             Key words table 'delimitorsList'                            *
//---------------------------------------------------------------------------------------------------------------------*

static const int32_t ktable_size_piccolo_5F_lexique_delimitorsList = 34 ;

static const C_unicode_lexique_table_entry ktable_for_piccolo_5F_lexique_delimitorsList [ktable_size_piccolo_5F_lexique_delimitorsList] = {
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__21_, 1, C_Lexique_piccolo_5F_lexique::kToken__21_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__25_, 1, C_Lexique_piccolo_5F_lexique::kToken__25_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__26_, 1, C_Lexique_piccolo_5F_lexique::kToken__26_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__28_, 1, C_Lexique_piccolo_5F_lexique::kToken__28_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__29_, 1, C_Lexique_piccolo_5F_lexique::kToken__29_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__2A_, 1, C_Lexique_piccolo_5F_lexique::kToken__2A_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__2B_, 1, C_Lexique_piccolo_5F_lexique::kToken__2B_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__2C_, 1, C_Lexique_piccolo_5F_lexique::kToken__2C_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__2D_, 1, C_Lexique_piccolo_5F_lexique::kToken__2D_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__2E_, 1, C_Lexique_piccolo_5F_lexique::kToken__2E_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__2F_, 1, C_Lexique_piccolo_5F_lexique::kToken__2F_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__3A_, 1, C_Lexique_piccolo_5F_lexique::kToken__3A_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__3B_, 1, C_Lexique_piccolo_5F_lexique::kToken__3B_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__3C_, 1, C_Lexique_piccolo_5F_lexique::kToken__3C_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__3D_, 1, C_Lexique_piccolo_5F_lexique::kToken__3D_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__3E_, 1, C_Lexique_piccolo_5F_lexique::kToken__3E_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__3F_, 1, C_Lexique_piccolo_5F_lexique::kToken__3F_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__40_, 1, C_Lexique_piccolo_5F_lexique::kToken__40_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__5B_, 1, C_Lexique_piccolo_5F_lexique::kToken__5B_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__5D_, 1, C_Lexique_piccolo_5F_lexique::kToken__5D_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__5E_, 1, C_Lexique_piccolo_5F_lexique::kToken__5E_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__7B_, 1, C_Lexique_piccolo_5F_lexique::kToken__7B_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__7C_, 1, C_Lexique_piccolo_5F_lexique::kToken__7C_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__7D_, 1, C_Lexique_piccolo_5F_lexique::kToken__7D_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__7E_, 1, C_Lexique_piccolo_5F_lexique::kToken__7E_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__21__3D_, 2, C_Lexique_piccolo_5F_lexique::kToken__21__3D_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__2A__2B_, 2, C_Lexique_piccolo_5F_lexique::kToken__2A__2B_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__2A__2D_, 2, C_Lexique_piccolo_5F_lexique::kToken__2A__2D_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__2B__2A_, 2, C_Lexique_piccolo_5F_lexique::kToken__2B__2A_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__3C__3C_, 2, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__3C__3D_, 2, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__3D__3D_, 2, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__3E__3D_, 2, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique__3E__3E_, 2, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_)
} ;

int16_t C_Lexique_piccolo_5F_lexique::search_into_delimitorsList (const C_String & inSearchedString) {
  return searchInList (inSearchedString, ktable_for_piccolo_5F_lexique_delimitorsList, ktable_size_piccolo_5F_lexique_delimitorsList) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//             Key words table 'instructionKeyWordList'                            *
//---------------------------------------------------------------------------------------------------------------------*

static const int32_t ktable_size_piccolo_5F_lexique_instructionKeyWordList = 67 ;

static const C_unicode_lexique_table_entry ktable_for_piccolo_5F_lexique_instructionKeyWordList [ktable_size_piccolo_5F_lexique_instructionKeyWordList] = {
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_bc, 2, C_Lexique_piccolo_5F_lexique::kToken_bc),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_bn, 2, C_Lexique_piccolo_5F_lexique::kToken_bn),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_bz, 2, C_Lexique_piccolo_5F_lexique::kToken_bz),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_bcf, 3, C_Lexique_piccolo_5F_lexique::kToken_bcf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_bnc, 3, C_Lexique_piccolo_5F_lexique::kToken_bnc),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_bnn, 3, C_Lexique_piccolo_5F_lexique::kToken_bnn),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_bnz, 3, C_Lexique_piccolo_5F_lexique::kToken_bnz),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_bov, 3, C_Lexique_piccolo_5F_lexique::kToken_bov),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_bra, 3, C_Lexique_piccolo_5F_lexique::kToken_bra),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_bsf, 3, C_Lexique_piccolo_5F_lexique::kToken_bsf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_btg, 3, C_Lexique_piccolo_5F_lexique::kToken_btg),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_daw, 3, C_Lexique_piccolo_5F_lexique::kToken_daw),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_jsr, 3, C_Lexique_piccolo_5F_lexique::kToken_jsr),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_nop, 3, C_Lexique_piccolo_5F_lexique::kToken_nop),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_pop, 3, C_Lexique_piccolo_5F_lexique::kToken_pop),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_rlf, 3, C_Lexique_piccolo_5F_lexique::kToken_rlf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_rrf, 3, C_Lexique_piccolo_5F_lexique::kToken_rrf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_bnov, 4, C_Lexique_piccolo_5F_lexique::kToken_bnov),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_call, 4, C_Lexique_piccolo_5F_lexique::kToken_call),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_clrf, 4, C_Lexique_piccolo_5F_lexique::kToken_clrf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_clrw, 4, C_Lexique_piccolo_5F_lexique::kToken_clrw),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_comf, 4, C_Lexique_piccolo_5F_lexique::kToken_comf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_decf, 4, C_Lexique_piccolo_5F_lexique::kToken_decf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_fnop, 4, C_Lexique_piccolo_5F_lexique::kToken_fnop),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_goto, 4, C_Lexique_piccolo_5F_lexique::kToken_goto),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_incf, 4, C_Lexique_piccolo_5F_lexique::kToken_incf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_jump, 4, C_Lexique_piccolo_5F_lexique::kToken_jump),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_lfsr, 4, C_Lexique_piccolo_5F_lexique::kToken_lfsr),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_mnop, 4, C_Lexique_piccolo_5F_lexique::kToken_mnop),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_movf, 4, C_Lexique_piccolo_5F_lexique::kToken_movf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_negf, 4, C_Lexique_piccolo_5F_lexique::kToken_negf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_push, 4, C_Lexique_piccolo_5F_lexique::kToken_push),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_rlcf, 4, C_Lexique_piccolo_5F_lexique::kToken_rlcf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_rrcf, 4, C_Lexique_piccolo_5F_lexique::kToken_rrcf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_setf, 4, C_Lexique_piccolo_5F_lexique::kToken_setf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_tris, 4, C_Lexique_piccolo_5F_lexique::kToken_tris),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_addlw, 5, C_Lexique_piccolo_5F_lexique::kToken_addlw),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_addwf, 5, C_Lexique_piccolo_5F_lexique::kToken_addwf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_andlw, 5, C_Lexique_piccolo_5F_lexique::kToken_andlw),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_andwf, 5, C_Lexique_piccolo_5F_lexique::kToken_andwf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_iorlw, 5, C_Lexique_piccolo_5F_lexique::kToken_iorlw),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_iorwf, 5, C_Lexique_piccolo_5F_lexique::kToken_iorwf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_movff, 5, C_Lexique_piccolo_5F_lexique::kToken_movff),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_movlw, 5, C_Lexique_piccolo_5F_lexique::kToken_movlw),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_movwf, 5, C_Lexique_piccolo_5F_lexique::kToken_movwf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_mullw, 5, C_Lexique_piccolo_5F_lexique::kToken_mullw),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_mulwf, 5, C_Lexique_piccolo_5F_lexique::kToken_mulwf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_rcall, 5, C_Lexique_piccolo_5F_lexique::kToken_rcall),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_reset, 5, C_Lexique_piccolo_5F_lexique::kToken_reset),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_retlw, 5, C_Lexique_piccolo_5F_lexique::kToken_retlw),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_rlncf, 5, C_Lexique_piccolo_5F_lexique::kToken_rlncf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_rrncf, 5, C_Lexique_piccolo_5F_lexique::kToken_rrncf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_sleep, 5, C_Lexique_piccolo_5F_lexique::kToken_sleep),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_sublw, 5, C_Lexique_piccolo_5F_lexique::kToken_sublw),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_subwf, 5, C_Lexique_piccolo_5F_lexique::kToken_subwf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_swapf, 5, C_Lexique_piccolo_5F_lexique::kToken_swapf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_tblrd, 5, C_Lexique_piccolo_5F_lexique::kToken_tblrd),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_tblwt, 5, C_Lexique_piccolo_5F_lexique::kToken_tblwt),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_xorlw, 5, C_Lexique_piccolo_5F_lexique::kToken_xorlw),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_xorwf, 5, C_Lexique_piccolo_5F_lexique::kToken_xorwf),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_addwfc, 6, C_Lexique_piccolo_5F_lexique::kToken_addwfc),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_clrwdt, 6, C_Lexique_piccolo_5F_lexique::kToken_clrwdt),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_option, 6, C_Lexique_piccolo_5F_lexique::kToken_option),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_subfwb, 6, C_Lexique_piccolo_5F_lexique::kToken_subfwb),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_subwfb, 6, C_Lexique_piccolo_5F_lexique::kToken_subwfb),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_ltblptr, 7, C_Lexique_piccolo_5F_lexique::kToken_ltblptr),
  C_unicode_lexique_table_entry (kUnicodeString_piccolo_5F_lexique_ldataptr, 8, C_Lexique_piccolo_5F_lexique::kToken_ldataptr)
} ;

int16_t C_Lexique_piccolo_5F_lexique::search_into_instructionKeyWordList (const C_String & inSearchedString) {
  return searchInList (inSearchedString, ktable_for_piccolo_5F_lexique_instructionKeyWordList, ktable_size_piccolo_5F_lexique_instructionKeyWordList) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                          getCurrentTokenString                                                                      *
//---------------------------------------------------------------------------------------------------------------------*

C_String C_Lexique_piccolo_5F_lexique::getCurrentTokenString (const cToken * inTokenPtr) const {
  const cTokenFor_piccolo_5F_lexique * ptr = (const cTokenFor_piccolo_5F_lexique *) inTokenPtr ;
  C_String s ;
  if (ptr == NULL) {
    s.appendCString("$$") ;
  }else{
    switch (ptr->mTokenCode) {
    case kToken_:
      s.appendCString("$$") ;
      break ;
    case kToken_identifier:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("identifier") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendUnicodeCharacter (TO_UNICODE (' ') COMMA_HERE) ;
      s.appendCLiteralStringConstant (ptr->mLexicalAttribute_tokenString) ;
      break ;
    case kToken_integer:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("integer") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendUnicodeCharacter (TO_UNICODE (' ') COMMA_HERE) ;
      s.appendUnsigned (ptr->mLexicalAttribute_uint_33__32_value) ;
      break ;
    case kToken_literal_5F_char:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("literal_char") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendUnicodeCharacter (TO_UNICODE (' ') COMMA_HERE) ;
      s.appendUnicodeCharacter (ptr->mLexicalAttribute_charValue COMMA_HERE) ;
      break ;
    case kToken_literal_5F_string:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("literal_string") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendUnicodeCharacter (TO_UNICODE (' ') COMMA_HERE) ;
      s.appendCLiteralStringConstant (ptr->mLexicalAttribute_tokenString) ;
      break ;
    case kToken_comment:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("comment") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_commentMark:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("commentMark") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_bank:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("bank") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_banksave:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("banksave") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_banksel:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("banksel") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_baseline:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("baseline") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_block:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("block") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_bootloader:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("bootloader") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_byte:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("byte") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_case:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("case") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_checkbank:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("checkbank") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_checknobank:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("checknobank") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_checkpic:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("checkpic") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_computed:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("computed") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_configuration:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("configuration") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_const:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("const") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_contextsave:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("contextsave") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_data:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("data") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_do:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("do") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_end:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("end") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_else:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("else") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_elsif:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("elsif") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_ensures:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("ensures") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_fast:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("fast") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_forever:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("forever") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_if:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("if") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_implements:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("implements") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_include:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("include") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_inline:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("inline") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_interrupt:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("interrupt") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_mark:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("mark") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_midrange:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("midrange") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_nobank:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("nobank") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_noreturn:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("noreturn") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_page:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("page") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_pic_31__38_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("pic18") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_preserved:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("preserved") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_ram:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("ram") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_requires:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("requires") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_rom:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("rom") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_routine:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("routine") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_switch:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("switch") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_unused:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("unused") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_uses:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("uses") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_w:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("w") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_while:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("while") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_addlw:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("addlw") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_addwf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("addwf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_addwfc:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("addwfc") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_andlw:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("andlw") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_andwf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("andwf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_bc:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("bc") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_bcf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("bcf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_bn:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("bn") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_bnc:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("bnc") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_bnn:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("bnn") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_bov:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("bov") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_bnov:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("bnov") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_bnz:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("bnz") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_bsf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("bsf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_bra:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("bra") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_btg:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("btg") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_bz:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("bz") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_call:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("call") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_clrf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("clrf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_clrw:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("clrw") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_clrwdt:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("clrwdt") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_comf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("comf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_daw:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("daw") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_decf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("decf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_incf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("incf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_iorlw:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("iorlw") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_iorwf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("iorwf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_fnop:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("fnop") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_goto:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("goto") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_jsr:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("jsr") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_jump:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("jump") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_lfsr:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("lfsr") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_ldataptr:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("ldataptr") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_ltblptr:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("ltblptr") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_mnop:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("mnop") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_movf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("movf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_movff:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("movff") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_movlw:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("movlw") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_movwf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("movwf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_mullw:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("mullw") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_mulwf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("mulwf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_negf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("negf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_nop:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("nop") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_pop:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("pop") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_option:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("option") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_push:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("push") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_rcall:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("rcall") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_reset:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("reset") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_retlw:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("retlw") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_rlcf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("rlcf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_rlf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("rlf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_rlncf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("rlncf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_rrcf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("rrcf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_rrf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("rrf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_rrncf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("rrncf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_setf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("setf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_sleep:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("sleep") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_subfwb:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("subfwb") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_sublw:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("sublw") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_subwf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("subwf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_subwfb:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("subwfb") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_swapf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("swapf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_tblrd:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("tblrd") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_tblwt:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("tblwt") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_tris:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("tris") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_xorlw:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("xorlw") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_xorwf:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("xorwf") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__2A_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("*") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__2A__2B_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("*+") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__2C_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString (",") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__21__3D_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("!=") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__3C__3D_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("<=") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__3E__3D_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString (">=") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__2A__2D_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("*-") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__2B__2A_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("+*") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__3B_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString (";") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__3A_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString (":") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__3D__3D_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("==") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__3C_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("<") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__3E_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString (">") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__5B_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("[") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__5D_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("]") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__2E_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString (".") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__21_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("!") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__26_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("&") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__7C_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("|") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__3D_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("=") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__7B_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("{") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__7D_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("}") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__28_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("(") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__29_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString (")") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__2F_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("/") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__2D_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("-") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__2B_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("+") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__3F_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("\?") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__5E_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("^") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__3C__3C_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("<<") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__3E__3E_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString (">>") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__7E_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("~") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__25_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("%") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__40_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("@") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    default:
      break ;
    }
  }
  return s ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                           Template Delimiters                                                                       *
//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//                           Template Replacements                                                                     *
//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//            Terminal Symbols as end of script in template mark                                                       *
//---------------------------------------------------------------------------------------------------------------------*



//---------------------------------------------------------------------------------------------------------------------*
//               P A R S E    L E X I C A L    T O K E N                                                               *
//---------------------------------------------------------------------------------------------------------------------*

bool C_Lexique_piccolo_5F_lexique::parseLexicalToken (void) {
  cTokenFor_piccolo_5F_lexique token ;
  mLoop = true ;
  token.mTokenCode = -1 ;
  while ((token.mTokenCode < 0) && (UNICODE_VALUE (mCurrentChar) != '\0')) {
    token.mLexicalAttribute_charValue = TO_UNICODE (0) ;
    token.mLexicalAttribute_identifierString.setLengthToZero () ;
    token.mLexicalAttribute_tokenString.setLengthToZero () ;
    token.mLexicalAttribute_uint_33__32_value = 0 ;
    mTokenStartLocation = mCurrentLocation ;
    try{
      if (testForInputUTF32CharRange (TO_UNICODE ('a'), TO_UNICODE ('z')) || testForInputUTF32CharRange (TO_UNICODE ('A'), TO_UNICODE ('Z'))) {
        do {
          ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_identifierString, ::scanner_function_toLower (*this, previousChar ())) ;
          ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, previousChar ()) ;
          if (testForInputUTF32CharRange (TO_UNICODE ('a'), TO_UNICODE ('z')) || testForInputUTF32CharRange (TO_UNICODE ('A'), TO_UNICODE ('Z')) || testForInputUTF32Char (TO_UNICODE ('_')) || testForInputUTF32CharRange (TO_UNICODE ('0'), TO_UNICODE ('9'))) {
          }else{
            mLoop = false ;
          }
        }while (mLoop) ;
        mLoop = true ;
        if (token.mTokenCode == -1) {
          token.mTokenCode = search_into_instructionKeyWordList (token.mLexicalAttribute_identifierString) ;
        }
        if (token.mTokenCode == -1) {
          token.mTokenCode = search_into_controlKeyWordList (token.mLexicalAttribute_identifierString) ;
        }
        if (token.mTokenCode == -1) {
          token.mTokenCode = kToken_identifier ;
        }
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__30_x, 2, true)) {
        do {
          if (testForInputUTF32CharRange (TO_UNICODE ('0'), TO_UNICODE ('9'))) {
            ::scanner_routine_enterHexDigitIntoUInt (*this, previousChar (), token.mLexicalAttribute_uint_33__32_value, gLexicalMessage_piccolo_5F_lexique_hexNumberTooLarge, gLexicalMessage_piccolo_5F_lexique_internalError) ;
          }else if (testForInputUTF32CharRange (TO_UNICODE ('a'), TO_UNICODE ('f'))) {
            ::scanner_routine_enterHexDigitIntoUInt (*this, previousChar (), token.mLexicalAttribute_uint_33__32_value, gLexicalMessage_piccolo_5F_lexique_hexNumberTooLarge, gLexicalMessage_piccolo_5F_lexique_internalError) ;
          }else if (testForInputUTF32CharRange (TO_UNICODE ('A'), TO_UNICODE ('F'))) {
            ::scanner_routine_enterHexDigitIntoUInt (*this, previousChar (), token.mLexicalAttribute_uint_33__32_value, gLexicalMessage_piccolo_5F_lexique_hexNumberTooLarge, gLexicalMessage_piccolo_5F_lexique_internalError) ;
          }else if (testForInputUTF32Char (TO_UNICODE ('_'))) {
          }else{
            mLoop = false ;
          }
        }while (mLoop) ;
        mLoop = true ;
        token.mTokenCode = kToken_integer ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__30_b, 2, true)) {
        do {
          if (testForInputUTF32CharRange (TO_UNICODE ('0'), TO_UNICODE ('1'))) {
            ::scanner_routine_enterBinDigitIntoUInt (*this, previousChar (), token.mLexicalAttribute_uint_33__32_value, gLexicalMessage_piccolo_5F_lexique_binNumberTooLarge, gLexicalMessage_piccolo_5F_lexique_internalError) ;
          }else if (testForInputUTF32Char (TO_UNICODE ('_'))) {
          }else{
            mLoop = false ;
          }
        }while (mLoop) ;
        mLoop = true ;
        token.mTokenCode = kToken_integer ;
        enterToken (token) ;
      }else if (testForInputUTF32CharRange (TO_UNICODE ('0'), TO_UNICODE ('9'))) {
        ::scanner_routine_enterDigitIntoUInt (*this, previousChar (), token.mLexicalAttribute_uint_33__32_value, gLexicalMessage_piccolo_5F_lexique_decimalNumberTooLarge, gLexicalMessage_piccolo_5F_lexique_internalError) ;
        do {
          if (testForInputUTF32CharRange (TO_UNICODE ('0'), TO_UNICODE ('9'))) {
            ::scanner_routine_enterDigitIntoUInt (*this, previousChar (), token.mLexicalAttribute_uint_33__32_value, gLexicalMessage_piccolo_5F_lexique_decimalNumberTooLarge, gLexicalMessage_piccolo_5F_lexique_internalError) ;
          }else if (testForInputUTF32Char (TO_UNICODE ('_'))) {
          }else{
            mLoop = false ;
          }
        }while (mLoop) ;
        mLoop = true ;
        token.mTokenCode = kToken_integer ;
        enterToken (token) ;
      }else if (testForInputUTF32Char (TO_UNICODE ('\''))) {
        if (testForInputUTF32Char (TO_UNICODE ('\\'))) {
          if (testForInputUTF32Char (TO_UNICODE ('f'))) {
            ::scanner_routine_enterCharacterIntoCharacter (*this, token.mLexicalAttribute_charValue, TO_UNICODE ('\f')) ;
          }else if (testForInputUTF32Char (TO_UNICODE ('n'))) {
            ::scanner_routine_enterCharacterIntoCharacter (*this, token.mLexicalAttribute_charValue, TO_UNICODE ('\n')) ;
          }else if (testForInputUTF32Char (TO_UNICODE ('r'))) {
            ::scanner_routine_enterCharacterIntoCharacter (*this, token.mLexicalAttribute_charValue, TO_UNICODE ('\r')) ;
          }else if (testForInputUTF32Char (TO_UNICODE ('t'))) {
            ::scanner_routine_enterCharacterIntoCharacter (*this, token.mLexicalAttribute_charValue, TO_UNICODE ('\t')) ;
          }else if (testForInputUTF32Char (TO_UNICODE ('v'))) {
            ::scanner_routine_enterCharacterIntoCharacter (*this, token.mLexicalAttribute_charValue, TO_UNICODE ('\v')) ;
          }else if (testForInputUTF32Char (TO_UNICODE ('\\'))) {
            ::scanner_routine_enterCharacterIntoCharacter (*this, token.mLexicalAttribute_charValue, TO_UNICODE ('\\')) ;
          }else if (testForInputUTF32Char (TO_UNICODE ('0'))) {
            ::scanner_routine_enterCharacterIntoCharacter (*this, token.mLexicalAttribute_charValue, TO_UNICODE ('\0')) ;
          }else if (testForInputUTF32Char (TO_UNICODE ('\''))) {
            ::scanner_routine_enterCharacterIntoCharacter (*this, token.mLexicalAttribute_charValue, TO_UNICODE ('\'')) ;
          }else if (testForInputUTF32Char (TO_UNICODE ('x')) || testForInputUTF32Char (TO_UNICODE ('X'))) {
            if (testForInputUTF32CharRange (TO_UNICODE ('0'), TO_UNICODE ('9')) || testForInputUTF32CharRange (TO_UNICODE ('a'), TO_UNICODE ('f')) || testForInputUTF32CharRange (TO_UNICODE ('A'), TO_UNICODE ('F'))) {
              do {
                ::scanner_routine_enterHexDigitIntoASCIIcharacter (*this, token.mLexicalAttribute_charValue, previousChar (), gLexicalMessage_piccolo_5F_lexique_ASCIIcodeTooLargeError, gLexicalMessage_piccolo_5F_lexique_internalError) ;
                if (testForInputUTF32CharRange (TO_UNICODE ('0'), TO_UNICODE ('9')) || testForInputUTF32CharRange (TO_UNICODE ('a'), TO_UNICODE ('f')) || testForInputUTF32CharRange (TO_UNICODE ('A'), TO_UNICODE ('F'))) {
                }else{
                  mLoop = false ;
                }
              }while (mLoop) ;
              mLoop = true ;
            }else{
              lexicalError (gLexicalMessage_piccolo_5F_lexique_incorrectCharConstant COMMA_LINE_AND_SOURCE_FILE) ;
            }
          }else{
            lexicalError (gLexicalMessage_piccolo_5F_lexique_incorrectCharConstant COMMA_LINE_AND_SOURCE_FILE) ;
          }
        }else if (testForInputUTF32CharRange (TO_UNICODE (' '), TO_UNICODE ('~'))) {
          ::scanner_routine_enterCharacterIntoCharacter (*this, token.mLexicalAttribute_charValue, previousChar ()) ;
        }else{
          lexicalError (gLexicalMessage_piccolo_5F_lexique_incorrectCharConstant COMMA_LINE_AND_SOURCE_FILE) ;
        }
        if (testForInputUTF32Char (TO_UNICODE ('\''))) {
          token.mTokenCode = kToken_literal_5F_char ;
          enterToken (token) ;
        }else{
          lexicalError (gLexicalMessage_piccolo_5F_lexique_incorrectCharConstant COMMA_LINE_AND_SOURCE_FILE) ;
        }
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__3E__3E_, 2, true)) {
        token.mTokenCode = kToken__3E__3E_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__3E__3D_, 2, true)) {
        token.mTokenCode = kToken__3E__3D_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__3D__3D_, 2, true)) {
        token.mTokenCode = kToken__3D__3D_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__3C__3D_, 2, true)) {
        token.mTokenCode = kToken__3C__3D_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__3C__3C_, 2, true)) {
        token.mTokenCode = kToken__3C__3C_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__2B__2A_, 2, true)) {
        token.mTokenCode = kToken__2B__2A_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__2A__2D_, 2, true)) {
        token.mTokenCode = kToken__2A__2D_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__2A__2B_, 2, true)) {
        token.mTokenCode = kToken__2A__2B_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__21__3D_, 2, true)) {
        token.mTokenCode = kToken__21__3D_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__7E_, 1, true)) {
        token.mTokenCode = kToken__7E_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__7D_, 1, true)) {
        token.mTokenCode = kToken__7D_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__7C_, 1, true)) {
        token.mTokenCode = kToken__7C_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__7B_, 1, true)) {
        token.mTokenCode = kToken__7B_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__5E_, 1, true)) {
        token.mTokenCode = kToken__5E_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__5D_, 1, true)) {
        token.mTokenCode = kToken__5D_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__5B_, 1, true)) {
        token.mTokenCode = kToken__5B_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__40_, 1, true)) {
        token.mTokenCode = kToken__40_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__3F_, 1, true)) {
        token.mTokenCode = kToken__3F_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__3E_, 1, true)) {
        token.mTokenCode = kToken__3E_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__3D_, 1, true)) {
        token.mTokenCode = kToken__3D_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__3C_, 1, true)) {
        token.mTokenCode = kToken__3C_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__3B_, 1, true)) {
        token.mTokenCode = kToken__3B_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__3A_, 1, true)) {
        token.mTokenCode = kToken__3A_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__2F_, 1, true)) {
        token.mTokenCode = kToken__2F_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__2E_, 1, true)) {
        token.mTokenCode = kToken__2E_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__2D_, 1, true)) {
        token.mTokenCode = kToken__2D_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__2C_, 1, true)) {
        token.mTokenCode = kToken__2C_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__2B_, 1, true)) {
        token.mTokenCode = kToken__2B_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__2A_, 1, true)) {
        token.mTokenCode = kToken__2A_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__29_, 1, true)) {
        token.mTokenCode = kToken__29_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__28_, 1, true)) {
        token.mTokenCode = kToken__28_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__26_, 1, true)) {
        token.mTokenCode = kToken__26_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__25_, 1, true)) {
        token.mTokenCode = kToken__25_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccolo_5F_lexique__21_, 1, true)) {
        token.mTokenCode = kToken__21_ ;
        enterToken (token) ;
      }else if (testForInputUTF32Char (TO_UNICODE ('\"'))) {
        do {
          if (testForInputUTF32Char (TO_UNICODE ('\\'))) {
            if (testForInputUTF32Char (TO_UNICODE ('f'))) {
              ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, TO_UNICODE ('\f')) ;
            }else if (testForInputUTF32Char (TO_UNICODE ('n'))) {
              ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, TO_UNICODE ('\n')) ;
            }else if (testForInputUTF32Char (TO_UNICODE ('r'))) {
              ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, TO_UNICODE ('\r')) ;
            }else if (testForInputUTF32Char (TO_UNICODE ('t'))) {
              ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, TO_UNICODE ('\t')) ;
            }else if (testForInputUTF32Char (TO_UNICODE ('v'))) {
              ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, TO_UNICODE ('\v')) ;
            }else if (testForInputUTF32Char (TO_UNICODE ('\\'))) {
              ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, TO_UNICODE ('\\')) ;
            }else if (testForInputUTF32Char (TO_UNICODE ('0'))) {
              ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, TO_UNICODE ('\0')) ;
            }else if (testForInputUTF32Char (TO_UNICODE ('\"'))) {
              ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, TO_UNICODE ('\"')) ;
            }else if (testForInputUTF32Char (TO_UNICODE ('\''))) {
              ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, TO_UNICODE ('\'')) ;
            }else if (testForInputUTF32CharRange (TO_UNICODE ('0'), TO_UNICODE ('9'))) {
              do {
                ::scanner_routine_enterHexDigitIntoASCIIcharacter (*this, token.mLexicalAttribute_charValue, previousChar (), gLexicalMessage_piccolo_5F_lexique_ASCIIcodeTooLargeError, gLexicalMessage_piccolo_5F_lexique_internalError) ;
                if (testForInputUTF32CharRange (TO_UNICODE ('0'), TO_UNICODE ('9'))) {
                }else{
                  mLoop = false ;
                }
              }while (mLoop) ;
              mLoop = true ;
              ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, token.mLexicalAttribute_charValue) ;
            }else{
              lexicalError (gLexicalMessage_piccolo_5F_lexique_incorrectCharConstant COMMA_LINE_AND_SOURCE_FILE) ;
            }
          }else if (testForInputUTF32Char (TO_UNICODE (' ')) || testForInputUTF32Char (TO_UNICODE ('!')) || testForInputUTF32CharRange (TO_UNICODE ('#'), TO_UNICODE ('~'))) {
            ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, previousChar ()) ;
          }else{
            mLoop = false ;
          }
        }while (mLoop) ;
        mLoop = true ;
        if (testForInputUTF32Char (TO_UNICODE ('\"'))) {
          token.mTokenCode = kToken_literal_5F_string ;
          enterToken (token) ;
        }else{
          lexicalError (gLexicalMessage_piccolo_5F_lexique_incorrectStringEnd COMMA_LINE_AND_SOURCE_FILE) ;
        }
      }else if (testForInputUTF32Char (TO_UNICODE ('#'))) {
        if (testForInputUTF32Char (TO_UNICODE ('!'))) {
          do {
            if (testForInputUTF32CharRange (TO_UNICODE (1), TO_UNICODE ('\t')) || testForInputUTF32Char (TO_UNICODE ('\v')) || testForInputUTF32Char (TO_UNICODE ('\f')) || testForInputUTF32CharRange (TO_UNICODE (14), TO_UNICODE (65533))) {
            }else{
              mLoop = false ;
            }
          }while (mLoop) ;
          mLoop = true ;
        }else{
          do {
            if (testForInputUTF32CharRange (TO_UNICODE (1), TO_UNICODE ('\t')) || testForInputUTF32Char (TO_UNICODE ('\v')) || testForInputUTF32Char (TO_UNICODE ('\f')) || testForInputUTF32CharRange (TO_UNICODE (14), TO_UNICODE (65533))) {
            }else{
              mLoop = false ;
            }
          }while (mLoop) ;
          mLoop = true ;
        }
      }else if (testForInputUTF32CharRange (TO_UNICODE (1), TO_UNICODE (' '))) {
      }else if (testForInputUTF32Char (TO_UNICODE ('\0'))) { // End of source text ? 
        token.mTokenCode = kToken_ ; // Empty string code
      }else{ // Unknown input character
        unknownCharacterLexicalError (LINE_AND_SOURCE_FILE) ;
      }
    }catch (const C_lexicalErrorException &) {
      token.mTokenCode = -1 ; // No token
      advance () ; // ... go throught unknown character
    }
  }
  if ((UNICODE_VALUE (mCurrentChar) == '\0') && (token.mTemplateStringBeforeToken.length () > 0)) {
    token.mTokenCode = 0 ;
    enterToken (token) ;
  }
  return token.mTokenCode > 0 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                         E N T E R    T O K E N                                                                      *
//---------------------------------------------------------------------------------------------------------------------*

void C_Lexique_piccolo_5F_lexique::enterToken (const cTokenFor_piccolo_5F_lexique & inToken) {
  cTokenFor_piccolo_5F_lexique * ptr = NULL ;
  macroMyNew (ptr, cTokenFor_piccolo_5F_lexique ()) ;
  ptr->mTokenCode = inToken.mTokenCode ;
  ptr->mStartLocation = mTokenStartLocation ;
  ptr->mEndLocation = mTokenEndLocation ;
  ptr->mTemplateStringBeforeToken = inToken.mTemplateStringBeforeToken ;
  ptr->mLexicalAttribute_charValue = inToken.mLexicalAttribute_charValue ;
  ptr->mLexicalAttribute_identifierString = inToken.mLexicalAttribute_identifierString ;
  ptr->mLexicalAttribute_tokenString = inToken.mLexicalAttribute_tokenString ;
  ptr->mLexicalAttribute_uint_33__32_value = inToken.mLexicalAttribute_uint_33__32_value ;
  enterTokenFromPointer (ptr) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//               A T T R I B U T E   A C C E S S                                                                       *
//-----------------------------------------------------------------------------*

utf32 C_Lexique_piccolo_5F_lexique::attributeValue_charValue (void) const {
  cTokenFor_piccolo_5F_lexique * ptr = (cTokenFor_piccolo_5F_lexique *) mCurrentTokenPtr ;
  return ptr->mLexicalAttribute_charValue ;
}

//-----------------------------------------------------------------------------*

C_String C_Lexique_piccolo_5F_lexique::attributeValue_identifierString (void) const {
  cTokenFor_piccolo_5F_lexique * ptr = (cTokenFor_piccolo_5F_lexique *) mCurrentTokenPtr ;
  return ptr->mLexicalAttribute_identifierString ;
}

//-----------------------------------------------------------------------------*

C_String C_Lexique_piccolo_5F_lexique::attributeValue_tokenString (void) const {
  cTokenFor_piccolo_5F_lexique * ptr = (cTokenFor_piccolo_5F_lexique *) mCurrentTokenPtr ;
  return ptr->mLexicalAttribute_tokenString ;
}

//-----------------------------------------------------------------------------*

uint32_t C_Lexique_piccolo_5F_lexique::attributeValue_uint_33__32_value (void) const {
  cTokenFor_piccolo_5F_lexique * ptr = (cTokenFor_piccolo_5F_lexique *) mCurrentTokenPtr ;
  return ptr->mLexicalAttribute_uint_33__32_value ;
}

//---------------------------------------------------------------------------------------------------------------------*
//         A S S I G N    F R O M    A T T R I B U T E                                                                 *
//-----------------------------------------------------------------------------*

GALGAS_lchar C_Lexique_piccolo_5F_lexique::synthetizedAttribute_charValue (void) const {
  cTokenFor_piccolo_5F_lexique * ptr = (cTokenFor_piccolo_5F_lexique *) mCurrentTokenPtr ;
  macroValidSharedObject (ptr, cTokenFor_piccolo_5F_lexique) ;
  GALGAS_location currentLocation (ptr->mStartLocation, ptr->mEndLocation, sourceText ()) ;
  GALGAS_char value (ptr->mLexicalAttribute_charValue) ;
  GALGAS_lchar result (value, currentLocation) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring C_Lexique_piccolo_5F_lexique::synthetizedAttribute_identifierString (void) const {
  cTokenFor_piccolo_5F_lexique * ptr = (cTokenFor_piccolo_5F_lexique *) mCurrentTokenPtr ;
  macroValidSharedObject (ptr, cTokenFor_piccolo_5F_lexique) ;
  GALGAS_location currentLocation (ptr->mStartLocation, ptr->mEndLocation, sourceText ()) ;
  GALGAS_string value (ptr->mLexicalAttribute_identifierString) ;
  GALGAS_lstring result (value, currentLocation) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring C_Lexique_piccolo_5F_lexique::synthetizedAttribute_tokenString (void) const {
  cTokenFor_piccolo_5F_lexique * ptr = (cTokenFor_piccolo_5F_lexique *) mCurrentTokenPtr ;
  macroValidSharedObject (ptr, cTokenFor_piccolo_5F_lexique) ;
  GALGAS_location currentLocation (ptr->mStartLocation, ptr->mEndLocation, sourceText ()) ;
  GALGAS_string value (ptr->mLexicalAttribute_tokenString) ;
  GALGAS_lstring result (value, currentLocation) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_luint C_Lexique_piccolo_5F_lexique::synthetizedAttribute_uint_33__32_value (void) const {
  cTokenFor_piccolo_5F_lexique * ptr = (cTokenFor_piccolo_5F_lexique *) mCurrentTokenPtr ;
  macroValidSharedObject (ptr, cTokenFor_piccolo_5F_lexique) ;
  GALGAS_location currentLocation (ptr->mStartLocation, ptr->mEndLocation, sourceText ()) ;
  GALGAS_uint value (ptr->mLexicalAttribute_uint_33__32_value) ;
  GALGAS_luint result (value, currentLocation) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                         I N T R O S P E C T I O N                                                                   *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringlist C_Lexique_piccolo_5F_lexique::symbols (LOCATION_ARGS) {
  GALGAS_stringlist result = GALGAS_stringlist::constructor_emptyList (THERE) ;
  result.addAssign_operation (GALGAS_string ("identifier") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("integer") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("literal_char") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("literal_string") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("comment") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("commentMark") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("bank") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("banksave") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("banksel") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("baseline") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("block") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("bootloader") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("byte") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("case") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("checkbank") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("checknobank") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("checkpic") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("computed") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("configuration") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("const") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("contextsave") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("data") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("do") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("end") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("else") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("elsif") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("ensures") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("fast") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("forever") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("if") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("implements") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("include") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("inline") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("interrupt") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("mark") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("midrange") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("nobank") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("noreturn") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("page") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("pic18") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("preserved") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("ram") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("requires") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("rom") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("routine") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("switch") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("unused") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("uses") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("w") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("while") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("addlw") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("addwf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("addwfc") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("andlw") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("andwf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("bc") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("bcf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("bn") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("bnc") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("bnn") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("bov") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("bnov") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("bnz") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("bsf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("bra") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("btg") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("bz") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("call") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("clrf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("clrw") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("clrwdt") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("comf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("daw") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("decf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("incf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("iorlw") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("iorwf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("fnop") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("goto") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("jsr") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("jump") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("lfsr") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("ldataptr") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("ltblptr") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("mnop") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("movf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("movff") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("movlw") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("movwf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("mullw") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("mulwf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("negf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("nop") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("pop") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("option") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("push") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("rcall") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("reset") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("retlw") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("rlcf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("rlf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("rlncf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("rrcf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("rrf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("rrncf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("setf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("sleep") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("subfwb") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("sublw") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("subwf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("subwfb") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("swapf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("tblrd") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("tblwt") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("tris") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("xorlw") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("xorwf") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("*") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("*+") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string (",") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("!=") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("<=") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string (">=") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("*-") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("+*") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string (";") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string (":") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("==") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("<") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string (">") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("[") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("]") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string (".") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("!") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("&") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("|") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("=") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("{") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("}") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("(") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string (")") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("/") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("-") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("+") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("\?") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("^") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("<<") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string (">>") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("~") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("%") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("@") COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_bitSliceTable::cMapElement_bitSliceTable (const GALGAS_lstring & inKey,
                                                      const GALGAS_uint & in_mSliceIndex,
                                                      const GALGAS_uint & in_mSliceSize
                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mSliceIndex (in_mSliceIndex),
mAttribute_mSliceSize (in_mSliceSize) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_bitSliceTable::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mSliceIndex.isValid () && mAttribute_mSliceSize.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_bitSliceTable::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_bitSliceTable (mAttribute_lkey, mAttribute_mSliceIndex, mAttribute_mSliceSize COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_bitSliceTable::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSliceIndex" ":" ;
  mAttribute_mSliceIndex.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSliceSize" ":" ;
  mAttribute_mSliceSize.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_bitSliceTable::compare (const cCollectionElement * inOperand) const {
  cMapElement_bitSliceTable * operand = (cMapElement_bitSliceTable *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mSliceIndex.objectCompare (operand->mAttribute_mSliceIndex) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSliceSize.objectCompare (operand->mAttribute_mSliceSize) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bitSliceTable::GALGAS_bitSliceTable (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bitSliceTable::GALGAS_bitSliceTable (const GALGAS_bitSliceTable & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bitSliceTable & GALGAS_bitSliceTable::operator = (const GALGAS_bitSliceTable & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bitSliceTable GALGAS_bitSliceTable::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_bitSliceTable result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bitSliceTable GALGAS_bitSliceTable::constructor_mapWithMapToOverride (const GALGAS_bitSliceTable & inMapToOverride
                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_bitSliceTable result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bitSliceTable GALGAS_bitSliceTable::reader_overriddenMap (C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_bitSliceTable result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_bitSliceTable::addAssign_operation (const GALGAS_lstring & inKey,
                                                const GALGAS_uint & inArgument0,
                                                const GALGAS_uint & inArgument1,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_bitSliceTable * p = NULL ;
  macroMyNew (p, cMapElement_bitSliceTable (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@bitSliceTable insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_bitSliceTable::modifier_insertKey (GALGAS_lstring inKey,
                                               GALGAS_uint inArgument0,
                                               GALGAS_uint inArgument1,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  cMapElement_bitSliceTable * p = NULL ;
  macroMyNew (p, cMapElement_bitSliceTable (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' slice is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_bitSliceTable_searchKey = "the '%K' slice is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_bitSliceTable::method_searchKey (GALGAS_lstring inKey,
                                             GALGAS_uint & outArgument0,
                                             GALGAS_uint & outArgument1,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  const cMapElement_bitSliceTable * p = (const cMapElement_bitSliceTable *) performSearch (inKey,
                                                                                             inCompiler,
                                                                                             kSearchErrorMessage_bitSliceTable_searchKey
                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_bitSliceTable) ;
    outArgument0 = p->mAttribute_mSliceIndex ;
    outArgument1 = p->mAttribute_mSliceSize ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_bitSliceTable::reader_mSliceIndexForKey (const GALGAS_string & inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_bitSliceTable * p = (const cMapElement_bitSliceTable *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_bitSliceTable) ;
    result = p->mAttribute_mSliceIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_bitSliceTable::reader_mSliceSizeForKey (const GALGAS_string & inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_bitSliceTable * p = (const cMapElement_bitSliceTable *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_bitSliceTable) ;
    result = p->mAttribute_mSliceSize ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_bitSliceTable::modifier_setMSliceIndexForKey (GALGAS_uint inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_bitSliceTable * p = (cMapElement_bitSliceTable *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_bitSliceTable) ;
    p->mAttribute_mSliceIndex = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_bitSliceTable::modifier_setMSliceSizeForKey (GALGAS_uint inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_bitSliceTable * p = (cMapElement_bitSliceTable *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_bitSliceTable) ;
    p->mAttribute_mSliceSize = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_bitSliceTable * GALGAS_bitSliceTable::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                     const GALGAS_string & inKey
                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_bitSliceTable * result = (cMapElement_bitSliceTable *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_bitSliceTable) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_bitSliceTable::cEnumerator_bitSliceTable (const GALGAS_bitSliceTable & inEnumeratedObject,
                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bitSliceTable_2D_element cEnumerator_bitSliceTable::current (LOCATION_ARGS) const {
  const cMapElement_bitSliceTable * p = (const cMapElement_bitSliceTable *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_bitSliceTable) ;
  return GALGAS_bitSliceTable_2D_element (p->mAttribute_lkey, p->mAttribute_mSliceIndex, p->mAttribute_mSliceSize) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_bitSliceTable::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_bitSliceTable::current_mSliceIndex (LOCATION_ARGS) const {
  const cMapElement_bitSliceTable * p = (const cMapElement_bitSliceTable *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_bitSliceTable) ;
  return p->mAttribute_mSliceIndex ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_bitSliceTable::current_mSliceSize (LOCATION_ARGS) const {
  const cMapElement_bitSliceTable * p = (const cMapElement_bitSliceTable *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_bitSliceTable) ;
  return p->mAttribute_mSliceSize ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                 @bitSliceTable type                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_bitSliceTable ("bitSliceTable",
                                      NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_bitSliceTable::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_bitSliceTable ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_bitSliceTable::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_bitSliceTable (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bitSliceTable GALGAS_bitSliceTable::extractObject (const GALGAS_object & inObject,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_bitSliceTable result ;
  const GALGAS_bitSliceTable * p = (const GALGAS_bitSliceTable *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_bitSliceTable *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("bitSliceTable", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  Class for element of '@declarationInRamList' list                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_declarationInRamList : public cCollectionElement {
  public : GALGAS_declarationInRamList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_declarationInRamList (const GALGAS_declarationInRam & in_mDeclarationInRAM
                                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_declarationInRamList::cCollectionElement_declarationInRamList (const GALGAS_declarationInRam & in_mDeclarationInRAM
                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mDeclarationInRAM) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_declarationInRamList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_declarationInRamList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_declarationInRamList (mObject.mAttribute_mDeclarationInRAM COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_declarationInRamList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDeclarationInRAM" ":" ;
  mObject.mAttribute_mDeclarationInRAM.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_declarationInRamList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_declarationInRamList * operand = (cCollectionElement_declarationInRamList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_declarationInRamList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declarationInRamList::GALGAS_declarationInRamList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declarationInRamList::GALGAS_declarationInRamList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declarationInRamList GALGAS_declarationInRamList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_declarationInRamList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declarationInRamList GALGAS_declarationInRamList::constructor_listWithValue (const GALGAS_declarationInRam & inOperand0
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_declarationInRamList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_declarationInRamList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declarationInRamList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                             const GALGAS_declarationInRam & in_mDeclarationInRAM
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_declarationInRamList * p = NULL ;
  macroMyNew (p, cCollectionElement_declarationInRamList (in_mDeclarationInRAM COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declarationInRamList::addAssign_operation (const GALGAS_declarationInRam & inOperand0
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_declarationInRamList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declarationInRamList::modifier_insertAtIndex (const GALGAS_declarationInRam inOperand0,
                                                          const GALGAS_uint inInsertionIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_declarationInRamList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declarationInRamList::modifier_removeAtIndex (GALGAS_declarationInRam & outOperand0,
                                                          const GALGAS_uint inRemoveIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_declarationInRamList * p = (cCollectionElement_declarationInRamList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_declarationInRamList) ;
      outOperand0 = p->mObject.mAttribute_mDeclarationInRAM ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declarationInRamList::modifier_popFirst (GALGAS_declarationInRam & outOperand0,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_declarationInRamList * p = (cCollectionElement_declarationInRamList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_declarationInRamList) ;
    outOperand0 = p->mObject.mAttribute_mDeclarationInRAM ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declarationInRamList::modifier_popLast (GALGAS_declarationInRam & outOperand0,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_declarationInRamList * p = (cCollectionElement_declarationInRamList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_declarationInRamList) ;
    outOperand0 = p->mObject.mAttribute_mDeclarationInRAM ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declarationInRamList::method_first (GALGAS_declarationInRam & outOperand0,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_declarationInRamList * p = (cCollectionElement_declarationInRamList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_declarationInRamList) ;
    outOperand0 = p->mObject.mAttribute_mDeclarationInRAM ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declarationInRamList::method_last (GALGAS_declarationInRam & outOperand0,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_declarationInRamList * p = (cCollectionElement_declarationInRamList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_declarationInRamList) ;
    outOperand0 = p->mObject.mAttribute_mDeclarationInRAM ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declarationInRamList GALGAS_declarationInRamList::operator_concat (const GALGAS_declarationInRamList & inOperand
                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_declarationInRamList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declarationInRamList GALGAS_declarationInRamList::add_operation (const GALGAS_declarationInRamList & inOperand,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_declarationInRamList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declarationInRamList GALGAS_declarationInRamList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_declarationInRamList result = GALGAS_declarationInRamList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declarationInRamList GALGAS_declarationInRamList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_declarationInRamList result = GALGAS_declarationInRamList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declarationInRamList::dotAssign_operation (const GALGAS_declarationInRamList inOperand
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declarationInRam GALGAS_declarationInRamList::reader_mDeclarationInRAMAtIndex (const GALGAS_uint & inIndex,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_declarationInRamList * p = (cCollectionElement_declarationInRamList *) attributes.ptr () ;
  GALGAS_declarationInRam result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_declarationInRamList) ;
    result = p->mObject.mAttribute_mDeclarationInRAM ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_declarationInRamList::cEnumerator_declarationInRamList (const GALGAS_declarationInRamList & inEnumeratedObject,
                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declarationInRamList_2D_element cEnumerator_declarationInRamList::current (LOCATION_ARGS) const {
  const cCollectionElement_declarationInRamList * p = (const cCollectionElement_declarationInRamList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_declarationInRamList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declarationInRam cEnumerator_declarationInRamList::current_mDeclarationInRAM (LOCATION_ARGS) const {
  const cCollectionElement_declarationInRamList * p = (const cCollectionElement_declarationInRamList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_declarationInRamList) ;
  return p->mObject.mAttribute_mDeclarationInRAM ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @declarationInRamList type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_declarationInRamList ("declarationInRamList",
                                             NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_declarationInRamList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_declarationInRamList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_declarationInRamList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_declarationInRamList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declarationInRamList GALGAS_declarationInRamList::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_declarationInRamList result ;
  const GALGAS_declarationInRamList * p = (const GALGAS_declarationInRamList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_declarationInRamList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("declarationInRamList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   Class for element of '@ramDefinitionList' list                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_ramDefinitionList : public cCollectionElement {
  public : GALGAS_ramDefinitionList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_ramDefinitionList (const GALGAS_lstring & in_mBankName,
                                                 const GALGAS_declarationInRamList & in_mDeclaration
                                                 COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_ramDefinitionList::cCollectionElement_ramDefinitionList (const GALGAS_lstring & in_mBankName,
                                                                            const GALGAS_declarationInRamList & in_mDeclaration
                                                                            COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mBankName, in_mDeclaration) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_ramDefinitionList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_ramDefinitionList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_ramDefinitionList (mObject.mAttribute_mBankName, mObject.mAttribute_mDeclaration COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_ramDefinitionList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBankName" ":" ;
  mObject.mAttribute_mBankName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDeclaration" ":" ;
  mObject.mAttribute_mDeclaration.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_ramDefinitionList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_ramDefinitionList * operand = (cCollectionElement_ramDefinitionList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_ramDefinitionList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ramDefinitionList::GALGAS_ramDefinitionList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ramDefinitionList::GALGAS_ramDefinitionList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ramDefinitionList GALGAS_ramDefinitionList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_ramDefinitionList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ramDefinitionList GALGAS_ramDefinitionList::constructor_listWithValue (const GALGAS_lstring & inOperand0,
                                                                              const GALGAS_declarationInRamList & inOperand1
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_ramDefinitionList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_ramDefinitionList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ramDefinitionList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                          const GALGAS_lstring & in_mBankName,
                                                          const GALGAS_declarationInRamList & in_mDeclaration
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement_ramDefinitionList * p = NULL ;
  macroMyNew (p, cCollectionElement_ramDefinitionList (in_mBankName,
                                                       in_mDeclaration COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ramDefinitionList::addAssign_operation (const GALGAS_lstring & inOperand0,
                                                    const GALGAS_declarationInRamList & inOperand1
                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_ramDefinitionList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ramDefinitionList::modifier_insertAtIndex (const GALGAS_lstring inOperand0,
                                                       const GALGAS_declarationInRamList inOperand1,
                                                       const GALGAS_uint inInsertionIndex,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_ramDefinitionList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ramDefinitionList::modifier_removeAtIndex (GALGAS_lstring & outOperand0,
                                                       GALGAS_declarationInRamList & outOperand1,
                                                       const GALGAS_uint inRemoveIndex,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_ramDefinitionList * p = (cCollectionElement_ramDefinitionList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_ramDefinitionList) ;
      outOperand0 = p->mObject.mAttribute_mBankName ;
      outOperand1 = p->mObject.mAttribute_mDeclaration ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ramDefinitionList::modifier_popFirst (GALGAS_lstring & outOperand0,
                                                  GALGAS_declarationInRamList & outOperand1,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ramDefinitionList * p = (cCollectionElement_ramDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ramDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mBankName ;
    outOperand1 = p->mObject.mAttribute_mDeclaration ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ramDefinitionList::modifier_popLast (GALGAS_lstring & outOperand0,
                                                 GALGAS_declarationInRamList & outOperand1,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ramDefinitionList * p = (cCollectionElement_ramDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ramDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mBankName ;
    outOperand1 = p->mObject.mAttribute_mDeclaration ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ramDefinitionList::method_first (GALGAS_lstring & outOperand0,
                                             GALGAS_declarationInRamList & outOperand1,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ramDefinitionList * p = (cCollectionElement_ramDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ramDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mBankName ;
    outOperand1 = p->mObject.mAttribute_mDeclaration ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ramDefinitionList::method_last (GALGAS_lstring & outOperand0,
                                            GALGAS_declarationInRamList & outOperand1,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ramDefinitionList * p = (cCollectionElement_ramDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ramDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mBankName ;
    outOperand1 = p->mObject.mAttribute_mDeclaration ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ramDefinitionList GALGAS_ramDefinitionList::operator_concat (const GALGAS_ramDefinitionList & inOperand
                                                                    COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_ramDefinitionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ramDefinitionList GALGAS_ramDefinitionList::add_operation (const GALGAS_ramDefinitionList & inOperand,
                                                                  C_Compiler * /* inCompiler */
                                                                  COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_ramDefinitionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ramDefinitionList GALGAS_ramDefinitionList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_ramDefinitionList result = GALGAS_ramDefinitionList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ramDefinitionList GALGAS_ramDefinitionList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_ramDefinitionList result = GALGAS_ramDefinitionList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ramDefinitionList::dotAssign_operation (const GALGAS_ramDefinitionList inOperand
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_ramDefinitionList::reader_mBankNameAtIndex (const GALGAS_uint & inIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ramDefinitionList * p = (cCollectionElement_ramDefinitionList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ramDefinitionList) ;
    result = p->mObject.mAttribute_mBankName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declarationInRamList GALGAS_ramDefinitionList::reader_mDeclarationAtIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ramDefinitionList * p = (cCollectionElement_ramDefinitionList *) attributes.ptr () ;
  GALGAS_declarationInRamList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ramDefinitionList) ;
    result = p->mObject.mAttribute_mDeclaration ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_ramDefinitionList::cEnumerator_ramDefinitionList (const GALGAS_ramDefinitionList & inEnumeratedObject,
                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ramDefinitionList_2D_element cEnumerator_ramDefinitionList::current (LOCATION_ARGS) const {
  const cCollectionElement_ramDefinitionList * p = (const cCollectionElement_ramDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_ramDefinitionList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_ramDefinitionList::current_mBankName (LOCATION_ARGS) const {
  const cCollectionElement_ramDefinitionList * p = (const cCollectionElement_ramDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_ramDefinitionList) ;
  return p->mObject.mAttribute_mBankName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declarationInRamList cEnumerator_ramDefinitionList::current_mDeclaration (LOCATION_ARGS) const {
  const cCollectionElement_ramDefinitionList * p = (const cCollectionElement_ramDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_ramDefinitionList) ;
  return p->mObject.mAttribute_mDeclaration ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @ramDefinitionList type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_ramDefinitionList ("ramDefinitionList",
                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_ramDefinitionList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_ramDefinitionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_ramDefinitionList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_ramDefinitionList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ramDefinitionList GALGAS_ramDefinitionList::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_ramDefinitionList result ;
  const GALGAS_ramDefinitionList * p = (const GALGAS_ramDefinitionList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_ramDefinitionList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("ramDefinitionList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   Class for element of '@configSettingList' list                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_configSettingList : public cCollectionElement {
  public : GALGAS_configSettingList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_configSettingList (const GALGAS_lstring & in_mSettingName,
                                                 const GALGAS_lstring & in_mSettingValue
                                                 COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_configSettingList::cCollectionElement_configSettingList (const GALGAS_lstring & in_mSettingName,
                                                                            const GALGAS_lstring & in_mSettingValue
                                                                            COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mSettingName, in_mSettingValue) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_configSettingList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_configSettingList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_configSettingList (mObject.mAttribute_mSettingName, mObject.mAttribute_mSettingValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_configSettingList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSettingName" ":" ;
  mObject.mAttribute_mSettingName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSettingValue" ":" ;
  mObject.mAttribute_mSettingValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_configSettingList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_configSettingList * operand = (cCollectionElement_configSettingList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_configSettingList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configSettingList::GALGAS_configSettingList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configSettingList::GALGAS_configSettingList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configSettingList GALGAS_configSettingList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_configSettingList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configSettingList GALGAS_configSettingList::constructor_listWithValue (const GALGAS_lstring & inOperand0,
                                                                              const GALGAS_lstring & inOperand1
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_configSettingList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_configSettingList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configSettingList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                          const GALGAS_lstring & in_mSettingName,
                                                          const GALGAS_lstring & in_mSettingValue
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement_configSettingList * p = NULL ;
  macroMyNew (p, cCollectionElement_configSettingList (in_mSettingName,
                                                       in_mSettingValue COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configSettingList::addAssign_operation (const GALGAS_lstring & inOperand0,
                                                    const GALGAS_lstring & inOperand1
                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_configSettingList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configSettingList::modifier_insertAtIndex (const GALGAS_lstring inOperand0,
                                                       const GALGAS_lstring inOperand1,
                                                       const GALGAS_uint inInsertionIndex,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_configSettingList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configSettingList::modifier_removeAtIndex (GALGAS_lstring & outOperand0,
                                                       GALGAS_lstring & outOperand1,
                                                       const GALGAS_uint inRemoveIndex,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_configSettingList * p = (cCollectionElement_configSettingList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_configSettingList) ;
      outOperand0 = p->mObject.mAttribute_mSettingName ;
      outOperand1 = p->mObject.mAttribute_mSettingValue ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configSettingList::modifier_popFirst (GALGAS_lstring & outOperand0,
                                                  GALGAS_lstring & outOperand1,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_configSettingList * p = (cCollectionElement_configSettingList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_configSettingList) ;
    outOperand0 = p->mObject.mAttribute_mSettingName ;
    outOperand1 = p->mObject.mAttribute_mSettingValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configSettingList::modifier_popLast (GALGAS_lstring & outOperand0,
                                                 GALGAS_lstring & outOperand1,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_configSettingList * p = (cCollectionElement_configSettingList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_configSettingList) ;
    outOperand0 = p->mObject.mAttribute_mSettingName ;
    outOperand1 = p->mObject.mAttribute_mSettingValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configSettingList::method_first (GALGAS_lstring & outOperand0,
                                             GALGAS_lstring & outOperand1,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_configSettingList * p = (cCollectionElement_configSettingList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_configSettingList) ;
    outOperand0 = p->mObject.mAttribute_mSettingName ;
    outOperand1 = p->mObject.mAttribute_mSettingValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configSettingList::method_last (GALGAS_lstring & outOperand0,
                                            GALGAS_lstring & outOperand1,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_configSettingList * p = (cCollectionElement_configSettingList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_configSettingList) ;
    outOperand0 = p->mObject.mAttribute_mSettingName ;
    outOperand1 = p->mObject.mAttribute_mSettingValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configSettingList GALGAS_configSettingList::operator_concat (const GALGAS_configSettingList & inOperand
                                                                    COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_configSettingList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configSettingList GALGAS_configSettingList::add_operation (const GALGAS_configSettingList & inOperand,
                                                                  C_Compiler * /* inCompiler */
                                                                  COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_configSettingList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configSettingList GALGAS_configSettingList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_configSettingList result = GALGAS_configSettingList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configSettingList GALGAS_configSettingList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_configSettingList result = GALGAS_configSettingList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configSettingList::dotAssign_operation (const GALGAS_configSettingList inOperand
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_configSettingList::reader_mSettingNameAtIndex (const GALGAS_uint & inIndex,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_configSettingList * p = (cCollectionElement_configSettingList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_configSettingList) ;
    result = p->mObject.mAttribute_mSettingName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_configSettingList::reader_mSettingValueAtIndex (const GALGAS_uint & inIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_configSettingList * p = (cCollectionElement_configSettingList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_configSettingList) ;
    result = p->mObject.mAttribute_mSettingValue ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_configSettingList::cEnumerator_configSettingList (const GALGAS_configSettingList & inEnumeratedObject,
                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configSettingList_2D_element cEnumerator_configSettingList::current (LOCATION_ARGS) const {
  const cCollectionElement_configSettingList * p = (const cCollectionElement_configSettingList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_configSettingList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_configSettingList::current_mSettingName (LOCATION_ARGS) const {
  const cCollectionElement_configSettingList * p = (const cCollectionElement_configSettingList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_configSettingList) ;
  return p->mObject.mAttribute_mSettingName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_configSettingList::current_mSettingValue (LOCATION_ARGS) const {
  const cCollectionElement_configSettingList * p = (const cCollectionElement_configSettingList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_configSettingList) ;
  return p->mObject.mAttribute_mSettingValue ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @configSettingList type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_configSettingList ("configSettingList",
                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_configSettingList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_configSettingList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_configSettingList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_configSettingList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configSettingList GALGAS_configSettingList::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_configSettingList result ;
  const GALGAS_configSettingList * p = (const GALGAS_configSettingList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_configSettingList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("configSettingList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  Class for element of '@configDefinitionList' list                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_configDefinitionList : public cCollectionElement {
  public : GALGAS_configDefinitionList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_configDefinitionList (const GALGAS_location & in_mDefinitionLocation,
                                                    const GALGAS_configSettingList & in_mSettingList
                                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_configDefinitionList::cCollectionElement_configDefinitionList (const GALGAS_location & in_mDefinitionLocation,
                                                                                  const GALGAS_configSettingList & in_mSettingList
                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mDefinitionLocation, in_mSettingList) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_configDefinitionList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_configDefinitionList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_configDefinitionList (mObject.mAttribute_mDefinitionLocation, mObject.mAttribute_mSettingList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_configDefinitionList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDefinitionLocation" ":" ;
  mObject.mAttribute_mDefinitionLocation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSettingList" ":" ;
  mObject.mAttribute_mSettingList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_configDefinitionList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_configDefinitionList * operand = (cCollectionElement_configDefinitionList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_configDefinitionList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configDefinitionList::GALGAS_configDefinitionList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configDefinitionList::GALGAS_configDefinitionList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configDefinitionList GALGAS_configDefinitionList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_configDefinitionList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configDefinitionList GALGAS_configDefinitionList::constructor_listWithValue (const GALGAS_location & inOperand0,
                                                                                    const GALGAS_configSettingList & inOperand1
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_configDefinitionList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_configDefinitionList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configDefinitionList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                             const GALGAS_location & in_mDefinitionLocation,
                                                             const GALGAS_configSettingList & in_mSettingList
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_configDefinitionList * p = NULL ;
  macroMyNew (p, cCollectionElement_configDefinitionList (in_mDefinitionLocation,
                                                          in_mSettingList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configDefinitionList::addAssign_operation (const GALGAS_location & inOperand0,
                                                       const GALGAS_configSettingList & inOperand1
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_configDefinitionList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configDefinitionList::modifier_insertAtIndex (const GALGAS_location inOperand0,
                                                          const GALGAS_configSettingList inOperand1,
                                                          const GALGAS_uint inInsertionIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_configDefinitionList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configDefinitionList::modifier_removeAtIndex (GALGAS_location & outOperand0,
                                                          GALGAS_configSettingList & outOperand1,
                                                          const GALGAS_uint inRemoveIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_configDefinitionList * p = (cCollectionElement_configDefinitionList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_configDefinitionList) ;
      outOperand0 = p->mObject.mAttribute_mDefinitionLocation ;
      outOperand1 = p->mObject.mAttribute_mSettingList ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configDefinitionList::modifier_popFirst (GALGAS_location & outOperand0,
                                                     GALGAS_configSettingList & outOperand1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_configDefinitionList * p = (cCollectionElement_configDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_configDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mDefinitionLocation ;
    outOperand1 = p->mObject.mAttribute_mSettingList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configDefinitionList::modifier_popLast (GALGAS_location & outOperand0,
                                                    GALGAS_configSettingList & outOperand1,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_configDefinitionList * p = (cCollectionElement_configDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_configDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mDefinitionLocation ;
    outOperand1 = p->mObject.mAttribute_mSettingList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configDefinitionList::method_first (GALGAS_location & outOperand0,
                                                GALGAS_configSettingList & outOperand1,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_configDefinitionList * p = (cCollectionElement_configDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_configDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mDefinitionLocation ;
    outOperand1 = p->mObject.mAttribute_mSettingList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configDefinitionList::method_last (GALGAS_location & outOperand0,
                                               GALGAS_configSettingList & outOperand1,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_configDefinitionList * p = (cCollectionElement_configDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_configDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mDefinitionLocation ;
    outOperand1 = p->mObject.mAttribute_mSettingList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configDefinitionList GALGAS_configDefinitionList::operator_concat (const GALGAS_configDefinitionList & inOperand
                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_configDefinitionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configDefinitionList GALGAS_configDefinitionList::add_operation (const GALGAS_configDefinitionList & inOperand,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_configDefinitionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configDefinitionList GALGAS_configDefinitionList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_configDefinitionList result = GALGAS_configDefinitionList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configDefinitionList GALGAS_configDefinitionList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_configDefinitionList result = GALGAS_configDefinitionList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configDefinitionList::dotAssign_operation (const GALGAS_configDefinitionList inOperand
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_configDefinitionList::reader_mDefinitionLocationAtIndex (const GALGAS_uint & inIndex,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_configDefinitionList * p = (cCollectionElement_configDefinitionList *) attributes.ptr () ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_configDefinitionList) ;
    result = p->mObject.mAttribute_mDefinitionLocation ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configSettingList GALGAS_configDefinitionList::reader_mSettingListAtIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_configDefinitionList * p = (cCollectionElement_configDefinitionList *) attributes.ptr () ;
  GALGAS_configSettingList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_configDefinitionList) ;
    result = p->mObject.mAttribute_mSettingList ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_configDefinitionList::cEnumerator_configDefinitionList (const GALGAS_configDefinitionList & inEnumeratedObject,
                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configDefinitionList_2D_element cEnumerator_configDefinitionList::current (LOCATION_ARGS) const {
  const cCollectionElement_configDefinitionList * p = (const cCollectionElement_configDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_configDefinitionList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location cEnumerator_configDefinitionList::current_mDefinitionLocation (LOCATION_ARGS) const {
  const cCollectionElement_configDefinitionList * p = (const cCollectionElement_configDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_configDefinitionList) ;
  return p->mObject.mAttribute_mDefinitionLocation ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configSettingList cEnumerator_configDefinitionList::current_mSettingList (LOCATION_ARGS) const {
  const cCollectionElement_configDefinitionList * p = (const cCollectionElement_configDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_configDefinitionList) ;
  return p->mObject.mAttribute_mSettingList ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @configDefinitionList type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_configDefinitionList ("configDefinitionList",
                                             NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_configDefinitionList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_configDefinitionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_configDefinitionList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_configDefinitionList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configDefinitionList GALGAS_configDefinitionList::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_configDefinitionList result ;
  const GALGAS_configDefinitionList * p = (const GALGAS_configDefinitionList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_configDefinitionList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("configDefinitionList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 Class for element of '@immediatExpressionList' list                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_immediatExpressionList : public cCollectionElement {
  public : GALGAS_immediatExpressionList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_immediatExpressionList (const GALGAS_immediatExpression & in_mExpression,
                                                      const GALGAS_location & in_mErrorLocation
                                                      COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_immediatExpressionList::cCollectionElement_immediatExpressionList (const GALGAS_immediatExpression & in_mExpression,
                                                                                      const GALGAS_location & in_mErrorLocation
                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mExpression, in_mErrorLocation) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_immediatExpressionList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_immediatExpressionList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_immediatExpressionList (mObject.mAttribute_mExpression, mObject.mAttribute_mErrorLocation COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_immediatExpressionList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mExpression" ":" ;
  mObject.mAttribute_mExpression.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mErrorLocation" ":" ;
  mObject.mAttribute_mErrorLocation.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_immediatExpressionList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_immediatExpressionList * operand = (cCollectionElement_immediatExpressionList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_immediatExpressionList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatExpressionList::GALGAS_immediatExpressionList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatExpressionList::GALGAS_immediatExpressionList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatExpressionList GALGAS_immediatExpressionList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_immediatExpressionList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatExpressionList GALGAS_immediatExpressionList::constructor_listWithValue (const GALGAS_immediatExpression & inOperand0,
                                                                                        const GALGAS_location & inOperand1
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_immediatExpressionList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_immediatExpressionList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_immediatExpressionList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                               const GALGAS_immediatExpression & in_mExpression,
                                                               const GALGAS_location & in_mErrorLocation
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement_immediatExpressionList * p = NULL ;
  macroMyNew (p, cCollectionElement_immediatExpressionList (in_mExpression,
                                                            in_mErrorLocation COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_immediatExpressionList::addAssign_operation (const GALGAS_immediatExpression & inOperand0,
                                                         const GALGAS_location & inOperand1
                                                         COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_immediatExpressionList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_immediatExpressionList::modifier_insertAtIndex (const GALGAS_immediatExpression inOperand0,
                                                            const GALGAS_location inOperand1,
                                                            const GALGAS_uint inInsertionIndex,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_immediatExpressionList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_immediatExpressionList::modifier_removeAtIndex (GALGAS_immediatExpression & outOperand0,
                                                            GALGAS_location & outOperand1,
                                                            const GALGAS_uint inRemoveIndex,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_immediatExpressionList * p = (cCollectionElement_immediatExpressionList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_immediatExpressionList) ;
      outOperand0 = p->mObject.mAttribute_mExpression ;
      outOperand1 = p->mObject.mAttribute_mErrorLocation ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_immediatExpressionList::modifier_popFirst (GALGAS_immediatExpression & outOperand0,
                                                       GALGAS_location & outOperand1,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_immediatExpressionList * p = (cCollectionElement_immediatExpressionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_immediatExpressionList) ;
    outOperand0 = p->mObject.mAttribute_mExpression ;
    outOperand1 = p->mObject.mAttribute_mErrorLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_immediatExpressionList::modifier_popLast (GALGAS_immediatExpression & outOperand0,
                                                      GALGAS_location & outOperand1,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_immediatExpressionList * p = (cCollectionElement_immediatExpressionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_immediatExpressionList) ;
    outOperand0 = p->mObject.mAttribute_mExpression ;
    outOperand1 = p->mObject.mAttribute_mErrorLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_immediatExpressionList::method_first (GALGAS_immediatExpression & outOperand0,
                                                  GALGAS_location & outOperand1,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_immediatExpressionList * p = (cCollectionElement_immediatExpressionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_immediatExpressionList) ;
    outOperand0 = p->mObject.mAttribute_mExpression ;
    outOperand1 = p->mObject.mAttribute_mErrorLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_immediatExpressionList::method_last (GALGAS_immediatExpression & outOperand0,
                                                 GALGAS_location & outOperand1,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_immediatExpressionList * p = (cCollectionElement_immediatExpressionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_immediatExpressionList) ;
    outOperand0 = p->mObject.mAttribute_mExpression ;
    outOperand1 = p->mObject.mAttribute_mErrorLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatExpressionList GALGAS_immediatExpressionList::operator_concat (const GALGAS_immediatExpressionList & inOperand
                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_immediatExpressionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatExpressionList GALGAS_immediatExpressionList::add_operation (const GALGAS_immediatExpressionList & inOperand,
                                                                            C_Compiler * /* inCompiler */
                                                                            COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_immediatExpressionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatExpressionList GALGAS_immediatExpressionList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_immediatExpressionList result = GALGAS_immediatExpressionList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatExpressionList GALGAS_immediatExpressionList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_immediatExpressionList result = GALGAS_immediatExpressionList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_immediatExpressionList::dotAssign_operation (const GALGAS_immediatExpressionList inOperand
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatExpression GALGAS_immediatExpressionList::reader_mExpressionAtIndex (const GALGAS_uint & inIndex,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_immediatExpressionList * p = (cCollectionElement_immediatExpressionList *) attributes.ptr () ;
  GALGAS_immediatExpression result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_immediatExpressionList) ;
    result = p->mObject.mAttribute_mExpression ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_immediatExpressionList::reader_mErrorLocationAtIndex (const GALGAS_uint & inIndex,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_immediatExpressionList * p = (cCollectionElement_immediatExpressionList *) attributes.ptr () ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_immediatExpressionList) ;
    result = p->mObject.mAttribute_mErrorLocation ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_immediatExpressionList::cEnumerator_immediatExpressionList (const GALGAS_immediatExpressionList & inEnumeratedObject,
                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatExpressionList_2D_element cEnumerator_immediatExpressionList::current (LOCATION_ARGS) const {
  const cCollectionElement_immediatExpressionList * p = (const cCollectionElement_immediatExpressionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_immediatExpressionList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatExpression cEnumerator_immediatExpressionList::current_mExpression (LOCATION_ARGS) const {
  const cCollectionElement_immediatExpressionList * p = (const cCollectionElement_immediatExpressionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_immediatExpressionList) ;
  return p->mObject.mAttribute_mExpression ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location cEnumerator_immediatExpressionList::current_mErrorLocation (LOCATION_ARGS) const {
  const cCollectionElement_immediatExpressionList * p = (const cCollectionElement_immediatExpressionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_immediatExpressionList) ;
  return p->mObject.mAttribute_mErrorLocation ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            @immediatExpressionList type                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_immediatExpressionList ("immediatExpressionList",
                                               NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_immediatExpressionList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_immediatExpressionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_immediatExpressionList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_immediatExpressionList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatExpressionList GALGAS_immediatExpressionList::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_immediatExpressionList result ;
  const GALGAS_immediatExpressionList * p = (const GALGAS_immediatExpressionList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_immediatExpressionList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("immediatExpressionList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              Class for element of '@immediatSliceExpressionList' list                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_immediatSliceExpressionList : public cCollectionElement {
  public : GALGAS_immediatSliceExpressionList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_immediatSliceExpressionList (const GALGAS_lstring & in_mSliceName,
                                                           const GALGAS_immediatExpression & in_mExpression
                                                           COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_immediatSliceExpressionList::cCollectionElement_immediatSliceExpressionList (const GALGAS_lstring & in_mSliceName,
                                                                                                const GALGAS_immediatExpression & in_mExpression
                                                                                                COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mSliceName, in_mExpression) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_immediatSliceExpressionList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_immediatSliceExpressionList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_immediatSliceExpressionList (mObject.mAttribute_mSliceName, mObject.mAttribute_mExpression COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_immediatSliceExpressionList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSliceName" ":" ;
  mObject.mAttribute_mSliceName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mExpression" ":" ;
  mObject.mAttribute_mExpression.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_immediatSliceExpressionList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_immediatSliceExpressionList * operand = (cCollectionElement_immediatSliceExpressionList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_immediatSliceExpressionList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatSliceExpressionList::GALGAS_immediatSliceExpressionList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatSliceExpressionList::GALGAS_immediatSliceExpressionList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatSliceExpressionList GALGAS_immediatSliceExpressionList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_immediatSliceExpressionList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatSliceExpressionList GALGAS_immediatSliceExpressionList::constructor_listWithValue (const GALGAS_lstring & inOperand0,
                                                                                                  const GALGAS_immediatExpression & inOperand1
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_immediatSliceExpressionList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_immediatSliceExpressionList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_immediatSliceExpressionList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                    const GALGAS_lstring & in_mSliceName,
                                                                    const GALGAS_immediatExpression & in_mExpression
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement_immediatSliceExpressionList * p = NULL ;
  macroMyNew (p, cCollectionElement_immediatSliceExpressionList (in_mSliceName,
                                                                 in_mExpression COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_immediatSliceExpressionList::addAssign_operation (const GALGAS_lstring & inOperand0,
                                                              const GALGAS_immediatExpression & inOperand1
                                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_immediatSliceExpressionList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_immediatSliceExpressionList::modifier_insertAtIndex (const GALGAS_lstring inOperand0,
                                                                 const GALGAS_immediatExpression inOperand1,
                                                                 const GALGAS_uint inInsertionIndex,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_immediatSliceExpressionList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_immediatSliceExpressionList::modifier_removeAtIndex (GALGAS_lstring & outOperand0,
                                                                 GALGAS_immediatExpression & outOperand1,
                                                                 const GALGAS_uint inRemoveIndex,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_immediatSliceExpressionList * p = (cCollectionElement_immediatSliceExpressionList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_immediatSliceExpressionList) ;
      outOperand0 = p->mObject.mAttribute_mSliceName ;
      outOperand1 = p->mObject.mAttribute_mExpression ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_immediatSliceExpressionList::modifier_popFirst (GALGAS_lstring & outOperand0,
                                                            GALGAS_immediatExpression & outOperand1,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_immediatSliceExpressionList * p = (cCollectionElement_immediatSliceExpressionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_immediatSliceExpressionList) ;
    outOperand0 = p->mObject.mAttribute_mSliceName ;
    outOperand1 = p->mObject.mAttribute_mExpression ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_immediatSliceExpressionList::modifier_popLast (GALGAS_lstring & outOperand0,
                                                           GALGAS_immediatExpression & outOperand1,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_immediatSliceExpressionList * p = (cCollectionElement_immediatSliceExpressionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_immediatSliceExpressionList) ;
    outOperand0 = p->mObject.mAttribute_mSliceName ;
    outOperand1 = p->mObject.mAttribute_mExpression ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_immediatSliceExpressionList::method_first (GALGAS_lstring & outOperand0,
                                                       GALGAS_immediatExpression & outOperand1,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_immediatSliceExpressionList * p = (cCollectionElement_immediatSliceExpressionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_immediatSliceExpressionList) ;
    outOperand0 = p->mObject.mAttribute_mSliceName ;
    outOperand1 = p->mObject.mAttribute_mExpression ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_immediatSliceExpressionList::method_last (GALGAS_lstring & outOperand0,
                                                      GALGAS_immediatExpression & outOperand1,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_immediatSliceExpressionList * p = (cCollectionElement_immediatSliceExpressionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_immediatSliceExpressionList) ;
    outOperand0 = p->mObject.mAttribute_mSliceName ;
    outOperand1 = p->mObject.mAttribute_mExpression ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatSliceExpressionList GALGAS_immediatSliceExpressionList::operator_concat (const GALGAS_immediatSliceExpressionList & inOperand
                                                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_immediatSliceExpressionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatSliceExpressionList GALGAS_immediatSliceExpressionList::add_operation (const GALGAS_immediatSliceExpressionList & inOperand,
                                                                                      C_Compiler * /* inCompiler */
                                                                                      COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_immediatSliceExpressionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatSliceExpressionList GALGAS_immediatSliceExpressionList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_immediatSliceExpressionList result = GALGAS_immediatSliceExpressionList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatSliceExpressionList GALGAS_immediatSliceExpressionList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_immediatSliceExpressionList result = GALGAS_immediatSliceExpressionList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_immediatSliceExpressionList::dotAssign_operation (const GALGAS_immediatSliceExpressionList inOperand
                                                              COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_immediatSliceExpressionList::reader_mSliceNameAtIndex (const GALGAS_uint & inIndex,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_immediatSliceExpressionList * p = (cCollectionElement_immediatSliceExpressionList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_immediatSliceExpressionList) ;
    result = p->mObject.mAttribute_mSliceName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatExpression GALGAS_immediatSliceExpressionList::reader_mExpressionAtIndex (const GALGAS_uint & inIndex,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_immediatSliceExpressionList * p = (cCollectionElement_immediatSliceExpressionList *) attributes.ptr () ;
  GALGAS_immediatExpression result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_immediatSliceExpressionList) ;
    result = p->mObject.mAttribute_mExpression ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_immediatSliceExpressionList::cEnumerator_immediatSliceExpressionList (const GALGAS_immediatSliceExpressionList & inEnumeratedObject,
                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatSliceExpressionList_2D_element cEnumerator_immediatSliceExpressionList::current (LOCATION_ARGS) const {
  const cCollectionElement_immediatSliceExpressionList * p = (const cCollectionElement_immediatSliceExpressionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_immediatSliceExpressionList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_immediatSliceExpressionList::current_mSliceName (LOCATION_ARGS) const {
  const cCollectionElement_immediatSliceExpressionList * p = (const cCollectionElement_immediatSliceExpressionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_immediatSliceExpressionList) ;
  return p->mObject.mAttribute_mSliceName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatExpression cEnumerator_immediatSliceExpressionList::current_mExpression (LOCATION_ARGS) const {
  const cCollectionElement_immediatSliceExpressionList * p = (const cCollectionElement_immediatSliceExpressionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_immediatSliceExpressionList) ;
  return p->mObject.mAttribute_mExpression ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          @immediatSliceExpressionList type                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_immediatSliceExpressionList ("immediatSliceExpressionList",
                                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_immediatSliceExpressionList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_immediatSliceExpressionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_immediatSliceExpressionList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_immediatSliceExpressionList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatSliceExpressionList GALGAS_immediatSliceExpressionList::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_immediatSliceExpressionList result ;
  const GALGAS_immediatSliceExpressionList * p = (const GALGAS_immediatSliceExpressionList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_immediatSliceExpressionList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("immediatSliceExpressionList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 Class for element of '@constantDefinitionList' list                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_constantDefinitionList : public cCollectionElement {
  public : GALGAS_constantDefinitionList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_constantDefinitionList (const GALGAS_lstring & in_mConstantName,
                                                      const GALGAS_immediatExpression & in_mExpression
                                                      COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_constantDefinitionList::cCollectionElement_constantDefinitionList (const GALGAS_lstring & in_mConstantName,
                                                                                      const GALGAS_immediatExpression & in_mExpression
                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mConstantName, in_mExpression) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_constantDefinitionList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_constantDefinitionList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_constantDefinitionList (mObject.mAttribute_mConstantName, mObject.mAttribute_mExpression COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_constantDefinitionList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mConstantName" ":" ;
  mObject.mAttribute_mConstantName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mExpression" ":" ;
  mObject.mAttribute_mExpression.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_constantDefinitionList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_constantDefinitionList * operand = (cCollectionElement_constantDefinitionList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_constantDefinitionList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constantDefinitionList::GALGAS_constantDefinitionList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constantDefinitionList::GALGAS_constantDefinitionList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constantDefinitionList GALGAS_constantDefinitionList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_constantDefinitionList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constantDefinitionList GALGAS_constantDefinitionList::constructor_listWithValue (const GALGAS_lstring & inOperand0,
                                                                                        const GALGAS_immediatExpression & inOperand1
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_constantDefinitionList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_constantDefinitionList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constantDefinitionList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                               const GALGAS_lstring & in_mConstantName,
                                                               const GALGAS_immediatExpression & in_mExpression
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement_constantDefinitionList * p = NULL ;
  macroMyNew (p, cCollectionElement_constantDefinitionList (in_mConstantName,
                                                            in_mExpression COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constantDefinitionList::addAssign_operation (const GALGAS_lstring & inOperand0,
                                                         const GALGAS_immediatExpression & inOperand1
                                                         COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_constantDefinitionList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constantDefinitionList::modifier_insertAtIndex (const GALGAS_lstring inOperand0,
                                                            const GALGAS_immediatExpression inOperand1,
                                                            const GALGAS_uint inInsertionIndex,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_constantDefinitionList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constantDefinitionList::modifier_removeAtIndex (GALGAS_lstring & outOperand0,
                                                            GALGAS_immediatExpression & outOperand1,
                                                            const GALGAS_uint inRemoveIndex,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_constantDefinitionList * p = (cCollectionElement_constantDefinitionList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_constantDefinitionList) ;
      outOperand0 = p->mObject.mAttribute_mConstantName ;
      outOperand1 = p->mObject.mAttribute_mExpression ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constantDefinitionList::modifier_popFirst (GALGAS_lstring & outOperand0,
                                                       GALGAS_immediatExpression & outOperand1,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_constantDefinitionList * p = (cCollectionElement_constantDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_constantDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mConstantName ;
    outOperand1 = p->mObject.mAttribute_mExpression ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constantDefinitionList::modifier_popLast (GALGAS_lstring & outOperand0,
                                                      GALGAS_immediatExpression & outOperand1,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_constantDefinitionList * p = (cCollectionElement_constantDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_constantDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mConstantName ;
    outOperand1 = p->mObject.mAttribute_mExpression ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constantDefinitionList::method_first (GALGAS_lstring & outOperand0,
                                                  GALGAS_immediatExpression & outOperand1,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_constantDefinitionList * p = (cCollectionElement_constantDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_constantDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mConstantName ;
    outOperand1 = p->mObject.mAttribute_mExpression ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constantDefinitionList::method_last (GALGAS_lstring & outOperand0,
                                                 GALGAS_immediatExpression & outOperand1,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_constantDefinitionList * p = (cCollectionElement_constantDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_constantDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mConstantName ;
    outOperand1 = p->mObject.mAttribute_mExpression ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constantDefinitionList GALGAS_constantDefinitionList::operator_concat (const GALGAS_constantDefinitionList & inOperand
                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_constantDefinitionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constantDefinitionList GALGAS_constantDefinitionList::add_operation (const GALGAS_constantDefinitionList & inOperand,
                                                                            C_Compiler * /* inCompiler */
                                                                            COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_constantDefinitionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constantDefinitionList GALGAS_constantDefinitionList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_constantDefinitionList result = GALGAS_constantDefinitionList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constantDefinitionList GALGAS_constantDefinitionList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_constantDefinitionList result = GALGAS_constantDefinitionList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constantDefinitionList::dotAssign_operation (const GALGAS_constantDefinitionList inOperand
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_constantDefinitionList::reader_mConstantNameAtIndex (const GALGAS_uint & inIndex,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_constantDefinitionList * p = (cCollectionElement_constantDefinitionList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_constantDefinitionList) ;
    result = p->mObject.mAttribute_mConstantName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatExpression GALGAS_constantDefinitionList::reader_mExpressionAtIndex (const GALGAS_uint & inIndex,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_constantDefinitionList * p = (cCollectionElement_constantDefinitionList *) attributes.ptr () ;
  GALGAS_immediatExpression result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_constantDefinitionList) ;
    result = p->mObject.mAttribute_mExpression ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_constantDefinitionList::cEnumerator_constantDefinitionList (const GALGAS_constantDefinitionList & inEnumeratedObject,
                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constantDefinitionList_2D_element cEnumerator_constantDefinitionList::current (LOCATION_ARGS) const {
  const cCollectionElement_constantDefinitionList * p = (const cCollectionElement_constantDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_constantDefinitionList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_constantDefinitionList::current_mConstantName (LOCATION_ARGS) const {
  const cCollectionElement_constantDefinitionList * p = (const cCollectionElement_constantDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_constantDefinitionList) ;
  return p->mObject.mAttribute_mConstantName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatExpression cEnumerator_constantDefinitionList::current_mExpression (LOCATION_ARGS) const {
  const cCollectionElement_constantDefinitionList * p = (const cCollectionElement_constantDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_constantDefinitionList) ;
  return p->mObject.mAttribute_mExpression ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            @constantDefinitionList type                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_constantDefinitionList ("constantDefinitionList",
                                               NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_constantDefinitionList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_constantDefinitionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_constantDefinitionList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_constantDefinitionList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constantDefinitionList GALGAS_constantDefinitionList::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_constantDefinitionList result ;
  const GALGAS_constantDefinitionList * p = (const GALGAS_constantDefinitionList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_constantDefinitionList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("constantDefinitionList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_actualConfigurationMap::cMapElement_actualConfigurationMap (const GALGAS_lstring & inKey,
                                                                        const GALGAS_uint & in_mRegisterAddress,
                                                                        const GALGAS_uint & in_mRegisterValue
                                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mRegisterAddress (in_mRegisterAddress),
mAttribute_mRegisterValue (in_mRegisterValue) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_actualConfigurationMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRegisterAddress.isValid () && mAttribute_mRegisterValue.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_actualConfigurationMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_actualConfigurationMap (mAttribute_lkey, mAttribute_mRegisterAddress, mAttribute_mRegisterValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_actualConfigurationMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRegisterAddress" ":" ;
  mAttribute_mRegisterAddress.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRegisterValue" ":" ;
  mAttribute_mRegisterValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_actualConfigurationMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_actualConfigurationMap * operand = (cMapElement_actualConfigurationMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mRegisterAddress.objectCompare (operand->mAttribute_mRegisterAddress) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRegisterValue.objectCompare (operand->mAttribute_mRegisterValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_actualConfigurationMap::GALGAS_actualConfigurationMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_actualConfigurationMap::GALGAS_actualConfigurationMap (const GALGAS_actualConfigurationMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_actualConfigurationMap & GALGAS_actualConfigurationMap::operator = (const GALGAS_actualConfigurationMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_actualConfigurationMap GALGAS_actualConfigurationMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_actualConfigurationMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_actualConfigurationMap GALGAS_actualConfigurationMap::constructor_mapWithMapToOverride (const GALGAS_actualConfigurationMap & inMapToOverride
                                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_actualConfigurationMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_actualConfigurationMap GALGAS_actualConfigurationMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_actualConfigurationMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_actualConfigurationMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                         const GALGAS_uint & inArgument0,
                                                         const GALGAS_uint & inArgument1,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cMapElement_actualConfigurationMap * p = NULL ;
  macroMyNew (p, cMapElement_actualConfigurationMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@actualConfigurationMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_actualConfigurationMap::modifier_insertKey (GALGAS_lstring inKey,
                                                        GALGAS_uint inArgument0,
                                                        GALGAS_uint inArgument1,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cMapElement_actualConfigurationMap * p = NULL ;
  macroMyNew (p, cMapElement_actualConfigurationMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' configuration register is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_actualConfigurationMap_searchKey = "the '%K' configuration register is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_actualConfigurationMap::method_searchKey (GALGAS_lstring inKey,
                                                      GALGAS_uint & outArgument0,
                                                      GALGAS_uint & outArgument1,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) const {
  const cMapElement_actualConfigurationMap * p = (const cMapElement_actualConfigurationMap *) performSearch (inKey,
                                                                                                               inCompiler,
                                                                                                               kSearchErrorMessage_actualConfigurationMap_searchKey
                                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_actualConfigurationMap) ;
    outArgument0 = p->mAttribute_mRegisterAddress ;
    outArgument1 = p->mAttribute_mRegisterValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_actualConfigurationMap::reader_mRegisterAddressForKey (const GALGAS_string & inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_actualConfigurationMap * p = (const cMapElement_actualConfigurationMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_actualConfigurationMap) ;
    result = p->mAttribute_mRegisterAddress ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_actualConfigurationMap::reader_mRegisterValueForKey (const GALGAS_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_actualConfigurationMap * p = (const cMapElement_actualConfigurationMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_actualConfigurationMap) ;
    result = p->mAttribute_mRegisterValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_actualConfigurationMap::modifier_setMRegisterAddressForKey (GALGAS_uint inAttributeValue,
                                                                        GALGAS_string inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_actualConfigurationMap * p = (cMapElement_actualConfigurationMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_actualConfigurationMap) ;
    p->mAttribute_mRegisterAddress = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_actualConfigurationMap::modifier_setMRegisterValueForKey (GALGAS_uint inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_actualConfigurationMap * p = (cMapElement_actualConfigurationMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_actualConfigurationMap) ;
    p->mAttribute_mRegisterValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_actualConfigurationMap * GALGAS_actualConfigurationMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                       const GALGAS_string & inKey
                                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_actualConfigurationMap * result = (cMapElement_actualConfigurationMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_actualConfigurationMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_actualConfigurationMap::cEnumerator_actualConfigurationMap (const GALGAS_actualConfigurationMap & inEnumeratedObject,
                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_actualConfigurationMap_2D_element cEnumerator_actualConfigurationMap::current (LOCATION_ARGS) const {
  const cMapElement_actualConfigurationMap * p = (const cMapElement_actualConfigurationMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_actualConfigurationMap) ;
  return GALGAS_actualConfigurationMap_2D_element (p->mAttribute_lkey, p->mAttribute_mRegisterAddress, p->mAttribute_mRegisterValue) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_actualConfigurationMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_actualConfigurationMap::current_mRegisterAddress (LOCATION_ARGS) const {
  const cMapElement_actualConfigurationMap * p = (const cMapElement_actualConfigurationMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_actualConfigurationMap) ;
  return p->mAttribute_mRegisterAddress ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_actualConfigurationMap::current_mRegisterValue (LOCATION_ARGS) const {
  const cMapElement_actualConfigurationMap * p = (const cMapElement_actualConfigurationMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_actualConfigurationMap) ;
  return p->mAttribute_mRegisterValue ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            @actualConfigurationMap type                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_actualConfigurationMap ("actualConfigurationMap",
                                               NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_actualConfigurationMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_actualConfigurationMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_actualConfigurationMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_actualConfigurationMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_actualConfigurationMap GALGAS_actualConfigurationMap::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_actualConfigurationMap result ;
  const GALGAS_actualConfigurationMap * p = (const GALGAS_actualConfigurationMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_actualConfigurationMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("actualConfigurationMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_constantMap::cMapElement_constantMap (const GALGAS_lstring & inKey,
                                                  const GALGAS_sint_36__34_ & in_mValue
                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mValue (in_mValue) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_constantMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mValue.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_constantMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_constantMap (mAttribute_lkey, mAttribute_mValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_constantMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mValue" ":" ;
  mAttribute_mValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_constantMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_constantMap * operand = (cMapElement_constantMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mValue.objectCompare (operand->mAttribute_mValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constantMap::GALGAS_constantMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constantMap::GALGAS_constantMap (const GALGAS_constantMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constantMap & GALGAS_constantMap::operator = (const GALGAS_constantMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constantMap GALGAS_constantMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_constantMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constantMap GALGAS_constantMap::constructor_mapWithMapToOverride (const GALGAS_constantMap & inMapToOverride
                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_constantMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constantMap GALGAS_constantMap::reader_overriddenMap (C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_constantMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constantMap::addAssign_operation (const GALGAS_lstring & inKey,
                                              const GALGAS_sint_36__34_ & inArgument0,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  cMapElement_constantMap * p = NULL ;
  macroMyNew (p, cMapElement_constantMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@constantMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constantMap::modifier_insertKey (GALGAS_lstring inKey,
                                             GALGAS_sint_36__34_ inArgument0,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  cMapElement_constantMap * p = NULL ;
  macroMyNew (p, cMapElement_constantMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' constant is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_constantMap_searchKey = "the '%K' constant is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constantMap::method_searchKey (GALGAS_lstring inKey,
                                           GALGAS_sint_36__34_ & outArgument0,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) const {
  const cMapElement_constantMap * p = (const cMapElement_constantMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kSearchErrorMessage_constantMap_searchKey
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_constantMap) ;
    outArgument0 = p->mAttribute_mValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_sint_36__34_ GALGAS_constantMap::reader_mValueForKey (const GALGAS_string & inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_constantMap * p = (const cMapElement_constantMap *) attributes ;
  GALGAS_sint_36__34_ result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_constantMap) ;
    result = p->mAttribute_mValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_constantMap::modifier_setMValueForKey (GALGAS_sint_36__34_ inAttributeValue,
                                                   GALGAS_string inKey,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_constantMap * p = (cMapElement_constantMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_constantMap) ;
    p->mAttribute_mValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_constantMap * GALGAS_constantMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                 const GALGAS_string & inKey
                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_constantMap * result = (cMapElement_constantMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_constantMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_constantMap::cEnumerator_constantMap (const GALGAS_constantMap & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constantMap_2D_element cEnumerator_constantMap::current (LOCATION_ARGS) const {
  const cMapElement_constantMap * p = (const cMapElement_constantMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_constantMap) ;
  return GALGAS_constantMap_2D_element (p->mAttribute_lkey, p->mAttribute_mValue) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_constantMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_sint_36__34_ cEnumerator_constantMap::current_mValue (LOCATION_ARGS) const {
  const cMapElement_constantMap * p = (const cMapElement_constantMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_constantMap) ;
  return p->mAttribute_mValue ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                  @constantMap type                                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_constantMap ("constantMap",
                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_constantMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_constantMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_constantMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_constantMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_constantMap GALGAS_constantMap::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_constantMap result ;
  const GALGAS_constantMap * p = (const GALGAS_constantMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_constantMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("constantMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_routineMap::cMapElement_routineMap (const GALGAS_lstring & inKey,
                                                const GALGAS_bool & in_mIsNoReturn,
                                                const GALGAS_uint & in_mRequiredBank,
                                                const GALGAS_uint & in_mReturnedBank,
                                                const GALGAS_bool & in_mPreservesBank
                                                COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mIsNoReturn (in_mIsNoReturn),
mAttribute_mRequiredBank (in_mRequiredBank),
mAttribute_mReturnedBank (in_mReturnedBank),
mAttribute_mPreservesBank (in_mPreservesBank) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_routineMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIsNoReturn.isValid () && mAttribute_mRequiredBank.isValid () && mAttribute_mReturnedBank.isValid () && mAttribute_mPreservesBank.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_routineMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_routineMap (mAttribute_lkey, mAttribute_mIsNoReturn, mAttribute_mRequiredBank, mAttribute_mReturnedBank, mAttribute_mPreservesBank COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_routineMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsNoReturn" ":" ;
  mAttribute_mIsNoReturn.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRequiredBank" ":" ;
  mAttribute_mRequiredBank.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mReturnedBank" ":" ;
  mAttribute_mReturnedBank.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPreservesBank" ":" ;
  mAttribute_mPreservesBank.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_routineMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_routineMap * operand = (cMapElement_routineMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mIsNoReturn.objectCompare (operand->mAttribute_mIsNoReturn) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRequiredBank.objectCompare (operand->mAttribute_mRequiredBank) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mReturnedBank.objectCompare (operand->mAttribute_mReturnedBank) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mPreservesBank.objectCompare (operand->mAttribute_mPreservesBank) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMap::GALGAS_routineMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMap::GALGAS_routineMap (const GALGAS_routineMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMap & GALGAS_routineMap::operator = (const GALGAS_routineMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMap GALGAS_routineMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_routineMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMap GALGAS_routineMap::constructor_mapWithMapToOverride (const GALGAS_routineMap & inMapToOverride
                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_routineMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMap GALGAS_routineMap::reader_overriddenMap (C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  GALGAS_routineMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMap::addAssign_operation (const GALGAS_lstring & inKey,
                                             const GALGAS_bool & inArgument0,
                                             const GALGAS_uint & inArgument1,
                                             const GALGAS_uint & inArgument2,
                                             const GALGAS_bool & inArgument3,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  cMapElement_routineMap * p = NULL ;
  macroMyNew (p, cMapElement_routineMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@routineMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMap::modifier_insertKey (GALGAS_lstring inKey,
                                            GALGAS_bool inArgument0,
                                            GALGAS_uint inArgument1,
                                            GALGAS_uint inArgument2,
                                            GALGAS_bool inArgument3,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  cMapElement_routineMap * p = NULL ;
  macroMyNew (p, cMapElement_routineMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' routine is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_routineMap_searchKey = "the '%K' routine is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMap::method_searchKey (GALGAS_lstring inKey,
                                          GALGAS_bool & outArgument0,
                                          GALGAS_uint & outArgument1,
                                          GALGAS_uint & outArgument2,
                                          GALGAS_bool & outArgument3,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) const {
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) performSearch (inKey,
                                                                                       inCompiler,
                                                                                       kSearchErrorMessage_routineMap_searchKey
                                                                                       COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_routineMap) ;
    outArgument0 = p->mAttribute_mIsNoReturn ;
    outArgument1 = p->mAttribute_mRequiredBank ;
    outArgument2 = p->mAttribute_mReturnedBank ;
    outArgument3 = p->mAttribute_mPreservesBank ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineMap::reader_mIsNoReturnForKey (const GALGAS_string & inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMap) ;
    result = p->mAttribute_mIsNoReturn ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_routineMap::reader_mRequiredBankForKey (const GALGAS_string & inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMap) ;
    result = p->mAttribute_mRequiredBank ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_routineMap::reader_mReturnedBankForKey (const GALGAS_string & inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMap) ;
    result = p->mAttribute_mReturnedBank ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineMap::reader_mPreservesBankForKey (const GALGAS_string & inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMap) ;
    result = p->mAttribute_mPreservesBank ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMap::modifier_setMIsNoReturnForKey (GALGAS_bool inAttributeValue,
                                                       GALGAS_string inKey,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMap * p = (cMapElement_routineMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMap) ;
    p->mAttribute_mIsNoReturn = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMap::modifier_setMRequiredBankForKey (GALGAS_uint inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMap * p = (cMapElement_routineMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMap) ;
    p->mAttribute_mRequiredBank = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMap::modifier_setMReturnedBankForKey (GALGAS_uint inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMap * p = (cMapElement_routineMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMap) ;
    p->mAttribute_mReturnedBank = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineMap::modifier_setMPreservesBankForKey (GALGAS_bool inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMap * p = (cMapElement_routineMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMap) ;
    p->mAttribute_mPreservesBank = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_routineMap * GALGAS_routineMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                               const GALGAS_string & inKey
                                                                               COMMA_LOCATION_ARGS) {
  cMapElement_routineMap * result = (cMapElement_routineMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_routineMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_routineMap::cEnumerator_routineMap (const GALGAS_routineMap & inEnumeratedObject,
                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMap_2D_element cEnumerator_routineMap::current (LOCATION_ARGS) const {
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMap) ;
  return GALGAS_routineMap_2D_element (p->mAttribute_lkey, p->mAttribute_mIsNoReturn, p->mAttribute_mRequiredBank, p->mAttribute_mReturnedBank, p->mAttribute_mPreservesBank) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_routineMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_routineMap::current_mIsNoReturn (LOCATION_ARGS) const {
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMap) ;
  return p->mAttribute_mIsNoReturn ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_routineMap::current_mRequiredBank (LOCATION_ARGS) const {
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMap) ;
  return p->mAttribute_mRequiredBank ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_routineMap::current_mReturnedBank (LOCATION_ARGS) const {
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMap) ;
  return p->mAttribute_mReturnedBank ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_routineMap::current_mPreservesBank (LOCATION_ARGS) const {
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMap) ;
  return p->mAttribute_mPreservesBank ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                  @routineMap type                                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_routineMap ("routineMap",
                                   NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_routineMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_routineMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_routineMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_routineMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineMap GALGAS_routineMap::extractObject (const GALGAS_object & inObject,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  GALGAS_routineMap result ;
  const GALGAS_routineMap * p = (const GALGAS_routineMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_routineMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("routineMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineKind::GALGAS_routineKind (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineKind GALGAS_routineKind::constructor_regularRoutine (UNUSED_LOCATION_ARGS) {
  GALGAS_routineKind result ;
  result.mEnum = kEnum_regularRoutine ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineKind GALGAS_routineKind::constructor_noReturnRoutine (UNUSED_LOCATION_ARGS) {
  GALGAS_routineKind result ;
  result.mEnum = kEnum_noReturnRoutine ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineKind GALGAS_routineKind::constructor_interruptRoutine (UNUSED_LOCATION_ARGS) {
  GALGAS_routineKind result ;
  result.mEnum = kEnum_interruptRoutine ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_routineKind [4] = {
  "(not built)",
  "regularRoutine",
  "noReturnRoutine",
  "interruptRoutine"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineKind::reader_isRegularRoutine (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_regularRoutine == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineKind::reader_isNoReturnRoutine (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_noReturnRoutine == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineKind::reader_isInterruptRoutine (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_interruptRoutine == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineKind::description (C_String & ioString,
                                      const int32_t /* inIndentation */) const {
  ioString << "<enum @routineKind: " << gEnumNameArrayFor_routineKind [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_routineKind::objectCompare (const GALGAS_routineKind & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                  @routineKind type                                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_routineKind ("routineKind",
                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_routineKind::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_routineKind ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_routineKind::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_routineKind (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineKind GALGAS_routineKind::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_routineKind result ;
  const GALGAS_routineKind * p = (const GALGAS_routineKind *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_routineKind *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("routineKind", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_symbolTableForOptimizations::cMapElement_symbolTableForOptimizations (const GALGAS_lstring & inKey,
                                                                                  const GALGAS_uint & in_mDefinitionLineIndex,
                                                                                  const GALGAS_bool & in_mIsDeletable
                                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mDefinitionLineIndex (in_mDefinitionLineIndex),
mAttribute_mIsDeletable (in_mIsDeletable) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_symbolTableForOptimizations::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mDefinitionLineIndex.isValid () && mAttribute_mIsDeletable.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_symbolTableForOptimizations::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_symbolTableForOptimizations (mAttribute_lkey, mAttribute_mDefinitionLineIndex, mAttribute_mIsDeletable COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_symbolTableForOptimizations::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDefinitionLineIndex" ":" ;
  mAttribute_mDefinitionLineIndex.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsDeletable" ":" ;
  mAttribute_mIsDeletable.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_symbolTableForOptimizations::compare (const cCollectionElement * inOperand) const {
  cMapElement_symbolTableForOptimizations * operand = (cMapElement_symbolTableForOptimizations *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mDefinitionLineIndex.objectCompare (operand->mAttribute_mDefinitionLineIndex) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mIsDeletable.objectCompare (operand->mAttribute_mIsDeletable) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForOptimizations::GALGAS_symbolTableForOptimizations (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForOptimizations::GALGAS_symbolTableForOptimizations (const GALGAS_symbolTableForOptimizations & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForOptimizations & GALGAS_symbolTableForOptimizations::operator = (const GALGAS_symbolTableForOptimizations & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForOptimizations GALGAS_symbolTableForOptimizations::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_symbolTableForOptimizations result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForOptimizations GALGAS_symbolTableForOptimizations::constructor_mapWithMapToOverride (const GALGAS_symbolTableForOptimizations & inMapToOverride
                                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_symbolTableForOptimizations result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForOptimizations GALGAS_symbolTableForOptimizations::reader_overriddenMap (C_Compiler * inCompiler
                                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_symbolTableForOptimizations result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_symbolTableForOptimizations::addAssign_operation (const GALGAS_lstring & inKey,
                                                              const GALGAS_uint & inArgument0,
                                                              const GALGAS_bool & inArgument1,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cMapElement_symbolTableForOptimizations * p = NULL ;
  macroMyNew (p, cMapElement_symbolTableForOptimizations (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@symbolTableForOptimizations insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_symbolTableForOptimizations::modifier_insertKey (GALGAS_lstring inKey,
                                                             GALGAS_uint inArgument0,
                                                             GALGAS_bool inArgument1,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cMapElement_symbolTableForOptimizations * p = NULL ;
  macroMyNew (p, cMapElement_symbolTableForOptimizations (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' label is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_symbolTableForOptimizations_searchKey = "the '%K' label is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_symbolTableForOptimizations::method_searchKey (GALGAS_lstring inKey,
                                                           GALGAS_uint & outArgument0,
                                                           GALGAS_bool & outArgument1,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  const cMapElement_symbolTableForOptimizations * p = (const cMapElement_symbolTableForOptimizations *) performSearch (inKey,
                                                                                                                         inCompiler,
                                                                                                                         kSearchErrorMessage_symbolTableForOptimizations_searchKey
                                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_symbolTableForOptimizations) ;
    outArgument0 = p->mAttribute_mDefinitionLineIndex ;
    outArgument1 = p->mAttribute_mIsDeletable ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_symbolTableForOptimizations::modifier_removeKey (GALGAS_lstring inKey,
                                                             GALGAS_uint & outArgument0,
                                                             GALGAS_bool & outArgument1,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  const char * kRemoveErrorMessage = "the '%K' label is not declared" ;
  capCollectionElement attributes ;
  performRemove (inKey, attributes, inCompiler, kRemoveErrorMessage COMMA_THERE) ;
  cMapElement_symbolTableForOptimizations * p = (cMapElement_symbolTableForOptimizations *) attributes.ptr () ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_symbolTableForOptimizations) ;
    outArgument0 = p->mAttribute_mDefinitionLineIndex ;
    outArgument1 = p->mAttribute_mIsDeletable ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_symbolTableForOptimizations::reader_mDefinitionLineIndexForKey (const GALGAS_string & inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_symbolTableForOptimizations * p = (const cMapElement_symbolTableForOptimizations *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_symbolTableForOptimizations) ;
    result = p->mAttribute_mDefinitionLineIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_symbolTableForOptimizations::reader_mIsDeletableForKey (const GALGAS_string & inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_symbolTableForOptimizations * p = (const cMapElement_symbolTableForOptimizations *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_symbolTableForOptimizations) ;
    result = p->mAttribute_mIsDeletable ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_symbolTableForOptimizations::modifier_setMDefinitionLineIndexForKey (GALGAS_uint inAttributeValue,
                                                                                 GALGAS_string inKey,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_symbolTableForOptimizations * p = (cMapElement_symbolTableForOptimizations *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_symbolTableForOptimizations) ;
    p->mAttribute_mDefinitionLineIndex = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_symbolTableForOptimizations::modifier_setMIsDeletableForKey (GALGAS_bool inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_symbolTableForOptimizations * p = (cMapElement_symbolTableForOptimizations *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_symbolTableForOptimizations) ;
    p->mAttribute_mIsDeletable = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_symbolTableForOptimizations * GALGAS_symbolTableForOptimizations::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                                 const GALGAS_string & inKey
                                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_symbolTableForOptimizations * result = (cMapElement_symbolTableForOptimizations *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_symbolTableForOptimizations) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_symbolTableForOptimizations::cEnumerator_symbolTableForOptimizations (const GALGAS_symbolTableForOptimizations & inEnumeratedObject,
                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForOptimizations_2D_element cEnumerator_symbolTableForOptimizations::current (LOCATION_ARGS) const {
  const cMapElement_symbolTableForOptimizations * p = (const cMapElement_symbolTableForOptimizations *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_symbolTableForOptimizations) ;
  return GALGAS_symbolTableForOptimizations_2D_element (p->mAttribute_lkey, p->mAttribute_mDefinitionLineIndex, p->mAttribute_mIsDeletable) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_symbolTableForOptimizations::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_symbolTableForOptimizations::current_mDefinitionLineIndex (LOCATION_ARGS) const {
  const cMapElement_symbolTableForOptimizations * p = (const cMapElement_symbolTableForOptimizations *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_symbolTableForOptimizations) ;
  return p->mAttribute_mDefinitionLineIndex ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_symbolTableForOptimizations::current_mIsDeletable (LOCATION_ARGS) const {
  const cMapElement_symbolTableForOptimizations * p = (const cMapElement_symbolTableForOptimizations *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_symbolTableForOptimizations) ;
  return p->mAttribute_mIsDeletable ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          @symbolTableForOptimizations type                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_symbolTableForOptimizations ("symbolTableForOptimizations",
                                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_symbolTableForOptimizations::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_symbolTableForOptimizations ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_symbolTableForOptimizations::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_symbolTableForOptimizations (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForOptimizations GALGAS_symbolTableForOptimizations::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_symbolTableForOptimizations result ;
  const GALGAS_symbolTableForOptimizations * p = (const GALGAS_symbolTableForOptimizations *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_symbolTableForOptimizations *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("symbolTableForOptimizations", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_configFieldMap::cMapElement_configFieldMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_lstring & in_mRegisterName,
                                                        const GALGAS_luint & in_mMaskValue,
                                                        const GALGAS_lstring & in_mDescription,
                                                        const GALGAS_fieldSettingMap & in_mFieldSettingMap
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mRegisterName (in_mRegisterName),
mAttribute_mMaskValue (in_mMaskValue),
mAttribute_mDescription (in_mDescription),
mAttribute_mFieldSettingMap (in_mFieldSettingMap) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_configFieldMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRegisterName.isValid () && mAttribute_mMaskValue.isValid () && mAttribute_mDescription.isValid () && mAttribute_mFieldSettingMap.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_configFieldMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_configFieldMap (mAttribute_lkey, mAttribute_mRegisterName, mAttribute_mMaskValue, mAttribute_mDescription, mAttribute_mFieldSettingMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_configFieldMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRegisterName" ":" ;
  mAttribute_mRegisterName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mMaskValue" ":" ;
  mAttribute_mMaskValue.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDescription" ":" ;
  mAttribute_mDescription.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFieldSettingMap" ":" ;
  mAttribute_mFieldSettingMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_configFieldMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_configFieldMap * operand = (cMapElement_configFieldMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mRegisterName.objectCompare (operand->mAttribute_mRegisterName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mMaskValue.objectCompare (operand->mAttribute_mMaskValue) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mDescription.objectCompare (operand->mAttribute_mDescription) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFieldSettingMap.objectCompare (operand->mAttribute_mFieldSettingMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configFieldMap::GALGAS_configFieldMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configFieldMap::GALGAS_configFieldMap (const GALGAS_configFieldMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configFieldMap & GALGAS_configFieldMap::operator = (const GALGAS_configFieldMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configFieldMap GALGAS_configFieldMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_configFieldMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configFieldMap GALGAS_configFieldMap::constructor_mapWithMapToOverride (const GALGAS_configFieldMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_configFieldMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configFieldMap GALGAS_configFieldMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_configFieldMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configFieldMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                 const GALGAS_lstring & inArgument0,
                                                 const GALGAS_luint & inArgument1,
                                                 const GALGAS_lstring & inArgument2,
                                                 const GALGAS_fieldSettingMap & inArgument3,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_configFieldMap * p = NULL ;
  macroMyNew (p, cMapElement_configFieldMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@configFieldMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configFieldMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_lstring inArgument0,
                                                GALGAS_luint inArgument1,
                                                GALGAS_lstring inArgument2,
                                                GALGAS_fieldSettingMap inArgument3,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_configFieldMap * p = NULL ;
  macroMyNew (p, cMapElement_configFieldMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' configuration field is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_configFieldMap_searchKey = "the '%K' configuration field is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configFieldMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_lstring & outArgument0,
                                              GALGAS_luint & outArgument1,
                                              GALGAS_lstring & outArgument2,
                                              GALGAS_fieldSettingMap & outArgument3,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_configFieldMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_configFieldMap) ;
    outArgument0 = p->mAttribute_mRegisterName ;
    outArgument1 = p->mAttribute_mMaskValue ;
    outArgument2 = p->mAttribute_mDescription ;
    outArgument3 = p->mAttribute_mFieldSettingMap ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_configFieldMap::reader_mRegisterNameForKey (const GALGAS_string & inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_configFieldMap) ;
    result = p->mAttribute_mRegisterName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint GALGAS_configFieldMap::reader_mMaskValueForKey (const GALGAS_string & inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) attributes ;
  GALGAS_luint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_configFieldMap) ;
    result = p->mAttribute_mMaskValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_configFieldMap::reader_mDescriptionForKey (const GALGAS_string & inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_configFieldMap) ;
    result = p->mAttribute_mDescription ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_fieldSettingMap GALGAS_configFieldMap::reader_mFieldSettingMapForKey (const GALGAS_string & inKey,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) attributes ;
  GALGAS_fieldSettingMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_configFieldMap) ;
    result = p->mAttribute_mFieldSettingMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configFieldMap::modifier_setMRegisterNameForKey (GALGAS_lstring inAttributeValue,
                                                             GALGAS_string inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_configFieldMap * p = (cMapElement_configFieldMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_configFieldMap) ;
    p->mAttribute_mRegisterName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configFieldMap::modifier_setMMaskValueForKey (GALGAS_luint inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_configFieldMap * p = (cMapElement_configFieldMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_configFieldMap) ;
    p->mAttribute_mMaskValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configFieldMap::modifier_setMDescriptionForKey (GALGAS_lstring inAttributeValue,
                                                            GALGAS_string inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_configFieldMap * p = (cMapElement_configFieldMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_configFieldMap) ;
    p->mAttribute_mDescription = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_configFieldMap::modifier_setMFieldSettingMapForKey (GALGAS_fieldSettingMap inAttributeValue,
                                                                GALGAS_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_configFieldMap * p = (cMapElement_configFieldMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_configFieldMap) ;
    p->mAttribute_mFieldSettingMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_configFieldMap * GALGAS_configFieldMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                       const GALGAS_string & inKey
                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_configFieldMap * result = (cMapElement_configFieldMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_configFieldMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_configFieldMap::cEnumerator_configFieldMap (const GALGAS_configFieldMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configFieldMap_2D_element cEnumerator_configFieldMap::current (LOCATION_ARGS) const {
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_configFieldMap) ;
  return GALGAS_configFieldMap_2D_element (p->mAttribute_lkey, p->mAttribute_mRegisterName, p->mAttribute_mMaskValue, p->mAttribute_mDescription, p->mAttribute_mFieldSettingMap) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_configFieldMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_configFieldMap::current_mRegisterName (LOCATION_ARGS) const {
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_configFieldMap) ;
  return p->mAttribute_mRegisterName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint cEnumerator_configFieldMap::current_mMaskValue (LOCATION_ARGS) const {
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_configFieldMap) ;
  return p->mAttribute_mMaskValue ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_configFieldMap::current_mDescription (LOCATION_ARGS) const {
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_configFieldMap) ;
  return p->mAttribute_mDescription ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_fieldSettingMap cEnumerator_configFieldMap::current_mFieldSettingMap (LOCATION_ARGS) const {
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_configFieldMap) ;
  return p->mAttribute_mFieldSettingMap ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @configFieldMap type                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_configFieldMap ("configFieldMap",
                                       NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_configFieldMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_configFieldMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_configFieldMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_configFieldMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_configFieldMap GALGAS_configFieldMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_configFieldMap result ;
  const GALGAS_configFieldMap * p = (const GALGAS_configFieldMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_configFieldMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("configFieldMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_fieldSettingMap::cMapElement_fieldSettingMap (const GALGAS_lstring & inKey,
                                                          const GALGAS_uint & in_mValue,
                                                          const GALGAS_uint & in_mMask
                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mValue (in_mValue),
mAttribute_mMask (in_mMask) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_fieldSettingMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mValue.isValid () && mAttribute_mMask.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_fieldSettingMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_fieldSettingMap (mAttribute_lkey, mAttribute_mValue, mAttribute_mMask COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_fieldSettingMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mValue" ":" ;
  mAttribute_mValue.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mMask" ":" ;
  mAttribute_mMask.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_fieldSettingMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_fieldSettingMap * operand = (cMapElement_fieldSettingMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mValue.objectCompare (operand->mAttribute_mValue) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mMask.objectCompare (operand->mAttribute_mMask) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_fieldSettingMap::GALGAS_fieldSettingMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_fieldSettingMap::GALGAS_fieldSettingMap (const GALGAS_fieldSettingMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_fieldSettingMap & GALGAS_fieldSettingMap::operator = (const GALGAS_fieldSettingMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_fieldSettingMap GALGAS_fieldSettingMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_fieldSettingMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_fieldSettingMap GALGAS_fieldSettingMap::constructor_mapWithMapToOverride (const GALGAS_fieldSettingMap & inMapToOverride
                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_fieldSettingMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_fieldSettingMap GALGAS_fieldSettingMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_fieldSettingMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_fieldSettingMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                  const GALGAS_uint & inArgument0,
                                                  const GALGAS_uint & inArgument1,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  cMapElement_fieldSettingMap * p = NULL ;
  macroMyNew (p, cMapElement_fieldSettingMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@fieldSettingMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_fieldSettingMap::modifier_insertKey (GALGAS_lstring inKey,
                                                 GALGAS_uint inArgument0,
                                                 GALGAS_uint inArgument1,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_fieldSettingMap * p = NULL ;
  macroMyNew (p, cMapElement_fieldSettingMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' configuration register setting is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_fieldSettingMap_searchKey = "the '%K' configuration register setting is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_fieldSettingMap::method_searchKey (GALGAS_lstring inKey,
                                               GALGAS_uint & outArgument0,
                                               GALGAS_uint & outArgument1,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  const cMapElement_fieldSettingMap * p = (const cMapElement_fieldSettingMap *) performSearch (inKey,
                                                                                                 inCompiler,
                                                                                                 kSearchErrorMessage_fieldSettingMap_searchKey
                                                                                                 COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_fieldSettingMap) ;
    outArgument0 = p->mAttribute_mValue ;
    outArgument1 = p->mAttribute_mMask ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_fieldSettingMap::reader_mValueForKey (const GALGAS_string & inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_fieldSettingMap * p = (const cMapElement_fieldSettingMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_fieldSettingMap) ;
    result = p->mAttribute_mValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_fieldSettingMap::reader_mMaskForKey (const GALGAS_string & inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_fieldSettingMap * p = (const cMapElement_fieldSettingMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_fieldSettingMap) ;
    result = p->mAttribute_mMask ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_fieldSettingMap::modifier_setMValueForKey (GALGAS_uint inAttributeValue,
                                                       GALGAS_string inKey,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_fieldSettingMap * p = (cMapElement_fieldSettingMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_fieldSettingMap) ;
    p->mAttribute_mValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_fieldSettingMap::modifier_setMMaskForKey (GALGAS_uint inAttributeValue,
                                                      GALGAS_string inKey,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_fieldSettingMap * p = (cMapElement_fieldSettingMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_fieldSettingMap) ;
    p->mAttribute_mMask = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_fieldSettingMap * GALGAS_fieldSettingMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                         const GALGAS_string & inKey
                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement_fieldSettingMap * result = (cMapElement_fieldSettingMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_fieldSettingMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_fieldSettingMap::cEnumerator_fieldSettingMap (const GALGAS_fieldSettingMap & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_fieldSettingMap_2D_element cEnumerator_fieldSettingMap::current (LOCATION_ARGS) const {
  const cMapElement_fieldSettingMap * p = (const cMapElement_fieldSettingMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_fieldSettingMap) ;
  return GALGAS_fieldSettingMap_2D_element (p->mAttribute_lkey, p->mAttribute_mValue, p->mAttribute_mMask) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_fieldSettingMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_fieldSettingMap::current_mValue (LOCATION_ARGS) const {
  const cMapElement_fieldSettingMap * p = (const cMapElement_fieldSettingMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_fieldSettingMap) ;
  return p->mAttribute_mValue ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_fieldSettingMap::current_mMask (LOCATION_ARGS) const {
  const cMapElement_fieldSettingMap * p = (const cMapElement_fieldSettingMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_fieldSettingMap) ;
  return p->mAttribute_mMask ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @fieldSettingMap type                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_fieldSettingMap ("fieldSettingMap",
                                        NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_fieldSettingMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_fieldSettingMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_fieldSettingMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_fieldSettingMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_fieldSettingMap GALGAS_fieldSettingMap::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_fieldSettingMap result ;
  const GALGAS_fieldSettingMap * p = (const GALGAS_fieldSettingMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_fieldSettingMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("fieldSettingMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_ADDWF (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_ADDWF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_ANDWF (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_ANDWF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_COMF (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_COMF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_DECF (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_DECF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_DECFSZ (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_DECFSZ ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_INCF (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_INCF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_INCFSZ (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_INCFSZ ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_IORWF (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_IORWF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_MOVF (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_MOVF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_RLF (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_RLF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_RRF (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_RRF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_SUBWF (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_SUBWF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_SWAPF (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_SWAPF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_XORWF (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_XORWF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_baseline_5F_instruction_5F_FD_5F_base_5F_code [15] = {
  "(not built)",
  "ADDWF",
  "ANDWF",
  "COMF",
  "DECF",
  "DECFSZ",
  "INCF",
  "INCFSZ",
  "IORWF",
  "MOVF",
  "RLF",
  "RRF",
  "SUBWF",
  "SWAPF",
  "XORWF"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::reader_isADDWF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_ADDWF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::reader_isANDWF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_ANDWF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::reader_isCOMF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_COMF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::reader_isDECF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_DECF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::reader_isDECFSZ (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_DECFSZ == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::reader_isINCF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_INCF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::reader_isINCFSZ (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_INCFSZ == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::reader_isIORWF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_IORWF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::reader_isMOVF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_MOVF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::reader_isRLF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_RLF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::reader_isRRF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_RRF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::reader_isSUBWF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_SUBWF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::reader_isSWAPF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_SWAPF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::reader_isXORWF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_XORWF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::description (C_String & ioString,
                                                                        const int32_t /* inIndentation */) const {
  ioString << "<enum @baseline_instruction_FD_base_code: " << gEnumNameArrayFor_baseline_5F_instruction_5F_FD_5F_base_5F_code [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::objectCompare (const GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       @baseline_instruction_FD_base_code type                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code ("baseline_instruction_FD_base_code",
                                                                      NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::extractObject (const GALGAS_object & inObject,
                                                                                                                          C_Compiler * inCompiler
                                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code result ;
  const GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code * p = (const GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("baseline_instruction_FD_base_code", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code::GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code::constructor_CLRF (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code result ;
  result.mEnum = kEnum_CLRF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code::constructor_MOVWF (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code result ;
  result.mEnum = kEnum_MOVWF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_baseline_5F_F_5F_instruction_5F_base_5F_code [3] = {
  "(not built)",
  "CLRF",
  "MOVWF"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code::reader_isCLRF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_CLRF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code::reader_isMOVWF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_MOVWF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code::description (C_String & ioString,
                                                                       const int32_t /* inIndentation */) const {
  ioString << "<enum @baseline_F_instruction_base_code: " << gEnumNameArrayFor_baseline_5F_F_5F_instruction_5F_base_5F_code [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code::objectCompare (const GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       @baseline_F_instruction_base_code type                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code ("baseline_F_instruction_base_code",
                                                                     NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code::extractObject (const GALGAS_object & inObject,
                                                                                                                        C_Compiler * inCompiler
                                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code result ;
  const GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code * p = (const GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("baseline_F_instruction_base_code", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_bit_5F_oriented_5F_op::GALGAS_baseline_5F_bit_5F_oriented_5F_op (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_bit_5F_oriented_5F_op GALGAS_baseline_5F_bit_5F_oriented_5F_op::constructor_BCF (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_bit_5F_oriented_5F_op result ;
  result.mEnum = kEnum_BCF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_bit_5F_oriented_5F_op GALGAS_baseline_5F_bit_5F_oriented_5F_op::constructor_BSF (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_bit_5F_oriented_5F_op result ;
  result.mEnum = kEnum_BSF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_baseline_5F_bit_5F_oriented_5F_op [3] = {
  "(not built)",
  "BCF",
  "BSF"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_bit_5F_oriented_5F_op::reader_isBCF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_BCF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_bit_5F_oriented_5F_op::reader_isBSF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_BSF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_bit_5F_oriented_5F_op::description (C_String & ioString,
                                                            const int32_t /* inIndentation */) const {
  ioString << "<enum @baseline_bit_oriented_op: " << gEnumNameArrayFor_baseline_5F_bit_5F_oriented_5F_op [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_baseline_5F_bit_5F_oriented_5F_op::objectCompare (const GALGAS_baseline_5F_bit_5F_oriented_5F_op & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @baseline_bit_oriented_op type                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_baseline_5F_bit_5F_oriented_5F_op ("baseline_bit_oriented_op",
                                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_baseline_5F_bit_5F_oriented_5F_op::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_baseline_5F_bit_5F_oriented_5F_op ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_baseline_5F_bit_5F_oriented_5F_op::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_baseline_5F_bit_5F_oriented_5F_op (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_bit_5F_oriented_5F_op GALGAS_baseline_5F_bit_5F_oriented_5F_op::extractObject (const GALGAS_object & inObject,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_bit_5F_oriented_5F_op result ;
  const GALGAS_baseline_5F_bit_5F_oriented_5F_op * p = (const GALGAS_baseline_5F_bit_5F_oriented_5F_op *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_baseline_5F_bit_5F_oriented_5F_op *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("baseline_bit_oriented_op", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::GALGAS_baseline_5F_literal_5F_instruction_5F_opcode (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_literal_5F_instruction_5F_opcode GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::constructor_ANDLW (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_literal_5F_instruction_5F_opcode result ;
  result.mEnum = kEnum_ANDLW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_literal_5F_instruction_5F_opcode GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::constructor_IORLW (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_literal_5F_instruction_5F_opcode result ;
  result.mEnum = kEnum_IORLW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_literal_5F_instruction_5F_opcode GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::constructor_MOVLW (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_literal_5F_instruction_5F_opcode result ;
  result.mEnum = kEnum_MOVLW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_literal_5F_instruction_5F_opcode GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::constructor_RETLW (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_literal_5F_instruction_5F_opcode result ;
  result.mEnum = kEnum_RETLW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_literal_5F_instruction_5F_opcode GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::constructor_XORLW (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_literal_5F_instruction_5F_opcode result ;
  result.mEnum = kEnum_XORLW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_baseline_5F_literal_5F_instruction_5F_opcode [6] = {
  "(not built)",
  "ANDLW",
  "IORLW",
  "MOVLW",
  "RETLW",
  "XORLW"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::reader_isANDLW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_ANDLW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::reader_isIORLW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_IORLW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::reader_isMOVLW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_MOVLW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::reader_isRETLW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_RETLW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::reader_isXORLW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_XORLW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::description (C_String & ioString,
                                                                       const int32_t /* inIndentation */) const {
  ioString << "<enum @baseline_literal_instruction_opcode: " << gEnumNameArrayFor_baseline_5F_literal_5F_instruction_5F_opcode [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::objectCompare (const GALGAS_baseline_5F_literal_5F_instruction_5F_opcode & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      @baseline_literal_instruction_opcode type                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_baseline_5F_literal_5F_instruction_5F_opcode ("baseline_literal_instruction_opcode",
                                                                     NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_baseline_5F_literal_5F_instruction_5F_opcode ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_baseline_5F_literal_5F_instruction_5F_opcode (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_literal_5F_instruction_5F_opcode GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::extractObject (const GALGAS_object & inObject,
                                                                                                                        C_Compiler * inCompiler
                                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_literal_5F_instruction_5F_opcode result ;
  const GALGAS_baseline_5F_literal_5F_instruction_5F_opcode * p = (const GALGAS_baseline_5F_literal_5F_instruction_5F_opcode *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_baseline_5F_literal_5F_instruction_5F_opcode *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("baseline_literal_instruction_opcode", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode::GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode::constructor_BTFSS (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode result ;
  result.mEnum = kEnum_BTFSS ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode::constructor_BTFSC (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode result ;
  result.mEnum = kEnum_BTFSC ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_baseline_5F_IF_5F_BitTest_5F_opcode [3] = {
  "(not built)",
  "BTFSS",
  "BTFSC"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode::reader_isBTFSS (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_BTFSS == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode::reader_isBTFSC (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_BTFSC == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode::description (C_String & ioString,
                                                              const int32_t /* inIndentation */) const {
  ioString << "<enum @baseline_IF_BitTest_opcode: " << gEnumNameArrayFor_baseline_5F_IF_5F_BitTest_5F_opcode [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode::objectCompare (const GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          @baseline_IF_BitTest_opcode type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode ("baseline_IF_BitTest_opcode",
                                                            NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode::extractObject (const GALGAS_object & inObject,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode result ;
  const GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode * p = (const GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_baseline_5F_IF_5F_BitTest_5F_opcode *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("baseline_IF_BitTest_opcode", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::GALGAS_baseline_5F_WO_5F_OPERAND_5F_group (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_WO_5F_OPERAND_5F_group GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::constructor_CLRW (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_WO_5F_OPERAND_5F_group result ;
  result.mEnum = kEnum_CLRW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_WO_5F_OPERAND_5F_group GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::constructor_NOP (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_WO_5F_OPERAND_5F_group result ;
  result.mEnum = kEnum_NOP ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_WO_5F_OPERAND_5F_group GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::constructor_CLRWDT (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_WO_5F_OPERAND_5F_group result ;
  result.mEnum = kEnum_CLRWDT ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_WO_5F_OPERAND_5F_group GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::constructor_OPTION_5F_ (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_WO_5F_OPERAND_5F_group result ;
  result.mEnum = kEnum_OPTION_5F_ ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_WO_5F_OPERAND_5F_group GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::constructor_SLEEP (UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_WO_5F_OPERAND_5F_group result ;
  result.mEnum = kEnum_SLEEP ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_baseline_5F_WO_5F_OPERAND_5F_group [6] = {
  "(not built)",
  "CLRW",
  "NOP",
  "CLRWDT",
  "OPTION_",
  "SLEEP"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::reader_isCLRW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_CLRW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::reader_isNOP (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_NOP == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::reader_isCLRWDT (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_CLRWDT == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::reader_isOPTION_5F_ (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_OPTION_5F_ == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::reader_isSLEEP (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_SLEEP == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::description (C_String & ioString,
                                                             const int32_t /* inIndentation */) const {
  ioString << "<enum @baseline_WO_OPERAND_group: " << gEnumNameArrayFor_baseline_5F_WO_5F_OPERAND_5F_group [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::objectCompare (const GALGAS_baseline_5F_WO_5F_OPERAND_5F_group & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @baseline_WO_OPERAND_group type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_baseline_5F_WO_5F_OPERAND_5F_group ("baseline_WO_OPERAND_group",
                                                           NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_baseline_5F_WO_5F_OPERAND_5F_group ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_baseline_5F_WO_5F_OPERAND_5F_group (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_WO_5F_OPERAND_5F_group GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::extractObject (const GALGAS_object & inObject,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_WO_5F_OPERAND_5F_group result ;
  const GALGAS_baseline_5F_WO_5F_OPERAND_5F_group * p = (const GALGAS_baseline_5F_WO_5F_OPERAND_5F_group *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_baseline_5F_WO_5F_OPERAND_5F_group *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("baseline_WO_OPERAND_group", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              Class for element of '@baseline_5F_instructionList' list                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_baseline_5F_instructionList : public cCollectionElement {
  public : GALGAS_baseline_5F_instructionList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_baseline_5F_instructionList (const GALGAS_baseline_5F_instruction & in_mInstruction
                                                           COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_baseline_5F_instructionList::cCollectionElement_baseline_5F_instructionList (const GALGAS_baseline_5F_instruction & in_mInstruction
                                                                                                COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mInstruction) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_baseline_5F_instructionList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_baseline_5F_instructionList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_baseline_5F_instructionList (mObject.mAttribute_mInstruction COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_baseline_5F_instructionList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstruction" ":" ;
  mObject.mAttribute_mInstruction.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_baseline_5F_instructionList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_baseline_5F_instructionList * operand = (cCollectionElement_baseline_5F_instructionList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_baseline_5F_instructionList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instructionList::GALGAS_baseline_5F_instructionList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instructionList::GALGAS_baseline_5F_instructionList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instructionList GALGAS_baseline_5F_instructionList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_baseline_5F_instructionList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instructionList GALGAS_baseline_5F_instructionList::constructor_listWithValue (const GALGAS_baseline_5F_instruction & inOperand0
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_instructionList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_baseline_5F_instructionList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_instructionList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                    const GALGAS_baseline_5F_instruction & in_mInstruction
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement_baseline_5F_instructionList * p = NULL ;
  macroMyNew (p, cCollectionElement_baseline_5F_instructionList (in_mInstruction COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_instructionList::addAssign_operation (const GALGAS_baseline_5F_instruction & inOperand0
                                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_baseline_5F_instructionList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_instructionList::modifier_insertAtIndex (const GALGAS_baseline_5F_instruction inOperand0,
                                                                 const GALGAS_uint inInsertionIndex,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_baseline_5F_instructionList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_instructionList::modifier_removeAtIndex (GALGAS_baseline_5F_instruction & outOperand0,
                                                                 const GALGAS_uint inRemoveIndex,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_baseline_5F_instructionList * p = (cCollectionElement_baseline_5F_instructionList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_baseline_5F_instructionList) ;
      outOperand0 = p->mObject.mAttribute_mInstruction ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_instructionList::modifier_popFirst (GALGAS_baseline_5F_instruction & outOperand0,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_instructionList * p = (cCollectionElement_baseline_5F_instructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_baseline_5F_instructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_instructionList::modifier_popLast (GALGAS_baseline_5F_instruction & outOperand0,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_instructionList * p = (cCollectionElement_baseline_5F_instructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_baseline_5F_instructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_instructionList::method_first (GALGAS_baseline_5F_instruction & outOperand0,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_instructionList * p = (cCollectionElement_baseline_5F_instructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_baseline_5F_instructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_instructionList::method_last (GALGAS_baseline_5F_instruction & outOperand0,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_instructionList * p = (cCollectionElement_baseline_5F_instructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_baseline_5F_instructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instructionList GALGAS_baseline_5F_instructionList::operator_concat (const GALGAS_baseline_5F_instructionList & inOperand
                                                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_baseline_5F_instructionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instructionList GALGAS_baseline_5F_instructionList::add_operation (const GALGAS_baseline_5F_instructionList & inOperand,
                                                                                      C_Compiler * /* inCompiler */
                                                                                      COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_baseline_5F_instructionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instructionList GALGAS_baseline_5F_instructionList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_baseline_5F_instructionList result = GALGAS_baseline_5F_instructionList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instructionList GALGAS_baseline_5F_instructionList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_baseline_5F_instructionList result = GALGAS_baseline_5F_instructionList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_instructionList::dotAssign_operation (const GALGAS_baseline_5F_instructionList inOperand
                                                              COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instruction GALGAS_baseline_5F_instructionList::reader_mInstructionAtIndex (const GALGAS_uint & inIndex,
                                                                                               C_Compiler * inCompiler
                                                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_instructionList * p = (cCollectionElement_baseline_5F_instructionList *) attributes.ptr () ;
  GALGAS_baseline_5F_instruction result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_baseline_5F_instructionList) ;
    result = p->mObject.mAttribute_mInstruction ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_baseline_5F_instructionList::cEnumerator_baseline_5F_instructionList (const GALGAS_baseline_5F_instructionList & inEnumeratedObject,
                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instructionList_2D_element cEnumerator_baseline_5F_instructionList::current (LOCATION_ARGS) const {
  const cCollectionElement_baseline_5F_instructionList * p = (const cCollectionElement_baseline_5F_instructionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_baseline_5F_instructionList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instruction cEnumerator_baseline_5F_instructionList::current_mInstruction (LOCATION_ARGS) const {
  const cCollectionElement_baseline_5F_instructionList * p = (const cCollectionElement_baseline_5F_instructionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_baseline_5F_instructionList) ;
  return p->mObject.mAttribute_mInstruction ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @baseline_instructionList type                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_baseline_5F_instructionList ("baseline_instructionList",
                                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_baseline_5F_instructionList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_baseline_5F_instructionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_baseline_5F_instructionList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_baseline_5F_instructionList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instructionList GALGAS_baseline_5F_instructionList::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_instructionList result ;
  const GALGAS_baseline_5F_instructionList * p = (const GALGAS_baseline_5F_instructionList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_baseline_5F_instructionList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("baseline_instructionList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  Class for element of '@baseline_5F_partList' list                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_baseline_5F_partList : public cCollectionElement {
  public : GALGAS_baseline_5F_partList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_baseline_5F_partList (const GALGAS_baseline_5F_conditionExpression & in_mCondition,
                                                    const GALGAS_baseline_5F_instructionList & in_mInstructionList,
                                                    const GALGAS_location & in_mEndOfPartLocation
                                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_baseline_5F_partList::cCollectionElement_baseline_5F_partList (const GALGAS_baseline_5F_conditionExpression & in_mCondition,
                                                                                  const GALGAS_baseline_5F_instructionList & in_mInstructionList,
                                                                                  const GALGAS_location & in_mEndOfPartLocation
                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mCondition, in_mInstructionList, in_mEndOfPartLocation) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_baseline_5F_partList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_baseline_5F_partList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_baseline_5F_partList (mObject.mAttribute_mCondition, mObject.mAttribute_mInstructionList, mObject.mAttribute_mEndOfPartLocation COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_baseline_5F_partList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCondition" ":" ;
  mObject.mAttribute_mCondition.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstructionList" ":" ;
  mObject.mAttribute_mInstructionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEndOfPartLocation" ":" ;
  mObject.mAttribute_mEndOfPartLocation.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_baseline_5F_partList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_baseline_5F_partList * operand = (cCollectionElement_baseline_5F_partList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_baseline_5F_partList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_partList::GALGAS_baseline_5F_partList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_partList::GALGAS_baseline_5F_partList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_partList GALGAS_baseline_5F_partList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_baseline_5F_partList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_partList GALGAS_baseline_5F_partList::constructor_listWithValue (const GALGAS_baseline_5F_conditionExpression & inOperand0,
                                                                                    const GALGAS_baseline_5F_instructionList & inOperand1,
                                                                                    const GALGAS_location & inOperand2
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_partList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_baseline_5F_partList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_partList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                             const GALGAS_baseline_5F_conditionExpression & in_mCondition,
                                                             const GALGAS_baseline_5F_instructionList & in_mInstructionList,
                                                             const GALGAS_location & in_mEndOfPartLocation
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_baseline_5F_partList * p = NULL ;
  macroMyNew (p, cCollectionElement_baseline_5F_partList (in_mCondition,
                                                          in_mInstructionList,
                                                          in_mEndOfPartLocation COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_partList::addAssign_operation (const GALGAS_baseline_5F_conditionExpression & inOperand0,
                                                       const GALGAS_baseline_5F_instructionList & inOperand1,
                                                       const GALGAS_location & inOperand2
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_baseline_5F_partList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_partList::modifier_insertAtIndex (const GALGAS_baseline_5F_conditionExpression inOperand0,
                                                          const GALGAS_baseline_5F_instructionList inOperand1,
                                                          const GALGAS_location inOperand2,
                                                          const GALGAS_uint inInsertionIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_baseline_5F_partList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_partList::modifier_removeAtIndex (GALGAS_baseline_5F_conditionExpression & outOperand0,
                                                          GALGAS_baseline_5F_instructionList & outOperand1,
                                                          GALGAS_location & outOperand2,
                                                          const GALGAS_uint inRemoveIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_baseline_5F_partList * p = (cCollectionElement_baseline_5F_partList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_baseline_5F_partList) ;
      outOperand0 = p->mObject.mAttribute_mCondition ;
      outOperand1 = p->mObject.mAttribute_mInstructionList ;
      outOperand2 = p->mObject.mAttribute_mEndOfPartLocation ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_partList::modifier_popFirst (GALGAS_baseline_5F_conditionExpression & outOperand0,
                                                     GALGAS_baseline_5F_instructionList & outOperand1,
                                                     GALGAS_location & outOperand2,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_partList * p = (cCollectionElement_baseline_5F_partList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_baseline_5F_partList) ;
    outOperand0 = p->mObject.mAttribute_mCondition ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mEndOfPartLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_partList::modifier_popLast (GALGAS_baseline_5F_conditionExpression & outOperand0,
                                                    GALGAS_baseline_5F_instructionList & outOperand1,
                                                    GALGAS_location & outOperand2,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_partList * p = (cCollectionElement_baseline_5F_partList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_baseline_5F_partList) ;
    outOperand0 = p->mObject.mAttribute_mCondition ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mEndOfPartLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_partList::method_first (GALGAS_baseline_5F_conditionExpression & outOperand0,
                                                GALGAS_baseline_5F_instructionList & outOperand1,
                                                GALGAS_location & outOperand2,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_partList * p = (cCollectionElement_baseline_5F_partList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_baseline_5F_partList) ;
    outOperand0 = p->mObject.mAttribute_mCondition ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mEndOfPartLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_partList::method_last (GALGAS_baseline_5F_conditionExpression & outOperand0,
                                               GALGAS_baseline_5F_instructionList & outOperand1,
                                               GALGAS_location & outOperand2,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_partList * p = (cCollectionElement_baseline_5F_partList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_baseline_5F_partList) ;
    outOperand0 = p->mObject.mAttribute_mCondition ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mEndOfPartLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_partList GALGAS_baseline_5F_partList::operator_concat (const GALGAS_baseline_5F_partList & inOperand
                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_baseline_5F_partList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_partList GALGAS_baseline_5F_partList::add_operation (const GALGAS_baseline_5F_partList & inOperand,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_baseline_5F_partList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_partList GALGAS_baseline_5F_partList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_baseline_5F_partList result = GALGAS_baseline_5F_partList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_partList GALGAS_baseline_5F_partList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_baseline_5F_partList result = GALGAS_baseline_5F_partList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_partList::dotAssign_operation (const GALGAS_baseline_5F_partList inOperand
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_conditionExpression GALGAS_baseline_5F_partList::reader_mConditionAtIndex (const GALGAS_uint & inIndex,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_partList * p = (cCollectionElement_baseline_5F_partList *) attributes.ptr () ;
  GALGAS_baseline_5F_conditionExpression result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_baseline_5F_partList) ;
    result = p->mObject.mAttribute_mCondition ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instructionList GALGAS_baseline_5F_partList::reader_mInstructionListAtIndex (const GALGAS_uint & inIndex,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_partList * p = (cCollectionElement_baseline_5F_partList *) attributes.ptr () ;
  GALGAS_baseline_5F_instructionList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_baseline_5F_partList) ;
    result = p->mObject.mAttribute_mInstructionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_baseline_5F_partList::reader_mEndOfPartLocationAtIndex (const GALGAS_uint & inIndex,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_partList * p = (cCollectionElement_baseline_5F_partList *) attributes.ptr () ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_baseline_5F_partList) ;
    result = p->mObject.mAttribute_mEndOfPartLocation ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_baseline_5F_partList::cEnumerator_baseline_5F_partList (const GALGAS_baseline_5F_partList & inEnumeratedObject,
                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_partList_2D_element cEnumerator_baseline_5F_partList::current (LOCATION_ARGS) const {
  const cCollectionElement_baseline_5F_partList * p = (const cCollectionElement_baseline_5F_partList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_baseline_5F_partList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_conditionExpression cEnumerator_baseline_5F_partList::current_mCondition (LOCATION_ARGS) const {
  const cCollectionElement_baseline_5F_partList * p = (const cCollectionElement_baseline_5F_partList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_baseline_5F_partList) ;
  return p->mObject.mAttribute_mCondition ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instructionList cEnumerator_baseline_5F_partList::current_mInstructionList (LOCATION_ARGS) const {
  const cCollectionElement_baseline_5F_partList * p = (const cCollectionElement_baseline_5F_partList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_baseline_5F_partList) ;
  return p->mObject.mAttribute_mInstructionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location cEnumerator_baseline_5F_partList::current_mEndOfPartLocation (LOCATION_ARGS) const {
  const cCollectionElement_baseline_5F_partList * p = (const cCollectionElement_baseline_5F_partList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_baseline_5F_partList) ;
  return p->mObject.mAttribute_mEndOfPartLocation ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @baseline_partList type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_baseline_5F_partList ("baseline_partList",
                                             NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_baseline_5F_partList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_baseline_5F_partList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_baseline_5F_partList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_baseline_5F_partList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_partList GALGAS_baseline_5F_partList::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_partList result ;
  const GALGAS_baseline_5F_partList * p = (const GALGAS_baseline_5F_partList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_baseline_5F_partList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("baseline_partList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           Class for element of '@baseline_5F_routineDefinitionList' list                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_baseline_5F_routineDefinitionList : public cCollectionElement {
  public : GALGAS_baseline_5F_routineDefinitionList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_baseline_5F_routineDefinitionList (const GALGAS_lstring & in_mRoutineName,
                                                                 const GALGAS_luint & in_mPage,
                                                                 const GALGAS_bool & in_mIsNoReturn,
                                                                 const GALGAS_baseline_5F_instructionList & in_mInstructionList,
                                                                 const GALGAS_location & in_mEndOfRoutineLocation
                                                                 COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_baseline_5F_routineDefinitionList::cCollectionElement_baseline_5F_routineDefinitionList (const GALGAS_lstring & in_mRoutineName,
                                                                                                            const GALGAS_luint & in_mPage,
                                                                                                            const GALGAS_bool & in_mIsNoReturn,
                                                                                                            const GALGAS_baseline_5F_instructionList & in_mInstructionList,
                                                                                                            const GALGAS_location & in_mEndOfRoutineLocation
                                                                                                            COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mRoutineName, in_mPage, in_mIsNoReturn, in_mInstructionList, in_mEndOfRoutineLocation) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_baseline_5F_routineDefinitionList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_baseline_5F_routineDefinitionList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_baseline_5F_routineDefinitionList (mObject.mAttribute_mRoutineName, mObject.mAttribute_mPage, mObject.mAttribute_mIsNoReturn, mObject.mAttribute_mInstructionList, mObject.mAttribute_mEndOfRoutineLocation COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_baseline_5F_routineDefinitionList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRoutineName" ":" ;
  mObject.mAttribute_mRoutineName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPage" ":" ;
  mObject.mAttribute_mPage.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsNoReturn" ":" ;
  mObject.mAttribute_mIsNoReturn.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstructionList" ":" ;
  mObject.mAttribute_mInstructionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEndOfRoutineLocation" ":" ;
  mObject.mAttribute_mEndOfRoutineLocation.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_baseline_5F_routineDefinitionList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_baseline_5F_routineDefinitionList * operand = (cCollectionElement_baseline_5F_routineDefinitionList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_baseline_5F_routineDefinitionList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_routineDefinitionList::GALGAS_baseline_5F_routineDefinitionList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_routineDefinitionList::GALGAS_baseline_5F_routineDefinitionList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_routineDefinitionList GALGAS_baseline_5F_routineDefinitionList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_baseline_5F_routineDefinitionList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_routineDefinitionList GALGAS_baseline_5F_routineDefinitionList::constructor_listWithValue (const GALGAS_lstring & inOperand0,
                                                                                                              const GALGAS_luint & inOperand1,
                                                                                                              const GALGAS_bool & inOperand2,
                                                                                                              const GALGAS_baseline_5F_instructionList & inOperand3,
                                                                                                              const GALGAS_location & inOperand4
                                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_routineDefinitionList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_baseline_5F_routineDefinitionList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3, inOperand4 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_routineDefinitionList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                          const GALGAS_lstring & in_mRoutineName,
                                                                          const GALGAS_luint & in_mPage,
                                                                          const GALGAS_bool & in_mIsNoReturn,
                                                                          const GALGAS_baseline_5F_instructionList & in_mInstructionList,
                                                                          const GALGAS_location & in_mEndOfRoutineLocation
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement_baseline_5F_routineDefinitionList * p = NULL ;
  macroMyNew (p, cCollectionElement_baseline_5F_routineDefinitionList (in_mRoutineName,
                                                                       in_mPage,
                                                                       in_mIsNoReturn,
                                                                       in_mInstructionList,
                                                                       in_mEndOfRoutineLocation COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_routineDefinitionList::addAssign_operation (const GALGAS_lstring & inOperand0,
                                                                    const GALGAS_luint & inOperand1,
                                                                    const GALGAS_bool & inOperand2,
                                                                    const GALGAS_baseline_5F_instructionList & inOperand3,
                                                                    const GALGAS_location & inOperand4
                                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_baseline_5F_routineDefinitionList (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_routineDefinitionList::modifier_insertAtIndex (const GALGAS_lstring inOperand0,
                                                                       const GALGAS_luint inOperand1,
                                                                       const GALGAS_bool inOperand2,
                                                                       const GALGAS_baseline_5F_instructionList inOperand3,
                                                                       const GALGAS_location inOperand4,
                                                                       const GALGAS_uint inInsertionIndex,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_baseline_5F_routineDefinitionList (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_routineDefinitionList::modifier_removeAtIndex (GALGAS_lstring & outOperand0,
                                                                       GALGAS_luint & outOperand1,
                                                                       GALGAS_bool & outOperand2,
                                                                       GALGAS_baseline_5F_instructionList & outOperand3,
                                                                       GALGAS_location & outOperand4,
                                                                       const GALGAS_uint inRemoveIndex,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_baseline_5F_routineDefinitionList * p = (cCollectionElement_baseline_5F_routineDefinitionList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
      outOperand3.drop () ;
      outOperand4.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_baseline_5F_routineDefinitionList) ;
      outOperand0 = p->mObject.mAttribute_mRoutineName ;
      outOperand1 = p->mObject.mAttribute_mPage ;
      outOperand2 = p->mObject.mAttribute_mIsNoReturn ;
      outOperand3 = p->mObject.mAttribute_mInstructionList ;
      outOperand4 = p->mObject.mAttribute_mEndOfRoutineLocation ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_routineDefinitionList::modifier_popFirst (GALGAS_lstring & outOperand0,
                                                                  GALGAS_luint & outOperand1,
                                                                  GALGAS_bool & outOperand2,
                                                                  GALGAS_baseline_5F_instructionList & outOperand3,
                                                                  GALGAS_location & outOperand4,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_routineDefinitionList * p = (cCollectionElement_baseline_5F_routineDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_baseline_5F_routineDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mRoutineName ;
    outOperand1 = p->mObject.mAttribute_mPage ;
    outOperand2 = p->mObject.mAttribute_mIsNoReturn ;
    outOperand3 = p->mObject.mAttribute_mInstructionList ;
    outOperand4 = p->mObject.mAttribute_mEndOfRoutineLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_routineDefinitionList::modifier_popLast (GALGAS_lstring & outOperand0,
                                                                 GALGAS_luint & outOperand1,
                                                                 GALGAS_bool & outOperand2,
                                                                 GALGAS_baseline_5F_instructionList & outOperand3,
                                                                 GALGAS_location & outOperand4,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_routineDefinitionList * p = (cCollectionElement_baseline_5F_routineDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_baseline_5F_routineDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mRoutineName ;
    outOperand1 = p->mObject.mAttribute_mPage ;
    outOperand2 = p->mObject.mAttribute_mIsNoReturn ;
    outOperand3 = p->mObject.mAttribute_mInstructionList ;
    outOperand4 = p->mObject.mAttribute_mEndOfRoutineLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_routineDefinitionList::method_first (GALGAS_lstring & outOperand0,
                                                             GALGAS_luint & outOperand1,
                                                             GALGAS_bool & outOperand2,
                                                             GALGAS_baseline_5F_instructionList & outOperand3,
                                                             GALGAS_location & outOperand4,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_routineDefinitionList * p = (cCollectionElement_baseline_5F_routineDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_baseline_5F_routineDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mRoutineName ;
    outOperand1 = p->mObject.mAttribute_mPage ;
    outOperand2 = p->mObject.mAttribute_mIsNoReturn ;
    outOperand3 = p->mObject.mAttribute_mInstructionList ;
    outOperand4 = p->mObject.mAttribute_mEndOfRoutineLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_routineDefinitionList::method_last (GALGAS_lstring & outOperand0,
                                                            GALGAS_luint & outOperand1,
                                                            GALGAS_bool & outOperand2,
                                                            GALGAS_baseline_5F_instructionList & outOperand3,
                                                            GALGAS_location & outOperand4,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_routineDefinitionList * p = (cCollectionElement_baseline_5F_routineDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_baseline_5F_routineDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mRoutineName ;
    outOperand1 = p->mObject.mAttribute_mPage ;
    outOperand2 = p->mObject.mAttribute_mIsNoReturn ;
    outOperand3 = p->mObject.mAttribute_mInstructionList ;
    outOperand4 = p->mObject.mAttribute_mEndOfRoutineLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_routineDefinitionList GALGAS_baseline_5F_routineDefinitionList::operator_concat (const GALGAS_baseline_5F_routineDefinitionList & inOperand
                                                                                                    COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_baseline_5F_routineDefinitionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_routineDefinitionList GALGAS_baseline_5F_routineDefinitionList::add_operation (const GALGAS_baseline_5F_routineDefinitionList & inOperand,
                                                                                                  C_Compiler * /* inCompiler */
                                                                                                  COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_baseline_5F_routineDefinitionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_routineDefinitionList GALGAS_baseline_5F_routineDefinitionList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_baseline_5F_routineDefinitionList result = GALGAS_baseline_5F_routineDefinitionList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_routineDefinitionList GALGAS_baseline_5F_routineDefinitionList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_baseline_5F_routineDefinitionList result = GALGAS_baseline_5F_routineDefinitionList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_routineDefinitionList::dotAssign_operation (const GALGAS_baseline_5F_routineDefinitionList inOperand
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_baseline_5F_routineDefinitionList::reader_mRoutineNameAtIndex (const GALGAS_uint & inIndex,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_routineDefinitionList * p = (cCollectionElement_baseline_5F_routineDefinitionList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_baseline_5F_routineDefinitionList) ;
    result = p->mObject.mAttribute_mRoutineName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint GALGAS_baseline_5F_routineDefinitionList::reader_mPageAtIndex (const GALGAS_uint & inIndex,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_routineDefinitionList * p = (cCollectionElement_baseline_5F_routineDefinitionList *) attributes.ptr () ;
  GALGAS_luint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_baseline_5F_routineDefinitionList) ;
    result = p->mObject.mAttribute_mPage ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baseline_5F_routineDefinitionList::reader_mIsNoReturnAtIndex (const GALGAS_uint & inIndex,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_routineDefinitionList * p = (cCollectionElement_baseline_5F_routineDefinitionList *) attributes.ptr () ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_baseline_5F_routineDefinitionList) ;
    result = p->mObject.mAttribute_mIsNoReturn ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instructionList GALGAS_baseline_5F_routineDefinitionList::reader_mInstructionListAtIndex (const GALGAS_uint & inIndex,
                                                                                                             C_Compiler * inCompiler
                                                                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_routineDefinitionList * p = (cCollectionElement_baseline_5F_routineDefinitionList *) attributes.ptr () ;
  GALGAS_baseline_5F_instructionList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_baseline_5F_routineDefinitionList) ;
    result = p->mObject.mAttribute_mInstructionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_baseline_5F_routineDefinitionList::reader_mEndOfRoutineLocationAtIndex (const GALGAS_uint & inIndex,
                                                                                               C_Compiler * inCompiler
                                                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_routineDefinitionList * p = (cCollectionElement_baseline_5F_routineDefinitionList *) attributes.ptr () ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_baseline_5F_routineDefinitionList) ;
    result = p->mObject.mAttribute_mEndOfRoutineLocation ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_baseline_5F_routineDefinitionList::cEnumerator_baseline_5F_routineDefinitionList (const GALGAS_baseline_5F_routineDefinitionList & inEnumeratedObject,
                                                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_routineDefinitionList_2D_element cEnumerator_baseline_5F_routineDefinitionList::current (LOCATION_ARGS) const {
  const cCollectionElement_baseline_5F_routineDefinitionList * p = (const cCollectionElement_baseline_5F_routineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_baseline_5F_routineDefinitionList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_baseline_5F_routineDefinitionList::current_mRoutineName (LOCATION_ARGS) const {
  const cCollectionElement_baseline_5F_routineDefinitionList * p = (const cCollectionElement_baseline_5F_routineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_baseline_5F_routineDefinitionList) ;
  return p->mObject.mAttribute_mRoutineName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint cEnumerator_baseline_5F_routineDefinitionList::current_mPage (LOCATION_ARGS) const {
  const cCollectionElement_baseline_5F_routineDefinitionList * p = (const cCollectionElement_baseline_5F_routineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_baseline_5F_routineDefinitionList) ;
  return p->mObject.mAttribute_mPage ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_baseline_5F_routineDefinitionList::current_mIsNoReturn (LOCATION_ARGS) const {
  const cCollectionElement_baseline_5F_routineDefinitionList * p = (const cCollectionElement_baseline_5F_routineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_baseline_5F_routineDefinitionList) ;
  return p->mObject.mAttribute_mIsNoReturn ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_instructionList cEnumerator_baseline_5F_routineDefinitionList::current_mInstructionList (LOCATION_ARGS) const {
  const cCollectionElement_baseline_5F_routineDefinitionList * p = (const cCollectionElement_baseline_5F_routineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_baseline_5F_routineDefinitionList) ;
  return p->mObject.mAttribute_mInstructionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location cEnumerator_baseline_5F_routineDefinitionList::current_mEndOfRoutineLocation (LOCATION_ARGS) const {
  const cCollectionElement_baseline_5F_routineDefinitionList * p = (const cCollectionElement_baseline_5F_routineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_baseline_5F_routineDefinitionList) ;
  return p->mObject.mAttribute_mEndOfRoutineLocation ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        @baseline_routineDefinitionList type                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_baseline_5F_routineDefinitionList ("baseline_routineDefinitionList",
                                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_baseline_5F_routineDefinitionList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_baseline_5F_routineDefinitionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_baseline_5F_routineDefinitionList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_baseline_5F_routineDefinitionList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_routineDefinitionList GALGAS_baseline_5F_routineDefinitionList::extractObject (const GALGAS_object & inObject,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_routineDefinitionList result ;
  const GALGAS_baseline_5F_routineDefinitionList * p = (const GALGAS_baseline_5F_routineDefinitionList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_baseline_5F_routineDefinitionList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("baseline_routineDefinitionList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_section_5F_list_i0_ (GALGAS_baseline_5F_routineDefinitionList & ioArgument_ioRoutineDefinitionList,
                                                                              GALGAS_lstringlist & ioArgument_ioUnusedRoutineList,
                                                                              GALGAS_ramDefinitionList & ioArgument_ioRamDefinitionList,
                                                                              GALGAS_lstringlist & ioArgument_unusedRegisterList,
                                                                              GALGAS_configDefinitionList & ioArgument_ioConfigDefinitionList,
                                                                              GALGAS_constantDefinitionList & ioArgument_ioConstantDefinitionList,
                                                                              C_Lexique_piccolo_5F_lexique * inCompiler) {
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_baseline_5F_syntax_0 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mark) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 37)) ;
      GALGAS_lstring var_s = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 38)) ;
      GALGAS_location location_1 (var_s.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticWarning (location_1, GALGAS_string ("obsolete construct: use a comment beginning by #!")  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 39)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_unused) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 41)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_byte) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 42)) ;
      bool repeatFlag_2 = true ;
      while (repeatFlag_2) {
        GALGAS_lstring var_unusedRegister = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 44)) ;
        ioArgument_unusedRegisterList.addAssign_operation (var_unusedRegister  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 45)) ;
        switch (select_baseline_5F_syntax_1 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 47)) ;
        } break ;
        default:
          repeatFlag_2 = false ;
          break ;
        }
      }
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_unused) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 50)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 51)) ;
      bool repeatFlag_3 = true ;
      while (repeatFlag_3) {
        GALGAS_lstring var_unusedRoutine = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 53)) ;
        ioArgument_ioUnusedRoutineList.addAssign_operation (var_unusedRoutine  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 54)) ;
        switch (select_baseline_5F_syntax_2 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 56)) ;
        } break ;
        default:
          repeatFlag_3 = false ;
          break ;
        }
      }
    } break ;
    case 5: {
      nt_configuration_5F_definition_ (ioArgument_ioConfigDefinitionList, inCompiler) ;
    } break ;
    case 6: {
      nt_ram_5F_definition_ (ioArgument_ioRamDefinitionList, inCompiler) ;
    } break ;
    case 7: {
      nt_constant_5F_definition_ (ioArgument_ioConstantDefinitionList, inCompiler) ;
    } break ;
    case 8: {
      nt_baseline_5F_routine_5F_definition_ (ioArgument_ioRoutineDefinitionList, inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_section_5F_list_i0_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_baseline_5F_syntax_0 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mark) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 37)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 38)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_unused) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 41)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_byte) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 42)) ;
      bool repeatFlag_1 = true ;
      while (repeatFlag_1) {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 44)) ;
        switch (select_baseline_5F_syntax_1 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 47)) ;
        } break ;
        default:
          repeatFlag_1 = false ;
          break ;
        }
      }
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_unused) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 50)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 51)) ;
      bool repeatFlag_2 = true ;
      while (repeatFlag_2) {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 53)) ;
        switch (select_baseline_5F_syntax_2 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 56)) ;
        } break ;
        default:
          repeatFlag_2 = false ;
          break ;
        }
      }
    } break ;
    case 5: {
      nt_configuration_5F_definition_parse (inCompiler) ;
    } break ;
    case 6: {
      nt_ram_5F_definition_parse (inCompiler) ;
    } break ;
    case 7: {
      nt_constant_5F_definition_parse (inCompiler) ;
    } break ;
    case 8: {
      nt_baseline_5F_routine_5F_definition_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_section_5F_list_i0_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_baseline_5F_syntax_0 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mark) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 37)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 38)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_unused) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 41)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_byte) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 42)) ;
      bool repeatFlag_1 = true ;
      while (repeatFlag_1) {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 44)) ;
        switch (select_baseline_5F_syntax_1 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 47)) ;
        } break ;
        default:
          repeatFlag_1 = false ;
          break ;
        }
      }
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_unused) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 50)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 51)) ;
      bool repeatFlag_2 = true ;
      while (repeatFlag_2) {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 53)) ;
        switch (select_baseline_5F_syntax_2 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 56)) ;
        } break ;
        default:
          repeatFlag_2 = false ;
          break ;
        }
      }
    } break ;
    case 5: {
      nt_configuration_5F_definition_indexing (inCompiler) ;
    } break ;
    case 6: {
      nt_ram_5F_definition_indexing (inCompiler) ;
    } break ;
    case 7: {
      nt_constant_5F_definition_indexing (inCompiler) ;
    } break ;
    case 8: {
      nt_baseline_5F_routine_5F_definition_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_instruction_5F_list_i1_ (GALGAS_baseline_5F_instructionList & outArgument_outInstructionList,
                                                                                              C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outInstructionList.drop () ; // Release 'out' argument
  outArgument_outInstructionList = GALGAS_baseline_5F_instructionList::constructor_emptyList (SOURCE_FILE ("baseline_syntax.galgas", 73)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_baseline_5F_syntax_3 (inCompiler)) {
    case 2: {
      GALGAS_baseline_5F_instruction var_instruction ;
      nt_baseline_5F_simple_5F_instruction_ (var_instruction, inCompiler) ;
      outArgument_outInstructionList.addAssign_operation (var_instruction  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 78)) ;
    } break ;
    case 3: {
      GALGAS_baseline_5F_instruction var_instruction ;
      nt_baseline_5F_structured_5F_instruction_ (var_instruction, inCompiler) ;
      outArgument_outInstructionList.addAssign_operation (var_instruction  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 83)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_instruction_5F_list_i1_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_baseline_5F_syntax_3 (inCompiler)) {
    case 2: {
      nt_baseline_5F_simple_5F_instruction_parse (inCompiler) ;
    } break ;
    case 3: {
      nt_baseline_5F_structured_5F_instruction_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_instruction_5F_list_i1_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_baseline_5F_syntax_3 (inCompiler)) {
    case 2: {
      nt_baseline_5F_simple_5F_instruction_indexing (inCompiler) ;
    } break ;
    case 3: {
      nt_baseline_5F_structured_5F_instruction_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_routine_5F_definition_i2_ (GALGAS_baseline_5F_routineDefinitionList & ioArgument_ioRoutineDefinitionList,
                                                                                                C_Lexique_piccolo_5F_lexique * inCompiler) {
  GALGAS_bool var_noreturn ;
  switch (select_baseline_5F_syntax_4 (inCompiler)) {
  case 1: {
    var_noreturn = GALGAS_bool (false) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_noreturn) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 95)) ;
    var_noreturn = GALGAS_bool (true) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 98)) ;
  GALGAS_lstring var_routineName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineDefinition) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 99)) ;
  GALGAS_luint var_page ;
  switch (select_baseline_5F_syntax_5 (inCompiler)) {
  case 1: {
    var_page = GALGAS_luint::constructor_new (GALGAS_uint ((uint32_t) 0U), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 103))  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 103)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_page) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 105)) ;
    var_page = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 106)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 109)) ;
  GALGAS_baseline_5F_instructionList var_instructionList ;
  nt_baseline_5F_instruction_5F_list_ (var_instructionList, inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 113)) ;
  ioArgument_ioRoutineDefinitionList.addAssign_operation (var_routineName, var_page, var_noreturn, var_instructionList, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 119))  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 114)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_routine_5F_definition_i2_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_baseline_5F_syntax_4 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_noreturn) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 95)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 98)) ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineDefinition) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 99)) ;
  switch (select_baseline_5F_syntax_5 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_page) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 105)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 106)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 109)) ;
  nt_baseline_5F_instruction_5F_list_parse (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 113)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_routine_5F_definition_i2_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_baseline_5F_syntax_4 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_noreturn) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 95)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 98)) ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineDefinition) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 99)) ;
  switch (select_baseline_5F_syntax_5 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_page) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 105)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 106)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 109)) ;
  nt_baseline_5F_instruction_5F_list_indexing (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 113)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_structured_5F_instruction_i3_ (GALGAS_baseline_5F_instruction & outArgument_outInstruction,
                                                                                                    C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  switch (select_baseline_5F_syntax_6 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_do) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 127)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 128)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 129)) ;
    GALGAS_immediatExpression var_repeatExpression ;
    nt_immediate_5F_expression_ (var_repeatExpression, inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 131)) ;
    GALGAS_baseline_5F_instructionList var_instructionList ;
    nt_baseline_5F_instruction_5F_list_ (var_instructionList, inCompiler) ;
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_STATIC_5F_REPEAT::constructor_new (var_instructionLocation, var_repeatExpression, var_instructionList, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 137))  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 133)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 138)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jump) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 140)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 141)) ;
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 142)) ;
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_JUMP::constructor_new (var_instructionLocation, var_targetLabelName  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 143)) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jsr) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 147)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 148)) ;
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 149)) ;
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_JSR::constructor_new (var_instructionLocation, var_targetLabelName  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 150)) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_forever) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 154)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 155)) ;
    GALGAS_baseline_5F_instructionList var_instructionList ;
    nt_baseline_5F_instruction_5F_list_ (var_instructionList, inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 158)) ;
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_FOREVER::constructor_new (var_instructionLocation, var_instructionList, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 162))  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 159)) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 164)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 165)) ;
    GALGAS_registerExpression var_registerExpression ;
    GALGAS_bitNumberExpression var_bitNumberExpression ;
    GALGAS_bool var_skipIfSet ;
    switch (select_baseline_5F_syntax_7 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 170)) ;
      nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 172)) ;
      nt_bit_5F_number_5F_parsing_ (var_bitNumberExpression, inCompiler) ;
      var_skipIfSet = GALGAS_bool (true) ;
    } break ;
    case 2: {
      nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 177)) ;
      nt_bit_5F_number_5F_parsing_ (var_bitNumberExpression, inCompiler) ;
      var_skipIfSet = GALGAS_bool (false) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 181)) ;
    GALGAS_baseline_5F_instruction var_instruction ;
    nt_baseline_5F_simple_5F_instruction_ (var_instruction, inCompiler) ;
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_IF_5F_BitTest::constructor_new (var_instructionLocation, var_instruction, var_skipIfSet, var_registerExpression, var_bitNumberExpression  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 184)) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 191)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 192)) ;
    GALGAS_bool var_increment ;
    switch (select_baseline_5F_syntax_8 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 195)) ;
      var_increment = GALGAS_bool (false) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 197)) ;
      var_increment = GALGAS_bool (true) ;
    } break ;
    default:
      break ;
    }
    GALGAS_registerExpression var_registerExpression ;
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    GALGAS_bool var_w_5F_isTarget ;
    switch (select_baseline_5F_syntax_9 (inCompiler)) {
    case 1: {
      var_w_5F_isTarget = GALGAS_bool (false) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 205)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 205)) ;
      var_w_5F_isTarget = GALGAS_bool (true) ;
    } break ;
    default:
      break ;
    }
    GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 207)) ;
    GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE ("baseline_syntax.galgas", 208)).reader_uppercaseString (SOURCE_FILE ("baseline_syntax.galgas", 208)) ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_location location_1 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("invalid '").add_operation (var_condition, inCompiler COMMA_SOURCE_FILE ("baseline_syntax.galgas", 210)).add_operation (GALGAS_string ("' condition; it should be 'nz'"), inCompiler COMMA_SOURCE_FILE ("baseline_syntax.galgas", 210))  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 210)) ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 212)) ;
    GALGAS_baseline_5F_instruction var_instruction ;
    nt_baseline_5F_simple_5F_instruction_ (var_instruction, inCompiler) ;
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_IF_5F_IncDec::constructor_new (var_instructionLocation, var_instruction, var_increment, var_registerExpression, var_w_5F_isTarget  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 215)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 222)) ;
    nt_baseline_5F_structured_5F_if_5F_instruction_ (outArgument_outInstruction, inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 225)) ;
  } break ;
  case 8: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_do) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 227)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 228)) ;
    GALGAS_baseline_5F_instructionList var_repeatedInstructionList ;
    nt_baseline_5F_instruction_5F_list_ (var_repeatedInstructionList, inCompiler) ;
    GALGAS_location var_endOfRepeatedInstructionList = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 232)) ;
    GALGAS_baseline_5F_partList var_whilePartList = GALGAS_baseline_5F_partList::constructor_emptyList (SOURCE_FILE ("baseline_syntax.galgas", 233)) ;
    bool repeatFlag_2 = true ;
    while (repeatFlag_2) {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_while) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 235)) ;
      GALGAS_baseline_5F_conditionExpression var_whileCondition ;
      nt_baseline_5F_condition_5F_expression_ (var_whileCondition, inCompiler) ;
      GALGAS_baseline_5F_instructionList var_instructionList ;
      nt_baseline_5F_instruction_5F_list_ (var_instructionList, inCompiler) ;
      var_whilePartList.addAssign_operation (var_whileCondition, var_instructionList, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 241))  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 241)) ;
      switch (select_baseline_5F_syntax_10 (inCompiler)) {
      case 2: {
      } break ;
      default:
        repeatFlag_2 = false ;
        break ;
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 244)) ;
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_do_5F_while::constructor_new (var_instructionLocation, var_repeatedInstructionList, var_endOfRepeatedInstructionList, var_whilePartList  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 245)) ;
  } break ;
  case 9: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mnop) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 251)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 252)) ;
    GALGAS_luint var_occurrenceFactor = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 253)) ;
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_MNOP::constructor_new (var_instructionLocation, var_occurrenceFactor  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 254)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_structured_5F_instruction_i3_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_baseline_5F_syntax_6 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_do) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 127)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 129)) ;
    nt_immediate_5F_expression_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 131)) ;
    nt_baseline_5F_instruction_5F_list_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 138)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jump) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 140)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 142)) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jsr) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 147)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 149)) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_forever) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 154)) ;
    nt_baseline_5F_instruction_5F_list_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 158)) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 164)) ;
    switch (select_baseline_5F_syntax_7 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 170)) ;
      nt_register_5F_parsing_parse (inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 172)) ;
      nt_bit_5F_number_5F_parsing_parse (inCompiler) ;
    } break ;
    case 2: {
      nt_register_5F_parsing_parse (inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 177)) ;
      nt_bit_5F_number_5F_parsing_parse (inCompiler) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 181)) ;
    nt_baseline_5F_simple_5F_instruction_parse (inCompiler) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 191)) ;
    switch (select_baseline_5F_syntax_8 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 195)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 197)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_parse (inCompiler) ;
    switch (select_baseline_5F_syntax_9 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 205)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 205)) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 207)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 212)) ;
    nt_baseline_5F_simple_5F_instruction_parse (inCompiler) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 222)) ;
    nt_baseline_5F_structured_5F_if_5F_instruction_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 225)) ;
  } break ;
  case 8: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_do) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 227)) ;
    nt_baseline_5F_instruction_5F_list_parse (inCompiler) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_while) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 235)) ;
      nt_baseline_5F_condition_5F_expression_parse (inCompiler) ;
      nt_baseline_5F_instruction_5F_list_parse (inCompiler) ;
      switch (select_baseline_5F_syntax_10 (inCompiler)) {
      case 2: {
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 244)) ;
  } break ;
  case 9: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mnop) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 251)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 253)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_structured_5F_instruction_i3_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_baseline_5F_syntax_6 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_do) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 127)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 129)) ;
    nt_immediate_5F_expression_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 131)) ;
    nt_baseline_5F_instruction_5F_list_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 138)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jump) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 140)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 142)) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jsr) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 147)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 149)) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_forever) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 154)) ;
    nt_baseline_5F_instruction_5F_list_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 158)) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 164)) ;
    switch (select_baseline_5F_syntax_7 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 170)) ;
      nt_register_5F_parsing_indexing (inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 172)) ;
      nt_bit_5F_number_5F_parsing_indexing (inCompiler) ;
    } break ;
    case 2: {
      nt_register_5F_parsing_indexing (inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 177)) ;
      nt_bit_5F_number_5F_parsing_indexing (inCompiler) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 181)) ;
    nt_baseline_5F_simple_5F_instruction_indexing (inCompiler) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 191)) ;
    switch (select_baseline_5F_syntax_8 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 195)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 197)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_indexing (inCompiler) ;
    switch (select_baseline_5F_syntax_9 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 205)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 205)) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 207)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 212)) ;
    nt_baseline_5F_simple_5F_instruction_indexing (inCompiler) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 222)) ;
    nt_baseline_5F_structured_5F_if_5F_instruction_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 225)) ;
  } break ;
  case 8: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_do) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 227)) ;
    nt_baseline_5F_instruction_5F_list_indexing (inCompiler) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_while) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 235)) ;
      nt_baseline_5F_condition_5F_expression_indexing (inCompiler) ;
      nt_baseline_5F_instruction_5F_list_indexing (inCompiler) ;
      switch (select_baseline_5F_syntax_10 (inCompiler)) {
      case 2: {
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 244)) ;
  } break ;
  case 9: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mnop) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 251)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 253)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_structured_5F_if_5F_instruction_i4_ (GALGAS_baseline_5F_instruction & outArgument_outInstruction,
                                                                                                          C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 262)) ;
  GALGAS_baseline_5F_conditionExpression var_structured_5F_if_5F_condition ;
  nt_baseline_5F_condition_5F_expression_ (var_structured_5F_if_5F_condition, inCompiler) ;
  GALGAS_baseline_5F_instructionList var_thenInstructionList ;
  nt_baseline_5F_instruction_5F_list_ (var_thenInstructionList, inCompiler) ;
  GALGAS_baseline_5F_instructionList var_elseInstructionList ;
  switch (select_baseline_5F_syntax_11 (inCompiler)) {
  case 1: {
    var_elseInstructionList = GALGAS_baseline_5F_instructionList::constructor_emptyList (SOURCE_FILE ("baseline_syntax.galgas", 270)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_elsif) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 272)) ;
    GALGAS_baseline_5F_instruction var_elsifPartInstruction ;
    nt_baseline_5F_structured_5F_if_5F_instruction_ (var_elsifPartInstruction, inCompiler) ;
    var_elseInstructionList = GALGAS_baseline_5F_instructionList::constructor_emptyList (SOURCE_FILE ("baseline_syntax.galgas", 276)) ;
    var_elseInstructionList.addAssign_operation (var_elsifPartInstruction  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 277)) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_else) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 279)) ;
    nt_baseline_5F_instruction_5F_list_ (var_elseInstructionList, inCompiler) ;
  } break ;
  default:
    break ;
  }
  GALGAS_location var_endOfElsePartLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 283)) ;
  outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_structured_5F_if::constructor_new (var_instructionLocation, var_structured_5F_if_5F_condition, var_thenInstructionList, var_elseInstructionList, var_endOfElsePartLocation  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 284)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_structured_5F_if_5F_instruction_i4_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_baseline_5F_condition_5F_expression_parse (inCompiler) ;
  nt_baseline_5F_instruction_5F_list_parse (inCompiler) ;
  switch (select_baseline_5F_syntax_11 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_elsif) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 272)) ;
    nt_baseline_5F_structured_5F_if_5F_instruction_parse (inCompiler) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_else) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 279)) ;
    nt_baseline_5F_instruction_5F_list_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_structured_5F_if_5F_instruction_i4_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_baseline_5F_condition_5F_expression_indexing (inCompiler) ;
  nt_baseline_5F_instruction_5F_list_indexing (inCompiler) ;
  switch (select_baseline_5F_syntax_11 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_elsif) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 272)) ;
    nt_baseline_5F_structured_5F_if_5F_instruction_indexing (inCompiler) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_else) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 279)) ;
    nt_baseline_5F_instruction_5F_list_indexing (inCompiler) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_simple_5F_instruction_i5_ (GALGAS_baseline_5F_instruction & outArgument_outInstruction,
                                                                                                C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  switch (select_baseline_5F_syntax_12 (inCompiler)) {
  case 1: {
    GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code var_baseCode ;
    switch (select_baseline_5F_syntax_13 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addwf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 298)) ;
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_ADDWF (SOURCE_FILE ("baseline_syntax.galgas", 299)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andwf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 301)) ;
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_ANDWF (SOURCE_FILE ("baseline_syntax.galgas", 302)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_comf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 304)) ;
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_COMF (SOURCE_FILE ("baseline_syntax.galgas", 305)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 307)) ;
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_DECF (SOURCE_FILE ("baseline_syntax.galgas", 308)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 310)) ;
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_INCF (SOURCE_FILE ("baseline_syntax.galgas", 311)) ;
    } break ;
    case 6: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorwf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 313)) ;
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_IORWF (SOURCE_FILE ("baseline_syntax.galgas", 314)) ;
    } break ;
    case 7: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 316)) ;
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_MOVF (SOURCE_FILE ("baseline_syntax.galgas", 317)) ;
    } break ;
    case 8: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rlf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 319)) ;
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_RLF (SOURCE_FILE ("baseline_syntax.galgas", 320)) ;
    } break ;
    case 9: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rrf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 322)) ;
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_RRF (SOURCE_FILE ("baseline_syntax.galgas", 323)) ;
    } break ;
    case 10: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subwf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 325)) ;
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_SUBWF (SOURCE_FILE ("baseline_syntax.galgas", 326)) ;
    } break ;
    case 11: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_swapf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 328)) ;
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_SWAPF (SOURCE_FILE ("baseline_syntax.galgas", 329)) ;
    } break ;
    case 12: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorwf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 331)) ;
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_XORWF (SOURCE_FILE ("baseline_syntax.galgas", 332)) ;
    } break ;
    default:
      break ;
    }
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 334)) ;
    GALGAS_registerExpression var_registerExpression ;
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    GALGAS_bool var_W_5F_isDestination ;
    nt_optional_5F_w_5F_as_5F_dest_ (var_W_5F_isDestination, inCompiler) ;
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_FD::constructor_new (var_instructionLocation, var_baseCode, var_registerExpression, var_W_5F_isDestination  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 339)) ;
  } break ;
  case 2: {
    GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code var_FAinstruction ;
    switch (select_baseline_5F_syntax_14 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 347)) ;
      var_FAinstruction = GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code::constructor_CLRF (SOURCE_FILE ("baseline_syntax.galgas", 348)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movwf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 350)) ;
      var_FAinstruction = GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE ("baseline_syntax.galgas", 351)) ;
    } break ;
    default:
      break ;
    }
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 353)) ;
    GALGAS_registerExpression var_registerExpression ;
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_F::constructor_new (var_instructionLocation, var_FAinstruction, var_registerExpression  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 356)) ;
  } break ;
  case 3: {
    GALGAS_baseline_5F_bit_5F_oriented_5F_op var_bitOrientedOp ;
    switch (select_baseline_5F_syntax_15 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bcf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 363)) ;
      var_bitOrientedOp = GALGAS_baseline_5F_bit_5F_oriented_5F_op::constructor_BCF (SOURCE_FILE ("baseline_syntax.galgas", 363)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bsf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 365)) ;
      var_bitOrientedOp = GALGAS_baseline_5F_bit_5F_oriented_5F_op::constructor_BSF (SOURCE_FILE ("baseline_syntax.galgas", 365)) ;
    } break ;
    default:
      break ;
    }
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 367)) ;
    GALGAS_registerExpression var_registerExpression ;
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 370)) ;
    GALGAS_bitNumberExpression var_bitNumberExpression ;
    nt_bit_5F_number_5F_parsing_ (var_bitNumberExpression, inCompiler) ;
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_FB::constructor_new (var_instructionLocation, var_bitOrientedOp, var_registerExpression, var_bitNumberExpression  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 373)) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_goto) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 379)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 380)) ;
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 381)) ;
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_GOTO::constructor_new (var_instructionLocation, var_targetLabelName  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 382)) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_call) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 386)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 387)) ;
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 388)) ;
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_CALL::constructor_new (var_instructionLocation, var_targetLabelName  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 389)) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrw) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 393)) ;
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_WO_5F_OPERAND::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 394)), GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::constructor_CLRW (SOURCE_FILE ("baseline_syntax.galgas", 394))  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 394)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrwdt) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 396)) ;
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_WO_5F_OPERAND::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 397)), GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::constructor_CLRWDT (SOURCE_FILE ("baseline_syntax.galgas", 397))  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 397)) ;
  } break ;
  case 8: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_nop) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 399)) ;
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_WO_5F_OPERAND::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 400)), GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::constructor_NOP (SOURCE_FILE ("baseline_syntax.galgas", 400))  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 400)) ;
  } break ;
  case 9: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_option) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 402)) ;
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_WO_5F_OPERAND::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 403)), GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::constructor_OPTION_5F_ (SOURCE_FILE ("baseline_syntax.galgas", 403))  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 403)) ;
  } break ;
  case 10: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_sleep) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 405)) ;
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_WO_5F_OPERAND::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 406)), GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::constructor_SLEEP (SOURCE_FILE ("baseline_syntax.galgas", 406))  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 406)) ;
  } break ;
  case 11: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_tris) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 408)) ;
    GALGAS_lstring var_operand = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 409)) ;
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_TRIS::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 410)), var_operand  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 410)) ;
  } break ;
  case 12: {
    GALGAS_baseline_5F_literal_5F_instruction_5F_opcode var_literalInstruction ;
    switch (select_baseline_5F_syntax_16 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andlw) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 414)) ;
      var_literalInstruction = GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::constructor_ANDLW (SOURCE_FILE ("baseline_syntax.galgas", 414)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorlw) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 416)) ;
      var_literalInstruction = GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::constructor_IORLW (SOURCE_FILE ("baseline_syntax.galgas", 416)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movlw) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 418)) ;
      var_literalInstruction = GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::constructor_MOVLW (SOURCE_FILE ("baseline_syntax.galgas", 418)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorlw) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 420)) ;
      var_literalInstruction = GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::constructor_XORLW (SOURCE_FILE ("baseline_syntax.galgas", 420)) ;
    } break ;
    default:
      break ;
    }
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 422)) ;
    GALGAS_immediatExpression var_expression ;
    nt_immediate_5F_expression_ (var_expression, inCompiler) ;
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_literalOperation::constructor_new (var_instructionLocation, var_literalInstruction, var_expression  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 425)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_simple_5F_instruction_i5_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_baseline_5F_syntax_12 (inCompiler)) {
  case 1: {
    switch (select_baseline_5F_syntax_13 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addwf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 298)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andwf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 301)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_comf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 304)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 307)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 310)) ;
    } break ;
    case 6: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorwf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 313)) ;
    } break ;
    case 7: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 316)) ;
    } break ;
    case 8: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rlf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 319)) ;
    } break ;
    case 9: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rrf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 322)) ;
    } break ;
    case 10: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subwf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 325)) ;
    } break ;
    case 11: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_swapf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 328)) ;
    } break ;
    case 12: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorwf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 331)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_parse (inCompiler) ;
    nt_optional_5F_w_5F_as_5F_dest_parse (inCompiler) ;
  } break ;
  case 2: {
    switch (select_baseline_5F_syntax_14 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 347)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movwf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 350)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_parse (inCompiler) ;
  } break ;
  case 3: {
    switch (select_baseline_5F_syntax_15 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bcf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 363)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bsf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 365)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 370)) ;
    nt_bit_5F_number_5F_parsing_parse (inCompiler) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_goto) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 379)) ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 381)) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_call) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 386)) ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 388)) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrw) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 393)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrwdt) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 396)) ;
  } break ;
  case 8: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_nop) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 399)) ;
  } break ;
  case 9: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_option) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 402)) ;
  } break ;
  case 10: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_sleep) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 405)) ;
  } break ;
  case 11: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_tris) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 408)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 409)) ;
  } break ;
  case 12: {
    switch (select_baseline_5F_syntax_16 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andlw) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 414)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorlw) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 416)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movlw) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 418)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorlw) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 420)) ;
    } break ;
    default:
      break ;
    }
    nt_immediate_5F_expression_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_simple_5F_instruction_i5_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_baseline_5F_syntax_12 (inCompiler)) {
  case 1: {
    switch (select_baseline_5F_syntax_13 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addwf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 298)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andwf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 301)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_comf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 304)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 307)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 310)) ;
    } break ;
    case 6: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorwf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 313)) ;
    } break ;
    case 7: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 316)) ;
    } break ;
    case 8: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rlf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 319)) ;
    } break ;
    case 9: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rrf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 322)) ;
    } break ;
    case 10: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subwf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 325)) ;
    } break ;
    case 11: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_swapf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 328)) ;
    } break ;
    case 12: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorwf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 331)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_indexing (inCompiler) ;
    nt_optional_5F_w_5F_as_5F_dest_indexing (inCompiler) ;
  } break ;
  case 2: {
    switch (select_baseline_5F_syntax_14 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 347)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movwf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 350)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_indexing (inCompiler) ;
  } break ;
  case 3: {
    switch (select_baseline_5F_syntax_15 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bcf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 363)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bsf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 365)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 370)) ;
    nt_bit_5F_number_5F_parsing_indexing (inCompiler) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_goto) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 379)) ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 381)) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_call) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 386)) ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 388)) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrw) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 393)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrwdt) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 396)) ;
  } break ;
  case 8: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_nop) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 399)) ;
  } break ;
  case 9: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_option) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 402)) ;
  } break ;
  case 10: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_sleep) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 405)) ;
  } break ;
  case 11: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_tris) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 408)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 409)) ;
  } break ;
  case 12: {
    switch (select_baseline_5F_syntax_16 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andlw) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 414)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorlw) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 416)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movlw) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 418)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorlw) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 420)) ;
    } break ;
    default:
      break ;
    }
    nt_immediate_5F_expression_indexing (inCompiler) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_factor_i6_ (GALGAS_baseline_5F_conditionExpression & outArgument_outCondition,
                                                                                              C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 436)) ;
  GALGAS_baseline_5F_conditionExpression var_condition ;
  nt_baseline_5F_condition_5F_factor_ (var_condition, inCompiler) ;
  outArgument_outCondition = GALGAS_baseline_5F_negateCondition::constructor_new (var_condition  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 439)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_factor_i6_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 436)) ;
  nt_baseline_5F_condition_5F_factor_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_factor_i6_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 436)) ;
  nt_baseline_5F_condition_5F_factor_indexing (inCompiler) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_factor_i7_ (GALGAS_baseline_5F_conditionExpression & outArgument_outCondition,
                                                                                              C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  nt_baseline_5F_condition_5F_expression_ (outArgument_outCondition, inCompiler) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_factor_i7_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_baseline_5F_condition_5F_expression_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_factor_i7_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_baseline_5F_condition_5F_expression_indexing (inCompiler) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_factor_i8_ (GALGAS_baseline_5F_conditionExpression & outArgument_outCondition,
                                                                                              C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  switch (select_baseline_5F_syntax_17 (inCompiler)) {
  case 1: {
    GALGAS_bool var_isIncrement ;
    switch (select_baseline_5F_syntax_18 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 456)) ;
      var_isIncrement = GALGAS_bool (true) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 458)) ;
      var_isIncrement = GALGAS_bool (false) ;
    } break ;
    default:
      break ;
    }
    GALGAS_registerExpression var_registerExpression ;
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    GALGAS_bool var_W_5F_isDestination ;
    switch (select_baseline_5F_syntax_19 (inCompiler)) {
    case 1: {
      var_W_5F_isDestination = GALGAS_bool (false) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 466)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 466)) ;
      var_W_5F_isDestination = GALGAS_bool (true) ;
    } break ;
    default:
      break ;
    }
    GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 468)) ;
    GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE ("baseline_syntax.galgas", 469)).reader_uppercaseString (SOURCE_FILE ("baseline_syntax.galgas", 469)) ;
    GALGAS_bool var_branchIfZero ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("Z"))).boolEnum () ;
    if (kBoolTrue == test_0) {
      var_branchIfZero = GALGAS_bool (true) ;
    }else if (kBoolFalse == test_0) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_branchIfZero = GALGAS_bool (false) ;
      }else if (kBoolFalse == test_1) {
        GALGAS_location location_2 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_2, GALGAS_string ("invalid '").add_operation (var_conditionString.reader_string (SOURCE_FILE ("baseline_syntax.galgas", 476)), inCompiler COMMA_SOURCE_FILE ("baseline_syntax.galgas", 476)).add_operation (GALGAS_string ("' condition; valid ones are: 'z' and 'nz'"), inCompiler COMMA_SOURCE_FILE ("baseline_syntax.galgas", 476))  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 476)) ;
        var_branchIfZero.drop () ; // Release error dropped variable
      }
    }
    outArgument_outCondition = GALGAS_baseline_5F_incDecRegisterInCondition::constructor_new (var_registerExpression, var_isIncrement, var_W_5F_isDestination, var_branchIfZero  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 480)) ;
  } break ;
  case 2: {
    GALGAS_registerExpression var_registerExpression ;
    GALGAS_bitNumberExpression var_bitNumberExpression ;
    GALGAS_bool var_BTFSSinstruction ;
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 490)) ;
    nt_bit_5F_number_5F_parsing_ (var_bitNumberExpression, inCompiler) ;
    switch (select_baseline_5F_syntax_20 (inCompiler)) {
    case 1: {
      var_BTFSSinstruction = GALGAS_bool (false) ;
    } break ;
    case 2: {
      GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 495)) ;
      GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE ("baseline_syntax.galgas", 496)).reader_uppercaseString (SOURCE_FILE ("baseline_syntax.galgas", 496)) ;
      const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("Z"))).boolEnum () ;
      if (kBoolTrue == test_3) {
        var_BTFSSinstruction = GALGAS_bool (true) ;
        GALGAS_string var_s = GALGAS_string ("! ").add_operation (var_registerExpression.reader_mRegisterName (SOURCE_FILE ("baseline_syntax.galgas", 499)).reader_string (SOURCE_FILE ("baseline_syntax.galgas", 499)), inCompiler COMMA_SOURCE_FILE ("baseline_syntax.galgas", 499)) ;
        const enumGalgasBool test_4 = GALGAS_bool (kIsStrictSup, var_registerExpression.reader_mOffset (SOURCE_FILE ("baseline_syntax.galgas", 500)).reader_uint (SOURCE_FILE ("baseline_syntax.galgas", 500)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
        if (kBoolTrue == test_4) {
          var_s.dotAssign_operation (GALGAS_string (" [").add_operation (var_registerExpression.reader_mOffset (SOURCE_FILE ("baseline_syntax.galgas", 501)).reader_uint (SOURCE_FILE ("baseline_syntax.galgas", 501)).reader_string (SOURCE_FILE ("baseline_syntax.galgas", 501)), inCompiler COMMA_SOURCE_FILE ("baseline_syntax.galgas", 501)).add_operation (GALGAS_string ("]"), inCompiler COMMA_SOURCE_FILE ("baseline_syntax.galgas", 501))  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 501)) ;
        }
        var_s.dotAssign_operation (GALGAS_string (".")  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 503)) ;
        callCategoryMethod_display ((const cPtr_bitNumberExpression *) var_bitNumberExpression.ptr (), var_s, inCompiler COMMA_SOURCE_FILE ("baseline_syntax.galgas", 503)) ;
        GALGAS_location location_5 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticWarning (location_5, GALGAS_string ("In Piccolo 1.2.0 and later, this construction is deprecated; use '").add_operation (var_s, inCompiler COMMA_SOURCE_FILE ("baseline_syntax.galgas", 504)).add_operation (GALGAS_string ("' instead"), inCompiler COMMA_SOURCE_FILE ("baseline_syntax.galgas", 504))  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 504)) ;
      }else if (kBoolFalse == test_3) {
        const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).boolEnum () ;
        if (kBoolTrue == test_6) {
          var_BTFSSinstruction = GALGAS_bool (false) ;
          GALGAS_string var_s = var_registerExpression.reader_mRegisterName (SOURCE_FILE ("baseline_syntax.galgas", 507)).reader_string (SOURCE_FILE ("baseline_syntax.galgas", 507)) ;
          const enumGalgasBool test_7 = GALGAS_bool (kIsStrictSup, var_registerExpression.reader_mOffset (SOURCE_FILE ("baseline_syntax.galgas", 508)).reader_uint (SOURCE_FILE ("baseline_syntax.galgas", 508)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
          if (kBoolTrue == test_7) {
            var_s.dotAssign_operation (GALGAS_string (" [").add_operation (var_registerExpression.reader_mOffset (SOURCE_FILE ("baseline_syntax.galgas", 509)).reader_uint (SOURCE_FILE ("baseline_syntax.galgas", 509)).reader_string (SOURCE_FILE ("baseline_syntax.galgas", 509)), inCompiler COMMA_SOURCE_FILE ("baseline_syntax.galgas", 509)).add_operation (GALGAS_string ("]"), inCompiler COMMA_SOURCE_FILE ("baseline_syntax.galgas", 509))  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 509)) ;
          }
          var_s.dotAssign_operation (GALGAS_string (".")  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 511)) ;
          callCategoryMethod_display ((const cPtr_bitNumberExpression *) var_bitNumberExpression.ptr (), var_s, inCompiler COMMA_SOURCE_FILE ("baseline_syntax.galgas", 511)) ;
          GALGAS_location location_8 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticWarning (location_8, GALGAS_string ("In Piccolo 1.2.0 and later, this construction is deprecated; use '").add_operation (var_s, inCompiler COMMA_SOURCE_FILE ("baseline_syntax.galgas", 512)).add_operation (GALGAS_string ("' instead"), inCompiler COMMA_SOURCE_FILE ("baseline_syntax.galgas", 512))  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 512)) ;
        }else if (kBoolFalse == test_6) {
          GALGAS_location location_9 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_9, GALGAS_string ("invalid '").add_operation (var_conditionString.reader_string (SOURCE_FILE ("baseline_syntax.galgas", 514)), inCompiler COMMA_SOURCE_FILE ("baseline_syntax.galgas", 514)).add_operation (GALGAS_string ("' condition; valid ones are: 'z' and 'nz'"), inCompiler COMMA_SOURCE_FILE ("baseline_syntax.galgas", 514))  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 514)) ;
          var_BTFSSinstruction.drop () ; // Release error dropped variable
        }
      }
    } break ;
    default:
      break ;
    }
    outArgument_outCondition = GALGAS_baseline_5F_bitTest_5F_in_5F_structured_5F_if_5F_condition::constructor_new (var_registerExpression, var_bitNumberExpression, var_BTFSSinstruction  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 519)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_factor_i8_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_baseline_5F_syntax_17 (inCompiler)) {
  case 1: {
    switch (select_baseline_5F_syntax_18 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 456)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 458)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_parse (inCompiler) ;
    switch (select_baseline_5F_syntax_19 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 466)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 466)) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 468)) ;
  } break ;
  case 2: {
    nt_register_5F_parsing_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 490)) ;
    nt_bit_5F_number_5F_parsing_parse (inCompiler) ;
    switch (select_baseline_5F_syntax_20 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 495)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_factor_i8_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_baseline_5F_syntax_17 (inCompiler)) {
  case 1: {
    switch (select_baseline_5F_syntax_18 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 456)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 458)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_indexing (inCompiler) ;
    switch (select_baseline_5F_syntax_19 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 466)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 466)) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 468)) ;
  } break ;
  case 2: {
    nt_register_5F_parsing_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 490)) ;
    nt_bit_5F_number_5F_parsing_indexing (inCompiler) ;
    switch (select_baseline_5F_syntax_20 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 495)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_expression_i9_ (GALGAS_baseline_5F_conditionExpression & outArgument_outCondition,
                                                                                                  C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 530)) ;
  nt_baseline_5F_condition_5F_term_ (outArgument_outCondition, inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_baseline_5F_syntax_21 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 534)) ;
      GALGAS_baseline_5F_conditionExpression var_c ;
      nt_baseline_5F_condition_5F_term_ (var_c, inCompiler) ;
      GALGAS_baseline_5F_conditionExpression var_rc = GALGAS_baseline_5F_negateCondition::constructor_new (var_c  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 537)) ;
      GALGAS_baseline_5F_conditionExpression var_lc = GALGAS_baseline_5F_negateCondition::constructor_new (outArgument_outCondition  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 538)) ;
      outArgument_outCondition = GALGAS_baseline_5F_negateCondition::constructor_new (GALGAS_baseline_5F_andCondition::constructor_new (var_lc, var_rc  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 539))  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 539)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 541)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_expression_i9_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 530)) ;
  nt_baseline_5F_condition_5F_term_parse (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_baseline_5F_syntax_21 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 534)) ;
      nt_baseline_5F_condition_5F_term_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 541)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_expression_i9_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 530)) ;
  nt_baseline_5F_condition_5F_term_indexing (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_baseline_5F_syntax_21 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 534)) ;
      nt_baseline_5F_condition_5F_term_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 541)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_term_i10_ (GALGAS_baseline_5F_conditionExpression & outArgument_outCondition,
                                                                                             C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  nt_baseline_5F_condition_5F_factor_ (outArgument_outCondition, inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_baseline_5F_syntax_22 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__26_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 551)) ;
      GALGAS_baseline_5F_conditionExpression var_c ;
      nt_baseline_5F_condition_5F_factor_ (var_c, inCompiler) ;
      outArgument_outCondition = GALGAS_baseline_5F_andCondition::constructor_new (outArgument_outCondition, var_c  COMMA_SOURCE_FILE ("baseline_syntax.galgas", 554)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_term_i10_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_baseline_5F_condition_5F_factor_parse (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_baseline_5F_syntax_22 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__26_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 551)) ;
      nt_baseline_5F_condition_5F_factor_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_term_i10_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_baseline_5F_condition_5F_factor_indexing (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_baseline_5F_syntax_22 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__26_) COMMA_SOURCE_FILE ("baseline_syntax.galgas", 551)) ;
      nt_baseline_5F_condition_5F_factor_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}



//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_configuration_5F_definition_i0_ (GALGAS_configDefinitionList & ioArgument_ioConfigDefinitionList,
                                                                    C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_configuration) COMMA_SOURCE_FILE ("communs.galgas", 7)) ;
  GALGAS_location var_defLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("communs.galgas", 8)) ;
  GALGAS_configSettingList var_settingList = GALGAS_configSettingList::constructor_emptyList (SOURCE_FILE ("communs.galgas", 9)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("communs.galgas", 10)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_0 (inCompiler)) {
    case 2: {
      GALGAS_lstring var_settingName = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 13)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("communs.galgas", 14)) ;
      GALGAS_lstring var_settingValue ;
      switch (select_communs_1 (inCompiler)) {
      case 1: {
        var_settingValue = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 17)) ;
      } break ;
      case 2: {
        var_settingValue = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("communs.galgas", 19)) ;
      } break ;
      default:
        break ;
      }
      var_settingList.addAssign_operation (var_settingName, var_settingValue  COMMA_SOURCE_FILE ("communs.galgas", 21)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("communs.galgas", 23)) ;
  ioArgument_ioConfigDefinitionList.addAssign_operation (var_defLocation, var_settingList  COMMA_SOURCE_FILE ("communs.galgas", 24)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_configuration_5F_definition_i0_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_configuration) COMMA_SOURCE_FILE ("communs.galgas", 7)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("communs.galgas", 10)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_0 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 13)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("communs.galgas", 14)) ;
      switch (select_communs_1 (inCompiler)) {
      case 1: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 17)) ;
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("communs.galgas", 19)) ;
      } break ;
      default:
        break ;
      }
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("communs.galgas", 23)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_configuration_5F_definition_i0_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_configuration) COMMA_SOURCE_FILE ("communs.galgas", 7)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("communs.galgas", 10)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_0 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 13)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("communs.galgas", 14)) ;
      switch (select_communs_1 (inCompiler)) {
      case 1: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 17)) ;
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("communs.galgas", 19)) ;
      } break ;
      default:
        break ;
      }
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("communs.galgas", 23)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_declaration_5F_in_5F_ram_i1_ (GALGAS_declarationInRam & outArgument_outDeclaration,
                                                                 C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outDeclaration.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_byte) COMMA_SOURCE_FILE ("communs.galgas", 31)) ;
  GALGAS_lstring var_name = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_variableDeclaration) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 32)) ;
  GALGAS_luint var_size ;
  switch (select_communs_2 (inCompiler)) {
  case 1: {
    var_size = GALGAS_luint::constructor_new (GALGAS_uint ((uint32_t) 1U), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("communs.galgas", 35))  COMMA_SOURCE_FILE ("communs.galgas", 35)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("communs.galgas", 37)) ;
    var_size = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("communs.galgas", 38)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("communs.galgas", 39)) ;
  } break ;
  default:
    break ;
  }
  GALGAS_bitSliceTable var_bitSliceTable = GALGAS_bitSliceTable::constructor_emptyMap (SOURCE_FILE ("communs.galgas", 41)) ;
  GALGAS_string var_bitDefinitionString ;
  switch (select_communs_3 (inCompiler)) {
  case 1: {
    var_bitDefinitionString = GALGAS_string::makeEmptyString () ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C_) COMMA_SOURCE_FILE ("communs.galgas", 46)) ;
    var_bitDefinitionString = GALGAS_string (" <") ;
    GALGAS_sint var_sliceIndex = GALGAS_sint ((int32_t) 8L) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      switch (select_communs_5 (inCompiler)) {
      case 1: {
        GALGAS_uint var_sliceWidth = GALGAS_uint ((uint32_t) 0U) ;
        bool repeatFlag_1 = true ;
        while (repeatFlag_1) {
          GALGAS_uint var_sliceBase = GALGAS_uint ((uint32_t) 0U) ;
          const enumGalgasBool test_2 = GALGAS_bool (kIsSupOrEqual, var_sliceIndex.objectCompare (GALGAS_sint ((int32_t) 0L))).boolEnum () ;
          if (kBoolTrue == test_2) {
            var_sliceBase = var_sliceIndex.reader_uint (inCompiler COMMA_SOURCE_FILE ("communs.galgas", 55)) ;
          }
          GALGAS_lstring var_sliceName = inCompiler->synthetizedAttribute_tokenString () ;
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 57)) ;
          switch (select_communs_7 (inCompiler)) {
          case 1: {
            const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, var_sliceWidth.objectCompare (GALGAS_uint ((uint32_t) 0U))).operator_and (GALGAS_bool (kIsNotEqual, var_sliceWidth.objectCompare (GALGAS_uint ((uint32_t) 1U))) COMMA_SOURCE_FILE ("communs.galgas", 59)).boolEnum () ;
            if (kBoolTrue == test_3) {
              GALGAS_location location_4 (var_sliceName.reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_4, GALGAS_string ("a slice of 1 bit is expected for '").add_operation (var_sliceName.reader_string (SOURCE_FILE ("communs.galgas", 60)), inCompiler COMMA_SOURCE_FILE ("communs.galgas", 60)).add_operation (GALGAS_string ("'"), inCompiler COMMA_SOURCE_FILE ("communs.galgas", 60))  COMMA_SOURCE_FILE ("communs.galgas", 60)) ;
            }
            var_sliceWidth = GALGAS_uint ((uint32_t) 1U) ;
            var_bitDefinitionString.dotAssign_operation (var_sliceName.reader_string (SOURCE_FILE ("communs.galgas", 63))  COMMA_SOURCE_FILE ("communs.galgas", 63)) ;
          } break ;
          case 2: {
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("communs.galgas", 65)) ;
            GALGAS_luint var_sliceSize = inCompiler->synthetizedAttribute_uint_33__32_value () ;
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("communs.galgas", 66)) ;
            const enumGalgasBool test_5 = GALGAS_bool (kIsNotEqual, var_sliceWidth.objectCompare (GALGAS_uint ((uint32_t) 0U))).operator_and (GALGAS_bool (kIsNotEqual, var_sliceWidth.objectCompare (var_sliceSize.reader_uint (SOURCE_FILE ("communs.galgas", 67)))) COMMA_SOURCE_FILE ("communs.galgas", 67)).boolEnum () ;
            if (kBoolTrue == test_5) {
              GALGAS_location location_6 (var_sliceName.reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_6, GALGAS_string ("a slice of ").add_operation (var_sliceWidth.reader_string (SOURCE_FILE ("communs.galgas", 68)), inCompiler COMMA_SOURCE_FILE ("communs.galgas", 68)).add_operation (GALGAS_string (" bits is expected for '"), inCompiler COMMA_SOURCE_FILE ("communs.galgas", 68)).add_operation (var_sliceName.reader_string (SOURCE_FILE ("communs.galgas", 68)), inCompiler COMMA_SOURCE_FILE ("communs.galgas", 68)).add_operation (GALGAS_string ("'"), inCompiler COMMA_SOURCE_FILE ("communs.galgas", 68))  COMMA_SOURCE_FILE ("communs.galgas", 68)) ;
            }
            var_sliceWidth = var_sliceSize.reader_uint (SOURCE_FILE ("communs.galgas", 70)) ;
            var_sliceBase = var_sliceBase.add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("communs.galgas", 71)).substract_operation (var_sliceSize.reader_uint (SOURCE_FILE ("communs.galgas", 71)), inCompiler COMMA_SOURCE_FILE ("communs.galgas", 71)) ;
            var_bitDefinitionString.dotAssign_operation (var_sliceName.reader_string (SOURCE_FILE ("communs.galgas", 72)).add_operation (GALGAS_string ("["), inCompiler COMMA_SOURCE_FILE ("communs.galgas", 72)).add_operation (var_sliceSize.reader_uint (SOURCE_FILE ("communs.galgas", 72)).reader_string (SOURCE_FILE ("communs.galgas", 72)), inCompiler COMMA_SOURCE_FILE ("communs.galgas", 72)).add_operation (GALGAS_string ("]"), inCompiler COMMA_SOURCE_FILE ("communs.galgas", 72))  COMMA_SOURCE_FILE ("communs.galgas", 72)) ;
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("communs.galgas", 73)) ;
          } break ;
          default:
            break ;
          }
          GALGAS_uint var_base = GALGAS_uint ((uint32_t) 0U) ;
          const enumGalgasBool test_7 = GALGAS_bool (kIsSupOrEqual, var_sliceIndex.objectCompare (var_sliceWidth.reader_sint (inCompiler COMMA_SOURCE_FILE ("communs.galgas", 76)))).boolEnum () ;
          if (kBoolTrue == test_7) {
            var_base = var_sliceIndex.reader_uint (inCompiler COMMA_SOURCE_FILE ("communs.galgas", 77)).substract_operation (var_sliceWidth, inCompiler COMMA_SOURCE_FILE ("communs.galgas", 77)) ;
          }
          {
          var_bitSliceTable.modifier_insertKey (var_sliceName, var_base, var_sliceWidth, inCompiler COMMA_SOURCE_FILE ("communs.galgas", 79)) ;
          }
          switch (select_communs_6 (inCompiler)) {
          case 2: {
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2F_) COMMA_SOURCE_FILE ("communs.galgas", 81)) ;
            var_bitDefinitionString.dotAssign_operation (GALGAS_string ("/")  COMMA_SOURCE_FILE ("communs.galgas", 82)) ;
          } break ;
          default:
            repeatFlag_1 = false ;
            break ;
          }
        }
        var_sliceIndex = var_sliceIndex.substract_operation (var_sliceWidth.reader_sint (inCompiler COMMA_SOURCE_FILE ("communs.galgas", 84)), inCompiler COMMA_SOURCE_FILE ("communs.galgas", 84)) ;
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE ("communs.galgas", 86)) ;
        var_bitDefinitionString.dotAssign_operation (GALGAS_string ("-")  COMMA_SOURCE_FILE ("communs.galgas", 87)) ;
        var_sliceIndex.decrement_operation (inCompiler  COMMA_SOURCE_FILE ("communs.galgas", 88)) ;
      } break ;
      default:
        break ;
      }
      switch (select_communs_4 (inCompiler)) {
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("communs.galgas", 91)) ;
        var_bitDefinitionString.dotAssign_operation (GALGAS_string (", ")  COMMA_SOURCE_FILE ("communs.galgas", 92)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    const enumGalgasBool test_8 = GALGAS_bool (kIsNotEqual, var_sliceIndex.objectCompare (GALGAS_sint ((int32_t) 0L))).boolEnum () ;
    if (kBoolTrue == test_8) {
      GALGAS_location location_9 (var_name.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_9, GALGAS_string ("Incorrect bit definition for register '").add_operation (var_name.reader_string (SOURCE_FILE ("communs.galgas", 95)), inCompiler COMMA_SOURCE_FILE ("communs.galgas", 95)).add_operation (GALGAS_string ("': "), inCompiler COMMA_SOURCE_FILE ("communs.galgas", 95)).add_operation (GALGAS_sint ((int32_t) 8L).substract_operation (var_sliceIndex, inCompiler COMMA_SOURCE_FILE ("communs.galgas", 95)).reader_string (SOURCE_FILE ("communs.galgas", 95)), inCompiler COMMA_SOURCE_FILE ("communs.galgas", 95)).add_operation (GALGAS_string (" bits (s) are defined, instead of 8"), inCompiler COMMA_SOURCE_FILE ("communs.galgas", 95))  COMMA_SOURCE_FILE ("communs.galgas", 95)) ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E_) COMMA_SOURCE_FILE ("communs.galgas", 97)) ;
    var_bitDefinitionString.dotAssign_operation (GALGAS_string (">")  COMMA_SOURCE_FILE ("communs.galgas", 98)) ;
  } break ;
  default:
    break ;
  }
  outArgument_outDeclaration = GALGAS_byteDeclarationInRam::constructor_new (var_name, var_size, var_bitSliceTable, var_bitDefinitionString  COMMA_SOURCE_FILE ("communs.galgas", 100)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_declaration_5F_in_5F_ram_i1_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_byte) COMMA_SOURCE_FILE ("communs.galgas", 31)) ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_variableDeclaration) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 32)) ;
  switch (select_communs_2 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("communs.galgas", 37)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("communs.galgas", 38)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("communs.galgas", 39)) ;
  } break ;
  default:
    break ;
  }
  switch (select_communs_3 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C_) COMMA_SOURCE_FILE ("communs.galgas", 46)) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      switch (select_communs_5 (inCompiler)) {
      case 1: {
        bool repeatFlag_1 = true ;
        while (repeatFlag_1) {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 57)) ;
          switch (select_communs_7 (inCompiler)) {
          case 1: {
          } break ;
          case 2: {
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("communs.galgas", 65)) ;
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("communs.galgas", 66)) ;
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("communs.galgas", 73)) ;
          } break ;
          default:
            break ;
          }
          switch (select_communs_6 (inCompiler)) {
          case 2: {
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2F_) COMMA_SOURCE_FILE ("communs.galgas", 81)) ;
          } break ;
          default:
            repeatFlag_1 = false ;
            break ;
          }
        }
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE ("communs.galgas", 86)) ;
      } break ;
      default:
        break ;
      }
      switch (select_communs_4 (inCompiler)) {
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("communs.galgas", 91)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E_) COMMA_SOURCE_FILE ("communs.galgas", 97)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_declaration_5F_in_5F_ram_i1_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_byte) COMMA_SOURCE_FILE ("communs.galgas", 31)) ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_variableDeclaration) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 32)) ;
  switch (select_communs_2 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("communs.galgas", 37)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("communs.galgas", 38)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("communs.galgas", 39)) ;
  } break ;
  default:
    break ;
  }
  switch (select_communs_3 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C_) COMMA_SOURCE_FILE ("communs.galgas", 46)) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      switch (select_communs_5 (inCompiler)) {
      case 1: {
        bool repeatFlag_1 = true ;
        while (repeatFlag_1) {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 57)) ;
          switch (select_communs_7 (inCompiler)) {
          case 1: {
          } break ;
          case 2: {
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("communs.galgas", 65)) ;
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("communs.galgas", 66)) ;
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("communs.galgas", 73)) ;
          } break ;
          default:
            break ;
          }
          switch (select_communs_6 (inCompiler)) {
          case 2: {
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2F_) COMMA_SOURCE_FILE ("communs.galgas", 81)) ;
          } break ;
          default:
            repeatFlag_1 = false ;
            break ;
          }
        }
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE ("communs.galgas", 86)) ;
      } break ;
      default:
        break ;
      }
      switch (select_communs_4 (inCompiler)) {
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("communs.galgas", 91)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E_) COMMA_SOURCE_FILE ("communs.galgas", 97)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_ram_5F_definition_i2_ (GALGAS_ramDefinitionList & ioArgument_ioRamDefinitionList,
                                                          C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ram) COMMA_SOURCE_FILE ("communs.galgas", 107)) ;
  GALGAS_lstring var_bankName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 108)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("communs.galgas", 109)) ;
  GALGAS_declarationInRamList var_declarationInRamList = GALGAS_declarationInRamList::constructor_emptyList (SOURCE_FILE ("communs.galgas", 110)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_8 (inCompiler)) {
    case 2: {
      GALGAS_declarationInRam var_declaration ;
      nt_declaration_5F_in_5F_ram_ (var_declaration, inCompiler) ;
      var_declarationInRamList.addAssign_operation (var_declaration  COMMA_SOURCE_FILE ("communs.galgas", 114)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  ioArgument_ioRamDefinitionList.addAssign_operation (var_bankName, var_declarationInRamList  COMMA_SOURCE_FILE ("communs.galgas", 116)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("communs.galgas", 117)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_ram_5F_definition_i2_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ram) COMMA_SOURCE_FILE ("communs.galgas", 107)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 108)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("communs.galgas", 109)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_8 (inCompiler)) {
    case 2: {
      nt_declaration_5F_in_5F_ram_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("communs.galgas", 117)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_ram_5F_definition_i2_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ram) COMMA_SOURCE_FILE ("communs.galgas", 107)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 108)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("communs.galgas", 109)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_8 (inCompiler)) {
    case 2: {
      nt_declaration_5F_in_5F_ram_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("communs.galgas", 117)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_constant_5F_definition_i3_ (GALGAS_constantDefinitionList & ioArgument_ioConstantDefinitionList,
                                                               C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_const) COMMA_SOURCE_FILE ("communs.galgas", 124)) ;
  GALGAS_lstring var_constantName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_constantDeclaration) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 125)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("communs.galgas", 126)) ;
  GALGAS_immediatExpression var_expression ;
  nt_immediate_5F_expression_ (var_expression, inCompiler) ;
  ioArgument_ioConstantDefinitionList.addAssign_operation (var_constantName, var_expression  COMMA_SOURCE_FILE ("communs.galgas", 128)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_constant_5F_definition_i3_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_const) COMMA_SOURCE_FILE ("communs.galgas", 124)) ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_constantDeclaration) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 125)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("communs.galgas", 126)) ;
  nt_immediate_5F_expression_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_constant_5F_definition_i3_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_const) COMMA_SOURCE_FILE ("communs.galgas", 124)) ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_constantDeclaration) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 125)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("communs.galgas", 126)) ;
  nt_immediate_5F_expression_indexing (inCompiler) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_expression_i4_ (GALGAS_immediatExpression & outArgument_outExpression,
                                                                C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  nt_immediate_5F_bitwise_5F_term_ (outArgument_outExpression, inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_9 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE ("communs.galgas", 137)) ;
      GALGAS_immediatExpression var_rightExpression ;
      nt_immediate_5F_bitwise_5F_term_ (var_rightExpression, inCompiler) ;
      outArgument_outExpression = GALGAS_immediatOr::constructor_new (outArgument_outExpression, var_rightExpression  COMMA_SOURCE_FILE ("communs.galgas", 139)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5E_) COMMA_SOURCE_FILE ("communs.galgas", 141)) ;
      GALGAS_immediatExpression var_rightExpression ;
      nt_immediate_5F_bitwise_5F_term_ (var_rightExpression, inCompiler) ;
      outArgument_outExpression = GALGAS_immediatXor::constructor_new (outArgument_outExpression, var_rightExpression  COMMA_SOURCE_FILE ("communs.galgas", 143)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_expression_i4_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_immediate_5F_bitwise_5F_term_parse (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_9 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE ("communs.galgas", 137)) ;
      nt_immediate_5F_bitwise_5F_term_parse (inCompiler) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5E_) COMMA_SOURCE_FILE ("communs.galgas", 141)) ;
      nt_immediate_5F_bitwise_5F_term_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_expression_i4_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_immediate_5F_bitwise_5F_term_indexing (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_9 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE ("communs.galgas", 137)) ;
      nt_immediate_5F_bitwise_5F_term_indexing (inCompiler) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5E_) COMMA_SOURCE_FILE ("communs.galgas", 141)) ;
      nt_immediate_5F_bitwise_5F_term_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_bitwise_5F_term_i5_ (GALGAS_immediatExpression & outArgument_outExpression,
                                                                     C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  nt_immediate_5F_bitwise_5F_factor_ (outArgument_outExpression, inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_10 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__26_) COMMA_SOURCE_FILE ("communs.galgas", 153)) ;
      GALGAS_immediatExpression var_rightExpression ;
      nt_immediate_5F_bitwise_5F_factor_ (var_rightExpression, inCompiler) ;
      outArgument_outExpression = GALGAS_immediatAnd::constructor_new (outArgument_outExpression, var_rightExpression  COMMA_SOURCE_FILE ("communs.galgas", 156)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_bitwise_5F_term_i5_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_immediate_5F_bitwise_5F_factor_parse (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_10 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__26_) COMMA_SOURCE_FILE ("communs.galgas", 153)) ;
      nt_immediate_5F_bitwise_5F_factor_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_bitwise_5F_term_i5_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_immediate_5F_bitwise_5F_factor_indexing (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_10 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__26_) COMMA_SOURCE_FILE ("communs.galgas", 153)) ;
      nt_immediate_5F_bitwise_5F_factor_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_bitwise_5F_factor_i6_ (GALGAS_immediatExpression & outArgument_outExpression,
                                                                       C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  nt_immediate_5F_term_ (outArgument_outExpression, inCompiler) ;
  switch (select_communs_11 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D__3D_) COMMA_SOURCE_FILE ("communs.galgas", 166)) ;
    GALGAS_immediatExpression var_rightExpression ;
    nt_immediate_5F_term_ (var_rightExpression, inCompiler) ;
    outArgument_outExpression = GALGAS_immediatEqualTest::constructor_new (outArgument_outExpression, var_rightExpression  COMMA_SOURCE_FILE ("communs.galgas", 169)) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21__3D_) COMMA_SOURCE_FILE ("communs.galgas", 171)) ;
    GALGAS_immediatExpression var_rightExpression ;
    nt_immediate_5F_term_ (var_rightExpression, inCompiler) ;
    outArgument_outExpression = GALGAS_immediatNotEqualTest::constructor_new (outArgument_outExpression, var_rightExpression  COMMA_SOURCE_FILE ("communs.galgas", 174)) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3D_) COMMA_SOURCE_FILE ("communs.galgas", 176)) ;
    GALGAS_immediatExpression var_rightExpression ;
    nt_immediate_5F_term_ (var_rightExpression, inCompiler) ;
    outArgument_outExpression = GALGAS_immediatGreaterOrEqualTest::constructor_new (outArgument_outExpression, var_rightExpression  COMMA_SOURCE_FILE ("communs.galgas", 179)) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3D_) COMMA_SOURCE_FILE ("communs.galgas", 181)) ;
    GALGAS_immediatExpression var_rightExpression ;
    nt_immediate_5F_term_ (var_rightExpression, inCompiler) ;
    outArgument_outExpression = GALGAS_immediatLowerOrEqualTest::constructor_new (outArgument_outExpression, var_rightExpression  COMMA_SOURCE_FILE ("communs.galgas", 184)) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E_) COMMA_SOURCE_FILE ("communs.galgas", 186)) ;
    GALGAS_immediatExpression var_rightExpression ;
    nt_immediate_5F_term_ (var_rightExpression, inCompiler) ;
    outArgument_outExpression = GALGAS_immediatGreaterTest::constructor_new (outArgument_outExpression, var_rightExpression  COMMA_SOURCE_FILE ("communs.galgas", 189)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C_) COMMA_SOURCE_FILE ("communs.galgas", 191)) ;
    GALGAS_immediatExpression var_rightExpression ;
    nt_immediate_5F_term_ (var_rightExpression, inCompiler) ;
    outArgument_outExpression = GALGAS_immediatLowerTest::constructor_new (outArgument_outExpression, var_rightExpression  COMMA_SOURCE_FILE ("communs.galgas", 194)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_bitwise_5F_factor_i6_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_immediate_5F_term_parse (inCompiler) ;
  switch (select_communs_11 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D__3D_) COMMA_SOURCE_FILE ("communs.galgas", 166)) ;
    nt_immediate_5F_term_parse (inCompiler) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21__3D_) COMMA_SOURCE_FILE ("communs.galgas", 171)) ;
    nt_immediate_5F_term_parse (inCompiler) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3D_) COMMA_SOURCE_FILE ("communs.galgas", 176)) ;
    nt_immediate_5F_term_parse (inCompiler) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3D_) COMMA_SOURCE_FILE ("communs.galgas", 181)) ;
    nt_immediate_5F_term_parse (inCompiler) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E_) COMMA_SOURCE_FILE ("communs.galgas", 186)) ;
    nt_immediate_5F_term_parse (inCompiler) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C_) COMMA_SOURCE_FILE ("communs.galgas", 191)) ;
    nt_immediate_5F_term_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_bitwise_5F_factor_i6_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_immediate_5F_term_indexing (inCompiler) ;
  switch (select_communs_11 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D__3D_) COMMA_SOURCE_FILE ("communs.galgas", 166)) ;
    nt_immediate_5F_term_indexing (inCompiler) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21__3D_) COMMA_SOURCE_FILE ("communs.galgas", 171)) ;
    nt_immediate_5F_term_indexing (inCompiler) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3D_) COMMA_SOURCE_FILE ("communs.galgas", 176)) ;
    nt_immediate_5F_term_indexing (inCompiler) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3D_) COMMA_SOURCE_FILE ("communs.galgas", 181)) ;
    nt_immediate_5F_term_indexing (inCompiler) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E_) COMMA_SOURCE_FILE ("communs.galgas", 186)) ;
    nt_immediate_5F_term_indexing (inCompiler) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C_) COMMA_SOURCE_FILE ("communs.galgas", 191)) ;
    nt_immediate_5F_term_indexing (inCompiler) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_term_i7_ (GALGAS_immediatExpression & outArgument_outExpression,
                                                          C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  nt_immediate_5F_factor_ (outArgument_outExpression, inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_12 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2B_) COMMA_SOURCE_FILE ("communs.galgas", 204)) ;
      GALGAS_immediatExpression var_rightExpression ;
      nt_immediate_5F_factor_ (var_rightExpression, inCompiler) ;
      outArgument_outExpression = GALGAS_immediatAdd::constructor_new (outArgument_outExpression, var_rightExpression  COMMA_SOURCE_FILE ("communs.galgas", 207)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE ("communs.galgas", 209)) ;
      GALGAS_immediatExpression var_rightExpression ;
      nt_immediate_5F_factor_ (var_rightExpression, inCompiler) ;
      outArgument_outExpression = GALGAS_immediatSub::constructor_new (outArgument_outExpression, var_rightExpression  COMMA_SOURCE_FILE ("communs.galgas", 212)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3C_) COMMA_SOURCE_FILE ("communs.galgas", 214)) ;
      GALGAS_immediatExpression var_rightExpression ;
      nt_immediate_5F_factor_ (var_rightExpression, inCompiler) ;
      outArgument_outExpression = GALGAS_immediatLeftShift::constructor_new (outArgument_outExpression, var_rightExpression  COMMA_SOURCE_FILE ("communs.galgas", 217)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3E_) COMMA_SOURCE_FILE ("communs.galgas", 219)) ;
      GALGAS_immediatExpression var_rightExpression ;
      nt_immediate_5F_factor_ (var_rightExpression, inCompiler) ;
      outArgument_outExpression = GALGAS_immediatRightShift::constructor_new (outArgument_outExpression, var_rightExpression  COMMA_SOURCE_FILE ("communs.galgas", 222)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_term_i7_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_immediate_5F_factor_parse (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_12 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2B_) COMMA_SOURCE_FILE ("communs.galgas", 204)) ;
      nt_immediate_5F_factor_parse (inCompiler) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE ("communs.galgas", 209)) ;
      nt_immediate_5F_factor_parse (inCompiler) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3C_) COMMA_SOURCE_FILE ("communs.galgas", 214)) ;
      nt_immediate_5F_factor_parse (inCompiler) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3E_) COMMA_SOURCE_FILE ("communs.galgas", 219)) ;
      nt_immediate_5F_factor_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_term_i7_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_immediate_5F_factor_indexing (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_12 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2B_) COMMA_SOURCE_FILE ("communs.galgas", 204)) ;
      nt_immediate_5F_factor_indexing (inCompiler) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE ("communs.galgas", 209)) ;
      nt_immediate_5F_factor_indexing (inCompiler) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3C_) COMMA_SOURCE_FILE ("communs.galgas", 214)) ;
      nt_immediate_5F_factor_indexing (inCompiler) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3E_) COMMA_SOURCE_FILE ("communs.galgas", 219)) ;
      nt_immediate_5F_factor_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_factor_i8_ (GALGAS_immediatExpression & outArgument_outExpression,
                                                            C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  nt_immediate_5F_primary_ (outArgument_outExpression, inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_13 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE ("communs.galgas", 232)) ;
      GALGAS_immediatExpression var_rightExpression ;
      nt_immediate_5F_primary_ (var_rightExpression, inCompiler) ;
      outArgument_outExpression = GALGAS_immediatMul::constructor_new (outArgument_outExpression, var_rightExpression  COMMA_SOURCE_FILE ("communs.galgas", 235)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__25_) COMMA_SOURCE_FILE ("communs.galgas", 237)) ;
      GALGAS_immediatExpression var_rightExpression ;
      nt_immediate_5F_primary_ (var_rightExpression, inCompiler) ;
      outArgument_outExpression = GALGAS_immediatMod::constructor_new (outArgument_outExpression, var_rightExpression  COMMA_SOURCE_FILE ("communs.galgas", 240)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2F_) COMMA_SOURCE_FILE ("communs.galgas", 242)) ;
      GALGAS_immediatExpression var_rightExpression ;
      nt_immediate_5F_primary_ (var_rightExpression, inCompiler) ;
      outArgument_outExpression = GALGAS_immediatDiv::constructor_new (outArgument_outExpression, var_rightExpression  COMMA_SOURCE_FILE ("communs.galgas", 245)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_factor_i8_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_immediate_5F_primary_parse (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_13 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE ("communs.galgas", 232)) ;
      nt_immediate_5F_primary_parse (inCompiler) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__25_) COMMA_SOURCE_FILE ("communs.galgas", 237)) ;
      nt_immediate_5F_primary_parse (inCompiler) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2F_) COMMA_SOURCE_FILE ("communs.galgas", 242)) ;
      nt_immediate_5F_primary_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_factor_i8_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_immediate_5F_primary_indexing (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_13 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE ("communs.galgas", 232)) ;
      nt_immediate_5F_primary_indexing (inCompiler) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__25_) COMMA_SOURCE_FILE ("communs.galgas", 237)) ;
      nt_immediate_5F_primary_indexing (inCompiler) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2F_) COMMA_SOURCE_FILE ("communs.galgas", 242)) ;
      nt_immediate_5F_primary_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_primary_i9_ (GALGAS_immediatExpression & outArgument_outExpression,
                                                             C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  switch (select_communs_14 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE ("communs.galgas", 254)) ;
    GALGAS_immediatExpression var_expression ;
    nt_immediate_5F_primary_ (var_expression, inCompiler) ;
    outArgument_outExpression = GALGAS_immediatNegate::constructor_new (var_expression  COMMA_SOURCE_FILE ("communs.galgas", 257)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7E_) COMMA_SOURCE_FILE ("communs.galgas", 259)) ;
    GALGAS_immediatExpression var_expression ;
    nt_immediate_5F_primary_ (var_expression, inCompiler) ;
    outArgument_outExpression = GALGAS_immediatComplement::constructor_new (var_expression  COMMA_SOURCE_FILE ("communs.galgas", 262)) ;
  } break ;
  case 3: {
    GALGAS_luint var_constant = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("communs.galgas", 264)) ;
    outArgument_outExpression = GALGAS_immediatInteger::constructor_new (var_constant  COMMA_SOURCE_FILE ("communs.galgas", 265)) ;
  } break ;
  case 4: {
    GALGAS_lchar var_literalCharValue = inCompiler->synthetizedAttribute_charValue () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char) COMMA_SOURCE_FILE ("communs.galgas", 267)) ;
    outArgument_outExpression = GALGAS_immediatInteger::constructor_new (GALGAS_luint::constructor_new (var_literalCharValue.reader_char (SOURCE_FILE ("communs.galgas", 268)).reader_uint (SOURCE_FILE ("communs.galgas", 268)), var_literalCharValue.reader_location (SOURCE_FILE ("communs.galgas", 268))  COMMA_SOURCE_FILE ("communs.galgas", 268))  COMMA_SOURCE_FILE ("communs.galgas", 268)) ;
  } break ;
  case 5: {
    GALGAS_lstring var_registerName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_variableUse) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 270)) ;
    GALGAS_luint var_offset ;
    switch (select_communs_15 (inCompiler)) {
    case 1: {
      var_offset = GALGAS_luint::constructor_new (GALGAS_uint ((uint32_t) 0U), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("communs.galgas", 273))  COMMA_SOURCE_FILE ("communs.galgas", 273)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("communs.galgas", 275)) ;
      var_offset = inCompiler->synthetizedAttribute_uint_33__32_value () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("communs.galgas", 276)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("communs.galgas", 277)) ;
    } break ;
    default:
      break ;
    }
    GALGAS_registerExpression var_registerExpression = GALGAS_registerExpression::constructor_new (var_registerName, var_offset  COMMA_SOURCE_FILE ("communs.galgas", 279)) ;
    outArgument_outExpression = GALGAS_immediatRegister::constructor_new (var_registerExpression  COMMA_SOURCE_FILE ("communs.galgas", 283)) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("communs.galgas", 285)) ;
    nt_immediate_5F_expression_ (outArgument_outExpression, inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("communs.galgas", 287)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__40_) COMMA_SOURCE_FILE ("communs.galgas", 289)) ;
    GALGAS_lstring var_registerName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 290)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("communs.galgas", 291)) ;
    GALGAS_immediatSliceExpressionList var_sliceExpressionList = GALGAS_immediatSliceExpressionList::constructor_emptyList (SOURCE_FILE ("communs.galgas", 292)) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      GALGAS_lstring var_sliceName = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 294)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("communs.galgas", 295)) ;
      GALGAS_immediatExpression var_expression ;
      nt_immediate_5F_expression_ (var_expression, inCompiler) ;
      var_sliceExpressionList.addAssign_operation (var_sliceName, var_expression  COMMA_SOURCE_FILE ("communs.galgas", 298)) ;
      switch (select_communs_16 (inCompiler)) {
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("communs.galgas", 300)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("communs.galgas", 302)) ;
    outArgument_outExpression = GALGAS_immediatSlice::constructor_new (var_registerName, var_sliceExpressionList  COMMA_SOURCE_FILE ("communs.galgas", 303)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_primary_i9_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_communs_14 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE ("communs.galgas", 254)) ;
    nt_immediate_5F_primary_parse (inCompiler) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7E_) COMMA_SOURCE_FILE ("communs.galgas", 259)) ;
    nt_immediate_5F_primary_parse (inCompiler) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("communs.galgas", 264)) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char) COMMA_SOURCE_FILE ("communs.galgas", 267)) ;
  } break ;
  case 5: {
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_variableUse) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 270)) ;
    switch (select_communs_15 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("communs.galgas", 275)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("communs.galgas", 276)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("communs.galgas", 277)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("communs.galgas", 285)) ;
    nt_immediate_5F_expression_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("communs.galgas", 287)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__40_) COMMA_SOURCE_FILE ("communs.galgas", 289)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 290)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("communs.galgas", 291)) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 294)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("communs.galgas", 295)) ;
      nt_immediate_5F_expression_parse (inCompiler) ;
      switch (select_communs_16 (inCompiler)) {
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("communs.galgas", 300)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("communs.galgas", 302)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_primary_i9_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_communs_14 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE ("communs.galgas", 254)) ;
    nt_immediate_5F_primary_indexing (inCompiler) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7E_) COMMA_SOURCE_FILE ("communs.galgas", 259)) ;
    nt_immediate_5F_primary_indexing (inCompiler) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("communs.galgas", 264)) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char) COMMA_SOURCE_FILE ("communs.galgas", 267)) ;
  } break ;
  case 5: {
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_variableUse) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 270)) ;
    switch (select_communs_15 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("communs.galgas", 275)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("communs.galgas", 276)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("communs.galgas", 277)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("communs.galgas", 285)) ;
    nt_immediate_5F_expression_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("communs.galgas", 287)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__40_) COMMA_SOURCE_FILE ("communs.galgas", 289)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 290)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("communs.galgas", 291)) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 294)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("communs.galgas", 295)) ;
      nt_immediate_5F_expression_indexing (inCompiler) ;
      switch (select_communs_16 (inCompiler)) {
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("communs.galgas", 300)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("communs.galgas", 302)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_register_5F_parsing_i10_ (GALGAS_registerExpression & outArgument_outRegisterExpression,
                                                             C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outRegisterExpression.drop () ; // Release 'out' argument
  GALGAS_lstring var_registerName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_variableUse) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 310)) ;
  GALGAS_luint var_offset ;
  switch (select_communs_17 (inCompiler)) {
  case 1: {
    var_offset = GALGAS_luint::constructor_new (GALGAS_uint ((uint32_t) 0U), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("communs.galgas", 313))  COMMA_SOURCE_FILE ("communs.galgas", 313)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("communs.galgas", 315)) ;
    var_offset = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("communs.galgas", 316)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("communs.galgas", 317)) ;
  } break ;
  default:
    break ;
  }
  outArgument_outRegisterExpression = GALGAS_registerExpression::constructor_new (var_registerName, var_offset  COMMA_SOURCE_FILE ("communs.galgas", 319)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_register_5F_parsing_i10_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_variableUse) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 310)) ;
  switch (select_communs_17 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("communs.galgas", 315)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("communs.galgas", 316)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("communs.galgas", 317)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_register_5F_parsing_i10_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_variableUse) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 310)) ;
  switch (select_communs_17 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("communs.galgas", 315)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("communs.galgas", 316)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("communs.galgas", 317)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_bit_5F_number_5F_parsing_i11_ (GALGAS_bitNumberExpression & outArgument_outBitNumber,
                                                                  C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outBitNumber.drop () ; // Release 'out' argument
  GALGAS_lstring var_bitNumberLabel = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 327)) ;
  GALGAS_luint var_bitIndex ;
  switch (select_communs_18 (inCompiler)) {
  case 1: {
    var_bitIndex = GALGAS_luint::constructor_new (GALGAS_uint ((uint32_t) 0U), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("communs.galgas", 330))  COMMA_SOURCE_FILE ("communs.galgas", 330)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("communs.galgas", 332)) ;
    var_bitIndex = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("communs.galgas", 333)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("communs.galgas", 334)) ;
  } break ;
  default:
    break ;
  }
  outArgument_outBitNumber = GALGAS_bitNumberLabelValue::constructor_new (var_bitNumberLabel, var_bitIndex  COMMA_SOURCE_FILE ("communs.galgas", 336)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_bit_5F_number_5F_parsing_i11_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 327)) ;
  switch (select_communs_18 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("communs.galgas", 332)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("communs.galgas", 333)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("communs.galgas", 334)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_bit_5F_number_5F_parsing_i11_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("communs.galgas", 327)) ;
  switch (select_communs_18 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("communs.galgas", 332)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("communs.galgas", 333)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("communs.galgas", 334)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_bit_5F_number_5F_parsing_i12_ (GALGAS_bitNumberExpression & outArgument_outBitNumber,
                                                                  C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outBitNumber.drop () ; // Release 'out' argument
  GALGAS_luint var_bitNumberLiteral = inCompiler->synthetizedAttribute_uint_33__32_value () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("communs.galgas", 342)) ;
  outArgument_outBitNumber = GALGAS_bitNumberLiteralValue::constructor_new (var_bitNumberLiteral  COMMA_SOURCE_FILE ("communs.galgas", 343)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_bit_5F_number_5F_parsing_i12_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("communs.galgas", 342)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_bit_5F_number_5F_parsing_i12_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("communs.galgas", 342)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_optional_5F_w_5F_as_5F_dest_i13_ (GALGAS_bool & outArgument_out_5F_W_5F_isDestination,
                                                                     C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_out_5F_W_5F_isDestination.drop () ; // Release 'out' argument
  switch (select_communs_19 (inCompiler)) {
  case 1: {
    outArgument_out_5F_W_5F_isDestination = GALGAS_bool (false) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("communs.galgas", 352)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("communs.galgas", 353)) ;
    outArgument_out_5F_W_5F_isDestination = GALGAS_bool (true) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_optional_5F_w_5F_as_5F_dest_i13_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_communs_19 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("communs.galgas", 352)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("communs.galgas", 353)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_communs::rule_communs_optional_5F_w_5F_as_5F_dest_i13_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_communs_19 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("communs.galgas", 352)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("communs.galgas", 353)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_baseline_5F_declaredRoutineMap::cMapElement_baseline_5F_declaredRoutineMap (const GALGAS_lstring & inKey
                                                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_baseline_5F_declaredRoutineMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_baseline_5F_declaredRoutineMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_baseline_5F_declaredRoutineMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_baseline_5F_declaredRoutineMap::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_baseline_5F_declaredRoutineMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_baseline_5F_declaredRoutineMap * operand = (cMapElement_baseline_5F_declaredRoutineMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_declaredRoutineMap::GALGAS_baseline_5F_declaredRoutineMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_declaredRoutineMap::GALGAS_baseline_5F_declaredRoutineMap (const GALGAS_baseline_5F_declaredRoutineMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_declaredRoutineMap & GALGAS_baseline_5F_declaredRoutineMap::operator = (const GALGAS_baseline_5F_declaredRoutineMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_declaredRoutineMap GALGAS_baseline_5F_declaredRoutineMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_baseline_5F_declaredRoutineMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_declaredRoutineMap GALGAS_baseline_5F_declaredRoutineMap::constructor_mapWithMapToOverride (const GALGAS_baseline_5F_declaredRoutineMap & inMapToOverride
                                                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_declaredRoutineMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_declaredRoutineMap GALGAS_baseline_5F_declaredRoutineMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_baseline_5F_declaredRoutineMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_declaredRoutineMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_baseline_5F_declaredRoutineMap * p = NULL ;
  macroMyNew (p, cMapElement_baseline_5F_declaredRoutineMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@baseline_5F_declaredRoutineMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_declaredRoutineMap::modifier_insertKey (GALGAS_lstring inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cMapElement_baseline_5F_declaredRoutineMap * p = NULL ;
  macroMyNew (p, cMapElement_baseline_5F_declaredRoutineMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' routine is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_baseline_5F_declaredRoutineMap_searchKey = "the '%K' routine is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_declaredRoutineMap::method_searchKey (GALGAS_lstring inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_baseline_5F_declaredRoutineMap * p = (const cMapElement_baseline_5F_declaredRoutineMap *) performSearch (inKey,
                                                                                                                               inCompiler,
                                                                                                                               kSearchErrorMessage_baseline_5F_declaredRoutineMap_searchKey
                                                                                                                               COMMA_THERE) ;
  if (NULL == p) {
  }else{
    macroValidSharedObject (p, cMapElement_baseline_5F_declaredRoutineMap) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_baseline_5F_declaredRoutineMap * GALGAS_baseline_5F_declaredRoutineMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                                       const GALGAS_string & inKey
                                                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_baseline_5F_declaredRoutineMap * result = (cMapElement_baseline_5F_declaredRoutineMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_baseline_5F_declaredRoutineMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_baseline_5F_declaredRoutineMap::cEnumerator_baseline_5F_declaredRoutineMap (const GALGAS_baseline_5F_declaredRoutineMap & inEnumeratedObject,
                                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_declaredRoutineMap_2D_element cEnumerator_baseline_5F_declaredRoutineMap::current (LOCATION_ARGS) const {
  const cMapElement_baseline_5F_declaredRoutineMap * p = (const cMapElement_baseline_5F_declaredRoutineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_baseline_5F_declaredRoutineMap) ;
  return GALGAS_baseline_5F_declaredRoutineMap_2D_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_baseline_5F_declaredRoutineMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          @baseline_declaredRoutineMap type                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_baseline_5F_declaredRoutineMap ("baseline_declaredRoutineMap",
                                                       NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_baseline_5F_declaredRoutineMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_baseline_5F_declaredRoutineMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_baseline_5F_declaredRoutineMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_baseline_5F_declaredRoutineMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_declaredRoutineMap GALGAS_baseline_5F_declaredRoutineMap::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_declaredRoutineMap result ;
  const GALGAS_baseline_5F_declaredRoutineMap * p = (const GALGAS_baseline_5F_declaredRoutineMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_baseline_5F_declaredRoutineMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("baseline_declaredRoutineMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                      Class for element of '@baseline_5F_intermediate_5F_instructionList' list                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_baseline_5F_intermediate_5F_instructionList : public cCollectionElement {
  public : GALGAS_baseline_5F_intermediate_5F_instructionList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_baseline_5F_intermediate_5F_instructionList (const GALGAS_baseline_5F_intermediate_5F_instruction & in_mInstruction
                                                                           COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_baseline_5F_intermediate_5F_instructionList::cCollectionElement_baseline_5F_intermediate_5F_instructionList (const GALGAS_baseline_5F_intermediate_5F_instruction & in_mInstruction
                                                                                                                                COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mInstruction) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_baseline_5F_intermediate_5F_instructionList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_baseline_5F_intermediate_5F_instructionList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_baseline_5F_intermediate_5F_instructionList (mObject.mAttribute_mInstruction COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_baseline_5F_intermediate_5F_instructionList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstruction" ":" ;
  mObject.mAttribute_mInstruction.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_baseline_5F_intermediate_5F_instructionList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_baseline_5F_intermediate_5F_instructionList * operand = (cCollectionElement_baseline_5F_intermediate_5F_instructionList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_baseline_5F_intermediate_5F_instructionList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_intermediate_5F_instructionList::GALGAS_baseline_5F_intermediate_5F_instructionList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_intermediate_5F_instructionList::GALGAS_baseline_5F_intermediate_5F_instructionList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_intermediate_5F_instructionList GALGAS_baseline_5F_intermediate_5F_instructionList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_baseline_5F_intermediate_5F_instructionList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_intermediate_5F_instructionList GALGAS_baseline_5F_intermediate_5F_instructionList::constructor_listWithValue (const GALGAS_baseline_5F_intermediate_5F_instruction & inOperand0
                                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_intermediate_5F_instructionList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_baseline_5F_intermediate_5F_instructionList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_intermediate_5F_instructionList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                                    const GALGAS_baseline_5F_intermediate_5F_instruction & in_mInstruction
                                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement_baseline_5F_intermediate_5F_instructionList * p = NULL ;
  macroMyNew (p, cCollectionElement_baseline_5F_intermediate_5F_instructionList (in_mInstruction COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_intermediate_5F_instructionList::addAssign_operation (const GALGAS_baseline_5F_intermediate_5F_instruction & inOperand0
                                                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_baseline_5F_intermediate_5F_instructionList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_intermediate_5F_instructionList::modifier_insertAtIndex (const GALGAS_baseline_5F_intermediate_5F_instruction inOperand0,
                                                                                 const GALGAS_uint inInsertionIndex,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_baseline_5F_intermediate_5F_instructionList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_intermediate_5F_instructionList::modifier_removeAtIndex (GALGAS_baseline_5F_intermediate_5F_instruction & outOperand0,
                                                                                 const GALGAS_uint inRemoveIndex,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_baseline_5F_intermediate_5F_instructionList * p = (cCollectionElement_baseline_5F_intermediate_5F_instructionList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_baseline_5F_intermediate_5F_instructionList) ;
      outOperand0 = p->mObject.mAttribute_mInstruction ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_intermediate_5F_instructionList::modifier_popFirst (GALGAS_baseline_5F_intermediate_5F_instruction & outOperand0,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_intermediate_5F_instructionList * p = (cCollectionElement_baseline_5F_intermediate_5F_instructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_baseline_5F_intermediate_5F_instructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_intermediate_5F_instructionList::modifier_popLast (GALGAS_baseline_5F_intermediate_5F_instruction & outOperand0,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_intermediate_5F_instructionList * p = (cCollectionElement_baseline_5F_intermediate_5F_instructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_baseline_5F_intermediate_5F_instructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_intermediate_5F_instructionList::method_first (GALGAS_baseline_5F_intermediate_5F_instruction & outOperand0,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_intermediate_5F_instructionList * p = (cCollectionElement_baseline_5F_intermediate_5F_instructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_baseline_5F_intermediate_5F_instructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_intermediate_5F_instructionList::method_last (GALGAS_baseline_5F_intermediate_5F_instruction & outOperand0,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_intermediate_5F_instructionList * p = (cCollectionElement_baseline_5F_intermediate_5F_instructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_baseline_5F_intermediate_5F_instructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_intermediate_5F_instructionList GALGAS_baseline_5F_intermediate_5F_instructionList::operator_concat (const GALGAS_baseline_5F_intermediate_5F_instructionList & inOperand
                                                                                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_baseline_5F_intermediate_5F_instructionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_intermediate_5F_instructionList GALGAS_baseline_5F_intermediate_5F_instructionList::add_operation (const GALGAS_baseline_5F_intermediate_5F_instructionList & inOperand,
                                                                                                                      C_Compiler * /* inCompiler */
                                                                                                                      COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_baseline_5F_intermediate_5F_instructionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_intermediate_5F_instructionList GALGAS_baseline_5F_intermediate_5F_instructionList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                                                C_Compiler * inCompiler
                                                                                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_baseline_5F_intermediate_5F_instructionList result = GALGAS_baseline_5F_intermediate_5F_instructionList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_intermediate_5F_instructionList GALGAS_baseline_5F_intermediate_5F_instructionList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                                                C_Compiler * inCompiler
                                                                                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_baseline_5F_intermediate_5F_instructionList result = GALGAS_baseline_5F_intermediate_5F_instructionList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_intermediate_5F_instructionList::dotAssign_operation (const GALGAS_baseline_5F_intermediate_5F_instructionList inOperand
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_intermediate_5F_instructionList::modifier_setMInstructionAtIndex (GALGAS_baseline_5F_intermediate_5F_instruction inOperand,
                                                                                          GALGAS_uint inIndex,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement_baseline_5F_intermediate_5F_instructionList * p = (cCollectionElement_baseline_5F_intermediate_5F_instructionList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_baseline_5F_intermediate_5F_instructionList) ;
    macroUniqueSharedObject (p) ;
    p->mObject.mAttribute_mInstruction = inOperand ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_intermediate_5F_instruction GALGAS_baseline_5F_intermediate_5F_instructionList::reader_mInstructionAtIndex (const GALGAS_uint & inIndex,
                                                                                                                               C_Compiler * inCompiler
                                                                                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_intermediate_5F_instructionList * p = (cCollectionElement_baseline_5F_intermediate_5F_instructionList *) attributes.ptr () ;
  GALGAS_baseline_5F_intermediate_5F_instruction result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_baseline_5F_intermediate_5F_instructionList) ;
    result = p->mObject.mAttribute_mInstruction ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_baseline_5F_intermediate_5F_instructionList::cEnumerator_baseline_5F_intermediate_5F_instructionList (const GALGAS_baseline_5F_intermediate_5F_instructionList & inEnumeratedObject,
                                                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_intermediate_5F_instructionList_2D_element cEnumerator_baseline_5F_intermediate_5F_instructionList::current (LOCATION_ARGS) const {
  const cCollectionElement_baseline_5F_intermediate_5F_instructionList * p = (const cCollectionElement_baseline_5F_intermediate_5F_instructionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_baseline_5F_intermediate_5F_instructionList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_intermediate_5F_instruction cEnumerator_baseline_5F_intermediate_5F_instructionList::current_mInstruction (LOCATION_ARGS) const {
  const cCollectionElement_baseline_5F_intermediate_5F_instructionList * p = (const cCollectionElement_baseline_5F_intermediate_5F_instructionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_baseline_5F_intermediate_5F_instructionList) ;
  return p->mObject.mAttribute_mInstruction ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     @baseline_intermediate_instructionList type                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_baseline_5F_intermediate_5F_instructionList ("baseline_intermediate_instructionList",
                                                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_baseline_5F_intermediate_5F_instructionList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_baseline_5F_intermediate_5F_instructionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_baseline_5F_intermediate_5F_instructionList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_baseline_5F_intermediate_5F_instructionList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_intermediate_5F_instructionList GALGAS_baseline_5F_intermediate_5F_instructionList::extractObject (const GALGAS_object & inObject,
                                                                                                                      C_Compiler * inCompiler
                                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_intermediate_5F_instructionList result ;
  const GALGAS_baseline_5F_intermediate_5F_instructionList * p = (const GALGAS_baseline_5F_intermediate_5F_instructionList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_baseline_5F_intermediate_5F_instructionList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("baseline_intermediate_instructionList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_baselineRoutineMap::cMapElement_baselineRoutineMap (const GALGAS_lstring & inKey,
                                                                const GALGAS_bool & in_mIsNoReturn,
                                                                const GALGAS_luint & in_mPage
                                                                COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mIsNoReturn (in_mIsNoReturn),
mAttribute_mPage (in_mPage) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_baselineRoutineMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIsNoReturn.isValid () && mAttribute_mPage.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_baselineRoutineMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_baselineRoutineMap (mAttribute_lkey, mAttribute_mIsNoReturn, mAttribute_mPage COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_baselineRoutineMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsNoReturn" ":" ;
  mAttribute_mIsNoReturn.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPage" ":" ;
  mAttribute_mPage.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_baselineRoutineMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_baselineRoutineMap * operand = (cMapElement_baselineRoutineMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mIsNoReturn.objectCompare (operand->mAttribute_mIsNoReturn) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mPage.objectCompare (operand->mAttribute_mPage) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baselineRoutineMap::GALGAS_baselineRoutineMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baselineRoutineMap::GALGAS_baselineRoutineMap (const GALGAS_baselineRoutineMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baselineRoutineMap & GALGAS_baselineRoutineMap::operator = (const GALGAS_baselineRoutineMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baselineRoutineMap GALGAS_baselineRoutineMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_baselineRoutineMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baselineRoutineMap GALGAS_baselineRoutineMap::constructor_mapWithMapToOverride (const GALGAS_baselineRoutineMap & inMapToOverride
                                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_baselineRoutineMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baselineRoutineMap GALGAS_baselineRoutineMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  GALGAS_baselineRoutineMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baselineRoutineMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                     const GALGAS_bool & inArgument0,
                                                     const GALGAS_luint & inArgument1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cMapElement_baselineRoutineMap * p = NULL ;
  macroMyNew (p, cMapElement_baselineRoutineMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@baselineRoutineMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baselineRoutineMap::modifier_insertKey (GALGAS_lstring inKey,
                                                    GALGAS_bool inArgument0,
                                                    GALGAS_luint inArgument1,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_baselineRoutineMap * p = NULL ;
  macroMyNew (p, cMapElement_baselineRoutineMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' routine is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_baselineRoutineMap_searchKey = "the '%K' routine is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baselineRoutineMap::method_searchKey (GALGAS_lstring inKey,
                                                  GALGAS_bool & outArgument0,
                                                  GALGAS_luint & outArgument1,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  const cMapElement_baselineRoutineMap * p = (const cMapElement_baselineRoutineMap *) performSearch (inKey,
                                                                                                       inCompiler,
                                                                                                       kSearchErrorMessage_baselineRoutineMap_searchKey
                                                                                                       COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_baselineRoutineMap) ;
    outArgument0 = p->mAttribute_mIsNoReturn ;
    outArgument1 = p->mAttribute_mPage ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_baselineRoutineMap::reader_mIsNoReturnForKey (const GALGAS_string & inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_baselineRoutineMap * p = (const cMapElement_baselineRoutineMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_baselineRoutineMap) ;
    result = p->mAttribute_mIsNoReturn ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint GALGAS_baselineRoutineMap::reader_mPageForKey (const GALGAS_string & inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_baselineRoutineMap * p = (const cMapElement_baselineRoutineMap *) attributes ;
  GALGAS_luint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_baselineRoutineMap) ;
    result = p->mAttribute_mPage ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baselineRoutineMap::modifier_setMIsNoReturnForKey (GALGAS_bool inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_baselineRoutineMap * p = (cMapElement_baselineRoutineMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_baselineRoutineMap) ;
    p->mAttribute_mIsNoReturn = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baselineRoutineMap::modifier_setMPageForKey (GALGAS_luint inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_baselineRoutineMap * p = (cMapElement_baselineRoutineMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_baselineRoutineMap) ;
    p->mAttribute_mPage = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_baselineRoutineMap * GALGAS_baselineRoutineMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                               const GALGAS_string & inKey
                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement_baselineRoutineMap * result = (cMapElement_baselineRoutineMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_baselineRoutineMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_baselineRoutineMap::cEnumerator_baselineRoutineMap (const GALGAS_baselineRoutineMap & inEnumeratedObject,
                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baselineRoutineMap_2D_element cEnumerator_baselineRoutineMap::current (LOCATION_ARGS) const {
  const cMapElement_baselineRoutineMap * p = (const cMapElement_baselineRoutineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_baselineRoutineMap) ;
  return GALGAS_baselineRoutineMap_2D_element (p->mAttribute_lkey, p->mAttribute_mIsNoReturn, p->mAttribute_mPage) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_baselineRoutineMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_baselineRoutineMap::current_mIsNoReturn (LOCATION_ARGS) const {
  const cMapElement_baselineRoutineMap * p = (const cMapElement_baselineRoutineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_baselineRoutineMap) ;
  return p->mAttribute_mIsNoReturn ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint cEnumerator_baselineRoutineMap::current_mPage (LOCATION_ARGS) const {
  const cMapElement_baselineRoutineMap * p = (const cMapElement_baselineRoutineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_baselineRoutineMap) ;
  return p->mAttribute_mPage ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              @baselineRoutineMap type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_baselineRoutineMap ("baselineRoutineMap",
                                           NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_baselineRoutineMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_baselineRoutineMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_baselineRoutineMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_baselineRoutineMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baselineRoutineMap GALGAS_baselineRoutineMap::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_baselineRoutineMap result ;
  const GALGAS_baselineRoutineMap * p = (const GALGAS_baselineRoutineMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_baselineRoutineMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("baselineRoutineMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_baselineSymbolTableForOptimizations::cMapElement_baselineSymbolTableForOptimizations (const GALGAS_lstring & inKey,
                                                                                                  const GALGAS_uint & in_mDefinitionLineIndex
                                                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mDefinitionLineIndex (in_mDefinitionLineIndex) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_baselineSymbolTableForOptimizations::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mDefinitionLineIndex.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_baselineSymbolTableForOptimizations::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_baselineSymbolTableForOptimizations (mAttribute_lkey, mAttribute_mDefinitionLineIndex COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_baselineSymbolTableForOptimizations::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDefinitionLineIndex" ":" ;
  mAttribute_mDefinitionLineIndex.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_baselineSymbolTableForOptimizations::compare (const cCollectionElement * inOperand) const {
  cMapElement_baselineSymbolTableForOptimizations * operand = (cMapElement_baselineSymbolTableForOptimizations *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mDefinitionLineIndex.objectCompare (operand->mAttribute_mDefinitionLineIndex) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baselineSymbolTableForOptimizations::GALGAS_baselineSymbolTableForOptimizations (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baselineSymbolTableForOptimizations::GALGAS_baselineSymbolTableForOptimizations (const GALGAS_baselineSymbolTableForOptimizations & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baselineSymbolTableForOptimizations & GALGAS_baselineSymbolTableForOptimizations::operator = (const GALGAS_baselineSymbolTableForOptimizations & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baselineSymbolTableForOptimizations GALGAS_baselineSymbolTableForOptimizations::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_baselineSymbolTableForOptimizations result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baselineSymbolTableForOptimizations GALGAS_baselineSymbolTableForOptimizations::constructor_mapWithMapToOverride (const GALGAS_baselineSymbolTableForOptimizations & inMapToOverride
                                                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_baselineSymbolTableForOptimizations result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baselineSymbolTableForOptimizations GALGAS_baselineSymbolTableForOptimizations::reader_overriddenMap (C_Compiler * inCompiler
                                                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_baselineSymbolTableForOptimizations result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baselineSymbolTableForOptimizations::addAssign_operation (const GALGAS_lstring & inKey,
                                                                      const GALGAS_uint & inArgument0,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cMapElement_baselineSymbolTableForOptimizations * p = NULL ;
  macroMyNew (p, cMapElement_baselineSymbolTableForOptimizations (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@baselineSymbolTableForOptimizations insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baselineSymbolTableForOptimizations::modifier_insertKey (GALGAS_lstring inKey,
                                                                     GALGAS_uint inArgument0,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_baselineSymbolTableForOptimizations * p = NULL ;
  macroMyNew (p, cMapElement_baselineSymbolTableForOptimizations (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' label is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_baselineSymbolTableForOptimizations_searchKey = "the '%K' label is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baselineSymbolTableForOptimizations::method_searchKey (GALGAS_lstring inKey,
                                                                   GALGAS_uint & outArgument0,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cMapElement_baselineSymbolTableForOptimizations * p = (const cMapElement_baselineSymbolTableForOptimizations *) performSearch (inKey,
                                                                                                                                         inCompiler,
                                                                                                                                         kSearchErrorMessage_baselineSymbolTableForOptimizations_searchKey
                                                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_baselineSymbolTableForOptimizations) ;
    outArgument0 = p->mAttribute_mDefinitionLineIndex ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baselineSymbolTableForOptimizations::modifier_removeKey (GALGAS_lstring inKey,
                                                                     GALGAS_uint & outArgument0,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  const char * kRemoveErrorMessage = "the '%K' label is not declared" ;
  capCollectionElement attributes ;
  performRemove (inKey, attributes, inCompiler, kRemoveErrorMessage COMMA_THERE) ;
  cMapElement_baselineSymbolTableForOptimizations * p = (cMapElement_baselineSymbolTableForOptimizations *) attributes.ptr () ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_baselineSymbolTableForOptimizations) ;
    outArgument0 = p->mAttribute_mDefinitionLineIndex ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_baselineSymbolTableForOptimizations::reader_mDefinitionLineIndexForKey (const GALGAS_string & inKey,
                                                                                           C_Compiler * inCompiler
                                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_baselineSymbolTableForOptimizations * p = (const cMapElement_baselineSymbolTableForOptimizations *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_baselineSymbolTableForOptimizations) ;
    result = p->mAttribute_mDefinitionLineIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baselineSymbolTableForOptimizations::modifier_setMDefinitionLineIndexForKey (GALGAS_uint inAttributeValue,
                                                                                         GALGAS_string inKey,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_baselineSymbolTableForOptimizations * p = (cMapElement_baselineSymbolTableForOptimizations *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_baselineSymbolTableForOptimizations) ;
    p->mAttribute_mDefinitionLineIndex = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_baselineSymbolTableForOptimizations * GALGAS_baselineSymbolTableForOptimizations::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                                                 const GALGAS_string & inKey
                                                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_baselineSymbolTableForOptimizations * result = (cMapElement_baselineSymbolTableForOptimizations *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_baselineSymbolTableForOptimizations) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_baselineSymbolTableForOptimizations::cEnumerator_baselineSymbolTableForOptimizations (const GALGAS_baselineSymbolTableForOptimizations & inEnumeratedObject,
                                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baselineSymbolTableForOptimizations_2D_element cEnumerator_baselineSymbolTableForOptimizations::current (LOCATION_ARGS) const {
  const cMapElement_baselineSymbolTableForOptimizations * p = (const cMapElement_baselineSymbolTableForOptimizations *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_baselineSymbolTableForOptimizations) ;
  return GALGAS_baselineSymbolTableForOptimizations_2D_element (p->mAttribute_lkey, p->mAttribute_mDefinitionLineIndex) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_baselineSymbolTableForOptimizations::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_baselineSymbolTableForOptimizations::current_mDefinitionLineIndex (LOCATION_ARGS) const {
  const cMapElement_baselineSymbolTableForOptimizations * p = (const cMapElement_baselineSymbolTableForOptimizations *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_baselineSymbolTableForOptimizations) ;
  return p->mAttribute_mDefinitionLineIndex ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      @baselineSymbolTableForOptimizations type                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_baselineSymbolTableForOptimizations ("baselineSymbolTableForOptimizations",
                                                            NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_baselineSymbolTableForOptimizations::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_baselineSymbolTableForOptimizations ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_baselineSymbolTableForOptimizations::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_baselineSymbolTableForOptimizations (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baselineSymbolTableForOptimizations GALGAS_baselineSymbolTableForOptimizations::extractObject (const GALGAS_object & inObject,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_baselineSymbolTableForOptimizations result ;
  const GALGAS_baselineSymbolTableForOptimizations * p = (const GALGAS_baselineSymbolTableForOptimizations *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_baselineSymbolTableForOptimizations *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("baselineSymbolTableForOptimizations", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                        Class for element of '@baseline_5F_assembly_5F_instructionList' list                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_baseline_5F_assembly_5F_instructionList : public cCollectionElement {
  public : GALGAS_baseline_5F_assembly_5F_instructionList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_baseline_5F_assembly_5F_instructionList (const GALGAS_baseline_5F_assembly_5F_instruction & in_mInstruction
                                                                       COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_baseline_5F_assembly_5F_instructionList::cCollectionElement_baseline_5F_assembly_5F_instructionList (const GALGAS_baseline_5F_assembly_5F_instruction & in_mInstruction
                                                                                                                        COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mInstruction) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_baseline_5F_assembly_5F_instructionList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_baseline_5F_assembly_5F_instructionList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_baseline_5F_assembly_5F_instructionList (mObject.mAttribute_mInstruction COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_baseline_5F_assembly_5F_instructionList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstruction" ":" ;
  mObject.mAttribute_mInstruction.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_baseline_5F_assembly_5F_instructionList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_baseline_5F_assembly_5F_instructionList * operand = (cCollectionElement_baseline_5F_assembly_5F_instructionList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_baseline_5F_assembly_5F_instructionList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_assembly_5F_instructionList::GALGAS_baseline_5F_assembly_5F_instructionList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_assembly_5F_instructionList::GALGAS_baseline_5F_assembly_5F_instructionList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_assembly_5F_instructionList GALGAS_baseline_5F_assembly_5F_instructionList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_baseline_5F_assembly_5F_instructionList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_assembly_5F_instructionList GALGAS_baseline_5F_assembly_5F_instructionList::constructor_listWithValue (const GALGAS_baseline_5F_assembly_5F_instruction & inOperand0
                                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_assembly_5F_instructionList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_baseline_5F_assembly_5F_instructionList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_assembly_5F_instructionList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                                const GALGAS_baseline_5F_assembly_5F_instruction & in_mInstruction
                                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement_baseline_5F_assembly_5F_instructionList * p = NULL ;
  macroMyNew (p, cCollectionElement_baseline_5F_assembly_5F_instructionList (in_mInstruction COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_assembly_5F_instructionList::addAssign_operation (const GALGAS_baseline_5F_assembly_5F_instruction & inOperand0
                                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_baseline_5F_assembly_5F_instructionList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_assembly_5F_instructionList::modifier_insertAtIndex (const GALGAS_baseline_5F_assembly_5F_instruction inOperand0,
                                                                             const GALGAS_uint inInsertionIndex,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_baseline_5F_assembly_5F_instructionList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_assembly_5F_instructionList::modifier_removeAtIndex (GALGAS_baseline_5F_assembly_5F_instruction & outOperand0,
                                                                             const GALGAS_uint inRemoveIndex,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_baseline_5F_assembly_5F_instructionList * p = (cCollectionElement_baseline_5F_assembly_5F_instructionList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_baseline_5F_assembly_5F_instructionList) ;
      outOperand0 = p->mObject.mAttribute_mInstruction ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_assembly_5F_instructionList::modifier_popFirst (GALGAS_baseline_5F_assembly_5F_instruction & outOperand0,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_assembly_5F_instructionList * p = (cCollectionElement_baseline_5F_assembly_5F_instructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_baseline_5F_assembly_5F_instructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_assembly_5F_instructionList::modifier_popLast (GALGAS_baseline_5F_assembly_5F_instruction & outOperand0,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_assembly_5F_instructionList * p = (cCollectionElement_baseline_5F_assembly_5F_instructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_baseline_5F_assembly_5F_instructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_assembly_5F_instructionList::method_first (GALGAS_baseline_5F_assembly_5F_instruction & outOperand0,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_assembly_5F_instructionList * p = (cCollectionElement_baseline_5F_assembly_5F_instructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_baseline_5F_assembly_5F_instructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_assembly_5F_instructionList::method_last (GALGAS_baseline_5F_assembly_5F_instruction & outOperand0,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_assembly_5F_instructionList * p = (cCollectionElement_baseline_5F_assembly_5F_instructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_baseline_5F_assembly_5F_instructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_assembly_5F_instructionList GALGAS_baseline_5F_assembly_5F_instructionList::operator_concat (const GALGAS_baseline_5F_assembly_5F_instructionList & inOperand
                                                                                                                COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_baseline_5F_assembly_5F_instructionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_assembly_5F_instructionList GALGAS_baseline_5F_assembly_5F_instructionList::add_operation (const GALGAS_baseline_5F_assembly_5F_instructionList & inOperand,
                                                                                                              C_Compiler * /* inCompiler */
                                                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_baseline_5F_assembly_5F_instructionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_assembly_5F_instructionList GALGAS_baseline_5F_assembly_5F_instructionList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                                        C_Compiler * inCompiler
                                                                                                                        COMMA_LOCATION_ARGS) const {
  GALGAS_baseline_5F_assembly_5F_instructionList result = GALGAS_baseline_5F_assembly_5F_instructionList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_assembly_5F_instructionList GALGAS_baseline_5F_assembly_5F_instructionList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                                        C_Compiler * inCompiler
                                                                                                                        COMMA_LOCATION_ARGS) const {
  GALGAS_baseline_5F_assembly_5F_instructionList result = GALGAS_baseline_5F_assembly_5F_instructionList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_assembly_5F_instructionList::dotAssign_operation (const GALGAS_baseline_5F_assembly_5F_instructionList inOperand
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_assembly_5F_instructionList::modifier_setMInstructionAtIndex (GALGAS_baseline_5F_assembly_5F_instruction inOperand,
                                                                                      GALGAS_uint inIndex,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement_baseline_5F_assembly_5F_instructionList * p = (cCollectionElement_baseline_5F_assembly_5F_instructionList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_baseline_5F_assembly_5F_instructionList) ;
    macroUniqueSharedObject (p) ;
    p->mObject.mAttribute_mInstruction = inOperand ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_assembly_5F_instruction GALGAS_baseline_5F_assembly_5F_instructionList::reader_mInstructionAtIndex (const GALGAS_uint & inIndex,
                                                                                                                       C_Compiler * inCompiler
                                                                                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_baseline_5F_assembly_5F_instructionList * p = (cCollectionElement_baseline_5F_assembly_5F_instructionList *) attributes.ptr () ;
  GALGAS_baseline_5F_assembly_5F_instruction result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_baseline_5F_assembly_5F_instructionList) ;
    result = p->mObject.mAttribute_mInstruction ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_baseline_5F_assembly_5F_instructionList::cEnumerator_baseline_5F_assembly_5F_instructionList (const GALGAS_baseline_5F_assembly_5F_instructionList & inEnumeratedObject,
                                                                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_assembly_5F_instructionList_2D_element cEnumerator_baseline_5F_assembly_5F_instructionList::current (LOCATION_ARGS) const {
  const cCollectionElement_baseline_5F_assembly_5F_instructionList * p = (const cCollectionElement_baseline_5F_assembly_5F_instructionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_baseline_5F_assembly_5F_instructionList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_assembly_5F_instruction cEnumerator_baseline_5F_assembly_5F_instructionList::current_mInstruction (LOCATION_ARGS) const {
  const cCollectionElement_baseline_5F_assembly_5F_instructionList * p = (const cCollectionElement_baseline_5F_assembly_5F_instructionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_baseline_5F_assembly_5F_instructionList) ;
  return p->mObject.mAttribute_mInstruction ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       @baseline_assembly_instructionList type                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_baseline_5F_assembly_5F_instructionList ("baseline_assembly_instructionList",
                                                                NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_baseline_5F_assembly_5F_instructionList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_baseline_5F_assembly_5F_instructionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_baseline_5F_assembly_5F_instructionList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_baseline_5F_assembly_5F_instructionList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_assembly_5F_instructionList GALGAS_baseline_5F_assembly_5F_instructionList::extractObject (const GALGAS_object & inObject,
                                                                                                              C_Compiler * inCompiler
                                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_assembly_5F_instructionList result ;
  const GALGAS_baseline_5F_assembly_5F_instructionList * p = (const GALGAS_baseline_5F_assembly_5F_instructionList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_baseline_5F_assembly_5F_instructionList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("baseline_assembly_instructionList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_baseline_5F_symbolTable::cMapElement_baseline_5F_symbolTable (const GALGAS_lstring & inKey,
                                                                          const GALGAS_uint & in_mRoutineAddress
                                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mRoutineAddress (in_mRoutineAddress) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_baseline_5F_symbolTable::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRoutineAddress.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_baseline_5F_symbolTable::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_baseline_5F_symbolTable (mAttribute_lkey, mAttribute_mRoutineAddress COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_baseline_5F_symbolTable::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRoutineAddress" ":" ;
  mAttribute_mRoutineAddress.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_baseline_5F_symbolTable::compare (const cCollectionElement * inOperand) const {
  cMapElement_baseline_5F_symbolTable * operand = (cMapElement_baseline_5F_symbolTable *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mRoutineAddress.objectCompare (operand->mAttribute_mRoutineAddress) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_symbolTable::GALGAS_baseline_5F_symbolTable (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_symbolTable::GALGAS_baseline_5F_symbolTable (const GALGAS_baseline_5F_symbolTable & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_symbolTable & GALGAS_baseline_5F_symbolTable::operator = (const GALGAS_baseline_5F_symbolTable & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_symbolTable GALGAS_baseline_5F_symbolTable::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_baseline_5F_symbolTable result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_symbolTable GALGAS_baseline_5F_symbolTable::constructor_mapWithMapToOverride (const GALGAS_baseline_5F_symbolTable & inMapToOverride
                                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_symbolTable result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_symbolTable GALGAS_baseline_5F_symbolTable::reader_overriddenMap (C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_baseline_5F_symbolTable result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_symbolTable::addAssign_operation (const GALGAS_lstring & inKey,
                                                          const GALGAS_uint & inArgument0,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cMapElement_baseline_5F_symbolTable * p = NULL ;
  macroMyNew (p, cMapElement_baseline_5F_symbolTable (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@baseline_5F_symbolTable insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_symbolTable::modifier_insertKey (GALGAS_lstring inKey,
                                                         GALGAS_uint inArgument0,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cMapElement_baseline_5F_symbolTable * p = NULL ;
  macroMyNew (p, cMapElement_baseline_5F_symbolTable (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' label is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_baseline_5F_symbolTable_searchKey = "the '%K' label is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_symbolTable::method_searchKey (GALGAS_lstring inKey,
                                                       GALGAS_uint & outArgument0,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) const {
  const cMapElement_baseline_5F_symbolTable * p = (const cMapElement_baseline_5F_symbolTable *) performSearch (inKey,
                                                                                                                 inCompiler,
                                                                                                                 kSearchErrorMessage_baseline_5F_symbolTable_searchKey
                                                                                                                 COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_baseline_5F_symbolTable) ;
    outArgument0 = p->mAttribute_mRoutineAddress ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_baseline_5F_symbolTable::reader_mRoutineAddressForKey (const GALGAS_string & inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_baseline_5F_symbolTable * p = (const cMapElement_baseline_5F_symbolTable *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_baseline_5F_symbolTable) ;
    result = p->mAttribute_mRoutineAddress ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_baseline_5F_symbolTable::modifier_setMRoutineAddressForKey (GALGAS_uint inAttributeValue,
                                                                        GALGAS_string inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_baseline_5F_symbolTable * p = (cMapElement_baseline_5F_symbolTable *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_baseline_5F_symbolTable) ;
    p->mAttribute_mRoutineAddress = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_baseline_5F_symbolTable * GALGAS_baseline_5F_symbolTable::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                         const GALGAS_string & inKey
                                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement_baseline_5F_symbolTable * result = (cMapElement_baseline_5F_symbolTable *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_baseline_5F_symbolTable) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_baseline_5F_symbolTable::cEnumerator_baseline_5F_symbolTable (const GALGAS_baseline_5F_symbolTable & inEnumeratedObject,
                                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_symbolTable_2D_element cEnumerator_baseline_5F_symbolTable::current (LOCATION_ARGS) const {
  const cMapElement_baseline_5F_symbolTable * p = (const cMapElement_baseline_5F_symbolTable *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_baseline_5F_symbolTable) ;
  return GALGAS_baseline_5F_symbolTable_2D_element (p->mAttribute_lkey, p->mAttribute_mRoutineAddress) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_baseline_5F_symbolTable::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_baseline_5F_symbolTable::current_mRoutineAddress (LOCATION_ARGS) const {
  const cMapElement_baseline_5F_symbolTable * p = (const cMapElement_baseline_5F_symbolTable *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_baseline_5F_symbolTable) ;
  return p->mAttribute_mRoutineAddress ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @baseline_symbolTable type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_baseline_5F_symbolTable ("baseline_symbolTable",
                                                NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_baseline_5F_symbolTable::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_baseline_5F_symbolTable ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_baseline_5F_symbolTable::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_baseline_5F_symbolTable (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_baseline_5F_symbolTable GALGAS_baseline_5F_symbolTable::extractObject (const GALGAS_object & inObject,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_symbolTable result ;
  const GALGAS_baseline_5F_symbolTable * p = (const GALGAS_baseline_5F_symbolTable *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_baseline_5F_symbolTable *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("baseline_symbolTable", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              Class for element of '@midrange_5F_instructionList' list                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_midrange_5F_instructionList : public cCollectionElement {
  public : GALGAS_midrange_5F_instructionList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_midrange_5F_instructionList (const GALGAS_midrange_5F_instruction & in_mInstruction
                                                           COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_midrange_5F_instructionList::cCollectionElement_midrange_5F_instructionList (const GALGAS_midrange_5F_instruction & in_mInstruction
                                                                                                COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mInstruction) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_midrange_5F_instructionList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_midrange_5F_instructionList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_midrange_5F_instructionList (mObject.mAttribute_mInstruction COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_midrange_5F_instructionList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstruction" ":" ;
  mObject.mAttribute_mInstruction.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_midrange_5F_instructionList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_midrange_5F_instructionList * operand = (cCollectionElement_midrange_5F_instructionList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_midrange_5F_instructionList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instructionList::GALGAS_midrange_5F_instructionList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instructionList::GALGAS_midrange_5F_instructionList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instructionList GALGAS_midrange_5F_instructionList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_midrange_5F_instructionList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instructionList GALGAS_midrange_5F_instructionList::constructor_listWithValue (const GALGAS_midrange_5F_instruction & inOperand0
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_instructionList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_midrange_5F_instructionList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_instructionList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                    const GALGAS_midrange_5F_instruction & in_mInstruction
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement_midrange_5F_instructionList * p = NULL ;
  macroMyNew (p, cCollectionElement_midrange_5F_instructionList (in_mInstruction COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_instructionList::addAssign_operation (const GALGAS_midrange_5F_instruction & inOperand0
                                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_midrange_5F_instructionList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_instructionList::modifier_insertAtIndex (const GALGAS_midrange_5F_instruction inOperand0,
                                                                 const GALGAS_uint inInsertionIndex,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_midrange_5F_instructionList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_instructionList::modifier_removeAtIndex (GALGAS_midrange_5F_instruction & outOperand0,
                                                                 const GALGAS_uint inRemoveIndex,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_midrange_5F_instructionList * p = (cCollectionElement_midrange_5F_instructionList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_midrange_5F_instructionList) ;
      outOperand0 = p->mObject.mAttribute_mInstruction ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_instructionList::modifier_popFirst (GALGAS_midrange_5F_instruction & outOperand0,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_instructionList * p = (cCollectionElement_midrange_5F_instructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_midrange_5F_instructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_instructionList::modifier_popLast (GALGAS_midrange_5F_instruction & outOperand0,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_instructionList * p = (cCollectionElement_midrange_5F_instructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_midrange_5F_instructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_instructionList::method_first (GALGAS_midrange_5F_instruction & outOperand0,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_instructionList * p = (cCollectionElement_midrange_5F_instructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_midrange_5F_instructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_instructionList::method_last (GALGAS_midrange_5F_instruction & outOperand0,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_instructionList * p = (cCollectionElement_midrange_5F_instructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_midrange_5F_instructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instructionList GALGAS_midrange_5F_instructionList::operator_concat (const GALGAS_midrange_5F_instructionList & inOperand
                                                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_midrange_5F_instructionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instructionList GALGAS_midrange_5F_instructionList::add_operation (const GALGAS_midrange_5F_instructionList & inOperand,
                                                                                      C_Compiler * /* inCompiler */
                                                                                      COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_midrange_5F_instructionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instructionList GALGAS_midrange_5F_instructionList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_midrange_5F_instructionList result = GALGAS_midrange_5F_instructionList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instructionList GALGAS_midrange_5F_instructionList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_midrange_5F_instructionList result = GALGAS_midrange_5F_instructionList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_instructionList::dotAssign_operation (const GALGAS_midrange_5F_instructionList inOperand
                                                              COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instruction GALGAS_midrange_5F_instructionList::reader_mInstructionAtIndex (const GALGAS_uint & inIndex,
                                                                                               C_Compiler * inCompiler
                                                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_instructionList * p = (cCollectionElement_midrange_5F_instructionList *) attributes.ptr () ;
  GALGAS_midrange_5F_instruction result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_midrange_5F_instructionList) ;
    result = p->mObject.mAttribute_mInstruction ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_midrange_5F_instructionList::cEnumerator_midrange_5F_instructionList (const GALGAS_midrange_5F_instructionList & inEnumeratedObject,
                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instructionList_2D_element cEnumerator_midrange_5F_instructionList::current (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_instructionList * p = (const cCollectionElement_midrange_5F_instructionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_instructionList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instruction cEnumerator_midrange_5F_instructionList::current_mInstruction (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_instructionList * p = (const cCollectionElement_midrange_5F_instructionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_instructionList) ;
  return p->mObject.mAttribute_mInstruction ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @midrange_instructionList type                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_midrange_5F_instructionList ("midrange_instructionList",
                                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_midrange_5F_instructionList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_midrange_5F_instructionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_midrange_5F_instructionList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_midrange_5F_instructionList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instructionList GALGAS_midrange_5F_instructionList::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_instructionList result ;
  const GALGAS_midrange_5F_instructionList * p = (const GALGAS_midrange_5F_instructionList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_midrange_5F_instructionList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("midrange_instructionList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_ADDWF (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_ADDWF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_ANDWF (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_ANDWF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_COMF (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_COMF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_DECF (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_DECF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_DECFSZ (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_DECFSZ ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_INCF (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_INCF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_INCFSZ (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_INCFSZ ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_IORWF (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_IORWF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_MOVF (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_MOVF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_RLF (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_RLF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_RRF (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_RRF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_SUBWF (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_SUBWF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_SWAPF (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_SWAPF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_XORWF (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code result ;
  result.mEnum = kEnum_XORWF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_midrange_5F_instruction_5F_FD_5F_base_5F_code [15] = {
  "(not built)",
  "ADDWF",
  "ANDWF",
  "COMF",
  "DECF",
  "DECFSZ",
  "INCF",
  "INCFSZ",
  "IORWF",
  "MOVF",
  "RLF",
  "RRF",
  "SUBWF",
  "SWAPF",
  "XORWF"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::reader_isADDWF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_ADDWF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::reader_isANDWF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_ANDWF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::reader_isCOMF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_COMF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::reader_isDECF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_DECF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::reader_isDECFSZ (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_DECFSZ == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::reader_isINCF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_INCF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::reader_isINCFSZ (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_INCFSZ == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::reader_isIORWF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_IORWF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::reader_isMOVF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_MOVF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::reader_isRLF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_RLF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::reader_isRRF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_RRF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::reader_isSUBWF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_SUBWF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::reader_isSWAPF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_SWAPF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::reader_isXORWF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_XORWF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::description (C_String & ioString,
                                                                        const int32_t /* inIndentation */) const {
  ioString << "<enum @midrange_instruction_FD_base_code: " << gEnumNameArrayFor_midrange_5F_instruction_5F_FD_5F_base_5F_code [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::objectCompare (const GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       @midrange_instruction_FD_base_code type                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code ("midrange_instruction_FD_base_code",
                                                                      NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::extractObject (const GALGAS_object & inObject,
                                                                                                                          C_Compiler * inCompiler
                                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code result ;
  const GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code * p = (const GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("midrange_instruction_FD_base_code", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code::GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code::constructor_CLRF (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code result ;
  result.mEnum = kEnum_CLRF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code::constructor_MOVWF (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code result ;
  result.mEnum = kEnum_MOVWF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_midrange_5F_F_5F_instruction_5F_base_5F_code [3] = {
  "(not built)",
  "CLRF",
  "MOVWF"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code::reader_isCLRF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_CLRF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code::reader_isMOVWF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_MOVWF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code::description (C_String & ioString,
                                                                       const int32_t /* inIndentation */) const {
  ioString << "<enum @midrange_F_instruction_base_code: " << gEnumNameArrayFor_midrange_5F_F_5F_instruction_5F_base_5F_code [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code::objectCompare (const GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       @midrange_F_instruction_base_code type                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code ("midrange_F_instruction_base_code",
                                                                     NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code::extractObject (const GALGAS_object & inObject,
                                                                                                                        C_Compiler * inCompiler
                                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code result ;
  const GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code * p = (const GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("midrange_F_instruction_base_code", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_bit_5F_oriented_5F_op::GALGAS_midrange_5F_bit_5F_oriented_5F_op (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_bit_5F_oriented_5F_op GALGAS_midrange_5F_bit_5F_oriented_5F_op::constructor_BCF (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_bit_5F_oriented_5F_op result ;
  result.mEnum = kEnum_BCF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_bit_5F_oriented_5F_op GALGAS_midrange_5F_bit_5F_oriented_5F_op::constructor_BSF (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_bit_5F_oriented_5F_op result ;
  result.mEnum = kEnum_BSF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_midrange_5F_bit_5F_oriented_5F_op [3] = {
  "(not built)",
  "BCF",
  "BSF"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_bit_5F_oriented_5F_op::reader_isBCF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_BCF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_bit_5F_oriented_5F_op::reader_isBSF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_BSF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_bit_5F_oriented_5F_op::description (C_String & ioString,
                                                            const int32_t /* inIndentation */) const {
  ioString << "<enum @midrange_bit_oriented_op: " << gEnumNameArrayFor_midrange_5F_bit_5F_oriented_5F_op [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_midrange_5F_bit_5F_oriented_5F_op::objectCompare (const GALGAS_midrange_5F_bit_5F_oriented_5F_op & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @midrange_bit_oriented_op type                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_midrange_5F_bit_5F_oriented_5F_op ("midrange_bit_oriented_op",
                                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_midrange_5F_bit_5F_oriented_5F_op::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_midrange_5F_bit_5F_oriented_5F_op ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_midrange_5F_bit_5F_oriented_5F_op::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_midrange_5F_bit_5F_oriented_5F_op (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_bit_5F_oriented_5F_op GALGAS_midrange_5F_bit_5F_oriented_5F_op::extractObject (const GALGAS_object & inObject,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_bit_5F_oriented_5F_op result ;
  const GALGAS_midrange_5F_bit_5F_oriented_5F_op * p = (const GALGAS_midrange_5F_bit_5F_oriented_5F_op *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_midrange_5F_bit_5F_oriented_5F_op *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("midrange_bit_oriented_op", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::GALGAS_midrange_5F_literal_5F_instruction_5F_opcode (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_literal_5F_instruction_5F_opcode GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::constructor_ADDLW (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_literal_5F_instruction_5F_opcode result ;
  result.mEnum = kEnum_ADDLW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_literal_5F_instruction_5F_opcode GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::constructor_ANDLW (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_literal_5F_instruction_5F_opcode result ;
  result.mEnum = kEnum_ANDLW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_literal_5F_instruction_5F_opcode GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::constructor_IORLW (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_literal_5F_instruction_5F_opcode result ;
  result.mEnum = kEnum_IORLW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_literal_5F_instruction_5F_opcode GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::constructor_MOVLW (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_literal_5F_instruction_5F_opcode result ;
  result.mEnum = kEnum_MOVLW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_literal_5F_instruction_5F_opcode GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::constructor_RETLW (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_literal_5F_instruction_5F_opcode result ;
  result.mEnum = kEnum_RETLW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_literal_5F_instruction_5F_opcode GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::constructor_SUBLW (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_literal_5F_instruction_5F_opcode result ;
  result.mEnum = kEnum_SUBLW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_literal_5F_instruction_5F_opcode GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::constructor_XORLW (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_literal_5F_instruction_5F_opcode result ;
  result.mEnum = kEnum_XORLW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_midrange_5F_literal_5F_instruction_5F_opcode [8] = {
  "(not built)",
  "ADDLW",
  "ANDLW",
  "IORLW",
  "MOVLW",
  "RETLW",
  "SUBLW",
  "XORLW"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::reader_isADDLW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_ADDLW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::reader_isANDLW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_ANDLW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::reader_isIORLW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_IORLW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::reader_isMOVLW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_MOVLW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::reader_isRETLW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_RETLW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::reader_isSUBLW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_SUBLW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::reader_isXORLW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_XORLW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::description (C_String & ioString,
                                                                       const int32_t /* inIndentation */) const {
  ioString << "<enum @midrange_literal_instruction_opcode: " << gEnumNameArrayFor_midrange_5F_literal_5F_instruction_5F_opcode [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::objectCompare (const GALGAS_midrange_5F_literal_5F_instruction_5F_opcode & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      @midrange_literal_instruction_opcode type                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_midrange_5F_literal_5F_instruction_5F_opcode ("midrange_literal_instruction_opcode",
                                                                     NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_midrange_5F_literal_5F_instruction_5F_opcode ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_midrange_5F_literal_5F_instruction_5F_opcode (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_literal_5F_instruction_5F_opcode GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::extractObject (const GALGAS_object & inObject,
                                                                                                                        C_Compiler * inCompiler
                                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_literal_5F_instruction_5F_opcode result ;
  const GALGAS_midrange_5F_literal_5F_instruction_5F_opcode * p = (const GALGAS_midrange_5F_literal_5F_instruction_5F_opcode *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_midrange_5F_literal_5F_instruction_5F_opcode *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("midrange_literal_instruction_opcode", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  Class for element of '@midrange_5F_partList' list                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_midrange_5F_partList : public cCollectionElement {
  public : GALGAS_midrange_5F_partList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_midrange_5F_partList (const GALGAS_midrange_5F_conditionExpression & in_mCondition,
                                                    const GALGAS_midrange_5F_instructionList & in_mInstructionList,
                                                    const GALGAS_location & in_mEndOfPartLocation
                                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_midrange_5F_partList::cCollectionElement_midrange_5F_partList (const GALGAS_midrange_5F_conditionExpression & in_mCondition,
                                                                                  const GALGAS_midrange_5F_instructionList & in_mInstructionList,
                                                                                  const GALGAS_location & in_mEndOfPartLocation
                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mCondition, in_mInstructionList, in_mEndOfPartLocation) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_midrange_5F_partList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_midrange_5F_partList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_midrange_5F_partList (mObject.mAttribute_mCondition, mObject.mAttribute_mInstructionList, mObject.mAttribute_mEndOfPartLocation COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_midrange_5F_partList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCondition" ":" ;
  mObject.mAttribute_mCondition.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstructionList" ":" ;
  mObject.mAttribute_mInstructionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEndOfPartLocation" ":" ;
  mObject.mAttribute_mEndOfPartLocation.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_midrange_5F_partList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_midrange_5F_partList * operand = (cCollectionElement_midrange_5F_partList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_midrange_5F_partList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_partList::GALGAS_midrange_5F_partList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_partList::GALGAS_midrange_5F_partList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_partList GALGAS_midrange_5F_partList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_midrange_5F_partList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_partList GALGAS_midrange_5F_partList::constructor_listWithValue (const GALGAS_midrange_5F_conditionExpression & inOperand0,
                                                                                    const GALGAS_midrange_5F_instructionList & inOperand1,
                                                                                    const GALGAS_location & inOperand2
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_partList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_midrange_5F_partList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_partList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                             const GALGAS_midrange_5F_conditionExpression & in_mCondition,
                                                             const GALGAS_midrange_5F_instructionList & in_mInstructionList,
                                                             const GALGAS_location & in_mEndOfPartLocation
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_midrange_5F_partList * p = NULL ;
  macroMyNew (p, cCollectionElement_midrange_5F_partList (in_mCondition,
                                                          in_mInstructionList,
                                                          in_mEndOfPartLocation COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_partList::addAssign_operation (const GALGAS_midrange_5F_conditionExpression & inOperand0,
                                                       const GALGAS_midrange_5F_instructionList & inOperand1,
                                                       const GALGAS_location & inOperand2
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_midrange_5F_partList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_partList::modifier_insertAtIndex (const GALGAS_midrange_5F_conditionExpression inOperand0,
                                                          const GALGAS_midrange_5F_instructionList inOperand1,
                                                          const GALGAS_location inOperand2,
                                                          const GALGAS_uint inInsertionIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_midrange_5F_partList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_partList::modifier_removeAtIndex (GALGAS_midrange_5F_conditionExpression & outOperand0,
                                                          GALGAS_midrange_5F_instructionList & outOperand1,
                                                          GALGAS_location & outOperand2,
                                                          const GALGAS_uint inRemoveIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_midrange_5F_partList * p = (cCollectionElement_midrange_5F_partList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_midrange_5F_partList) ;
      outOperand0 = p->mObject.mAttribute_mCondition ;
      outOperand1 = p->mObject.mAttribute_mInstructionList ;
      outOperand2 = p->mObject.mAttribute_mEndOfPartLocation ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_partList::modifier_popFirst (GALGAS_midrange_5F_conditionExpression & outOperand0,
                                                     GALGAS_midrange_5F_instructionList & outOperand1,
                                                     GALGAS_location & outOperand2,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_partList * p = (cCollectionElement_midrange_5F_partList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_midrange_5F_partList) ;
    outOperand0 = p->mObject.mAttribute_mCondition ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mEndOfPartLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_partList::modifier_popLast (GALGAS_midrange_5F_conditionExpression & outOperand0,
                                                    GALGAS_midrange_5F_instructionList & outOperand1,
                                                    GALGAS_location & outOperand2,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_partList * p = (cCollectionElement_midrange_5F_partList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_midrange_5F_partList) ;
    outOperand0 = p->mObject.mAttribute_mCondition ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mEndOfPartLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_partList::method_first (GALGAS_midrange_5F_conditionExpression & outOperand0,
                                                GALGAS_midrange_5F_instructionList & outOperand1,
                                                GALGAS_location & outOperand2,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_partList * p = (cCollectionElement_midrange_5F_partList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_midrange_5F_partList) ;
    outOperand0 = p->mObject.mAttribute_mCondition ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mEndOfPartLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_partList::method_last (GALGAS_midrange_5F_conditionExpression & outOperand0,
                                               GALGAS_midrange_5F_instructionList & outOperand1,
                                               GALGAS_location & outOperand2,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_partList * p = (cCollectionElement_midrange_5F_partList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_midrange_5F_partList) ;
    outOperand0 = p->mObject.mAttribute_mCondition ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mEndOfPartLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_partList GALGAS_midrange_5F_partList::operator_concat (const GALGAS_midrange_5F_partList & inOperand
                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_midrange_5F_partList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_partList GALGAS_midrange_5F_partList::add_operation (const GALGAS_midrange_5F_partList & inOperand,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_midrange_5F_partList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_partList GALGAS_midrange_5F_partList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_midrange_5F_partList result = GALGAS_midrange_5F_partList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_partList GALGAS_midrange_5F_partList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_midrange_5F_partList result = GALGAS_midrange_5F_partList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_partList::dotAssign_operation (const GALGAS_midrange_5F_partList inOperand
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_conditionExpression GALGAS_midrange_5F_partList::reader_mConditionAtIndex (const GALGAS_uint & inIndex,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_partList * p = (cCollectionElement_midrange_5F_partList *) attributes.ptr () ;
  GALGAS_midrange_5F_conditionExpression result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_midrange_5F_partList) ;
    result = p->mObject.mAttribute_mCondition ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instructionList GALGAS_midrange_5F_partList::reader_mInstructionListAtIndex (const GALGAS_uint & inIndex,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_partList * p = (cCollectionElement_midrange_5F_partList *) attributes.ptr () ;
  GALGAS_midrange_5F_instructionList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_midrange_5F_partList) ;
    result = p->mObject.mAttribute_mInstructionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_midrange_5F_partList::reader_mEndOfPartLocationAtIndex (const GALGAS_uint & inIndex,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_partList * p = (cCollectionElement_midrange_5F_partList *) attributes.ptr () ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_midrange_5F_partList) ;
    result = p->mObject.mAttribute_mEndOfPartLocation ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_midrange_5F_partList::cEnumerator_midrange_5F_partList (const GALGAS_midrange_5F_partList & inEnumeratedObject,
                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_partList_2D_element cEnumerator_midrange_5F_partList::current (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_partList * p = (const cCollectionElement_midrange_5F_partList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_partList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_conditionExpression cEnumerator_midrange_5F_partList::current_mCondition (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_partList * p = (const cCollectionElement_midrange_5F_partList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_partList) ;
  return p->mObject.mAttribute_mCondition ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instructionList cEnumerator_midrange_5F_partList::current_mInstructionList (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_partList * p = (const cCollectionElement_midrange_5F_partList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_partList) ;
  return p->mObject.mAttribute_mInstructionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location cEnumerator_midrange_5F_partList::current_mEndOfPartLocation (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_partList * p = (const cCollectionElement_midrange_5F_partList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_partList) ;
  return p->mObject.mAttribute_mEndOfPartLocation ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @midrange_partList type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_midrange_5F_partList ("midrange_partList",
                                             NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_midrange_5F_partList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_midrange_5F_partList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_midrange_5F_partList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_midrange_5F_partList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_partList GALGAS_midrange_5F_partList::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_partList result ;
  const GALGAS_midrange_5F_partList * p = (const GALGAS_midrange_5F_partList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_midrange_5F_partList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("midrange_partList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Class for element of '@midrange_5F_interruptDefinitionList' list                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_midrange_5F_interruptDefinitionList : public cCollectionElement {
  public : GALGAS_midrange_5F_interruptDefinitionList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_midrange_5F_interruptDefinitionList (const GALGAS_location & in_mInterruptLocation,
                                                                   const GALGAS_midrange_5F_instructionList & in_mInstructionList,
                                                                   const GALGAS_lstring & in_mFirstSaveRegister,
                                                                   const GALGAS_lstring & in_mSecondSaveRegister,
                                                                   const GALGAS_location & in_mEndOfInterruptLocation
                                                                   COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_midrange_5F_interruptDefinitionList::cCollectionElement_midrange_5F_interruptDefinitionList (const GALGAS_location & in_mInterruptLocation,
                                                                                                                const GALGAS_midrange_5F_instructionList & in_mInstructionList,
                                                                                                                const GALGAS_lstring & in_mFirstSaveRegister,
                                                                                                                const GALGAS_lstring & in_mSecondSaveRegister,
                                                                                                                const GALGAS_location & in_mEndOfInterruptLocation
                                                                                                                COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mInterruptLocation, in_mInstructionList, in_mFirstSaveRegister, in_mSecondSaveRegister, in_mEndOfInterruptLocation) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_midrange_5F_interruptDefinitionList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_midrange_5F_interruptDefinitionList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_midrange_5F_interruptDefinitionList (mObject.mAttribute_mInterruptLocation, mObject.mAttribute_mInstructionList, mObject.mAttribute_mFirstSaveRegister, mObject.mAttribute_mSecondSaveRegister, mObject.mAttribute_mEndOfInterruptLocation COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_midrange_5F_interruptDefinitionList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInterruptLocation" ":" ;
  mObject.mAttribute_mInterruptLocation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstructionList" ":" ;
  mObject.mAttribute_mInstructionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFirstSaveRegister" ":" ;
  mObject.mAttribute_mFirstSaveRegister.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSecondSaveRegister" ":" ;
  mObject.mAttribute_mSecondSaveRegister.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEndOfInterruptLocation" ":" ;
  mObject.mAttribute_mEndOfInterruptLocation.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_midrange_5F_interruptDefinitionList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_midrange_5F_interruptDefinitionList * operand = (cCollectionElement_midrange_5F_interruptDefinitionList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_midrange_5F_interruptDefinitionList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_interruptDefinitionList::GALGAS_midrange_5F_interruptDefinitionList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_interruptDefinitionList::GALGAS_midrange_5F_interruptDefinitionList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_interruptDefinitionList GALGAS_midrange_5F_interruptDefinitionList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_midrange_5F_interruptDefinitionList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_interruptDefinitionList GALGAS_midrange_5F_interruptDefinitionList::constructor_listWithValue (const GALGAS_location & inOperand0,
                                                                                                                  const GALGAS_midrange_5F_instructionList & inOperand1,
                                                                                                                  const GALGAS_lstring & inOperand2,
                                                                                                                  const GALGAS_lstring & inOperand3,
                                                                                                                  const GALGAS_location & inOperand4
                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_interruptDefinitionList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_midrange_5F_interruptDefinitionList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3, inOperand4 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_interruptDefinitionList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                            const GALGAS_location & in_mInterruptLocation,
                                                                            const GALGAS_midrange_5F_instructionList & in_mInstructionList,
                                                                            const GALGAS_lstring & in_mFirstSaveRegister,
                                                                            const GALGAS_lstring & in_mSecondSaveRegister,
                                                                            const GALGAS_location & in_mEndOfInterruptLocation
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement_midrange_5F_interruptDefinitionList * p = NULL ;
  macroMyNew (p, cCollectionElement_midrange_5F_interruptDefinitionList (in_mInterruptLocation,
                                                                         in_mInstructionList,
                                                                         in_mFirstSaveRegister,
                                                                         in_mSecondSaveRegister,
                                                                         in_mEndOfInterruptLocation COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_interruptDefinitionList::addAssign_operation (const GALGAS_location & inOperand0,
                                                                      const GALGAS_midrange_5F_instructionList & inOperand1,
                                                                      const GALGAS_lstring & inOperand2,
                                                                      const GALGAS_lstring & inOperand3,
                                                                      const GALGAS_location & inOperand4
                                                                      COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_midrange_5F_interruptDefinitionList (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_interruptDefinitionList::modifier_insertAtIndex (const GALGAS_location inOperand0,
                                                                         const GALGAS_midrange_5F_instructionList inOperand1,
                                                                         const GALGAS_lstring inOperand2,
                                                                         const GALGAS_lstring inOperand3,
                                                                         const GALGAS_location inOperand4,
                                                                         const GALGAS_uint inInsertionIndex,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_midrange_5F_interruptDefinitionList (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_interruptDefinitionList::modifier_removeAtIndex (GALGAS_location & outOperand0,
                                                                         GALGAS_midrange_5F_instructionList & outOperand1,
                                                                         GALGAS_lstring & outOperand2,
                                                                         GALGAS_lstring & outOperand3,
                                                                         GALGAS_location & outOperand4,
                                                                         const GALGAS_uint inRemoveIndex,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_midrange_5F_interruptDefinitionList * p = (cCollectionElement_midrange_5F_interruptDefinitionList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
      outOperand3.drop () ;
      outOperand4.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_midrange_5F_interruptDefinitionList) ;
      outOperand0 = p->mObject.mAttribute_mInterruptLocation ;
      outOperand1 = p->mObject.mAttribute_mInstructionList ;
      outOperand2 = p->mObject.mAttribute_mFirstSaveRegister ;
      outOperand3 = p->mObject.mAttribute_mSecondSaveRegister ;
      outOperand4 = p->mObject.mAttribute_mEndOfInterruptLocation ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_interruptDefinitionList::modifier_popFirst (GALGAS_location & outOperand0,
                                                                    GALGAS_midrange_5F_instructionList & outOperand1,
                                                                    GALGAS_lstring & outOperand2,
                                                                    GALGAS_lstring & outOperand3,
                                                                    GALGAS_location & outOperand4,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_interruptDefinitionList * p = (cCollectionElement_midrange_5F_interruptDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_midrange_5F_interruptDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mInterruptLocation ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mFirstSaveRegister ;
    outOperand3 = p->mObject.mAttribute_mSecondSaveRegister ;
    outOperand4 = p->mObject.mAttribute_mEndOfInterruptLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_interruptDefinitionList::modifier_popLast (GALGAS_location & outOperand0,
                                                                   GALGAS_midrange_5F_instructionList & outOperand1,
                                                                   GALGAS_lstring & outOperand2,
                                                                   GALGAS_lstring & outOperand3,
                                                                   GALGAS_location & outOperand4,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_interruptDefinitionList * p = (cCollectionElement_midrange_5F_interruptDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_midrange_5F_interruptDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mInterruptLocation ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mFirstSaveRegister ;
    outOperand3 = p->mObject.mAttribute_mSecondSaveRegister ;
    outOperand4 = p->mObject.mAttribute_mEndOfInterruptLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_interruptDefinitionList::method_first (GALGAS_location & outOperand0,
                                                               GALGAS_midrange_5F_instructionList & outOperand1,
                                                               GALGAS_lstring & outOperand2,
                                                               GALGAS_lstring & outOperand3,
                                                               GALGAS_location & outOperand4,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_interruptDefinitionList * p = (cCollectionElement_midrange_5F_interruptDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_midrange_5F_interruptDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mInterruptLocation ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mFirstSaveRegister ;
    outOperand3 = p->mObject.mAttribute_mSecondSaveRegister ;
    outOperand4 = p->mObject.mAttribute_mEndOfInterruptLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_interruptDefinitionList::method_last (GALGAS_location & outOperand0,
                                                              GALGAS_midrange_5F_instructionList & outOperand1,
                                                              GALGAS_lstring & outOperand2,
                                                              GALGAS_lstring & outOperand3,
                                                              GALGAS_location & outOperand4,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_interruptDefinitionList * p = (cCollectionElement_midrange_5F_interruptDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_midrange_5F_interruptDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mInterruptLocation ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mFirstSaveRegister ;
    outOperand3 = p->mObject.mAttribute_mSecondSaveRegister ;
    outOperand4 = p->mObject.mAttribute_mEndOfInterruptLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_interruptDefinitionList GALGAS_midrange_5F_interruptDefinitionList::operator_concat (const GALGAS_midrange_5F_interruptDefinitionList & inOperand
                                                                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_midrange_5F_interruptDefinitionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_interruptDefinitionList GALGAS_midrange_5F_interruptDefinitionList::add_operation (const GALGAS_midrange_5F_interruptDefinitionList & inOperand,
                                                                                                      C_Compiler * /* inCompiler */
                                                                                                      COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_midrange_5F_interruptDefinitionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_interruptDefinitionList GALGAS_midrange_5F_interruptDefinitionList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                                C_Compiler * inCompiler
                                                                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_midrange_5F_interruptDefinitionList result = GALGAS_midrange_5F_interruptDefinitionList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_interruptDefinitionList GALGAS_midrange_5F_interruptDefinitionList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                                C_Compiler * inCompiler
                                                                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_midrange_5F_interruptDefinitionList result = GALGAS_midrange_5F_interruptDefinitionList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_interruptDefinitionList::dotAssign_operation (const GALGAS_midrange_5F_interruptDefinitionList inOperand
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_midrange_5F_interruptDefinitionList::reader_mInterruptLocationAtIndex (const GALGAS_uint & inIndex,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_interruptDefinitionList * p = (cCollectionElement_midrange_5F_interruptDefinitionList *) attributes.ptr () ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_midrange_5F_interruptDefinitionList) ;
    result = p->mObject.mAttribute_mInterruptLocation ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instructionList GALGAS_midrange_5F_interruptDefinitionList::reader_mInstructionListAtIndex (const GALGAS_uint & inIndex,
                                                                                                               C_Compiler * inCompiler
                                                                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_interruptDefinitionList * p = (cCollectionElement_midrange_5F_interruptDefinitionList *) attributes.ptr () ;
  GALGAS_midrange_5F_instructionList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_midrange_5F_interruptDefinitionList) ;
    result = p->mObject.mAttribute_mInstructionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_midrange_5F_interruptDefinitionList::reader_mFirstSaveRegisterAtIndex (const GALGAS_uint & inIndex,
                                                                                             C_Compiler * inCompiler
                                                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_interruptDefinitionList * p = (cCollectionElement_midrange_5F_interruptDefinitionList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_midrange_5F_interruptDefinitionList) ;
    result = p->mObject.mAttribute_mFirstSaveRegister ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_midrange_5F_interruptDefinitionList::reader_mSecondSaveRegisterAtIndex (const GALGAS_uint & inIndex,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_interruptDefinitionList * p = (cCollectionElement_midrange_5F_interruptDefinitionList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_midrange_5F_interruptDefinitionList) ;
    result = p->mObject.mAttribute_mSecondSaveRegister ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_midrange_5F_interruptDefinitionList::reader_mEndOfInterruptLocationAtIndex (const GALGAS_uint & inIndex,
                                                                                                   C_Compiler * inCompiler
                                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_interruptDefinitionList * p = (cCollectionElement_midrange_5F_interruptDefinitionList *) attributes.ptr () ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_midrange_5F_interruptDefinitionList) ;
    result = p->mObject.mAttribute_mEndOfInterruptLocation ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_midrange_5F_interruptDefinitionList::cEnumerator_midrange_5F_interruptDefinitionList (const GALGAS_midrange_5F_interruptDefinitionList & inEnumeratedObject,
                                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_interruptDefinitionList_2D_element cEnumerator_midrange_5F_interruptDefinitionList::current (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_interruptDefinitionList * p = (const cCollectionElement_midrange_5F_interruptDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_interruptDefinitionList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location cEnumerator_midrange_5F_interruptDefinitionList::current_mInterruptLocation (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_interruptDefinitionList * p = (const cCollectionElement_midrange_5F_interruptDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_interruptDefinitionList) ;
  return p->mObject.mAttribute_mInterruptLocation ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instructionList cEnumerator_midrange_5F_interruptDefinitionList::current_mInstructionList (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_interruptDefinitionList * p = (const cCollectionElement_midrange_5F_interruptDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_interruptDefinitionList) ;
  return p->mObject.mAttribute_mInstructionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_midrange_5F_interruptDefinitionList::current_mFirstSaveRegister (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_interruptDefinitionList * p = (const cCollectionElement_midrange_5F_interruptDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_interruptDefinitionList) ;
  return p->mObject.mAttribute_mFirstSaveRegister ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_midrange_5F_interruptDefinitionList::current_mSecondSaveRegister (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_interruptDefinitionList * p = (const cCollectionElement_midrange_5F_interruptDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_interruptDefinitionList) ;
  return p->mObject.mAttribute_mSecondSaveRegister ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location cEnumerator_midrange_5F_interruptDefinitionList::current_mEndOfInterruptLocation (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_interruptDefinitionList * p = (const cCollectionElement_midrange_5F_interruptDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_interruptDefinitionList) ;
  return p->mObject.mAttribute_mEndOfInterruptLocation ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       @midrange_interruptDefinitionList type                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_midrange_5F_interruptDefinitionList ("midrange_interruptDefinitionList",
                                                            NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_midrange_5F_interruptDefinitionList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_midrange_5F_interruptDefinitionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_midrange_5F_interruptDefinitionList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_midrange_5F_interruptDefinitionList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_interruptDefinitionList GALGAS_midrange_5F_interruptDefinitionList::extractObject (const GALGAS_object & inObject,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_interruptDefinitionList result ;
  const GALGAS_midrange_5F_interruptDefinitionList * p = (const GALGAS_midrange_5F_interruptDefinitionList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_midrange_5F_interruptDefinitionList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("midrange_interruptDefinitionList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           Class for element of '@midrange_5F_routineDefinitionList' list                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_midrange_5F_routineDefinitionList : public cCollectionElement {
  public : GALGAS_midrange_5F_routineDefinitionList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_midrange_5F_routineDefinitionList (const GALGAS_lstring & in_mRoutineName,
                                                                 const GALGAS_luint & in_mPage,
                                                                 const GALGAS_luint & in_mRequiredBank,
                                                                 const GALGAS_luint & in_mReturnedBank,
                                                                 const GALGAS_bool & in_mPreservesBank,
                                                                 const GALGAS_bool & in_mIsNoReturn,
                                                                 const GALGAS_midrange_5F_instructionList & in_mInstructionList,
                                                                 const GALGAS_location & in_mEndOfRoutineLocation
                                                                 COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_midrange_5F_routineDefinitionList::cCollectionElement_midrange_5F_routineDefinitionList (const GALGAS_lstring & in_mRoutineName,
                                                                                                            const GALGAS_luint & in_mPage,
                                                                                                            const GALGAS_luint & in_mRequiredBank,
                                                                                                            const GALGAS_luint & in_mReturnedBank,
                                                                                                            const GALGAS_bool & in_mPreservesBank,
                                                                                                            const GALGAS_bool & in_mIsNoReturn,
                                                                                                            const GALGAS_midrange_5F_instructionList & in_mInstructionList,
                                                                                                            const GALGAS_location & in_mEndOfRoutineLocation
                                                                                                            COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mRoutineName, in_mPage, in_mRequiredBank, in_mReturnedBank, in_mPreservesBank, in_mIsNoReturn, in_mInstructionList, in_mEndOfRoutineLocation) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_midrange_5F_routineDefinitionList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_midrange_5F_routineDefinitionList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_midrange_5F_routineDefinitionList (mObject.mAttribute_mRoutineName, mObject.mAttribute_mPage, mObject.mAttribute_mRequiredBank, mObject.mAttribute_mReturnedBank, mObject.mAttribute_mPreservesBank, mObject.mAttribute_mIsNoReturn, mObject.mAttribute_mInstructionList, mObject.mAttribute_mEndOfRoutineLocation COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_midrange_5F_routineDefinitionList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRoutineName" ":" ;
  mObject.mAttribute_mRoutineName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPage" ":" ;
  mObject.mAttribute_mPage.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRequiredBank" ":" ;
  mObject.mAttribute_mRequiredBank.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mReturnedBank" ":" ;
  mObject.mAttribute_mReturnedBank.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPreservesBank" ":" ;
  mObject.mAttribute_mPreservesBank.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsNoReturn" ":" ;
  mObject.mAttribute_mIsNoReturn.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstructionList" ":" ;
  mObject.mAttribute_mInstructionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEndOfRoutineLocation" ":" ;
  mObject.mAttribute_mEndOfRoutineLocation.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_midrange_5F_routineDefinitionList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_midrange_5F_routineDefinitionList * operand = (cCollectionElement_midrange_5F_routineDefinitionList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_midrange_5F_routineDefinitionList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_routineDefinitionList::GALGAS_midrange_5F_routineDefinitionList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_routineDefinitionList::GALGAS_midrange_5F_routineDefinitionList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_routineDefinitionList GALGAS_midrange_5F_routineDefinitionList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_midrange_5F_routineDefinitionList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_routineDefinitionList GALGAS_midrange_5F_routineDefinitionList::constructor_listWithValue (const GALGAS_lstring & inOperand0,
                                                                                                              const GALGAS_luint & inOperand1,
                                                                                                              const GALGAS_luint & inOperand2,
                                                                                                              const GALGAS_luint & inOperand3,
                                                                                                              const GALGAS_bool & inOperand4,
                                                                                                              const GALGAS_bool & inOperand5,
                                                                                                              const GALGAS_midrange_5F_instructionList & inOperand6,
                                                                                                              const GALGAS_location & inOperand7
                                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_routineDefinitionList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_midrange_5F_routineDefinitionList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_routineDefinitionList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                          const GALGAS_lstring & in_mRoutineName,
                                                                          const GALGAS_luint & in_mPage,
                                                                          const GALGAS_luint & in_mRequiredBank,
                                                                          const GALGAS_luint & in_mReturnedBank,
                                                                          const GALGAS_bool & in_mPreservesBank,
                                                                          const GALGAS_bool & in_mIsNoReturn,
                                                                          const GALGAS_midrange_5F_instructionList & in_mInstructionList,
                                                                          const GALGAS_location & in_mEndOfRoutineLocation
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement_midrange_5F_routineDefinitionList * p = NULL ;
  macroMyNew (p, cCollectionElement_midrange_5F_routineDefinitionList (in_mRoutineName,
                                                                       in_mPage,
                                                                       in_mRequiredBank,
                                                                       in_mReturnedBank,
                                                                       in_mPreservesBank,
                                                                       in_mIsNoReturn,
                                                                       in_mInstructionList,
                                                                       in_mEndOfRoutineLocation COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_routineDefinitionList::addAssign_operation (const GALGAS_lstring & inOperand0,
                                                                    const GALGAS_luint & inOperand1,
                                                                    const GALGAS_luint & inOperand2,
                                                                    const GALGAS_luint & inOperand3,
                                                                    const GALGAS_bool & inOperand4,
                                                                    const GALGAS_bool & inOperand5,
                                                                    const GALGAS_midrange_5F_instructionList & inOperand6,
                                                                    const GALGAS_location & inOperand7
                                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_midrange_5F_routineDefinitionList (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_routineDefinitionList::modifier_insertAtIndex (const GALGAS_lstring inOperand0,
                                                                       const GALGAS_luint inOperand1,
                                                                       const GALGAS_luint inOperand2,
                                                                       const GALGAS_luint inOperand3,
                                                                       const GALGAS_bool inOperand4,
                                                                       const GALGAS_bool inOperand5,
                                                                       const GALGAS_midrange_5F_instructionList inOperand6,
                                                                       const GALGAS_location inOperand7,
                                                                       const GALGAS_uint inInsertionIndex,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_midrange_5F_routineDefinitionList (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_routineDefinitionList::modifier_removeAtIndex (GALGAS_lstring & outOperand0,
                                                                       GALGAS_luint & outOperand1,
                                                                       GALGAS_luint & outOperand2,
                                                                       GALGAS_luint & outOperand3,
                                                                       GALGAS_bool & outOperand4,
                                                                       GALGAS_bool & outOperand5,
                                                                       GALGAS_midrange_5F_instructionList & outOperand6,
                                                                       GALGAS_location & outOperand7,
                                                                       const GALGAS_uint inRemoveIndex,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_midrange_5F_routineDefinitionList * p = (cCollectionElement_midrange_5F_routineDefinitionList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
      outOperand3.drop () ;
      outOperand4.drop () ;
      outOperand5.drop () ;
      outOperand6.drop () ;
      outOperand7.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_midrange_5F_routineDefinitionList) ;
      outOperand0 = p->mObject.mAttribute_mRoutineName ;
      outOperand1 = p->mObject.mAttribute_mPage ;
      outOperand2 = p->mObject.mAttribute_mRequiredBank ;
      outOperand3 = p->mObject.mAttribute_mReturnedBank ;
      outOperand4 = p->mObject.mAttribute_mPreservesBank ;
      outOperand5 = p->mObject.mAttribute_mIsNoReturn ;
      outOperand6 = p->mObject.mAttribute_mInstructionList ;
      outOperand7 = p->mObject.mAttribute_mEndOfRoutineLocation ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_routineDefinitionList::modifier_popFirst (GALGAS_lstring & outOperand0,
                                                                  GALGAS_luint & outOperand1,
                                                                  GALGAS_luint & outOperand2,
                                                                  GALGAS_luint & outOperand3,
                                                                  GALGAS_bool & outOperand4,
                                                                  GALGAS_bool & outOperand5,
                                                                  GALGAS_midrange_5F_instructionList & outOperand6,
                                                                  GALGAS_location & outOperand7,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_routineDefinitionList * p = (cCollectionElement_midrange_5F_routineDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
    outOperand5.drop () ;
    outOperand6.drop () ;
    outOperand7.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_midrange_5F_routineDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mRoutineName ;
    outOperand1 = p->mObject.mAttribute_mPage ;
    outOperand2 = p->mObject.mAttribute_mRequiredBank ;
    outOperand3 = p->mObject.mAttribute_mReturnedBank ;
    outOperand4 = p->mObject.mAttribute_mPreservesBank ;
    outOperand5 = p->mObject.mAttribute_mIsNoReturn ;
    outOperand6 = p->mObject.mAttribute_mInstructionList ;
    outOperand7 = p->mObject.mAttribute_mEndOfRoutineLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_routineDefinitionList::modifier_popLast (GALGAS_lstring & outOperand0,
                                                                 GALGAS_luint & outOperand1,
                                                                 GALGAS_luint & outOperand2,
                                                                 GALGAS_luint & outOperand3,
                                                                 GALGAS_bool & outOperand4,
                                                                 GALGAS_bool & outOperand5,
                                                                 GALGAS_midrange_5F_instructionList & outOperand6,
                                                                 GALGAS_location & outOperand7,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_routineDefinitionList * p = (cCollectionElement_midrange_5F_routineDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
    outOperand5.drop () ;
    outOperand6.drop () ;
    outOperand7.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_midrange_5F_routineDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mRoutineName ;
    outOperand1 = p->mObject.mAttribute_mPage ;
    outOperand2 = p->mObject.mAttribute_mRequiredBank ;
    outOperand3 = p->mObject.mAttribute_mReturnedBank ;
    outOperand4 = p->mObject.mAttribute_mPreservesBank ;
    outOperand5 = p->mObject.mAttribute_mIsNoReturn ;
    outOperand6 = p->mObject.mAttribute_mInstructionList ;
    outOperand7 = p->mObject.mAttribute_mEndOfRoutineLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_routineDefinitionList::method_first (GALGAS_lstring & outOperand0,
                                                             GALGAS_luint & outOperand1,
                                                             GALGAS_luint & outOperand2,
                                                             GALGAS_luint & outOperand3,
                                                             GALGAS_bool & outOperand4,
                                                             GALGAS_bool & outOperand5,
                                                             GALGAS_midrange_5F_instructionList & outOperand6,
                                                             GALGAS_location & outOperand7,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_routineDefinitionList * p = (cCollectionElement_midrange_5F_routineDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
    outOperand5.drop () ;
    outOperand6.drop () ;
    outOperand7.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_midrange_5F_routineDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mRoutineName ;
    outOperand1 = p->mObject.mAttribute_mPage ;
    outOperand2 = p->mObject.mAttribute_mRequiredBank ;
    outOperand3 = p->mObject.mAttribute_mReturnedBank ;
    outOperand4 = p->mObject.mAttribute_mPreservesBank ;
    outOperand5 = p->mObject.mAttribute_mIsNoReturn ;
    outOperand6 = p->mObject.mAttribute_mInstructionList ;
    outOperand7 = p->mObject.mAttribute_mEndOfRoutineLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_routineDefinitionList::method_last (GALGAS_lstring & outOperand0,
                                                            GALGAS_luint & outOperand1,
                                                            GALGAS_luint & outOperand2,
                                                            GALGAS_luint & outOperand3,
                                                            GALGAS_bool & outOperand4,
                                                            GALGAS_bool & outOperand5,
                                                            GALGAS_midrange_5F_instructionList & outOperand6,
                                                            GALGAS_location & outOperand7,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_routineDefinitionList * p = (cCollectionElement_midrange_5F_routineDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
    outOperand5.drop () ;
    outOperand6.drop () ;
    outOperand7.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_midrange_5F_routineDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mRoutineName ;
    outOperand1 = p->mObject.mAttribute_mPage ;
    outOperand2 = p->mObject.mAttribute_mRequiredBank ;
    outOperand3 = p->mObject.mAttribute_mReturnedBank ;
    outOperand4 = p->mObject.mAttribute_mPreservesBank ;
    outOperand5 = p->mObject.mAttribute_mIsNoReturn ;
    outOperand6 = p->mObject.mAttribute_mInstructionList ;
    outOperand7 = p->mObject.mAttribute_mEndOfRoutineLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_routineDefinitionList GALGAS_midrange_5F_routineDefinitionList::operator_concat (const GALGAS_midrange_5F_routineDefinitionList & inOperand
                                                                                                    COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_midrange_5F_routineDefinitionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_routineDefinitionList GALGAS_midrange_5F_routineDefinitionList::add_operation (const GALGAS_midrange_5F_routineDefinitionList & inOperand,
                                                                                                  C_Compiler * /* inCompiler */
                                                                                                  COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_midrange_5F_routineDefinitionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_routineDefinitionList GALGAS_midrange_5F_routineDefinitionList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_midrange_5F_routineDefinitionList result = GALGAS_midrange_5F_routineDefinitionList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_routineDefinitionList GALGAS_midrange_5F_routineDefinitionList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) const {
  GALGAS_midrange_5F_routineDefinitionList result = GALGAS_midrange_5F_routineDefinitionList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_routineDefinitionList::dotAssign_operation (const GALGAS_midrange_5F_routineDefinitionList inOperand
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_midrange_5F_routineDefinitionList::reader_mRoutineNameAtIndex (const GALGAS_uint & inIndex,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_routineDefinitionList * p = (cCollectionElement_midrange_5F_routineDefinitionList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_midrange_5F_routineDefinitionList) ;
    result = p->mObject.mAttribute_mRoutineName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint GALGAS_midrange_5F_routineDefinitionList::reader_mPageAtIndex (const GALGAS_uint & inIndex,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_routineDefinitionList * p = (cCollectionElement_midrange_5F_routineDefinitionList *) attributes.ptr () ;
  GALGAS_luint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_midrange_5F_routineDefinitionList) ;
    result = p->mObject.mAttribute_mPage ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint GALGAS_midrange_5F_routineDefinitionList::reader_mRequiredBankAtIndex (const GALGAS_uint & inIndex,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_routineDefinitionList * p = (cCollectionElement_midrange_5F_routineDefinitionList *) attributes.ptr () ;
  GALGAS_luint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_midrange_5F_routineDefinitionList) ;
    result = p->mObject.mAttribute_mRequiredBank ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint GALGAS_midrange_5F_routineDefinitionList::reader_mReturnedBankAtIndex (const GALGAS_uint & inIndex,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_routineDefinitionList * p = (cCollectionElement_midrange_5F_routineDefinitionList *) attributes.ptr () ;
  GALGAS_luint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_midrange_5F_routineDefinitionList) ;
    result = p->mObject.mAttribute_mReturnedBank ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_routineDefinitionList::reader_mPreservesBankAtIndex (const GALGAS_uint & inIndex,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_routineDefinitionList * p = (cCollectionElement_midrange_5F_routineDefinitionList *) attributes.ptr () ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_midrange_5F_routineDefinitionList) ;
    result = p->mObject.mAttribute_mPreservesBank ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_routineDefinitionList::reader_mIsNoReturnAtIndex (const GALGAS_uint & inIndex,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_routineDefinitionList * p = (cCollectionElement_midrange_5F_routineDefinitionList *) attributes.ptr () ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_midrange_5F_routineDefinitionList) ;
    result = p->mObject.mAttribute_mIsNoReturn ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instructionList GALGAS_midrange_5F_routineDefinitionList::reader_mInstructionListAtIndex (const GALGAS_uint & inIndex,
                                                                                                             C_Compiler * inCompiler
                                                                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_routineDefinitionList * p = (cCollectionElement_midrange_5F_routineDefinitionList *) attributes.ptr () ;
  GALGAS_midrange_5F_instructionList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_midrange_5F_routineDefinitionList) ;
    result = p->mObject.mAttribute_mInstructionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_midrange_5F_routineDefinitionList::reader_mEndOfRoutineLocationAtIndex (const GALGAS_uint & inIndex,
                                                                                               C_Compiler * inCompiler
                                                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_routineDefinitionList * p = (cCollectionElement_midrange_5F_routineDefinitionList *) attributes.ptr () ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_midrange_5F_routineDefinitionList) ;
    result = p->mObject.mAttribute_mEndOfRoutineLocation ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_midrange_5F_routineDefinitionList::cEnumerator_midrange_5F_routineDefinitionList (const GALGAS_midrange_5F_routineDefinitionList & inEnumeratedObject,
                                                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_routineDefinitionList_2D_element cEnumerator_midrange_5F_routineDefinitionList::current (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_routineDefinitionList * p = (const cCollectionElement_midrange_5F_routineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_routineDefinitionList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_midrange_5F_routineDefinitionList::current_mRoutineName (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_routineDefinitionList * p = (const cCollectionElement_midrange_5F_routineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_routineDefinitionList) ;
  return p->mObject.mAttribute_mRoutineName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint cEnumerator_midrange_5F_routineDefinitionList::current_mPage (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_routineDefinitionList * p = (const cCollectionElement_midrange_5F_routineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_routineDefinitionList) ;
  return p->mObject.mAttribute_mPage ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint cEnumerator_midrange_5F_routineDefinitionList::current_mRequiredBank (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_routineDefinitionList * p = (const cCollectionElement_midrange_5F_routineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_routineDefinitionList) ;
  return p->mObject.mAttribute_mRequiredBank ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint cEnumerator_midrange_5F_routineDefinitionList::current_mReturnedBank (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_routineDefinitionList * p = (const cCollectionElement_midrange_5F_routineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_routineDefinitionList) ;
  return p->mObject.mAttribute_mReturnedBank ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_midrange_5F_routineDefinitionList::current_mPreservesBank (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_routineDefinitionList * p = (const cCollectionElement_midrange_5F_routineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_routineDefinitionList) ;
  return p->mObject.mAttribute_mPreservesBank ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_midrange_5F_routineDefinitionList::current_mIsNoReturn (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_routineDefinitionList * p = (const cCollectionElement_midrange_5F_routineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_routineDefinitionList) ;
  return p->mObject.mAttribute_mIsNoReturn ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_instructionList cEnumerator_midrange_5F_routineDefinitionList::current_mInstructionList (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_routineDefinitionList * p = (const cCollectionElement_midrange_5F_routineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_routineDefinitionList) ;
  return p->mObject.mAttribute_mInstructionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location cEnumerator_midrange_5F_routineDefinitionList::current_mEndOfRoutineLocation (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_routineDefinitionList * p = (const cCollectionElement_midrange_5F_routineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_routineDefinitionList) ;
  return p->mObject.mAttribute_mEndOfRoutineLocation ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        @midrange_routineDefinitionList type                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_midrange_5F_routineDefinitionList ("midrange_routineDefinitionList",
                                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_midrange_5F_routineDefinitionList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_midrange_5F_routineDefinitionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_midrange_5F_routineDefinitionList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_midrange_5F_routineDefinitionList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_routineDefinitionList GALGAS_midrange_5F_routineDefinitionList::extractObject (const GALGAS_object & inObject,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_routineDefinitionList result ;
  const GALGAS_midrange_5F_routineDefinitionList * p = (const GALGAS_midrange_5F_routineDefinitionList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_midrange_5F_routineDefinitionList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("midrange_routineDefinitionList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                      Class for element of '@midrange_5F_intermediate_5F_instructionList' list                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_midrange_5F_intermediate_5F_instructionList : public cCollectionElement {
  public : GALGAS_midrange_5F_intermediate_5F_instructionList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_midrange_5F_intermediate_5F_instructionList (const GALGAS_midrange_5F_intermediate_5F_instruction & in_mInstruction
                                                                           COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_midrange_5F_intermediate_5F_instructionList::cCollectionElement_midrange_5F_intermediate_5F_instructionList (const GALGAS_midrange_5F_intermediate_5F_instruction & in_mInstruction
                                                                                                                                COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mInstruction) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_midrange_5F_intermediate_5F_instructionList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_midrange_5F_intermediate_5F_instructionList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_midrange_5F_intermediate_5F_instructionList (mObject.mAttribute_mInstruction COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_midrange_5F_intermediate_5F_instructionList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstruction" ":" ;
  mObject.mAttribute_mInstruction.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_midrange_5F_intermediate_5F_instructionList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_midrange_5F_intermediate_5F_instructionList * operand = (cCollectionElement_midrange_5F_intermediate_5F_instructionList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_midrange_5F_intermediate_5F_instructionList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_intermediate_5F_instructionList::GALGAS_midrange_5F_intermediate_5F_instructionList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_intermediate_5F_instructionList::GALGAS_midrange_5F_intermediate_5F_instructionList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_intermediate_5F_instructionList GALGAS_midrange_5F_intermediate_5F_instructionList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_midrange_5F_intermediate_5F_instructionList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_intermediate_5F_instructionList GALGAS_midrange_5F_intermediate_5F_instructionList::constructor_listWithValue (const GALGAS_midrange_5F_intermediate_5F_instruction & inOperand0
                                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_intermediate_5F_instructionList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_midrange_5F_intermediate_5F_instructionList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_intermediate_5F_instructionList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                                    const GALGAS_midrange_5F_intermediate_5F_instruction & in_mInstruction
                                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement_midrange_5F_intermediate_5F_instructionList * p = NULL ;
  macroMyNew (p, cCollectionElement_midrange_5F_intermediate_5F_instructionList (in_mInstruction COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_intermediate_5F_instructionList::addAssign_operation (const GALGAS_midrange_5F_intermediate_5F_instruction & inOperand0
                                                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_midrange_5F_intermediate_5F_instructionList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_intermediate_5F_instructionList::modifier_insertAtIndex (const GALGAS_midrange_5F_intermediate_5F_instruction inOperand0,
                                                                                 const GALGAS_uint inInsertionIndex,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_midrange_5F_intermediate_5F_instructionList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_intermediate_5F_instructionList::modifier_removeAtIndex (GALGAS_midrange_5F_intermediate_5F_instruction & outOperand0,
                                                                                 const GALGAS_uint inRemoveIndex,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_midrange_5F_intermediate_5F_instructionList * p = (cCollectionElement_midrange_5F_intermediate_5F_instructionList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_midrange_5F_intermediate_5F_instructionList) ;
      outOperand0 = p->mObject.mAttribute_mInstruction ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_intermediate_5F_instructionList::modifier_popFirst (GALGAS_midrange_5F_intermediate_5F_instruction & outOperand0,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_intermediate_5F_instructionList * p = (cCollectionElement_midrange_5F_intermediate_5F_instructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_midrange_5F_intermediate_5F_instructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_intermediate_5F_instructionList::modifier_popLast (GALGAS_midrange_5F_intermediate_5F_instruction & outOperand0,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_intermediate_5F_instructionList * p = (cCollectionElement_midrange_5F_intermediate_5F_instructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_midrange_5F_intermediate_5F_instructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_intermediate_5F_instructionList::method_first (GALGAS_midrange_5F_intermediate_5F_instruction & outOperand0,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_intermediate_5F_instructionList * p = (cCollectionElement_midrange_5F_intermediate_5F_instructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_midrange_5F_intermediate_5F_instructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_intermediate_5F_instructionList::method_last (GALGAS_midrange_5F_intermediate_5F_instruction & outOperand0,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_intermediate_5F_instructionList * p = (cCollectionElement_midrange_5F_intermediate_5F_instructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_midrange_5F_intermediate_5F_instructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_intermediate_5F_instructionList GALGAS_midrange_5F_intermediate_5F_instructionList::operator_concat (const GALGAS_midrange_5F_intermediate_5F_instructionList & inOperand
                                                                                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_midrange_5F_intermediate_5F_instructionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_intermediate_5F_instructionList GALGAS_midrange_5F_intermediate_5F_instructionList::add_operation (const GALGAS_midrange_5F_intermediate_5F_instructionList & inOperand,
                                                                                                                      C_Compiler * /* inCompiler */
                                                                                                                      COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_midrange_5F_intermediate_5F_instructionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_intermediate_5F_instructionList GALGAS_midrange_5F_intermediate_5F_instructionList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                                                C_Compiler * inCompiler
                                                                                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_midrange_5F_intermediate_5F_instructionList result = GALGAS_midrange_5F_intermediate_5F_instructionList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_intermediate_5F_instructionList GALGAS_midrange_5F_intermediate_5F_instructionList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                                                C_Compiler * inCompiler
                                                                                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_midrange_5F_intermediate_5F_instructionList result = GALGAS_midrange_5F_intermediate_5F_instructionList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_intermediate_5F_instructionList::dotAssign_operation (const GALGAS_midrange_5F_intermediate_5F_instructionList inOperand
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_intermediate_5F_instructionList::modifier_setMInstructionAtIndex (GALGAS_midrange_5F_intermediate_5F_instruction inOperand,
                                                                                          GALGAS_uint inIndex,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement_midrange_5F_intermediate_5F_instructionList * p = (cCollectionElement_midrange_5F_intermediate_5F_instructionList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_midrange_5F_intermediate_5F_instructionList) ;
    macroUniqueSharedObject (p) ;
    p->mObject.mAttribute_mInstruction = inOperand ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_intermediate_5F_instruction GALGAS_midrange_5F_intermediate_5F_instructionList::reader_mInstructionAtIndex (const GALGAS_uint & inIndex,
                                                                                                                               C_Compiler * inCompiler
                                                                                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_midrange_5F_intermediate_5F_instructionList * p = (cCollectionElement_midrange_5F_intermediate_5F_instructionList *) attributes.ptr () ;
  GALGAS_midrange_5F_intermediate_5F_instruction result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_midrange_5F_intermediate_5F_instructionList) ;
    result = p->mObject.mAttribute_mInstruction ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_midrange_5F_intermediate_5F_instructionList::cEnumerator_midrange_5F_intermediate_5F_instructionList (const GALGAS_midrange_5F_intermediate_5F_instructionList & inEnumeratedObject,
                                                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_intermediate_5F_instructionList_2D_element cEnumerator_midrange_5F_intermediate_5F_instructionList::current (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_intermediate_5F_instructionList * p = (const cCollectionElement_midrange_5F_intermediate_5F_instructionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_intermediate_5F_instructionList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_intermediate_5F_instruction cEnumerator_midrange_5F_intermediate_5F_instructionList::current_mInstruction (LOCATION_ARGS) const {
  const cCollectionElement_midrange_5F_intermediate_5F_instructionList * p = (const cCollectionElement_midrange_5F_intermediate_5F_instructionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_midrange_5F_intermediate_5F_instructionList) ;
  return p->mObject.mAttribute_mInstruction ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     @midrange_intermediate_instructionList type                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_midrange_5F_intermediate_5F_instructionList ("midrange_intermediate_instructionList",
                                                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_midrange_5F_intermediate_5F_instructionList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_midrange_5F_intermediate_5F_instructionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_midrange_5F_intermediate_5F_instructionList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_midrange_5F_intermediate_5F_instructionList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_intermediate_5F_instructionList GALGAS_midrange_5F_intermediate_5F_instructionList::extractObject (const GALGAS_object & inObject,
                                                                                                                      C_Compiler * inCompiler
                                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_intermediate_5F_instructionList result ;
  const GALGAS_midrange_5F_intermediate_5F_instructionList * p = (const GALGAS_midrange_5F_intermediate_5F_instructionList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_midrange_5F_intermediate_5F_instructionList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("midrange_intermediate_instructionList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_call_5F_goto_5F_bit::GALGAS_midrange_5F_call_5F_goto_5F_bit (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_call_5F_goto_5F_bit GALGAS_midrange_5F_call_5F_goto_5F_bit::constructor_set (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_call_5F_goto_5F_bit result ;
  result.mEnum = kEnum_set ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_call_5F_goto_5F_bit GALGAS_midrange_5F_call_5F_goto_5F_bit::constructor_clear (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_call_5F_goto_5F_bit result ;
  result.mEnum = kEnum_clear ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_call_5F_goto_5F_bit GALGAS_midrange_5F_call_5F_goto_5F_bit::constructor_noChange (UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_call_5F_goto_5F_bit result ;
  result.mEnum = kEnum_noChange ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_midrange_5F_call_5F_goto_5F_bit [4] = {
  "(not built)",
  "set",
  "clear",
  "noChange"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_call_5F_goto_5F_bit::reader_isSet (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_set == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_call_5F_goto_5F_bit::reader_isClear (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_clear == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_midrange_5F_call_5F_goto_5F_bit::reader_isNoChange (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_noChange == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_call_5F_goto_5F_bit::description (C_String & ioString,
                                                          const int32_t /* inIndentation */) const {
  ioString << "<enum @midrange_call_goto_bit: " << gEnumNameArrayFor_midrange_5F_call_5F_goto_5F_bit [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_midrange_5F_call_5F_goto_5F_bit::objectCompare (const GALGAS_midrange_5F_call_5F_goto_5F_bit & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            @midrange_call_goto_bit type                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_midrange_5F_call_5F_goto_5F_bit ("midrange_call_goto_bit",
                                                        NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_midrange_5F_call_5F_goto_5F_bit::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_midrange_5F_call_5F_goto_5F_bit ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_midrange_5F_call_5F_goto_5F_bit::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_midrange_5F_call_5F_goto_5F_bit (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_call_5F_goto_5F_bit GALGAS_midrange_5F_call_5F_goto_5F_bit::extractObject (const GALGAS_object & inObject,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_call_5F_goto_5F_bit result ;
  const GALGAS_midrange_5F_call_5F_goto_5F_bit * p = (const GALGAS_midrange_5F_call_5F_goto_5F_bit *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_midrange_5F_call_5F_goto_5F_bit *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("midrange_call_goto_bit", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_midrange_5F_symbolTableForConvertingRelatives::cMapElement_midrange_5F_symbolTableForConvertingRelatives (const GALGAS_lstring & inKey,
                                                                                                                      const GALGAS_uint & in_mRoutineAddress
                                                                                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mRoutineAddress (in_mRoutineAddress) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_midrange_5F_symbolTableForConvertingRelatives::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRoutineAddress.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_midrange_5F_symbolTableForConvertingRelatives::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_midrange_5F_symbolTableForConvertingRelatives (mAttribute_lkey, mAttribute_mRoutineAddress COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_midrange_5F_symbolTableForConvertingRelatives::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRoutineAddress" ":" ;
  mAttribute_mRoutineAddress.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_midrange_5F_symbolTableForConvertingRelatives::compare (const cCollectionElement * inOperand) const {
  cMapElement_midrange_5F_symbolTableForConvertingRelatives * operand = (cMapElement_midrange_5F_symbolTableForConvertingRelatives *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mRoutineAddress.objectCompare (operand->mAttribute_mRoutineAddress) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_symbolTableForConvertingRelatives::GALGAS_midrange_5F_symbolTableForConvertingRelatives (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_symbolTableForConvertingRelatives::GALGAS_midrange_5F_symbolTableForConvertingRelatives (const GALGAS_midrange_5F_symbolTableForConvertingRelatives & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_symbolTableForConvertingRelatives & GALGAS_midrange_5F_symbolTableForConvertingRelatives::operator = (const GALGAS_midrange_5F_symbolTableForConvertingRelatives & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_symbolTableForConvertingRelatives GALGAS_midrange_5F_symbolTableForConvertingRelatives::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_midrange_5F_symbolTableForConvertingRelatives result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_symbolTableForConvertingRelatives GALGAS_midrange_5F_symbolTableForConvertingRelatives::constructor_mapWithMapToOverride (const GALGAS_midrange_5F_symbolTableForConvertingRelatives & inMapToOverride
                                                                                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_symbolTableForConvertingRelatives result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_symbolTableForConvertingRelatives GALGAS_midrange_5F_symbolTableForConvertingRelatives::reader_overriddenMap (C_Compiler * inCompiler
                                                                                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_midrange_5F_symbolTableForConvertingRelatives result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_symbolTableForConvertingRelatives::addAssign_operation (const GALGAS_lstring & inKey,
                                                                                const GALGAS_uint & inArgument0,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  cMapElement_midrange_5F_symbolTableForConvertingRelatives * p = NULL ;
  macroMyNew (p, cMapElement_midrange_5F_symbolTableForConvertingRelatives (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@midrange_5F_symbolTableForConvertingRelatives insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_symbolTableForConvertingRelatives::modifier_insertKey (GALGAS_lstring inKey,
                                                                               GALGAS_uint inArgument0,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) {
  cMapElement_midrange_5F_symbolTableForConvertingRelatives * p = NULL ;
  macroMyNew (p, cMapElement_midrange_5F_symbolTableForConvertingRelatives (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' label is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_midrange_5F_symbolTableForConvertingRelatives_searchKey = "the '%K' label is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_symbolTableForConvertingRelatives::method_searchKey (GALGAS_lstring inKey,
                                                                             GALGAS_uint & outArgument0,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  const cMapElement_midrange_5F_symbolTableForConvertingRelatives * p = (const cMapElement_midrange_5F_symbolTableForConvertingRelatives *) performSearch (inKey,
                                                                                                                                                             inCompiler,
                                                                                                                                                             kSearchErrorMessage_midrange_5F_symbolTableForConvertingRelatives_searchKey
                                                                                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_midrange_5F_symbolTableForConvertingRelatives) ;
    outArgument0 = p->mAttribute_mRoutineAddress ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_midrange_5F_symbolTableForConvertingRelatives::reader_mRoutineAddressForKey (const GALGAS_string & inKey,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_midrange_5F_symbolTableForConvertingRelatives * p = (const cMapElement_midrange_5F_symbolTableForConvertingRelatives *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_midrange_5F_symbolTableForConvertingRelatives) ;
    result = p->mAttribute_mRoutineAddress ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_symbolTableForConvertingRelatives::modifier_setMRoutineAddressForKey (GALGAS_uint inAttributeValue,
                                                                                              GALGAS_string inKey,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_midrange_5F_symbolTableForConvertingRelatives * p = (cMapElement_midrange_5F_symbolTableForConvertingRelatives *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_midrange_5F_symbolTableForConvertingRelatives) ;
    p->mAttribute_mRoutineAddress = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_midrange_5F_symbolTableForConvertingRelatives * GALGAS_midrange_5F_symbolTableForConvertingRelatives::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                                                                     const GALGAS_string & inKey
                                                                                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_midrange_5F_symbolTableForConvertingRelatives * result = (cMapElement_midrange_5F_symbolTableForConvertingRelatives *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_midrange_5F_symbolTableForConvertingRelatives) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_midrange_5F_symbolTableForConvertingRelatives::cEnumerator_midrange_5F_symbolTableForConvertingRelatives (const GALGAS_midrange_5F_symbolTableForConvertingRelatives & inEnumeratedObject,
                                                                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_symbolTableForConvertingRelatives_2D_element cEnumerator_midrange_5F_symbolTableForConvertingRelatives::current (LOCATION_ARGS) const {
  const cMapElement_midrange_5F_symbolTableForConvertingRelatives * p = (const cMapElement_midrange_5F_symbolTableForConvertingRelatives *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_midrange_5F_symbolTableForConvertingRelatives) ;
  return GALGAS_midrange_5F_symbolTableForConvertingRelatives_2D_element (p->mAttribute_lkey, p->mAttribute_mRoutineAddress) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_midrange_5F_symbolTableForConvertingRelatives::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_midrange_5F_symbolTableForConvertingRelatives::current_mRoutineAddress (LOCATION_ARGS) const {
  const cMapElement_midrange_5F_symbolTableForConvertingRelatives * p = (const cMapElement_midrange_5F_symbolTableForConvertingRelatives *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_midrange_5F_symbolTableForConvertingRelatives) ;
  return p->mAttribute_mRoutineAddress ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  @midrange_symbolTableForConvertingRelatives type                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_midrange_5F_symbolTableForConvertingRelatives ("midrange_symbolTableForConvertingRelatives",
                                                                      NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_midrange_5F_symbolTableForConvertingRelatives::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_midrange_5F_symbolTableForConvertingRelatives ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_midrange_5F_symbolTableForConvertingRelatives::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_midrange_5F_symbolTableForConvertingRelatives (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_symbolTableForConvertingRelatives GALGAS_midrange_5F_symbolTableForConvertingRelatives::extractObject (const GALGAS_object & inObject,
                                                                                                                          C_Compiler * inCompiler
                                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_symbolTableForConvertingRelatives result ;
  const GALGAS_midrange_5F_symbolTableForConvertingRelatives * p = (const GALGAS_midrange_5F_symbolTableForConvertingRelatives *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_midrange_5F_symbolTableForConvertingRelatives *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("midrange_symbolTableForConvertingRelatives", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_midrange_5F_symbolTable::cMapElement_midrange_5F_symbolTable (const GALGAS_lstring & inKey,
                                                                          const GALGAS_uint & in_mRoutineAddress
                                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mRoutineAddress (in_mRoutineAddress) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_midrange_5F_symbolTable::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRoutineAddress.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_midrange_5F_symbolTable::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_midrange_5F_symbolTable (mAttribute_lkey, mAttribute_mRoutineAddress COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_midrange_5F_symbolTable::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRoutineAddress" ":" ;
  mAttribute_mRoutineAddress.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_midrange_5F_symbolTable::compare (const cCollectionElement * inOperand) const {
  cMapElement_midrange_5F_symbolTable * operand = (cMapElement_midrange_5F_symbolTable *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mRoutineAddress.objectCompare (operand->mAttribute_mRoutineAddress) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_symbolTable::GALGAS_midrange_5F_symbolTable (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_symbolTable::GALGAS_midrange_5F_symbolTable (const GALGAS_midrange_5F_symbolTable & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_symbolTable & GALGAS_midrange_5F_symbolTable::operator = (const GALGAS_midrange_5F_symbolTable & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_symbolTable GALGAS_midrange_5F_symbolTable::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_midrange_5F_symbolTable result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_symbolTable GALGAS_midrange_5F_symbolTable::constructor_mapWithMapToOverride (const GALGAS_midrange_5F_symbolTable & inMapToOverride
                                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_symbolTable result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_symbolTable GALGAS_midrange_5F_symbolTable::reader_overriddenMap (C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_midrange_5F_symbolTable result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_symbolTable::addAssign_operation (const GALGAS_lstring & inKey,
                                                          const GALGAS_uint & inArgument0,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cMapElement_midrange_5F_symbolTable * p = NULL ;
  macroMyNew (p, cMapElement_midrange_5F_symbolTable (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@midrange_5F_symbolTable insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_symbolTable::modifier_insertKey (GALGAS_lstring inKey,
                                                         GALGAS_uint inArgument0,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cMapElement_midrange_5F_symbolTable * p = NULL ;
  macroMyNew (p, cMapElement_midrange_5F_symbolTable (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' label is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_midrange_5F_symbolTable_searchKey = "the '%K' label is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_symbolTable::method_searchKey (GALGAS_lstring inKey,
                                                       GALGAS_uint & outArgument0,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) const {
  const cMapElement_midrange_5F_symbolTable * p = (const cMapElement_midrange_5F_symbolTable *) performSearch (inKey,
                                                                                                                 inCompiler,
                                                                                                                 kSearchErrorMessage_midrange_5F_symbolTable_searchKey
                                                                                                                 COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_midrange_5F_symbolTable) ;
    outArgument0 = p->mAttribute_mRoutineAddress ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_midrange_5F_symbolTable::reader_mRoutineAddressForKey (const GALGAS_string & inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_midrange_5F_symbolTable * p = (const cMapElement_midrange_5F_symbolTable *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_midrange_5F_symbolTable) ;
    result = p->mAttribute_mRoutineAddress ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_symbolTable::modifier_setMRoutineAddressForKey (GALGAS_uint inAttributeValue,
                                                                        GALGAS_string inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_midrange_5F_symbolTable * p = (cMapElement_midrange_5F_symbolTable *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_midrange_5F_symbolTable) ;
    p->mAttribute_mRoutineAddress = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_midrange_5F_symbolTable * GALGAS_midrange_5F_symbolTable::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                         const GALGAS_string & inKey
                                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement_midrange_5F_symbolTable * result = (cMapElement_midrange_5F_symbolTable *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_midrange_5F_symbolTable) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_midrange_5F_symbolTable::cEnumerator_midrange_5F_symbolTable (const GALGAS_midrange_5F_symbolTable & inEnumeratedObject,
                                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_symbolTable_2D_element cEnumerator_midrange_5F_symbolTable::current (LOCATION_ARGS) const {
  const cMapElement_midrange_5F_symbolTable * p = (const cMapElement_midrange_5F_symbolTable *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_midrange_5F_symbolTable) ;
  return GALGAS_midrange_5F_symbolTable_2D_element (p->mAttribute_lkey, p->mAttribute_mRoutineAddress) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_midrange_5F_symbolTable::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_midrange_5F_symbolTable::current_mRoutineAddress (LOCATION_ARGS) const {
  const cMapElement_midrange_5F_symbolTable * p = (const cMapElement_midrange_5F_symbolTable *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_midrange_5F_symbolTable) ;
  return p->mAttribute_mRoutineAddress ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @midrange_symbolTable type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_midrange_5F_symbolTable ("midrange_symbolTable",
                                                NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_midrange_5F_symbolTable::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_midrange_5F_symbolTable ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_midrange_5F_symbolTable::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_midrange_5F_symbolTable (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_symbolTable GALGAS_midrange_5F_symbolTable::extractObject (const GALGAS_object & inObject,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_symbolTable result ;
  const GALGAS_midrange_5F_symbolTable * p = (const GALGAS_midrange_5F_symbolTable *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_midrange_5F_symbolTable *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("midrange_symbolTable", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_midrange_5F_declaredRoutineMap::cMapElement_midrange_5F_declaredRoutineMap (const GALGAS_lstring & inKey
                                                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_midrange_5F_declaredRoutineMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_midrange_5F_declaredRoutineMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_midrange_5F_declaredRoutineMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_midrange_5F_declaredRoutineMap::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_midrange_5F_declaredRoutineMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_midrange_5F_declaredRoutineMap * operand = (cMapElement_midrange_5F_declaredRoutineMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_declaredRoutineMap::GALGAS_midrange_5F_declaredRoutineMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_declaredRoutineMap::GALGAS_midrange_5F_declaredRoutineMap (const GALGAS_midrange_5F_declaredRoutineMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_declaredRoutineMap & GALGAS_midrange_5F_declaredRoutineMap::operator = (const GALGAS_midrange_5F_declaredRoutineMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_declaredRoutineMap GALGAS_midrange_5F_declaredRoutineMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_midrange_5F_declaredRoutineMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_declaredRoutineMap GALGAS_midrange_5F_declaredRoutineMap::constructor_mapWithMapToOverride (const GALGAS_midrange_5F_declaredRoutineMap & inMapToOverride
                                                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_declaredRoutineMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_declaredRoutineMap GALGAS_midrange_5F_declaredRoutineMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_midrange_5F_declaredRoutineMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_declaredRoutineMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_midrange_5F_declaredRoutineMap * p = NULL ;
  macroMyNew (p, cMapElement_midrange_5F_declaredRoutineMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@midrange_5F_declaredRoutineMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_declaredRoutineMap::modifier_insertKey (GALGAS_lstring inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cMapElement_midrange_5F_declaredRoutineMap * p = NULL ;
  macroMyNew (p, cMapElement_midrange_5F_declaredRoutineMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' routine is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_midrange_5F_declaredRoutineMap_searchKey = "the '%K' routine is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_midrange_5F_declaredRoutineMap::method_searchKey (GALGAS_lstring inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_midrange_5F_declaredRoutineMap * p = (const cMapElement_midrange_5F_declaredRoutineMap *) performSearch (inKey,
                                                                                                                               inCompiler,
                                                                                                                               kSearchErrorMessage_midrange_5F_declaredRoutineMap_searchKey
                                                                                                                               COMMA_THERE) ;
  if (NULL == p) {
  }else{
    macroValidSharedObject (p, cMapElement_midrange_5F_declaredRoutineMap) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_midrange_5F_declaredRoutineMap * GALGAS_midrange_5F_declaredRoutineMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                                       const GALGAS_string & inKey
                                                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_midrange_5F_declaredRoutineMap * result = (cMapElement_midrange_5F_declaredRoutineMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_midrange_5F_declaredRoutineMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_midrange_5F_declaredRoutineMap::cEnumerator_midrange_5F_declaredRoutineMap (const GALGAS_midrange_5F_declaredRoutineMap & inEnumeratedObject,
                                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_declaredRoutineMap_2D_element cEnumerator_midrange_5F_declaredRoutineMap::current (LOCATION_ARGS) const {
  const cMapElement_midrange_5F_declaredRoutineMap * p = (const cMapElement_midrange_5F_declaredRoutineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_midrange_5F_declaredRoutineMap) ;
  return GALGAS_midrange_5F_declaredRoutineMap_2D_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_midrange_5F_declaredRoutineMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          @midrange_declaredRoutineMap type                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_midrange_5F_declaredRoutineMap ("midrange_declaredRoutineMap",
                                                       NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_midrange_5F_declaredRoutineMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_midrange_5F_declaredRoutineMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_midrange_5F_declaredRoutineMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_midrange_5F_declaredRoutineMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_midrange_5F_declaredRoutineMap GALGAS_midrange_5F_declaredRoutineMap::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_declaredRoutineMap result ;
  const GALGAS_midrange_5F_declaredRoutineMap * p = (const GALGAS_midrange_5F_declaredRoutineMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_midrange_5F_declaredRoutineMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("midrange_declaredRoutineMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_bootloaderReservedRAMmap::cMapElement_bootloaderReservedRAMmap (const GALGAS_lstring & inKey,
                                                                            const GALGAS_luint & in_mReservedSize
                                                                            COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mReservedSize (in_mReservedSize) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_bootloaderReservedRAMmap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mReservedSize.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_bootloaderReservedRAMmap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_bootloaderReservedRAMmap (mAttribute_lkey, mAttribute_mReservedSize COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_bootloaderReservedRAMmap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mReservedSize" ":" ;
  mAttribute_mReservedSize.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_bootloaderReservedRAMmap::compare (const cCollectionElement * inOperand) const {
  cMapElement_bootloaderReservedRAMmap * operand = (cMapElement_bootloaderReservedRAMmap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mReservedSize.objectCompare (operand->mAttribute_mReservedSize) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bootloaderReservedRAMmap::GALGAS_bootloaderReservedRAMmap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bootloaderReservedRAMmap::GALGAS_bootloaderReservedRAMmap (const GALGAS_bootloaderReservedRAMmap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bootloaderReservedRAMmap & GALGAS_bootloaderReservedRAMmap::operator = (const GALGAS_bootloaderReservedRAMmap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bootloaderReservedRAMmap GALGAS_bootloaderReservedRAMmap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_bootloaderReservedRAMmap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bootloaderReservedRAMmap GALGAS_bootloaderReservedRAMmap::constructor_mapWithMapToOverride (const GALGAS_bootloaderReservedRAMmap & inMapToOverride
                                                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_bootloaderReservedRAMmap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bootloaderReservedRAMmap GALGAS_bootloaderReservedRAMmap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                       COMMA_LOCATION_ARGS) const {
  GALGAS_bootloaderReservedRAMmap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_bootloaderReservedRAMmap::addAssign_operation (const GALGAS_lstring & inKey,
                                                           const GALGAS_luint & inArgument0,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cMapElement_bootloaderReservedRAMmap * p = NULL ;
  macroMyNew (p, cMapElement_bootloaderReservedRAMmap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@bootloaderReservedRAMmap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_bootloaderReservedRAMmap::modifier_insertKey (GALGAS_lstring inKey,
                                                          GALGAS_luint inArgument0,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cMapElement_bootloaderReservedRAMmap * p = NULL ;
  macroMyNew (p, cMapElement_bootloaderReservedRAMmap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the reserved size for the '%K' bank is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_bootloaderReservedRAMmap_searchKey = "the reserved size for the '%K' bank is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_bootloaderReservedRAMmap::method_searchKey (GALGAS_lstring inKey,
                                                        GALGAS_luint & outArgument0,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) const {
  const cMapElement_bootloaderReservedRAMmap * p = (const cMapElement_bootloaderReservedRAMmap *) performSearch (inKey,
                                                                                                                   inCompiler,
                                                                                                                   kSearchErrorMessage_bootloaderReservedRAMmap_searchKey
                                                                                                                   COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_bootloaderReservedRAMmap) ;
    outArgument0 = p->mAttribute_mReservedSize ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint GALGAS_bootloaderReservedRAMmap::reader_mReservedSizeForKey (const GALGAS_string & inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_bootloaderReservedRAMmap * p = (const cMapElement_bootloaderReservedRAMmap *) attributes ;
  GALGAS_luint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_bootloaderReservedRAMmap) ;
    result = p->mAttribute_mReservedSize ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_bootloaderReservedRAMmap::modifier_setMReservedSizeForKey (GALGAS_luint inAttributeValue,
                                                                       GALGAS_string inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_bootloaderReservedRAMmap * p = (cMapElement_bootloaderReservedRAMmap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_bootloaderReservedRAMmap) ;
    p->mAttribute_mReservedSize = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_bootloaderReservedRAMmap * GALGAS_bootloaderReservedRAMmap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                           const GALGAS_string & inKey
                                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement_bootloaderReservedRAMmap * result = (cMapElement_bootloaderReservedRAMmap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_bootloaderReservedRAMmap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_bootloaderReservedRAMmap::cEnumerator_bootloaderReservedRAMmap (const GALGAS_bootloaderReservedRAMmap & inEnumeratedObject,
                                                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bootloaderReservedRAMmap_2D_element cEnumerator_bootloaderReservedRAMmap::current (LOCATION_ARGS) const {
  const cMapElement_bootloaderReservedRAMmap * p = (const cMapElement_bootloaderReservedRAMmap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_bootloaderReservedRAMmap) ;
  return GALGAS_bootloaderReservedRAMmap_2D_element (p->mAttribute_lkey, p->mAttribute_mReservedSize) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_bootloaderReservedRAMmap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint cEnumerator_bootloaderReservedRAMmap::current_mReservedSize (LOCATION_ARGS) const {
  const cMapElement_bootloaderReservedRAMmap * p = (const cMapElement_bootloaderReservedRAMmap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_bootloaderReservedRAMmap) ;
  return p->mAttribute_mReservedSize ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @bootloaderReservedRAMmap type                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_bootloaderReservedRAMmap ("bootloaderReservedRAMmap",
                                                 NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_bootloaderReservedRAMmap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_bootloaderReservedRAMmap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_bootloaderReservedRAMmap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_bootloaderReservedRAMmap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bootloaderReservedRAMmap GALGAS_bootloaderReservedRAMmap::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_bootloaderReservedRAMmap result ;
  const GALGAS_bootloaderReservedRAMmap * p = (const GALGAS_bootloaderReservedRAMmap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_bootloaderReservedRAMmap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("bootloaderReservedRAMmap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                               Class for element of '@pic_31__38_InstructionList' list                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_pic_31__38_InstructionList : public cCollectionElement {
  public : GALGAS_pic_31__38_InstructionList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_pic_31__38_InstructionList (const GALGAS_pic_31__38_PiccoloInstruction & in_mInstruction
                                                          COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_pic_31__38_InstructionList::cCollectionElement_pic_31__38_InstructionList (const GALGAS_pic_31__38_PiccoloInstruction & in_mInstruction
                                                                                              COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mInstruction) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_pic_31__38_InstructionList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_pic_31__38_InstructionList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_pic_31__38_InstructionList (mObject.mAttribute_mInstruction COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_pic_31__38_InstructionList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstruction" ":" ;
  mObject.mAttribute_mInstruction.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_pic_31__38_InstructionList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_pic_31__38_InstructionList * operand = (cCollectionElement_pic_31__38_InstructionList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_pic_31__38_InstructionList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList::GALGAS_pic_31__38_InstructionList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList::GALGAS_pic_31__38_InstructionList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList GALGAS_pic_31__38_InstructionList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_pic_31__38_InstructionList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList GALGAS_pic_31__38_InstructionList::constructor_listWithValue (const GALGAS_pic_31__38_PiccoloInstruction & inOperand0
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_pic_31__38_InstructionList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_pic_31__38_InstructionList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_InstructionList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                   const GALGAS_pic_31__38_PiccoloInstruction & in_mInstruction
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement_pic_31__38_InstructionList * p = NULL ;
  macroMyNew (p, cCollectionElement_pic_31__38_InstructionList (in_mInstruction COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_InstructionList::addAssign_operation (const GALGAS_pic_31__38_PiccoloInstruction & inOperand0
                                                             COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_pic_31__38_InstructionList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_InstructionList::modifier_insertAtIndex (const GALGAS_pic_31__38_PiccoloInstruction inOperand0,
                                                                const GALGAS_uint inInsertionIndex,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_pic_31__38_InstructionList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_InstructionList::modifier_removeAtIndex (GALGAS_pic_31__38_PiccoloInstruction & outOperand0,
                                                                const GALGAS_uint inRemoveIndex,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_pic_31__38_InstructionList * p = (cCollectionElement_pic_31__38_InstructionList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_pic_31__38_InstructionList) ;
      outOperand0 = p->mObject.mAttribute_mInstruction ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_InstructionList::modifier_popFirst (GALGAS_pic_31__38_PiccoloInstruction & outOperand0,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_InstructionList * p = (cCollectionElement_pic_31__38_InstructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_InstructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_InstructionList::modifier_popLast (GALGAS_pic_31__38_PiccoloInstruction & outOperand0,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_InstructionList * p = (cCollectionElement_pic_31__38_InstructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_InstructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_InstructionList::method_first (GALGAS_pic_31__38_PiccoloInstruction & outOperand0,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_InstructionList * p = (cCollectionElement_pic_31__38_InstructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_InstructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_InstructionList::method_last (GALGAS_pic_31__38_PiccoloInstruction & outOperand0,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_InstructionList * p = (cCollectionElement_pic_31__38_InstructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_InstructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList GALGAS_pic_31__38_InstructionList::operator_concat (const GALGAS_pic_31__38_InstructionList & inOperand
                                                                                      COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_pic_31__38_InstructionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList GALGAS_pic_31__38_InstructionList::add_operation (const GALGAS_pic_31__38_InstructionList & inOperand,
                                                                                    C_Compiler * /* inCompiler */
                                                                                    COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_pic_31__38_InstructionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList GALGAS_pic_31__38_InstructionList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_pic_31__38_InstructionList result = GALGAS_pic_31__38_InstructionList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList GALGAS_pic_31__38_InstructionList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_pic_31__38_InstructionList result = GALGAS_pic_31__38_InstructionList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_InstructionList::dotAssign_operation (const GALGAS_pic_31__38_InstructionList inOperand
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_PiccoloInstruction GALGAS_pic_31__38_InstructionList::reader_mInstructionAtIndex (const GALGAS_uint & inIndex,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_InstructionList * p = (cCollectionElement_pic_31__38_InstructionList *) attributes.ptr () ;
  GALGAS_pic_31__38_PiccoloInstruction result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_InstructionList) ;
    result = p->mObject.mAttribute_mInstruction ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_pic_31__38_InstructionList::cEnumerator_pic_31__38_InstructionList (const GALGAS_pic_31__38_InstructionList & inEnumeratedObject,
                                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList_2D_element cEnumerator_pic_31__38_InstructionList::current (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_InstructionList * p = (const cCollectionElement_pic_31__38_InstructionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_InstructionList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_PiccoloInstruction cEnumerator_pic_31__38_InstructionList::current_mInstruction (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_InstructionList * p = (const cCollectionElement_pic_31__38_InstructionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_InstructionList) ;
  return p->mObject.mAttribute_mInstruction ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @pic18InstructionList type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_pic_31__38_InstructionList ("pic18InstructionList",
                                                   NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_pic_31__38_InstructionList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_pic_31__38_InstructionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_pic_31__38_InstructionList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_pic_31__38_InstructionList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList GALGAS_pic_31__38_InstructionList::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_pic_31__38_InstructionList result ;
  const GALGAS_pic_31__38_InstructionList * p = (const GALGAS_pic_31__38_InstructionList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_pic_31__38_InstructionList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("pic18InstructionList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Class for element of '@pic_31__38_BlockInstructionBlockList' list                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_pic_31__38_BlockInstructionBlockList : public cCollectionElement {
  public : GALGAS_pic_31__38_BlockInstructionBlockList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_pic_31__38_BlockInstructionBlockList (const GALGAS_lstring & in_mBlockName,
                                                                    const GALGAS_pic_31__38_InstructionList & in_mInstructionList,
                                                                    const GALGAS_abstractBlockTerminationForBlockInstruction & in_mBlockTerminaisonForBlockInstruction,
                                                                    const GALGAS_location & in_mEndOfBlock
                                                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_pic_31__38_BlockInstructionBlockList::cCollectionElement_pic_31__38_BlockInstructionBlockList (const GALGAS_lstring & in_mBlockName,
                                                                                                                  const GALGAS_pic_31__38_InstructionList & in_mInstructionList,
                                                                                                                  const GALGAS_abstractBlockTerminationForBlockInstruction & in_mBlockTerminaisonForBlockInstruction,
                                                                                                                  const GALGAS_location & in_mEndOfBlock
                                                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mBlockName, in_mInstructionList, in_mBlockTerminaisonForBlockInstruction, in_mEndOfBlock) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_pic_31__38_BlockInstructionBlockList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_pic_31__38_BlockInstructionBlockList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_pic_31__38_BlockInstructionBlockList (mObject.mAttribute_mBlockName, mObject.mAttribute_mInstructionList, mObject.mAttribute_mBlockTerminaisonForBlockInstruction, mObject.mAttribute_mEndOfBlock COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_pic_31__38_BlockInstructionBlockList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBlockName" ":" ;
  mObject.mAttribute_mBlockName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstructionList" ":" ;
  mObject.mAttribute_mInstructionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBlockTerminaisonForBlockInstruction" ":" ;
  mObject.mAttribute_mBlockTerminaisonForBlockInstruction.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEndOfBlock" ":" ;
  mObject.mAttribute_mEndOfBlock.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_pic_31__38_BlockInstructionBlockList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_pic_31__38_BlockInstructionBlockList * operand = (cCollectionElement_pic_31__38_BlockInstructionBlockList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_pic_31__38_BlockInstructionBlockList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_BlockInstructionBlockList::GALGAS_pic_31__38_BlockInstructionBlockList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_BlockInstructionBlockList::GALGAS_pic_31__38_BlockInstructionBlockList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_BlockInstructionBlockList GALGAS_pic_31__38_BlockInstructionBlockList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_pic_31__38_BlockInstructionBlockList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_BlockInstructionBlockList GALGAS_pic_31__38_BlockInstructionBlockList::constructor_listWithValue (const GALGAS_lstring & inOperand0,
                                                                                                                    const GALGAS_pic_31__38_InstructionList & inOperand1,
                                                                                                                    const GALGAS_abstractBlockTerminationForBlockInstruction & inOperand2,
                                                                                                                    const GALGAS_location & inOperand3
                                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_pic_31__38_BlockInstructionBlockList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_pic_31__38_BlockInstructionBlockList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_BlockInstructionBlockList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                             const GALGAS_lstring & in_mBlockName,
                                                                             const GALGAS_pic_31__38_InstructionList & in_mInstructionList,
                                                                             const GALGAS_abstractBlockTerminationForBlockInstruction & in_mBlockTerminaisonForBlockInstruction,
                                                                             const GALGAS_location & in_mEndOfBlock
                                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_pic_31__38_BlockInstructionBlockList * p = NULL ;
  macroMyNew (p, cCollectionElement_pic_31__38_BlockInstructionBlockList (in_mBlockName,
                                                                          in_mInstructionList,
                                                                          in_mBlockTerminaisonForBlockInstruction,
                                                                          in_mEndOfBlock COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_BlockInstructionBlockList::addAssign_operation (const GALGAS_lstring & inOperand0,
                                                                       const GALGAS_pic_31__38_InstructionList & inOperand1,
                                                                       const GALGAS_abstractBlockTerminationForBlockInstruction & inOperand2,
                                                                       const GALGAS_location & inOperand3
                                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_pic_31__38_BlockInstructionBlockList (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_BlockInstructionBlockList::modifier_insertAtIndex (const GALGAS_lstring inOperand0,
                                                                          const GALGAS_pic_31__38_InstructionList inOperand1,
                                                                          const GALGAS_abstractBlockTerminationForBlockInstruction inOperand2,
                                                                          const GALGAS_location inOperand3,
                                                                          const GALGAS_uint inInsertionIndex,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_pic_31__38_BlockInstructionBlockList (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_BlockInstructionBlockList::modifier_removeAtIndex (GALGAS_lstring & outOperand0,
                                                                          GALGAS_pic_31__38_InstructionList & outOperand1,
                                                                          GALGAS_abstractBlockTerminationForBlockInstruction & outOperand2,
                                                                          GALGAS_location & outOperand3,
                                                                          const GALGAS_uint inRemoveIndex,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_pic_31__38_BlockInstructionBlockList * p = (cCollectionElement_pic_31__38_BlockInstructionBlockList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
      outOperand3.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_pic_31__38_BlockInstructionBlockList) ;
      outOperand0 = p->mObject.mAttribute_mBlockName ;
      outOperand1 = p->mObject.mAttribute_mInstructionList ;
      outOperand2 = p->mObject.mAttribute_mBlockTerminaisonForBlockInstruction ;
      outOperand3 = p->mObject.mAttribute_mEndOfBlock ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_BlockInstructionBlockList::modifier_popFirst (GALGAS_lstring & outOperand0,
                                                                     GALGAS_pic_31__38_InstructionList & outOperand1,
                                                                     GALGAS_abstractBlockTerminationForBlockInstruction & outOperand2,
                                                                     GALGAS_location & outOperand3,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_BlockInstructionBlockList * p = (cCollectionElement_pic_31__38_BlockInstructionBlockList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_BlockInstructionBlockList) ;
    outOperand0 = p->mObject.mAttribute_mBlockName ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mBlockTerminaisonForBlockInstruction ;
    outOperand3 = p->mObject.mAttribute_mEndOfBlock ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_BlockInstructionBlockList::modifier_popLast (GALGAS_lstring & outOperand0,
                                                                    GALGAS_pic_31__38_InstructionList & outOperand1,
                                                                    GALGAS_abstractBlockTerminationForBlockInstruction & outOperand2,
                                                                    GALGAS_location & outOperand3,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_BlockInstructionBlockList * p = (cCollectionElement_pic_31__38_BlockInstructionBlockList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_BlockInstructionBlockList) ;
    outOperand0 = p->mObject.mAttribute_mBlockName ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mBlockTerminaisonForBlockInstruction ;
    outOperand3 = p->mObject.mAttribute_mEndOfBlock ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_BlockInstructionBlockList::method_first (GALGAS_lstring & outOperand0,
                                                                GALGAS_pic_31__38_InstructionList & outOperand1,
                                                                GALGAS_abstractBlockTerminationForBlockInstruction & outOperand2,
                                                                GALGAS_location & outOperand3,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_BlockInstructionBlockList * p = (cCollectionElement_pic_31__38_BlockInstructionBlockList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_BlockInstructionBlockList) ;
    outOperand0 = p->mObject.mAttribute_mBlockName ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mBlockTerminaisonForBlockInstruction ;
    outOperand3 = p->mObject.mAttribute_mEndOfBlock ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_BlockInstructionBlockList::method_last (GALGAS_lstring & outOperand0,
                                                               GALGAS_pic_31__38_InstructionList & outOperand1,
                                                               GALGAS_abstractBlockTerminationForBlockInstruction & outOperand2,
                                                               GALGAS_location & outOperand3,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_BlockInstructionBlockList * p = (cCollectionElement_pic_31__38_BlockInstructionBlockList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_BlockInstructionBlockList) ;
    outOperand0 = p->mObject.mAttribute_mBlockName ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mBlockTerminaisonForBlockInstruction ;
    outOperand3 = p->mObject.mAttribute_mEndOfBlock ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_BlockInstructionBlockList GALGAS_pic_31__38_BlockInstructionBlockList::operator_concat (const GALGAS_pic_31__38_BlockInstructionBlockList & inOperand
                                                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_pic_31__38_BlockInstructionBlockList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_BlockInstructionBlockList GALGAS_pic_31__38_BlockInstructionBlockList::add_operation (const GALGAS_pic_31__38_BlockInstructionBlockList & inOperand,
                                                                                                        C_Compiler * /* inCompiler */
                                                                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_pic_31__38_BlockInstructionBlockList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_BlockInstructionBlockList GALGAS_pic_31__38_BlockInstructionBlockList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                                  C_Compiler * inCompiler
                                                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_pic_31__38_BlockInstructionBlockList result = GALGAS_pic_31__38_BlockInstructionBlockList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_BlockInstructionBlockList GALGAS_pic_31__38_BlockInstructionBlockList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                                  C_Compiler * inCompiler
                                                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_pic_31__38_BlockInstructionBlockList result = GALGAS_pic_31__38_BlockInstructionBlockList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_BlockInstructionBlockList::dotAssign_operation (const GALGAS_pic_31__38_BlockInstructionBlockList inOperand
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_pic_31__38_BlockInstructionBlockList::reader_mBlockNameAtIndex (const GALGAS_uint & inIndex,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_BlockInstructionBlockList * p = (cCollectionElement_pic_31__38_BlockInstructionBlockList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_BlockInstructionBlockList) ;
    result = p->mObject.mAttribute_mBlockName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList GALGAS_pic_31__38_BlockInstructionBlockList::reader_mInstructionListAtIndex (const GALGAS_uint & inIndex,
                                                                                                               C_Compiler * inCompiler
                                                                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_BlockInstructionBlockList * p = (cCollectionElement_pic_31__38_BlockInstructionBlockList *) attributes.ptr () ;
  GALGAS_pic_31__38_InstructionList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_BlockInstructionBlockList) ;
    result = p->mObject.mAttribute_mInstructionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBlockTerminationForBlockInstruction GALGAS_pic_31__38_BlockInstructionBlockList::reader_mBlockTerminaisonForBlockInstructionAtIndex (const GALGAS_uint & inIndex,
                                                                                                                                                    C_Compiler * inCompiler
                                                                                                                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_BlockInstructionBlockList * p = (cCollectionElement_pic_31__38_BlockInstructionBlockList *) attributes.ptr () ;
  GALGAS_abstractBlockTerminationForBlockInstruction result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_BlockInstructionBlockList) ;
    result = p->mObject.mAttribute_mBlockTerminaisonForBlockInstruction ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_pic_31__38_BlockInstructionBlockList::reader_mEndOfBlockAtIndex (const GALGAS_uint & inIndex,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_BlockInstructionBlockList * p = (cCollectionElement_pic_31__38_BlockInstructionBlockList *) attributes.ptr () ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_BlockInstructionBlockList) ;
    result = p->mObject.mAttribute_mEndOfBlock ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_pic_31__38_BlockInstructionBlockList::cEnumerator_pic_31__38_BlockInstructionBlockList (const GALGAS_pic_31__38_BlockInstructionBlockList & inEnumeratedObject,
                                                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_BlockInstructionBlockList_2D_element cEnumerator_pic_31__38_BlockInstructionBlockList::current (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_BlockInstructionBlockList * p = (const cCollectionElement_pic_31__38_BlockInstructionBlockList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_BlockInstructionBlockList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_pic_31__38_BlockInstructionBlockList::current_mBlockName (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_BlockInstructionBlockList * p = (const cCollectionElement_pic_31__38_BlockInstructionBlockList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_BlockInstructionBlockList) ;
  return p->mObject.mAttribute_mBlockName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList cEnumerator_pic_31__38_BlockInstructionBlockList::current_mInstructionList (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_BlockInstructionBlockList * p = (const cCollectionElement_pic_31__38_BlockInstructionBlockList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_BlockInstructionBlockList) ;
  return p->mObject.mAttribute_mInstructionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBlockTerminationForBlockInstruction cEnumerator_pic_31__38_BlockInstructionBlockList::current_mBlockTerminaisonForBlockInstruction (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_BlockInstructionBlockList * p = (const cCollectionElement_pic_31__38_BlockInstructionBlockList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_BlockInstructionBlockList) ;
  return p->mObject.mAttribute_mBlockTerminaisonForBlockInstruction ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location cEnumerator_pic_31__38_BlockInstructionBlockList::current_mEndOfBlock (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_BlockInstructionBlockList * p = (const cCollectionElement_pic_31__38_BlockInstructionBlockList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_BlockInstructionBlockList) ;
  return p->mObject.mAttribute_mEndOfBlock ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        @pic18BlockInstructionBlockList type                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_pic_31__38_BlockInstructionBlockList ("pic18BlockInstructionBlockList",
                                                             NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_pic_31__38_BlockInstructionBlockList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_pic_31__38_BlockInstructionBlockList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_pic_31__38_BlockInstructionBlockList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_pic_31__38_BlockInstructionBlockList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_BlockInstructionBlockList GALGAS_pic_31__38_BlockInstructionBlockList::extractObject (const GALGAS_object & inObject,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_pic_31__38_BlockInstructionBlockList result ;
  const GALGAS_pic_31__38_BlockInstructionBlockList * p = (const GALGAS_pic_31__38_BlockInstructionBlockList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_pic_31__38_BlockInstructionBlockList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("pic18BlockInstructionBlockList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                             Class for element of '@pic_31__38_CaseExpressionList' list                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_pic_31__38_CaseExpressionList : public cCollectionElement {
  public : GALGAS_pic_31__38_CaseExpressionList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_pic_31__38_CaseExpressionList (const GALGAS_pic_31__38_AbstractCaseItem & in_mCaseItem
                                                             COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_pic_31__38_CaseExpressionList::cCollectionElement_pic_31__38_CaseExpressionList (const GALGAS_pic_31__38_AbstractCaseItem & in_mCaseItem
                                                                                                    COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mCaseItem) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_pic_31__38_CaseExpressionList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_pic_31__38_CaseExpressionList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_pic_31__38_CaseExpressionList (mObject.mAttribute_mCaseItem COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_pic_31__38_CaseExpressionList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCaseItem" ":" ;
  mObject.mAttribute_mCaseItem.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_pic_31__38_CaseExpressionList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_pic_31__38_CaseExpressionList * operand = (cCollectionElement_pic_31__38_CaseExpressionList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_pic_31__38_CaseExpressionList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_CaseExpressionList::GALGAS_pic_31__38_CaseExpressionList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_CaseExpressionList::GALGAS_pic_31__38_CaseExpressionList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_CaseExpressionList GALGAS_pic_31__38_CaseExpressionList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_pic_31__38_CaseExpressionList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_CaseExpressionList GALGAS_pic_31__38_CaseExpressionList::constructor_listWithValue (const GALGAS_pic_31__38_AbstractCaseItem & inOperand0
                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_pic_31__38_CaseExpressionList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_pic_31__38_CaseExpressionList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_CaseExpressionList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                      const GALGAS_pic_31__38_AbstractCaseItem & in_mCaseItem
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement_pic_31__38_CaseExpressionList * p = NULL ;
  macroMyNew (p, cCollectionElement_pic_31__38_CaseExpressionList (in_mCaseItem COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_CaseExpressionList::addAssign_operation (const GALGAS_pic_31__38_AbstractCaseItem & inOperand0
                                                                COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_pic_31__38_CaseExpressionList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_CaseExpressionList::modifier_insertAtIndex (const GALGAS_pic_31__38_AbstractCaseItem inOperand0,
                                                                   const GALGAS_uint inInsertionIndex,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_pic_31__38_CaseExpressionList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_CaseExpressionList::modifier_removeAtIndex (GALGAS_pic_31__38_AbstractCaseItem & outOperand0,
                                                                   const GALGAS_uint inRemoveIndex,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_pic_31__38_CaseExpressionList * p = (cCollectionElement_pic_31__38_CaseExpressionList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_pic_31__38_CaseExpressionList) ;
      outOperand0 = p->mObject.mAttribute_mCaseItem ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_CaseExpressionList::modifier_popFirst (GALGAS_pic_31__38_AbstractCaseItem & outOperand0,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_CaseExpressionList * p = (cCollectionElement_pic_31__38_CaseExpressionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_CaseExpressionList) ;
    outOperand0 = p->mObject.mAttribute_mCaseItem ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_CaseExpressionList::modifier_popLast (GALGAS_pic_31__38_AbstractCaseItem & outOperand0,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_CaseExpressionList * p = (cCollectionElement_pic_31__38_CaseExpressionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_CaseExpressionList) ;
    outOperand0 = p->mObject.mAttribute_mCaseItem ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_CaseExpressionList::method_first (GALGAS_pic_31__38_AbstractCaseItem & outOperand0,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_CaseExpressionList * p = (cCollectionElement_pic_31__38_CaseExpressionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_CaseExpressionList) ;
    outOperand0 = p->mObject.mAttribute_mCaseItem ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_CaseExpressionList::method_last (GALGAS_pic_31__38_AbstractCaseItem & outOperand0,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_CaseExpressionList * p = (cCollectionElement_pic_31__38_CaseExpressionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_CaseExpressionList) ;
    outOperand0 = p->mObject.mAttribute_mCaseItem ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_CaseExpressionList GALGAS_pic_31__38_CaseExpressionList::operator_concat (const GALGAS_pic_31__38_CaseExpressionList & inOperand
                                                                                            COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_pic_31__38_CaseExpressionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_CaseExpressionList GALGAS_pic_31__38_CaseExpressionList::add_operation (const GALGAS_pic_31__38_CaseExpressionList & inOperand,
                                                                                          C_Compiler * /* inCompiler */
                                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_pic_31__38_CaseExpressionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_CaseExpressionList GALGAS_pic_31__38_CaseExpressionList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) const {
  GALGAS_pic_31__38_CaseExpressionList result = GALGAS_pic_31__38_CaseExpressionList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_CaseExpressionList GALGAS_pic_31__38_CaseExpressionList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) const {
  GALGAS_pic_31__38_CaseExpressionList result = GALGAS_pic_31__38_CaseExpressionList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_CaseExpressionList::dotAssign_operation (const GALGAS_pic_31__38_CaseExpressionList inOperand
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_AbstractCaseItem GALGAS_pic_31__38_CaseExpressionList::reader_mCaseItemAtIndex (const GALGAS_uint & inIndex,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_CaseExpressionList * p = (cCollectionElement_pic_31__38_CaseExpressionList *) attributes.ptr () ;
  GALGAS_pic_31__38_AbstractCaseItem result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_CaseExpressionList) ;
    result = p->mObject.mAttribute_mCaseItem ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_pic_31__38_CaseExpressionList::cEnumerator_pic_31__38_CaseExpressionList (const GALGAS_pic_31__38_CaseExpressionList & inEnumeratedObject,
                                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_CaseExpressionList_2D_element cEnumerator_pic_31__38_CaseExpressionList::current (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_CaseExpressionList * p = (const cCollectionElement_pic_31__38_CaseExpressionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_CaseExpressionList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_AbstractCaseItem cEnumerator_pic_31__38_CaseExpressionList::current_mCaseItem (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_CaseExpressionList * p = (const cCollectionElement_pic_31__38_CaseExpressionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_CaseExpressionList) ;
  return p->mObject.mAttribute_mCaseItem ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            @pic18CaseExpressionList type                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_pic_31__38_CaseExpressionList ("pic18CaseExpressionList",
                                                      NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_pic_31__38_CaseExpressionList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_pic_31__38_CaseExpressionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_pic_31__38_CaseExpressionList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_pic_31__38_CaseExpressionList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_CaseExpressionList GALGAS_pic_31__38_CaseExpressionList::extractObject (const GALGAS_object & inObject,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_pic_31__38_CaseExpressionList result ;
  const GALGAS_pic_31__38_CaseExpressionList * p = (const GALGAS_pic_31__38_CaseExpressionList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_pic_31__38_CaseExpressionList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("pic18CaseExpressionList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Class for element of '@pic_31__38_SwitchInstructionCaseList' list                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_pic_31__38_SwitchInstructionCaseList : public cCollectionElement {
  public : GALGAS_pic_31__38_SwitchInstructionCaseList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_pic_31__38_SwitchInstructionCaseList (const GALGAS_location & in_mStartOfCase,
                                                                    const GALGAS_pic_31__38_CaseExpressionList & in_mCaseExpressionList,
                                                                    const GALGAS_pic_31__38_InstructionList & in_mInstructionList
                                                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_pic_31__38_SwitchInstructionCaseList::cCollectionElement_pic_31__38_SwitchInstructionCaseList (const GALGAS_location & in_mStartOfCase,
                                                                                                                  const GALGAS_pic_31__38_CaseExpressionList & in_mCaseExpressionList,
                                                                                                                  const GALGAS_pic_31__38_InstructionList & in_mInstructionList
                                                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mStartOfCase, in_mCaseExpressionList, in_mInstructionList) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_pic_31__38_SwitchInstructionCaseList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_pic_31__38_SwitchInstructionCaseList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_pic_31__38_SwitchInstructionCaseList (mObject.mAttribute_mStartOfCase, mObject.mAttribute_mCaseExpressionList, mObject.mAttribute_mInstructionList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_pic_31__38_SwitchInstructionCaseList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mStartOfCase" ":" ;
  mObject.mAttribute_mStartOfCase.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCaseExpressionList" ":" ;
  mObject.mAttribute_mCaseExpressionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstructionList" ":" ;
  mObject.mAttribute_mInstructionList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_pic_31__38_SwitchInstructionCaseList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_pic_31__38_SwitchInstructionCaseList * operand = (cCollectionElement_pic_31__38_SwitchInstructionCaseList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_pic_31__38_SwitchInstructionCaseList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_SwitchInstructionCaseList::GALGAS_pic_31__38_SwitchInstructionCaseList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_SwitchInstructionCaseList::GALGAS_pic_31__38_SwitchInstructionCaseList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_SwitchInstructionCaseList GALGAS_pic_31__38_SwitchInstructionCaseList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_pic_31__38_SwitchInstructionCaseList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_SwitchInstructionCaseList GALGAS_pic_31__38_SwitchInstructionCaseList::constructor_listWithValue (const GALGAS_location & inOperand0,
                                                                                                                    const GALGAS_pic_31__38_CaseExpressionList & inOperand1,
                                                                                                                    const GALGAS_pic_31__38_InstructionList & inOperand2
                                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_pic_31__38_SwitchInstructionCaseList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_pic_31__38_SwitchInstructionCaseList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_SwitchInstructionCaseList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                             const GALGAS_location & in_mStartOfCase,
                                                                             const GALGAS_pic_31__38_CaseExpressionList & in_mCaseExpressionList,
                                                                             const GALGAS_pic_31__38_InstructionList & in_mInstructionList
                                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_pic_31__38_SwitchInstructionCaseList * p = NULL ;
  macroMyNew (p, cCollectionElement_pic_31__38_SwitchInstructionCaseList (in_mStartOfCase,
                                                                          in_mCaseExpressionList,
                                                                          in_mInstructionList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_SwitchInstructionCaseList::addAssign_operation (const GALGAS_location & inOperand0,
                                                                       const GALGAS_pic_31__38_CaseExpressionList & inOperand1,
                                                                       const GALGAS_pic_31__38_InstructionList & inOperand2
                                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_pic_31__38_SwitchInstructionCaseList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_SwitchInstructionCaseList::modifier_insertAtIndex (const GALGAS_location inOperand0,
                                                                          const GALGAS_pic_31__38_CaseExpressionList inOperand1,
                                                                          const GALGAS_pic_31__38_InstructionList inOperand2,
                                                                          const GALGAS_uint inInsertionIndex,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_pic_31__38_SwitchInstructionCaseList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_SwitchInstructionCaseList::modifier_removeAtIndex (GALGAS_location & outOperand0,
                                                                          GALGAS_pic_31__38_CaseExpressionList & outOperand1,
                                                                          GALGAS_pic_31__38_InstructionList & outOperand2,
                                                                          const GALGAS_uint inRemoveIndex,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_pic_31__38_SwitchInstructionCaseList * p = (cCollectionElement_pic_31__38_SwitchInstructionCaseList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_pic_31__38_SwitchInstructionCaseList) ;
      outOperand0 = p->mObject.mAttribute_mStartOfCase ;
      outOperand1 = p->mObject.mAttribute_mCaseExpressionList ;
      outOperand2 = p->mObject.mAttribute_mInstructionList ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_SwitchInstructionCaseList::modifier_popFirst (GALGAS_location & outOperand0,
                                                                     GALGAS_pic_31__38_CaseExpressionList & outOperand1,
                                                                     GALGAS_pic_31__38_InstructionList & outOperand2,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_SwitchInstructionCaseList * p = (cCollectionElement_pic_31__38_SwitchInstructionCaseList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_SwitchInstructionCaseList) ;
    outOperand0 = p->mObject.mAttribute_mStartOfCase ;
    outOperand1 = p->mObject.mAttribute_mCaseExpressionList ;
    outOperand2 = p->mObject.mAttribute_mInstructionList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_SwitchInstructionCaseList::modifier_popLast (GALGAS_location & outOperand0,
                                                                    GALGAS_pic_31__38_CaseExpressionList & outOperand1,
                                                                    GALGAS_pic_31__38_InstructionList & outOperand2,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_SwitchInstructionCaseList * p = (cCollectionElement_pic_31__38_SwitchInstructionCaseList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_SwitchInstructionCaseList) ;
    outOperand0 = p->mObject.mAttribute_mStartOfCase ;
    outOperand1 = p->mObject.mAttribute_mCaseExpressionList ;
    outOperand2 = p->mObject.mAttribute_mInstructionList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_SwitchInstructionCaseList::method_first (GALGAS_location & outOperand0,
                                                                GALGAS_pic_31__38_CaseExpressionList & outOperand1,
                                                                GALGAS_pic_31__38_InstructionList & outOperand2,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_SwitchInstructionCaseList * p = (cCollectionElement_pic_31__38_SwitchInstructionCaseList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_SwitchInstructionCaseList) ;
    outOperand0 = p->mObject.mAttribute_mStartOfCase ;
    outOperand1 = p->mObject.mAttribute_mCaseExpressionList ;
    outOperand2 = p->mObject.mAttribute_mInstructionList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_SwitchInstructionCaseList::method_last (GALGAS_location & outOperand0,
                                                               GALGAS_pic_31__38_CaseExpressionList & outOperand1,
                                                               GALGAS_pic_31__38_InstructionList & outOperand2,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_SwitchInstructionCaseList * p = (cCollectionElement_pic_31__38_SwitchInstructionCaseList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_SwitchInstructionCaseList) ;
    outOperand0 = p->mObject.mAttribute_mStartOfCase ;
    outOperand1 = p->mObject.mAttribute_mCaseExpressionList ;
    outOperand2 = p->mObject.mAttribute_mInstructionList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_SwitchInstructionCaseList GALGAS_pic_31__38_SwitchInstructionCaseList::operator_concat (const GALGAS_pic_31__38_SwitchInstructionCaseList & inOperand
                                                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_pic_31__38_SwitchInstructionCaseList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_SwitchInstructionCaseList GALGAS_pic_31__38_SwitchInstructionCaseList::add_operation (const GALGAS_pic_31__38_SwitchInstructionCaseList & inOperand,
                                                                                                        C_Compiler * /* inCompiler */
                                                                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_pic_31__38_SwitchInstructionCaseList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_SwitchInstructionCaseList GALGAS_pic_31__38_SwitchInstructionCaseList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                                  C_Compiler * inCompiler
                                                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_pic_31__38_SwitchInstructionCaseList result = GALGAS_pic_31__38_SwitchInstructionCaseList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_SwitchInstructionCaseList GALGAS_pic_31__38_SwitchInstructionCaseList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                                  C_Compiler * inCompiler
                                                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_pic_31__38_SwitchInstructionCaseList result = GALGAS_pic_31__38_SwitchInstructionCaseList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_SwitchInstructionCaseList::dotAssign_operation (const GALGAS_pic_31__38_SwitchInstructionCaseList inOperand
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_pic_31__38_SwitchInstructionCaseList::reader_mStartOfCaseAtIndex (const GALGAS_uint & inIndex,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_SwitchInstructionCaseList * p = (cCollectionElement_pic_31__38_SwitchInstructionCaseList *) attributes.ptr () ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_SwitchInstructionCaseList) ;
    result = p->mObject.mAttribute_mStartOfCase ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_CaseExpressionList GALGAS_pic_31__38_SwitchInstructionCaseList::reader_mCaseExpressionListAtIndex (const GALGAS_uint & inIndex,
                                                                                                                     C_Compiler * inCompiler
                                                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_SwitchInstructionCaseList * p = (cCollectionElement_pic_31__38_SwitchInstructionCaseList *) attributes.ptr () ;
  GALGAS_pic_31__38_CaseExpressionList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_SwitchInstructionCaseList) ;
    result = p->mObject.mAttribute_mCaseExpressionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList GALGAS_pic_31__38_SwitchInstructionCaseList::reader_mInstructionListAtIndex (const GALGAS_uint & inIndex,
                                                                                                               C_Compiler * inCompiler
                                                                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_SwitchInstructionCaseList * p = (cCollectionElement_pic_31__38_SwitchInstructionCaseList *) attributes.ptr () ;
  GALGAS_pic_31__38_InstructionList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_SwitchInstructionCaseList) ;
    result = p->mObject.mAttribute_mInstructionList ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_pic_31__38_SwitchInstructionCaseList::cEnumerator_pic_31__38_SwitchInstructionCaseList (const GALGAS_pic_31__38_SwitchInstructionCaseList & inEnumeratedObject,
                                                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_SwitchInstructionCaseList_2D_element cEnumerator_pic_31__38_SwitchInstructionCaseList::current (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_SwitchInstructionCaseList * p = (const cCollectionElement_pic_31__38_SwitchInstructionCaseList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_SwitchInstructionCaseList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location cEnumerator_pic_31__38_SwitchInstructionCaseList::current_mStartOfCase (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_SwitchInstructionCaseList * p = (const cCollectionElement_pic_31__38_SwitchInstructionCaseList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_SwitchInstructionCaseList) ;
  return p->mObject.mAttribute_mStartOfCase ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_CaseExpressionList cEnumerator_pic_31__38_SwitchInstructionCaseList::current_mCaseExpressionList (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_SwitchInstructionCaseList * p = (const cCollectionElement_pic_31__38_SwitchInstructionCaseList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_SwitchInstructionCaseList) ;
  return p->mObject.mAttribute_mCaseExpressionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList cEnumerator_pic_31__38_SwitchInstructionCaseList::current_mInstructionList (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_SwitchInstructionCaseList * p = (const cCollectionElement_pic_31__38_SwitchInstructionCaseList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_SwitchInstructionCaseList) ;
  return p->mObject.mAttribute_mInstructionList ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        @pic18SwitchInstructionCaseList type                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_pic_31__38_SwitchInstructionCaseList ("pic18SwitchInstructionCaseList",
                                                             NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_pic_31__38_SwitchInstructionCaseList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_pic_31__38_SwitchInstructionCaseList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_pic_31__38_SwitchInstructionCaseList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_pic_31__38_SwitchInstructionCaseList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_SwitchInstructionCaseList GALGAS_pic_31__38_SwitchInstructionCaseList::extractObject (const GALGAS_object & inObject,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_pic_31__38_SwitchInstructionCaseList result ;
  const GALGAS_pic_31__38_SwitchInstructionCaseList * p = (const GALGAS_pic_31__38_SwitchInstructionCaseList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_pic_31__38_SwitchInstructionCaseList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("pic18SwitchInstructionCaseList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_ADDWF (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST result ;
  result.mEnum = kEnum_ADDWF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_ADDWFC (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST result ;
  result.mEnum = kEnum_ADDWFC ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_ANDWF (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST result ;
  result.mEnum = kEnum_ANDWF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_COMF (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST result ;
  result.mEnum = kEnum_COMF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_DECF (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST result ;
  result.mEnum = kEnum_DECF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_INCF (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST result ;
  result.mEnum = kEnum_INCF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_IORWF (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST result ;
  result.mEnum = kEnum_IORWF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_MOVF (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST result ;
  result.mEnum = kEnum_MOVF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_RLCF (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST result ;
  result.mEnum = kEnum_RLCF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_RLNCF (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST result ;
  result.mEnum = kEnum_RLNCF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_RRCF (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST result ;
  result.mEnum = kEnum_RRCF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_RRNCF (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST result ;
  result.mEnum = kEnum_RRNCF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_SUBFWB (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST result ;
  result.mEnum = kEnum_SUBFWB ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_SUBWF (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST result ;
  result.mEnum = kEnum_SUBWF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_SUBWFB (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST result ;
  result.mEnum = kEnum_SUBWFB ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_SWAPF (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST result ;
  result.mEnum = kEnum_SWAPF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_XORWF (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST result ;
  result.mEnum = kEnum_XORWF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST [18] = {
  "(not built)",
  "ADDWF",
  "ADDWFC",
  "ANDWF",
  "COMF",
  "DECF",
  "INCF",
  "IORWF",
  "MOVF",
  "RLCF",
  "RLNCF",
  "RRCF",
  "RRNCF",
  "SUBFWB",
  "SUBWF",
  "SUBWFB",
  "SWAPF",
  "XORWF"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::reader_isADDWF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_ADDWF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::reader_isADDWFC (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_ADDWFC == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::reader_isANDWF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_ANDWF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::reader_isCOMF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_COMF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::reader_isDECF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_DECF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::reader_isINCF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_INCF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::reader_isIORWF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_IORWF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::reader_isMOVF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_MOVF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::reader_isRLCF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_RLCF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::reader_isRLNCF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_RLNCF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::reader_isRRCF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_RRCF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::reader_isRRNCF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_RRNCF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::reader_isSUBFWB (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_SUBFWB == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::reader_isSUBWF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_SUBWF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::reader_isSUBWFB (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_SUBWFB == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::reader_isSWAPF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_SWAPF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::reader_isXORWF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_XORWF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::description (C_String & ioString,
                                                                               const int32_t /* inIndentation */) const {
  ioString << "<enum @pic18Instruction_FDA_base_code_AST: " << gEnumNameArrayFor_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::objectCompare (const GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      @pic18Instruction_FDA_base_code_AST type                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST ("pic18Instruction_FDA_base_code_AST",
                                                                             NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::extractObject (const GALGAS_object & inObject,
                                                                                                                                        C_Compiler * inCompiler
                                                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST result ;
  const GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST * p = (const GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("pic18Instruction_FDA_base_code_AST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_FA_5F_instruction_5F_base_5F_code::GALGAS_FA_5F_instruction_5F_base_5F_code (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_FA_5F_instruction_5F_base_5F_code GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_CLRF (UNUSED_LOCATION_ARGS) {
  GALGAS_FA_5F_instruction_5F_base_5F_code result ;
  result.mEnum = kEnum_CLRF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_FA_5F_instruction_5F_base_5F_code GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_CPFSEQ (UNUSED_LOCATION_ARGS) {
  GALGAS_FA_5F_instruction_5F_base_5F_code result ;
  result.mEnum = kEnum_CPFSEQ ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_FA_5F_instruction_5F_base_5F_code GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_CPFSGT (UNUSED_LOCATION_ARGS) {
  GALGAS_FA_5F_instruction_5F_base_5F_code result ;
  result.mEnum = kEnum_CPFSGT ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_FA_5F_instruction_5F_base_5F_code GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_CPFSLT (UNUSED_LOCATION_ARGS) {
  GALGAS_FA_5F_instruction_5F_base_5F_code result ;
  result.mEnum = kEnum_CPFSLT ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_FA_5F_instruction_5F_base_5F_code GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_MOVWF (UNUSED_LOCATION_ARGS) {
  GALGAS_FA_5F_instruction_5F_base_5F_code result ;
  result.mEnum = kEnum_MOVWF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_FA_5F_instruction_5F_base_5F_code GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_MULWF (UNUSED_LOCATION_ARGS) {
  GALGAS_FA_5F_instruction_5F_base_5F_code result ;
  result.mEnum = kEnum_MULWF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_FA_5F_instruction_5F_base_5F_code GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_NEGF (UNUSED_LOCATION_ARGS) {
  GALGAS_FA_5F_instruction_5F_base_5F_code result ;
  result.mEnum = kEnum_NEGF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_FA_5F_instruction_5F_base_5F_code GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_SETF (UNUSED_LOCATION_ARGS) {
  GALGAS_FA_5F_instruction_5F_base_5F_code result ;
  result.mEnum = kEnum_SETF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_FA_5F_instruction_5F_base_5F_code GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_TSTFSZ (UNUSED_LOCATION_ARGS) {
  GALGAS_FA_5F_instruction_5F_base_5F_code result ;
  result.mEnum = kEnum_TSTFSZ ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_FA_5F_instruction_5F_base_5F_code [10] = {
  "(not built)",
  "CLRF",
  "CPFSEQ",
  "CPFSGT",
  "CPFSLT",
  "MOVWF",
  "MULWF",
  "NEGF",
  "SETF",
  "TSTFSZ"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_FA_5F_instruction_5F_base_5F_code::reader_isCLRF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_CLRF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_FA_5F_instruction_5F_base_5F_code::reader_isCPFSEQ (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_CPFSEQ == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_FA_5F_instruction_5F_base_5F_code::reader_isCPFSGT (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_CPFSGT == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_FA_5F_instruction_5F_base_5F_code::reader_isCPFSLT (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_CPFSLT == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_FA_5F_instruction_5F_base_5F_code::reader_isMOVWF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_MOVWF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_FA_5F_instruction_5F_base_5F_code::reader_isMULWF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_MULWF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_FA_5F_instruction_5F_base_5F_code::reader_isNEGF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_NEGF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_FA_5F_instruction_5F_base_5F_code::reader_isSETF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_SETF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_FA_5F_instruction_5F_base_5F_code::reader_isTSTFSZ (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_TSTFSZ == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_FA_5F_instruction_5F_base_5F_code::description (C_String & ioString,
                                                            const int32_t /* inIndentation */) const {
  ioString << "<enum @FA_instruction_base_code: " << gEnumNameArrayFor_FA_5F_instruction_5F_base_5F_code [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_FA_5F_instruction_5F_base_5F_code::objectCompare (const GALGAS_FA_5F_instruction_5F_base_5F_code & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @FA_instruction_base_code type                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_FA_5F_instruction_5F_base_5F_code ("FA_instruction_base_code",
                                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_FA_5F_instruction_5F_base_5F_code::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_FA_5F_instruction_5F_base_5F_code ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_FA_5F_instruction_5F_base_5F_code::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_FA_5F_instruction_5F_base_5F_code (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_FA_5F_instruction_5F_base_5F_code GALGAS_FA_5F_instruction_5F_base_5F_code::extractObject (const GALGAS_object & inObject,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_FA_5F_instruction_5F_base_5F_code result ;
  const GALGAS_FA_5F_instruction_5F_base_5F_code * p = (const GALGAS_FA_5F_instruction_5F_base_5F_code *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_FA_5F_instruction_5F_base_5F_code *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("FA_instruction_base_code", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bit_5F_oriented_5F_op::GALGAS_bit_5F_oriented_5F_op (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bit_5F_oriented_5F_op GALGAS_bit_5F_oriented_5F_op::constructor_BCF (UNUSED_LOCATION_ARGS) {
  GALGAS_bit_5F_oriented_5F_op result ;
  result.mEnum = kEnum_BCF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bit_5F_oriented_5F_op GALGAS_bit_5F_oriented_5F_op::constructor_BSF (UNUSED_LOCATION_ARGS) {
  GALGAS_bit_5F_oriented_5F_op result ;
  result.mEnum = kEnum_BSF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bit_5F_oriented_5F_op GALGAS_bit_5F_oriented_5F_op::constructor_BTG (UNUSED_LOCATION_ARGS) {
  GALGAS_bit_5F_oriented_5F_op result ;
  result.mEnum = kEnum_BTG ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_bit_5F_oriented_5F_op [4] = {
  "(not built)",
  "BCF",
  "BSF",
  "BTG"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_bit_5F_oriented_5F_op::reader_isBCF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_BCF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_bit_5F_oriented_5F_op::reader_isBSF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_BSF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_bit_5F_oriented_5F_op::reader_isBTG (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_BTG == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_bit_5F_oriented_5F_op::description (C_String & ioString,
                                                const int32_t /* inIndentation */) const {
  ioString << "<enum @bit_oriented_op: " << gEnumNameArrayFor_bit_5F_oriented_5F_op [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_bit_5F_oriented_5F_op::objectCompare (const GALGAS_bit_5F_oriented_5F_op & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @bit_oriented_op type                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_bit_5F_oriented_5F_op ("bit_oriented_op",
                                              NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_bit_5F_oriented_5F_op::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_bit_5F_oriented_5F_op ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_bit_5F_oriented_5F_op::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_bit_5F_oriented_5F_op (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bit_5F_oriented_5F_op GALGAS_bit_5F_oriented_5F_op::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_bit_5F_oriented_5F_op result ;
  const GALGAS_bit_5F_oriented_5F_op * p = (const GALGAS_bit_5F_oriented_5F_op *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_bit_5F_oriented_5F_op *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("bit_oriented_op", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_conditional_5F_branch::GALGAS_conditional_5F_branch (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_conditional_5F_branch GALGAS_conditional_5F_branch::constructor_bz (UNUSED_LOCATION_ARGS) {
  GALGAS_conditional_5F_branch result ;
  result.mEnum = kEnum_bz ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_conditional_5F_branch GALGAS_conditional_5F_branch::constructor_bnz (UNUSED_LOCATION_ARGS) {
  GALGAS_conditional_5F_branch result ;
  result.mEnum = kEnum_bnz ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_conditional_5F_branch GALGAS_conditional_5F_branch::constructor_bn (UNUSED_LOCATION_ARGS) {
  GALGAS_conditional_5F_branch result ;
  result.mEnum = kEnum_bn ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_conditional_5F_branch GALGAS_conditional_5F_branch::constructor_bnn (UNUSED_LOCATION_ARGS) {
  GALGAS_conditional_5F_branch result ;
  result.mEnum = kEnum_bnn ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_conditional_5F_branch GALGAS_conditional_5F_branch::constructor_bc (UNUSED_LOCATION_ARGS) {
  GALGAS_conditional_5F_branch result ;
  result.mEnum = kEnum_bc ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_conditional_5F_branch GALGAS_conditional_5F_branch::constructor_bnc (UNUSED_LOCATION_ARGS) {
  GALGAS_conditional_5F_branch result ;
  result.mEnum = kEnum_bnc ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_conditional_5F_branch GALGAS_conditional_5F_branch::constructor_bov (UNUSED_LOCATION_ARGS) {
  GALGAS_conditional_5F_branch result ;
  result.mEnum = kEnum_bov ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_conditional_5F_branch GALGAS_conditional_5F_branch::constructor_bnov (UNUSED_LOCATION_ARGS) {
  GALGAS_conditional_5F_branch result ;
  result.mEnum = kEnum_bnov ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_conditional_5F_branch [9] = {
  "(not built)",
  "bz",
  "bnz",
  "bn",
  "bnn",
  "bc",
  "bnc",
  "bov",
  "bnov"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_conditional_5F_branch::reader_isBz (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_bz == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_conditional_5F_branch::reader_isBnz (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_bnz == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_conditional_5F_branch::reader_isBn (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_bn == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_conditional_5F_branch::reader_isBnn (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_bnn == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_conditional_5F_branch::reader_isBc (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_bc == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_conditional_5F_branch::reader_isBnc (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_bnc == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_conditional_5F_branch::reader_isBov (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_bov == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_conditional_5F_branch::reader_isBnov (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_bnov == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_conditional_5F_branch::description (C_String & ioString,
                                                const int32_t /* inIndentation */) const {
  ioString << "<enum @conditional_branch: " << gEnumNameArrayFor_conditional_5F_branch [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_conditional_5F_branch::objectCompare (const GALGAS_conditional_5F_branch & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              @conditional_branch type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_conditional_5F_branch ("conditional_branch",
                                              NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_conditional_5F_branch::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_conditional_5F_branch ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_conditional_5F_branch::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_conditional_5F_branch (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_conditional_5F_branch GALGAS_conditional_5F_branch::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_conditional_5F_branch result ;
  const GALGAS_conditional_5F_branch * p = (const GALGAS_conditional_5F_branch *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_conditional_5F_branch *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("conditional_branch", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_jumpInstructionKind::GALGAS_jumpInstructionKind (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_jumpInstructionKind GALGAS_jumpInstructionKind::constructor_ipicRelative (UNUSED_LOCATION_ARGS) {
  GALGAS_jumpInstructionKind result ;
  result.mEnum = kEnum_ipicRelative ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_jumpInstructionKind GALGAS_jumpInstructionKind::constructor_relative (UNUSED_LOCATION_ARGS) {
  GALGAS_jumpInstructionKind result ;
  result.mEnum = kEnum_relative ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_jumpInstructionKind GALGAS_jumpInstructionKind::constructor_absolute (UNUSED_LOCATION_ARGS) {
  GALGAS_jumpInstructionKind result ;
  result.mEnum = kEnum_absolute ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_jumpInstructionKind [4] = {
  "(not built)",
  "ipicRelative",
  "relative",
  "absolute"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_jumpInstructionKind::reader_isIpicRelative (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_ipicRelative == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_jumpInstructionKind::reader_isRelative (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_relative == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_jumpInstructionKind::reader_isAbsolute (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_absolute == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_jumpInstructionKind::description (C_String & ioString,
                                              const int32_t /* inIndentation */) const {
  ioString << "<enum @jumpInstructionKind: " << gEnumNameArrayFor_jumpInstructionKind [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_jumpInstructionKind::objectCompare (const GALGAS_jumpInstructionKind & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              @jumpInstructionKind type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_jumpInstructionKind ("jumpInstructionKind",
                                            NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_jumpInstructionKind::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_jumpInstructionKind ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_jumpInstructionKind::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_jumpInstructionKind (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_jumpInstructionKind GALGAS_jumpInstructionKind::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_jumpInstructionKind result ;
  const GALGAS_jumpInstructionKind * p = (const GALGAS_jumpInstructionKind *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_jumpInstructionKind *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("jumpInstructionKind", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionWithNoOperandKind::GALGAS_pic_31__38_InstructionWithNoOperandKind (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionWithNoOperandKind GALGAS_pic_31__38_InstructionWithNoOperandKind::constructor_CLRWDT (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_InstructionWithNoOperandKind result ;
  result.mEnum = kEnum_CLRWDT ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionWithNoOperandKind GALGAS_pic_31__38_InstructionWithNoOperandKind::constructor_DAW (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_InstructionWithNoOperandKind result ;
  result.mEnum = kEnum_DAW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionWithNoOperandKind GALGAS_pic_31__38_InstructionWithNoOperandKind::constructor_NOP (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_InstructionWithNoOperandKind result ;
  result.mEnum = kEnum_NOP ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionWithNoOperandKind GALGAS_pic_31__38_InstructionWithNoOperandKind::constructor_POP (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_InstructionWithNoOperandKind result ;
  result.mEnum = kEnum_POP ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionWithNoOperandKind GALGAS_pic_31__38_InstructionWithNoOperandKind::constructor_PUSH (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_InstructionWithNoOperandKind result ;
  result.mEnum = kEnum_PUSH ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionWithNoOperandKind GALGAS_pic_31__38_InstructionWithNoOperandKind::constructor_RESET (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_InstructionWithNoOperandKind result ;
  result.mEnum = kEnum_RESET ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionWithNoOperandKind GALGAS_pic_31__38_InstructionWithNoOperandKind::constructor_SLEEP (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_InstructionWithNoOperandKind result ;
  result.mEnum = kEnum_SLEEP ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_pic_31__38_InstructionWithNoOperandKind [8] = {
  "(not built)",
  "CLRWDT",
  "DAW",
  "NOP",
  "POP",
  "PUSH",
  "RESET",
  "SLEEP"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_InstructionWithNoOperandKind::reader_isCLRWDT (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_CLRWDT == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_InstructionWithNoOperandKind::reader_isDAW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_DAW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_InstructionWithNoOperandKind::reader_isNOP (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_NOP == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_InstructionWithNoOperandKind::reader_isPOP (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_POP == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_InstructionWithNoOperandKind::reader_isPUSH (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_PUSH == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_InstructionWithNoOperandKind::reader_isRESET (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_RESET == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_InstructionWithNoOperandKind::reader_isSLEEP (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_SLEEP == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_InstructionWithNoOperandKind::description (C_String & ioString,
                                                                  const int32_t /* inIndentation */) const {
  ioString << "<enum @pic18InstructionWithNoOperandKind: " << gEnumNameArrayFor_pic_31__38_InstructionWithNoOperandKind [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_pic_31__38_InstructionWithNoOperandKind::objectCompare (const GALGAS_pic_31__38_InstructionWithNoOperandKind & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       @pic18InstructionWithNoOperandKind type                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_pic_31__38_InstructionWithNoOperandKind ("pic18InstructionWithNoOperandKind",
                                                                NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_pic_31__38_InstructionWithNoOperandKind::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_pic_31__38_InstructionWithNoOperandKind ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_pic_31__38_InstructionWithNoOperandKind::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_pic_31__38_InstructionWithNoOperandKind (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionWithNoOperandKind GALGAS_pic_31__38_InstructionWithNoOperandKind::extractObject (const GALGAS_object & inObject,
                                                                                                              C_Compiler * inCompiler
                                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_pic_31__38_InstructionWithNoOperandKind result ;
  const GALGAS_pic_31__38_InstructionWithNoOperandKind * p = (const GALGAS_pic_31__38_InstructionWithNoOperandKind *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_pic_31__38_InstructionWithNoOperandKind *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("pic18InstructionWithNoOperandKind", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_literal_5F_instruction_5F_opcode::GALGAS_literal_5F_instruction_5F_opcode (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_literal_5F_instruction_5F_opcode GALGAS_literal_5F_instruction_5F_opcode::constructor_ADDLW (UNUSED_LOCATION_ARGS) {
  GALGAS_literal_5F_instruction_5F_opcode result ;
  result.mEnum = kEnum_ADDLW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_literal_5F_instruction_5F_opcode GALGAS_literal_5F_instruction_5F_opcode::constructor_ANDLW (UNUSED_LOCATION_ARGS) {
  GALGAS_literal_5F_instruction_5F_opcode result ;
  result.mEnum = kEnum_ANDLW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_literal_5F_instruction_5F_opcode GALGAS_literal_5F_instruction_5F_opcode::constructor_IORLW (UNUSED_LOCATION_ARGS) {
  GALGAS_literal_5F_instruction_5F_opcode result ;
  result.mEnum = kEnum_IORLW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_literal_5F_instruction_5F_opcode GALGAS_literal_5F_instruction_5F_opcode::constructor_MOVLW (UNUSED_LOCATION_ARGS) {
  GALGAS_literal_5F_instruction_5F_opcode result ;
  result.mEnum = kEnum_MOVLW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_literal_5F_instruction_5F_opcode GALGAS_literal_5F_instruction_5F_opcode::constructor_MULLW (UNUSED_LOCATION_ARGS) {
  GALGAS_literal_5F_instruction_5F_opcode result ;
  result.mEnum = kEnum_MULLW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_literal_5F_instruction_5F_opcode GALGAS_literal_5F_instruction_5F_opcode::constructor_SUBLW (UNUSED_LOCATION_ARGS) {
  GALGAS_literal_5F_instruction_5F_opcode result ;
  result.mEnum = kEnum_SUBLW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_literal_5F_instruction_5F_opcode GALGAS_literal_5F_instruction_5F_opcode::constructor_XORLW (UNUSED_LOCATION_ARGS) {
  GALGAS_literal_5F_instruction_5F_opcode result ;
  result.mEnum = kEnum_XORLW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_literal_5F_instruction_5F_opcode [8] = {
  "(not built)",
  "ADDLW",
  "ANDLW",
  "IORLW",
  "MOVLW",
  "MULLW",
  "SUBLW",
  "XORLW"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_literal_5F_instruction_5F_opcode::reader_isADDLW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_ADDLW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_literal_5F_instruction_5F_opcode::reader_isANDLW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_ANDLW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_literal_5F_instruction_5F_opcode::reader_isIORLW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_IORLW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_literal_5F_instruction_5F_opcode::reader_isMOVLW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_MOVLW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_literal_5F_instruction_5F_opcode::reader_isMULLW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_MULLW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_literal_5F_instruction_5F_opcode::reader_isSUBLW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_SUBLW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_literal_5F_instruction_5F_opcode::reader_isXORLW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_XORLW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_literal_5F_instruction_5F_opcode::description (C_String & ioString,
                                                           const int32_t /* inIndentation */) const {
  ioString << "<enum @literal_instruction_opcode: " << gEnumNameArrayFor_literal_5F_instruction_5F_opcode [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_literal_5F_instruction_5F_opcode::objectCompare (const GALGAS_literal_5F_instruction_5F_opcode & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          @literal_instruction_opcode type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_literal_5F_instruction_5F_opcode ("literal_instruction_opcode",
                                                         NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_literal_5F_instruction_5F_opcode::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_literal_5F_instruction_5F_opcode ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_literal_5F_instruction_5F_opcode::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_literal_5F_instruction_5F_opcode (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_literal_5F_instruction_5F_opcode GALGAS_literal_5F_instruction_5F_opcode::extractObject (const GALGAS_object & inObject,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_literal_5F_instruction_5F_opcode result ;
  const GALGAS_literal_5F_instruction_5F_opcode * p = (const GALGAS_literal_5F_instruction_5F_opcode *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_literal_5F_instruction_5F_opcode *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("literal_instruction_opcode", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_tableAccessOption::GALGAS_tableAccessOption (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_tableAccessOption GALGAS_tableAccessOption::constructor_simpleAccess (UNUSED_LOCATION_ARGS) {
  GALGAS_tableAccessOption result ;
  result.mEnum = kEnum_simpleAccess ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_tableAccessOption GALGAS_tableAccessOption::constructor_postIncrement (UNUSED_LOCATION_ARGS) {
  GALGAS_tableAccessOption result ;
  result.mEnum = kEnum_postIncrement ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_tableAccessOption GALGAS_tableAccessOption::constructor_postDecrement (UNUSED_LOCATION_ARGS) {
  GALGAS_tableAccessOption result ;
  result.mEnum = kEnum_postDecrement ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_tableAccessOption GALGAS_tableAccessOption::constructor_preIncrement (UNUSED_LOCATION_ARGS) {
  GALGAS_tableAccessOption result ;
  result.mEnum = kEnum_preIncrement ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_tableAccessOption [5] = {
  "(not built)",
  "simpleAccess",
  "postIncrement",
  "postDecrement",
  "preIncrement"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_tableAccessOption::reader_isSimpleAccess (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_simpleAccess == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_tableAccessOption::reader_isPostIncrement (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_postIncrement == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_tableAccessOption::reader_isPostDecrement (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_postDecrement == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_tableAccessOption::reader_isPreIncrement (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_preIncrement == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_tableAccessOption::description (C_String & ioString,
                                            const int32_t /* inIndentation */) const {
  ioString << "<enum @tableAccessOption: " << gEnumNameArrayFor_tableAccessOption [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_tableAccessOption::objectCompare (const GALGAS_tableAccessOption & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @tableAccessOption type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_tableAccessOption ("tableAccessOption",
                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_tableAccessOption::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_tableAccessOption ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_tableAccessOption::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_tableAccessOption (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_tableAccessOption GALGAS_tableAccessOption::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_tableAccessOption result ;
  const GALGAS_tableAccessOption * p = (const GALGAS_tableAccessOption *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_tableAccessOption *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("tableAccessOption", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_if_5F_semi_5F_colon_5F_op::GALGAS_if_5F_semi_5F_colon_5F_op (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_if_5F_semi_5F_colon_5F_op GALGAS_if_5F_semi_5F_colon_5F_op::constructor_CPFSEQ (UNUSED_LOCATION_ARGS) {
  GALGAS_if_5F_semi_5F_colon_5F_op result ;
  result.mEnum = kEnum_CPFSEQ ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_if_5F_semi_5F_colon_5F_op GALGAS_if_5F_semi_5F_colon_5F_op::constructor_CPFSGT (UNUSED_LOCATION_ARGS) {
  GALGAS_if_5F_semi_5F_colon_5F_op result ;
  result.mEnum = kEnum_CPFSGT ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_if_5F_semi_5F_colon_5F_op GALGAS_if_5F_semi_5F_colon_5F_op::constructor_CPFSLT (UNUSED_LOCATION_ARGS) {
  GALGAS_if_5F_semi_5F_colon_5F_op result ;
  result.mEnum = kEnum_CPFSLT ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_if_5F_semi_5F_colon_5F_op GALGAS_if_5F_semi_5F_colon_5F_op::constructor_TSTFSZ (UNUSED_LOCATION_ARGS) {
  GALGAS_if_5F_semi_5F_colon_5F_op result ;
  result.mEnum = kEnum_TSTFSZ ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_if_5F_semi_5F_colon_5F_op [5] = {
  "(not built)",
  "CPFSEQ",
  "CPFSGT",
  "CPFSLT",
  "TSTFSZ"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_if_5F_semi_5F_colon_5F_op::reader_isCPFSEQ (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_CPFSEQ == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_if_5F_semi_5F_colon_5F_op::reader_isCPFSGT (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_CPFSGT == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_if_5F_semi_5F_colon_5F_op::reader_isCPFSLT (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_CPFSLT == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_if_5F_semi_5F_colon_5F_op::reader_isTSTFSZ (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_TSTFSZ == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_if_5F_semi_5F_colon_5F_op::description (C_String & ioString,
                                                    const int32_t /* inIndentation */) const {
  ioString << "<enum @if_semi_colon_op: " << gEnumNameArrayFor_if_5F_semi_5F_colon_5F_op [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_if_5F_semi_5F_colon_5F_op::objectCompare (const GALGAS_if_5F_semi_5F_colon_5F_op & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @if_semi_colon_op type                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_if_5F_semi_5F_colon_5F_op ("if_semi_colon_op",
                                                  NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_if_5F_semi_5F_colon_5F_op::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_if_5F_semi_5F_colon_5F_op ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_if_5F_semi_5F_colon_5F_op::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_if_5F_semi_5F_colon_5F_op (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_if_5F_semi_5F_colon_5F_op GALGAS_if_5F_semi_5F_colon_5F_op::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_if_5F_semi_5F_colon_5F_op result ;
  const GALGAS_if_5F_semi_5F_colon_5F_op * p = (const GALGAS_if_5F_semi_5F_colon_5F_op *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_if_5F_semi_5F_colon_5F_op *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("if_semi_colon_op", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_RegisterComparison::GALGAS_pic_31__38_RegisterComparison (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_RegisterComparison GALGAS_pic_31__38_RegisterComparison::constructor_notEqual (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_RegisterComparison result ;
  result.mEnum = kEnum_notEqual ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_RegisterComparison GALGAS_pic_31__38_RegisterComparison::constructor_equal (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_RegisterComparison result ;
  result.mEnum = kEnum_equal ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_RegisterComparison GALGAS_pic_31__38_RegisterComparison::constructor_greaterOrEqual (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_RegisterComparison result ;
  result.mEnum = kEnum_greaterOrEqual ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_RegisterComparison GALGAS_pic_31__38_RegisterComparison::constructor_greater (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_RegisterComparison result ;
  result.mEnum = kEnum_greater ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_RegisterComparison GALGAS_pic_31__38_RegisterComparison::constructor_lowerOrEqual (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_RegisterComparison result ;
  result.mEnum = kEnum_lowerOrEqual ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_RegisterComparison GALGAS_pic_31__38_RegisterComparison::constructor_lower (UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38_RegisterComparison result ;
  result.mEnum = kEnum_lower ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_pic_31__38_RegisterComparison [7] = {
  "(not built)",
  "notEqual",
  "equal",
  "greaterOrEqual",
  "greater",
  "lowerOrEqual",
  "lower"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_RegisterComparison::reader_isNotEqual (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_notEqual == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_RegisterComparison::reader_isEqual (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_equal == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_RegisterComparison::reader_isGreaterOrEqual (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_greaterOrEqual == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_RegisterComparison::reader_isGreater (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_greater == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_RegisterComparison::reader_isLowerOrEqual (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_lowerOrEqual == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_RegisterComparison::reader_isLower (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_lower == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_RegisterComparison::description (C_String & ioString,
                                                        const int32_t /* inIndentation */) const {
  ioString << "<enum @pic18RegisterComparison: " << gEnumNameArrayFor_pic_31__38_RegisterComparison [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_pic_31__38_RegisterComparison::objectCompare (const GALGAS_pic_31__38_RegisterComparison & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            @pic18RegisterComparison type                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_pic_31__38_RegisterComparison ("pic18RegisterComparison",
                                                      NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_pic_31__38_RegisterComparison::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_pic_31__38_RegisterComparison ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_pic_31__38_RegisterComparison::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_pic_31__38_RegisterComparison (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_RegisterComparison GALGAS_pic_31__38_RegisterComparison::extractObject (const GALGAS_object & inObject,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_pic_31__38_RegisterComparison result ;
  const GALGAS_pic_31__38_RegisterComparison * p = (const GALGAS_pic_31__38_RegisterComparison *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_pic_31__38_RegisterComparison *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("pic18RegisterComparison", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                               Class for element of '@pic_31__38_DoWhilePartList' list                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_pic_31__38_DoWhilePartList : public cCollectionElement {
  public : GALGAS_pic_31__38_DoWhilePartList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_pic_31__38_DoWhilePartList (const GALGAS_pic_31__38_ConditionExpression & in_mCondition,
                                                          const GALGAS_pic_31__38_InstructionList & in_mInstructionList,
                                                          const GALGAS_location & in_mEndOfPartLocation
                                                          COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_pic_31__38_DoWhilePartList::cCollectionElement_pic_31__38_DoWhilePartList (const GALGAS_pic_31__38_ConditionExpression & in_mCondition,
                                                                                              const GALGAS_pic_31__38_InstructionList & in_mInstructionList,
                                                                                              const GALGAS_location & in_mEndOfPartLocation
                                                                                              COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mCondition, in_mInstructionList, in_mEndOfPartLocation) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_pic_31__38_DoWhilePartList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_pic_31__38_DoWhilePartList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_pic_31__38_DoWhilePartList (mObject.mAttribute_mCondition, mObject.mAttribute_mInstructionList, mObject.mAttribute_mEndOfPartLocation COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_pic_31__38_DoWhilePartList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCondition" ":" ;
  mObject.mAttribute_mCondition.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstructionList" ":" ;
  mObject.mAttribute_mInstructionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEndOfPartLocation" ":" ;
  mObject.mAttribute_mEndOfPartLocation.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_pic_31__38_DoWhilePartList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_pic_31__38_DoWhilePartList * operand = (cCollectionElement_pic_31__38_DoWhilePartList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_pic_31__38_DoWhilePartList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_DoWhilePartList::GALGAS_pic_31__38_DoWhilePartList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_DoWhilePartList::GALGAS_pic_31__38_DoWhilePartList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_DoWhilePartList GALGAS_pic_31__38_DoWhilePartList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_pic_31__38_DoWhilePartList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_DoWhilePartList GALGAS_pic_31__38_DoWhilePartList::constructor_listWithValue (const GALGAS_pic_31__38_ConditionExpression & inOperand0,
                                                                                                const GALGAS_pic_31__38_InstructionList & inOperand1,
                                                                                                const GALGAS_location & inOperand2
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_pic_31__38_DoWhilePartList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_pic_31__38_DoWhilePartList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_DoWhilePartList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                   const GALGAS_pic_31__38_ConditionExpression & in_mCondition,
                                                                   const GALGAS_pic_31__38_InstructionList & in_mInstructionList,
                                                                   const GALGAS_location & in_mEndOfPartLocation
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement_pic_31__38_DoWhilePartList * p = NULL ;
  macroMyNew (p, cCollectionElement_pic_31__38_DoWhilePartList (in_mCondition,
                                                                in_mInstructionList,
                                                                in_mEndOfPartLocation COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_DoWhilePartList::addAssign_operation (const GALGAS_pic_31__38_ConditionExpression & inOperand0,
                                                             const GALGAS_pic_31__38_InstructionList & inOperand1,
                                                             const GALGAS_location & inOperand2
                                                             COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_pic_31__38_DoWhilePartList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_DoWhilePartList::modifier_insertAtIndex (const GALGAS_pic_31__38_ConditionExpression inOperand0,
                                                                const GALGAS_pic_31__38_InstructionList inOperand1,
                                                                const GALGAS_location inOperand2,
                                                                const GALGAS_uint inInsertionIndex,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_pic_31__38_DoWhilePartList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_DoWhilePartList::modifier_removeAtIndex (GALGAS_pic_31__38_ConditionExpression & outOperand0,
                                                                GALGAS_pic_31__38_InstructionList & outOperand1,
                                                                GALGAS_location & outOperand2,
                                                                const GALGAS_uint inRemoveIndex,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_pic_31__38_DoWhilePartList * p = (cCollectionElement_pic_31__38_DoWhilePartList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_pic_31__38_DoWhilePartList) ;
      outOperand0 = p->mObject.mAttribute_mCondition ;
      outOperand1 = p->mObject.mAttribute_mInstructionList ;
      outOperand2 = p->mObject.mAttribute_mEndOfPartLocation ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_DoWhilePartList::modifier_popFirst (GALGAS_pic_31__38_ConditionExpression & outOperand0,
                                                           GALGAS_pic_31__38_InstructionList & outOperand1,
                                                           GALGAS_location & outOperand2,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_DoWhilePartList * p = (cCollectionElement_pic_31__38_DoWhilePartList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_DoWhilePartList) ;
    outOperand0 = p->mObject.mAttribute_mCondition ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mEndOfPartLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_DoWhilePartList::modifier_popLast (GALGAS_pic_31__38_ConditionExpression & outOperand0,
                                                          GALGAS_pic_31__38_InstructionList & outOperand1,
                                                          GALGAS_location & outOperand2,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_DoWhilePartList * p = (cCollectionElement_pic_31__38_DoWhilePartList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_DoWhilePartList) ;
    outOperand0 = p->mObject.mAttribute_mCondition ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mEndOfPartLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_DoWhilePartList::method_first (GALGAS_pic_31__38_ConditionExpression & outOperand0,
                                                      GALGAS_pic_31__38_InstructionList & outOperand1,
                                                      GALGAS_location & outOperand2,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_DoWhilePartList * p = (cCollectionElement_pic_31__38_DoWhilePartList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_DoWhilePartList) ;
    outOperand0 = p->mObject.mAttribute_mCondition ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mEndOfPartLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_DoWhilePartList::method_last (GALGAS_pic_31__38_ConditionExpression & outOperand0,
                                                     GALGAS_pic_31__38_InstructionList & outOperand1,
                                                     GALGAS_location & outOperand2,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_DoWhilePartList * p = (cCollectionElement_pic_31__38_DoWhilePartList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_DoWhilePartList) ;
    outOperand0 = p->mObject.mAttribute_mCondition ;
    outOperand1 = p->mObject.mAttribute_mInstructionList ;
    outOperand2 = p->mObject.mAttribute_mEndOfPartLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_DoWhilePartList GALGAS_pic_31__38_DoWhilePartList::operator_concat (const GALGAS_pic_31__38_DoWhilePartList & inOperand
                                                                                      COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_pic_31__38_DoWhilePartList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_DoWhilePartList GALGAS_pic_31__38_DoWhilePartList::add_operation (const GALGAS_pic_31__38_DoWhilePartList & inOperand,
                                                                                    C_Compiler * /* inCompiler */
                                                                                    COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_pic_31__38_DoWhilePartList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_DoWhilePartList GALGAS_pic_31__38_DoWhilePartList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_pic_31__38_DoWhilePartList result = GALGAS_pic_31__38_DoWhilePartList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_DoWhilePartList GALGAS_pic_31__38_DoWhilePartList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_pic_31__38_DoWhilePartList result = GALGAS_pic_31__38_DoWhilePartList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_DoWhilePartList::dotAssign_operation (const GALGAS_pic_31__38_DoWhilePartList inOperand
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_ConditionExpression GALGAS_pic_31__38_DoWhilePartList::reader_mConditionAtIndex (const GALGAS_uint & inIndex,
                                                                                                   C_Compiler * inCompiler
                                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_DoWhilePartList * p = (cCollectionElement_pic_31__38_DoWhilePartList *) attributes.ptr () ;
  GALGAS_pic_31__38_ConditionExpression result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_DoWhilePartList) ;
    result = p->mObject.mAttribute_mCondition ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList GALGAS_pic_31__38_DoWhilePartList::reader_mInstructionListAtIndex (const GALGAS_uint & inIndex,
                                                                                                     C_Compiler * inCompiler
                                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_DoWhilePartList * p = (cCollectionElement_pic_31__38_DoWhilePartList *) attributes.ptr () ;
  GALGAS_pic_31__38_InstructionList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_DoWhilePartList) ;
    result = p->mObject.mAttribute_mInstructionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_pic_31__38_DoWhilePartList::reader_mEndOfPartLocationAtIndex (const GALGAS_uint & inIndex,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_DoWhilePartList * p = (cCollectionElement_pic_31__38_DoWhilePartList *) attributes.ptr () ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_DoWhilePartList) ;
    result = p->mObject.mAttribute_mEndOfPartLocation ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_pic_31__38_DoWhilePartList::cEnumerator_pic_31__38_DoWhilePartList (const GALGAS_pic_31__38_DoWhilePartList & inEnumeratedObject,
                                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_DoWhilePartList_2D_element cEnumerator_pic_31__38_DoWhilePartList::current (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_DoWhilePartList * p = (const cCollectionElement_pic_31__38_DoWhilePartList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_DoWhilePartList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_ConditionExpression cEnumerator_pic_31__38_DoWhilePartList::current_mCondition (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_DoWhilePartList * p = (const cCollectionElement_pic_31__38_DoWhilePartList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_DoWhilePartList) ;
  return p->mObject.mAttribute_mCondition ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList cEnumerator_pic_31__38_DoWhilePartList::current_mInstructionList (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_DoWhilePartList * p = (const cCollectionElement_pic_31__38_DoWhilePartList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_DoWhilePartList) ;
  return p->mObject.mAttribute_mInstructionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location cEnumerator_pic_31__38_DoWhilePartList::current_mEndOfPartLocation (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_DoWhilePartList * p = (const cCollectionElement_pic_31__38_DoWhilePartList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_DoWhilePartList) ;
  return p->mObject.mAttribute_mEndOfPartLocation ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @pic18DoWhilePartList type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_pic_31__38_DoWhilePartList ("pic18DoWhilePartList",
                                                   NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_pic_31__38_DoWhilePartList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_pic_31__38_DoWhilePartList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_pic_31__38_DoWhilePartList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_pic_31__38_DoWhilePartList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_DoWhilePartList GALGAS_pic_31__38_DoWhilePartList::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_pic_31__38_DoWhilePartList result ;
  const GALGAS_pic_31__38_DoWhilePartList * p = (const GALGAS_pic_31__38_DoWhilePartList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_pic_31__38_DoWhilePartList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("pic18DoWhilePartList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           Class for element of '@pic_31__38_InterruptDefinitionList' list                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_pic_31__38_InterruptDefinitionList : public cCollectionElement {
  public : GALGAS_pic_31__38_InterruptDefinitionList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_pic_31__38_InterruptDefinitionList (const GALGAS_lstring & in_mInterruptName,
                                                                  const GALGAS_bool & in_mFastReturn,
                                                                  const GALGAS_pic_31__38_InstructionList & in_mInstructionList,
                                                                  const GALGAS_location & in_mEndOfInterruptLocation
                                                                  COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_pic_31__38_InterruptDefinitionList::cCollectionElement_pic_31__38_InterruptDefinitionList (const GALGAS_lstring & in_mInterruptName,
                                                                                                              const GALGAS_bool & in_mFastReturn,
                                                                                                              const GALGAS_pic_31__38_InstructionList & in_mInstructionList,
                                                                                                              const GALGAS_location & in_mEndOfInterruptLocation
                                                                                                              COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mInterruptName, in_mFastReturn, in_mInstructionList, in_mEndOfInterruptLocation) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_pic_31__38_InterruptDefinitionList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_pic_31__38_InterruptDefinitionList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_pic_31__38_InterruptDefinitionList (mObject.mAttribute_mInterruptName, mObject.mAttribute_mFastReturn, mObject.mAttribute_mInstructionList, mObject.mAttribute_mEndOfInterruptLocation COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_pic_31__38_InterruptDefinitionList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInterruptName" ":" ;
  mObject.mAttribute_mInterruptName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFastReturn" ":" ;
  mObject.mAttribute_mFastReturn.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstructionList" ":" ;
  mObject.mAttribute_mInstructionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEndOfInterruptLocation" ":" ;
  mObject.mAttribute_mEndOfInterruptLocation.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_pic_31__38_InterruptDefinitionList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_pic_31__38_InterruptDefinitionList * operand = (cCollectionElement_pic_31__38_InterruptDefinitionList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_pic_31__38_InterruptDefinitionList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InterruptDefinitionList::GALGAS_pic_31__38_InterruptDefinitionList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InterruptDefinitionList::GALGAS_pic_31__38_InterruptDefinitionList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InterruptDefinitionList GALGAS_pic_31__38_InterruptDefinitionList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_pic_31__38_InterruptDefinitionList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InterruptDefinitionList GALGAS_pic_31__38_InterruptDefinitionList::constructor_listWithValue (const GALGAS_lstring & inOperand0,
                                                                                                                const GALGAS_bool & inOperand1,
                                                                                                                const GALGAS_pic_31__38_InstructionList & inOperand2,
                                                                                                                const GALGAS_location & inOperand3
                                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_pic_31__38_InterruptDefinitionList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_pic_31__38_InterruptDefinitionList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_InterruptDefinitionList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                           const GALGAS_lstring & in_mInterruptName,
                                                                           const GALGAS_bool & in_mFastReturn,
                                                                           const GALGAS_pic_31__38_InstructionList & in_mInstructionList,
                                                                           const GALGAS_location & in_mEndOfInterruptLocation
                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement_pic_31__38_InterruptDefinitionList * p = NULL ;
  macroMyNew (p, cCollectionElement_pic_31__38_InterruptDefinitionList (in_mInterruptName,
                                                                        in_mFastReturn,
                                                                        in_mInstructionList,
                                                                        in_mEndOfInterruptLocation COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_InterruptDefinitionList::addAssign_operation (const GALGAS_lstring & inOperand0,
                                                                     const GALGAS_bool & inOperand1,
                                                                     const GALGAS_pic_31__38_InstructionList & inOperand2,
                                                                     const GALGAS_location & inOperand3
                                                                     COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_pic_31__38_InterruptDefinitionList (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_InterruptDefinitionList::modifier_insertAtIndex (const GALGAS_lstring inOperand0,
                                                                        const GALGAS_bool inOperand1,
                                                                        const GALGAS_pic_31__38_InstructionList inOperand2,
                                                                        const GALGAS_location inOperand3,
                                                                        const GALGAS_uint inInsertionIndex,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_pic_31__38_InterruptDefinitionList (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_InterruptDefinitionList::modifier_removeAtIndex (GALGAS_lstring & outOperand0,
                                                                        GALGAS_bool & outOperand1,
                                                                        GALGAS_pic_31__38_InstructionList & outOperand2,
                                                                        GALGAS_location & outOperand3,
                                                                        const GALGAS_uint inRemoveIndex,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_pic_31__38_InterruptDefinitionList * p = (cCollectionElement_pic_31__38_InterruptDefinitionList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
      outOperand3.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_pic_31__38_InterruptDefinitionList) ;
      outOperand0 = p->mObject.mAttribute_mInterruptName ;
      outOperand1 = p->mObject.mAttribute_mFastReturn ;
      outOperand2 = p->mObject.mAttribute_mInstructionList ;
      outOperand3 = p->mObject.mAttribute_mEndOfInterruptLocation ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_InterruptDefinitionList::modifier_popFirst (GALGAS_lstring & outOperand0,
                                                                   GALGAS_bool & outOperand1,
                                                                   GALGAS_pic_31__38_InstructionList & outOperand2,
                                                                   GALGAS_location & outOperand3,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_InterruptDefinitionList * p = (cCollectionElement_pic_31__38_InterruptDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_InterruptDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mInterruptName ;
    outOperand1 = p->mObject.mAttribute_mFastReturn ;
    outOperand2 = p->mObject.mAttribute_mInstructionList ;
    outOperand3 = p->mObject.mAttribute_mEndOfInterruptLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_InterruptDefinitionList::modifier_popLast (GALGAS_lstring & outOperand0,
                                                                  GALGAS_bool & outOperand1,
                                                                  GALGAS_pic_31__38_InstructionList & outOperand2,
                                                                  GALGAS_location & outOperand3,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_InterruptDefinitionList * p = (cCollectionElement_pic_31__38_InterruptDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_InterruptDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mInterruptName ;
    outOperand1 = p->mObject.mAttribute_mFastReturn ;
    outOperand2 = p->mObject.mAttribute_mInstructionList ;
    outOperand3 = p->mObject.mAttribute_mEndOfInterruptLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_InterruptDefinitionList::method_first (GALGAS_lstring & outOperand0,
                                                              GALGAS_bool & outOperand1,
                                                              GALGAS_pic_31__38_InstructionList & outOperand2,
                                                              GALGAS_location & outOperand3,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_InterruptDefinitionList * p = (cCollectionElement_pic_31__38_InterruptDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_InterruptDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mInterruptName ;
    outOperand1 = p->mObject.mAttribute_mFastReturn ;
    outOperand2 = p->mObject.mAttribute_mInstructionList ;
    outOperand3 = p->mObject.mAttribute_mEndOfInterruptLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_InterruptDefinitionList::method_last (GALGAS_lstring & outOperand0,
                                                             GALGAS_bool & outOperand1,
                                                             GALGAS_pic_31__38_InstructionList & outOperand2,
                                                             GALGAS_location & outOperand3,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_InterruptDefinitionList * p = (cCollectionElement_pic_31__38_InterruptDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_InterruptDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mInterruptName ;
    outOperand1 = p->mObject.mAttribute_mFastReturn ;
    outOperand2 = p->mObject.mAttribute_mInstructionList ;
    outOperand3 = p->mObject.mAttribute_mEndOfInterruptLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InterruptDefinitionList GALGAS_pic_31__38_InterruptDefinitionList::operator_concat (const GALGAS_pic_31__38_InterruptDefinitionList & inOperand
                                                                                                      COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_pic_31__38_InterruptDefinitionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InterruptDefinitionList GALGAS_pic_31__38_InterruptDefinitionList::add_operation (const GALGAS_pic_31__38_InterruptDefinitionList & inOperand,
                                                                                                    C_Compiler * /* inCompiler */
                                                                                                    COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_pic_31__38_InterruptDefinitionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InterruptDefinitionList GALGAS_pic_31__38_InterruptDefinitionList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                              C_Compiler * inCompiler
                                                                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_pic_31__38_InterruptDefinitionList result = GALGAS_pic_31__38_InterruptDefinitionList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InterruptDefinitionList GALGAS_pic_31__38_InterruptDefinitionList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                              C_Compiler * inCompiler
                                                                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_pic_31__38_InterruptDefinitionList result = GALGAS_pic_31__38_InterruptDefinitionList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_InterruptDefinitionList::dotAssign_operation (const GALGAS_pic_31__38_InterruptDefinitionList inOperand
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_pic_31__38_InterruptDefinitionList::reader_mInterruptNameAtIndex (const GALGAS_uint & inIndex,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_InterruptDefinitionList * p = (cCollectionElement_pic_31__38_InterruptDefinitionList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_InterruptDefinitionList) ;
    result = p->mObject.mAttribute_mInterruptName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_InterruptDefinitionList::reader_mFastReturnAtIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_InterruptDefinitionList * p = (cCollectionElement_pic_31__38_InterruptDefinitionList *) attributes.ptr () ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_InterruptDefinitionList) ;
    result = p->mObject.mAttribute_mFastReturn ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList GALGAS_pic_31__38_InterruptDefinitionList::reader_mInstructionListAtIndex (const GALGAS_uint & inIndex,
                                                                                                             C_Compiler * inCompiler
                                                                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_InterruptDefinitionList * p = (cCollectionElement_pic_31__38_InterruptDefinitionList *) attributes.ptr () ;
  GALGAS_pic_31__38_InstructionList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_InterruptDefinitionList) ;
    result = p->mObject.mAttribute_mInstructionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_pic_31__38_InterruptDefinitionList::reader_mEndOfInterruptLocationAtIndex (const GALGAS_uint & inIndex,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_InterruptDefinitionList * p = (cCollectionElement_pic_31__38_InterruptDefinitionList *) attributes.ptr () ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_InterruptDefinitionList) ;
    result = p->mObject.mAttribute_mEndOfInterruptLocation ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_pic_31__38_InterruptDefinitionList::cEnumerator_pic_31__38_InterruptDefinitionList (const GALGAS_pic_31__38_InterruptDefinitionList & inEnumeratedObject,
                                                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InterruptDefinitionList_2D_element cEnumerator_pic_31__38_InterruptDefinitionList::current (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_InterruptDefinitionList * p = (const cCollectionElement_pic_31__38_InterruptDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_InterruptDefinitionList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_pic_31__38_InterruptDefinitionList::current_mInterruptName (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_InterruptDefinitionList * p = (const cCollectionElement_pic_31__38_InterruptDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_InterruptDefinitionList) ;
  return p->mObject.mAttribute_mInterruptName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_pic_31__38_InterruptDefinitionList::current_mFastReturn (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_InterruptDefinitionList * p = (const cCollectionElement_pic_31__38_InterruptDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_InterruptDefinitionList) ;
  return p->mObject.mAttribute_mFastReturn ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList cEnumerator_pic_31__38_InterruptDefinitionList::current_mInstructionList (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_InterruptDefinitionList * p = (const cCollectionElement_pic_31__38_InterruptDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_InterruptDefinitionList) ;
  return p->mObject.mAttribute_mInstructionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location cEnumerator_pic_31__38_InterruptDefinitionList::current_mEndOfInterruptLocation (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_InterruptDefinitionList * p = (const cCollectionElement_pic_31__38_InterruptDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_InterruptDefinitionList) ;
  return p->mObject.mAttribute_mEndOfInterruptLocation ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         @pic18InterruptDefinitionList type                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_pic_31__38_InterruptDefinitionList ("pic18InterruptDefinitionList",
                                                           NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_pic_31__38_InterruptDefinitionList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_pic_31__38_InterruptDefinitionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_pic_31__38_InterruptDefinitionList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_pic_31__38_InterruptDefinitionList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InterruptDefinitionList GALGAS_pic_31__38_InterruptDefinitionList::extractObject (const GALGAS_object & inObject,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_pic_31__38_InterruptDefinitionList result ;
  const GALGAS_pic_31__38_InterruptDefinitionList * p = (const GALGAS_pic_31__38_InterruptDefinitionList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_pic_31__38_InterruptDefinitionList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("pic18InterruptDefinitionList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            Class for element of '@pic_31__38_RoutineDefinitionList' list                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_pic_31__38_RoutineDefinitionList : public cCollectionElement {
  public : GALGAS_pic_31__38_RoutineDefinitionList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_pic_31__38_RoutineDefinitionList (const GALGAS_lstring & in_mRoutineName,
                                                                const GALGAS_luint & in_mRequiredBank,
                                                                const GALGAS_luint & in_mReturnedBank,
                                                                const GALGAS_bool & in_mPreservesBank,
                                                                const GALGAS_bool & in_mIsNoReturn,
                                                                const GALGAS_pic_31__38_InstructionList & in_mInstructionList,
                                                                const GALGAS_location & in_mEndOfRoutineLocation
                                                                COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_pic_31__38_RoutineDefinitionList::cCollectionElement_pic_31__38_RoutineDefinitionList (const GALGAS_lstring & in_mRoutineName,
                                                                                                          const GALGAS_luint & in_mRequiredBank,
                                                                                                          const GALGAS_luint & in_mReturnedBank,
                                                                                                          const GALGAS_bool & in_mPreservesBank,
                                                                                                          const GALGAS_bool & in_mIsNoReturn,
                                                                                                          const GALGAS_pic_31__38_InstructionList & in_mInstructionList,
                                                                                                          const GALGAS_location & in_mEndOfRoutineLocation
                                                                                                          COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mRoutineName, in_mRequiredBank, in_mReturnedBank, in_mPreservesBank, in_mIsNoReturn, in_mInstructionList, in_mEndOfRoutineLocation) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_pic_31__38_RoutineDefinitionList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_pic_31__38_RoutineDefinitionList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_pic_31__38_RoutineDefinitionList (mObject.mAttribute_mRoutineName, mObject.mAttribute_mRequiredBank, mObject.mAttribute_mReturnedBank, mObject.mAttribute_mPreservesBank, mObject.mAttribute_mIsNoReturn, mObject.mAttribute_mInstructionList, mObject.mAttribute_mEndOfRoutineLocation COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_pic_31__38_RoutineDefinitionList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRoutineName" ":" ;
  mObject.mAttribute_mRoutineName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRequiredBank" ":" ;
  mObject.mAttribute_mRequiredBank.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mReturnedBank" ":" ;
  mObject.mAttribute_mReturnedBank.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPreservesBank" ":" ;
  mObject.mAttribute_mPreservesBank.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsNoReturn" ":" ;
  mObject.mAttribute_mIsNoReturn.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstructionList" ":" ;
  mObject.mAttribute_mInstructionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEndOfRoutineLocation" ":" ;
  mObject.mAttribute_mEndOfRoutineLocation.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_pic_31__38_RoutineDefinitionList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_pic_31__38_RoutineDefinitionList * operand = (cCollectionElement_pic_31__38_RoutineDefinitionList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_pic_31__38_RoutineDefinitionList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_RoutineDefinitionList::GALGAS_pic_31__38_RoutineDefinitionList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_RoutineDefinitionList::GALGAS_pic_31__38_RoutineDefinitionList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_RoutineDefinitionList GALGAS_pic_31__38_RoutineDefinitionList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_pic_31__38_RoutineDefinitionList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_RoutineDefinitionList GALGAS_pic_31__38_RoutineDefinitionList::constructor_listWithValue (const GALGAS_lstring & inOperand0,
                                                                                                            const GALGAS_luint & inOperand1,
                                                                                                            const GALGAS_luint & inOperand2,
                                                                                                            const GALGAS_bool & inOperand3,
                                                                                                            const GALGAS_bool & inOperand4,
                                                                                                            const GALGAS_pic_31__38_InstructionList & inOperand5,
                                                                                                            const GALGAS_location & inOperand6
                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_pic_31__38_RoutineDefinitionList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_pic_31__38_RoutineDefinitionList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_RoutineDefinitionList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                         const GALGAS_lstring & in_mRoutineName,
                                                                         const GALGAS_luint & in_mRequiredBank,
                                                                         const GALGAS_luint & in_mReturnedBank,
                                                                         const GALGAS_bool & in_mPreservesBank,
                                                                         const GALGAS_bool & in_mIsNoReturn,
                                                                         const GALGAS_pic_31__38_InstructionList & in_mInstructionList,
                                                                         const GALGAS_location & in_mEndOfRoutineLocation
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement_pic_31__38_RoutineDefinitionList * p = NULL ;
  macroMyNew (p, cCollectionElement_pic_31__38_RoutineDefinitionList (in_mRoutineName,
                                                                      in_mRequiredBank,
                                                                      in_mReturnedBank,
                                                                      in_mPreservesBank,
                                                                      in_mIsNoReturn,
                                                                      in_mInstructionList,
                                                                      in_mEndOfRoutineLocation COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_RoutineDefinitionList::addAssign_operation (const GALGAS_lstring & inOperand0,
                                                                   const GALGAS_luint & inOperand1,
                                                                   const GALGAS_luint & inOperand2,
                                                                   const GALGAS_bool & inOperand3,
                                                                   const GALGAS_bool & inOperand4,
                                                                   const GALGAS_pic_31__38_InstructionList & inOperand5,
                                                                   const GALGAS_location & inOperand6
                                                                   COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_pic_31__38_RoutineDefinitionList (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_RoutineDefinitionList::modifier_insertAtIndex (const GALGAS_lstring inOperand0,
                                                                      const GALGAS_luint inOperand1,
                                                                      const GALGAS_luint inOperand2,
                                                                      const GALGAS_bool inOperand3,
                                                                      const GALGAS_bool inOperand4,
                                                                      const GALGAS_pic_31__38_InstructionList inOperand5,
                                                                      const GALGAS_location inOperand6,
                                                                      const GALGAS_uint inInsertionIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_pic_31__38_RoutineDefinitionList (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_RoutineDefinitionList::modifier_removeAtIndex (GALGAS_lstring & outOperand0,
                                                                      GALGAS_luint & outOperand1,
                                                                      GALGAS_luint & outOperand2,
                                                                      GALGAS_bool & outOperand3,
                                                                      GALGAS_bool & outOperand4,
                                                                      GALGAS_pic_31__38_InstructionList & outOperand5,
                                                                      GALGAS_location & outOperand6,
                                                                      const GALGAS_uint inRemoveIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_pic_31__38_RoutineDefinitionList * p = (cCollectionElement_pic_31__38_RoutineDefinitionList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
      outOperand3.drop () ;
      outOperand4.drop () ;
      outOperand5.drop () ;
      outOperand6.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_pic_31__38_RoutineDefinitionList) ;
      outOperand0 = p->mObject.mAttribute_mRoutineName ;
      outOperand1 = p->mObject.mAttribute_mRequiredBank ;
      outOperand2 = p->mObject.mAttribute_mReturnedBank ;
      outOperand3 = p->mObject.mAttribute_mPreservesBank ;
      outOperand4 = p->mObject.mAttribute_mIsNoReturn ;
      outOperand5 = p->mObject.mAttribute_mInstructionList ;
      outOperand6 = p->mObject.mAttribute_mEndOfRoutineLocation ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_RoutineDefinitionList::modifier_popFirst (GALGAS_lstring & outOperand0,
                                                                 GALGAS_luint & outOperand1,
                                                                 GALGAS_luint & outOperand2,
                                                                 GALGAS_bool & outOperand3,
                                                                 GALGAS_bool & outOperand4,
                                                                 GALGAS_pic_31__38_InstructionList & outOperand5,
                                                                 GALGAS_location & outOperand6,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_RoutineDefinitionList * p = (cCollectionElement_pic_31__38_RoutineDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
    outOperand5.drop () ;
    outOperand6.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_RoutineDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mRoutineName ;
    outOperand1 = p->mObject.mAttribute_mRequiredBank ;
    outOperand2 = p->mObject.mAttribute_mReturnedBank ;
    outOperand3 = p->mObject.mAttribute_mPreservesBank ;
    outOperand4 = p->mObject.mAttribute_mIsNoReturn ;
    outOperand5 = p->mObject.mAttribute_mInstructionList ;
    outOperand6 = p->mObject.mAttribute_mEndOfRoutineLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_RoutineDefinitionList::modifier_popLast (GALGAS_lstring & outOperand0,
                                                                GALGAS_luint & outOperand1,
                                                                GALGAS_luint & outOperand2,
                                                                GALGAS_bool & outOperand3,
                                                                GALGAS_bool & outOperand4,
                                                                GALGAS_pic_31__38_InstructionList & outOperand5,
                                                                GALGAS_location & outOperand6,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_RoutineDefinitionList * p = (cCollectionElement_pic_31__38_RoutineDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
    outOperand5.drop () ;
    outOperand6.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_RoutineDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mRoutineName ;
    outOperand1 = p->mObject.mAttribute_mRequiredBank ;
    outOperand2 = p->mObject.mAttribute_mReturnedBank ;
    outOperand3 = p->mObject.mAttribute_mPreservesBank ;
    outOperand4 = p->mObject.mAttribute_mIsNoReturn ;
    outOperand5 = p->mObject.mAttribute_mInstructionList ;
    outOperand6 = p->mObject.mAttribute_mEndOfRoutineLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_RoutineDefinitionList::method_first (GALGAS_lstring & outOperand0,
                                                            GALGAS_luint & outOperand1,
                                                            GALGAS_luint & outOperand2,
                                                            GALGAS_bool & outOperand3,
                                                            GALGAS_bool & outOperand4,
                                                            GALGAS_pic_31__38_InstructionList & outOperand5,
                                                            GALGAS_location & outOperand6,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_RoutineDefinitionList * p = (cCollectionElement_pic_31__38_RoutineDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
    outOperand5.drop () ;
    outOperand6.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_RoutineDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mRoutineName ;
    outOperand1 = p->mObject.mAttribute_mRequiredBank ;
    outOperand2 = p->mObject.mAttribute_mReturnedBank ;
    outOperand3 = p->mObject.mAttribute_mPreservesBank ;
    outOperand4 = p->mObject.mAttribute_mIsNoReturn ;
    outOperand5 = p->mObject.mAttribute_mInstructionList ;
    outOperand6 = p->mObject.mAttribute_mEndOfRoutineLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_RoutineDefinitionList::method_last (GALGAS_lstring & outOperand0,
                                                           GALGAS_luint & outOperand1,
                                                           GALGAS_luint & outOperand2,
                                                           GALGAS_bool & outOperand3,
                                                           GALGAS_bool & outOperand4,
                                                           GALGAS_pic_31__38_InstructionList & outOperand5,
                                                           GALGAS_location & outOperand6,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_RoutineDefinitionList * p = (cCollectionElement_pic_31__38_RoutineDefinitionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
    outOperand5.drop () ;
    outOperand6.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_pic_31__38_RoutineDefinitionList) ;
    outOperand0 = p->mObject.mAttribute_mRoutineName ;
    outOperand1 = p->mObject.mAttribute_mRequiredBank ;
    outOperand2 = p->mObject.mAttribute_mReturnedBank ;
    outOperand3 = p->mObject.mAttribute_mPreservesBank ;
    outOperand4 = p->mObject.mAttribute_mIsNoReturn ;
    outOperand5 = p->mObject.mAttribute_mInstructionList ;
    outOperand6 = p->mObject.mAttribute_mEndOfRoutineLocation ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_RoutineDefinitionList GALGAS_pic_31__38_RoutineDefinitionList::operator_concat (const GALGAS_pic_31__38_RoutineDefinitionList & inOperand
                                                                                                  COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_pic_31__38_RoutineDefinitionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_RoutineDefinitionList GALGAS_pic_31__38_RoutineDefinitionList::add_operation (const GALGAS_pic_31__38_RoutineDefinitionList & inOperand,
                                                                                                C_Compiler * /* inCompiler */
                                                                                                COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_pic_31__38_RoutineDefinitionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_RoutineDefinitionList GALGAS_pic_31__38_RoutineDefinitionList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                          C_Compiler * inCompiler
                                                                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_pic_31__38_RoutineDefinitionList result = GALGAS_pic_31__38_RoutineDefinitionList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_RoutineDefinitionList GALGAS_pic_31__38_RoutineDefinitionList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                          C_Compiler * inCompiler
                                                                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_pic_31__38_RoutineDefinitionList result = GALGAS_pic_31__38_RoutineDefinitionList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38_RoutineDefinitionList::dotAssign_operation (const GALGAS_pic_31__38_RoutineDefinitionList inOperand
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_pic_31__38_RoutineDefinitionList::reader_mRoutineNameAtIndex (const GALGAS_uint & inIndex,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_RoutineDefinitionList * p = (cCollectionElement_pic_31__38_RoutineDefinitionList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_RoutineDefinitionList) ;
    result = p->mObject.mAttribute_mRoutineName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint GALGAS_pic_31__38_RoutineDefinitionList::reader_mRequiredBankAtIndex (const GALGAS_uint & inIndex,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_RoutineDefinitionList * p = (cCollectionElement_pic_31__38_RoutineDefinitionList *) attributes.ptr () ;
  GALGAS_luint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_RoutineDefinitionList) ;
    result = p->mObject.mAttribute_mRequiredBank ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint GALGAS_pic_31__38_RoutineDefinitionList::reader_mReturnedBankAtIndex (const GALGAS_uint & inIndex,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_RoutineDefinitionList * p = (cCollectionElement_pic_31__38_RoutineDefinitionList *) attributes.ptr () ;
  GALGAS_luint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_RoutineDefinitionList) ;
    result = p->mObject.mAttribute_mReturnedBank ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_RoutineDefinitionList::reader_mPreservesBankAtIndex (const GALGAS_uint & inIndex,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_RoutineDefinitionList * p = (cCollectionElement_pic_31__38_RoutineDefinitionList *) attributes.ptr () ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_RoutineDefinitionList) ;
    result = p->mObject.mAttribute_mPreservesBank ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_pic_31__38_RoutineDefinitionList::reader_mIsNoReturnAtIndex (const GALGAS_uint & inIndex,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_RoutineDefinitionList * p = (cCollectionElement_pic_31__38_RoutineDefinitionList *) attributes.ptr () ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_RoutineDefinitionList) ;
    result = p->mObject.mAttribute_mIsNoReturn ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList GALGAS_pic_31__38_RoutineDefinitionList::reader_mInstructionListAtIndex (const GALGAS_uint & inIndex,
                                                                                                           C_Compiler * inCompiler
                                                                                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_RoutineDefinitionList * p = (cCollectionElement_pic_31__38_RoutineDefinitionList *) attributes.ptr () ;
  GALGAS_pic_31__38_InstructionList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_RoutineDefinitionList) ;
    result = p->mObject.mAttribute_mInstructionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_pic_31__38_RoutineDefinitionList::reader_mEndOfRoutineLocationAtIndex (const GALGAS_uint & inIndex,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_pic_31__38_RoutineDefinitionList * p = (cCollectionElement_pic_31__38_RoutineDefinitionList *) attributes.ptr () ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_pic_31__38_RoutineDefinitionList) ;
    result = p->mObject.mAttribute_mEndOfRoutineLocation ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_pic_31__38_RoutineDefinitionList::cEnumerator_pic_31__38_RoutineDefinitionList (const GALGAS_pic_31__38_RoutineDefinitionList & inEnumeratedObject,
                                                                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_RoutineDefinitionList_2D_element cEnumerator_pic_31__38_RoutineDefinitionList::current (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_RoutineDefinitionList * p = (const cCollectionElement_pic_31__38_RoutineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_RoutineDefinitionList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_pic_31__38_RoutineDefinitionList::current_mRoutineName (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_RoutineDefinitionList * p = (const cCollectionElement_pic_31__38_RoutineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_RoutineDefinitionList) ;
  return p->mObject.mAttribute_mRoutineName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint cEnumerator_pic_31__38_RoutineDefinitionList::current_mRequiredBank (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_RoutineDefinitionList * p = (const cCollectionElement_pic_31__38_RoutineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_RoutineDefinitionList) ;
  return p->mObject.mAttribute_mRequiredBank ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint cEnumerator_pic_31__38_RoutineDefinitionList::current_mReturnedBank (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_RoutineDefinitionList * p = (const cCollectionElement_pic_31__38_RoutineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_RoutineDefinitionList) ;
  return p->mObject.mAttribute_mReturnedBank ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_pic_31__38_RoutineDefinitionList::current_mPreservesBank (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_RoutineDefinitionList * p = (const cCollectionElement_pic_31__38_RoutineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_RoutineDefinitionList) ;
  return p->mObject.mAttribute_mPreservesBank ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_pic_31__38_RoutineDefinitionList::current_mIsNoReturn (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_RoutineDefinitionList * p = (const cCollectionElement_pic_31__38_RoutineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_RoutineDefinitionList) ;
  return p->mObject.mAttribute_mIsNoReturn ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList cEnumerator_pic_31__38_RoutineDefinitionList::current_mInstructionList (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_RoutineDefinitionList * p = (const cCollectionElement_pic_31__38_RoutineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_RoutineDefinitionList) ;
  return p->mObject.mAttribute_mInstructionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location cEnumerator_pic_31__38_RoutineDefinitionList::current_mEndOfRoutineLocation (LOCATION_ARGS) const {
  const cCollectionElement_pic_31__38_RoutineDefinitionList * p = (const cCollectionElement_pic_31__38_RoutineDefinitionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_pic_31__38_RoutineDefinitionList) ;
  return p->mObject.mAttribute_mEndOfRoutineLocation ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          @pic18RoutineDefinitionList type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_pic_31__38_RoutineDefinitionList ("pic18RoutineDefinitionList",
                                                         NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_pic_31__38_RoutineDefinitionList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_pic_31__38_RoutineDefinitionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_pic_31__38_RoutineDefinitionList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_pic_31__38_RoutineDefinitionList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_RoutineDefinitionList GALGAS_pic_31__38_RoutineDefinitionList::extractObject (const GALGAS_object & inObject,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_pic_31__38_RoutineDefinitionList result ;
  const GALGAS_pic_31__38_RoutineDefinitionList * p = (const GALGAS_pic_31__38_RoutineDefinitionList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_pic_31__38_RoutineDefinitionList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("pic18RoutineDefinitionList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 Class for element of '@routineDeclarationList' list                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_routineDeclarationList : public cCollectionElement {
  public : GALGAS_routineDeclarationList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_routineDeclarationList (const GALGAS_lstring & in_mRoutineName,
                                                      const GALGAS_luint & in_mRequiredBank,
                                                      const GALGAS_luint & in_mReturnedBank,
                                                      const GALGAS_bool & in_mPreservesBank,
                                                      const GALGAS_bool & in_mIsNoReturn
                                                      COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_routineDeclarationList::cCollectionElement_routineDeclarationList (const GALGAS_lstring & in_mRoutineName,
                                                                                      const GALGAS_luint & in_mRequiredBank,
                                                                                      const GALGAS_luint & in_mReturnedBank,
                                                                                      const GALGAS_bool & in_mPreservesBank,
                                                                                      const GALGAS_bool & in_mIsNoReturn
                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mRoutineName, in_mRequiredBank, in_mReturnedBank, in_mPreservesBank, in_mIsNoReturn) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_routineDeclarationList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_routineDeclarationList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_routineDeclarationList (mObject.mAttribute_mRoutineName, mObject.mAttribute_mRequiredBank, mObject.mAttribute_mReturnedBank, mObject.mAttribute_mPreservesBank, mObject.mAttribute_mIsNoReturn COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_routineDeclarationList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRoutineName" ":" ;
  mObject.mAttribute_mRoutineName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRequiredBank" ":" ;
  mObject.mAttribute_mRequiredBank.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mReturnedBank" ":" ;
  mObject.mAttribute_mReturnedBank.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPreservesBank" ":" ;
  mObject.mAttribute_mPreservesBank.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsNoReturn" ":" ;
  mObject.mAttribute_mIsNoReturn.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_routineDeclarationList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_routineDeclarationList * operand = (cCollectionElement_routineDeclarationList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_routineDeclarationList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineDeclarationList::GALGAS_routineDeclarationList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineDeclarationList::GALGAS_routineDeclarationList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineDeclarationList GALGAS_routineDeclarationList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_routineDeclarationList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineDeclarationList GALGAS_routineDeclarationList::constructor_listWithValue (const GALGAS_lstring & inOperand0,
                                                                                        const GALGAS_luint & inOperand1,
                                                                                        const GALGAS_luint & inOperand2,
                                                                                        const GALGAS_bool & inOperand3,
                                                                                        const GALGAS_bool & inOperand4
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_routineDeclarationList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_routineDeclarationList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3, inOperand4 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineDeclarationList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                               const GALGAS_lstring & in_mRoutineName,
                                                               const GALGAS_luint & in_mRequiredBank,
                                                               const GALGAS_luint & in_mReturnedBank,
                                                               const GALGAS_bool & in_mPreservesBank,
                                                               const GALGAS_bool & in_mIsNoReturn
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement_routineDeclarationList * p = NULL ;
  macroMyNew (p, cCollectionElement_routineDeclarationList (in_mRoutineName,
                                                            in_mRequiredBank,
                                                            in_mReturnedBank,
                                                            in_mPreservesBank,
                                                            in_mIsNoReturn COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineDeclarationList::addAssign_operation (const GALGAS_lstring & inOperand0,
                                                         const GALGAS_luint & inOperand1,
                                                         const GALGAS_luint & inOperand2,
                                                         const GALGAS_bool & inOperand3,
                                                         const GALGAS_bool & inOperand4
                                                         COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_routineDeclarationList (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineDeclarationList::modifier_insertAtIndex (const GALGAS_lstring inOperand0,
                                                            const GALGAS_luint inOperand1,
                                                            const GALGAS_luint inOperand2,
                                                            const GALGAS_bool inOperand3,
                                                            const GALGAS_bool inOperand4,
                                                            const GALGAS_uint inInsertionIndex,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_routineDeclarationList (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineDeclarationList::modifier_removeAtIndex (GALGAS_lstring & outOperand0,
                                                            GALGAS_luint & outOperand1,
                                                            GALGAS_luint & outOperand2,
                                                            GALGAS_bool & outOperand3,
                                                            GALGAS_bool & outOperand4,
                                                            const GALGAS_uint inRemoveIndex,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_routineDeclarationList * p = (cCollectionElement_routineDeclarationList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
      outOperand3.drop () ;
      outOperand4.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_routineDeclarationList) ;
      outOperand0 = p->mObject.mAttribute_mRoutineName ;
      outOperand1 = p->mObject.mAttribute_mRequiredBank ;
      outOperand2 = p->mObject.mAttribute_mReturnedBank ;
      outOperand3 = p->mObject.mAttribute_mPreservesBank ;
      outOperand4 = p->mObject.mAttribute_mIsNoReturn ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineDeclarationList::modifier_popFirst (GALGAS_lstring & outOperand0,
                                                       GALGAS_luint & outOperand1,
                                                       GALGAS_luint & outOperand2,
                                                       GALGAS_bool & outOperand3,
                                                       GALGAS_bool & outOperand4,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_routineDeclarationList * p = (cCollectionElement_routineDeclarationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_routineDeclarationList) ;
    outOperand0 = p->mObject.mAttribute_mRoutineName ;
    outOperand1 = p->mObject.mAttribute_mRequiredBank ;
    outOperand2 = p->mObject.mAttribute_mReturnedBank ;
    outOperand3 = p->mObject.mAttribute_mPreservesBank ;
    outOperand4 = p->mObject.mAttribute_mIsNoReturn ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineDeclarationList::modifier_popLast (GALGAS_lstring & outOperand0,
                                                      GALGAS_luint & outOperand1,
                                                      GALGAS_luint & outOperand2,
                                                      GALGAS_bool & outOperand3,
                                                      GALGAS_bool & outOperand4,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_routineDeclarationList * p = (cCollectionElement_routineDeclarationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_routineDeclarationList) ;
    outOperand0 = p->mObject.mAttribute_mRoutineName ;
    outOperand1 = p->mObject.mAttribute_mRequiredBank ;
    outOperand2 = p->mObject.mAttribute_mReturnedBank ;
    outOperand3 = p->mObject.mAttribute_mPreservesBank ;
    outOperand4 = p->mObject.mAttribute_mIsNoReturn ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineDeclarationList::method_first (GALGAS_lstring & outOperand0,
                                                  GALGAS_luint & outOperand1,
                                                  GALGAS_luint & outOperand2,
                                                  GALGAS_bool & outOperand3,
                                                  GALGAS_bool & outOperand4,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_routineDeclarationList * p = (cCollectionElement_routineDeclarationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_routineDeclarationList) ;
    outOperand0 = p->mObject.mAttribute_mRoutineName ;
    outOperand1 = p->mObject.mAttribute_mRequiredBank ;
    outOperand2 = p->mObject.mAttribute_mReturnedBank ;
    outOperand3 = p->mObject.mAttribute_mPreservesBank ;
    outOperand4 = p->mObject.mAttribute_mIsNoReturn ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineDeclarationList::method_last (GALGAS_lstring & outOperand0,
                                                 GALGAS_luint & outOperand1,
                                                 GALGAS_luint & outOperand2,
                                                 GALGAS_bool & outOperand3,
                                                 GALGAS_bool & outOperand4,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_routineDeclarationList * p = (cCollectionElement_routineDeclarationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_routineDeclarationList) ;
    outOperand0 = p->mObject.mAttribute_mRoutineName ;
    outOperand1 = p->mObject.mAttribute_mRequiredBank ;
    outOperand2 = p->mObject.mAttribute_mReturnedBank ;
    outOperand3 = p->mObject.mAttribute_mPreservesBank ;
    outOperand4 = p->mObject.mAttribute_mIsNoReturn ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineDeclarationList GALGAS_routineDeclarationList::operator_concat (const GALGAS_routineDeclarationList & inOperand
                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_routineDeclarationList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineDeclarationList GALGAS_routineDeclarationList::add_operation (const GALGAS_routineDeclarationList & inOperand,
                                                                            C_Compiler * /* inCompiler */
                                                                            COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_routineDeclarationList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineDeclarationList GALGAS_routineDeclarationList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_routineDeclarationList result = GALGAS_routineDeclarationList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineDeclarationList GALGAS_routineDeclarationList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_routineDeclarationList result = GALGAS_routineDeclarationList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineDeclarationList::dotAssign_operation (const GALGAS_routineDeclarationList inOperand
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_routineDeclarationList::reader_mRoutineNameAtIndex (const GALGAS_uint & inIndex,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_routineDeclarationList * p = (cCollectionElement_routineDeclarationList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_routineDeclarationList) ;
    result = p->mObject.mAttribute_mRoutineName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint GALGAS_routineDeclarationList::reader_mRequiredBankAtIndex (const GALGAS_uint & inIndex,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_routineDeclarationList * p = (cCollectionElement_routineDeclarationList *) attributes.ptr () ;
  GALGAS_luint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_routineDeclarationList) ;
    result = p->mObject.mAttribute_mRequiredBank ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint GALGAS_routineDeclarationList::reader_mReturnedBankAtIndex (const GALGAS_uint & inIndex,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_routineDeclarationList * p = (cCollectionElement_routineDeclarationList *) attributes.ptr () ;
  GALGAS_luint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_routineDeclarationList) ;
    result = p->mObject.mAttribute_mReturnedBank ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineDeclarationList::reader_mPreservesBankAtIndex (const GALGAS_uint & inIndex,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_routineDeclarationList * p = (cCollectionElement_routineDeclarationList *) attributes.ptr () ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_routineDeclarationList) ;
    result = p->mObject.mAttribute_mPreservesBank ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineDeclarationList::reader_mIsNoReturnAtIndex (const GALGAS_uint & inIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_routineDeclarationList * p = (cCollectionElement_routineDeclarationList *) attributes.ptr () ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_routineDeclarationList) ;
    result = p->mObject.mAttribute_mIsNoReturn ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_routineDeclarationList::cEnumerator_routineDeclarationList (const GALGAS_routineDeclarationList & inEnumeratedObject,
                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineDeclarationList_2D_element cEnumerator_routineDeclarationList::current (LOCATION_ARGS) const {
  const cCollectionElement_routineDeclarationList * p = (const cCollectionElement_routineDeclarationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_routineDeclarationList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_routineDeclarationList::current_mRoutineName (LOCATION_ARGS) const {
  const cCollectionElement_routineDeclarationList * p = (const cCollectionElement_routineDeclarationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_routineDeclarationList) ;
  return p->mObject.mAttribute_mRoutineName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint cEnumerator_routineDeclarationList::current_mRequiredBank (LOCATION_ARGS) const {
  const cCollectionElement_routineDeclarationList * p = (const cCollectionElement_routineDeclarationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_routineDeclarationList) ;
  return p->mObject.mAttribute_mRequiredBank ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint cEnumerator_routineDeclarationList::current_mReturnedBank (LOCATION_ARGS) const {
  const cCollectionElement_routineDeclarationList * p = (const cCollectionElement_routineDeclarationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_routineDeclarationList) ;
  return p->mObject.mAttribute_mReturnedBank ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_routineDeclarationList::current_mPreservesBank (LOCATION_ARGS) const {
  const cCollectionElement_routineDeclarationList * p = (const cCollectionElement_routineDeclarationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_routineDeclarationList) ;
  return p->mObject.mAttribute_mPreservesBank ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_routineDeclarationList::current_mIsNoReturn (LOCATION_ARGS) const {
  const cCollectionElement_routineDeclarationList * p = (const cCollectionElement_routineDeclarationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_routineDeclarationList) ;
  return p->mObject.mAttribute_mIsNoReturn ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            @routineDeclarationList type                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_routineDeclarationList ("routineDeclarationList",
                                               NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_routineDeclarationList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_routineDeclarationList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_routineDeclarationList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_routineDeclarationList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineDeclarationList GALGAS_routineDeclarationList::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_routineDeclarationList result ;
  const GALGAS_routineDeclarationList * p = (const GALGAS_routineDeclarationList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_routineDeclarationList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("routineDeclarationList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_programKind::GALGAS_programKind (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_programKind GALGAS_programKind::constructor_regularProgram (UNUSED_LOCATION_ARGS) {
  GALGAS_programKind result ;
  result.mEnum = kEnum_regularProgram ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_programKind GALGAS_programKind::constructor_bootloaderProgram (UNUSED_LOCATION_ARGS) {
  GALGAS_programKind result ;
  result.mEnum = kEnum_bootloaderProgram ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_programKind GALGAS_programKind::constructor_userProgram (UNUSED_LOCATION_ARGS) {
  GALGAS_programKind result ;
  result.mEnum = kEnum_userProgram ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_programKind [4] = {
  "(not built)",
  "regularProgram",
  "bootloaderProgram",
  "userProgram"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_programKind::reader_isRegularProgram (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_regularProgram == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_programKind::reader_isBootloaderProgram (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_bootloaderProgram == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_programKind::reader_isUserProgram (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_userProgram == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_programKind::description (C_String & ioString,
                                      const int32_t /* inIndentation */) const {
  ioString << "<enum @programKind: " << gEnumNameArrayFor_programKind [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_programKind::objectCompare (const GALGAS_programKind & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                  @programKind type                                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_programKind ("programKind",
                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_programKind::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_programKind ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_programKind::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_programKind (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_programKind GALGAS_programKind::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_programKind result ;
  const GALGAS_programKind * p = (const GALGAS_programKind *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_programKind *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("programKind", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Class for element of '@dataList' list                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_dataList : public cCollectionElement {
  public : GALGAS_dataList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_dataList (const GALGAS_lstring & in_mDataName,
                                        const GALGAS_immediatExpressionList & in_mValueList
                                        COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_dataList::cCollectionElement_dataList (const GALGAS_lstring & in_mDataName,
                                                          const GALGAS_immediatExpressionList & in_mValueList
                                                          COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mDataName, in_mValueList) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_dataList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_dataList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_dataList (mObject.mAttribute_mDataName, mObject.mAttribute_mValueList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_dataList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDataName" ":" ;
  mObject.mAttribute_mDataName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mValueList" ":" ;
  mObject.mAttribute_mValueList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_dataList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_dataList * operand = (cCollectionElement_dataList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_dataList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dataList::GALGAS_dataList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dataList::GALGAS_dataList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dataList GALGAS_dataList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_dataList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dataList GALGAS_dataList::constructor_listWithValue (const GALGAS_lstring & inOperand0,
                                                            const GALGAS_immediatExpressionList & inOperand1
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_dataList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_dataList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_dataList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                 const GALGAS_lstring & in_mDataName,
                                                 const GALGAS_immediatExpressionList & in_mValueList
                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement_dataList * p = NULL ;
  macroMyNew (p, cCollectionElement_dataList (in_mDataName,
                                              in_mValueList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_dataList::addAssign_operation (const GALGAS_lstring & inOperand0,
                                           const GALGAS_immediatExpressionList & inOperand1
                                           COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_dataList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_dataList::modifier_insertAtIndex (const GALGAS_lstring inOperand0,
                                              const GALGAS_immediatExpressionList inOperand1,
                                              const GALGAS_uint inInsertionIndex,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_dataList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_dataList::modifier_removeAtIndex (GALGAS_lstring & outOperand0,
                                              GALGAS_immediatExpressionList & outOperand1,
                                              const GALGAS_uint inRemoveIndex,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_dataList * p = (cCollectionElement_dataList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_dataList) ;
      outOperand0 = p->mObject.mAttribute_mDataName ;
      outOperand1 = p->mObject.mAttribute_mValueList ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_dataList::modifier_popFirst (GALGAS_lstring & outOperand0,
                                         GALGAS_immediatExpressionList & outOperand1,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_dataList * p = (cCollectionElement_dataList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_dataList) ;
    outOperand0 = p->mObject.mAttribute_mDataName ;
    outOperand1 = p->mObject.mAttribute_mValueList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_dataList::modifier_popLast (GALGAS_lstring & outOperand0,
                                        GALGAS_immediatExpressionList & outOperand1,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_dataList * p = (cCollectionElement_dataList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_dataList) ;
    outOperand0 = p->mObject.mAttribute_mDataName ;
    outOperand1 = p->mObject.mAttribute_mValueList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_dataList::method_first (GALGAS_lstring & outOperand0,
                                    GALGAS_immediatExpressionList & outOperand1,
                                    C_Compiler * inCompiler
                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_dataList * p = (cCollectionElement_dataList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_dataList) ;
    outOperand0 = p->mObject.mAttribute_mDataName ;
    outOperand1 = p->mObject.mAttribute_mValueList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_dataList::method_last (GALGAS_lstring & outOperand0,
                                   GALGAS_immediatExpressionList & outOperand1,
                                   C_Compiler * inCompiler
                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_dataList * p = (cCollectionElement_dataList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_dataList) ;
    outOperand0 = p->mObject.mAttribute_mDataName ;
    outOperand1 = p->mObject.mAttribute_mValueList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dataList GALGAS_dataList::operator_concat (const GALGAS_dataList & inOperand
                                                  COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_dataList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dataList GALGAS_dataList::add_operation (const GALGAS_dataList & inOperand,
                                                C_Compiler * /* inCompiler */
                                                COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_dataList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dataList GALGAS_dataList::reader_subListWithRange (const GALGAS_range & inRange,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_dataList result = GALGAS_dataList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dataList GALGAS_dataList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_dataList result = GALGAS_dataList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_dataList::dotAssign_operation (const GALGAS_dataList inOperand
                                           COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_dataList::reader_mDataNameAtIndex (const GALGAS_uint & inIndex,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_dataList * p = (cCollectionElement_dataList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_dataList) ;
    result = p->mObject.mAttribute_mDataName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatExpressionList GALGAS_dataList::reader_mValueListAtIndex (const GALGAS_uint & inIndex,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_dataList * p = (cCollectionElement_dataList *) attributes.ptr () ;
  GALGAS_immediatExpressionList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_dataList) ;
    result = p->mObject.mAttribute_mValueList ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_dataList::cEnumerator_dataList (const GALGAS_dataList & inEnumeratedObject,
                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dataList_2D_element cEnumerator_dataList::current (LOCATION_ARGS) const {
  const cCollectionElement_dataList * p = (const cCollectionElement_dataList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_dataList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_dataList::current_mDataName (LOCATION_ARGS) const {
  const cCollectionElement_dataList * p = (const cCollectionElement_dataList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_dataList) ;
  return p->mObject.mAttribute_mDataName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_immediatExpressionList cEnumerator_dataList::current_mValueList (LOCATION_ARGS) const {
  const cCollectionElement_dataList * p = (const cCollectionElement_dataList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_dataList) ;
  return p->mObject.mAttribute_mValueList ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                   @dataList type                                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_dataList ("dataList",
                                 NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_dataList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_dataList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_dataList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_dataList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dataList GALGAS_dataList::extractObject (const GALGAS_object & inObject,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  GALGAS_dataList result ;
  const GALGAS_dataList * p = (const GALGAS_dataList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_dataList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("dataList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      Class for element of '@checkpicList' list                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_checkpicList : public cCollectionElement {
  public : GALGAS_checkpicList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_checkpicList (const GALGAS_location & in_mErrorLocation,
                                            const GALGAS_lstringlist & in_mValueList
                                            COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_checkpicList::cCollectionElement_checkpicList (const GALGAS_location & in_mErrorLocation,
                                                                  const GALGAS_lstringlist & in_mValueList
                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mErrorLocation, in_mValueList) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_checkpicList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_checkpicList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_checkpicList (mObject.mAttribute_mErrorLocation, mObject.mAttribute_mValueList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_checkpicList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mErrorLocation" ":" ;
  mObject.mAttribute_mErrorLocation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mValueList" ":" ;
  mObject.mAttribute_mValueList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_checkpicList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_checkpicList * operand = (cCollectionElement_checkpicList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_checkpicList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_checkpicList::GALGAS_checkpicList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_checkpicList::GALGAS_checkpicList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_checkpicList GALGAS_checkpicList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_checkpicList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_checkpicList GALGAS_checkpicList::constructor_listWithValue (const GALGAS_location & inOperand0,
                                                                    const GALGAS_lstringlist & inOperand1
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_checkpicList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_checkpicList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_checkpicList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                     const GALGAS_location & in_mErrorLocation,
                                                     const GALGAS_lstringlist & in_mValueList
                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement_checkpicList * p = NULL ;
  macroMyNew (p, cCollectionElement_checkpicList (in_mErrorLocation,
                                                  in_mValueList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_checkpicList::addAssign_operation (const GALGAS_location & inOperand0,
                                               const GALGAS_lstringlist & inOperand1
                                               COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_checkpicList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_checkpicList::modifier_insertAtIndex (const GALGAS_location inOperand0,
                                                  const GALGAS_lstringlist inOperand1,
                                                  const GALGAS_uint inInsertionIndex,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_checkpicList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_checkpicList::modifier_removeAtIndex (GALGAS_location & outOperand0,
                                                  GALGAS_lstringlist & outOperand1,
                                                  const GALGAS_uint inRemoveIndex,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_checkpicList * p = (cCollectionElement_checkpicList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_checkpicList) ;
      outOperand0 = p->mObject.mAttribute_mErrorLocation ;
      outOperand1 = p->mObject.mAttribute_mValueList ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_checkpicList::modifier_popFirst (GALGAS_location & outOperand0,
                                             GALGAS_lstringlist & outOperand1,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_checkpicList * p = (cCollectionElement_checkpicList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_checkpicList) ;
    outOperand0 = p->mObject.mAttribute_mErrorLocation ;
    outOperand1 = p->mObject.mAttribute_mValueList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_checkpicList::modifier_popLast (GALGAS_location & outOperand0,
                                            GALGAS_lstringlist & outOperand1,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_checkpicList * p = (cCollectionElement_checkpicList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_checkpicList) ;
    outOperand0 = p->mObject.mAttribute_mErrorLocation ;
    outOperand1 = p->mObject.mAttribute_mValueList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_checkpicList::method_first (GALGAS_location & outOperand0,
                                        GALGAS_lstringlist & outOperand1,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_checkpicList * p = (cCollectionElement_checkpicList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_checkpicList) ;
    outOperand0 = p->mObject.mAttribute_mErrorLocation ;
    outOperand1 = p->mObject.mAttribute_mValueList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_checkpicList::method_last (GALGAS_location & outOperand0,
                                       GALGAS_lstringlist & outOperand1,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_checkpicList * p = (cCollectionElement_checkpicList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_checkpicList) ;
    outOperand0 = p->mObject.mAttribute_mErrorLocation ;
    outOperand1 = p->mObject.mAttribute_mValueList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_checkpicList GALGAS_checkpicList::operator_concat (const GALGAS_checkpicList & inOperand
                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_checkpicList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_checkpicList GALGAS_checkpicList::add_operation (const GALGAS_checkpicList & inOperand,
                                                        C_Compiler * /* inCompiler */
                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_checkpicList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_checkpicList GALGAS_checkpicList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_checkpicList result = GALGAS_checkpicList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_checkpicList GALGAS_checkpicList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_checkpicList result = GALGAS_checkpicList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_checkpicList::dotAssign_operation (const GALGAS_checkpicList inOperand
                                               COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_checkpicList::reader_mErrorLocationAtIndex (const GALGAS_uint & inIndex,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_checkpicList * p = (cCollectionElement_checkpicList *) attributes.ptr () ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_checkpicList) ;
    result = p->mObject.mAttribute_mErrorLocation ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_checkpicList::reader_mValueListAtIndex (const GALGAS_uint & inIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_checkpicList * p = (cCollectionElement_checkpicList *) attributes.ptr () ;
  GALGAS_lstringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_checkpicList) ;
    result = p->mObject.mAttribute_mValueList ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_checkpicList::cEnumerator_checkpicList (const GALGAS_checkpicList & inEnumeratedObject,
                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_checkpicList_2D_element cEnumerator_checkpicList::current (LOCATION_ARGS) const {
  const cCollectionElement_checkpicList * p = (const cCollectionElement_checkpicList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_checkpicList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location cEnumerator_checkpicList::current_mErrorLocation (LOCATION_ARGS) const {
  const cCollectionElement_checkpicList * p = (const cCollectionElement_checkpicList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_checkpicList) ;
  return p->mObject.mAttribute_mErrorLocation ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstringlist cEnumerator_checkpicList::current_mValueList (LOCATION_ARGS) const {
  const cCollectionElement_checkpicList * p = (const cCollectionElement_checkpicList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_checkpicList) ;
  return p->mObject.mAttribute_mValueList ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                 @checkpicList type                                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_checkpicList ("checkpicList",
                                     NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_checkpicList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_checkpicList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_checkpicList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_checkpicList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_checkpicList GALGAS_checkpicList::extractObject (const GALGAS_object & inObject,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  GALGAS_checkpicList result ;
  const GALGAS_checkpicList * p = (const GALGAS_checkpicList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_checkpicList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("checkpicList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_dataMap::cMapElement_dataMap (const GALGAS_lstring & inKey,
                                          const GALGAS_uint & in_mDataSize
                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mDataSize (in_mDataSize) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_dataMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mDataSize.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_dataMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_dataMap (mAttribute_lkey, mAttribute_mDataSize COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_dataMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDataSize" ":" ;
  mAttribute_mDataSize.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_dataMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_dataMap * operand = (cMapElement_dataMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mDataSize.objectCompare (operand->mAttribute_mDataSize) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dataMap::GALGAS_dataMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dataMap::GALGAS_dataMap (const GALGAS_dataMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dataMap & GALGAS_dataMap::operator = (const GALGAS_dataMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dataMap GALGAS_dataMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_dataMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dataMap GALGAS_dataMap::constructor_mapWithMapToOverride (const GALGAS_dataMap & inMapToOverride
                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_dataMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dataMap GALGAS_dataMap::reader_overriddenMap (C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_dataMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_dataMap::addAssign_operation (const GALGAS_lstring & inKey,
                                          const GALGAS_uint & inArgument0,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) {
  cMapElement_dataMap * p = NULL ;
  macroMyNew (p, cMapElement_dataMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@dataMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_dataMap::modifier_insertKey (GALGAS_lstring inKey,
                                         GALGAS_uint inArgument0,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) {
  cMapElement_dataMap * p = NULL ;
  macroMyNew (p, cMapElement_dataMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' data is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_dataMap_searchKey = "the '%K' data is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_dataMap::method_searchKey (GALGAS_lstring inKey,
                                       GALGAS_uint & outArgument0,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) const {
  const cMapElement_dataMap * p = (const cMapElement_dataMap *) performSearch (inKey,
                                                                                 inCompiler,
                                                                                 kSearchErrorMessage_dataMap_searchKey
                                                                                 COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_dataMap) ;
    outArgument0 = p->mAttribute_mDataSize ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_dataMap::reader_mDataSizeForKey (const GALGAS_string & inKey,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_dataMap * p = (const cMapElement_dataMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_dataMap) ;
    result = p->mAttribute_mDataSize ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_dataMap::modifier_setMDataSizeForKey (GALGAS_uint inAttributeValue,
                                                  GALGAS_string inKey,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_dataMap * p = (cMapElement_dataMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_dataMap) ;
    p->mAttribute_mDataSize = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_dataMap * GALGAS_dataMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                         const GALGAS_string & inKey
                                                                         COMMA_LOCATION_ARGS) {
  cMapElement_dataMap * result = (cMapElement_dataMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_dataMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_dataMap::cEnumerator_dataMap (const GALGAS_dataMap & inEnumeratedObject,
                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dataMap_2D_element cEnumerator_dataMap::current (LOCATION_ARGS) const {
  const cMapElement_dataMap * p = (const cMapElement_dataMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_dataMap) ;
  return GALGAS_dataMap_2D_element (p->mAttribute_lkey, p->mAttribute_mDataSize) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_dataMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_dataMap::current_mDataSize (LOCATION_ARGS) const {
  const cMapElement_dataMap * p = (const cMapElement_dataMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_dataMap) ;
  return p->mAttribute_mDataSize ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                    @dataMap type                                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_dataMap ("dataMap",
                                NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_dataMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_dataMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_dataMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_dataMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dataMap GALGAS_dataMap::extractObject (const GALGAS_object & inObject,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  GALGAS_dataMap result ;
  const GALGAS_dataMap * p = (const GALGAS_dataMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_dataMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("dataMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_body_i0_ (GALGAS_pic_31__38_InterruptDefinitionList & ioArgument_interruptDefinitionList,
                                                                         GALGAS_pic_31__38_RoutineDefinitionList & ioArgument_routineDefinitionList,
                                                                         GALGAS_lstringlist & ioArgument_unusedRoutineList,
                                                                         GALGAS_lstringlist & ioArgument_inlinedRoutineList,
                                                                         GALGAS_ramDefinitionList & ioArgument_ramDefinitionList,
                                                                         GALGAS_lstringlist & ioArgument_unusedRegisterList,
                                                                         GALGAS_configDefinitionList & ioArgument_configDefinitionList,
                                                                         GALGAS_constantDefinitionList & ioArgument_constantDefinitionList,
                                                                         GALGAS_checkpicList & ioArgument_ioCheckpicList,
                                                                         GALGAS_dataList & ioArgument_dataList,
                                                                         GALGAS_bool & ioArgument_needsComputedGoto_32_,
                                                                         GALGAS_bool & ioArgument_needsComputedGoto_34_,
                                                                         C_Lexique_piccolo_5F_lexique * inCompiler) {
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_pic_31__38__5F_syntax_0 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mark) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 43)) ;
      GALGAS_lstring var_s = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 44)) ;
      GALGAS_location location_1 (var_s.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticWarning (location_1, GALGAS_string ("obsolete construct: use a comment beginning by #!")  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 45)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_unused) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 47)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_byte) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 48)) ;
      bool repeatFlag_2 = true ;
      while (repeatFlag_2) {
        GALGAS_lstring var_unusedRegister = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 50)) ;
        ioArgument_unusedRegisterList.addAssign_operation (var_unusedRegister  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 51)) ;
        switch (select_pic_31__38__5F_syntax_1 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 53)) ;
        } break ;
        default:
          repeatFlag_2 = false ;
          break ;
        }
      }
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_unused) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 56)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 57)) ;
      bool repeatFlag_3 = true ;
      while (repeatFlag_3) {
        GALGAS_lstring var_unusedRoutine = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 59)) ;
        ioArgument_unusedRoutineList.addAssign_operation (var_unusedRoutine  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 60)) ;
        switch (select_pic_31__38__5F_syntax_2 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 62)) ;
        } break ;
        default:
          repeatFlag_3 = false ;
          break ;
        }
      }
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_inline) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 65)) ;
      bool repeatFlag_4 = true ;
      while (repeatFlag_4) {
        GALGAS_lstring var_inlinedRoutine = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 67)) ;
        ioArgument_inlinedRoutineList.addAssign_operation (var_inlinedRoutine  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 68)) ;
        switch (select_pic_31__38__5F_syntax_3 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 70)) ;
        } break ;
        default:
          repeatFlag_4 = false ;
          break ;
        }
      }
    } break ;
    case 6: {
      nt_configuration_5F_definition_ (ioArgument_configDefinitionList, inCompiler) ;
    } break ;
    case 7: {
      nt_ram_5F_definition_ (ioArgument_ramDefinitionList, inCompiler) ;
    } break ;
    case 8: {
      nt_constant_5F_definition_ (ioArgument_constantDefinitionList, inCompiler) ;
    } break ;
    case 9: {
      nt_interrupt_5F_definition_ (ioArgument_interruptDefinitionList, ioArgument_needsComputedGoto_32_, ioArgument_needsComputedGoto_34_, inCompiler) ;
    } break ;
    case 10: {
      nt_routine_5F_definition_ (ioArgument_routineDefinitionList, ioArgument_needsComputedGoto_32_, ioArgument_needsComputedGoto_34_, inCompiler) ;
    } break ;
    case 11: {
      nt_data_5F_definition_ (ioArgument_dataList, inCompiler) ;
    } break ;
    case 12: {
      nt_checkpic_5F_definition_ (ioArgument_ioCheckpicList, inCompiler) ;
    } break ;
    case 13: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_include) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 93)) ;
      GALGAS_lstring var_includedFilePath = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 94)) ;
      cGrammar_pic_31__38__5F_include_5F_grammar::_performSourceFileParsing_ (inCompiler, var_includedFilePath, ioArgument_interruptDefinitionList, ioArgument_routineDefinitionList, ioArgument_unusedRoutineList, ioArgument_inlinedRoutineList, ioArgument_ramDefinitionList, ioArgument_unusedRegisterList, ioArgument_configDefinitionList, ioArgument_constantDefinitionList, ioArgument_ioCheckpicList, ioArgument_dataList, ioArgument_needsComputedGoto_32_, ioArgument_needsComputedGoto_34_  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 95)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_body_i0_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_pic_31__38__5F_syntax_0 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mark) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 43)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 44)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_unused) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 47)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_byte) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 48)) ;
      bool repeatFlag_1 = true ;
      while (repeatFlag_1) {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 50)) ;
        switch (select_pic_31__38__5F_syntax_1 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 53)) ;
        } break ;
        default:
          repeatFlag_1 = false ;
          break ;
        }
      }
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_unused) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 56)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 57)) ;
      bool repeatFlag_2 = true ;
      while (repeatFlag_2) {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 59)) ;
        switch (select_pic_31__38__5F_syntax_2 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 62)) ;
        } break ;
        default:
          repeatFlag_2 = false ;
          break ;
        }
      }
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_inline) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 65)) ;
      bool repeatFlag_3 = true ;
      while (repeatFlag_3) {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 67)) ;
        switch (select_pic_31__38__5F_syntax_3 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 70)) ;
        } break ;
        default:
          repeatFlag_3 = false ;
          break ;
        }
      }
    } break ;
    case 6: {
      nt_configuration_5F_definition_parse (inCompiler) ;
    } break ;
    case 7: {
      nt_ram_5F_definition_parse (inCompiler) ;
    } break ;
    case 8: {
      nt_constant_5F_definition_parse (inCompiler) ;
    } break ;
    case 9: {
      nt_interrupt_5F_definition_parse (inCompiler) ;
    } break ;
    case 10: {
      nt_routine_5F_definition_parse (inCompiler) ;
    } break ;
    case 11: {
      nt_data_5F_definition_parse (inCompiler) ;
    } break ;
    case 12: {
      nt_checkpic_5F_definition_parse (inCompiler) ;
    } break ;
    case 13: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_include) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 93)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 94)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_body_i0_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_pic_31__38__5F_syntax_0 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mark) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 43)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 44)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_unused) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 47)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_byte) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 48)) ;
      bool repeatFlag_1 = true ;
      while (repeatFlag_1) {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 50)) ;
        switch (select_pic_31__38__5F_syntax_1 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 53)) ;
        } break ;
        default:
          repeatFlag_1 = false ;
          break ;
        }
      }
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_unused) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 56)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 57)) ;
      bool repeatFlag_2 = true ;
      while (repeatFlag_2) {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 59)) ;
        switch (select_pic_31__38__5F_syntax_2 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 62)) ;
        } break ;
        default:
          repeatFlag_2 = false ;
          break ;
        }
      }
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_inline) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 65)) ;
      bool repeatFlag_3 = true ;
      while (repeatFlag_3) {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 67)) ;
        switch (select_pic_31__38__5F_syntax_3 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 70)) ;
        } break ;
        default:
          repeatFlag_3 = false ;
          break ;
        }
      }
    } break ;
    case 6: {
      nt_configuration_5F_definition_indexing (inCompiler) ;
    } break ;
    case 7: {
      nt_ram_5F_definition_indexing (inCompiler) ;
    } break ;
    case 8: {
      nt_constant_5F_definition_indexing (inCompiler) ;
    } break ;
    case 9: {
      nt_interrupt_5F_definition_indexing (inCompiler) ;
    } break ;
    case 10: {
      nt_routine_5F_definition_indexing (inCompiler) ;
    } break ;
    case 11: {
      nt_data_5F_definition_indexing (inCompiler) ;
    } break ;
    case 12: {
      nt_checkpic_5F_definition_indexing (inCompiler) ;
    } break ;
    case 13: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_include) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 93)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 94)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_checkpic_5F_definition_i1_ (GALGAS_checkpicList & ioArgument_ioList,
                                                                                           C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_checkpic) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 115)) ;
  GALGAS_location var_loc = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 116)) ;
  GALGAS_lstringlist var_valueList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE ("pic18_syntax.galgas", 117)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    GALGAS_lstring var_s = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 119)) ;
    var_valueList.addAssign_operation (var_s  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 120)) ;
    switch (select_pic_31__38__5F_syntax_4 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 122)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  ioArgument_ioList.addAssign_operation (var_loc, var_valueList  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 124)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_checkpic_5F_definition_i1_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_checkpic) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 115)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 119)) ;
    switch (select_pic_31__38__5F_syntax_4 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 122)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_checkpic_5F_definition_i1_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_checkpic) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 115)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 119)) ;
    switch (select_pic_31__38__5F_syntax_4 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 122)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_data_5F_definition_i2_ (GALGAS_dataList & ioArgument_ioDataList,
                                                                                       C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_data) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 131)) ;
  GALGAS_lstring var_dataName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 132)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 133)) ;
  GALGAS_immediatExpressionList var_valueList = GALGAS_immediatExpressionList::constructor_emptyList (SOURCE_FILE ("pic18_syntax.galgas", 134)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    GALGAS_immediatExpression var_expression ;
    nt_immediate_5F_expression_ (var_expression, inCompiler) ;
    var_valueList.addAssign_operation (var_expression, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 138))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 138)) ;
    switch (select_pic_31__38__5F_syntax_5 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 140)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 142)) ;
  ioArgument_ioDataList.addAssign_operation (var_dataName, var_valueList  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 143)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_data_5F_definition_i2_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_data) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 131)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 132)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 133)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    nt_immediate_5F_expression_parse (inCompiler) ;
    switch (select_pic_31__38__5F_syntax_5 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 140)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 142)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_data_5F_definition_i2_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_data) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 131)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 132)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 133)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    nt_immediate_5F_expression_indexing (inCompiler) ;
    switch (select_pic_31__38__5F_syntax_5 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 140)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 142)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_instruction_5F_list_i3_ (GALGAS_pic_31__38_InstructionList & outArgument_outInstructionList,
                                                                                        GALGAS_bool & ioArgument_ioNeedsComputedGoto_32_,
                                                                                        GALGAS_bool & ioArgument_ioNeedsComputedGoto_34_,
                                                                                        C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outInstructionList.drop () ; // Release 'out' argument
  outArgument_outInstructionList = GALGAS_pic_31__38_InstructionList::constructor_emptyList (SOURCE_FILE ("pic18_syntax.galgas", 152)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_pic_31__38__5F_syntax_6 (inCompiler)) {
    case 2: {
      GALGAS_pic_31__38_PiccoloSimpleInstruction var_instruction ;
      nt_simple_5F_instruction_ (var_instruction, inCompiler) ;
      outArgument_outInstructionList.addAssign_operation (var_instruction  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 156)) ;
    } break ;
    case 3: {
      GALGAS_pic_31__38_PiccoloInstruction var_instruction ;
      nt_structured_5F_instruction_ (var_instruction, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
      outArgument_outInstructionList.addAssign_operation (var_instruction  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 163)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_instruction_5F_list_i3_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_pic_31__38__5F_syntax_6 (inCompiler)) {
    case 2: {
      nt_simple_5F_instruction_parse (inCompiler) ;
    } break ;
    case 3: {
      nt_structured_5F_instruction_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_instruction_5F_list_i3_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_pic_31__38__5F_syntax_6 (inCompiler)) {
    case 2: {
      nt_simple_5F_instruction_indexing (inCompiler) ;
    } break ;
    case 3: {
      nt_structured_5F_instruction_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_interrupt_5F_definition_i4_ (GALGAS_pic_31__38_InterruptDefinitionList & ioArgument_ioInterruptDefinitionList,
                                                                                            GALGAS_bool & ioArgument_ioNeedsComputedGoto_32_,
                                                                                            GALGAS_bool & ioArgument_ioNeedsComputedGoto_34_,
                                                                                            C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_interrupt) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 173)) ;
  GALGAS_lstring var_interruptName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 174)) ;
  GALGAS_bool var_isFast ;
  switch (select_pic_31__38__5F_syntax_7 (inCompiler)) {
  case 1: {
    var_isFast = GALGAS_bool (false) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_fast) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 179)) ;
    var_isFast = GALGAS_bool (true) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 182)) ;
  GALGAS_pic_31__38_InstructionList var_instructionList ;
  nt_instruction_5F_list_ (var_instructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 188)) ;
  ioArgument_ioInterruptDefinitionList.addAssign_operation (var_interruptName, var_isFast, var_instructionList, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 189))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 189)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_interrupt_5F_definition_i4_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_interrupt) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 173)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 174)) ;
  switch (select_pic_31__38__5F_syntax_7 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_fast) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 179)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 182)) ;
  nt_instruction_5F_list_parse (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 188)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_interrupt_5F_definition_i4_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_interrupt) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 173)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 174)) ;
  switch (select_pic_31__38__5F_syntax_7 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_fast) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 179)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 182)) ;
  nt_instruction_5F_list_indexing (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 188)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_routine_5F_definition_i5_ (GALGAS_pic_31__38_RoutineDefinitionList & ioArgument_ioRoutineDefinitionList,
                                                                                          GALGAS_bool & ioArgument_ioNeedsComputedGoto_32_,
                                                                                          GALGAS_bool & ioArgument_ioNeedsComputedGoto_34_,
                                                                                          C_Lexique_piccolo_5F_lexique * inCompiler) {
  GALGAS_bool var_noreturn ;
  switch (select_pic_31__38__5F_syntax_8 (inCompiler)) {
  case 1: {
    var_noreturn = GALGAS_bool (false) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_noreturn) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 202)) ;
    var_noreturn = GALGAS_bool (true) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 205)) ;
  GALGAS_lstring var_routineName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineDefinition) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 206)) ;
  GALGAS_luint var_requiredBank ;
  GALGAS_luint var_returnedBank ;
  GALGAS_bool var_preservesBank ;
  switch (select_pic_31__38__5F_syntax_9 (inCompiler)) {
  case 1: {
    var_requiredBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("pic18_syntax.galgas", 211)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 211))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 211)) ;
    var_returnedBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("pic18_syntax.galgas", 212)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 212))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 212)) ;
    var_preservesBank = GALGAS_bool (false) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bank) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 215)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 216)) ;
    switch (select_pic_31__38__5F_syntax_10 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_preserved) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 218)) ;
      const enumGalgasBool test_0 = var_noreturn.boolEnum () ;
      if (kBoolTrue == test_0) {
        inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 220)), GALGAS_string ("a \"noreturn\" routine cannot accept \"bank:preserved\" setting")  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 220)) ;
      }
      var_preservesBank = GALGAS_bool (true) ;
      var_requiredBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("pic18_syntax.galgas", 223)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 223))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 223)) ;
      var_returnedBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("pic18_syntax.galgas", 224)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 224))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 224)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_requires) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 226)) ;
      var_requiredBank = inCompiler->synthetizedAttribute_uint_33__32_value () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 227)) ;
      var_preservesBank = GALGAS_bool (false) ;
      switch (select_pic_31__38__5F_syntax_11 (inCompiler)) {
      case 1: {
        var_returnedBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("pic18_syntax.galgas", 230)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 230))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 230)) ;
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 232)) ;
        var_returnedBank = inCompiler->synthetizedAttribute_uint_33__32_value () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 233)) ;
        const enumGalgasBool test_1 = var_noreturn.boolEnum () ;
        if (kBoolTrue == test_1) {
          inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 235)), GALGAS_string ("a \"noreturn\" routine cannot accept \"bank:returned\" setting")  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 235)) ;
        }
      } break ;
      default:
        break ;
      }
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 239)) ;
      var_returnedBank = inCompiler->synthetizedAttribute_uint_33__32_value () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 240)) ;
      const enumGalgasBool test_2 = var_noreturn.boolEnum () ;
      if (kBoolTrue == test_2) {
        inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 242)), GALGAS_string ("a \"noreturn\" routine cannot accept \"bank:returned\" setting")  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 242)) ;
      }
      var_preservesBank = GALGAS_bool (false) ;
      var_requiredBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("pic18_syntax.galgas", 245)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 245))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 245)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 248)) ;
  GALGAS_pic_31__38_InstructionList var_instructionList ;
  nt_instruction_5F_list_ (var_instructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 254)) ;
  ioArgument_ioRoutineDefinitionList.addAssign_operation (var_routineName, var_requiredBank, var_returnedBank, var_preservesBank, var_noreturn, var_instructionList, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 255))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 255)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_routine_5F_definition_i5_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_pic_31__38__5F_syntax_8 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_noreturn) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 202)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 205)) ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineDefinition) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 206)) ;
  switch (select_pic_31__38__5F_syntax_9 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bank) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 215)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 216)) ;
    switch (select_pic_31__38__5F_syntax_10 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_preserved) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 218)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_requires) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 226)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 227)) ;
      switch (select_pic_31__38__5F_syntax_11 (inCompiler)) {
      case 1: {
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 232)) ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 233)) ;
      } break ;
      default:
        break ;
      }
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 239)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 240)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 248)) ;
  nt_instruction_5F_list_parse (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 254)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_routine_5F_definition_i5_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_pic_31__38__5F_syntax_8 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_noreturn) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 202)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 205)) ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineDefinition) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 206)) ;
  switch (select_pic_31__38__5F_syntax_9 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bank) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 215)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 216)) ;
    switch (select_pic_31__38__5F_syntax_10 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_preserved) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 218)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_requires) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 226)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 227)) ;
      switch (select_pic_31__38__5F_syntax_11 (inCompiler)) {
      case 1: {
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 232)) ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 233)) ;
      } break ;
      default:
        break ;
      }
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 239)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 240)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 248)) ;
  nt_instruction_5F_list_indexing (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 254)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_condition_5F_factor_i6_ (GALGAS_pic_31__38_ConditionExpression & outArgument_outCondition,
                                                                                        C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 262)) ;
  GALGAS_pic_31__38_ConditionExpression var_condition ;
  nt_condition_5F_factor_ (var_condition, inCompiler) ;
  outArgument_outCondition = GALGAS_pic_31__38_NegateCondition::constructor_new (var_condition  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 265)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_condition_5F_factor_i6_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 262)) ;
  nt_condition_5F_factor_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_condition_5F_factor_i6_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 262)) ;
  nt_condition_5F_factor_indexing (inCompiler) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_condition_5F_factor_i7_ (GALGAS_pic_31__38_ConditionExpression & outArgument_outCondition,
                                                                                        C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  nt_condition_5F_expression_ (outArgument_outCondition, inCompiler) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_condition_5F_factor_i7_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_condition_5F_expression_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_condition_5F_factor_i7_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_condition_5F_expression_indexing (inCompiler) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_condition_5F_factor_i8_ (GALGAS_pic_31__38_ConditionExpression & outArgument_outCondition,
                                                                                        C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  switch (select_pic_31__38__5F_syntax_12 (inCompiler)) {
  case 1: {
    GALGAS_bool var_isIncrement ;
    switch (select_pic_31__38__5F_syntax_13 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 282)) ;
      var_isIncrement = GALGAS_bool (true) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 284)) ;
      var_isIncrement = GALGAS_bool (false) ;
    } break ;
    default:
      break ;
    }
    GALGAS_registerExpression var_registerExpression ;
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    GALGAS_bool var_W_5F_isDestination ;
    switch (select_pic_31__38__5F_syntax_14 (inCompiler)) {
    case 1: {
      var_W_5F_isDestination = GALGAS_bool (false) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 292)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 292)) ;
      var_W_5F_isDestination = GALGAS_bool (true) ;
    } break ;
    default:
      break ;
    }
    GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 294)) ;
    GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE ("pic18_syntax.galgas", 295)).reader_uppercaseString (SOURCE_FILE ("pic18_syntax.galgas", 295)) ;
    GALGAS_bool var_branchIfZero ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("Z"))).boolEnum () ;
    if (kBoolTrue == test_0) {
      var_branchIfZero = GALGAS_bool (true) ;
    }else if (kBoolFalse == test_0) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_branchIfZero = GALGAS_bool (false) ;
      }else if (kBoolFalse == test_1) {
        GALGAS_location location_2 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_2, GALGAS_string ("invalid '").add_operation (var_conditionString.reader_string (SOURCE_FILE ("pic18_syntax.galgas", 302)), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 302)).add_operation (GALGAS_string ("' condition; valid ones are: 'z' and 'nz'"), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 302))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 302)) ;
        var_branchIfZero.drop () ; // Release error dropped variable
      }
    }
    outArgument_outCondition = GALGAS_pic_31__38_IncDecRegisterInCondition::constructor_new (var_registerExpression, var_isIncrement, var_W_5F_isDestination, var_branchIfZero  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 306)) ;
  } break ;
  case 2: {
    GALGAS_registerExpression var_registerExpression ;
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    GALGAS_pic_31__38_RegisterComparison var_comparison ;
    switch (select_pic_31__38__5F_syntax_15 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21__3D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 316)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 316)) ;
      var_comparison = GALGAS_pic_31__38_RegisterComparison::constructor_notEqual (SOURCE_FILE ("pic18_syntax.galgas", 316)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D__3D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 318)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 318)) ;
      var_comparison = GALGAS_pic_31__38_RegisterComparison::constructor_equal (SOURCE_FILE ("pic18_syntax.galgas", 318)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 320)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 320)) ;
      var_comparison = GALGAS_pic_31__38_RegisterComparison::constructor_lowerOrEqual (SOURCE_FILE ("pic18_syntax.galgas", 320)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 322)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 322)) ;
      var_comparison = GALGAS_pic_31__38_RegisterComparison::constructor_greaterOrEqual (SOURCE_FILE ("pic18_syntax.galgas", 322)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 324)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 324)) ;
      var_comparison = GALGAS_pic_31__38_RegisterComparison::constructor_lower (SOURCE_FILE ("pic18_syntax.galgas", 324)) ;
    } break ;
    case 6: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 326)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 326)) ;
      var_comparison = GALGAS_pic_31__38_RegisterComparison::constructor_greater (SOURCE_FILE ("pic18_syntax.galgas", 326)) ;
    } break ;
    default:
      break ;
    }
    outArgument_outCondition = GALGAS_pic_31__38_RegisterComparisonCondition::constructor_new (var_registerExpression, var_comparison  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 328)) ;
  } break ;
  case 3: {
    GALGAS_registerExpression var_registerExpression ;
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 334)) ;
    GALGAS_bitNumberExpression var_bitNumberExpression ;
    nt_bit_5F_number_5F_parsing_ (var_bitNumberExpression, inCompiler) ;
    GALGAS_bool var_BTFSSinstruction ;
    switch (select_pic_31__38__5F_syntax_16 (inCompiler)) {
    case 1: {
      var_BTFSSinstruction = GALGAS_bool (false) ;
    } break ;
    case 2: {
      GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 341)) ;
      GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE ("pic18_syntax.galgas", 342)).reader_uppercaseString (SOURCE_FILE ("pic18_syntax.galgas", 342)) ;
      const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("Z"))).boolEnum () ;
      if (kBoolTrue == test_3) {
        var_BTFSSinstruction = GALGAS_bool (true) ;
        GALGAS_string var_s = GALGAS_string ("! ").add_operation (var_registerExpression.reader_mRegisterName (SOURCE_FILE ("pic18_syntax.galgas", 345)).reader_string (SOURCE_FILE ("pic18_syntax.galgas", 345)), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 345)) ;
        const enumGalgasBool test_4 = GALGAS_bool (kIsStrictSup, var_registerExpression.reader_mOffset (SOURCE_FILE ("pic18_syntax.galgas", 346)).reader_uint (SOURCE_FILE ("pic18_syntax.galgas", 346)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
        if (kBoolTrue == test_4) {
          var_s.dotAssign_operation (GALGAS_string (" [").add_operation (var_registerExpression.reader_mOffset (SOURCE_FILE ("pic18_syntax.galgas", 347)).reader_uint (SOURCE_FILE ("pic18_syntax.galgas", 347)).reader_string (SOURCE_FILE ("pic18_syntax.galgas", 347)), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 347)).add_operation (GALGAS_string ("]"), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 347))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 347)) ;
        }
        var_s.dotAssign_operation (GALGAS_string (".")  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 349)) ;
        callCategoryMethod_display ((const cPtr_bitNumberExpression *) var_bitNumberExpression.ptr (), var_s, inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 349)) ;
        GALGAS_location location_5 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticWarning (location_5, GALGAS_string ("In Piccolo 1.2.0 and later, this construction is deprecated; use '").add_operation (var_s, inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 350)).add_operation (GALGAS_string ("' instead"), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 350))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 350)) ;
      }else if (kBoolFalse == test_3) {
        const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).boolEnum () ;
        if (kBoolTrue == test_6) {
          var_BTFSSinstruction = GALGAS_bool (false) ;
          GALGAS_string var_s = var_registerExpression.reader_mRegisterName (SOURCE_FILE ("pic18_syntax.galgas", 353)).reader_string (SOURCE_FILE ("pic18_syntax.galgas", 353)) ;
          const enumGalgasBool test_7 = GALGAS_bool (kIsStrictSup, var_registerExpression.reader_mOffset (SOURCE_FILE ("pic18_syntax.galgas", 354)).reader_uint (SOURCE_FILE ("pic18_syntax.galgas", 354)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
          if (kBoolTrue == test_7) {
            var_s.dotAssign_operation (GALGAS_string (" [").add_operation (var_registerExpression.reader_mOffset (SOURCE_FILE ("pic18_syntax.galgas", 355)).reader_uint (SOURCE_FILE ("pic18_syntax.galgas", 355)).reader_string (SOURCE_FILE ("pic18_syntax.galgas", 355)), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 355)).add_operation (GALGAS_string ("]"), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 355))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 355)) ;
          }
          var_s.dotAssign_operation (GALGAS_string (".")  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 357)) ;
          callCategoryMethod_display ((const cPtr_bitNumberExpression *) var_bitNumberExpression.ptr (), var_s, inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 357)) ;
          GALGAS_location location_8 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticWarning (location_8, GALGAS_string ("In Piccolo 1.2.0 and later, this construction is deprecated; use '").add_operation (var_s, inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 358)).add_operation (GALGAS_string ("' instead"), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 358))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 358)) ;
        }else if (kBoolFalse == test_6) {
          GALGAS_location location_9 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_9, GALGAS_string ("invalid '").add_operation (var_conditionString.reader_string (SOURCE_FILE ("pic18_syntax.galgas", 360)), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 360)).add_operation (GALGAS_string ("' condition; valid ones are: 'z' and 'nz'"), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 360))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 360)) ;
          var_BTFSSinstruction.drop () ; // Release error dropped variable
        }
      }
    } break ;
    default:
      break ;
    }
    outArgument_outCondition = GALGAS_pic_31__38_BitTestInStructuredCondition::constructor_new (var_registerExpression, var_bitNumberExpression, var_BTFSSinstruction  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 365)) ;
  } break ;
  case 4: {
    GALGAS_registerExpression var_registerName ;
    nt_register_5F_parsing_ (var_registerName, inCompiler) ;
    GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 372)) ;
    GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE ("pic18_syntax.galgas", 373)).reader_uppercaseString (SOURCE_FILE ("pic18_syntax.galgas", 373)) ;
    GALGAS_bool var_branchIfZero ;
    const enumGalgasBool test_10 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("Z"))).boolEnum () ;
    if (kBoolTrue == test_10) {
      var_branchIfZero = GALGAS_bool (true) ;
    }else if (kBoolFalse == test_10) {
      const enumGalgasBool test_11 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).boolEnum () ;
      if (kBoolTrue == test_11) {
        var_branchIfZero = GALGAS_bool (false) ;
      }else if (kBoolFalse == test_11) {
        GALGAS_location location_12 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_12, GALGAS_string ("invalid '").add_operation (var_conditionString.reader_string (SOURCE_FILE ("pic18_syntax.galgas", 380)), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 380)).add_operation (GALGAS_string ("' condition; valid ones are: 'z' and 'nz'"), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 380))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 380)) ;
        var_branchIfZero.drop () ; // Release error dropped variable
      }
    }
    outArgument_outCondition = GALGAS_pic_31__38_RegisterTestCondition::constructor_new (var_registerName, var_branchIfZero  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 384)) ;
  } break ;
  case 5: {
    GALGAS_conditional_5F_branch var_conditional_5F_branch ;
    GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 387)) ;
    GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE ("pic18_syntax.galgas", 388)).reader_uppercaseString (SOURCE_FILE ("pic18_syntax.galgas", 388)) ;
    const enumGalgasBool test_13 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("Z"))).boolEnum () ;
    if (kBoolTrue == test_13) {
      var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bz (SOURCE_FILE ("pic18_syntax.galgas", 390)) ;
    }else if (kBoolFalse == test_13) {
      const enumGalgasBool test_14 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).boolEnum () ;
      if (kBoolTrue == test_14) {
        var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bnz (SOURCE_FILE ("pic18_syntax.galgas", 392)) ;
      }else if (kBoolFalse == test_14) {
        const enumGalgasBool test_15 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NN"))).boolEnum () ;
        if (kBoolTrue == test_15) {
          var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bnn (SOURCE_FILE ("pic18_syntax.galgas", 394)) ;
        }else if (kBoolFalse == test_15) {
          const enumGalgasBool test_16 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("N"))).boolEnum () ;
          if (kBoolTrue == test_16) {
            var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bn (SOURCE_FILE ("pic18_syntax.galgas", 396)) ;
          }else if (kBoolFalse == test_16) {
            const enumGalgasBool test_17 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("C"))).boolEnum () ;
            if (kBoolTrue == test_17) {
              var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bc (SOURCE_FILE ("pic18_syntax.galgas", 398)) ;
            }else if (kBoolFalse == test_17) {
              const enumGalgasBool test_18 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NC"))).boolEnum () ;
              if (kBoolTrue == test_18) {
                var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bnc (SOURCE_FILE ("pic18_syntax.galgas", 400)) ;
              }else if (kBoolFalse == test_18) {
                const enumGalgasBool test_19 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("OV"))).boolEnum () ;
                if (kBoolTrue == test_19) {
                  var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bov (SOURCE_FILE ("pic18_syntax.galgas", 402)) ;
                }else if (kBoolFalse == test_19) {
                  const enumGalgasBool test_20 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NOV"))).boolEnum () ;
                  if (kBoolTrue == test_20) {
                    var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bnov (SOURCE_FILE ("pic18_syntax.galgas", 404)) ;
                  }else if (kBoolFalse == test_20) {
                    GALGAS_location location_21 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
                    inCompiler->emitSemanticError (location_21, GALGAS_string ("invalid '").add_operation (var_conditionString.reader_string (SOURCE_FILE ("pic18_syntax.galgas", 406)), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 406)).add_operation (GALGAS_string ("' condition; valid ones are: 'z', 'nz', 'n', 'nn', 'c', 'nc', 'ov' and 'nov'"), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 406))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 406)) ;
                    var_conditional_5F_branch.drop () ; // Release error dropped variable
                  }
                }
              }
            }
          }
        }
      }
    }
    outArgument_outCondition = GALGAS_pic_31__38_BccInStructuredCondition::constructor_new (var_conditionString.mAttribute_location, var_conditional_5F_branch  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 410)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_condition_5F_factor_i8_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_pic_31__38__5F_syntax_12 (inCompiler)) {
  case 1: {
    switch (select_pic_31__38__5F_syntax_13 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 282)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 284)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_parse (inCompiler) ;
    switch (select_pic_31__38__5F_syntax_14 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 292)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 292)) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 294)) ;
  } break ;
  case 2: {
    nt_register_5F_parsing_parse (inCompiler) ;
    switch (select_pic_31__38__5F_syntax_15 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21__3D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 316)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 316)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D__3D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 318)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 318)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 320)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 320)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 322)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 322)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 324)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 324)) ;
    } break ;
    case 6: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 326)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 326)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 3: {
    nt_register_5F_parsing_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 334)) ;
    nt_bit_5F_number_5F_parsing_parse (inCompiler) ;
    switch (select_pic_31__38__5F_syntax_16 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 341)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 4: {
    nt_register_5F_parsing_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 372)) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 387)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_condition_5F_factor_i8_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_pic_31__38__5F_syntax_12 (inCompiler)) {
  case 1: {
    switch (select_pic_31__38__5F_syntax_13 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 282)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 284)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_indexing (inCompiler) ;
    switch (select_pic_31__38__5F_syntax_14 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 292)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 292)) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 294)) ;
  } break ;
  case 2: {
    nt_register_5F_parsing_indexing (inCompiler) ;
    switch (select_pic_31__38__5F_syntax_15 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21__3D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 316)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 316)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D__3D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 318)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 318)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 320)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 320)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 322)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 322)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 324)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 324)) ;
    } break ;
    case 6: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 326)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 326)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 3: {
    nt_register_5F_parsing_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 334)) ;
    nt_bit_5F_number_5F_parsing_indexing (inCompiler) ;
    switch (select_pic_31__38__5F_syntax_16 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 341)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 4: {
    nt_register_5F_parsing_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 372)) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 387)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_condition_5F_expression_i9_ (GALGAS_pic_31__38_ConditionExpression & outArgument_outCondition,
                                                                                            C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 418)) ;
  nt_condition_5F_term_ (outArgument_outCondition, inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_pic_31__38__5F_syntax_17 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 422)) ;
      GALGAS_pic_31__38_ConditionExpression var_c ;
      nt_condition_5F_term_ (var_c, inCompiler) ;
      GALGAS_pic_31__38_ConditionExpression var_rc = GALGAS_pic_31__38_NegateCondition::constructor_new (var_c  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 425)) ;
      GALGAS_pic_31__38_ConditionExpression var_lc = GALGAS_pic_31__38_NegateCondition::constructor_new (outArgument_outCondition  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 426)) ;
      outArgument_outCondition = GALGAS_pic_31__38_NegateCondition::constructor_new (GALGAS_pic_31__38_AndCondition::constructor_new (var_lc, var_rc  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 427))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 427)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 429)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_condition_5F_expression_i9_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 418)) ;
  nt_condition_5F_term_parse (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_pic_31__38__5F_syntax_17 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 422)) ;
      nt_condition_5F_term_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 429)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_condition_5F_expression_i9_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 418)) ;
  nt_condition_5F_term_indexing (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_pic_31__38__5F_syntax_17 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 422)) ;
      nt_condition_5F_term_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 429)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_condition_5F_term_i10_ (GALGAS_pic_31__38_ConditionExpression & outArgument_outCondition,
                                                                                       C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  nt_condition_5F_factor_ (outArgument_outCondition, inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_pic_31__38__5F_syntax_18 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__26_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 439)) ;
      GALGAS_pic_31__38_ConditionExpression var_c ;
      nt_condition_5F_factor_ (var_c, inCompiler) ;
      outArgument_outCondition = GALGAS_pic_31__38_AndCondition::constructor_new (outArgument_outCondition, var_c  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 441)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_condition_5F_term_i10_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_condition_5F_factor_parse (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_pic_31__38__5F_syntax_18 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__26_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 439)) ;
      nt_condition_5F_factor_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_condition_5F_term_i10_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_condition_5F_factor_indexing (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_pic_31__38__5F_syntax_18 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__26_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 439)) ;
      nt_condition_5F_factor_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_block_5F_termination_i11_ (GALGAS_abstractBlockTerminationForBlockInstruction & outArgument_outBlockTermination,
                                                                                          C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outBlockTermination.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 449)) ;
  outArgument_outBlockTermination = GALGAS_exitBlockTerminationForBlockInstruction::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 450))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 450)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_block_5F_termination_i11_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 449)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_block_5F_termination_i11_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 449)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_block_5F_termination_i12_ (GALGAS_abstractBlockTerminationForBlockInstruction & outArgument_outBlockTermination,
                                                                                          C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outBlockTermination.drop () ; // Release 'out' argument
  GALGAS_lstring var_nextBlockName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 457)) ;
  outArgument_outBlockTermination = GALGAS_gotoTerminationForBlockInstruction::constructor_new (var_nextBlockName  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 458)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_block_5F_termination_i12_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 457)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_block_5F_termination_i12_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 457)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_block_5F_termination_i13_ (GALGAS_abstractBlockTerminationForBlockInstruction & outArgument_outBlockTermination,
                                                                                          C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outBlockTermination.drop () ; // Release 'out' argument
  GALGAS_location var_location = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 465)) ;
  GALGAS_pic_31__38_ConditionExpression var_condition ;
  nt_condition_5F_expression_ (var_condition, inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3F_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 467)) ;
  GALGAS_abstractBlockTerminationForBlockInstruction var_terminationIfTrue ;
  nt_block_5F_termination_ (var_terminationIfTrue, inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 469)) ;
  GALGAS_abstractBlockTerminationForBlockInstruction var_terminationIfFalse ;
  nt_block_5F_termination_ (var_terminationIfFalse, inCompiler) ;
  outArgument_outBlockTermination = GALGAS_testTerminationForBlockInstruction::constructor_new (var_condition, var_terminationIfTrue, var_terminationIfFalse, var_location  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 471)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_block_5F_termination_i13_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_condition_5F_expression_parse (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3F_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 467)) ;
  nt_block_5F_termination_parse (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 469)) ;
  nt_block_5F_termination_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_block_5F_termination_i13_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_condition_5F_expression_indexing (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3F_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 467)) ;
  nt_block_5F_termination_indexing (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 469)) ;
  nt_block_5F_termination_indexing (inCompiler) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_structured_5F_instruction_i14_ (GALGAS_pic_31__38_PiccoloInstruction & outArgument_outInstruction,
                                                                                               GALGAS_bool & ioArgument_ioNeedsComputedGoto_32_,
                                                                                               GALGAS_bool & ioArgument_ioNeedsComputedGoto_34_,
                                                                                               C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  switch (select_pic_31__38__5F_syntax_19 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_switch) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 481)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 482)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 483)) ;
    GALGAS_pic_31__38_SwitchInstructionCaseList var_caseList = GALGAS_pic_31__38_SwitchInstructionCaseList::constructor_emptyList (SOURCE_FILE ("pic18_syntax.galgas", 484)) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_case) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 486)) ;
      GALGAS_location var_caseLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 487)) ;
      GALGAS_pic_31__38_CaseExpressionList var_caseExpressionList = GALGAS_pic_31__38_CaseExpressionList::constructor_emptyList (SOURCE_FILE ("pic18_syntax.galgas", 488)) ;
      bool repeatFlag_1 = true ;
      while (repeatFlag_1) {
        switch (select_pic_31__38__5F_syntax_22 (inCompiler)) {
        case 1: {
          GALGAS_immediatExpression var_caseExpression ;
          nt_immediate_5F_expression_ (var_caseExpression, inCompiler) ;
          var_caseExpressionList.addAssign_operation (GALGAS_pic_31__38_SimpleConstantCaseItem::constructor_new (var_caseExpression, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 492))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 492))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 492)) ;
        } break ;
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 494)) ;
          GALGAS_immediatExpression var_minExpression ;
          nt_immediate_5F_expression_ (var_minExpression, inCompiler) ;
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 496)) ;
          GALGAS_immediatExpression var_maxExpression ;
          nt_immediate_5F_expression_ (var_maxExpression, inCompiler) ;
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 498)) ;
          var_caseExpressionList.addAssign_operation (GALGAS_pic_31__38_IntervalCaseItem::constructor_new (var_minExpression, var_maxExpression, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 499))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 499))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 499)) ;
        } break ;
        default:
          break ;
        }
        switch (select_pic_31__38__5F_syntax_21 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 502)) ;
        } break ;
        default:
          repeatFlag_1 = false ;
          break ;
        }
      }
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 504)) ;
      GALGAS_pic_31__38_InstructionList var_instructionList ;
      nt_instruction_5F_list_ (var_instructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
      var_caseList.addAssign_operation (var_caseLocation, var_caseExpressionList, var_instructionList  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 506)) ;
      switch (select_pic_31__38__5F_syntax_20 (inCompiler)) {
      case 2: {
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    GALGAS_pic_31__38_InstructionList var_elseInstructionList ;
    GALGAS_location var_elseLocation ;
    switch (select_pic_31__38__5F_syntax_23 (inCompiler)) {
    case 1: {
      var_elseLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 512)) ;
      var_elseInstructionList = GALGAS_pic_31__38_InstructionList::constructor_emptyList (SOURCE_FILE ("pic18_syntax.galgas", 513)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_else) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 515)) ;
      var_elseLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 516)) ;
      nt_instruction_5F_list_ (var_elseInstructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
    } break ;
    default:
      break ;
    }
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_switch::constructor_new (var_instructionLocation, var_caseList, var_elseLocation, var_elseInstructionList  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 519)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 524)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_block) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 526)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 527)) ;
    GALGAS_lstring var_startBlockName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 528)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 529)) ;
    GALGAS_pic_31__38_BlockInstructionBlockList var_blockList = GALGAS_pic_31__38_BlockInstructionBlockList::constructor_emptyList (SOURCE_FILE ("pic18_syntax.galgas", 530)) ;
    bool repeatFlag_2 = true ;
    while (repeatFlag_2) {
      GALGAS_lstring var_blockName = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 532)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 533)) ;
      GALGAS_pic_31__38_InstructionList var_instructionList ;
      nt_instruction_5F_list_ (var_instructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 535)) ;
      GALGAS_location var_endOfBlock = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 536)) ;
      GALGAS_abstractBlockTerminationForBlockInstruction var_blockTermination ;
      nt_block_5F_termination_ (var_blockTermination, inCompiler) ;
      var_blockList.addAssign_operation (var_blockName, var_instructionList, var_blockTermination, var_endOfBlock  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 538)) ;
      switch (select_pic_31__38__5F_syntax_24 (inCompiler)) {
      case 2: {
      } break ;
      default:
        repeatFlag_2 = false ;
        break ;
      }
    }
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_block::constructor_new (var_instructionLocation, var_startBlockName, var_blockList, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 545))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 541)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 546)) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_do) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 548)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 549)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 550)) ;
    GALGAS_immediatExpression var_repeatExpression ;
    nt_immediate_5F_expression_ (var_repeatExpression, inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 552)) ;
    GALGAS_pic_31__38_InstructionList var_instructionList ;
    nt_instruction_5F_list_ (var_instructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_repetitionStatique::constructor_new (var_instructionLocation, var_repeatExpression, var_instructionList, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 558))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 554)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 559)) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_checkbank) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 561)) ;
    GALGAS_luint var_bankIndex = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 562)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_checkbank::constructor_new (var_bankIndex.mAttribute_location, var_bankIndex.mAttribute_uint  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 563)) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_checknobank) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 565)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_checknobank::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 566))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 566)) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ldataptr) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 568)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 569)) ;
    GALGAS_lstring var_dataName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 570)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 571)) ;
    GALGAS_luint var_dataIndex = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 572)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 573)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_LDATAPTR::constructor_new (var_instructionLocation, var_dataName, var_dataIndex  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 574)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ltblptr) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 576)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 577)) ;
    GALGAS_immediatExpression var_expression ;
    nt_immediate_5F_expression_ (var_expression, inCompiler) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_LTBLPTR::constructor_new (var_instructionLocation, var_expression  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 579)) ;
  } break ;
  case 8: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_banksel) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 581)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 582)) ;
    GALGAS_luint var_bank = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 583)) ;
    GALGAS_bool var_warningOnUselessBanksel ;
    switch (select_pic_31__38__5F_syntax_25 (inCompiler)) {
    case 1: {
      var_warningOnUselessBanksel = GALGAS_bool (true) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 588)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 589)) ;
      var_warningOnUselessBanksel = GALGAS_bool (false) ;
    } break ;
    default:
      break ;
    }
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_banksel::constructor_new (var_instructionLocation, var_bank, var_warningOnUselessBanksel  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 592)) ;
  } break ;
  case 9: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_banksel) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 594)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 595)) ;
    GALGAS_registerExpression var_register ;
    nt_register_5F_parsing_ (var_register, inCompiler) ;
    GALGAS_bool var_warningOnUselessBanksel ;
    switch (select_pic_31__38__5F_syntax_26 (inCompiler)) {
    case 1: {
      var_warningOnUselessBanksel = GALGAS_bool (true) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 601)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 602)) ;
      var_warningOnUselessBanksel = GALGAS_bool (false) ;
    } break ;
    default:
      break ;
    }
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_banksel_5F_register::constructor_new (var_instructionLocation, var_register, var_warningOnUselessBanksel  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 605)) ;
  } break ;
  case 10: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_nobank) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 607)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_nobanksel::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 608))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 608)) ;
  } break ;
  case 11: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_banksave) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 610)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 611)) ;
    GALGAS_registerExpression var_register ;
    nt_register_5F_parsing_ (var_register, inCompiler) ;
    GALGAS_pic_31__38_InstructionList var_instructionList ;
    nt_instruction_5F_list_ (var_instructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 614)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_savebank::constructor_new (var_instructionLocation, var_register, var_instructionList, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 619))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 615)) ;
  } break ;
  case 12: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_computed) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 621)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 622)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 623)) ;
    GALGAS_immediatExpression var_sizeExpression ;
    nt_immediate_5F_expression_ (var_sizeExpression, inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 626)) ;
    switch (select_pic_31__38__5F_syntax_27 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_retlw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 628)) ;
      GALGAS_immediatExpressionList var_argumentList = GALGAS_immediatExpressionList::constructor_emptyList (SOURCE_FILE ("pic18_syntax.galgas", 629)) ;
      bool repeatFlag_3 = true ;
      while (repeatFlag_3) {
        GALGAS_immediatExpression var_expression ;
        nt_immediate_5F_expression_ (var_expression, inCompiler) ;
        var_argumentList.addAssign_operation (var_expression, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 633))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 633)) ;
        switch (select_pic_31__38__5F_syntax_28 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 635)) ;
        } break ;
        default:
          repeatFlag_3 = false ;
          break ;
        }
      }
      outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_computed_5F_retlw::constructor_new (var_instructionLocation, var_sizeExpression, var_argumentList, GALGAS_bool (true)  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 637)) ;
      ioArgument_ioNeedsComputedGoto_32_ = GALGAS_bool (true) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bra) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 644)) ;
      GALGAS_lstringlist var_argumentList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE ("pic18_syntax.galgas", 645)) ;
      bool repeatFlag_4 = true ;
      while (repeatFlag_4) {
        GALGAS_lstring var_targetRoutine = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 647)) ;
        var_argumentList.addAssign_operation (var_targetRoutine  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 648)) ;
        switch (select_pic_31__38__5F_syntax_29 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 650)) ;
        } break ;
        default:
          repeatFlag_4 = false ;
          break ;
        }
      }
      outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_computed_5F_bra::constructor_new (var_instructionLocation, var_sizeExpression, var_argumentList, GALGAS_bool (true)  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 652)) ;
      ioArgument_ioNeedsComputedGoto_32_ = GALGAS_bool (true) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_goto) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 659)) ;
      GALGAS_lstringlist var_argumentList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE ("pic18_syntax.galgas", 660)) ;
      bool repeatFlag_5 = true ;
      while (repeatFlag_5) {
        GALGAS_lstring var_targetRoutine = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 662)) ;
        var_argumentList.addAssign_operation (var_targetRoutine  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 663)) ;
        switch (select_pic_31__38__5F_syntax_30 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 665)) ;
        } break ;
        default:
          repeatFlag_5 = false ;
          break ;
        }
      }
      outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_computed_5F_goto::constructor_new (var_instructionLocation, var_sizeExpression, var_argumentList, GALGAS_bool (true)  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 667)) ;
      ioArgument_ioNeedsComputedGoto_34_ = GALGAS_bool (true) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rcall) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 674)) ;
      GALGAS_lstringlist var_argumentList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE ("pic18_syntax.galgas", 675)) ;
      bool repeatFlag_6 = true ;
      while (repeatFlag_6) {
        GALGAS_lstring var_targetRoutine = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 677)) ;
        var_argumentList.addAssign_operation (var_targetRoutine  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 678)) ;
        switch (select_pic_31__38__5F_syntax_31 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 680)) ;
        } break ;
        default:
          repeatFlag_6 = false ;
          break ;
        }
      }
      outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_computed_5F_rcall::constructor_new (var_instructionLocation, var_sizeExpression, var_argumentList, GALGAS_bool (true)  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 682)) ;
      ioArgument_ioNeedsComputedGoto_34_ = GALGAS_bool (true) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 13: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_forever) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 690)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 691)) ;
    GALGAS_pic_31__38_InstructionList var_instructionList ;
    nt_instruction_5F_list_ (var_instructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 694)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_FOREVER::constructor_new (var_instructionLocation, var_instructionList, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 698))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 695)) ;
  } break ;
  case 14: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 700)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 701)) ;
    GALGAS_registerExpression var_registerName ;
    nt_register_5F_parsing_ (var_registerName, inCompiler) ;
    GALGAS_if_5F_semi_5F_colon_5F_op var_opCode ;
    switch (select_pic_31__38__5F_syntax_32 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21__3D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 706)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 706)) ;
      var_opCode = GALGAS_if_5F_semi_5F_colon_5F_op::constructor_CPFSEQ (SOURCE_FILE ("pic18_syntax.galgas", 706)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 708)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 708)) ;
      var_opCode = GALGAS_if_5F_semi_5F_colon_5F_op::constructor_CPFSGT (SOURCE_FILE ("pic18_syntax.galgas", 708)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 710)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 710)) ;
      var_opCode = GALGAS_if_5F_semi_5F_colon_5F_op::constructor_CPFSLT (SOURCE_FILE ("pic18_syntax.galgas", 710)) ;
    } break ;
    case 4: {
      GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 712)) ;
      GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE ("pic18_syntax.galgas", 713)).reader_uppercaseString (SOURCE_FILE ("pic18_syntax.galgas", 713)) ;
      const enumGalgasBool test_7 = GALGAS_bool (kIsNotEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).boolEnum () ;
      if (kBoolTrue == test_7) {
        GALGAS_location location_8 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_8, GALGAS_string ("invalid '").add_operation (var_condition, inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 715)).add_operation (GALGAS_string ("' condition; it should be 'nz'"), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 715))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 715)) ;
      }
      var_opCode = GALGAS_if_5F_semi_5F_colon_5F_op::constructor_TSTFSZ (SOURCE_FILE ("pic18_syntax.galgas", 717)) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 719)) ;
    GALGAS_pic_31__38_PiccoloSimpleInstruction var_instruction ;
    nt_simple_5F_instruction_ (var_instruction, inCompiler) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON::constructor_new (var_instructionLocation, var_instruction, var_opCode, var_registerName  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 721)) ;
  } break ;
  case 15: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 727)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 728)) ;
    GALGAS_registerExpression var_registerName ;
    GALGAS_bitNumberExpression var_bitNumber ;
    GALGAS_bool var_skipIfSet ;
    switch (select_pic_31__38__5F_syntax_33 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 733)) ;
      nt_register_5F_parsing_ (var_registerName, inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 735)) ;
      nt_bit_5F_number_5F_parsing_ (var_bitNumber, inCompiler) ;
      var_skipIfSet = GALGAS_bool (true) ;
    } break ;
    case 2: {
      nt_register_5F_parsing_ (var_registerName, inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 740)) ;
      nt_bit_5F_number_5F_parsing_ (var_bitNumber, inCompiler) ;
      switch (select_pic_31__38__5F_syntax_34 (inCompiler)) {
      case 1: {
        var_skipIfSet = GALGAS_bool (false) ;
      } break ;
      case 2: {
        GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 745)) ;
        GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE ("pic18_syntax.galgas", 746)).reader_uppercaseString (SOURCE_FILE ("pic18_syntax.galgas", 746)) ;
        const enumGalgasBool test_9 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("Z"))).boolEnum () ;
        if (kBoolTrue == test_9) {
          var_skipIfSet = GALGAS_bool (true) ;
          GALGAS_string var_s = GALGAS_string ("if ! ").add_operation (var_registerName.reader_mRegisterName (SOURCE_FILE ("pic18_syntax.galgas", 749)).reader_string (SOURCE_FILE ("pic18_syntax.galgas", 749)), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 749)) ;
          const enumGalgasBool test_10 = GALGAS_bool (kIsStrictSup, var_registerName.reader_mOffset (SOURCE_FILE ("pic18_syntax.galgas", 750)).reader_uint (SOURCE_FILE ("pic18_syntax.galgas", 750)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
          if (kBoolTrue == test_10) {
            var_s.dotAssign_operation (GALGAS_string (" [").add_operation (var_registerName.reader_mOffset (SOURCE_FILE ("pic18_syntax.galgas", 751)).reader_uint (SOURCE_FILE ("pic18_syntax.galgas", 751)).reader_string (SOURCE_FILE ("pic18_syntax.galgas", 751)), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 751)).add_operation (GALGAS_string ("]"), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 751))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 751)) ;
          }
          var_s.dotAssign_operation (GALGAS_string (".")  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 753)) ;
          callCategoryMethod_display ((const cPtr_bitNumberExpression *) var_bitNumber.ptr (), var_s, inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 753)) ;
          var_s.dotAssign_operation (GALGAS_string (" :")  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 754)) ;
          GALGAS_location location_11 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticWarning (location_11, GALGAS_string ("In Piccolo 1.2.0 and later, this construction is deprecated; use '").add_operation (var_s, inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 755)).add_operation (GALGAS_string ("' instead"), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 755))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 755)) ;
        }else if (kBoolFalse == test_9) {
          const enumGalgasBool test_12 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).boolEnum () ;
          if (kBoolTrue == test_12) {
            var_skipIfSet = GALGAS_bool (false) ;
            GALGAS_string var_s = GALGAS_string ("if ").add_operation (var_registerName.reader_mRegisterName (SOURCE_FILE ("pic18_syntax.galgas", 758)).reader_string (SOURCE_FILE ("pic18_syntax.galgas", 758)), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 758)) ;
            const enumGalgasBool test_13 = GALGAS_bool (kIsStrictSup, var_registerName.reader_mOffset (SOURCE_FILE ("pic18_syntax.galgas", 759)).reader_uint (SOURCE_FILE ("pic18_syntax.galgas", 759)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
            if (kBoolTrue == test_13) {
              var_s.dotAssign_operation (GALGAS_string (" [").add_operation (var_registerName.reader_mOffset (SOURCE_FILE ("pic18_syntax.galgas", 760)).reader_uint (SOURCE_FILE ("pic18_syntax.galgas", 760)).reader_string (SOURCE_FILE ("pic18_syntax.galgas", 760)), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 760)).add_operation (GALGAS_string ("]"), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 760))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 760)) ;
            }
            var_s.dotAssign_operation (GALGAS_string (".")  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 762)) ;
            callCategoryMethod_display ((const cPtr_bitNumberExpression *) var_bitNumber.ptr (), var_s, inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 762)) ;
            var_s.dotAssign_operation (GALGAS_string (" :")  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 763)) ;
            GALGAS_location location_14 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticWarning (location_14, GALGAS_string ("In Piccolo 1.2.0 and later, this construction is deprecated; use '").add_operation (var_s, inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 764)).add_operation (GALGAS_string ("' instead"), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 764))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 764)) ;
          }else if (kBoolFalse == test_12) {
            GALGAS_location location_15 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_15, GALGAS_string ("invalid '").add_operation (var_condition, inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 766)).add_operation (GALGAS_string ("' condition; it should be 'z' or 'nz'"), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 766))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 766)) ;
            var_skipIfSet.drop () ; // Release error dropped variable
          }
        }
      } break ;
      default:
        break ;
      }
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 770)) ;
    GALGAS_pic_31__38_PiccoloSimpleInstruction var_instruction ;
    nt_simple_5F_instruction_ (var_instruction, inCompiler) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_IF_5F_BitTest::constructor_new (var_instructionLocation, var_instruction, var_skipIfSet, var_registerName, var_bitNumber  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 772)) ;
  } break ;
  case 16: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 779)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 780)) ;
    GALGAS_bool var_increment ;
    switch (select_pic_31__38__5F_syntax_35 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 783)) ;
      var_increment = GALGAS_bool (false) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 785)) ;
      var_increment = GALGAS_bool (true) ;
    } break ;
    default:
      break ;
    }
    GALGAS_registerExpression var_registerName ;
    nt_register_5F_parsing_ (var_registerName, inCompiler) ;
    GALGAS_bool var_w_5F_isTarget ;
    switch (select_pic_31__38__5F_syntax_36 (inCompiler)) {
    case 1: {
      var_w_5F_isTarget = GALGAS_bool (false) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 793)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 793)) ;
      var_w_5F_isTarget = GALGAS_bool (true) ;
    } break ;
    default:
      break ;
    }
    GALGAS_bool var_skipIfZero ;
    GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 796)) ;
    GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE ("pic18_syntax.galgas", 797)).reader_uppercaseString (SOURCE_FILE ("pic18_syntax.galgas", 797)) ;
    const enumGalgasBool test_16 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("Z"))).boolEnum () ;
    if (kBoolTrue == test_16) {
      var_skipIfZero = GALGAS_bool (false) ;
    }else if (kBoolFalse == test_16) {
      const enumGalgasBool test_17 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).boolEnum () ;
      if (kBoolTrue == test_17) {
        var_skipIfZero = GALGAS_bool (true) ;
      }else if (kBoolFalse == test_17) {
        GALGAS_location location_18 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_18, GALGAS_string ("invalid '").add_operation (var_condition, inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 803)).add_operation (GALGAS_string ("' condition; it should be 'z' or 'nz'"), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 803))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 803)) ;
        var_skipIfZero.drop () ; // Release error dropped variable
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 805)) ;
    GALGAS_pic_31__38_PiccoloSimpleInstruction var_instruction ;
    nt_simple_5F_instruction_ (var_instruction, inCompiler) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_IF_5F_IncDec::constructor_new (var_instructionLocation, var_instruction, var_increment, var_skipIfZero, var_registerName, var_w_5F_isTarget  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 807)) ;
  } break ;
  case 17: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 815)) ;
    nt_structured_5F_if_5F_instruction_ (outArgument_outInstruction, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 820)) ;
  } break ;
  case 18: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_do) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 822)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 823)) ;
    GALGAS_pic_31__38_InstructionList var_repeatedInstructionList ;
    nt_instruction_5F_list_ (var_repeatedInstructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
    GALGAS_location var_endOfRepeatedInstructionList = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 829)) ;
    GALGAS_pic_31__38_DoWhilePartList var_whilePartList = GALGAS_pic_31__38_DoWhilePartList::constructor_emptyList (SOURCE_FILE ("pic18_syntax.galgas", 830)) ;
    bool repeatFlag_19 = true ;
    while (repeatFlag_19) {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_while) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 832)) ;
      GALGAS_pic_31__38_ConditionExpression var_whileCondition ;
      nt_condition_5F_expression_ (var_whileCondition, inCompiler) ;
      GALGAS_pic_31__38_InstructionList var_instructionList ;
      nt_instruction_5F_list_ (var_instructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
      var_whilePartList.addAssign_operation (var_whileCondition, var_instructionList, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 840))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 840)) ;
      switch (select_pic_31__38__5F_syntax_37 (inCompiler)) {
      case 2: {
      } break ;
      default:
        repeatFlag_19 = false ;
        break ;
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 843)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_do_5F_while::constructor_new (var_instructionLocation, var_repeatedInstructionList, var_endOfRepeatedInstructionList, var_whilePartList  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 844)) ;
  } break ;
  case 19: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mnop) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 850)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 851)) ;
    GALGAS_luint var_occurrenceFactor = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 852)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_MNOP::constructor_new (var_instructionLocation, var_occurrenceFactor  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 853)) ;
  } break ;
  case 20: {
    GALGAS_conditional_5F_branch var_condition ;
    switch (select_pic_31__38__5F_syntax_38 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bc) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 857)) ;
      var_condition = GALGAS_conditional_5F_branch::constructor_bc (SOURCE_FILE ("pic18_syntax.galgas", 857)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bnc) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 859)) ;
      var_condition = GALGAS_conditional_5F_branch::constructor_bnc (SOURCE_FILE ("pic18_syntax.galgas", 859)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bn) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 861)) ;
      var_condition = GALGAS_conditional_5F_branch::constructor_bn (SOURCE_FILE ("pic18_syntax.galgas", 861)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bnn) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 863)) ;
      var_condition = GALGAS_conditional_5F_branch::constructor_bnn (SOURCE_FILE ("pic18_syntax.galgas", 863)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bov) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 865)) ;
      var_condition = GALGAS_conditional_5F_branch::constructor_bov (SOURCE_FILE ("pic18_syntax.galgas", 865)) ;
    } break ;
    case 6: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bnov) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 867)) ;
      var_condition = GALGAS_conditional_5F_branch::constructor_bnov (SOURCE_FILE ("pic18_syntax.galgas", 867)) ;
    } break ;
    case 7: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bz) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 869)) ;
      var_condition = GALGAS_conditional_5F_branch::constructor_bz (SOURCE_FILE ("pic18_syntax.galgas", 869)) ;
    } break ;
    case 8: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bnz) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 871)) ;
      var_condition = GALGAS_conditional_5F_branch::constructor_bnz (SOURCE_FILE ("pic18_syntax.galgas", 871)) ;
    } break ;
    default:
      break ;
    }
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 873)) ;
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 874)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_JUMPCC::constructor_new (var_instructionLocation, var_targetLabelName, var_condition, GALGAS_bool (true)  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 875)) ;
  } break ;
  case 21: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jump) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 881)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 882)) ;
    GALGAS_conditional_5F_branch var_conditional_5F_branch ;
    GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 884)) ;
    GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE ("pic18_syntax.galgas", 885)).reader_uppercaseString (SOURCE_FILE ("pic18_syntax.galgas", 885)) ;
    const enumGalgasBool test_20 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("Z"))).boolEnum () ;
    if (kBoolTrue == test_20) {
      var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bz (SOURCE_FILE ("pic18_syntax.galgas", 887)) ;
    }else if (kBoolFalse == test_20) {
      const enumGalgasBool test_21 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).boolEnum () ;
      if (kBoolTrue == test_21) {
        var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bnz (SOURCE_FILE ("pic18_syntax.galgas", 889)) ;
      }else if (kBoolFalse == test_21) {
        const enumGalgasBool test_22 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NN"))).boolEnum () ;
        if (kBoolTrue == test_22) {
          var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bnn (SOURCE_FILE ("pic18_syntax.galgas", 891)) ;
        }else if (kBoolFalse == test_22) {
          const enumGalgasBool test_23 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("N"))).boolEnum () ;
          if (kBoolTrue == test_23) {
            var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bn (SOURCE_FILE ("pic18_syntax.galgas", 893)) ;
          }else if (kBoolFalse == test_23) {
            const enumGalgasBool test_24 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("C"))).boolEnum () ;
            if (kBoolTrue == test_24) {
              var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bc (SOURCE_FILE ("pic18_syntax.galgas", 895)) ;
            }else if (kBoolFalse == test_24) {
              const enumGalgasBool test_25 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NC"))).boolEnum () ;
              if (kBoolTrue == test_25) {
                var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bnc (SOURCE_FILE ("pic18_syntax.galgas", 897)) ;
              }else if (kBoolFalse == test_25) {
                const enumGalgasBool test_26 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("OV"))).boolEnum () ;
                if (kBoolTrue == test_26) {
                  var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bov (SOURCE_FILE ("pic18_syntax.galgas", 899)) ;
                }else if (kBoolFalse == test_26) {
                  const enumGalgasBool test_27 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NOV"))).boolEnum () ;
                  if (kBoolTrue == test_27) {
                    var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bnov (SOURCE_FILE ("pic18_syntax.galgas", 901)) ;
                  }else if (kBoolFalse == test_27) {
                    GALGAS_location location_28 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
                    inCompiler->emitSemanticError (location_28, GALGAS_string ("invalid '").add_operation (var_conditionString.reader_string (SOURCE_FILE ("pic18_syntax.galgas", 903)), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 903)).add_operation (GALGAS_string ("' condition; valid ones are: 'z', 'nz', 'n', 'nn', 'c', 'nc', 'ov' and 'nov'"), inCompiler COMMA_SOURCE_FILE ("pic18_syntax.galgas", 903))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 903)) ;
                    var_conditional_5F_branch.drop () ; // Release error dropped variable
                  }
                }
              }
            }
          }
        }
      }
    }
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 907)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_JUMPCC::constructor_new (var_instructionLocation, var_targetLabelName, var_conditional_5F_branch, GALGAS_bool (false)  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 908)) ;
  } break ;
  case 22: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jump) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 914)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 915)) ;
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 916)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_JUMP::constructor_new (var_instructionLocation, var_targetLabelName, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE ("pic18_syntax.galgas", 920))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 917)) ;
  } break ;
  case 23: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_goto) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 922)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 923)) ;
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 924)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_JUMP::constructor_new (var_instructionLocation, var_targetLabelName, GALGAS_jumpInstructionKind::constructor_absolute (SOURCE_FILE ("pic18_syntax.galgas", 928))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 925)) ;
  } break ;
  case 24: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bra) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 930)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 931)) ;
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 932)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_JUMP::constructor_new (var_instructionLocation, var_targetLabelName, GALGAS_jumpInstructionKind::constructor_relative (SOURCE_FILE ("pic18_syntax.galgas", 936))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 933)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_structured_5F_instruction_i14_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_pic_31__38__5F_syntax_19 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_switch) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 481)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 483)) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_case) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 486)) ;
      bool repeatFlag_1 = true ;
      while (repeatFlag_1) {
        switch (select_pic_31__38__5F_syntax_22 (inCompiler)) {
        case 1: {
          nt_immediate_5F_expression_parse (inCompiler) ;
        } break ;
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 494)) ;
          nt_immediate_5F_expression_parse (inCompiler) ;
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 496)) ;
          nt_immediate_5F_expression_parse (inCompiler) ;
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 498)) ;
        } break ;
        default:
          break ;
        }
        switch (select_pic_31__38__5F_syntax_21 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 502)) ;
        } break ;
        default:
          repeatFlag_1 = false ;
          break ;
        }
      }
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 504)) ;
      nt_instruction_5F_list_parse (inCompiler) ;
      switch (select_pic_31__38__5F_syntax_20 (inCompiler)) {
      case 2: {
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    switch (select_pic_31__38__5F_syntax_23 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_else) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 515)) ;
      nt_instruction_5F_list_parse (inCompiler) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 524)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_block) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 526)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 528)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 529)) ;
    bool repeatFlag_2 = true ;
    while (repeatFlag_2) {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 532)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 533)) ;
      nt_instruction_5F_list_parse (inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 535)) ;
      nt_block_5F_termination_parse (inCompiler) ;
      switch (select_pic_31__38__5F_syntax_24 (inCompiler)) {
      case 2: {
      } break ;
      default:
        repeatFlag_2 = false ;
        break ;
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 546)) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_do) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 548)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 550)) ;
    nt_immediate_5F_expression_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 552)) ;
    nt_instruction_5F_list_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 559)) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_checkbank) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 561)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 562)) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_checknobank) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 565)) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ldataptr) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 568)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 570)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 571)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 572)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 573)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ltblptr) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 576)) ;
    nt_immediate_5F_expression_parse (inCompiler) ;
  } break ;
  case 8: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_banksel) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 581)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 583)) ;
    switch (select_pic_31__38__5F_syntax_25 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 588)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 589)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 9: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_banksel) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 594)) ;
    nt_register_5F_parsing_parse (inCompiler) ;
    switch (select_pic_31__38__5F_syntax_26 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 601)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 602)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 10: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_nobank) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 607)) ;
  } break ;
  case 11: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_banksave) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 610)) ;
    nt_register_5F_parsing_parse (inCompiler) ;
    nt_instruction_5F_list_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 614)) ;
  } break ;
  case 12: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_computed) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 621)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 623)) ;
    nt_immediate_5F_expression_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 626)) ;
    switch (select_pic_31__38__5F_syntax_27 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_retlw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 628)) ;
      bool repeatFlag_3 = true ;
      while (repeatFlag_3) {
        nt_immediate_5F_expression_parse (inCompiler) ;
        switch (select_pic_31__38__5F_syntax_28 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 635)) ;
        } break ;
        default:
          repeatFlag_3 = false ;
          break ;
        }
      }
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bra) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 644)) ;
      bool repeatFlag_4 = true ;
      while (repeatFlag_4) {
        inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 647)) ;
        switch (select_pic_31__38__5F_syntax_29 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 650)) ;
        } break ;
        default:
          repeatFlag_4 = false ;
          break ;
        }
      }
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_goto) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 659)) ;
      bool repeatFlag_5 = true ;
      while (repeatFlag_5) {
        inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 662)) ;
        switch (select_pic_31__38__5F_syntax_30 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 665)) ;
        } break ;
        default:
          repeatFlag_5 = false ;
          break ;
        }
      }
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rcall) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 674)) ;
      bool repeatFlag_6 = true ;
      while (repeatFlag_6) {
        inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 677)) ;
        switch (select_pic_31__38__5F_syntax_31 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 680)) ;
        } break ;
        default:
          repeatFlag_6 = false ;
          break ;
        }
      }
    } break ;
    default:
      break ;
    }
  } break ;
  case 13: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_forever) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 690)) ;
    nt_instruction_5F_list_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 694)) ;
  } break ;
  case 14: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 700)) ;
    nt_register_5F_parsing_parse (inCompiler) ;
    switch (select_pic_31__38__5F_syntax_32 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21__3D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 706)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 706)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 708)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 708)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 710)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 710)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 712)) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 719)) ;
    nt_simple_5F_instruction_parse (inCompiler) ;
  } break ;
  case 15: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 727)) ;
    switch (select_pic_31__38__5F_syntax_33 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 733)) ;
      nt_register_5F_parsing_parse (inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 735)) ;
      nt_bit_5F_number_5F_parsing_parse (inCompiler) ;
    } break ;
    case 2: {
      nt_register_5F_parsing_parse (inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 740)) ;
      nt_bit_5F_number_5F_parsing_parse (inCompiler) ;
      switch (select_pic_31__38__5F_syntax_34 (inCompiler)) {
      case 1: {
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 745)) ;
      } break ;
      default:
        break ;
      }
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 770)) ;
    nt_simple_5F_instruction_parse (inCompiler) ;
  } break ;
  case 16: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 779)) ;
    switch (select_pic_31__38__5F_syntax_35 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 783)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 785)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_parse (inCompiler) ;
    switch (select_pic_31__38__5F_syntax_36 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 793)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 793)) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 796)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 805)) ;
    nt_simple_5F_instruction_parse (inCompiler) ;
  } break ;
  case 17: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 815)) ;
    nt_structured_5F_if_5F_instruction_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 820)) ;
  } break ;
  case 18: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_do) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 822)) ;
    nt_instruction_5F_list_parse (inCompiler) ;
    bool repeatFlag_7 = true ;
    while (repeatFlag_7) {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_while) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 832)) ;
      nt_condition_5F_expression_parse (inCompiler) ;
      nt_instruction_5F_list_parse (inCompiler) ;
      switch (select_pic_31__38__5F_syntax_37 (inCompiler)) {
      case 2: {
      } break ;
      default:
        repeatFlag_7 = false ;
        break ;
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 843)) ;
  } break ;
  case 19: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mnop) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 850)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 852)) ;
  } break ;
  case 20: {
    switch (select_pic_31__38__5F_syntax_38 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bc) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 857)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bnc) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 859)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bn) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 861)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bnn) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 863)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bov) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 865)) ;
    } break ;
    case 6: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bnov) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 867)) ;
    } break ;
    case 7: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bz) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 869)) ;
    } break ;
    case 8: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bnz) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 871)) ;
    } break ;
    default:
      break ;
    }
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 874)) ;
  } break ;
  case 21: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jump) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 881)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 884)) ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 907)) ;
  } break ;
  case 22: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jump) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 914)) ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 916)) ;
  } break ;
  case 23: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_goto) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 922)) ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 924)) ;
  } break ;
  case 24: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bra) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 930)) ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 932)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_structured_5F_instruction_i14_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_pic_31__38__5F_syntax_19 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_switch) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 481)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 483)) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_case) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 486)) ;
      bool repeatFlag_1 = true ;
      while (repeatFlag_1) {
        switch (select_pic_31__38__5F_syntax_22 (inCompiler)) {
        case 1: {
          nt_immediate_5F_expression_indexing (inCompiler) ;
        } break ;
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 494)) ;
          nt_immediate_5F_expression_indexing (inCompiler) ;
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 496)) ;
          nt_immediate_5F_expression_indexing (inCompiler) ;
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 498)) ;
        } break ;
        default:
          break ;
        }
        switch (select_pic_31__38__5F_syntax_21 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 502)) ;
        } break ;
        default:
          repeatFlag_1 = false ;
          break ;
        }
      }
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 504)) ;
      nt_instruction_5F_list_indexing (inCompiler) ;
      switch (select_pic_31__38__5F_syntax_20 (inCompiler)) {
      case 2: {
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    switch (select_pic_31__38__5F_syntax_23 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_else) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 515)) ;
      nt_instruction_5F_list_indexing (inCompiler) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 524)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_block) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 526)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 528)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 529)) ;
    bool repeatFlag_2 = true ;
    while (repeatFlag_2) {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 532)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 533)) ;
      nt_instruction_5F_list_indexing (inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 535)) ;
      nt_block_5F_termination_indexing (inCompiler) ;
      switch (select_pic_31__38__5F_syntax_24 (inCompiler)) {
      case 2: {
      } break ;
      default:
        repeatFlag_2 = false ;
        break ;
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 546)) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_do) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 548)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 550)) ;
    nt_immediate_5F_expression_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 552)) ;
    nt_instruction_5F_list_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 559)) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_checkbank) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 561)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 562)) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_checknobank) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 565)) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ldataptr) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 568)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 570)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 571)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 572)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 573)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ltblptr) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 576)) ;
    nt_immediate_5F_expression_indexing (inCompiler) ;
  } break ;
  case 8: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_banksel) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 581)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 583)) ;
    switch (select_pic_31__38__5F_syntax_25 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 588)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 589)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 9: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_banksel) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 594)) ;
    nt_register_5F_parsing_indexing (inCompiler) ;
    switch (select_pic_31__38__5F_syntax_26 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 601)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 602)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 10: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_nobank) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 607)) ;
  } break ;
  case 11: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_banksave) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 610)) ;
    nt_register_5F_parsing_indexing (inCompiler) ;
    nt_instruction_5F_list_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 614)) ;
  } break ;
  case 12: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_computed) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 621)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 623)) ;
    nt_immediate_5F_expression_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 626)) ;
    switch (select_pic_31__38__5F_syntax_27 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_retlw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 628)) ;
      bool repeatFlag_3 = true ;
      while (repeatFlag_3) {
        nt_immediate_5F_expression_indexing (inCompiler) ;
        switch (select_pic_31__38__5F_syntax_28 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 635)) ;
        } break ;
        default:
          repeatFlag_3 = false ;
          break ;
        }
      }
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bra) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 644)) ;
      bool repeatFlag_4 = true ;
      while (repeatFlag_4) {
        inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 647)) ;
        switch (select_pic_31__38__5F_syntax_29 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 650)) ;
        } break ;
        default:
          repeatFlag_4 = false ;
          break ;
        }
      }
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_goto) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 659)) ;
      bool repeatFlag_5 = true ;
      while (repeatFlag_5) {
        inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 662)) ;
        switch (select_pic_31__38__5F_syntax_30 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 665)) ;
        } break ;
        default:
          repeatFlag_5 = false ;
          break ;
        }
      }
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rcall) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 674)) ;
      bool repeatFlag_6 = true ;
      while (repeatFlag_6) {
        inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 677)) ;
        switch (select_pic_31__38__5F_syntax_31 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 680)) ;
        } break ;
        default:
          repeatFlag_6 = false ;
          break ;
        }
      }
    } break ;
    default:
      break ;
    }
  } break ;
  case 13: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_forever) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 690)) ;
    nt_instruction_5F_list_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 694)) ;
  } break ;
  case 14: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 700)) ;
    nt_register_5F_parsing_indexing (inCompiler) ;
    switch (select_pic_31__38__5F_syntax_32 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21__3D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 706)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 706)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 708)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 708)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 710)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 710)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 712)) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 719)) ;
    nt_simple_5F_instruction_indexing (inCompiler) ;
  } break ;
  case 15: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 727)) ;
    switch (select_pic_31__38__5F_syntax_33 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 733)) ;
      nt_register_5F_parsing_indexing (inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 735)) ;
      nt_bit_5F_number_5F_parsing_indexing (inCompiler) ;
    } break ;
    case 2: {
      nt_register_5F_parsing_indexing (inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 740)) ;
      nt_bit_5F_number_5F_parsing_indexing (inCompiler) ;
      switch (select_pic_31__38__5F_syntax_34 (inCompiler)) {
      case 1: {
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 745)) ;
      } break ;
      default:
        break ;
      }
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 770)) ;
    nt_simple_5F_instruction_indexing (inCompiler) ;
  } break ;
  case 16: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 779)) ;
    switch (select_pic_31__38__5F_syntax_35 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 783)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 785)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_indexing (inCompiler) ;
    switch (select_pic_31__38__5F_syntax_36 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 793)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 793)) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 796)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 805)) ;
    nt_simple_5F_instruction_indexing (inCompiler) ;
  } break ;
  case 17: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 815)) ;
    nt_structured_5F_if_5F_instruction_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 820)) ;
  } break ;
  case 18: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_do) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 822)) ;
    nt_instruction_5F_list_indexing (inCompiler) ;
    bool repeatFlag_7 = true ;
    while (repeatFlag_7) {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_while) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 832)) ;
      nt_condition_5F_expression_indexing (inCompiler) ;
      nt_instruction_5F_list_indexing (inCompiler) ;
      switch (select_pic_31__38__5F_syntax_37 (inCompiler)) {
      case 2: {
      } break ;
      default:
        repeatFlag_7 = false ;
        break ;
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 843)) ;
  } break ;
  case 19: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mnop) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 850)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 852)) ;
  } break ;
  case 20: {
    switch (select_pic_31__38__5F_syntax_38 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bc) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 857)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bnc) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 859)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bn) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 861)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bnn) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 863)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bov) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 865)) ;
    } break ;
    case 6: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bnov) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 867)) ;
    } break ;
    case 7: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bz) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 869)) ;
    } break ;
    case 8: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bnz) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 871)) ;
    } break ;
    default:
      break ;
    }
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 874)) ;
  } break ;
  case 21: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jump) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 881)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 884)) ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 907)) ;
  } break ;
  case 22: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jump) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 914)) ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 916)) ;
  } break ;
  case 23: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_goto) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 922)) ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 924)) ;
  } break ;
  case 24: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bra) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 930)) ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 932)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_structured_5F_if_5F_instruction_i15_ (GALGAS_pic_31__38_PiccoloInstruction & outArgument_outInstruction,
                                                                                                     GALGAS_bool & ioArgument_ioNeedsComputedGoto_32_,
                                                                                                     GALGAS_bool & ioArgument_ioNeedsComputedGoto_34_,
                                                                                                     C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 946)) ;
  GALGAS_pic_31__38_ConditionExpression var_structured_5F_if_5F_condition ;
  nt_condition_5F_expression_ (var_structured_5F_if_5F_condition, inCompiler) ;
  GALGAS_pic_31__38_InstructionList var_thenInstructionList ;
  nt_instruction_5F_list_ (var_thenInstructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
  GALGAS_pic_31__38_InstructionList var_elseInstructionList ;
  switch (select_pic_31__38__5F_syntax_39 (inCompiler)) {
  case 1: {
    var_elseInstructionList = GALGAS_pic_31__38_InstructionList::constructor_emptyList (SOURCE_FILE ("pic18_syntax.galgas", 956)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_elsif) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 958)) ;
    GALGAS_pic_31__38_PiccoloInstruction var_elsifPartInstruction ;
    nt_structured_5F_if_5F_instruction_ (var_elsifPartInstruction, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
    var_elseInstructionList = GALGAS_pic_31__38_InstructionList::constructor_emptyList (SOURCE_FILE ("pic18_syntax.galgas", 964)) ;
    var_elseInstructionList.addAssign_operation (var_elsifPartInstruction  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 965)) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_else) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 967)) ;
    nt_instruction_5F_list_ (var_elseInstructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
  } break ;
  default:
    break ;
  }
  GALGAS_location var_endOfElsePartLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 973)) ;
  outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_structured_5F_if::constructor_new (var_instructionLocation, var_structured_5F_if_5F_condition, var_thenInstructionList, var_elseInstructionList, var_endOfElsePartLocation  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 974)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_structured_5F_if_5F_instruction_i15_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_condition_5F_expression_parse (inCompiler) ;
  nt_instruction_5F_list_parse (inCompiler) ;
  switch (select_pic_31__38__5F_syntax_39 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_elsif) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 958)) ;
    nt_structured_5F_if_5F_instruction_parse (inCompiler) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_else) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 967)) ;
    nt_instruction_5F_list_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_structured_5F_if_5F_instruction_i15_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_condition_5F_expression_indexing (inCompiler) ;
  nt_instruction_5F_list_indexing (inCompiler) ;
  switch (select_pic_31__38__5F_syntax_39 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_elsif) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 958)) ;
    nt_structured_5F_if_5F_instruction_indexing (inCompiler) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_else) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 967)) ;
    nt_instruction_5F_list_indexing (inCompiler) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_simple_5F_instruction_i16_ (GALGAS_pic_31__38_PiccoloSimpleInstruction & outArgument_outInstruction,
                                                                                           C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  switch (select_pic_31__38__5F_syntax_40 (inCompiler)) {
  case 1: {
    GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST var_baseCode ;
    switch (select_pic_31__38__5F_syntax_41 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addwf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 988)) ;
      var_baseCode = GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_ADDWF (SOURCE_FILE ("pic18_syntax.galgas", 989)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addwfc) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 991)) ;
      var_baseCode = GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_ADDWFC (SOURCE_FILE ("pic18_syntax.galgas", 992)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andwf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 994)) ;
      var_baseCode = GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_ANDWF (SOURCE_FILE ("pic18_syntax.galgas", 995)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_comf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 997)) ;
      var_baseCode = GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_COMF (SOURCE_FILE ("pic18_syntax.galgas", 998)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1000)) ;
      var_baseCode = GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_DECF (SOURCE_FILE ("pic18_syntax.galgas", 1001)) ;
    } break ;
    case 6: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1003)) ;
      var_baseCode = GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_INCF (SOURCE_FILE ("pic18_syntax.galgas", 1004)) ;
    } break ;
    case 7: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorwf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1006)) ;
      var_baseCode = GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_IORWF (SOURCE_FILE ("pic18_syntax.galgas", 1007)) ;
    } break ;
    case 8: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1009)) ;
      var_baseCode = GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_MOVF (SOURCE_FILE ("pic18_syntax.galgas", 1010)) ;
    } break ;
    case 9: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rlcf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1012)) ;
      var_baseCode = GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_RLCF (SOURCE_FILE ("pic18_syntax.galgas", 1013)) ;
    } break ;
    case 10: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rlncf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1015)) ;
      var_baseCode = GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_RLNCF (SOURCE_FILE ("pic18_syntax.galgas", 1016)) ;
    } break ;
    case 11: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rrcf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1018)) ;
      var_baseCode = GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_RRCF (SOURCE_FILE ("pic18_syntax.galgas", 1019)) ;
    } break ;
    case 12: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rrncf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1021)) ;
      var_baseCode = GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_RRNCF (SOURCE_FILE ("pic18_syntax.galgas", 1022)) ;
    } break ;
    case 13: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subfwb) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1024)) ;
      var_baseCode = GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_SUBFWB (SOURCE_FILE ("pic18_syntax.galgas", 1025)) ;
    } break ;
    case 14: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subwf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1027)) ;
      var_baseCode = GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_SUBWF (SOURCE_FILE ("pic18_syntax.galgas", 1028)) ;
    } break ;
    case 15: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subwfb) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1030)) ;
      var_baseCode = GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_SUBWFB (SOURCE_FILE ("pic18_syntax.galgas", 1031)) ;
    } break ;
    case 16: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_swapf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1033)) ;
      var_baseCode = GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_SWAPF (SOURCE_FILE ("pic18_syntax.galgas", 1034)) ;
    } break ;
    case 17: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorwf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1036)) ;
      var_baseCode = GALGAS_pic_31__38_Instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_XORWF (SOURCE_FILE ("pic18_syntax.galgas", 1037)) ;
    } break ;
    default:
      break ;
    }
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1039)) ;
    GALGAS_registerExpression var_registerName ;
    nt_register_5F_parsing_ (var_registerName, inCompiler) ;
    GALGAS_bool var_W_5F_isDestination ;
    nt_optional_5F_w_5F_as_5F_dest_ (var_W_5F_isDestination, inCompiler) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_FDA::constructor_new (var_instructionLocation, var_baseCode, var_registerName, var_W_5F_isDestination  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1044)) ;
  } break ;
  case 2: {
    GALGAS_FA_5F_instruction_5F_base_5F_code var_FAinstruction ;
    switch (select_pic_31__38__5F_syntax_42 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1052)) ;
      var_FAinstruction = GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_CLRF (SOURCE_FILE ("pic18_syntax.galgas", 1053)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movwf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1055)) ;
      var_FAinstruction = GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE ("pic18_syntax.galgas", 1056)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mulwf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1058)) ;
      var_FAinstruction = GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_MULWF (SOURCE_FILE ("pic18_syntax.galgas", 1059)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_negf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1061)) ;
      var_FAinstruction = GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_NEGF (SOURCE_FILE ("pic18_syntax.galgas", 1062)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_setf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1064)) ;
      var_FAinstruction = GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_SETF (SOURCE_FILE ("pic18_syntax.galgas", 1065)) ;
    } break ;
    default:
      break ;
    }
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1067)) ;
    GALGAS_registerExpression var_registerName ;
    nt_register_5F_parsing_ (var_registerName, inCompiler) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_FA::constructor_new (var_instructionLocation, var_FAinstruction, var_registerName  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1070)) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movff) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1075)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1076)) ;
    GALGAS_registerExpression var_sourceRegisterName ;
    nt_register_5F_parsing_ (var_sourceRegisterName, inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1079)) ;
    GALGAS_registerExpression var_destinationRegisterName ;
    nt_register_5F_parsing_ (var_destinationRegisterName, inCompiler) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_MOVFF::constructor_new (var_instructionLocation, var_sourceRegisterName, var_destinationRegisterName  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1082)) ;
  } break ;
  case 4: {
    GALGAS_bit_5F_oriented_5F_op var_bitOrientedOp ;
    switch (select_pic_31__38__5F_syntax_43 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bcf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1089)) ;
      var_bitOrientedOp = GALGAS_bit_5F_oriented_5F_op::constructor_BCF (SOURCE_FILE ("pic18_syntax.galgas", 1089)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bsf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1091)) ;
      var_bitOrientedOp = GALGAS_bit_5F_oriented_5F_op::constructor_BSF (SOURCE_FILE ("pic18_syntax.galgas", 1091)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_btg) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1093)) ;
      var_bitOrientedOp = GALGAS_bit_5F_oriented_5F_op::constructor_BTG (SOURCE_FILE ("pic18_syntax.galgas", 1093)) ;
    } break ;
    default:
      break ;
    }
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1095)) ;
    GALGAS_registerExpression var_registerName ;
    nt_register_5F_parsing_ (var_registerName, inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1097)) ;
    GALGAS_bitNumberExpression var_bitNumber ;
    nt_bit_5F_number_5F_parsing_ (var_bitNumber, inCompiler) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_FBA::constructor_new (var_instructionLocation, var_bitOrientedOp, var_registerName, var_bitNumber  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1099)) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jsr) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1105)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1106)) ;
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1107)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_JSR::constructor_new (var_instructionLocation, var_targetLabelName, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE ("pic18_syntax.galgas", 1111))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1108)) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_call) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1113)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1114)) ;
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1115)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_JSR::constructor_new (var_instructionLocation, var_targetLabelName, GALGAS_jumpInstructionKind::constructor_absolute (SOURCE_FILE ("pic18_syntax.galgas", 1119))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1116)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rcall) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1121)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1122)) ;
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1123)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_JSR::constructor_new (var_instructionLocation, var_targetLabelName, GALGAS_jumpInstructionKind::constructor_relative (SOURCE_FILE ("pic18_syntax.galgas", 1127))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1124)) ;
  } break ;
  case 8: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrwdt) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1129)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_withNoOperand::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1130)), GALGAS_pic_31__38_InstructionWithNoOperandKind::constructor_CLRWDT (SOURCE_FILE ("pic18_syntax.galgas", 1130))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1130)) ;
  } break ;
  case 9: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_daw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1132)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_withNoOperand::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1133)), GALGAS_pic_31__38_InstructionWithNoOperandKind::constructor_DAW (SOURCE_FILE ("pic18_syntax.galgas", 1133))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1133)) ;
  } break ;
  case 10: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_nop) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1135)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_withNoOperand::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1136)), GALGAS_pic_31__38_InstructionWithNoOperandKind::constructor_NOP (SOURCE_FILE ("pic18_syntax.galgas", 1136))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1136)) ;
  } break ;
  case 11: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_pop) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1138)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_withNoOperand::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1139)), GALGAS_pic_31__38_InstructionWithNoOperandKind::constructor_POP (SOURCE_FILE ("pic18_syntax.galgas", 1139))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1139)) ;
  } break ;
  case 12: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_push) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1141)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_withNoOperand::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1142)), GALGAS_pic_31__38_InstructionWithNoOperandKind::constructor_PUSH (SOURCE_FILE ("pic18_syntax.galgas", 1142))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1142)) ;
  } break ;
  case 13: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_reset) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1144)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_withNoOperand::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1145)), GALGAS_pic_31__38_InstructionWithNoOperandKind::constructor_RESET (SOURCE_FILE ("pic18_syntax.galgas", 1145))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1145)) ;
  } break ;
  case 14: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_sleep) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1147)) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_withNoOperand::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1148)), GALGAS_pic_31__38_InstructionWithNoOperandKind::constructor_SLEEP (SOURCE_FILE ("pic18_syntax.galgas", 1148))  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1148)) ;
  } break ;
  case 15: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_fnop) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1150)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1151)) ;
    GALGAS_immediatExpression var_expression ;
    nt_immediate_5F_expression_ (var_expression, inCompiler) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_fnop::constructor_new (var_instructionLocation, var_expression  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1153)) ;
  } break ;
  case 16: {
    GALGAS_literal_5F_instruction_5F_opcode var_literalInstruction ;
    switch (select_pic_31__38__5F_syntax_44 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addlw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1159)) ;
      var_literalInstruction = GALGAS_literal_5F_instruction_5F_opcode::constructor_ADDLW (SOURCE_FILE ("pic18_syntax.galgas", 1159)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andlw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1161)) ;
      var_literalInstruction = GALGAS_literal_5F_instruction_5F_opcode::constructor_ANDLW (SOURCE_FILE ("pic18_syntax.galgas", 1161)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorlw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1163)) ;
      var_literalInstruction = GALGAS_literal_5F_instruction_5F_opcode::constructor_IORLW (SOURCE_FILE ("pic18_syntax.galgas", 1163)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movlw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1165)) ;
      var_literalInstruction = GALGAS_literal_5F_instruction_5F_opcode::constructor_MOVLW (SOURCE_FILE ("pic18_syntax.galgas", 1165)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mullw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1167)) ;
      var_literalInstruction = GALGAS_literal_5F_instruction_5F_opcode::constructor_MULLW (SOURCE_FILE ("pic18_syntax.galgas", 1167)) ;
    } break ;
    case 6: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_sublw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1169)) ;
      var_literalInstruction = GALGAS_literal_5F_instruction_5F_opcode::constructor_SUBLW (SOURCE_FILE ("pic18_syntax.galgas", 1169)) ;
    } break ;
    case 7: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorlw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1171)) ;
      var_literalInstruction = GALGAS_literal_5F_instruction_5F_opcode::constructor_XORLW (SOURCE_FILE ("pic18_syntax.galgas", 1171)) ;
    } break ;
    default:
      break ;
    }
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1173)) ;
    GALGAS_immediatExpression var_expression ;
    nt_immediate_5F_expression_ (var_expression, inCompiler) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_literalOperation::constructor_new (var_instructionLocation, var_literalInstruction, var_expression  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1175)) ;
  } break ;
  case 17: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_lfsr) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1180)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1181)) ;
    GALGAS_luint var_FSRindex = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1182)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1183)) ;
    GALGAS_immediatExpression var_expression ;
    nt_immediate_5F_expression_ (var_expression, inCompiler) ;
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_LFSR::constructor_new (var_instructionLocation, var_FSRindex, var_expression  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1186)) ;
  } break ;
  case 18: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_tblrd) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1188)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1189)) ;
    GALGAS_tableAccessOption var_accessOption ;
    switch (select_pic_31__38__5F_syntax_45 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1192)) ;
      var_accessOption = GALGAS_tableAccessOption::constructor_simpleAccess (SOURCE_FILE ("pic18_syntax.galgas", 1193)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A__2B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1195)) ;
      var_accessOption = GALGAS_tableAccessOption::constructor_postIncrement (SOURCE_FILE ("pic18_syntax.galgas", 1196)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A__2D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1198)) ;
      var_accessOption = GALGAS_tableAccessOption::constructor_postDecrement (SOURCE_FILE ("pic18_syntax.galgas", 1199)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2B__2A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1201)) ;
      var_accessOption = GALGAS_tableAccessOption::constructor_preIncrement (SOURCE_FILE ("pic18_syntax.galgas", 1202)) ;
    } break ;
    default:
      break ;
    }
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_TBLRD::constructor_new (var_instructionLocation, var_accessOption  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1204)) ;
  } break ;
  case 19: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_tblwt) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1206)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1207)) ;
    GALGAS_tableAccessOption var_accessOption ;
    switch (select_pic_31__38__5F_syntax_46 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1210)) ;
      var_accessOption = GALGAS_tableAccessOption::constructor_simpleAccess (SOURCE_FILE ("pic18_syntax.galgas", 1211)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A__2B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1213)) ;
      var_accessOption = GALGAS_tableAccessOption::constructor_postIncrement (SOURCE_FILE ("pic18_syntax.galgas", 1214)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A__2D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1216)) ;
      var_accessOption = GALGAS_tableAccessOption::constructor_postDecrement (SOURCE_FILE ("pic18_syntax.galgas", 1217)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2B__2A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1219)) ;
      var_accessOption = GALGAS_tableAccessOption::constructor_preIncrement (SOURCE_FILE ("pic18_syntax.galgas", 1220)) ;
    } break ;
    default:
      break ;
    }
    outArgument_outInstruction = GALGAS_pic_31__38_Instruction_5F_TBLWT::constructor_new (var_instructionLocation, var_accessOption  COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1222)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_simple_5F_instruction_i16_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_pic_31__38__5F_syntax_40 (inCompiler)) {
  case 1: {
    switch (select_pic_31__38__5F_syntax_41 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addwf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 988)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addwfc) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 991)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andwf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 994)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_comf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 997)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1000)) ;
    } break ;
    case 6: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1003)) ;
    } break ;
    case 7: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorwf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1006)) ;
    } break ;
    case 8: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1009)) ;
    } break ;
    case 9: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rlcf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1012)) ;
    } break ;
    case 10: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rlncf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1015)) ;
    } break ;
    case 11: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rrcf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1018)) ;
    } break ;
    case 12: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rrncf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1021)) ;
    } break ;
    case 13: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subfwb) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1024)) ;
    } break ;
    case 14: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subwf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1027)) ;
    } break ;
    case 15: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subwfb) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1030)) ;
    } break ;
    case 16: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_swapf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1033)) ;
    } break ;
    case 17: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorwf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1036)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_parse (inCompiler) ;
    nt_optional_5F_w_5F_as_5F_dest_parse (inCompiler) ;
  } break ;
  case 2: {
    switch (select_pic_31__38__5F_syntax_42 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1052)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movwf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1055)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mulwf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1058)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_negf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1061)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_setf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1064)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_parse (inCompiler) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movff) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1075)) ;
    nt_register_5F_parsing_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1079)) ;
    nt_register_5F_parsing_parse (inCompiler) ;
  } break ;
  case 4: {
    switch (select_pic_31__38__5F_syntax_43 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bcf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1089)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bsf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1091)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_btg) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1093)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1097)) ;
    nt_bit_5F_number_5F_parsing_parse (inCompiler) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jsr) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1105)) ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1107)) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_call) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1113)) ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1115)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rcall) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1121)) ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1123)) ;
  } break ;
  case 8: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrwdt) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1129)) ;
  } break ;
  case 9: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_daw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1132)) ;
  } break ;
  case 10: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_nop) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1135)) ;
  } break ;
  case 11: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_pop) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1138)) ;
  } break ;
  case 12: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_push) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1141)) ;
  } break ;
  case 13: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_reset) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1144)) ;
  } break ;
  case 14: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_sleep) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1147)) ;
  } break ;
  case 15: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_fnop) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1150)) ;
    nt_immediate_5F_expression_parse (inCompiler) ;
  } break ;
  case 16: {
    switch (select_pic_31__38__5F_syntax_44 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addlw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1159)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andlw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1161)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorlw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1163)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movlw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1165)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mullw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1167)) ;
    } break ;
    case 6: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_sublw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1169)) ;
    } break ;
    case 7: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorlw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1171)) ;
    } break ;
    default:
      break ;
    }
    nt_immediate_5F_expression_parse (inCompiler) ;
  } break ;
  case 17: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_lfsr) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1180)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1182)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1183)) ;
    nt_immediate_5F_expression_parse (inCompiler) ;
  } break ;
  case 18: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_tblrd) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1188)) ;
    switch (select_pic_31__38__5F_syntax_45 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1192)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A__2B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1195)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A__2D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1198)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2B__2A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1201)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 19: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_tblwt) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1206)) ;
    switch (select_pic_31__38__5F_syntax_46 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1210)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A__2B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1213)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A__2D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1216)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2B__2A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1219)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_syntax::rule_pic_31__38__5F_syntax_simple_5F_instruction_i16_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_pic_31__38__5F_syntax_40 (inCompiler)) {
  case 1: {
    switch (select_pic_31__38__5F_syntax_41 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addwf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 988)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addwfc) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 991)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andwf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 994)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_comf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 997)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1000)) ;
    } break ;
    case 6: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1003)) ;
    } break ;
    case 7: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorwf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1006)) ;
    } break ;
    case 8: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1009)) ;
    } break ;
    case 9: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rlcf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1012)) ;
    } break ;
    case 10: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rlncf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1015)) ;
    } break ;
    case 11: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rrcf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1018)) ;
    } break ;
    case 12: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rrncf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1021)) ;
    } break ;
    case 13: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subfwb) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1024)) ;
    } break ;
    case 14: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subwf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1027)) ;
    } break ;
    case 15: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subwfb) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1030)) ;
    } break ;
    case 16: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_swapf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1033)) ;
    } break ;
    case 17: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorwf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1036)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_indexing (inCompiler) ;
    nt_optional_5F_w_5F_as_5F_dest_indexing (inCompiler) ;
  } break ;
  case 2: {
    switch (select_pic_31__38__5F_syntax_42 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1052)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movwf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1055)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mulwf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1058)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_negf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1061)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_setf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1064)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_indexing (inCompiler) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movff) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1075)) ;
    nt_register_5F_parsing_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1079)) ;
    nt_register_5F_parsing_indexing (inCompiler) ;
  } break ;
  case 4: {
    switch (select_pic_31__38__5F_syntax_43 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bcf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1089)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bsf) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1091)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_btg) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1093)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1097)) ;
    nt_bit_5F_number_5F_parsing_indexing (inCompiler) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jsr) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1105)) ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1107)) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_call) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1113)) ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1115)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rcall) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1121)) ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1123)) ;
  } break ;
  case 8: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrwdt) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1129)) ;
  } break ;
  case 9: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_daw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1132)) ;
  } break ;
  case 10: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_nop) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1135)) ;
  } break ;
  case 11: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_pop) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1138)) ;
  } break ;
  case 12: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_push) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1141)) ;
  } break ;
  case 13: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_reset) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1144)) ;
  } break ;
  case 14: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_sleep) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1147)) ;
  } break ;
  case 15: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_fnop) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1150)) ;
    nt_immediate_5F_expression_indexing (inCompiler) ;
  } break ;
  case 16: {
    switch (select_pic_31__38__5F_syntax_44 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addlw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1159)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andlw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1161)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorlw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1163)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movlw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1165)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mullw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1167)) ;
    } break ;
    case 6: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_sublw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1169)) ;
    } break ;
    case 7: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorlw) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1171)) ;
    } break ;
    default:
      break ;
    }
    nt_immediate_5F_expression_indexing (inCompiler) ;
  } break ;
  case 17: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_lfsr) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1180)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1182)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1183)) ;
    nt_immediate_5F_expression_indexing (inCompiler) ;
  } break ;
  case 18: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_tblrd) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1188)) ;
    switch (select_pic_31__38__5F_syntax_45 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1192)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A__2B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1195)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A__2D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1198)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2B__2A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1201)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 19: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_tblwt) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1206)) ;
    switch (select_pic_31__38__5F_syntax_46 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1210)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A__2B_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1213)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A__2D_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1216)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2B__2A_) COMMA_SOURCE_FILE ("pic18_syntax.galgas", 1219)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
}



//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_start_5F_symbol::rule_pic_31__38__5F_start_5F_symbol_start_5F_symbol_i0_ (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_pic_31__38_) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 22)) ;
  GALGAS_lstring var_programName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 23)) ;
  GALGAS_lstring var_deviceNameOrBootloaderReference ;
  GALGAS_programKind var_programKind ;
  switch (select_pic_31__38__5F_start_5F_symbol_0 (inCompiler)) {
  case 1: {
    var_programKind = GALGAS_programKind::constructor_regularProgram (SOURCE_FILE ("pic18_start_symbol.galgas", 27)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_implements) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 29)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bootloader) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 30)) ;
    var_programKind = GALGAS_programKind::constructor_bootloaderProgram (SOURCE_FILE ("pic18_start_symbol.galgas", 31)) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_uses) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 33)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bootloader) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 34)) ;
    var_programKind = GALGAS_programKind::constructor_userProgram (SOURCE_FILE ("pic18_start_symbol.galgas", 35)) ;
  } break ;
  default:
    break ;
  }
  var_deviceNameOrBootloaderReference = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 37)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 38)) ;
  GALGAS_pic_31__38_InterruptDefinitionList var_interruptDefinitionList = GALGAS_pic_31__38_InterruptDefinitionList::constructor_emptyList (SOURCE_FILE ("pic18_start_symbol.galgas", 39)) ;
  GALGAS_pic_31__38_RoutineDefinitionList var_routineDefinitionList = GALGAS_pic_31__38_RoutineDefinitionList::constructor_emptyList (SOURCE_FILE ("pic18_start_symbol.galgas", 40)) ;
  GALGAS_lstringlist var_unusedRoutineList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE ("pic18_start_symbol.galgas", 41)) ;
  GALGAS_ramDefinitionList var_ramDefinitionList = GALGAS_ramDefinitionList::constructor_emptyList (SOURCE_FILE ("pic18_start_symbol.galgas", 42)) ;
  GALGAS_lstringlist var_unusedRegisterList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE ("pic18_start_symbol.galgas", 43)) ;
  GALGAS_configDefinitionList var_configDefinitionList = GALGAS_configDefinitionList::constructor_emptyList (SOURCE_FILE ("pic18_start_symbol.galgas", 44)) ;
  GALGAS_constantDefinitionList var_constantDefinitionList = GALGAS_constantDefinitionList::constructor_emptyList (SOURCE_FILE ("pic18_start_symbol.galgas", 45)) ;
  GALGAS_dataList var_dataList = GALGAS_dataList::constructor_emptyList (SOURCE_FILE ("pic18_start_symbol.galgas", 46)) ;
  GALGAS_checkpicList var_checkpicList = GALGAS_checkpicList::constructor_emptyList (SOURCE_FILE ("pic18_start_symbol.galgas", 47)) ;
  GALGAS_lstringlist var_inlinedRoutineList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE ("pic18_start_symbol.galgas", 48)) ;
  GALGAS_bool var_needsComputedGoto_32_ = GALGAS_bool (false) ;
  GALGAS_bool var_needsComputedGoto_34_ = GALGAS_bool (false) ;
  nt_body_ (var_interruptDefinitionList, var_routineDefinitionList, var_unusedRoutineList, var_inlinedRoutineList, var_ramDefinitionList, var_unusedRegisterList, var_configDefinitionList, var_constantDefinitionList, var_checkpicList, var_dataList, var_needsComputedGoto_32_, var_needsComputedGoto_34_, inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 64)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("pic18_start_symbol.galgas", 66)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_pic_31__38_AST var_piccoloModel = GALGAS_pic_31__38_AST::constructor_new (var_programName, var_programKind, var_deviceNameOrBootloaderReference, var_configDefinitionList, var_ramDefinitionList, var_unusedRegisterList, var_checkpicList, var_dataList, var_interruptDefinitionList, var_constantDefinitionList, var_routineDefinitionList, var_unusedRoutineList, var_inlinedRoutineList, var_needsComputedGoto_32_, var_needsComputedGoto_34_, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 83))  COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 67)) ;
    {
    routine_pic_31__38__5F_analyze (var_piccoloModel, GALGAS_string::constructor_stringWithSourceFilePath (inCompiler  COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 85)), inCompiler  COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 85)) ;
    }
  }else if (kBoolFalse == test_0) {
    GALGAS_string var_hexDestinationFile = GALGAS_string::constructor_stringWithSourceFilePath (inCompiler  COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 87)).reader_stringByDeletingPathExtension (SOURCE_FILE ("pic18_start_symbol.galgas", 87)).add_operation (GALGAS_string (".hex"), inCompiler COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 87)) ;
    const enumGalgasBool test_1 = var_hexDestinationFile.reader_fileExists (SOURCE_FILE ("pic18_start_symbol.galgas", 88)).boolEnum () ;
    if (kBoolTrue == test_1) {
      {
      GALGAS_string::class_method_deleteFile (var_hexDestinationFile, inCompiler COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 89)) ;
      }
    }
    GALGAS_string var_asmDestinationFile = GALGAS_string::constructor_stringWithSourceFilePath (inCompiler  COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 91)).reader_stringByDeletingPathExtension (SOURCE_FILE ("pic18_start_symbol.galgas", 91)).add_operation (GALGAS_string (".asm"), inCompiler COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 91)) ;
    const enumGalgasBool test_2 = var_asmDestinationFile.reader_fileExists (SOURCE_FILE ("pic18_start_symbol.galgas", 92)).boolEnum () ;
    if (kBoolTrue == test_2) {
      {
      GALGAS_string::class_method_deleteFile (var_asmDestinationFile, inCompiler COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 93)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_start_5F_symbol::rule_pic_31__38__5F_start_5F_symbol_start_5F_symbol_i0_importBootloaderSpecification (GALGAS_piccoloDeviceModel & outArgument_outPiccoloDeviceModel,
                                                                                                                                   GALGAS_string & outArgument_outDeviceName,
                                                                                                                                   GALGAS_uint & outArgument_outAccessBankSplitOffset,
                                                                                                                                   GALGAS_ramBankTable & outArgument_outRamBank,
                                                                                                                                   GALGAS_registerTable & outArgument_outRegisterTable,
                                                                                                                                   GALGAS_bootloaderReservedRAMmap & outArgument_outBootloaderReservedRAMmap,
                                                                                                                                   GALGAS_routineDeclarationList & outArgument_outBootloaderRoutineDeclarationList,
                                                                                                                                   GALGAS_routineDeclarationList & outArgument_outUserRoutineDeclarationList,
                                                                                                                                   GALGAS_luint & outArgument_outBootloaderReservedROMsize,
                                                                                                                                   C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outPiccoloDeviceModel.drop () ; // Release 'out' argument
  outArgument_outDeviceName.drop () ; // Release 'out' argument
  outArgument_outAccessBankSplitOffset.drop () ; // Release 'out' argument
  outArgument_outRamBank.drop () ; // Release 'out' argument
  outArgument_outRegisterTable.drop () ; // Release 'out' argument
  outArgument_outBootloaderReservedRAMmap.drop () ; // Release 'out' argument
  outArgument_outBootloaderRoutineDeclarationList.drop () ; // Release 'out' argument
  outArgument_outUserRoutineDeclarationList.drop () ; // Release 'out' argument
  outArgument_outBootloaderReservedROMsize.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_pic_31__38_) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 107)) ;
  GALGAS_lstring var_programName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 108)) ;
  GALGAS_location location_0 (var_programName.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_0, GALGAS_string ("this file does not define a bootloader specification")  COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 109)) ;
  outArgument_outPiccoloDeviceModel.drop () ; // Release error dropped variable
  outArgument_outAccessBankSplitOffset.drop () ; // Release error dropped variable
  outArgument_outRamBank.drop () ; // Release error dropped variable
  outArgument_outRegisterTable.drop () ; // Release error dropped variable
  outArgument_outBootloaderReservedRAMmap.drop () ; // Release error dropped variable
  outArgument_outDeviceName.drop () ; // Release error dropped variable
  outArgument_outBootloaderRoutineDeclarationList.drop () ; // Release error dropped variable
  outArgument_outUserRoutineDeclarationList.drop () ; // Release error dropped variable
  outArgument_outBootloaderReservedROMsize.drop () ; // Release error dropped variable
  switch (select_pic_31__38__5F_start_5F_symbol_0 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_implements) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 117)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bootloader) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 118)) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_uses) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 120)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bootloader) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 121)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 123)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 124)) ;
  nt_body_parse (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 126)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_start_5F_symbol::rule_pic_31__38__5F_start_5F_symbol_start_5F_symbol_i0_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_pic_31__38_) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 22)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 23)) ;
  switch (select_pic_31__38__5F_start_5F_symbol_0 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_implements) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 29)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bootloader) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 30)) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_uses) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 33)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bootloader) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 34)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 37)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 38)) ;
  nt_body_parse (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 64)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_start_5F_symbol::rule_pic_31__38__5F_start_5F_symbol_start_5F_symbol_i0_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_pic_31__38_) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 22)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 23)) ;
  switch (select_pic_31__38__5F_start_5F_symbol_0 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_implements) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 29)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bootloader) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 30)) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_uses) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 33)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bootloader) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 34)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 37)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 38)) ;
  nt_body_indexing (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("pic18_start_symbol.galgas", 64)) ;
}



//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_start_5F_symbol_i0_ (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_midrange) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 32)) ;
  GALGAS_lstring var_programName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 33)) ;
  GALGAS_lstring var_deviceName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 34)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 35)) ;
  GALGAS_midrange_5F_interruptDefinitionList var_interruptDefinitionList = GALGAS_midrange_5F_interruptDefinitionList::constructor_emptyList (SOURCE_FILE ("midrange_syntax.galgas", 36)) ;
  GALGAS_midrange_5F_routineDefinitionList var_routineDefinitionList = GALGAS_midrange_5F_routineDefinitionList::constructor_emptyList (SOURCE_FILE ("midrange_syntax.galgas", 37)) ;
  GALGAS_ramDefinitionList var_ramDefinitionList = GALGAS_ramDefinitionList::constructor_emptyList (SOURCE_FILE ("midrange_syntax.galgas", 38)) ;
  GALGAS_lstringlist var_unusedRegisterList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE ("midrange_syntax.galgas", 39)) ;
  GALGAS_lstringlist var_unusedRoutineList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE ("midrange_syntax.galgas", 40)) ;
  GALGAS_configDefinitionList var_configDefinitionList = GALGAS_configDefinitionList::constructor_emptyList (SOURCE_FILE ("midrange_syntax.galgas", 41)) ;
  GALGAS_constantDefinitionList var_constantDefinitionList = GALGAS_constantDefinitionList::constructor_emptyList (SOURCE_FILE ("midrange_syntax.galgas", 42)) ;
  GALGAS_bool var_needsComputedGoto_32_ = GALGAS_bool (false) ;
  GALGAS_bool var_needsComputedGoto_34_ = GALGAS_bool (false) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_midrange_5F_syntax_0 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mark) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 47)) ;
      GALGAS_lstring var_s = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 48)) ;
      GALGAS_location location_1 (var_s.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticWarning (location_1, GALGAS_string ("obsolete construct: use a comment beginning by #!")  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 49)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_unused) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 51)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_byte) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 52)) ;
      bool repeatFlag_2 = true ;
      while (repeatFlag_2) {
        GALGAS_lstring var_unusedRegister = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 54)) ;
        var_unusedRegisterList.addAssign_operation (var_unusedRegister  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 55)) ;
        switch (select_midrange_5F_syntax_1 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 57)) ;
        } break ;
        default:
          repeatFlag_2 = false ;
          break ;
        }
      }
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_unused) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 60)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 61)) ;
      bool repeatFlag_3 = true ;
      while (repeatFlag_3) {
        GALGAS_lstring var_unusedRoutine = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 63)) ;
        var_unusedRoutineList.addAssign_operation (var_unusedRoutine  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 64)) ;
        switch (select_midrange_5F_syntax_2 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 66)) ;
        } break ;
        default:
          repeatFlag_3 = false ;
          break ;
        }
      }
    } break ;
    case 5: {
      nt_configuration_5F_definition_ (var_configDefinitionList, inCompiler) ;
    } break ;
    case 6: {
      nt_ram_5F_definition_ (var_ramDefinitionList, inCompiler) ;
    } break ;
    case 7: {
      nt_constant_5F_definition_ (var_constantDefinitionList, inCompiler) ;
    } break ;
    case 8: {
      nt_midrange_5F_interrupt_5F_definition_ (var_interruptDefinitionList, var_needsComputedGoto_32_, var_needsComputedGoto_34_, inCompiler) ;
    } break ;
    case 9: {
      nt_midrange_5F_routine_5F_definition_ (var_routineDefinitionList, var_needsComputedGoto_32_, var_needsComputedGoto_34_, inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 85)) ;
  const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("midrange_syntax.galgas", 87)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_4) {
    GALGAS_midrange_5F_model var_piccoloModel = GALGAS_midrange_5F_model::constructor_new (var_programName, var_deviceName, var_configDefinitionList, var_ramDefinitionList, var_unusedRegisterList, var_interruptDefinitionList, var_constantDefinitionList, var_routineDefinitionList, var_unusedRoutineList, var_needsComputedGoto_32_, var_needsComputedGoto_34_, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 100))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 88)) ;
    {
    routine_midrange_5F_analyze (var_piccoloModel, GALGAS_string::constructor_stringWithSourceFilePath (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 102)), inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 102)) ;
    }
  }else if (kBoolFalse == test_4) {
    GALGAS_string var_hexDestinationFile = GALGAS_string::constructor_stringWithSourceFilePath (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 104)).reader_stringByDeletingPathExtension (SOURCE_FILE ("midrange_syntax.galgas", 104)).add_operation (GALGAS_string (".hex"), inCompiler COMMA_SOURCE_FILE ("midrange_syntax.galgas", 104)) ;
    const enumGalgasBool test_5 = var_hexDestinationFile.reader_fileExists (SOURCE_FILE ("midrange_syntax.galgas", 105)).boolEnum () ;
    if (kBoolTrue == test_5) {
      {
      GALGAS_string::class_method_deleteFile (var_hexDestinationFile, inCompiler COMMA_SOURCE_FILE ("midrange_syntax.galgas", 106)) ;
      }
    }
    GALGAS_string var_asmDestinationFile = GALGAS_string::constructor_stringWithSourceFilePath (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 108)).reader_stringByDeletingPathExtension (SOURCE_FILE ("midrange_syntax.galgas", 108)).add_operation (GALGAS_string (".asm"), inCompiler COMMA_SOURCE_FILE ("midrange_syntax.galgas", 108)) ;
    const enumGalgasBool test_6 = var_asmDestinationFile.reader_fileExists (SOURCE_FILE ("midrange_syntax.galgas", 109)).boolEnum () ;
    if (kBoolTrue == test_6) {
      {
      GALGAS_string::class_method_deleteFile (var_asmDestinationFile, inCompiler COMMA_SOURCE_FILE ("midrange_syntax.galgas", 110)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_start_5F_symbol_i0_importBootloaderSpecification (GALGAS_piccoloDeviceModel & outArgument_outPiccoloDeviceModel,
                                                                                                           GALGAS_string & outArgument_outDeviceName,
                                                                                                           GALGAS_uint & outArgument_outAccessBankSplitOffset,
                                                                                                           GALGAS_ramBankTable & outArgument_outRamBank,
                                                                                                           GALGAS_registerTable & outArgument_outRegisterTable,
                                                                                                           GALGAS_bootloaderReservedRAMmap & outArgument_outBootloaderReservedRAMmap,
                                                                                                           GALGAS_routineDeclarationList & outArgument_outBootloaderRoutineDeclarationList,
                                                                                                           GALGAS_routineDeclarationList & outArgument_outUserRoutineDeclarationList,
                                                                                                           GALGAS_luint & outArgument_outBootloaderReservedROMsize,
                                                                                                           C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outPiccoloDeviceModel.drop () ; // Release 'out' argument
  outArgument_outDeviceName.drop () ; // Release 'out' argument
  outArgument_outAccessBankSplitOffset.drop () ; // Release 'out' argument
  outArgument_outRamBank.drop () ; // Release 'out' argument
  outArgument_outRegisterTable.drop () ; // Release 'out' argument
  outArgument_outBootloaderReservedRAMmap.drop () ; // Release 'out' argument
  outArgument_outBootloaderRoutineDeclarationList.drop () ; // Release 'out' argument
  outArgument_outUserRoutineDeclarationList.drop () ; // Release 'out' argument
  outArgument_outBootloaderReservedROMsize.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_midrange) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 124)) ;
  GALGAS_lstring var_programName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 125)) ;
  GALGAS_location location_0 (var_programName.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_0, GALGAS_string ("this file does not define a bootloader specification")  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 126)) ;
  outArgument_outPiccoloDeviceModel.drop () ; // Release error dropped variable
  outArgument_outAccessBankSplitOffset.drop () ; // Release error dropped variable
  outArgument_outRamBank.drop () ; // Release error dropped variable
  outArgument_outRegisterTable.drop () ; // Release error dropped variable
  outArgument_outBootloaderReservedRAMmap.drop () ; // Release error dropped variable
  outArgument_outBootloaderRoutineDeclarationList.drop () ; // Release error dropped variable
  outArgument_outUserRoutineDeclarationList.drop () ; // Release error dropped variable
  outArgument_outDeviceName.drop () ; // Release error dropped variable
  outArgument_outBootloaderReservedROMsize.drop () ; // Release error dropped variable
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 131)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 132)) ;
  bool repeatFlag_1 = true ;
  while (repeatFlag_1) {
    switch (select_midrange_5F_syntax_0 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mark) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 135)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 136)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_unused) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 138)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_byte) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 139)) ;
      bool repeatFlag_2 = true ;
      while (repeatFlag_2) {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 141)) ;
        switch (select_midrange_5F_syntax_1 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 143)) ;
        } break ;
        default:
          repeatFlag_2 = false ;
          break ;
        }
      }
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_unused) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 146)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 147)) ;
      bool repeatFlag_3 = true ;
      while (repeatFlag_3) {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 149)) ;
        switch (select_midrange_5F_syntax_2 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 151)) ;
        } break ;
        default:
          repeatFlag_3 = false ;
          break ;
        }
      }
    } break ;
    case 5: {
      nt_configuration_5F_definition_parse (inCompiler) ;
    } break ;
    case 6: {
      nt_ram_5F_definition_parse (inCompiler) ;
    } break ;
    case 7: {
      nt_constant_5F_definition_parse (inCompiler) ;
    } break ;
    case 8: {
      nt_midrange_5F_interrupt_5F_definition_parse (inCompiler) ;
    } break ;
    case 9: {
      nt_midrange_5F_routine_5F_definition_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_1 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 164)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_start_5F_symbol_i0_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_midrange) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 32)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 33)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 34)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 35)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_midrange_5F_syntax_0 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mark) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 47)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 48)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_unused) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 51)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_byte) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 52)) ;
      bool repeatFlag_1 = true ;
      while (repeatFlag_1) {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 54)) ;
        switch (select_midrange_5F_syntax_1 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 57)) ;
        } break ;
        default:
          repeatFlag_1 = false ;
          break ;
        }
      }
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_unused) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 60)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 61)) ;
      bool repeatFlag_2 = true ;
      while (repeatFlag_2) {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 63)) ;
        switch (select_midrange_5F_syntax_2 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 66)) ;
        } break ;
        default:
          repeatFlag_2 = false ;
          break ;
        }
      }
    } break ;
    case 5: {
      nt_configuration_5F_definition_parse (inCompiler) ;
    } break ;
    case 6: {
      nt_ram_5F_definition_parse (inCompiler) ;
    } break ;
    case 7: {
      nt_constant_5F_definition_parse (inCompiler) ;
    } break ;
    case 8: {
      nt_midrange_5F_interrupt_5F_definition_parse (inCompiler) ;
    } break ;
    case 9: {
      nt_midrange_5F_routine_5F_definition_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 85)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_start_5F_symbol_i0_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_midrange) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 32)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 33)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 34)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 35)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_midrange_5F_syntax_0 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mark) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 47)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 48)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_unused) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 51)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_byte) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 52)) ;
      bool repeatFlag_1 = true ;
      while (repeatFlag_1) {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 54)) ;
        switch (select_midrange_5F_syntax_1 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 57)) ;
        } break ;
        default:
          repeatFlag_1 = false ;
          break ;
        }
      }
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_unused) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 60)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 61)) ;
      bool repeatFlag_2 = true ;
      while (repeatFlag_2) {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 63)) ;
        switch (select_midrange_5F_syntax_2 (inCompiler)) {
        case 2: {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 66)) ;
        } break ;
        default:
          repeatFlag_2 = false ;
          break ;
        }
      }
    } break ;
    case 5: {
      nt_configuration_5F_definition_indexing (inCompiler) ;
    } break ;
    case 6: {
      nt_ram_5F_definition_indexing (inCompiler) ;
    } break ;
    case 7: {
      nt_constant_5F_definition_indexing (inCompiler) ;
    } break ;
    case 8: {
      nt_midrange_5F_interrupt_5F_definition_indexing (inCompiler) ;
    } break ;
    case 9: {
      nt_midrange_5F_routine_5F_definition_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 85)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_instruction_5F_list_i1_ (GALGAS_midrange_5F_instructionList & outArgument_outInstructionList,
                                                                                              GALGAS_bool & ioArgument_ioNeedsComputedGoto_32_,
                                                                                              GALGAS_bool & ioArgument_ioNeedsComputedGoto_34_,
                                                                                              C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outInstructionList.drop () ; // Release 'out' argument
  outArgument_outInstructionList = GALGAS_midrange_5F_instructionList::constructor_emptyList (SOURCE_FILE ("midrange_syntax.galgas", 173)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_midrange_5F_syntax_3 (inCompiler)) {
    case 2: {
      GALGAS_midrange_5F_instruction var_instruction ;
      nt_midrange_5F_simple_5F_instruction_ (var_instruction, inCompiler) ;
      outArgument_outInstructionList.addAssign_operation (var_instruction  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 178)) ;
    } break ;
    case 3: {
      GALGAS_midrange_5F_instruction var_instruction ;
      nt_midrange_5F_structured_5F_instruction_ (var_instruction, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
      outArgument_outInstructionList.addAssign_operation (var_instruction  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 185)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_instruction_5F_list_i1_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_midrange_5F_syntax_3 (inCompiler)) {
    case 2: {
      nt_midrange_5F_simple_5F_instruction_parse (inCompiler) ;
    } break ;
    case 3: {
      nt_midrange_5F_structured_5F_instruction_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_instruction_5F_list_i1_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_midrange_5F_syntax_3 (inCompiler)) {
    case 2: {
      nt_midrange_5F_simple_5F_instruction_indexing (inCompiler) ;
    } break ;
    case 3: {
      nt_midrange_5F_structured_5F_instruction_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_interrupt_5F_definition_i2_ (GALGAS_midrange_5F_interruptDefinitionList & ioArgument_ioInterruptDefinitionList,
                                                                                                  GALGAS_bool & ioArgument_ioNeedsComputedGoto_32_,
                                                                                                  GALGAS_bool & ioArgument_ioNeedsComputedGoto_34_,
                                                                                                  C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_interrupt) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 195)) ;
  GALGAS_location var_interruptionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 196)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_contextsave) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 197)) ;
  GALGAS_lstring var_firstSaveRegister = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 198)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 199)) ;
  GALGAS_lstring var_secondSaveRegister = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 200)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 201)) ;
  GALGAS_midrange_5F_instructionList var_instructionList ;
  nt_midrange_5F_instruction_5F_list_ (var_instructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 207)) ;
  ioArgument_ioInterruptDefinitionList.addAssign_operation (var_interruptionLocation, var_instructionList, var_firstSaveRegister, var_secondSaveRegister, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 213))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 208)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_interrupt_5F_definition_i2_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_interrupt) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 195)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_contextsave) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 197)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 198)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 199)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 200)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 201)) ;
  nt_midrange_5F_instruction_5F_list_parse (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 207)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_interrupt_5F_definition_i2_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_interrupt) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 195)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_contextsave) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 197)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 198)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 199)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 200)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 201)) ;
  nt_midrange_5F_instruction_5F_list_indexing (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 207)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_routine_5F_definition_i3_ (GALGAS_midrange_5F_routineDefinitionList & ioArgument_ioRoutineDefinitionList,
                                                                                                GALGAS_bool & ioArgument_ioNeedsComputedGoto_32_,
                                                                                                GALGAS_bool & ioArgument_ioNeedsComputedGoto_34_,
                                                                                                C_Lexique_piccolo_5F_lexique * inCompiler) {
  GALGAS_bool var_noreturn ;
  switch (select_midrange_5F_syntax_4 (inCompiler)) {
  case 1: {
    var_noreturn = GALGAS_bool (false) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_noreturn) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 226)) ;
    var_noreturn = GALGAS_bool (true) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 229)) ;
  GALGAS_lstring var_routineName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineDefinition) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 230)) ;
  GALGAS_luint var_page ;
  switch (select_midrange_5F_syntax_5 (inCompiler)) {
  case 1: {
    var_page = GALGAS_luint::constructor_new (GALGAS_uint ((uint32_t) 0U), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 234))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 234)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_page) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 236)) ;
    var_page = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 237)) ;
  } break ;
  default:
    break ;
  }
  GALGAS_luint var_requiredBank ;
  GALGAS_luint var_returnedBank ;
  GALGAS_bool var_preservesBank ;
  switch (select_midrange_5F_syntax_6 (inCompiler)) {
  case 1: {
    var_requiredBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("midrange_syntax.galgas", 244)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 244))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 244)) ;
    var_returnedBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("midrange_syntax.galgas", 245)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 245))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 245)) ;
    var_preservesBank = GALGAS_bool (false) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bank) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 248)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 249)) ;
    switch (select_midrange_5F_syntax_7 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_preserved) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 251)) ;
      const enumGalgasBool test_0 = var_noreturn.boolEnum () ;
      if (kBoolTrue == test_0) {
        inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 253)), GALGAS_string ("a \"noreturn\" routine cannot accept \"bank:preserved\" setting")  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 253)) ;
      }
      var_preservesBank = GALGAS_bool (true) ;
      var_requiredBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("midrange_syntax.galgas", 256)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 256))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 256)) ;
      var_returnedBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("midrange_syntax.galgas", 257)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 257))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 257)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_requires) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 259)) ;
      var_requiredBank = inCompiler->synthetizedAttribute_uint_33__32_value () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 260)) ;
      var_preservesBank = GALGAS_bool (false) ;
      switch (select_midrange_5F_syntax_8 (inCompiler)) {
      case 1: {
        var_returnedBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("midrange_syntax.galgas", 263)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 263))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 263)) ;
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 265)) ;
        var_returnedBank = inCompiler->synthetizedAttribute_uint_33__32_value () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 266)) ;
        const enumGalgasBool test_1 = var_noreturn.boolEnum () ;
        if (kBoolTrue == test_1) {
          inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 268)), GALGAS_string ("a \"noreturn\" routine cannot accept \"bank:returned\" setting")  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 268)) ;
        }
      } break ;
      default:
        break ;
      }
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 272)) ;
      var_returnedBank = inCompiler->synthetizedAttribute_uint_33__32_value () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 273)) ;
      const enumGalgasBool test_2 = var_noreturn.boolEnum () ;
      if (kBoolTrue == test_2) {
        inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 275)), GALGAS_string ("a \"noreturn\" routine cannot accept \"bank:returned\" setting")  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 275)) ;
      }
      var_preservesBank = GALGAS_bool (false) ;
      var_requiredBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("midrange_syntax.galgas", 278)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 278))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 278)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 281)) ;
  GALGAS_midrange_5F_instructionList var_instructionList ;
  nt_midrange_5F_instruction_5F_list_ (var_instructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 287)) ;
  ioArgument_ioRoutineDefinitionList.addAssign_operation (var_routineName, var_page, var_requiredBank, var_returnedBank, var_preservesBank, var_noreturn, var_instructionList, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 296))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 288)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_routine_5F_definition_i3_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_midrange_5F_syntax_4 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_noreturn) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 226)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 229)) ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineDefinition) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 230)) ;
  switch (select_midrange_5F_syntax_5 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_page) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 236)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 237)) ;
  } break ;
  default:
    break ;
  }
  switch (select_midrange_5F_syntax_6 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bank) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 248)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 249)) ;
    switch (select_midrange_5F_syntax_7 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_preserved) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 251)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_requires) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 259)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 260)) ;
      switch (select_midrange_5F_syntax_8 (inCompiler)) {
      case 1: {
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 265)) ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 266)) ;
      } break ;
      default:
        break ;
      }
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 272)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 273)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 281)) ;
  nt_midrange_5F_instruction_5F_list_parse (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 287)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_routine_5F_definition_i3_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_midrange_5F_syntax_4 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_noreturn) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 226)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 229)) ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineDefinition) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 230)) ;
  switch (select_midrange_5F_syntax_5 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_page) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 236)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 237)) ;
  } break ;
  default:
    break ;
  }
  switch (select_midrange_5F_syntax_6 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bank) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 248)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 249)) ;
    switch (select_midrange_5F_syntax_7 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_preserved) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 251)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_requires) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 259)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 260)) ;
      switch (select_midrange_5F_syntax_8 (inCompiler)) {
      case 1: {
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 265)) ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 266)) ;
      } break ;
      default:
        break ;
      }
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 272)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 273)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 281)) ;
  nt_midrange_5F_instruction_5F_list_indexing (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 287)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_structured_5F_instruction_i4_ (GALGAS_midrange_5F_instruction & outArgument_outInstruction,
                                                                                                    GALGAS_bool & ioArgument_ioNeedsComputedGoto_32_,
                                                                                                    GALGAS_bool & ioArgument_ioNeedsComputedGoto_34_,
                                                                                                    C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  switch (select_midrange_5F_syntax_9 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_do) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 306)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 307)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 308)) ;
    GALGAS_immediatExpression var_repeatExpression ;
    nt_immediate_5F_expression_ (var_repeatExpression, inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 310)) ;
    GALGAS_midrange_5F_instructionList var_instructionList ;
    nt_midrange_5F_instruction_5F_list_ (var_instructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
    outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_STATIC_5F_REPEAT::constructor_new (var_instructionLocation, var_repeatExpression, var_instructionList, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 316))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 312)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 317)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_checkbank) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 319)) ;
    GALGAS_luint var_bankIndex = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 320)) ;
    outArgument_outInstruction = GALGAS_midrangeInstruction_5F_checkbank::constructor_new (var_bankIndex.mAttribute_location, var_bankIndex.mAttribute_uint  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 321)) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_checknobank) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 323)) ;
    outArgument_outInstruction = GALGAS_midrangeInstruction_5F_checknobank::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 324))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 324)) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_banksel) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 326)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 327)) ;
    GALGAS_registerExpression var_register ;
    nt_register_5F_parsing_ (var_register, inCompiler) ;
    GALGAS_bool var_warningOnUselessBanksel ;
    switch (select_midrange_5F_syntax_10 (inCompiler)) {
    case 1: {
      var_warningOnUselessBanksel = GALGAS_bool (true) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 333)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 334)) ;
      var_warningOnUselessBanksel = GALGAS_bool (false) ;
    } break ;
    default:
      break ;
    }
    outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_banksel_5F_register::constructor_new (var_instructionLocation, var_register, var_warningOnUselessBanksel  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 337)) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_banksel) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 339)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 340)) ;
    GALGAS_luint var_bank = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 341)) ;
    GALGAS_bool var_warningOnUselessBanksel ;
    switch (select_midrange_5F_syntax_11 (inCompiler)) {
    case 1: {
      var_warningOnUselessBanksel = GALGAS_bool (true) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 346)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 347)) ;
      var_warningOnUselessBanksel = GALGAS_bool (false) ;
    } break ;
    default:
      break ;
    }
    outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_banksel::constructor_new (var_instructionLocation, var_bank, var_warningOnUselessBanksel  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 350)) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_banksave) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 352)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 353)) ;
    GALGAS_registerExpression var_register ;
    nt_register_5F_parsing_ (var_register, inCompiler) ;
    GALGAS_midrange_5F_instructionList var_instructionList ;
    nt_midrange_5F_instruction_5F_list_ (var_instructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 360)) ;
    outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_savebank::constructor_new (var_instructionLocation, var_register, var_instructionList, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 365))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 361)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_nobank) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 367)) ;
    outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_nobanksel::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 368))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 368)) ;
  } break ;
  case 8: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_forever) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 370)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 371)) ;
    GALGAS_midrange_5F_instructionList var_instructionList ;
    nt_midrange_5F_instruction_5F_list_ (var_instructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 374)) ;
    outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_FOREVER::constructor_new (var_instructionLocation, var_instructionList, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 378))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 375)) ;
  } break ;
  case 9: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 380)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 381)) ;
    GALGAS_registerExpression var_registerExpression ;
    GALGAS_bitNumberExpression var_bitNumberExpression ;
    GALGAS_bool var_skipIfSet ;
    switch (select_midrange_5F_syntax_12 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 386)) ;
      nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 388)) ;
      nt_bit_5F_number_5F_parsing_ (var_bitNumberExpression, inCompiler) ;
      var_skipIfSet = GALGAS_bool (true) ;
    } break ;
    case 2: {
      nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 393)) ;
      nt_bit_5F_number_5F_parsing_ (var_bitNumberExpression, inCompiler) ;
      var_skipIfSet = GALGAS_bool (false) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 397)) ;
    GALGAS_midrange_5F_instruction var_instruction ;
    nt_midrange_5F_simple_5F_instruction_ (var_instruction, inCompiler) ;
    outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_IF_5F_BitTest::constructor_new (var_instructionLocation, var_instruction, var_skipIfSet, var_registerExpression, var_bitNumberExpression  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 400)) ;
  } break ;
  case 10: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 407)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 408)) ;
    GALGAS_bool var_increment ;
    switch (select_midrange_5F_syntax_13 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 411)) ;
      var_increment = GALGAS_bool (false) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 413)) ;
      var_increment = GALGAS_bool (true) ;
    } break ;
    default:
      break ;
    }
    GALGAS_registerExpression var_registerExpression ;
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    GALGAS_bool var_w_5F_isTarget ;
    switch (select_midrange_5F_syntax_14 (inCompiler)) {
    case 1: {
      var_w_5F_isTarget = GALGAS_bool (false) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 421)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 421)) ;
      var_w_5F_isTarget = GALGAS_bool (true) ;
    } break ;
    default:
      break ;
    }
    GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 423)) ;
    GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE ("midrange_syntax.galgas", 424)).reader_uppercaseString (SOURCE_FILE ("midrange_syntax.galgas", 424)) ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_location location_1 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("invalid '").add_operation (var_condition, inCompiler COMMA_SOURCE_FILE ("midrange_syntax.galgas", 426)).add_operation (GALGAS_string ("' condition; it should be 'nz'"), inCompiler COMMA_SOURCE_FILE ("midrange_syntax.galgas", 426))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 426)) ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 428)) ;
    GALGAS_midrange_5F_instruction var_instruction ;
    nt_midrange_5F_simple_5F_instruction_ (var_instruction, inCompiler) ;
    outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_IF_5F_IncDec::constructor_new (var_instructionLocation, var_instruction, var_increment, var_registerExpression, var_w_5F_isTarget  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 431)) ;
  } break ;
  case 11: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 438)) ;
    nt_midrange_5F_structured_5F_if_5F_instruction_ (outArgument_outInstruction, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 443)) ;
  } break ;
  case 12: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_do) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 445)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 446)) ;
    GALGAS_midrange_5F_instructionList var_repeatedInstructionList ;
    nt_midrange_5F_instruction_5F_list_ (var_repeatedInstructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
    GALGAS_location var_endOfRepeatedInstructionList = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 452)) ;
    GALGAS_midrange_5F_partList var_whilePartList = GALGAS_midrange_5F_partList::constructor_emptyList (SOURCE_FILE ("midrange_syntax.galgas", 453)) ;
    bool repeatFlag_2 = true ;
    while (repeatFlag_2) {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_while) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 455)) ;
      GALGAS_midrange_5F_conditionExpression var_whileCondition ;
      nt_midrange_5F_condition_5F_expression_ (var_whileCondition, inCompiler) ;
      GALGAS_midrange_5F_instructionList var_instructionList ;
      nt_midrange_5F_instruction_5F_list_ (var_instructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
      var_whilePartList.addAssign_operation (var_whileCondition, var_instructionList, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 463))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 463)) ;
      switch (select_midrange_5F_syntax_15 (inCompiler)) {
      case 2: {
      } break ;
      default:
        repeatFlag_2 = false ;
        break ;
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 466)) ;
    outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_do_5F_while::constructor_new (var_instructionLocation, var_repeatedInstructionList, var_endOfRepeatedInstructionList, var_whilePartList  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 467)) ;
  } break ;
  case 13: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mnop) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 473)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 474)) ;
    GALGAS_luint var_occurrenceFactor = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 475)) ;
    outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_MNOP::constructor_new (var_instructionLocation, var_occurrenceFactor  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 476)) ;
  } break ;
  case 14: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jsr) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 478)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 479)) ;
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 480)) ;
    outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_JSR::constructor_new (var_instructionLocation, var_targetLabelName  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 481)) ;
  } break ;
  case 15: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jump) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 485)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 486)) ;
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 487)) ;
    outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_JUMP::constructor_new (var_instructionLocation, var_targetLabelName  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 488)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_structured_5F_instruction_i4_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_midrange_5F_syntax_9 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_do) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 306)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 308)) ;
    nt_immediate_5F_expression_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 310)) ;
    nt_midrange_5F_instruction_5F_list_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 317)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_checkbank) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 319)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 320)) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_checknobank) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 323)) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_banksel) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 326)) ;
    nt_register_5F_parsing_parse (inCompiler) ;
    switch (select_midrange_5F_syntax_10 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 333)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 334)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_banksel) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 339)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 341)) ;
    switch (select_midrange_5F_syntax_11 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 346)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 347)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_banksave) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 352)) ;
    nt_register_5F_parsing_parse (inCompiler) ;
    nt_midrange_5F_instruction_5F_list_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 360)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_nobank) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 367)) ;
  } break ;
  case 8: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_forever) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 370)) ;
    nt_midrange_5F_instruction_5F_list_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 374)) ;
  } break ;
  case 9: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 380)) ;
    switch (select_midrange_5F_syntax_12 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 386)) ;
      nt_register_5F_parsing_parse (inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 388)) ;
      nt_bit_5F_number_5F_parsing_parse (inCompiler) ;
    } break ;
    case 2: {
      nt_register_5F_parsing_parse (inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 393)) ;
      nt_bit_5F_number_5F_parsing_parse (inCompiler) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 397)) ;
    nt_midrange_5F_simple_5F_instruction_parse (inCompiler) ;
  } break ;
  case 10: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 407)) ;
    switch (select_midrange_5F_syntax_13 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 411)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 413)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_parse (inCompiler) ;
    switch (select_midrange_5F_syntax_14 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 421)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 421)) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 423)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 428)) ;
    nt_midrange_5F_simple_5F_instruction_parse (inCompiler) ;
  } break ;
  case 11: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 438)) ;
    nt_midrange_5F_structured_5F_if_5F_instruction_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 443)) ;
  } break ;
  case 12: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_do) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 445)) ;
    nt_midrange_5F_instruction_5F_list_parse (inCompiler) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_while) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 455)) ;
      nt_midrange_5F_condition_5F_expression_parse (inCompiler) ;
      nt_midrange_5F_instruction_5F_list_parse (inCompiler) ;
      switch (select_midrange_5F_syntax_15 (inCompiler)) {
      case 2: {
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 466)) ;
  } break ;
  case 13: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mnop) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 473)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 475)) ;
  } break ;
  case 14: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jsr) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 478)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 480)) ;
  } break ;
  case 15: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jump) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 485)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 487)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_structured_5F_instruction_i4_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_midrange_5F_syntax_9 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_do) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 306)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 308)) ;
    nt_immediate_5F_expression_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 310)) ;
    nt_midrange_5F_instruction_5F_list_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 317)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_checkbank) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 319)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 320)) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_checknobank) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 323)) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_banksel) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 326)) ;
    nt_register_5F_parsing_indexing (inCompiler) ;
    switch (select_midrange_5F_syntax_10 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 333)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 334)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_banksel) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 339)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 341)) ;
    switch (select_midrange_5F_syntax_11 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 346)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 347)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_banksave) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 352)) ;
    nt_register_5F_parsing_indexing (inCompiler) ;
    nt_midrange_5F_instruction_5F_list_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 360)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_nobank) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 367)) ;
  } break ;
  case 8: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_forever) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 370)) ;
    nt_midrange_5F_instruction_5F_list_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 374)) ;
  } break ;
  case 9: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 380)) ;
    switch (select_midrange_5F_syntax_12 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 386)) ;
      nt_register_5F_parsing_indexing (inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 388)) ;
      nt_bit_5F_number_5F_parsing_indexing (inCompiler) ;
    } break ;
    case 2: {
      nt_register_5F_parsing_indexing (inCompiler) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 393)) ;
      nt_bit_5F_number_5F_parsing_indexing (inCompiler) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 397)) ;
    nt_midrange_5F_simple_5F_instruction_indexing (inCompiler) ;
  } break ;
  case 10: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 407)) ;
    switch (select_midrange_5F_syntax_13 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 411)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 413)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_indexing (inCompiler) ;
    switch (select_midrange_5F_syntax_14 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 421)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 421)) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 423)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 428)) ;
    nt_midrange_5F_simple_5F_instruction_indexing (inCompiler) ;
  } break ;
  case 11: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 438)) ;
    nt_midrange_5F_structured_5F_if_5F_instruction_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 443)) ;
  } break ;
  case 12: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_do) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 445)) ;
    nt_midrange_5F_instruction_5F_list_indexing (inCompiler) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_while) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 455)) ;
      nt_midrange_5F_condition_5F_expression_indexing (inCompiler) ;
      nt_midrange_5F_instruction_5F_list_indexing (inCompiler) ;
      switch (select_midrange_5F_syntax_15 (inCompiler)) {
      case 2: {
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 466)) ;
  } break ;
  case 13: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mnop) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 473)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 475)) ;
  } break ;
  case 14: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jsr) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 478)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 480)) ;
  } break ;
  case 15: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jump) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 485)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 487)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_structured_5F_if_5F_instruction_i5_ (GALGAS_midrange_5F_instruction & outArgument_outInstruction,
                                                                                                          GALGAS_bool & ioArgument_ioNeedsComputedGoto_32_,
                                                                                                          GALGAS_bool & ioArgument_ioNeedsComputedGoto_34_,
                                                                                                          C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 500)) ;
  GALGAS_midrange_5F_conditionExpression var_structured_5F_if_5F_condition ;
  nt_midrange_5F_condition_5F_expression_ (var_structured_5F_if_5F_condition, inCompiler) ;
  GALGAS_midrange_5F_instructionList var_thenInstructionList ;
  nt_midrange_5F_instruction_5F_list_ (var_thenInstructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
  GALGAS_midrange_5F_instructionList var_elseInstructionList ;
  switch (select_midrange_5F_syntax_16 (inCompiler)) {
  case 1: {
    var_elseInstructionList = GALGAS_midrange_5F_instructionList::constructor_emptyList (SOURCE_FILE ("midrange_syntax.galgas", 510)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_elsif) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 512)) ;
    GALGAS_midrange_5F_instruction var_elsifPartInstruction ;
    nt_midrange_5F_structured_5F_if_5F_instruction_ (var_elsifPartInstruction, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
    var_elseInstructionList = GALGAS_midrange_5F_instructionList::constructor_emptyList (SOURCE_FILE ("midrange_syntax.galgas", 518)) ;
    var_elseInstructionList.addAssign_operation (var_elsifPartInstruction  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 519)) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_else) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 521)) ;
    nt_midrange_5F_instruction_5F_list_ (var_elseInstructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
  } break ;
  default:
    break ;
  }
  GALGAS_location var_endOfElsePartLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 527)) ;
  outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_structured_5F_if::constructor_new (var_instructionLocation, var_structured_5F_if_5F_condition, var_thenInstructionList, var_elseInstructionList, var_endOfElsePartLocation  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 528)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_structured_5F_if_5F_instruction_i5_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_midrange_5F_condition_5F_expression_parse (inCompiler) ;
  nt_midrange_5F_instruction_5F_list_parse (inCompiler) ;
  switch (select_midrange_5F_syntax_16 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_elsif) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 512)) ;
    nt_midrange_5F_structured_5F_if_5F_instruction_parse (inCompiler) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_else) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 521)) ;
    nt_midrange_5F_instruction_5F_list_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_structured_5F_if_5F_instruction_i5_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_midrange_5F_condition_5F_expression_indexing (inCompiler) ;
  nt_midrange_5F_instruction_5F_list_indexing (inCompiler) ;
  switch (select_midrange_5F_syntax_16 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_elsif) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 512)) ;
    nt_midrange_5F_structured_5F_if_5F_instruction_indexing (inCompiler) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_else) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 521)) ;
    nt_midrange_5F_instruction_5F_list_indexing (inCompiler) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_simple_5F_instruction_i6_ (GALGAS_midrange_5F_instruction & outArgument_outInstruction,
                                                                                                C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  switch (select_midrange_5F_syntax_17 (inCompiler)) {
  case 1: {
    GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code var_baseCode ;
    switch (select_midrange_5F_syntax_18 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addwf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 542)) ;
      var_baseCode = GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_ADDWF (SOURCE_FILE ("midrange_syntax.galgas", 543)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andwf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 545)) ;
      var_baseCode = GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_ANDWF (SOURCE_FILE ("midrange_syntax.galgas", 546)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_comf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 548)) ;
      var_baseCode = GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_COMF (SOURCE_FILE ("midrange_syntax.galgas", 549)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 551)) ;
      var_baseCode = GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_DECF (SOURCE_FILE ("midrange_syntax.galgas", 552)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 554)) ;
      var_baseCode = GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_INCF (SOURCE_FILE ("midrange_syntax.galgas", 555)) ;
    } break ;
    case 6: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorwf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 557)) ;
      var_baseCode = GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_IORWF (SOURCE_FILE ("midrange_syntax.galgas", 558)) ;
    } break ;
    case 7: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 560)) ;
      var_baseCode = GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_MOVF (SOURCE_FILE ("midrange_syntax.galgas", 561)) ;
    } break ;
    case 8: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rlf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 563)) ;
      var_baseCode = GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_RLF (SOURCE_FILE ("midrange_syntax.galgas", 564)) ;
    } break ;
    case 9: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rrf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 566)) ;
      var_baseCode = GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_RRF (SOURCE_FILE ("midrange_syntax.galgas", 567)) ;
    } break ;
    case 10: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subwf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 569)) ;
      var_baseCode = GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_SUBWF (SOURCE_FILE ("midrange_syntax.galgas", 570)) ;
    } break ;
    case 11: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_swapf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 572)) ;
      var_baseCode = GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_SWAPF (SOURCE_FILE ("midrange_syntax.galgas", 573)) ;
    } break ;
    case 12: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorwf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 575)) ;
      var_baseCode = GALGAS_midrange_5F_instruction_5F_FD_5F_base_5F_code::constructor_XORWF (SOURCE_FILE ("midrange_syntax.galgas", 576)) ;
    } break ;
    default:
      break ;
    }
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 578)) ;
    GALGAS_registerExpression var_registerExpression ;
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    GALGAS_bool var_W_5F_isDestination ;
    nt_optional_5F_w_5F_as_5F_dest_ (var_W_5F_isDestination, inCompiler) ;
    outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_FD::constructor_new (var_instructionLocation, var_baseCode, var_registerExpression, var_W_5F_isDestination  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 583)) ;
  } break ;
  case 2: {
    GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code var_FAinstruction ;
    switch (select_midrange_5F_syntax_19 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 591)) ;
      var_FAinstruction = GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code::constructor_CLRF (SOURCE_FILE ("midrange_syntax.galgas", 592)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movwf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 594)) ;
      var_FAinstruction = GALGAS_midrange_5F_F_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE ("midrange_syntax.galgas", 595)) ;
    } break ;
    default:
      break ;
    }
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 597)) ;
    GALGAS_registerExpression var_registerExpression ;
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_F::constructor_new (var_instructionLocation, var_FAinstruction, var_registerExpression  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 600)) ;
  } break ;
  case 3: {
    GALGAS_midrange_5F_bit_5F_oriented_5F_op var_bitOrientedOp ;
    switch (select_midrange_5F_syntax_20 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bcf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 607)) ;
      var_bitOrientedOp = GALGAS_midrange_5F_bit_5F_oriented_5F_op::constructor_BCF (SOURCE_FILE ("midrange_syntax.galgas", 607)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bsf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 609)) ;
      var_bitOrientedOp = GALGAS_midrange_5F_bit_5F_oriented_5F_op::constructor_BSF (SOURCE_FILE ("midrange_syntax.galgas", 609)) ;
    } break ;
    default:
      break ;
    }
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 611)) ;
    GALGAS_registerExpression var_registerExpression ;
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 614)) ;
    GALGAS_bitNumberExpression var_bitNumberExpression ;
    nt_bit_5F_number_5F_parsing_ (var_bitNumberExpression, inCompiler) ;
    outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_FB::constructor_new (var_instructionLocation, var_bitOrientedOp, var_registerExpression, var_bitNumberExpression  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 617)) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_goto) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 623)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 624)) ;
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 625)) ;
    outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_GOTO::constructor_new (var_instructionLocation, var_targetLabelName  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 626)) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_call) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 630)) ;
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 631)) ;
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 632)) ;
    outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_CALL::constructor_new (var_instructionLocation, var_targetLabelName  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 633)) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrw) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 637)) ;
    outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_CLRW::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 638))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 638)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrwdt) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 640)) ;
    outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_CLRWDT::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 641))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 641)) ;
  } break ;
  case 8: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_nop) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 643)) ;
    outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_NOP::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 644))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 644)) ;
  } break ;
  case 9: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_sleep) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 646)) ;
    outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_SLEEP::constructor_new (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 647))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 647)) ;
  } break ;
  case 10: {
    GALGAS_midrange_5F_literal_5F_instruction_5F_opcode var_literalInstruction ;
    switch (select_midrange_5F_syntax_21 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addlw) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 651)) ;
      var_literalInstruction = GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::constructor_ADDLW (SOURCE_FILE ("midrange_syntax.galgas", 651)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andlw) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 653)) ;
      var_literalInstruction = GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::constructor_ANDLW (SOURCE_FILE ("midrange_syntax.galgas", 653)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorlw) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 655)) ;
      var_literalInstruction = GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::constructor_IORLW (SOURCE_FILE ("midrange_syntax.galgas", 655)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movlw) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 657)) ;
      var_literalInstruction = GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::constructor_MOVLW (SOURCE_FILE ("midrange_syntax.galgas", 657)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_sublw) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 659)) ;
      var_literalInstruction = GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::constructor_SUBLW (SOURCE_FILE ("midrange_syntax.galgas", 659)) ;
    } break ;
    case 6: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorlw) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 661)) ;
      var_literalInstruction = GALGAS_midrange_5F_literal_5F_instruction_5F_opcode::constructor_XORLW (SOURCE_FILE ("midrange_syntax.galgas", 661)) ;
    } break ;
    default:
      break ;
    }
    GALGAS_location var_instructionLocation = GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 663)) ;
    GALGAS_immediatExpression var_expression ;
    nt_immediate_5F_expression_ (var_expression, inCompiler) ;
    outArgument_outInstruction = GALGAS_midrange_5F_instruction_5F_literalOperation::constructor_new (var_instructionLocation, var_literalInstruction, var_expression  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 666)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_simple_5F_instruction_i6_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_midrange_5F_syntax_17 (inCompiler)) {
  case 1: {
    switch (select_midrange_5F_syntax_18 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addwf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 542)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andwf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 545)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_comf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 548)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 551)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 554)) ;
    } break ;
    case 6: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorwf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 557)) ;
    } break ;
    case 7: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 560)) ;
    } break ;
    case 8: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rlf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 563)) ;
    } break ;
    case 9: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rrf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 566)) ;
    } break ;
    case 10: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subwf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 569)) ;
    } break ;
    case 11: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_swapf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 572)) ;
    } break ;
    case 12: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorwf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 575)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_parse (inCompiler) ;
    nt_optional_5F_w_5F_as_5F_dest_parse (inCompiler) ;
  } break ;
  case 2: {
    switch (select_midrange_5F_syntax_19 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 591)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movwf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 594)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_parse (inCompiler) ;
  } break ;
  case 3: {
    switch (select_midrange_5F_syntax_20 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bcf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 607)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bsf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 609)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 614)) ;
    nt_bit_5F_number_5F_parsing_parse (inCompiler) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_goto) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 623)) ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 625)) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_call) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 630)) ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 632)) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrw) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 637)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrwdt) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 640)) ;
  } break ;
  case 8: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_nop) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 643)) ;
  } break ;
  case 9: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_sleep) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 646)) ;
  } break ;
  case 10: {
    switch (select_midrange_5F_syntax_21 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addlw) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 651)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andlw) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 653)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorlw) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 655)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movlw) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 657)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_sublw) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 659)) ;
    } break ;
    case 6: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorlw) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 661)) ;
    } break ;
    default:
      break ;
    }
    nt_immediate_5F_expression_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_simple_5F_instruction_i6_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_midrange_5F_syntax_17 (inCompiler)) {
  case 1: {
    switch (select_midrange_5F_syntax_18 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addwf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 542)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andwf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 545)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_comf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 548)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 551)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 554)) ;
    } break ;
    case 6: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorwf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 557)) ;
    } break ;
    case 7: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 560)) ;
    } break ;
    case 8: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rlf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 563)) ;
    } break ;
    case 9: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rrf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 566)) ;
    } break ;
    case 10: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subwf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 569)) ;
    } break ;
    case 11: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_swapf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 572)) ;
    } break ;
    case 12: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorwf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 575)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_indexing (inCompiler) ;
    nt_optional_5F_w_5F_as_5F_dest_indexing (inCompiler) ;
  } break ;
  case 2: {
    switch (select_midrange_5F_syntax_19 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 591)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movwf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 594)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_indexing (inCompiler) ;
  } break ;
  case 3: {
    switch (select_midrange_5F_syntax_20 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bcf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 607)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bsf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 609)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 614)) ;
    nt_bit_5F_number_5F_parsing_indexing (inCompiler) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_goto) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 623)) ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 625)) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_call) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 630)) ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_routineCall) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 632)) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrw) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 637)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrwdt) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 640)) ;
  } break ;
  case 8: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_nop) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 643)) ;
  } break ;
  case 9: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_sleep) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 646)) ;
  } break ;
  case 10: {
    switch (select_midrange_5F_syntax_21 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addlw) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 651)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andlw) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 653)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorlw) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 655)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movlw) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 657)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_sublw) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 659)) ;
    } break ;
    case 6: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorlw) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 661)) ;
    } break ;
    default:
      break ;
    }
    nt_immediate_5F_expression_indexing (inCompiler) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_condition_5F_factor_i7_ (GALGAS_midrange_5F_conditionExpression & outArgument_outCondition,
                                                                                              C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 677)) ;
  GALGAS_midrange_5F_conditionExpression var_condition ;
  nt_midrange_5F_condition_5F_factor_ (var_condition, inCompiler) ;
  outArgument_outCondition = GALGAS_midrange_5F_negateCondition::constructor_new (var_condition  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 680)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_condition_5F_factor_i7_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 677)) ;
  nt_midrange_5F_condition_5F_factor_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_condition_5F_factor_i7_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 677)) ;
  nt_midrange_5F_condition_5F_factor_indexing (inCompiler) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_condition_5F_factor_i8_ (GALGAS_midrange_5F_conditionExpression & outArgument_outCondition,
                                                                                              C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  nt_midrange_5F_condition_5F_expression_ (outArgument_outCondition, inCompiler) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_condition_5F_factor_i8_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_midrange_5F_condition_5F_expression_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_condition_5F_factor_i8_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_midrange_5F_condition_5F_expression_indexing (inCompiler) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_condition_5F_factor_i9_ (GALGAS_midrange_5F_conditionExpression & outArgument_outCondition,
                                                                                              C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  switch (select_midrange_5F_syntax_22 (inCompiler)) {
  case 1: {
    GALGAS_bool var_isIncrement ;
    switch (select_midrange_5F_syntax_23 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 697)) ;
      var_isIncrement = GALGAS_bool (true) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 699)) ;
      var_isIncrement = GALGAS_bool (false) ;
    } break ;
    default:
      break ;
    }
    GALGAS_registerExpression var_registerExpression ;
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    GALGAS_bool var_W_5F_isDestination ;
    switch (select_midrange_5F_syntax_24 (inCompiler)) {
    case 1: {
      var_W_5F_isDestination = GALGAS_bool (false) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 707)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 707)) ;
      var_W_5F_isDestination = GALGAS_bool (true) ;
    } break ;
    default:
      break ;
    }
    GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 709)) ;
    GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE ("midrange_syntax.galgas", 710)).reader_uppercaseString (SOURCE_FILE ("midrange_syntax.galgas", 710)) ;
    GALGAS_bool var_branchIfZero ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("Z"))).boolEnum () ;
    if (kBoolTrue == test_0) {
      var_branchIfZero = GALGAS_bool (true) ;
    }else if (kBoolFalse == test_0) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_branchIfZero = GALGAS_bool (false) ;
      }else if (kBoolFalse == test_1) {
        GALGAS_location location_2 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_2, GALGAS_string ("invalid '").add_operation (var_conditionString.reader_string (SOURCE_FILE ("midrange_syntax.galgas", 717)), inCompiler COMMA_SOURCE_FILE ("midrange_syntax.galgas", 717)).add_operation (GALGAS_string ("' condition; valid ones are: 'z' and 'nz'"), inCompiler COMMA_SOURCE_FILE ("midrange_syntax.galgas", 717))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 717)) ;
        var_branchIfZero.drop () ; // Release error dropped variable
      }
    }
    outArgument_outCondition = GALGAS_midrange_5F_incDecRegisterInCondition::constructor_new (var_registerExpression, var_isIncrement, var_W_5F_isDestination, var_branchIfZero  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 721)) ;
  } break ;
  case 2: {
    GALGAS_registerExpression var_registerExpression ;
    GALGAS_bitNumberExpression var_bitNumberExpression ;
    GALGAS_bool var_BTFSSinstruction ;
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 731)) ;
    nt_bit_5F_number_5F_parsing_ (var_bitNumberExpression, inCompiler) ;
    switch (select_midrange_5F_syntax_25 (inCompiler)) {
    case 1: {
      var_BTFSSinstruction = GALGAS_bool (false) ;
    } break ;
    case 2: {
      GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 736)) ;
      GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE ("midrange_syntax.galgas", 737)).reader_uppercaseString (SOURCE_FILE ("midrange_syntax.galgas", 737)) ;
      const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("Z"))).boolEnum () ;
      if (kBoolTrue == test_3) {
        var_BTFSSinstruction = GALGAS_bool (true) ;
        GALGAS_string var_s = GALGAS_string ("! ").add_operation (var_registerExpression.reader_mRegisterName (SOURCE_FILE ("midrange_syntax.galgas", 740)).reader_string (SOURCE_FILE ("midrange_syntax.galgas", 740)), inCompiler COMMA_SOURCE_FILE ("midrange_syntax.galgas", 740)) ;
        const enumGalgasBool test_4 = GALGAS_bool (kIsStrictSup, var_registerExpression.reader_mOffset (SOURCE_FILE ("midrange_syntax.galgas", 741)).reader_uint (SOURCE_FILE ("midrange_syntax.galgas", 741)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
        if (kBoolTrue == test_4) {
          var_s.dotAssign_operation (GALGAS_string (" [").add_operation (var_registerExpression.reader_mOffset (SOURCE_FILE ("midrange_syntax.galgas", 742)).reader_uint (SOURCE_FILE ("midrange_syntax.galgas", 742)).reader_string (SOURCE_FILE ("midrange_syntax.galgas", 742)), inCompiler COMMA_SOURCE_FILE ("midrange_syntax.galgas", 742)).add_operation (GALGAS_string ("]"), inCompiler COMMA_SOURCE_FILE ("midrange_syntax.galgas", 742))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 742)) ;
        }
        var_s.dotAssign_operation (GALGAS_string (".")  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 744)) ;
        callCategoryMethod_display ((const cPtr_bitNumberExpression *) var_bitNumberExpression.ptr (), var_s, inCompiler COMMA_SOURCE_FILE ("midrange_syntax.galgas", 744)) ;
        GALGAS_location location_5 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticWarning (location_5, GALGAS_string ("In Piccolo 1.2.0 and later, this construction is deprecated; use '").add_operation (var_s, inCompiler COMMA_SOURCE_FILE ("midrange_syntax.galgas", 745)).add_operation (GALGAS_string ("' instead"), inCompiler COMMA_SOURCE_FILE ("midrange_syntax.galgas", 745))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 745)) ;
      }else if (kBoolFalse == test_3) {
        const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).boolEnum () ;
        if (kBoolTrue == test_6) {
          var_BTFSSinstruction = GALGAS_bool (false) ;
          GALGAS_string var_s = var_registerExpression.reader_mRegisterName (SOURCE_FILE ("midrange_syntax.galgas", 748)).reader_string (SOURCE_FILE ("midrange_syntax.galgas", 748)) ;
          const enumGalgasBool test_7 = GALGAS_bool (kIsStrictSup, var_registerExpression.reader_mOffset (SOURCE_FILE ("midrange_syntax.galgas", 749)).reader_uint (SOURCE_FILE ("midrange_syntax.galgas", 749)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
          if (kBoolTrue == test_7) {
            var_s.dotAssign_operation (GALGAS_string (" [").add_operation (var_registerExpression.reader_mOffset (SOURCE_FILE ("midrange_syntax.galgas", 750)).reader_uint (SOURCE_FILE ("midrange_syntax.galgas", 750)).reader_string (SOURCE_FILE ("midrange_syntax.galgas", 750)), inCompiler COMMA_SOURCE_FILE ("midrange_syntax.galgas", 750)).add_operation (GALGAS_string ("]"), inCompiler COMMA_SOURCE_FILE ("midrange_syntax.galgas", 750))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 750)) ;
          }
          var_s.dotAssign_operation (GALGAS_string (".")  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 752)) ;
          callCategoryMethod_display ((const cPtr_bitNumberExpression *) var_bitNumberExpression.ptr (), var_s, inCompiler COMMA_SOURCE_FILE ("midrange_syntax.galgas", 752)) ;
          GALGAS_location location_8 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticWarning (location_8, GALGAS_string ("In Piccolo 1.2.0 and later, this construction is deprecated; use '").add_operation (var_s, inCompiler COMMA_SOURCE_FILE ("midrange_syntax.galgas", 753)).add_operation (GALGAS_string ("' instead"), inCompiler COMMA_SOURCE_FILE ("midrange_syntax.galgas", 753))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 753)) ;
        }else if (kBoolFalse == test_6) {
          GALGAS_location location_9 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_9, GALGAS_string ("invalid '").add_operation (var_conditionString.reader_string (SOURCE_FILE ("midrange_syntax.galgas", 755)), inCompiler COMMA_SOURCE_FILE ("midrange_syntax.galgas", 755)).add_operation (GALGAS_string ("' condition; valid ones are: 'z' and 'nz'"), inCompiler COMMA_SOURCE_FILE ("midrange_syntax.galgas", 755))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 755)) ;
          var_BTFSSinstruction.drop () ; // Release error dropped variable
        }
      }
    } break ;
    default:
      break ;
    }
    outArgument_outCondition = GALGAS_midrange_5F_bitTest_5F_in_5F_structured_5F_if_5F_condition::constructor_new (var_registerExpression, var_bitNumberExpression, var_BTFSSinstruction  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 760)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_condition_5F_factor_i9_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_midrange_5F_syntax_22 (inCompiler)) {
  case 1: {
    switch (select_midrange_5F_syntax_23 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 697)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 699)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_parse (inCompiler) ;
    switch (select_midrange_5F_syntax_24 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 707)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 707)) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 709)) ;
  } break ;
  case 2: {
    nt_register_5F_parsing_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 731)) ;
    nt_bit_5F_number_5F_parsing_parse (inCompiler) ;
    switch (select_midrange_5F_syntax_25 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 736)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_condition_5F_factor_i9_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_midrange_5F_syntax_22 (inCompiler)) {
  case 1: {
    switch (select_midrange_5F_syntax_23 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 697)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 699)) ;
    } break ;
    default:
      break ;
    }
    nt_register_5F_parsing_indexing (inCompiler) ;
    switch (select_midrange_5F_syntax_24 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 707)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 707)) ;
    } break ;
    default:
      break ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 709)) ;
  } break ;
  case 2: {
    nt_register_5F_parsing_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 731)) ;
    nt_bit_5F_number_5F_parsing_indexing (inCompiler) ;
    switch (select_midrange_5F_syntax_25 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 736)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_condition_5F_expression_i10_ (GALGAS_midrange_5F_conditionExpression & outArgument_outCondition,
                                                                                                   C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 771)) ;
  nt_midrange_5F_condition_5F_term_ (outArgument_outCondition, inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_midrange_5F_syntax_26 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 775)) ;
      GALGAS_midrange_5F_conditionExpression var_c ;
      nt_midrange_5F_condition_5F_term_ (var_c, inCompiler) ;
      GALGAS_midrange_5F_conditionExpression var_rc = GALGAS_midrange_5F_negateCondition::constructor_new (var_c  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 778)) ;
      GALGAS_midrange_5F_conditionExpression var_lc = GALGAS_midrange_5F_negateCondition::constructor_new (outArgument_outCondition  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 779)) ;
      outArgument_outCondition = GALGAS_midrange_5F_negateCondition::constructor_new (GALGAS_midrange_5F_andCondition::constructor_new (var_lc, var_rc  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 780))  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 780)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 782)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_condition_5F_expression_i10_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 771)) ;
  nt_midrange_5F_condition_5F_term_parse (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_midrange_5F_syntax_26 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 775)) ;
      nt_midrange_5F_condition_5F_term_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 782)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_condition_5F_expression_i10_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 771)) ;
  nt_midrange_5F_condition_5F_term_indexing (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_midrange_5F_syntax_26 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 775)) ;
      nt_midrange_5F_condition_5F_term_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 782)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_condition_5F_term_i11_ (GALGAS_midrange_5F_conditionExpression & outArgument_outCondition,
                                                                                             C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  nt_midrange_5F_condition_5F_factor_ (outArgument_outCondition, inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_midrange_5F_syntax_27 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__26_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 792)) ;
      GALGAS_midrange_5F_conditionExpression var_c ;
      nt_midrange_5F_condition_5F_factor_ (var_c, inCompiler) ;
      outArgument_outCondition = GALGAS_midrange_5F_andCondition::constructor_new (outArgument_outCondition, var_c  COMMA_SOURCE_FILE ("midrange_syntax.galgas", 795)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_condition_5F_term_i11_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_midrange_5F_condition_5F_factor_parse (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_midrange_5F_syntax_27 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__26_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 792)) ;
      nt_midrange_5F_condition_5F_factor_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_midrange_5F_syntax::rule_midrange_5F_syntax_midrange_5F_condition_5F_term_i11_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_midrange_5F_condition_5F_factor_indexing (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_midrange_5F_syntax_27 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__26_) COMMA_SOURCE_FILE ("midrange_syntax.galgas", 792)) ;
      nt_midrange_5F_condition_5F_factor_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}



//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_program::rule_baseline_5F_program_start_5F_symbol_i0_ (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_baseline) COMMA_SOURCE_FILE ("baseline_program.galgas", 16)) ;
  GALGAS_lstring var_programName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_program.galgas", 17)) ;
  GALGAS_lstring var_deviceName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("baseline_program.galgas", 18)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("baseline_program.galgas", 19)) ;
  GALGAS_baseline_5F_routineDefinitionList var_routineDefinitionList = GALGAS_baseline_5F_routineDefinitionList::constructor_emptyList (SOURCE_FILE ("baseline_program.galgas", 20)) ;
  GALGAS_ramDefinitionList var_ramDefinitionList = GALGAS_ramDefinitionList::constructor_emptyList (SOURCE_FILE ("baseline_program.galgas", 21)) ;
  GALGAS_lstringlist var_unusedRegisterList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE ("baseline_program.galgas", 22)) ;
  GALGAS_lstringlist var_unusedRoutineList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE ("baseline_program.galgas", 23)) ;
  GALGAS_configDefinitionList var_configDefinitionList = GALGAS_configDefinitionList::constructor_emptyList (SOURCE_FILE ("baseline_program.galgas", 24)) ;
  GALGAS_constantDefinitionList var_constantDefinitionList = GALGAS_constantDefinitionList::constructor_emptyList (SOURCE_FILE ("baseline_program.galgas", 25)) ;
  nt_section_5F_list_ (var_routineDefinitionList, var_unusedRoutineList, var_ramDefinitionList, var_unusedRegisterList, var_configDefinitionList, var_constantDefinitionList, inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("baseline_program.galgas", 33)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("baseline_program.galgas", 35)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_baseline_5F_model var_piccoloModel = GALGAS_baseline_5F_model::constructor_new (var_programName, var_deviceName, var_configDefinitionList, var_ramDefinitionList, var_unusedRegisterList, var_constantDefinitionList, var_routineDefinitionList, var_unusedRoutineList, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_program.galgas", 45))  COMMA_SOURCE_FILE ("baseline_program.galgas", 36)) ;
    {
    routine_baseline_5F_analysis (var_piccoloModel, GALGAS_string::constructor_stringWithSourceFilePath (inCompiler  COMMA_SOURCE_FILE ("baseline_program.galgas", 47)), inCompiler  COMMA_SOURCE_FILE ("baseline_program.galgas", 47)) ;
    }
  }else if (kBoolFalse == test_0) {
    GALGAS_string var_hexDestinationFile = GALGAS_string::constructor_stringWithSourceFilePath (inCompiler  COMMA_SOURCE_FILE ("baseline_program.galgas", 49)).reader_stringByDeletingPathExtension (SOURCE_FILE ("baseline_program.galgas", 49)).add_operation (GALGAS_string (".hex"), inCompiler COMMA_SOURCE_FILE ("baseline_program.galgas", 49)) ;
    const enumGalgasBool test_1 = var_hexDestinationFile.reader_fileExists (SOURCE_FILE ("baseline_program.galgas", 50)).boolEnum () ;
    if (kBoolTrue == test_1) {
      {
      GALGAS_string::class_method_deleteFile (var_hexDestinationFile, inCompiler COMMA_SOURCE_FILE ("baseline_program.galgas", 51)) ;
      }
    }
    GALGAS_string var_asmDestinationFile = GALGAS_string::constructor_stringWithSourceFilePath (inCompiler  COMMA_SOURCE_FILE ("baseline_program.galgas", 53)).reader_stringByDeletingPathExtension (SOURCE_FILE ("baseline_program.galgas", 53)).add_operation (GALGAS_string (".asm"), inCompiler COMMA_SOURCE_FILE ("baseline_program.galgas", 53)) ;
    const enumGalgasBool test_2 = var_asmDestinationFile.reader_fileExists (SOURCE_FILE ("baseline_program.galgas", 54)).boolEnum () ;
    if (kBoolTrue == test_2) {
      {
      GALGAS_string::class_method_deleteFile (var_asmDestinationFile, inCompiler COMMA_SOURCE_FILE ("baseline_program.galgas", 55)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_program::rule_baseline_5F_program_start_5F_symbol_i0_importBootloaderSpecification (GALGAS_piccoloDeviceModel & outArgument_outPiccoloDeviceModel,
                                                                                                             GALGAS_string & outArgument_outDeviceName,
                                                                                                             GALGAS_uint & outArgument_outAccessBankSplitOffset,
                                                                                                             GALGAS_ramBankTable & outArgument_outRamBank,
                                                                                                             GALGAS_registerTable & outArgument_outRegisterTable,
                                                                                                             GALGAS_bootloaderReservedRAMmap & outArgument_outBootloaderReservedRAMmap,
                                                                                                             GALGAS_routineDeclarationList & outArgument_outBootloaderRoutineDeclarationList,
                                                                                                             GALGAS_routineDeclarationList & outArgument_outUserRoutineDeclarationList,
                                                                                                             GALGAS_luint & outArgument_outBootloaderReservedROMsize,
                                                                                                             C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outPiccoloDeviceModel.drop () ; // Release 'out' argument
  outArgument_outDeviceName.drop () ; // Release 'out' argument
  outArgument_outAccessBankSplitOffset.drop () ; // Release 'out' argument
  outArgument_outRamBank.drop () ; // Release 'out' argument
  outArgument_outRegisterTable.drop () ; // Release 'out' argument
  outArgument_outBootloaderReservedRAMmap.drop () ; // Release 'out' argument
  outArgument_outBootloaderRoutineDeclarationList.drop () ; // Release 'out' argument
  outArgument_outUserRoutineDeclarationList.drop () ; // Release 'out' argument
  outArgument_outBootloaderReservedROMsize.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_baseline) COMMA_SOURCE_FILE ("baseline_program.galgas", 69)) ;
  GALGAS_lstring var_programName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_program.galgas", 70)) ;
  GALGAS_location location_0 (var_programName.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_0, GALGAS_string ("this file does not define a bootloader specification")  COMMA_SOURCE_FILE ("baseline_program.galgas", 71)) ;
  outArgument_outPiccoloDeviceModel.drop () ; // Release error dropped variable
  outArgument_outAccessBankSplitOffset.drop () ; // Release error dropped variable
  outArgument_outRamBank.drop () ; // Release error dropped variable
  outArgument_outRegisterTable.drop () ; // Release error dropped variable
  outArgument_outBootloaderReservedRAMmap.drop () ; // Release error dropped variable
  outArgument_outBootloaderRoutineDeclarationList.drop () ; // Release error dropped variable
  outArgument_outUserRoutineDeclarationList.drop () ; // Release error dropped variable
  outArgument_outDeviceName.drop () ; // Release error dropped variable
  outArgument_outBootloaderReservedROMsize.drop () ; // Release error dropped variable
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("baseline_program.galgas", 76)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("baseline_program.galgas", 77)) ;
  nt_section_5F_list_parse (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("baseline_program.galgas", 79)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_program::rule_baseline_5F_program_start_5F_symbol_i0_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_baseline) COMMA_SOURCE_FILE ("baseline_program.galgas", 16)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_program.galgas", 17)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("baseline_program.galgas", 18)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("baseline_program.galgas", 19)) ;
  nt_section_5F_list_parse (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("baseline_program.galgas", 33)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_program::rule_baseline_5F_program_start_5F_symbol_i0_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_baseline) COMMA_SOURCE_FILE ("baseline_program.galgas", 16)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_program.galgas", 17)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("baseline_program.galgas", 18)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("baseline_program.galgas", 19)) ;
  nt_section_5F_list_indexing (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("baseline_program.galgas", 33)) ;
}



//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_bootloader_5F_syntax::rule_pic_31__38__5F_bootloader_5F_syntax_parse_5F_bootloader_i0_ (GALGAS_lstring & outArgument_outBootloaderName,
                                                                                                                    GALGAS_lstring & outArgument_outDeviceName,
                                                                                                                    GALGAS_routineDeclarationList & outArgument_outBootloaderRoutineDeclarationList,
                                                                                                                    GALGAS_bootloaderReservedRAMmap & outArgument_outBootloaderReservedRAMmap,
                                                                                                                    GALGAS_luint & outArgument_outReservedRomSize,
                                                                                                                    GALGAS_routineDeclarationList & outArgument_outUserRoutineDeclarationList,
                                                                                                                    GALGAS_ramDefinitionList & outArgument_outSharedRamDefinitionList,
                                                                                                                    GALGAS_string & outArgument_outListFileContents,
                                                                                                                    GALGAS_piccoloDeviceModel & outArgument_outPiccoloDeviceModel,
                                                                                                                    GALGAS_uint & outArgument_outAccessBankSplitOffset,
                                                                                                                    GALGAS_ramBankTable & outArgument_outRamBank,
                                                                                                                    GALGAS_registerTable & outArgument_outRegisterTable,
                                                                                                                    C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outBootloaderName.drop () ; // Release 'out' argument
  outArgument_outDeviceName.drop () ; // Release 'out' argument
  outArgument_outBootloaderRoutineDeclarationList.drop () ; // Release 'out' argument
  outArgument_outBootloaderReservedRAMmap.drop () ; // Release 'out' argument
  outArgument_outReservedRomSize.drop () ; // Release 'out' argument
  outArgument_outUserRoutineDeclarationList.drop () ; // Release 'out' argument
  outArgument_outSharedRamDefinitionList.drop () ; // Release 'out' argument
  outArgument_outListFileContents.drop () ; // Release 'out' argument
  outArgument_outPiccoloDeviceModel.drop () ; // Release 'out' argument
  outArgument_outAccessBankSplitOffset.drop () ; // Release 'out' argument
  outArgument_outRamBank.drop () ; // Release 'out' argument
  outArgument_outRegisterTable.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_pic_31__38_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 37)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bootloader) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 38)) ;
  outArgument_outBootloaderName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 39)) ;
  outArgument_outDeviceName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 40)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 42)) ;
  outArgument_outBootloaderRoutineDeclarationList = GALGAS_routineDeclarationList::constructor_emptyList (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 43)) ;
  outArgument_outBootloaderReservedRAMmap = GALGAS_bootloaderReservedRAMmap::constructor_emptyMap (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 44)) ;
  outArgument_outReservedRomSize = GALGAS_luint::constructor_new (GALGAS_uint ((uint32_t) 0U), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 45))  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 45)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_pic_31__38__5F_bootloader_5F_syntax_0 (inCompiler)) {
    case 2: {
      nt_routine_5F_declaration_ (outArgument_outBootloaderRoutineDeclarationList, inCompiler) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rom) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 50)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 51)) ;
      GALGAS_luint var_rs = inCompiler->synthetizedAttribute_uint_33__32_value () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 52)) ;
      const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, outArgument_outReservedRomSize.reader_uint (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 53)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_1) {
        GALGAS_location location_2 (var_rs.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_2, GALGAS_string ("ROM size already defined")  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 54)) ;
      }else if (kBoolFalse == test_1) {
        const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, var_rs.reader_uint (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 55)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
        if (kBoolTrue == test_3) {
          GALGAS_location location_4 (var_rs.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_4, GALGAS_string ("ROM size should be > 0")  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 56)) ;
        }else if (kBoolFalse == test_3) {
          const enumGalgasBool test_5 = GALGAS_bool (kIsNotEqual, var_rs.reader_uint (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 57)).modulo_operation (GALGAS_uint ((uint32_t) 8U), inCompiler COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 57)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
          if (kBoolTrue == test_5) {
            GALGAS_location location_6 (var_rs.reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_6, GALGAS_string ("ROM size should be a multiple of 8")  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 58)) ;
          }else if (kBoolFalse == test_5) {
            outArgument_outReservedRomSize = var_rs ;
          }
        }
      }
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ram) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 63)) ;
      GALGAS_lstring var_bankName = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 64)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 65)) ;
      GALGAS_luint var_rs = inCompiler->synthetizedAttribute_uint_33__32_value () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 66)) ;
      const enumGalgasBool test_7 = outArgument_outBootloaderReservedRAMmap.reader_hasKey (var_bankName.reader_string (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 67)) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 67)).boolEnum () ;
      if (kBoolTrue == test_7) {
        GALGAS_location location_8 (var_rs.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_8, GALGAS_string ("RAM size already defined for '").add_operation (var_bankName.reader_string (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 68)), inCompiler COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 68)).add_operation (GALGAS_string ("' bank"), inCompiler COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 68))  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 68)) ;
      }else if (kBoolFalse == test_7) {
        const enumGalgasBool test_9 = GALGAS_bool (kIsEqual, var_rs.reader_uint (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 69)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
        if (kBoolTrue == test_9) {
          GALGAS_location location_10 (var_rs.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_10, GALGAS_string ("RAM size should be > 0")  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 70)) ;
        }else if (kBoolFalse == test_9) {
          {
          outArgument_outBootloaderReservedRAMmap.modifier_insertKey (var_bankName, var_rs, inCompiler COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 72)) ;
          }
        }
      }
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 75)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 77)) ;
  outArgument_outUserRoutineDeclarationList = GALGAS_routineDeclarationList::constructor_emptyList (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 78)) ;
  bool repeatFlag_11 = true ;
  while (repeatFlag_11) {
    switch (select_pic_31__38__5F_bootloader_5F_syntax_1 (inCompiler)) {
    case 2: {
      nt_routine_5F_declaration_ (outArgument_outUserRoutineDeclarationList, inCompiler) ;
    } break ;
    default:
      repeatFlag_11 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 83)) ;
  outArgument_outSharedRamDefinitionList = GALGAS_ramDefinitionList::constructor_emptyList (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 85)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 86)) ;
  bool repeatFlag_12 = true ;
  while (repeatFlag_12) {
    switch (select_pic_31__38__5F_bootloader_5F_syntax_2 (inCompiler)) {
    case 2: {
      nt_ram_5F_definition_ (outArgument_outSharedRamDefinitionList, inCompiler) ;
    } break ;
    default:
      repeatFlag_12 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 91)) ;
  {
  routine_pic_31__38_BootloaderSpecificationAnalysis (GALGAS_string::constructor_stringWithSourceFilePath (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 94)), outArgument_outBootloaderName, outArgument_outDeviceName, outArgument_outBootloaderRoutineDeclarationList, outArgument_outBootloaderReservedRAMmap, outArgument_outReservedRomSize, outArgument_outUserRoutineDeclarationList, outArgument_outSharedRamDefinitionList, outArgument_outListFileContents, outArgument_outPiccoloDeviceModel, outArgument_outAccessBankSplitOffset, outArgument_outRamBank, outArgument_outRegisterTable, inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 93)) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_bootloader_5F_syntax::rule_pic_31__38__5F_bootloader_5F_syntax_parse_5F_bootloader_i0_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_pic_31__38_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 37)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bootloader) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 38)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 39)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 40)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 42)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_pic_31__38__5F_bootloader_5F_syntax_0 (inCompiler)) {
    case 2: {
      nt_routine_5F_declaration_parse (inCompiler) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rom) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 50)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 51)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 52)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ram) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 63)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 64)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 65)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 66)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 75)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 77)) ;
  bool repeatFlag_1 = true ;
  while (repeatFlag_1) {
    switch (select_pic_31__38__5F_bootloader_5F_syntax_1 (inCompiler)) {
    case 2: {
      nt_routine_5F_declaration_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_1 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 83)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 86)) ;
  bool repeatFlag_2 = true ;
  while (repeatFlag_2) {
    switch (select_pic_31__38__5F_bootloader_5F_syntax_2 (inCompiler)) {
    case 2: {
      nt_ram_5F_definition_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_2 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 91)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_bootloader_5F_syntax::rule_pic_31__38__5F_bootloader_5F_syntax_parse_5F_bootloader_i0_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_pic_31__38_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 37)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bootloader) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 38)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 39)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 40)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 42)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_pic_31__38__5F_bootloader_5F_syntax_0 (inCompiler)) {
    case 2: {
      nt_routine_5F_declaration_indexing (inCompiler) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rom) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 50)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 51)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 52)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ram) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 63)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 64)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 65)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 66)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 75)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 77)) ;
  bool repeatFlag_1 = true ;
  while (repeatFlag_1) {
    switch (select_pic_31__38__5F_bootloader_5F_syntax_1 (inCompiler)) {
    case 2: {
      nt_routine_5F_declaration_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_1 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 83)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 86)) ;
  bool repeatFlag_2 = true ;
  while (repeatFlag_2) {
    switch (select_pic_31__38__5F_bootloader_5F_syntax_2 (inCompiler)) {
    case 2: {
      nt_ram_5F_definition_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_2 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 91)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_bootloader_5F_syntax::rule_pic_31__38__5F_bootloader_5F_syntax_start_5F_symbol_i1_ (C_Lexique_piccolo_5F_lexique * inCompiler) {
  GALGAS_lstring var_bootloaderName ;
  GALGAS_lstring var_deviceName ;
  GALGAS_routineDeclarationList var_bootloaderRoutineDeclarationList ;
  GALGAS_bootloaderReservedRAMmap var_bootloaderReservedRAMmap ;
  GALGAS_luint var_reservedRomSize ;
  GALGAS_routineDeclarationList var_userRoutineDeclarationList ;
  GALGAS_ramDefinitionList var_sharedRamDefinitionList ;
  GALGAS_string var_listFileContents ;
  GALGAS_piccoloDeviceModel var_piccoloDeviceModel ;
  GALGAS_uint var_accessBankSplitOffset ;
  GALGAS_ramBankTable var_ramBank ;
  GALGAS_registerTable var_registerTable ;
  nt_parse_5F_bootloader_ (var_bootloaderName, var_deviceName, var_bootloaderRoutineDeclarationList, var_bootloaderReservedRAMmap, var_reservedRomSize, var_userRoutineDeclarationList, var_sharedRamDefinitionList, var_listFileContents, var_piccoloDeviceModel, var_accessBankSplitOffset, var_ramBank, var_registerTable, inCompiler) ;
  GALGAS_string var_listingFile = GALGAS_string::constructor_stringWithSourceFilePath (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 139)).reader_stringByDeletingPathExtension (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 139)).add_operation (GALGAS_string (".list"), inCompiler COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 139)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 140)).objectCompare (GALGAS_uint ((uint32_t) 0U))).operator_and (GALGAS_bool (gOption_piccolo_5F_options_ouputListingFile.reader_value ()) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 140)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_bool joker_4289_0 ; // Joker input parameter
    var_listFileContents.method_writeToFileWhenDifferentContents (var_listingFile, joker_4289_0, inCompiler COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 141)) ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 143)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    {
    GALGAS_string::class_method_deleteFileIfExists (var_listingFile, inCompiler COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 144)) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_bootloader_5F_syntax::rule_pic_31__38__5F_bootloader_5F_syntax_start_5F_symbol_i1_importBootloaderSpecification (GALGAS_piccoloDeviceModel & outArgument_outPiccoloDeviceModel,
                                                                                                                                             GALGAS_string & outArgument_outDeviceName,
                                                                                                                                             GALGAS_uint & outArgument_outAccessBankSplitOffset,
                                                                                                                                             GALGAS_ramBankTable & outArgument_outRamBank,
                                                                                                                                             GALGAS_registerTable & outArgument_outRegisterTable,
                                                                                                                                             GALGAS_bootloaderReservedRAMmap & outArgument_outBootloaderReservedRAMmap,
                                                                                                                                             GALGAS_routineDeclarationList & outArgument_outBootloaderRoutineDeclarationList,
                                                                                                                                             GALGAS_routineDeclarationList & outArgument_outUserRoutineDeclarationList,
                                                                                                                                             GALGAS_luint & outArgument_outBootloaderReservedROMsize,
                                                                                                                                             C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outPiccoloDeviceModel.drop () ; // Release 'out' argument
  outArgument_outDeviceName.drop () ; // Release 'out' argument
  outArgument_outAccessBankSplitOffset.drop () ; // Release 'out' argument
  outArgument_outRamBank.drop () ; // Release 'out' argument
  outArgument_outRegisterTable.drop () ; // Release 'out' argument
  outArgument_outBootloaderReservedRAMmap.drop () ; // Release 'out' argument
  outArgument_outBootloaderRoutineDeclarationList.drop () ; // Release 'out' argument
  outArgument_outUserRoutineDeclarationList.drop () ; // Release 'out' argument
  outArgument_outBootloaderReservedROMsize.drop () ; // Release 'out' argument
  GALGAS_lstring var_bootloaderName ;
  GALGAS_ramDefinitionList var_sharedRamDefinitionList ;
  GALGAS_string var_listFileContents ;
  GALGAS_lstring var_deviceName ;
  nt_parse_5F_bootloader_ (var_bootloaderName, var_deviceName, outArgument_outBootloaderRoutineDeclarationList, outArgument_outBootloaderReservedRAMmap, outArgument_outBootloaderReservedROMsize, outArgument_outUserRoutineDeclarationList, var_sharedRamDefinitionList, var_listFileContents, outArgument_outPiccoloDeviceModel, outArgument_outAccessBankSplitOffset, outArgument_outRamBank, outArgument_outRegisterTable, inCompiler) ;
  outArgument_outDeviceName = var_deviceName.mAttribute_string ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_bootloader_5F_syntax::rule_pic_31__38__5F_bootloader_5F_syntax_start_5F_symbol_i1_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_parse_5F_bootloader_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_bootloader_5F_syntax::rule_pic_31__38__5F_bootloader_5F_syntax_start_5F_symbol_i1_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_parse_5F_bootloader_indexing (inCompiler) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_bootloader_5F_syntax::rule_pic_31__38__5F_bootloader_5F_syntax_routine_5F_declaration_i2_ (GALGAS_routineDeclarationList & ioArgument_ioRoutineDefinitionList,
                                                                                                                       C_Lexique_piccolo_5F_lexique * inCompiler) {
  GALGAS_bool var_noreturn ;
  switch (select_pic_31__38__5F_bootloader_5F_syntax_3 (inCompiler)) {
  case 1: {
    var_noreturn = GALGAS_bool (false) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_noreturn) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 184)) ;
    var_noreturn = GALGAS_bool (true) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 187)) ;
  GALGAS_lstring var_routineName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 188)) ;
  GALGAS_luint var_requiredBank ;
  GALGAS_luint var_returnedBank ;
  GALGAS_bool var_preservesBank ;
  switch (select_pic_31__38__5F_bootloader_5F_syntax_4 (inCompiler)) {
  case 1: {
    var_requiredBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 193)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 193))  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 193)) ;
    var_returnedBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 194)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 194))  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 194)) ;
    var_preservesBank = GALGAS_bool (false) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bank) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 197)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 198)) ;
    switch (select_pic_31__38__5F_bootloader_5F_syntax_5 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_preserved) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 200)) ;
      const enumGalgasBool test_0 = var_noreturn.boolEnum () ;
      if (kBoolTrue == test_0) {
        inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 202)), GALGAS_string ("a \"noreturn\" routine cannot accept \"bank:preserved\" setting")  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 202)) ;
      }
      var_preservesBank = GALGAS_bool (true) ;
      var_requiredBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 205)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 205))  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 205)) ;
      var_returnedBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 206)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 206))  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 206)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_requires) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 208)) ;
      var_requiredBank = inCompiler->synthetizedAttribute_uint_33__32_value () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 209)) ;
      var_preservesBank = GALGAS_bool (false) ;
      switch (select_pic_31__38__5F_bootloader_5F_syntax_6 (inCompiler)) {
      case 1: {
        var_returnedBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 212)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 212))  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 212)) ;
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 214)) ;
        var_returnedBank = inCompiler->synthetizedAttribute_uint_33__32_value () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 215)) ;
        const enumGalgasBool test_1 = var_noreturn.boolEnum () ;
        if (kBoolTrue == test_1) {
          inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 217)), GALGAS_string ("a \"noreturn\" routine cannot accept \"bank:returned\" setting")  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 217)) ;
        }
      } break ;
      default:
        break ;
      }
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 221)) ;
      var_returnedBank = inCompiler->synthetizedAttribute_uint_33__32_value () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 222)) ;
      const enumGalgasBool test_2 = var_noreturn.boolEnum () ;
      if (kBoolTrue == test_2) {
        inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 224)), GALGAS_string ("a \"noreturn\" routine cannot accept \"bank:returned\" setting")  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 224)) ;
      }
      var_preservesBank = GALGAS_bool (false) ;
      var_requiredBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 227)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 227))  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 227)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
  ioArgument_ioRoutineDefinitionList.addAssign_operation (var_routineName, var_requiredBank, var_returnedBank, var_preservesBank, var_noreturn  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 231)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_bootloader_5F_syntax::rule_pic_31__38__5F_bootloader_5F_syntax_routine_5F_declaration_i2_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_pic_31__38__5F_bootloader_5F_syntax_3 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_noreturn) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 184)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 187)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 188)) ;
  switch (select_pic_31__38__5F_bootloader_5F_syntax_4 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bank) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 197)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 198)) ;
    switch (select_pic_31__38__5F_bootloader_5F_syntax_5 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_preserved) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 200)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_requires) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 208)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 209)) ;
      switch (select_pic_31__38__5F_bootloader_5F_syntax_6 (inCompiler)) {
      case 1: {
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 214)) ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 215)) ;
      } break ;
      default:
        break ;
      }
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 221)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 222)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_bootloader_5F_syntax::rule_pic_31__38__5F_bootloader_5F_syntax_routine_5F_declaration_i2_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_pic_31__38__5F_bootloader_5F_syntax_3 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_noreturn) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 184)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 187)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 188)) ;
  switch (select_pic_31__38__5F_bootloader_5F_syntax_4 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bank) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 197)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 198)) ;
    switch (select_pic_31__38__5F_bootloader_5F_syntax_5 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_preserved) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 200)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_requires) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 208)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 209)) ;
      switch (select_pic_31__38__5F_bootloader_5F_syntax_6 (inCompiler)) {
      case 1: {
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 214)) ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 215)) ;
      } break ;
      default:
        break ;
      }
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 221)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 222)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

#include "utilities/MF_MemoryControl.h"
#include "galgas2/C_galgas_CLI_Options.h"

#include "files/C_FileManager.h"

//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       N O N    T E R M I N A L    N A M E S                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static const char * gNonTerminalNames_pic18_include_grammar [94] = {
  "<configuration_definition>",// Index 0
  "<ram_definition>",// Index 1
  "<constant_definition>",// Index 2
  "<immediate_expression>",// Index 3
  "<register_parsing>",// Index 4
  "<optional_w_as_dest>",// Index 5
  "<bit_number_parsing>",// Index 6
  "<body>",// Index 7
  "<checkpic_definition>",// Index 8
  "<data_definition>",// Index 9
  "<instruction_list>",// Index 10
  "<interrupt_definition>",// Index 11
  "<routine_definition>",// Index 12
  "<condition_factor>",// Index 13
  "<condition_expression>",// Index 14
  "<condition_term>",// Index 15
  "<block_termination>",// Index 16
  "<structured_instruction>",// Index 17
  "<structured_if_instruction>",// Index 18
  "<simple_instruction>",// Index 19
  "<declaration_in_ram>",// Index 20
  "<immediate_bitwise_term>",// Index 21
  "<immediate_bitwise_factor>",// Index 22
  "<immediate_term>",// Index 23
  "<immediate_factor>",// Index 24
  "<immediate_primary>",// Index 25
  "<select_pic_31__38__5F_syntax_0>",// Index 26
  "<select_pic_31__38__5F_syntax_1>",// Index 27
  "<select_pic_31__38__5F_syntax_2>",// Index 28
  "<select_pic_31__38__5F_syntax_3>",// Index 29
  "<select_pic_31__38__5F_syntax_4>",// Index 30
  "<select_pic_31__38__5F_syntax_5>",// Index 31
  "<select_pic_31__38__5F_syntax_6>",// Index 32
  "<select_pic_31__38__5F_syntax_7>",// Index 33
  "<select_pic_31__38__5F_syntax_8>",// Index 34
  "<select_pic_31__38__5F_syntax_9>",// Index 35
  "<select_pic_31__38__5F_syntax_10>",// Index 36
  "<select_pic_31__38__5F_syntax_11>",// Index 37
  "<select_pic_31__38__5F_syntax_12>",// Index 38
  "<select_pic_31__38__5F_syntax_13>",// Index 39
  "<select_pic_31__38__5F_syntax_14>",// Index 40
  "<select_pic_31__38__5F_syntax_15>",// Index 41
  "<select_pic_31__38__5F_syntax_16>",// Index 42
  "<select_pic_31__38__5F_syntax_17>",// Index 43
  "<select_pic_31__38__5F_syntax_18>",// Index 44
  "<select_pic_31__38__5F_syntax_19>",// Index 45
  "<select_pic_31__38__5F_syntax_20>",// Index 46
  "<select_pic_31__38__5F_syntax_21>",// Index 47
  "<select_pic_31__38__5F_syntax_22>",// Index 48
  "<select_pic_31__38__5F_syntax_23>",// Index 49
  "<select_pic_31__38__5F_syntax_24>",// Index 50
  "<select_pic_31__38__5F_syntax_25>",// Index 51
  "<select_pic_31__38__5F_syntax_26>",// Index 52
  "<select_pic_31__38__5F_syntax_27>",// Index 53
  "<select_pic_31__38__5F_syntax_28>",// Index 54
  "<select_pic_31__38__5F_syntax_29>",// Index 55
  "<select_pic_31__38__5F_syntax_30>",// Index 56
  "<select_pic_31__38__5F_syntax_31>",// Index 57
  "<select_pic_31__38__5F_syntax_32>",// Index 58
  "<select_pic_31__38__5F_syntax_33>",// Index 59
  "<select_pic_31__38__5F_syntax_34>",// Index 60
  "<select_pic_31__38__5F_syntax_35>",// Index 61
  "<select_pic_31__38__5F_syntax_36>",// Index 62
  "<select_pic_31__38__5F_syntax_37>",// Index 63
  "<select_pic_31__38__5F_syntax_38>",// Index 64
  "<select_pic_31__38__5F_syntax_39>",// Index 65
  "<select_pic_31__38__5F_syntax_40>",// Index 66
  "<select_pic_31__38__5F_syntax_41>",// Index 67
  "<select_pic_31__38__5F_syntax_42>",// Index 68
  "<select_pic_31__38__5F_syntax_43>",// Index 69
  "<select_pic_31__38__5F_syntax_44>",// Index 70
  "<select_pic_31__38__5F_syntax_45>",// Index 71
  "<select_pic_31__38__5F_syntax_46>",// Index 72
  "<select_communs_0>",// Index 73
  "<select_communs_1>",// Index 74
  "<select_communs_2>",// Index 75
  "<select_communs_3>",// Index 76
  "<select_communs_4>",// Index 77
  "<select_communs_5>",// Index 78
  "<select_communs_6>",// Index 79
  "<select_communs_7>",// Index 80
  "<select_communs_8>",// Index 81
  "<select_communs_9>",// Index 82
  "<select_communs_10>",// Index 83
  "<select_communs_11>",// Index 84
  "<select_communs_12>",// Index 85
  "<select_communs_13>",// Index 86
  "<select_communs_14>",// Index 87
  "<select_communs_15>",// Index 88
  "<select_communs_16>",// Index 89
  "<select_communs_17>",// Index 90
  "<select_communs_18>",// Index 91
  "<select_communs_19>",// Index 92
  "<>"// Index 93
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                S L R    A N A L Y Z E R    A C T I O N    T A B L E                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

// Action tables handle shift and reduce actions ;
//  - a shift action is (terminal_symbol, SHIFT (n)) : if shifts to state n ;
//  - the accept action is (terminal_symbol, ACCEPT) ;
//  - a reduce action is (terminal_symbol, REDUCE (n)) ; if reduces to state n.

#define SHIFT(a) ((a) + 2)
#define REDUCE(a) (-(a) - 1)
#define ACCEPT (1)
#define END (-1)

static const int16_t gActionTable_pic18_include_grammar [] = {
// State S0 (index = 0)
  C_Lexique_piccolo_5F_lexique::kToken_mark, SHIFT (1)
, C_Lexique_piccolo_5F_lexique::kToken_unused, SHIFT (2)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (59)
, C_Lexique_piccolo_5F_lexique::kToken_inline, SHIFT (3)
, C_Lexique_piccolo_5F_lexique::kToken_include, SHIFT (4)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, SHIFT (5)
, C_Lexique_piccolo_5F_lexique::kToken_data, SHIFT (6)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, SHIFT (7)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, SHIFT (8)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, SHIFT (9)
, C_Lexique_piccolo_5F_lexique::kToken_ram, SHIFT (10)
, C_Lexique_piccolo_5F_lexique::kToken_const, SHIFT (11)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (31)
, END
// State S1 (index = 27)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string, SHIFT (22)
, END
// State S2 (index = 30)
, C_Lexique_piccolo_5F_lexique::kToken_byte, SHIFT (23)
, C_Lexique_piccolo_5F_lexique::kToken_routine, SHIFT (24)
, END
// State S3 (index = 35)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (25)
, END
// State S4 (index = 38)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string, SHIFT (26)
, END
// State S5 (index = 41)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string, SHIFT (27)
, END
// State S6 (index = 44)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (28)
, END
// State S7 (index = 47)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (29)
, END
// State S8 (index = 50)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (60)
, END
// State S9 (index = 53)
, C_Lexique_piccolo_5F_lexique::kToken__7B_, SHIFT (30)
, END
// State S10 (index = 56)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (31)
, END
// State S11 (index = 59)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (32)
, END
// State S12 (index = 62)
, C_Lexique_piccolo_5F_lexique::kToken_mark, SHIFT (1)
, C_Lexique_piccolo_5F_lexique::kToken_unused, SHIFT (2)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (59)
, C_Lexique_piccolo_5F_lexique::kToken_inline, SHIFT (3)
, C_Lexique_piccolo_5F_lexique::kToken_include, SHIFT (4)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, SHIFT (5)
, C_Lexique_piccolo_5F_lexique::kToken_data, SHIFT (6)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, SHIFT (7)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, SHIFT (8)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, SHIFT (9)
, C_Lexique_piccolo_5F_lexique::kToken_ram, SHIFT (10)
, C_Lexique_piccolo_5F_lexique::kToken_const, SHIFT (11)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (31)
, END
// State S13 (index = 89)
, C_Lexique_piccolo_5F_lexique::kToken_mark, SHIFT (1)
, C_Lexique_piccolo_5F_lexique::kToken_unused, SHIFT (2)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (59)
, C_Lexique_piccolo_5F_lexique::kToken_inline, SHIFT (3)
, C_Lexique_piccolo_5F_lexique::kToken_include, SHIFT (4)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, SHIFT (5)
, C_Lexique_piccolo_5F_lexique::kToken_data, SHIFT (6)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, SHIFT (7)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, SHIFT (8)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, SHIFT (9)
, C_Lexique_piccolo_5F_lexique::kToken_ram, SHIFT (10)
, C_Lexique_piccolo_5F_lexique::kToken_const, SHIFT (11)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (31)
, END
// State S14 (index = 116)
, C_Lexique_piccolo_5F_lexique::kToken_mark, SHIFT (1)
, C_Lexique_piccolo_5F_lexique::kToken_unused, SHIFT (2)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (59)
, C_Lexique_piccolo_5F_lexique::kToken_inline, SHIFT (3)
, C_Lexique_piccolo_5F_lexique::kToken_include, SHIFT (4)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, SHIFT (5)
, C_Lexique_piccolo_5F_lexique::kToken_data, SHIFT (6)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, SHIFT (7)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, SHIFT (8)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, SHIFT (9)
, C_Lexique_piccolo_5F_lexique::kToken_ram, SHIFT (10)
, C_Lexique_piccolo_5F_lexique::kToken_const, SHIFT (11)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (31)
, END
// State S15 (index = 143)
, C_Lexique_piccolo_5F_lexique::kToken_, ACCEPT
, END
// State S16 (index = 146)
, C_Lexique_piccolo_5F_lexique::kToken_mark, SHIFT (1)
, C_Lexique_piccolo_5F_lexique::kToken_unused, SHIFT (2)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (59)
, C_Lexique_piccolo_5F_lexique::kToken_inline, SHIFT (3)
, C_Lexique_piccolo_5F_lexique::kToken_include, SHIFT (4)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, SHIFT (5)
, C_Lexique_piccolo_5F_lexique::kToken_data, SHIFT (6)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, SHIFT (7)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, SHIFT (8)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, SHIFT (9)
, C_Lexique_piccolo_5F_lexique::kToken_ram, SHIFT (10)
, C_Lexique_piccolo_5F_lexique::kToken_const, SHIFT (11)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (31)
, END
// State S17 (index = 173)
, C_Lexique_piccolo_5F_lexique::kToken_mark, SHIFT (1)
, C_Lexique_piccolo_5F_lexique::kToken_unused, SHIFT (2)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (59)
, C_Lexique_piccolo_5F_lexique::kToken_inline, SHIFT (3)
, C_Lexique_piccolo_5F_lexique::kToken_include, SHIFT (4)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, SHIFT (5)
, C_Lexique_piccolo_5F_lexique::kToken_data, SHIFT (6)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, SHIFT (7)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, SHIFT (8)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, SHIFT (9)
, C_Lexique_piccolo_5F_lexique::kToken_ram, SHIFT (10)
, C_Lexique_piccolo_5F_lexique::kToken_const, SHIFT (11)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (31)
, END
// State S18 (index = 200)
, C_Lexique_piccolo_5F_lexique::kToken_mark, SHIFT (1)
, C_Lexique_piccolo_5F_lexique::kToken_unused, SHIFT (2)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (59)
, C_Lexique_piccolo_5F_lexique::kToken_inline, SHIFT (3)
, C_Lexique_piccolo_5F_lexique::kToken_include, SHIFT (4)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, SHIFT (5)
, C_Lexique_piccolo_5F_lexique::kToken_data, SHIFT (6)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, SHIFT (7)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, SHIFT (8)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, SHIFT (9)
, C_Lexique_piccolo_5F_lexique::kToken_ram, SHIFT (10)
, C_Lexique_piccolo_5F_lexique::kToken_const, SHIFT (11)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (31)
, END
// State S19 (index = 227)
, C_Lexique_piccolo_5F_lexique::kToken_mark, SHIFT (1)
, C_Lexique_piccolo_5F_lexique::kToken_unused, SHIFT (2)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (59)
, C_Lexique_piccolo_5F_lexique::kToken_inline, SHIFT (3)
, C_Lexique_piccolo_5F_lexique::kToken_include, SHIFT (4)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, SHIFT (5)
, C_Lexique_piccolo_5F_lexique::kToken_data, SHIFT (6)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, SHIFT (7)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, SHIFT (8)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, SHIFT (9)
, C_Lexique_piccolo_5F_lexique::kToken_ram, SHIFT (10)
, C_Lexique_piccolo_5F_lexique::kToken_const, SHIFT (11)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (31)
, END
// State S20 (index = 254)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (0)
, END
// State S21 (index = 257)
, C_Lexique_piccolo_5F_lexique::kToken_routine, SHIFT (40)
, END
// State S22 (index = 260)
, C_Lexique_piccolo_5F_lexique::kToken_mark, SHIFT (1)
, C_Lexique_piccolo_5F_lexique::kToken_unused, SHIFT (2)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (59)
, C_Lexique_piccolo_5F_lexique::kToken_inline, SHIFT (3)
, C_Lexique_piccolo_5F_lexique::kToken_include, SHIFT (4)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, SHIFT (5)
, C_Lexique_piccolo_5F_lexique::kToken_data, SHIFT (6)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, SHIFT (7)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, SHIFT (8)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, SHIFT (9)
, C_Lexique_piccolo_5F_lexique::kToken_ram, SHIFT (10)
, C_Lexique_piccolo_5F_lexique::kToken_const, SHIFT (11)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (31)
, END
// State S23 (index = 287)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (42)
, END
// State S24 (index = 290)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (43)
, END
// State S25 (index = 293)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (44)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (48)
, END
// State S26 (index = 322)
, C_Lexique_piccolo_5F_lexique::kToken_mark, SHIFT (1)
, C_Lexique_piccolo_5F_lexique::kToken_unused, SHIFT (2)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (59)
, C_Lexique_piccolo_5F_lexique::kToken_inline, SHIFT (3)
, C_Lexique_piccolo_5F_lexique::kToken_include, SHIFT (4)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, SHIFT (5)
, C_Lexique_piccolo_5F_lexique::kToken_data, SHIFT (6)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, SHIFT (7)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, SHIFT (8)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, SHIFT (9)
, C_Lexique_piccolo_5F_lexique::kToken_ram, SHIFT (10)
, C_Lexique_piccolo_5F_lexique::kToken_const, SHIFT (11)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (31)
, END
// State S27 (index = 349)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (47)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (50)
, END
// State S28 (index = 378)
, C_Lexique_piccolo_5F_lexique::kToken__7B_, SHIFT (49)
, END
// State S29 (index = 381)
, C_Lexique_piccolo_5F_lexique::kToken__7B_, REDUCE (57)
, C_Lexique_piccolo_5F_lexique::kToken_fast, SHIFT (50)
, END
// State S30 (index = 386)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (52)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (223)
, END
// State S31 (index = 391)
, C_Lexique_piccolo_5F_lexique::kToken__7B_, SHIFT (54)
, END
// State S32 (index = 394)
, C_Lexique_piccolo_5F_lexique::kToken__3D_, SHIFT (55)
, END
// State S33 (index = 397)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (36)
, END
// State S34 (index = 400)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (37)
, END
// State S35 (index = 403)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (38)
, END
// State S36 (index = 406)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (42)
, END
// State S37 (index = 409)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (41)
, END
// State S38 (index = 412)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (39)
, END
// State S39 (index = 415)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (40)
, END
// State S40 (index = 418)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (56)
, END
// State S41 (index = 421)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (32)
, END
// State S42 (index = 424)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (57)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (44)
, END
// State S43 (index = 453)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (59)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (46)
, END
// State S44 (index = 482)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (61)
, END
// State S45 (index = 485)
, C_Lexique_piccolo_5F_lexique::kToken_mark, SHIFT (1)
, C_Lexique_piccolo_5F_lexique::kToken_unused, SHIFT (2)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (59)
, C_Lexique_piccolo_5F_lexique::kToken_inline, SHIFT (3)
, C_Lexique_piccolo_5F_lexique::kToken_include, SHIFT (4)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, SHIFT (5)
, C_Lexique_piccolo_5F_lexique::kToken_data, SHIFT (6)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, SHIFT (7)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, SHIFT (8)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, SHIFT (9)
, C_Lexique_piccolo_5F_lexique::kToken_ram, SHIFT (10)
, C_Lexique_piccolo_5F_lexique::kToken_const, SHIFT (11)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (31)
, END
// State S46 (index = 512)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (43)
, END
// State S47 (index = 515)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string, SHIFT (63)
, END
// State S48 (index = 518)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (1)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (1)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (1)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (1)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (1)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (1)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (1)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (1)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (1)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (1)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (1)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (1)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (1)
, END
// State S49 (index = 545)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S50 (index = 560)
, C_Lexique_piccolo_5F_lexique::kToken__7B_, REDUCE (58)
, END
// State S51 (index = 563)
, C_Lexique_piccolo_5F_lexique::kToken__7B_, SHIFT (78)
, END
// State S52 (index = 566)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, SHIFT (79)
, END
// State S53 (index = 569)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, SHIFT (80)
, END
// State S54 (index = 572)
, C_Lexique_piccolo_5F_lexique::kToken_byte, SHIFT (81)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (239)
, END
// State S55 (index = 577)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S56 (index = 592)
, C_Lexique_piccolo_5F_lexique::kToken__7B_, REDUCE (61)
, C_Lexique_piccolo_5F_lexique::kToken_bank, SHIFT (85)
, END
// State S57 (index = 597)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (87)
, END
// State S58 (index = 600)
, C_Lexique_piccolo_5F_lexique::kToken_mark, SHIFT (1)
, C_Lexique_piccolo_5F_lexique::kToken_unused, SHIFT (2)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (59)
, C_Lexique_piccolo_5F_lexique::kToken_inline, SHIFT (3)
, C_Lexique_piccolo_5F_lexique::kToken_include, SHIFT (4)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, SHIFT (5)
, C_Lexique_piccolo_5F_lexique::kToken_data, SHIFT (6)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, SHIFT (7)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, SHIFT (8)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, SHIFT (9)
, C_Lexique_piccolo_5F_lexique::kToken_ram, SHIFT (10)
, C_Lexique_piccolo_5F_lexique::kToken_const, SHIFT (11)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (31)
, END
// State S59 (index = 627)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (89)
, END
// State S60 (index = 630)
, C_Lexique_piccolo_5F_lexique::kToken_mark, SHIFT (1)
, C_Lexique_piccolo_5F_lexique::kToken_unused, SHIFT (2)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (59)
, C_Lexique_piccolo_5F_lexique::kToken_inline, SHIFT (3)
, C_Lexique_piccolo_5F_lexique::kToken_include, SHIFT (4)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, SHIFT (5)
, C_Lexique_piccolo_5F_lexique::kToken_data, SHIFT (6)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, SHIFT (7)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, SHIFT (8)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, SHIFT (9)
, C_Lexique_piccolo_5F_lexique::kToken_ram, SHIFT (10)
, C_Lexique_piccolo_5F_lexique::kToken_const, SHIFT (11)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (31)
, END
// State S61 (index = 657)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (44)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (48)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (48)
, END
// State S62 (index = 686)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (35)
, END
// State S63 (index = 689)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (47)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (50)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (50)
, END
// State S64 (index = 718)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken__5B_, SHIFT (93)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken__2A_, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken__2F_, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken__25_, REDUCE (269)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (269)
, END
// State S65 (index = 943)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken__2A_, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken__2F_, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken__25_, REDUCE (264)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (264)
, END
// State S66 (index = 1166)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S67 (index = 1181)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S68 (index = 1196)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S69 (index = 1211)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken__2A_, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken__2F_, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken__25_, REDUCE (265)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (265)
, END
// State S70 (index = 1434)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (98)
, END
// State S71 (index = 1437)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (99)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (52)
, END
// State S72 (index = 1442)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, SHIFT (101)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, SHIFT (102)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (241)
, END
// State S73 (index = 1637)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken__26_, SHIFT (104)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (244)
, END
// State S74 (index = 1834)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, SHIFT (106)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, SHIFT (107)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, SHIFT (108)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, SHIFT (109)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, SHIFT (110)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, SHIFT (111)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (246)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (246)
, END
// State S75 (index = 2043)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (113)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, SHIFT (114)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, SHIFT (115)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, SHIFT (116)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (253)
, END
// State S76 (index = 2260)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__2A_, SHIFT (118)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__2F_, SHIFT (119)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__25_, SHIFT (120)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (258)
, END
// State S77 (index = 2483)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken__2A_, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken__2F_, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken__25_, REDUCE (26)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (26)
, END
// State S78 (index = 2706)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (122)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (123)
, C_Lexique_piccolo_5F_lexique::kToken_switch, SHIFT (124)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_block, SHIFT (125)
, C_Lexique_piccolo_5F_lexique::kToken_do, SHIFT (126)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, SHIFT (127)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, SHIFT (128)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, SHIFT (129)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, SHIFT (130)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, SHIFT (131)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, SHIFT (132)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, SHIFT (133)
, C_Lexique_piccolo_5F_lexique::kToken_computed, SHIFT (134)
, C_Lexique_piccolo_5F_lexique::kToken_bra, SHIFT (135)
, C_Lexique_piccolo_5F_lexique::kToken_goto, SHIFT (136)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, SHIFT (137)
, C_Lexique_piccolo_5F_lexique::kToken_forever, SHIFT (138)
, C_Lexique_piccolo_5F_lexique::kToken_if, SHIFT (139)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, SHIFT (140)
, C_Lexique_piccolo_5F_lexique::kToken_bc, SHIFT (141)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, SHIFT (142)
, C_Lexique_piccolo_5F_lexique::kToken_bn, SHIFT (143)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, SHIFT (144)
, C_Lexique_piccolo_5F_lexique::kToken_bov, SHIFT (145)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, SHIFT (146)
, C_Lexique_piccolo_5F_lexique::kToken_bz, SHIFT (147)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, SHIFT (148)
, C_Lexique_piccolo_5F_lexique::kToken_jump, SHIFT (149)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, SHIFT (150)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, SHIFT (151)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, SHIFT (152)
, C_Lexique_piccolo_5F_lexique::kToken_comf, SHIFT (153)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, SHIFT (154)
, C_Lexique_piccolo_5F_lexique::kToken_movf, SHIFT (155)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, SHIFT (156)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, SHIFT (157)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, SHIFT (158)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, SHIFT (159)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, SHIFT (160)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, SHIFT (161)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, SHIFT (162)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, SHIFT (163)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, SHIFT (164)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, SHIFT (165)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, SHIFT (166)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, SHIFT (167)
, C_Lexique_piccolo_5F_lexique::kToken_negf, SHIFT (168)
, C_Lexique_piccolo_5F_lexique::kToken_setf, SHIFT (169)
, C_Lexique_piccolo_5F_lexique::kToken_movff, SHIFT (170)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, SHIFT (171)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, SHIFT (172)
, C_Lexique_piccolo_5F_lexique::kToken_btg, SHIFT (173)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, SHIFT (174)
, C_Lexique_piccolo_5F_lexique::kToken_call, SHIFT (175)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, SHIFT (176)
, C_Lexique_piccolo_5F_lexique::kToken_daw, SHIFT (177)
, C_Lexique_piccolo_5F_lexique::kToken_nop, SHIFT (178)
, C_Lexique_piccolo_5F_lexique::kToken_pop, SHIFT (179)
, C_Lexique_piccolo_5F_lexique::kToken_push, SHIFT (180)
, C_Lexique_piccolo_5F_lexique::kToken_reset, SHIFT (181)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, SHIFT (182)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, SHIFT (183)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, SHIFT (184)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, SHIFT (185)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, SHIFT (186)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, SHIFT (187)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, SHIFT (188)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, SHIFT (189)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, SHIFT (190)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, SHIFT (191)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, SHIFT (192)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, SHIFT (193)
, END
// State S79 (index = 2863)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string, SHIFT (205)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (206)
, END
// State S80 (index = 2868)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (17)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (17)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (17)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (17)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (17)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (17)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (17)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (17)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (17)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (17)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (17)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (17)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (17)
, END
// State S81 (index = 2895)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (208)
, END
// State S82 (index = 2898)
, C_Lexique_piccolo_5F_lexique::kToken_byte, SHIFT (81)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (239)
, END
// State S83 (index = 2903)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, SHIFT (210)
, END
// State S84 (index = 2906)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (20)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (20)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (20)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (20)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (20)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (20)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (20)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (20)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (20)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (20)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (20)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (20)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (20)
, END
// State S85 (index = 2933)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, SHIFT (211)
, END
// State S86 (index = 2936)
, C_Lexique_piccolo_5F_lexique::kToken__7B_, SHIFT (212)
, END
// State S87 (index = 2939)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (57)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (44)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (44)
, END
// State S88 (index = 2968)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (33)
, END
// State S89 (index = 2971)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (59)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (46)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (46)
, END
// State S90 (index = 3000)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (34)
, END
// State S91 (index = 3003)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (49)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (49)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (49)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (49)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (49)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (49)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (49)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (49)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (49)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (49)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (49)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (49)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (49)
, END
// State S92 (index = 3030)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (51)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (51)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (51)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (51)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (51)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (51)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (51)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (51)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (51)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (51)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (51)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (51)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (51)
, END
// State S93 (index = 3057)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (215)
, END
// State S94 (index = 3060)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken__2A_, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken__2F_, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken__25_, REDUCE (266)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (266)
, END
// State S95 (index = 3283)
, C_Lexique_piccolo_5F_lexique::kToken__29_, SHIFT (216)
, END
// State S96 (index = 3286)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken__2A_, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken__2F_, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken__25_, REDUCE (262)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (262)
, END
// State S97 (index = 3509)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken__2A_, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken__2F_, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken__25_, REDUCE (263)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (263)
, END
// State S98 (index = 3732)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (217)
, END
// State S99 (index = 3735)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S100 (index = 3750)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, SHIFT (219)
, END
// State S101 (index = 3753)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S102 (index = 3768)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S103 (index = 3783)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (21)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (21)
, END
// State S104 (index = 3974)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S105 (index = 3989)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (22)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (22)
, END
// State S106 (index = 4184)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S107 (index = 4199)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S108 (index = 4214)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S109 (index = 4229)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S110 (index = 4244)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S111 (index = 4259)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S112 (index = 4274)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (23)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (23)
, END
// State S113 (index = 4471)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S114 (index = 4486)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S115 (index = 4501)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S116 (index = 4516)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S117 (index = 4531)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (24)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (24)
, END
// State S118 (index = 4740)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S119 (index = 4755)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S120 (index = 4770)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S121 (index = 4785)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, REDUCE (25)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (25)
, END
// State S122 (index = 5002)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (188)
, END
// State S123 (index = 5005)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (187)
, END
// State S124 (index = 5008)
, C_Lexique_piccolo_5F_lexique::kToken_w, SHIFT (236)
, END
// State S125 (index = 5011)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (237)
, END
// State S126 (index = 5014)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (122)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (123)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (238)
, C_Lexique_piccolo_5F_lexique::kToken_switch, SHIFT (124)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_block, SHIFT (125)
, C_Lexique_piccolo_5F_lexique::kToken_do, SHIFT (126)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, SHIFT (127)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, SHIFT (128)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, SHIFT (129)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, SHIFT (130)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, SHIFT (131)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, SHIFT (132)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, SHIFT (133)
, C_Lexique_piccolo_5F_lexique::kToken_computed, SHIFT (134)
, C_Lexique_piccolo_5F_lexique::kToken_bra, SHIFT (135)
, C_Lexique_piccolo_5F_lexique::kToken_goto, SHIFT (136)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, SHIFT (137)
, C_Lexique_piccolo_5F_lexique::kToken_forever, SHIFT (138)
, C_Lexique_piccolo_5F_lexique::kToken_if, SHIFT (139)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, SHIFT (140)
, C_Lexique_piccolo_5F_lexique::kToken_bc, SHIFT (141)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, SHIFT (142)
, C_Lexique_piccolo_5F_lexique::kToken_bn, SHIFT (143)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, SHIFT (144)
, C_Lexique_piccolo_5F_lexique::kToken_bov, SHIFT (145)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, SHIFT (146)
, C_Lexique_piccolo_5F_lexique::kToken_bz, SHIFT (147)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, SHIFT (148)
, C_Lexique_piccolo_5F_lexique::kToken_jump, SHIFT (149)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, SHIFT (150)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, SHIFT (151)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, SHIFT (152)
, C_Lexique_piccolo_5F_lexique::kToken_comf, SHIFT (153)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, SHIFT (154)
, C_Lexique_piccolo_5F_lexique::kToken_movf, SHIFT (155)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, SHIFT (156)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, SHIFT (157)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, SHIFT (158)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, SHIFT (159)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, SHIFT (160)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, SHIFT (161)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, SHIFT (162)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, SHIFT (163)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, SHIFT (164)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, SHIFT (165)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, SHIFT (166)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, SHIFT (167)
, C_Lexique_piccolo_5F_lexique::kToken_negf, SHIFT (168)
, C_Lexique_piccolo_5F_lexique::kToken_setf, SHIFT (169)
, C_Lexique_piccolo_5F_lexique::kToken_movff, SHIFT (170)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, SHIFT (171)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, SHIFT (172)
, C_Lexique_piccolo_5F_lexique::kToken_btg, SHIFT (173)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, SHIFT (174)
, C_Lexique_piccolo_5F_lexique::kToken_call, SHIFT (175)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, SHIFT (176)
, C_Lexique_piccolo_5F_lexique::kToken_daw, SHIFT (177)
, C_Lexique_piccolo_5F_lexique::kToken_nop, SHIFT (178)
, C_Lexique_piccolo_5F_lexique::kToken_pop, SHIFT (179)
, C_Lexique_piccolo_5F_lexique::kToken_push, SHIFT (180)
, C_Lexique_piccolo_5F_lexique::kToken_reset, SHIFT (181)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, SHIFT (182)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, SHIFT (183)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, SHIFT (184)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, SHIFT (185)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, SHIFT (186)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, SHIFT (187)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, SHIFT (188)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, SHIFT (189)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, SHIFT (190)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, SHIFT (191)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, SHIFT (192)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, SHIFT (193)
, END
// State S127 (index = 5173)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (240)
, END
// State S128 (index = 5176)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (93)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (93)
, END
// State S129 (index = 5333)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (241)
, END
// State S130 (index = 5336)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S131 (index = 5351)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (243)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (244)
, END
// State S132 (index = 5356)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (98)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (98)
, END
// State S133 (index = 5513)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (243)
, END
// State S134 (index = 5516)
, C_Lexique_piccolo_5F_lexique::kToken__5B_, SHIFT (247)
, END
// State S135 (index = 5519)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (248)
, END
// State S136 (index = 5522)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (249)
, END
// State S137 (index = 5525)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (250)
, END
// State S138 (index = 5528)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (122)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (123)
, C_Lexique_piccolo_5F_lexique::kToken_switch, SHIFT (124)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_block, SHIFT (125)
, C_Lexique_piccolo_5F_lexique::kToken_do, SHIFT (126)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, SHIFT (127)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, SHIFT (128)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, SHIFT (129)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, SHIFT (130)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, SHIFT (131)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, SHIFT (132)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, SHIFT (133)
, C_Lexique_piccolo_5F_lexique::kToken_computed, SHIFT (134)
, C_Lexique_piccolo_5F_lexique::kToken_bra, SHIFT (135)
, C_Lexique_piccolo_5F_lexique::kToken_goto, SHIFT (136)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, SHIFT (137)
, C_Lexique_piccolo_5F_lexique::kToken_forever, SHIFT (138)
, C_Lexique_piccolo_5F_lexique::kToken_if, SHIFT (139)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, SHIFT (140)
, C_Lexique_piccolo_5F_lexique::kToken_bc, SHIFT (141)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, SHIFT (142)
, C_Lexique_piccolo_5F_lexique::kToken_bn, SHIFT (143)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, SHIFT (144)
, C_Lexique_piccolo_5F_lexique::kToken_bov, SHIFT (145)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, SHIFT (146)
, C_Lexique_piccolo_5F_lexique::kToken_bz, SHIFT (147)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, SHIFT (148)
, C_Lexique_piccolo_5F_lexique::kToken_jump, SHIFT (149)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, SHIFT (150)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, SHIFT (151)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, SHIFT (152)
, C_Lexique_piccolo_5F_lexique::kToken_comf, SHIFT (153)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, SHIFT (154)
, C_Lexique_piccolo_5F_lexique::kToken_movf, SHIFT (155)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, SHIFT (156)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, SHIFT (157)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, SHIFT (158)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, SHIFT (159)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, SHIFT (160)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, SHIFT (161)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, SHIFT (162)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, SHIFT (163)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, SHIFT (164)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, SHIFT (165)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, SHIFT (166)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, SHIFT (167)
, C_Lexique_piccolo_5F_lexique::kToken_negf, SHIFT (168)
, C_Lexique_piccolo_5F_lexique::kToken_setf, SHIFT (169)
, C_Lexique_piccolo_5F_lexique::kToken_movff, SHIFT (170)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, SHIFT (171)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, SHIFT (172)
, C_Lexique_piccolo_5F_lexique::kToken_btg, SHIFT (173)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, SHIFT (174)
, C_Lexique_piccolo_5F_lexique::kToken_call, SHIFT (175)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, SHIFT (176)
, C_Lexique_piccolo_5F_lexique::kToken_daw, SHIFT (177)
, C_Lexique_piccolo_5F_lexique::kToken_nop, SHIFT (178)
, C_Lexique_piccolo_5F_lexique::kToken_pop, SHIFT (179)
, C_Lexique_piccolo_5F_lexique::kToken_push, SHIFT (180)
, C_Lexique_piccolo_5F_lexique::kToken_reset, SHIFT (181)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, SHIFT (182)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, SHIFT (183)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, SHIFT (184)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, SHIFT (185)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, SHIFT (186)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, SHIFT (187)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, SHIFT (188)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, SHIFT (189)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, SHIFT (190)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, SHIFT (191)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, SHIFT (192)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, SHIFT (193)
, END
// State S139 (index = 5685)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (243)
, C_Lexique_piccolo_5F_lexique::kToken__21_, SHIFT (252)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (253)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (254)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (255)
, END
// State S140 (index = 5696)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (261)
, END
// State S141 (index = 5699)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (153)
, END
// State S142 (index = 5702)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (154)
, END
// State S143 (index = 5705)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (155)
, END
// State S144 (index = 5708)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (156)
, END
// State S145 (index = 5711)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (157)
, END
// State S146 (index = 5714)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (158)
, END
// State S147 (index = 5717)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (159)
, END
// State S148 (index = 5720)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (160)
, END
// State S149 (index = 5723)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (262)
, END
// State S150 (index = 5726)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (183)
, END
// State S151 (index = 5729)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (184)
, END
// State S152 (index = 5732)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (185)
, END
// State S153 (index = 5735)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (186)
, END
// State S154 (index = 5738)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (189)
, END
// State S155 (index = 5741)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (190)
, END
// State S156 (index = 5744)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (191)
, END
// State S157 (index = 5747)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (192)
, END
// State S158 (index = 5750)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (193)
, END
// State S159 (index = 5753)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (194)
, END
// State S160 (index = 5756)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (195)
, END
// State S161 (index = 5759)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (196)
, END
// State S162 (index = 5762)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (197)
, END
// State S163 (index = 5765)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (198)
, END
// State S164 (index = 5768)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (199)
, END
// State S165 (index = 5771)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (200)
, END
// State S166 (index = 5774)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (201)
, END
// State S167 (index = 5777)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (202)
, END
// State S168 (index = 5780)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (203)
, END
// State S169 (index = 5783)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (204)
, END
// State S170 (index = 5786)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (243)
, END
// State S171 (index = 5789)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (205)
, END
// State S172 (index = 5792)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (206)
, END
// State S173 (index = 5795)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (207)
, END
// State S174 (index = 5798)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (264)
, END
// State S175 (index = 5801)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (265)
, END
// State S176 (index = 5804)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (171)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (171)
, END
// State S177 (index = 5961)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (172)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (172)
, END
// State S178 (index = 6118)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (173)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (173)
, END
// State S179 (index = 6275)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (174)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (174)
, END
// State S180 (index = 6432)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (175)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (175)
, END
// State S181 (index = 6589)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (176)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (176)
, END
// State S182 (index = 6746)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (177)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (177)
, END
// State S183 (index = 6903)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S184 (index = 6918)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (208)
, C_Lexique_piccolo_5F_lexique::kToken_integer, REDUCE (208)
, C_Lexique_piccolo_5F_lexique::kToken__28_, REDUCE (208)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (208)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, REDUCE (208)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, REDUCE (208)
, C_Lexique_piccolo_5F_lexique::kToken__40_, REDUCE (208)
, END
// State S185 (index = 6933)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (209)
, C_Lexique_piccolo_5F_lexique::kToken_integer, REDUCE (209)
, C_Lexique_piccolo_5F_lexique::kToken__28_, REDUCE (209)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (209)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, REDUCE (209)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, REDUCE (209)
, C_Lexique_piccolo_5F_lexique::kToken__40_, REDUCE (209)
, END
// State S186 (index = 6948)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (210)
, C_Lexique_piccolo_5F_lexique::kToken_integer, REDUCE (210)
, C_Lexique_piccolo_5F_lexique::kToken__28_, REDUCE (210)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (210)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, REDUCE (210)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, REDUCE (210)
, C_Lexique_piccolo_5F_lexique::kToken__40_, REDUCE (210)
, END
// State S187 (index = 6963)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (211)
, C_Lexique_piccolo_5F_lexique::kToken_integer, REDUCE (211)
, C_Lexique_piccolo_5F_lexique::kToken__28_, REDUCE (211)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (211)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, REDUCE (211)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, REDUCE (211)
, C_Lexique_piccolo_5F_lexique::kToken__40_, REDUCE (211)
, END
// State S188 (index = 6978)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (212)
, C_Lexique_piccolo_5F_lexique::kToken_integer, REDUCE (212)
, C_Lexique_piccolo_5F_lexique::kToken__28_, REDUCE (212)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (212)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, REDUCE (212)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, REDUCE (212)
, C_Lexique_piccolo_5F_lexique::kToken__40_, REDUCE (212)
, END
// State S189 (index = 6993)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (213)
, C_Lexique_piccolo_5F_lexique::kToken_integer, REDUCE (213)
, C_Lexique_piccolo_5F_lexique::kToken__28_, REDUCE (213)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (213)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, REDUCE (213)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, REDUCE (213)
, C_Lexique_piccolo_5F_lexique::kToken__40_, REDUCE (213)
, END
// State S190 (index = 7008)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (214)
, C_Lexique_piccolo_5F_lexique::kToken_integer, REDUCE (214)
, C_Lexique_piccolo_5F_lexique::kToken__28_, REDUCE (214)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (214)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, REDUCE (214)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, REDUCE (214)
, C_Lexique_piccolo_5F_lexique::kToken__40_, REDUCE (214)
, END
// State S191 (index = 7023)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (267)
, END
// State S192 (index = 7026)
, C_Lexique_piccolo_5F_lexique::kToken__2A_, SHIFT (268)
, C_Lexique_piccolo_5F_lexique::kToken__2A__2B_, SHIFT (269)
, C_Lexique_piccolo_5F_lexique::kToken__2A__2D_, SHIFT (270)
, C_Lexique_piccolo_5F_lexique::kToken__2B__2A_, SHIFT (271)
, END
// State S193 (index = 7035)
, C_Lexique_piccolo_5F_lexique::kToken__2A_, SHIFT (273)
, C_Lexique_piccolo_5F_lexique::kToken__2A__2B_, SHIFT (274)
, C_Lexique_piccolo_5F_lexique::kToken__2A__2D_, SHIFT (275)
, C_Lexique_piccolo_5F_lexique::kToken__2B__2A_, SHIFT (276)
, END
// State S194 (index = 7044)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, SHIFT (278)
, END
// State S195 (index = 7047)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (122)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (123)
, C_Lexique_piccolo_5F_lexique::kToken_switch, SHIFT (124)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_block, SHIFT (125)
, C_Lexique_piccolo_5F_lexique::kToken_do, SHIFT (126)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, SHIFT (127)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, SHIFT (128)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, SHIFT (129)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, SHIFT (130)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, SHIFT (131)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, SHIFT (132)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, SHIFT (133)
, C_Lexique_piccolo_5F_lexique::kToken_computed, SHIFT (134)
, C_Lexique_piccolo_5F_lexique::kToken_bra, SHIFT (135)
, C_Lexique_piccolo_5F_lexique::kToken_goto, SHIFT (136)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, SHIFT (137)
, C_Lexique_piccolo_5F_lexique::kToken_forever, SHIFT (138)
, C_Lexique_piccolo_5F_lexique::kToken_if, SHIFT (139)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, SHIFT (140)
, C_Lexique_piccolo_5F_lexique::kToken_bc, SHIFT (141)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, SHIFT (142)
, C_Lexique_piccolo_5F_lexique::kToken_bn, SHIFT (143)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, SHIFT (144)
, C_Lexique_piccolo_5F_lexique::kToken_bov, SHIFT (145)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, SHIFT (146)
, C_Lexique_piccolo_5F_lexique::kToken_bz, SHIFT (147)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, SHIFT (148)
, C_Lexique_piccolo_5F_lexique::kToken_jump, SHIFT (149)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, SHIFT (150)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, SHIFT (151)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, SHIFT (152)
, C_Lexique_piccolo_5F_lexique::kToken_comf, SHIFT (153)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, SHIFT (154)
, C_Lexique_piccolo_5F_lexique::kToken_movf, SHIFT (155)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, SHIFT (156)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, SHIFT (157)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, SHIFT (158)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, SHIFT (159)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, SHIFT (160)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, SHIFT (161)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, SHIFT (162)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, SHIFT (163)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, SHIFT (164)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, SHIFT (165)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, SHIFT (166)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, SHIFT (167)
, C_Lexique_piccolo_5F_lexique::kToken_negf, SHIFT (168)
, C_Lexique_piccolo_5F_lexique::kToken_setf, SHIFT (169)
, C_Lexique_piccolo_5F_lexique::kToken_movff, SHIFT (170)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, SHIFT (171)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, SHIFT (172)
, C_Lexique_piccolo_5F_lexique::kToken_btg, SHIFT (173)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, SHIFT (174)
, C_Lexique_piccolo_5F_lexique::kToken_call, SHIFT (175)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, SHIFT (176)
, C_Lexique_piccolo_5F_lexique::kToken_daw, SHIFT (177)
, C_Lexique_piccolo_5F_lexique::kToken_nop, SHIFT (178)
, C_Lexique_piccolo_5F_lexique::kToken_pop, SHIFT (179)
, C_Lexique_piccolo_5F_lexique::kToken_push, SHIFT (180)
, C_Lexique_piccolo_5F_lexique::kToken_reset, SHIFT (181)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, SHIFT (182)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, SHIFT (183)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, SHIFT (184)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, SHIFT (185)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, SHIFT (186)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, SHIFT (187)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, SHIFT (188)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, SHIFT (189)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, SHIFT (190)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, SHIFT (191)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, SHIFT (192)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, SHIFT (193)
, END
// State S196 (index = 7204)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (122)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (123)
, C_Lexique_piccolo_5F_lexique::kToken_switch, SHIFT (124)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_block, SHIFT (125)
, C_Lexique_piccolo_5F_lexique::kToken_do, SHIFT (126)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, SHIFT (127)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, SHIFT (128)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, SHIFT (129)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, SHIFT (130)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, SHIFT (131)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, SHIFT (132)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, SHIFT (133)
, C_Lexique_piccolo_5F_lexique::kToken_computed, SHIFT (134)
, C_Lexique_piccolo_5F_lexique::kToken_bra, SHIFT (135)
, C_Lexique_piccolo_5F_lexique::kToken_goto, SHIFT (136)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, SHIFT (137)
, C_Lexique_piccolo_5F_lexique::kToken_forever, SHIFT (138)
, C_Lexique_piccolo_5F_lexique::kToken_if, SHIFT (139)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, SHIFT (140)
, C_Lexique_piccolo_5F_lexique::kToken_bc, SHIFT (141)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, SHIFT (142)
, C_Lexique_piccolo_5F_lexique::kToken_bn, SHIFT (143)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, SHIFT (144)
, C_Lexique_piccolo_5F_lexique::kToken_bov, SHIFT (145)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, SHIFT (146)
, C_Lexique_piccolo_5F_lexique::kToken_bz, SHIFT (147)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, SHIFT (148)
, C_Lexique_piccolo_5F_lexique::kToken_jump, SHIFT (149)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, SHIFT (150)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, SHIFT (151)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, SHIFT (152)
, C_Lexique_piccolo_5F_lexique::kToken_comf, SHIFT (153)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, SHIFT (154)
, C_Lexique_piccolo_5F_lexique::kToken_movf, SHIFT (155)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, SHIFT (156)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, SHIFT (157)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, SHIFT (158)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, SHIFT (159)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, SHIFT (160)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, SHIFT (161)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, SHIFT (162)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, SHIFT (163)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, SHIFT (164)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, SHIFT (165)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, SHIFT (166)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, SHIFT (167)
, C_Lexique_piccolo_5F_lexique::kToken_negf, SHIFT (168)
, C_Lexique_piccolo_5F_lexique::kToken_setf, SHIFT (169)
, C_Lexique_piccolo_5F_lexique::kToken_movff, SHIFT (170)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, SHIFT (171)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, SHIFT (172)
, C_Lexique_piccolo_5F_lexique::kToken_btg, SHIFT (173)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, SHIFT (174)
, C_Lexique_piccolo_5F_lexique::kToken_call, SHIFT (175)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, SHIFT (176)
, C_Lexique_piccolo_5F_lexique::kToken_daw, SHIFT (177)
, C_Lexique_piccolo_5F_lexique::kToken_nop, SHIFT (178)
, C_Lexique_piccolo_5F_lexique::kToken_pop, SHIFT (179)
, C_Lexique_piccolo_5F_lexique::kToken_push, SHIFT (180)
, C_Lexique_piccolo_5F_lexique::kToken_reset, SHIFT (181)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, SHIFT (182)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, SHIFT (183)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, SHIFT (184)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, SHIFT (185)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, SHIFT (186)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, SHIFT (187)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, SHIFT (188)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, SHIFT (189)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, SHIFT (190)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, SHIFT (191)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, SHIFT (192)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, SHIFT (193)
, END
// State S197 (index = 7361)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (3)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (3)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (3)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (3)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (3)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (3)
, END
// State S198 (index = 7374)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (14)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (14)
, END
// State S199 (index = 7531)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (281)
, END
// State S200 (index = 7534)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (16)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (16)
, END
// State S201 (index = 7691)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (243)
, END
// State S202 (index = 7694)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (243)
, END
// State S203 (index = 7697)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (243)
, END
// State S204 (index = 7700)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S205 (index = 7715)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (226)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (226)
, END
// State S206 (index = 7720)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (225)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (225)
, END
// State S207 (index = 7725)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (52)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (223)
, END
// State S208 (index = 7730)
, C_Lexique_piccolo_5F_lexique::kToken_byte, REDUCE (227)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (227)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (227)
, C_Lexique_piccolo_5F_lexique::kToken__5B_, SHIFT (287)
, END
// State S209 (index = 7739)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (240)
, END
// State S210 (index = 7742)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (19)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (19)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (19)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (19)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (19)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (19)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (19)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (19)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (19)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (19)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (19)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (19)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (19)
, END
// State S211 (index = 7769)
, C_Lexique_piccolo_5F_lexique::kToken_preserved, SHIFT (289)
, C_Lexique_piccolo_5F_lexique::kToken_requires, SHIFT (290)
, C_Lexique_piccolo_5F_lexique::kToken_ensures, SHIFT (291)
, END
// State S212 (index = 7776)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (122)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (123)
, C_Lexique_piccolo_5F_lexique::kToken_switch, SHIFT (124)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_block, SHIFT (125)
, C_Lexique_piccolo_5F_lexique::kToken_do, SHIFT (126)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, SHIFT (127)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, SHIFT (128)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, SHIFT (129)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, SHIFT (130)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, SHIFT (131)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, SHIFT (132)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, SHIFT (133)
, C_Lexique_piccolo_5F_lexique::kToken_computed, SHIFT (134)
, C_Lexique_piccolo_5F_lexique::kToken_bra, SHIFT (135)
, C_Lexique_piccolo_5F_lexique::kToken_goto, SHIFT (136)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, SHIFT (137)
, C_Lexique_piccolo_5F_lexique::kToken_forever, SHIFT (138)
, C_Lexique_piccolo_5F_lexique::kToken_if, SHIFT (139)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, SHIFT (140)
, C_Lexique_piccolo_5F_lexique::kToken_bc, SHIFT (141)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, SHIFT (142)
, C_Lexique_piccolo_5F_lexique::kToken_bn, SHIFT (143)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, SHIFT (144)
, C_Lexique_piccolo_5F_lexique::kToken_bov, SHIFT (145)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, SHIFT (146)
, C_Lexique_piccolo_5F_lexique::kToken_bz, SHIFT (147)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, SHIFT (148)
, C_Lexique_piccolo_5F_lexique::kToken_jump, SHIFT (149)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, SHIFT (150)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, SHIFT (151)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, SHIFT (152)
, C_Lexique_piccolo_5F_lexique::kToken_comf, SHIFT (153)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, SHIFT (154)
, C_Lexique_piccolo_5F_lexique::kToken_movf, SHIFT (155)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, SHIFT (156)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, SHIFT (157)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, SHIFT (158)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, SHIFT (159)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, SHIFT (160)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, SHIFT (161)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, SHIFT (162)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, SHIFT (163)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, SHIFT (164)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, SHIFT (165)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, SHIFT (166)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, SHIFT (167)
, C_Lexique_piccolo_5F_lexique::kToken_negf, SHIFT (168)
, C_Lexique_piccolo_5F_lexique::kToken_setf, SHIFT (169)
, C_Lexique_piccolo_5F_lexique::kToken_movff, SHIFT (170)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, SHIFT (171)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, SHIFT (172)
, C_Lexique_piccolo_5F_lexique::kToken_btg, SHIFT (173)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, SHIFT (174)
, C_Lexique_piccolo_5F_lexique::kToken_call, SHIFT (175)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, SHIFT (176)
, C_Lexique_piccolo_5F_lexique::kToken_daw, SHIFT (177)
, C_Lexique_piccolo_5F_lexique::kToken_nop, SHIFT (178)
, C_Lexique_piccolo_5F_lexique::kToken_pop, SHIFT (179)
, C_Lexique_piccolo_5F_lexique::kToken_push, SHIFT (180)
, C_Lexique_piccolo_5F_lexique::kToken_reset, SHIFT (181)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, SHIFT (182)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, SHIFT (183)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, SHIFT (184)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, SHIFT (185)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, SHIFT (186)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, SHIFT (187)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, SHIFT (188)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, SHIFT (189)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, SHIFT (190)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, SHIFT (191)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, SHIFT (192)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, SHIFT (193)
, END
// State S213 (index = 7933)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (45)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (45)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (45)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (45)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (45)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (45)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (45)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (45)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (45)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (45)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (45)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (45)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (45)
, END
// State S214 (index = 7960)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (47)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (47)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (47)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (47)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (47)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (47)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (47)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (47)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (47)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (47)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (47)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (47)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (47)
, END
// State S215 (index = 7987)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, SHIFT (294)
, END
// State S216 (index = 7990)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken__2A_, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken__2F_, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken__25_, REDUCE (267)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (267)
, END
// State S217 (index = 8213)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (295)
, END
// State S218 (index = 8216)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (99)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (52)
, END
// State S219 (index = 8221)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (2)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (2)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (2)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (2)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (2)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (2)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (2)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (2)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (2)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (2)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (2)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (2)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (2)
, END
// State S220 (index = 8248)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, SHIFT (101)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, SHIFT (102)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (241)
, END
// State S221 (index = 8443)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, SHIFT (101)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (241)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, SHIFT (102)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (241)
, END
// State S222 (index = 8638)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken__26_, SHIFT (104)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (244)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (244)
, END
// State S223 (index = 8835)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (248)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (248)
, END
// State S224 (index = 9032)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (247)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (247)
, END
// State S225 (index = 9229)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (250)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (250)
, END
// State S226 (index = 9426)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (249)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (249)
, END
// State S227 (index = 9623)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (252)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (252)
, END
// State S228 (index = 9820)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (251)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (251)
, END
// State S229 (index = 10017)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (113)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, SHIFT (114)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, SHIFT (115)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, SHIFT (116)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (253)
, END
// State S230 (index = 10234)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (113)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, SHIFT (114)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, SHIFT (115)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, SHIFT (116)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (253)
, END
// State S231 (index = 10451)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (113)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, SHIFT (114)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, SHIFT (115)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, SHIFT (116)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (253)
, END
// State S232 (index = 10668)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (113)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (253)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, SHIFT (114)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, SHIFT (115)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, SHIFT (116)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (253)
, END
// State S233 (index = 10885)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__2A_, SHIFT (118)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__2F_, SHIFT (119)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__25_, SHIFT (120)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (258)
, END
// State S234 (index = 11108)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__2A_, SHIFT (118)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__2F_, SHIFT (119)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__25_, SHIFT (120)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (258)
, END
// State S235 (index = 11331)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__2A_, SHIFT (118)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__2F_, SHIFT (119)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, REDUCE (258)
, C_Lexique_piccolo_5F_lexique::kToken__25_, SHIFT (120)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (258)
, END
// State S236 (index = 11554)
, C_Lexique_piccolo_5F_lexique::kToken_case, SHIFT (307)
, END
// State S237 (index = 11557)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, SHIFT (308)
, END
// State S238 (index = 11560)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S239 (index = 11575)
, C_Lexique_piccolo_5F_lexique::kToken_while, SHIFT (310)
, END
// State S240 (index = 11578)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (92)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (92)
, END
// State S241 (index = 11735)
, C_Lexique_piccolo_5F_lexique::kToken__5B_, SHIFT (311)
, END
// State S242 (index = 11738)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (95)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (95)
, END
// State S243 (index = 11895)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken__2E_, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken__5B_, SHIFT (312)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (273)
, END
// State S244 (index = 12072)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (314)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (123)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (123)
, END
// State S245 (index = 12231)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (316)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (125)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (125)
, END
// State S246 (index = 12390)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (122)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (123)
, C_Lexique_piccolo_5F_lexique::kToken_switch, SHIFT (124)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_block, SHIFT (125)
, C_Lexique_piccolo_5F_lexique::kToken_do, SHIFT (126)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, SHIFT (127)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, SHIFT (128)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, SHIFT (129)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, SHIFT (130)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, SHIFT (131)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, SHIFT (132)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, SHIFT (133)
, C_Lexique_piccolo_5F_lexique::kToken_computed, SHIFT (134)
, C_Lexique_piccolo_5F_lexique::kToken_bra, SHIFT (135)
, C_Lexique_piccolo_5F_lexique::kToken_goto, SHIFT (136)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, SHIFT (137)
, C_Lexique_piccolo_5F_lexique::kToken_forever, SHIFT (138)
, C_Lexique_piccolo_5F_lexique::kToken_if, SHIFT (139)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, SHIFT (140)
, C_Lexique_piccolo_5F_lexique::kToken_bc, SHIFT (141)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, SHIFT (142)
, C_Lexique_piccolo_5F_lexique::kToken_bn, SHIFT (143)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, SHIFT (144)
, C_Lexique_piccolo_5F_lexique::kToken_bov, SHIFT (145)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, SHIFT (146)
, C_Lexique_piccolo_5F_lexique::kToken_bz, SHIFT (147)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, SHIFT (148)
, C_Lexique_piccolo_5F_lexique::kToken_jump, SHIFT (149)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, SHIFT (150)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, SHIFT (151)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, SHIFT (152)
, C_Lexique_piccolo_5F_lexique::kToken_comf, SHIFT (153)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, SHIFT (154)
, C_Lexique_piccolo_5F_lexique::kToken_movf, SHIFT (155)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, SHIFT (156)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, SHIFT (157)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, SHIFT (158)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, SHIFT (159)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, SHIFT (160)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, SHIFT (161)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, SHIFT (162)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, SHIFT (163)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, SHIFT (164)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, SHIFT (165)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, SHIFT (166)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, SHIFT (167)
, C_Lexique_piccolo_5F_lexique::kToken_negf, SHIFT (168)
, C_Lexique_piccolo_5F_lexique::kToken_setf, SHIFT (169)
, C_Lexique_piccolo_5F_lexique::kToken_movff, SHIFT (170)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, SHIFT (171)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, SHIFT (172)
, C_Lexique_piccolo_5F_lexique::kToken_btg, SHIFT (173)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, SHIFT (174)
, C_Lexique_piccolo_5F_lexique::kToken_call, SHIFT (175)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, SHIFT (176)
, C_Lexique_piccolo_5F_lexique::kToken_daw, SHIFT (177)
, C_Lexique_piccolo_5F_lexique::kToken_nop, SHIFT (178)
, C_Lexique_piccolo_5F_lexique::kToken_pop, SHIFT (179)
, C_Lexique_piccolo_5F_lexique::kToken_push, SHIFT (180)
, C_Lexique_piccolo_5F_lexique::kToken_reset, SHIFT (181)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, SHIFT (182)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, SHIFT (183)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, SHIFT (184)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, SHIFT (185)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, SHIFT (186)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, SHIFT (187)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, SHIFT (188)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, SHIFT (189)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, SHIFT (190)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, SHIFT (191)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, SHIFT (192)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, SHIFT (193)
, END
// State S247 (index = 12547)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S248 (index = 12562)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (112)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (112)
, END
// State S249 (index = 12719)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (111)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (111)
, END
// State S250 (index = 12876)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (170)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (170)
, END
// State S251 (index = 13033)
, C_Lexique_piccolo_5F_lexique::kToken_end, SHIFT (320)
, END
// State S252 (index = 13036)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (243)
, END
// State S253 (index = 13039)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (148)
, END
// State S254 (index = 13042)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (147)
, END
// State S255 (index = 13045)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (322)
, C_Lexique_piccolo_5F_lexique::kToken__21_, SHIFT (323)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (324)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (325)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (255)
, END
// State S256 (index = 13056)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (332)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, SHIFT (333)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, SHIFT (334)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, SHIFT (335)
, C_Lexique_piccolo_5F_lexique::kToken__2E_, SHIFT (336)
, END
// State S257 (index = 13067)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (122)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (123)
, C_Lexique_piccolo_5F_lexique::kToken_switch, SHIFT (124)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_block, SHIFT (125)
, C_Lexique_piccolo_5F_lexique::kToken_do, SHIFT (126)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, SHIFT (127)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, SHIFT (128)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, SHIFT (129)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, SHIFT (130)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, SHIFT (131)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, SHIFT (132)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, SHIFT (133)
, C_Lexique_piccolo_5F_lexique::kToken_computed, SHIFT (134)
, C_Lexique_piccolo_5F_lexique::kToken_bra, SHIFT (135)
, C_Lexique_piccolo_5F_lexique::kToken_goto, SHIFT (136)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, SHIFT (137)
, C_Lexique_piccolo_5F_lexique::kToken_forever, SHIFT (138)
, C_Lexique_piccolo_5F_lexique::kToken_if, SHIFT (139)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, SHIFT (140)
, C_Lexique_piccolo_5F_lexique::kToken_bc, SHIFT (141)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, SHIFT (142)
, C_Lexique_piccolo_5F_lexique::kToken_bn, SHIFT (143)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, SHIFT (144)
, C_Lexique_piccolo_5F_lexique::kToken_bov, SHIFT (145)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, SHIFT (146)
, C_Lexique_piccolo_5F_lexique::kToken_bz, SHIFT (147)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, SHIFT (148)
, C_Lexique_piccolo_5F_lexique::kToken_jump, SHIFT (149)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, SHIFT (150)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, SHIFT (151)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, SHIFT (152)
, C_Lexique_piccolo_5F_lexique::kToken_comf, SHIFT (153)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, SHIFT (154)
, C_Lexique_piccolo_5F_lexique::kToken_movf, SHIFT (155)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, SHIFT (156)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, SHIFT (157)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, SHIFT (158)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, SHIFT (159)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, SHIFT (160)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, SHIFT (161)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, SHIFT (162)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, SHIFT (163)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, SHIFT (164)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, SHIFT (165)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, SHIFT (166)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, SHIFT (167)
, C_Lexique_piccolo_5F_lexique::kToken_negf, SHIFT (168)
, C_Lexique_piccolo_5F_lexique::kToken_setf, SHIFT (169)
, C_Lexique_piccolo_5F_lexique::kToken_movff, SHIFT (170)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, SHIFT (171)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, SHIFT (172)
, C_Lexique_piccolo_5F_lexique::kToken_btg, SHIFT (173)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, SHIFT (174)
, C_Lexique_piccolo_5F_lexique::kToken_call, SHIFT (175)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, SHIFT (176)
, C_Lexique_piccolo_5F_lexique::kToken_daw, SHIFT (177)
, C_Lexique_piccolo_5F_lexique::kToken_nop, SHIFT (178)
, C_Lexique_piccolo_5F_lexique::kToken_pop, SHIFT (179)
, C_Lexique_piccolo_5F_lexique::kToken_push, SHIFT (180)
, C_Lexique_piccolo_5F_lexique::kToken_reset, SHIFT (181)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, SHIFT (182)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, SHIFT (183)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, SHIFT (184)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, SHIFT (185)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, SHIFT (186)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, SHIFT (187)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, SHIFT (188)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, SHIFT (189)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, SHIFT (190)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, SHIFT (191)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, SHIFT (192)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, SHIFT (193)
, END
// State S258 (index = 13224)
, C_Lexique_piccolo_5F_lexique::kToken_end, SHIFT (339)
, END
// State S259 (index = 13227)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, SHIFT (340)
, END
// State S260 (index = 13230)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (243)
, END
// State S261 (index = 13233)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (107)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (107)
, END
// State S262 (index = 13390)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (342)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (110)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (110)
, END
// State S263 (index = 13549)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (343)
, END
// State S264 (index = 13552)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (168)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (168)
, END
// State S265 (index = 13709)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (169)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (169)
, END
// State S266 (index = 13866)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (178)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (178)
, END
// State S267 (index = 14023)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (344)
, END
// State S268 (index = 14026)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (215)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (215)
, END
// State S269 (index = 14183)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (216)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (216)
, END
// State S270 (index = 14340)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (217)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (217)
, END
// State S271 (index = 14497)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (218)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (218)
, END
// State S272 (index = 14654)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (181)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (181)
, END
// State S273 (index = 14811)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (219)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (219)
, END
// State S274 (index = 14968)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (220)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (220)
, END
// State S275 (index = 15125)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (221)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (221)
, END
// State S276 (index = 15282)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (222)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (222)
, END
// State S277 (index = 15439)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (182)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (182)
, END
// State S278 (index = 15596)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (4)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (4)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (4)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (4)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (4)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (4)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (4)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (4)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (4)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (4)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (4)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (4)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (4)
, END
// State S279 (index = 15623)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (56)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (56)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (56)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (56)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (56)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (56)
, END
// State S280 (index = 15636)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (55)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (55)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (55)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (55)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (55)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (55)
, END
// State S281 (index = 15649)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (108)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (108)
, END
// State S282 (index = 15806)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (345)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (277)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (277)
, END
// State S283 (index = 15965)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (165)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (165)
, END
// State S284 (index = 16122)
, C_Lexique_piccolo_5F_lexique::kToken__2E_, SHIFT (348)
, END
// State S285 (index = 16125)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (179)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (179)
, END
// State S286 (index = 16282)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (224)
, END
// State S287 (index = 16285)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (349)
, END
// State S288 (index = 16288)
, C_Lexique_piccolo_5F_lexique::kToken_byte, REDUCE (229)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (229)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, SHIFT (350)
, END
// State S289 (index = 16295)
, C_Lexique_piccolo_5F_lexique::kToken__7B_, REDUCE (63)
, END
// State S290 (index = 16298)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (352)
, END
// State S291 (index = 16301)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (353)
, END
// State S292 (index = 16304)
, C_Lexique_piccolo_5F_lexique::kToken__7B_, REDUCE (62)
, END
// State S293 (index = 16307)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, SHIFT (354)
, END
// State S294 (index = 16310)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken__2A_, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken__2F_, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken__25_, REDUCE (270)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (270)
, END
// State S295 (index = 16533)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, SHIFT (355)
, END
// State S296 (index = 16536)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (53)
, END
// State S297 (index = 16539)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (242)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (242)
, END
// State S298 (index = 16730)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (243)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (243)
, END
// State S299 (index = 16921)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (245)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (245)
, END
// State S300 (index = 17116)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (255)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (255)
, END
// State S301 (index = 17325)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (254)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (254)
, END
// State S302 (index = 17534)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (256)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (256)
, END
// State S303 (index = 17743)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (257)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (257)
, END
// State S304 (index = 17952)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, REDUCE (259)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (259)
, END
// State S305 (index = 18169)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, REDUCE (261)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (261)
, END
// State S306 (index = 18386)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, REDUCE (260)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (260)
, END
// State S307 (index = 18603)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__5B_, SHIFT (356)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S308 (index = 18620)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (359)
, END
// State S309 (index = 18623)
, C_Lexique_piccolo_5F_lexique::kToken__29_, SHIFT (360)
, END
// State S310 (index = 18626)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (255)
, END
// State S311 (index = 18629)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (362)
, END
// State S312 (index = 18632)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (363)
, END
// State S313 (index = 18635)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken__2E_, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (27)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (27)
, END
// State S314 (index = 18810)
, C_Lexique_piccolo_5F_lexique::kToken__2A_, SHIFT (364)
, END
// State S315 (index = 18813)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (96)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (96)
, END
// State S316 (index = 18970)
, C_Lexique_piccolo_5F_lexique::kToken__2A_, SHIFT (365)
, END
// State S317 (index = 18973)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (97)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (97)
, END
// State S318 (index = 19130)
, C_Lexique_piccolo_5F_lexique::kToken_end, SHIFT (366)
, END
// State S319 (index = 19133)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, SHIFT (367)
, END
// State S320 (index = 19136)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (101)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (101)
, END
// State S321 (index = 19293)
, C_Lexique_piccolo_5F_lexique::kToken__2E_, SHIFT (368)
, END
// State S322 (index = 19296)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken__2E_, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (72)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (72)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (72)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken__5B_, SHIFT (312)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (273)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (273)
, END
// State S323 (index = 19479)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (322)
, C_Lexique_piccolo_5F_lexique::kToken__21_, SHIFT (323)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (324)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (325)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (255)
, END
// State S324 (index = 19490)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (73)
, END
// State S325 (index = 19493)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (74)
, END
// State S326 (index = 19496)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (370)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, SHIFT (371)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, SHIFT (372)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, SHIFT (373)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, SHIFT (374)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, SHIFT (375)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, SHIFT (376)
, C_Lexique_piccolo_5F_lexique::kToken__2E_, SHIFT (377)
, END
// State S327 (index = 19513)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (87)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (87)
, C_Lexique_piccolo_5F_lexique::kToken__26_, SHIFT (379)
, END
// State S328 (index = 19520)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (7)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (7)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (7)
, END
// State S329 (index = 19527)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, SHIFT (381)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (85)
, END
// State S330 (index = 19532)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (8)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (8)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (8)
, END
// State S331 (index = 19539)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (243)
, END
// State S332 (index = 19542)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (142)
, END
// State S333 (index = 19545)
, C_Lexique_piccolo_5F_lexique::kToken_w, SHIFT (384)
, END
// State S334 (index = 19548)
, C_Lexique_piccolo_5F_lexique::kToken_w, SHIFT (385)
, END
// State S335 (index = 19551)
, C_Lexique_piccolo_5F_lexique::kToken_w, SHIFT (386)
, END
// State S336 (index = 19554)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (387)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (388)
, END
// State S337 (index = 19559)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, SHIFT (390)
, END
// State S338 (index = 19562)
, C_Lexique_piccolo_5F_lexique::kToken_else, SHIFT (391)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (161)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, SHIFT (392)
, END
// State S339 (index = 19569)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (105)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (105)
, END
// State S340 (index = 19726)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (122)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (123)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, SHIFT (137)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, SHIFT (150)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, SHIFT (151)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, SHIFT (152)
, C_Lexique_piccolo_5F_lexique::kToken_comf, SHIFT (153)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, SHIFT (154)
, C_Lexique_piccolo_5F_lexique::kToken_movf, SHIFT (155)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, SHIFT (156)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, SHIFT (157)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, SHIFT (158)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, SHIFT (159)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, SHIFT (160)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, SHIFT (161)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, SHIFT (162)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, SHIFT (163)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, SHIFT (164)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, SHIFT (165)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, SHIFT (166)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, SHIFT (167)
, C_Lexique_piccolo_5F_lexique::kToken_negf, SHIFT (168)
, C_Lexique_piccolo_5F_lexique::kToken_setf, SHIFT (169)
, C_Lexique_piccolo_5F_lexique::kToken_movff, SHIFT (170)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, SHIFT (171)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, SHIFT (172)
, C_Lexique_piccolo_5F_lexique::kToken_btg, SHIFT (173)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, SHIFT (174)
, C_Lexique_piccolo_5F_lexique::kToken_call, SHIFT (175)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, SHIFT (176)
, C_Lexique_piccolo_5F_lexique::kToken_daw, SHIFT (177)
, C_Lexique_piccolo_5F_lexique::kToken_nop, SHIFT (178)
, C_Lexique_piccolo_5F_lexique::kToken_pop, SHIFT (179)
, C_Lexique_piccolo_5F_lexique::kToken_push, SHIFT (180)
, C_Lexique_piccolo_5F_lexique::kToken_reset, SHIFT (181)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, SHIFT (182)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, SHIFT (183)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, SHIFT (184)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, SHIFT (185)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, SHIFT (186)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, SHIFT (187)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, SHIFT (188)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, SHIFT (189)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, SHIFT (190)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, SHIFT (191)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, SHIFT (192)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, SHIFT (193)
, END
// State S341 (index = 19821)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (149)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (395)
, END
// State S342 (index = 19826)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (109)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (109)
, END
// State S343 (index = 19983)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (243)
, END
// State S344 (index = 19986)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S345 (index = 20001)
, C_Lexique_piccolo_5F_lexique::kToken_w, SHIFT (399)
, END
// State S346 (index = 20004)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (164)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (164)
, END
// State S347 (index = 20161)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (30)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (30)
, END
// State S348 (index = 20318)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (387)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (388)
, END
// State S349 (index = 20323)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, SHIFT (401)
, END
// State S350 (index = 20326)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (402)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (403)
, END
// State S351 (index = 20331)
, C_Lexique_piccolo_5F_lexique::kToken_byte, REDUCE (18)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (18)
, END
// State S352 (index = 20336)
, C_Lexique_piccolo_5F_lexique::kToken__7B_, REDUCE (66)
, C_Lexique_piccolo_5F_lexique::kToken_ensures, SHIFT (405)
, END
// State S353 (index = 20341)
, C_Lexique_piccolo_5F_lexique::kToken__7B_, REDUCE (65)
, END
// State S354 (index = 20344)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (5)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (5)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (5)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (5)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (5)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (5)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (5)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (5)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (5)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (5)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (5)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (5)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (5)
, END
// State S355 (index = 20371)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S356 (index = 20386)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S357 (index = 20401)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (117)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (117)
, END
// State S358 (index = 20406)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (409)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (115)
, END
// State S359 (index = 20411)
, C_Lexique_piccolo_5F_lexique::kToken__7B_, SHIFT (411)
, END
// State S360 (index = 20414)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (122)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (123)
, C_Lexique_piccolo_5F_lexique::kToken_switch, SHIFT (124)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_block, SHIFT (125)
, C_Lexique_piccolo_5F_lexique::kToken_do, SHIFT (126)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, SHIFT (127)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, SHIFT (128)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, SHIFT (129)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, SHIFT (130)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, SHIFT (131)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, SHIFT (132)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, SHIFT (133)
, C_Lexique_piccolo_5F_lexique::kToken_computed, SHIFT (134)
, C_Lexique_piccolo_5F_lexique::kToken_bra, SHIFT (135)
, C_Lexique_piccolo_5F_lexique::kToken_goto, SHIFT (136)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, SHIFT (137)
, C_Lexique_piccolo_5F_lexique::kToken_forever, SHIFT (138)
, C_Lexique_piccolo_5F_lexique::kToken_if, SHIFT (139)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, SHIFT (140)
, C_Lexique_piccolo_5F_lexique::kToken_bc, SHIFT (141)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, SHIFT (142)
, C_Lexique_piccolo_5F_lexique::kToken_bn, SHIFT (143)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, SHIFT (144)
, C_Lexique_piccolo_5F_lexique::kToken_bov, SHIFT (145)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, SHIFT (146)
, C_Lexique_piccolo_5F_lexique::kToken_bz, SHIFT (147)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, SHIFT (148)
, C_Lexique_piccolo_5F_lexique::kToken_jump, SHIFT (149)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, SHIFT (150)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, SHIFT (151)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, SHIFT (152)
, C_Lexique_piccolo_5F_lexique::kToken_comf, SHIFT (153)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, SHIFT (154)
, C_Lexique_piccolo_5F_lexique::kToken_movf, SHIFT (155)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, SHIFT (156)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, SHIFT (157)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, SHIFT (158)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, SHIFT (159)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, SHIFT (160)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, SHIFT (161)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, SHIFT (162)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, SHIFT (163)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, SHIFT (164)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, SHIFT (165)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, SHIFT (166)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, SHIFT (167)
, C_Lexique_piccolo_5F_lexique::kToken_negf, SHIFT (168)
, C_Lexique_piccolo_5F_lexique::kToken_setf, SHIFT (169)
, C_Lexique_piccolo_5F_lexique::kToken_movff, SHIFT (170)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, SHIFT (171)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, SHIFT (172)
, C_Lexique_piccolo_5F_lexique::kToken_btg, SHIFT (173)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, SHIFT (174)
, C_Lexique_piccolo_5F_lexique::kToken_call, SHIFT (175)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, SHIFT (176)
, C_Lexique_piccolo_5F_lexique::kToken_daw, SHIFT (177)
, C_Lexique_piccolo_5F_lexique::kToken_nop, SHIFT (178)
, C_Lexique_piccolo_5F_lexique::kToken_pop, SHIFT (179)
, C_Lexique_piccolo_5F_lexique::kToken_push, SHIFT (180)
, C_Lexique_piccolo_5F_lexique::kToken_reset, SHIFT (181)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, SHIFT (182)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, SHIFT (183)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, SHIFT (184)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, SHIFT (185)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, SHIFT (186)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, SHIFT (187)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, SHIFT (188)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, SHIFT (189)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, SHIFT (190)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, SHIFT (191)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, SHIFT (192)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, SHIFT (193)
, END
// State S361 (index = 20571)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (122)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (123)
, C_Lexique_piccolo_5F_lexique::kToken_switch, SHIFT (124)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_block, SHIFT (125)
, C_Lexique_piccolo_5F_lexique::kToken_do, SHIFT (126)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, SHIFT (127)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, SHIFT (128)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, SHIFT (129)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, SHIFT (130)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, SHIFT (131)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, SHIFT (132)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, SHIFT (133)
, C_Lexique_piccolo_5F_lexique::kToken_computed, SHIFT (134)
, C_Lexique_piccolo_5F_lexique::kToken_bra, SHIFT (135)
, C_Lexique_piccolo_5F_lexique::kToken_goto, SHIFT (136)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, SHIFT (137)
, C_Lexique_piccolo_5F_lexique::kToken_forever, SHIFT (138)
, C_Lexique_piccolo_5F_lexique::kToken_if, SHIFT (139)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, SHIFT (140)
, C_Lexique_piccolo_5F_lexique::kToken_bc, SHIFT (141)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, SHIFT (142)
, C_Lexique_piccolo_5F_lexique::kToken_bn, SHIFT (143)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, SHIFT (144)
, C_Lexique_piccolo_5F_lexique::kToken_bov, SHIFT (145)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, SHIFT (146)
, C_Lexique_piccolo_5F_lexique::kToken_bz, SHIFT (147)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, SHIFT (148)
, C_Lexique_piccolo_5F_lexique::kToken_jump, SHIFT (149)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, SHIFT (150)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, SHIFT (151)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, SHIFT (152)
, C_Lexique_piccolo_5F_lexique::kToken_comf, SHIFT (153)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, SHIFT (154)
, C_Lexique_piccolo_5F_lexique::kToken_movf, SHIFT (155)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, SHIFT (156)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, SHIFT (157)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, SHIFT (158)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, SHIFT (159)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, SHIFT (160)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, SHIFT (161)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, SHIFT (162)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, SHIFT (163)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, SHIFT (164)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, SHIFT (165)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, SHIFT (166)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, SHIFT (167)
, C_Lexique_piccolo_5F_lexique::kToken_negf, SHIFT (168)
, C_Lexique_piccolo_5F_lexique::kToken_setf, SHIFT (169)
, C_Lexique_piccolo_5F_lexique::kToken_movff, SHIFT (170)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, SHIFT (171)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, SHIFT (172)
, C_Lexique_piccolo_5F_lexique::kToken_btg, SHIFT (173)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, SHIFT (174)
, C_Lexique_piccolo_5F_lexique::kToken_call, SHIFT (175)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, SHIFT (176)
, C_Lexique_piccolo_5F_lexique::kToken_daw, SHIFT (177)
, C_Lexique_piccolo_5F_lexique::kToken_nop, SHIFT (178)
, C_Lexique_piccolo_5F_lexique::kToken_pop, SHIFT (179)
, C_Lexique_piccolo_5F_lexique::kToken_push, SHIFT (180)
, C_Lexique_piccolo_5F_lexique::kToken_reset, SHIFT (181)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, SHIFT (182)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, SHIFT (183)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, SHIFT (184)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, SHIFT (185)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, SHIFT (186)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, SHIFT (187)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, SHIFT (188)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, SHIFT (189)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, SHIFT (190)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, SHIFT (191)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, SHIFT (192)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, SHIFT (193)
, END
// State S362 (index = 20728)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, SHIFT (414)
, END
// State S363 (index = 20731)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, SHIFT (415)
, END
// State S364 (index = 20734)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (124)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (124)
, END
// State S365 (index = 20891)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (126)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (126)
, END
// State S366 (index = 21048)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (99)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (99)
, END
// State S367 (index = 21205)
, C_Lexique_piccolo_5F_lexique::kToken_retlw, SHIFT (416)
, C_Lexique_piccolo_5F_lexique::kToken_bra, SHIFT (417)
, C_Lexique_piccolo_5F_lexique::kToken_goto, SHIFT (418)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, SHIFT (419)
, END
// State S368 (index = 21214)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (387)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (388)
, END
// State S369 (index = 21219)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (6)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (6)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (6)
, END
// State S370 (index = 21226)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (71)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (71)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (71)
, END
// State S371 (index = 21233)
, C_Lexique_piccolo_5F_lexique::kToken_w, SHIFT (422)
, END
// State S372 (index = 21236)
, C_Lexique_piccolo_5F_lexique::kToken_w, SHIFT (423)
, END
// State S373 (index = 21239)
, C_Lexique_piccolo_5F_lexique::kToken_w, SHIFT (424)
, END
// State S374 (index = 21242)
, C_Lexique_piccolo_5F_lexique::kToken_w, SHIFT (425)
, END
// State S375 (index = 21245)
, C_Lexique_piccolo_5F_lexique::kToken_w, SHIFT (426)
, END
// State S376 (index = 21248)
, C_Lexique_piccolo_5F_lexique::kToken_w, SHIFT (427)
, END
// State S377 (index = 21251)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (387)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (388)
, END
// State S378 (index = 21256)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (69)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (69)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (69)
, END
// State S379 (index = 21263)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (322)
, C_Lexique_piccolo_5F_lexique::kToken__21_, SHIFT (323)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (324)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (325)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (255)
, END
// State S380 (index = 21274)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (10)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (10)
, END
// State S381 (index = 21279)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (322)
, C_Lexique_piccolo_5F_lexique::kToken__21_, SHIFT (323)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (324)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (325)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (255)
, END
// State S382 (index = 21290)
, C_Lexique_piccolo_5F_lexique::kToken__29_, SHIFT (431)
, END
// State S383 (index = 21293)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (75)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (432)
, END
// State S384 (index = 21298)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (139)
, END
// State S385 (index = 21301)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (140)
, END
// State S386 (index = 21304)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (141)
, END
// State S387 (index = 21307)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken__5B_, SHIFT (434)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (275)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (275)
, END
// State S388 (index = 21476)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (29)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (29)
, END
// State S389 (index = 21643)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (436)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (145)
, END
// State S390 (index = 21648)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (122)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (123)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, SHIFT (137)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, SHIFT (150)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, SHIFT (151)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, SHIFT (152)
, C_Lexique_piccolo_5F_lexique::kToken_comf, SHIFT (153)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, SHIFT (154)
, C_Lexique_piccolo_5F_lexique::kToken_movf, SHIFT (155)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, SHIFT (156)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, SHIFT (157)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, SHIFT (158)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, SHIFT (159)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, SHIFT (160)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, SHIFT (161)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, SHIFT (162)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, SHIFT (163)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, SHIFT (164)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, SHIFT (165)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, SHIFT (166)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, SHIFT (167)
, C_Lexique_piccolo_5F_lexique::kToken_negf, SHIFT (168)
, C_Lexique_piccolo_5F_lexique::kToken_setf, SHIFT (169)
, C_Lexique_piccolo_5F_lexique::kToken_movff, SHIFT (170)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, SHIFT (171)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, SHIFT (172)
, C_Lexique_piccolo_5F_lexique::kToken_btg, SHIFT (173)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, SHIFT (174)
, C_Lexique_piccolo_5F_lexique::kToken_call, SHIFT (175)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, SHIFT (176)
, C_Lexique_piccolo_5F_lexique::kToken_daw, SHIFT (177)
, C_Lexique_piccolo_5F_lexique::kToken_nop, SHIFT (178)
, C_Lexique_piccolo_5F_lexique::kToken_pop, SHIFT (179)
, C_Lexique_piccolo_5F_lexique::kToken_push, SHIFT (180)
, C_Lexique_piccolo_5F_lexique::kToken_reset, SHIFT (181)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, SHIFT (182)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, SHIFT (183)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, SHIFT (184)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, SHIFT (185)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, SHIFT (186)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, SHIFT (187)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, SHIFT (188)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, SHIFT (189)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, SHIFT (190)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, SHIFT (191)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, SHIFT (192)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, SHIFT (193)
, END
// State S391 (index = 21743)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (122)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (123)
, C_Lexique_piccolo_5F_lexique::kToken_switch, SHIFT (124)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_block, SHIFT (125)
, C_Lexique_piccolo_5F_lexique::kToken_do, SHIFT (126)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, SHIFT (127)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, SHIFT (128)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, SHIFT (129)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, SHIFT (130)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, SHIFT (131)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, SHIFT (132)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, SHIFT (133)
, C_Lexique_piccolo_5F_lexique::kToken_computed, SHIFT (134)
, C_Lexique_piccolo_5F_lexique::kToken_bra, SHIFT (135)
, C_Lexique_piccolo_5F_lexique::kToken_goto, SHIFT (136)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, SHIFT (137)
, C_Lexique_piccolo_5F_lexique::kToken_forever, SHIFT (138)
, C_Lexique_piccolo_5F_lexique::kToken_if, SHIFT (139)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, SHIFT (140)
, C_Lexique_piccolo_5F_lexique::kToken_bc, SHIFT (141)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, SHIFT (142)
, C_Lexique_piccolo_5F_lexique::kToken_bn, SHIFT (143)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, SHIFT (144)
, C_Lexique_piccolo_5F_lexique::kToken_bov, SHIFT (145)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, SHIFT (146)
, C_Lexique_piccolo_5F_lexique::kToken_bz, SHIFT (147)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, SHIFT (148)
, C_Lexique_piccolo_5F_lexique::kToken_jump, SHIFT (149)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, SHIFT (150)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, SHIFT (151)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, SHIFT (152)
, C_Lexique_piccolo_5F_lexique::kToken_comf, SHIFT (153)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, SHIFT (154)
, C_Lexique_piccolo_5F_lexique::kToken_movf, SHIFT (155)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, SHIFT (156)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, SHIFT (157)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, SHIFT (158)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, SHIFT (159)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, SHIFT (160)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, SHIFT (161)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, SHIFT (162)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, SHIFT (163)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, SHIFT (164)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, SHIFT (165)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, SHIFT (166)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, SHIFT (167)
, C_Lexique_piccolo_5F_lexique::kToken_negf, SHIFT (168)
, C_Lexique_piccolo_5F_lexique::kToken_setf, SHIFT (169)
, C_Lexique_piccolo_5F_lexique::kToken_movff, SHIFT (170)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, SHIFT (171)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, SHIFT (172)
, C_Lexique_piccolo_5F_lexique::kToken_btg, SHIFT (173)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, SHIFT (174)
, C_Lexique_piccolo_5F_lexique::kToken_call, SHIFT (175)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, SHIFT (176)
, C_Lexique_piccolo_5F_lexique::kToken_daw, SHIFT (177)
, C_Lexique_piccolo_5F_lexique::kToken_nop, SHIFT (178)
, C_Lexique_piccolo_5F_lexique::kToken_pop, SHIFT (179)
, C_Lexique_piccolo_5F_lexique::kToken_push, SHIFT (180)
, C_Lexique_piccolo_5F_lexique::kToken_reset, SHIFT (181)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, SHIFT (182)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, SHIFT (183)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, SHIFT (184)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, SHIFT (185)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, SHIFT (186)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, SHIFT (187)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, SHIFT (188)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, SHIFT (189)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, SHIFT (190)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, SHIFT (191)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, SHIFT (192)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, SHIFT (193)
, END
// State S392 (index = 21900)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (255)
, END
// State S393 (index = 21903)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (15)
, END
// State S394 (index = 21906)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (103)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (103)
, END
// State S395 (index = 22063)
, C_Lexique_piccolo_5F_lexique::kToken_w, SHIFT (441)
, END
// State S396 (index = 22066)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (442)
, END
// State S397 (index = 22069)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (166)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (166)
, END
// State S398 (index = 22226)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (180)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (180)
, END
// State S399 (index = 22383)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (278)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (278)
, END
// State S400 (index = 22540)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (167)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (167)
, END
// State S401 (index = 22697)
, C_Lexique_piccolo_5F_lexique::kToken_byte, REDUCE (228)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (228)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (228)
, END
// State S402 (index = 22704)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (237)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (237)
, C_Lexique_piccolo_5F_lexique::kToken__5B_, SHIFT (443)
, C_Lexique_piccolo_5F_lexique::kToken__2F_, REDUCE (237)
, END
// State S403 (index = 22713)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (234)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (234)
, END
// State S404 (index = 22718)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (445)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (231)
, END
// State S405 (index = 22723)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (447)
, END
// State S406 (index = 22726)
, C_Lexique_piccolo_5F_lexique::kToken__7B_, REDUCE (64)
, END
// State S407 (index = 22729)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (448)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (271)
, END
// State S408 (index = 22734)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (450)
, END
// State S409 (index = 22737)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__5B_, SHIFT (356)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S410 (index = 22754)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, SHIFT (452)
, END
// State S411 (index = 22757)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (122)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (123)
, C_Lexique_piccolo_5F_lexique::kToken_switch, SHIFT (124)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_block, SHIFT (125)
, C_Lexique_piccolo_5F_lexique::kToken_do, SHIFT (126)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, SHIFT (127)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, SHIFT (128)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, SHIFT (129)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, SHIFT (130)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, SHIFT (131)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, SHIFT (132)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, SHIFT (133)
, C_Lexique_piccolo_5F_lexique::kToken_computed, SHIFT (134)
, C_Lexique_piccolo_5F_lexique::kToken_bra, SHIFT (135)
, C_Lexique_piccolo_5F_lexique::kToken_goto, SHIFT (136)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, SHIFT (137)
, C_Lexique_piccolo_5F_lexique::kToken_forever, SHIFT (138)
, C_Lexique_piccolo_5F_lexique::kToken_if, SHIFT (139)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, SHIFT (140)
, C_Lexique_piccolo_5F_lexique::kToken_bc, SHIFT (141)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, SHIFT (142)
, C_Lexique_piccolo_5F_lexique::kToken_bn, SHIFT (143)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, SHIFT (144)
, C_Lexique_piccolo_5F_lexique::kToken_bov, SHIFT (145)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, SHIFT (146)
, C_Lexique_piccolo_5F_lexique::kToken_bz, SHIFT (147)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, SHIFT (148)
, C_Lexique_piccolo_5F_lexique::kToken_jump, SHIFT (149)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, SHIFT (150)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, SHIFT (151)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, SHIFT (152)
, C_Lexique_piccolo_5F_lexique::kToken_comf, SHIFT (153)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, SHIFT (154)
, C_Lexique_piccolo_5F_lexique::kToken_movf, SHIFT (155)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, SHIFT (156)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, SHIFT (157)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, SHIFT (158)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, SHIFT (159)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, SHIFT (160)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, SHIFT (161)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, SHIFT (162)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, SHIFT (163)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, SHIFT (164)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, SHIFT (165)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, SHIFT (166)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, SHIFT (167)
, C_Lexique_piccolo_5F_lexique::kToken_negf, SHIFT (168)
, C_Lexique_piccolo_5F_lexique::kToken_setf, SHIFT (169)
, C_Lexique_piccolo_5F_lexique::kToken_movff, SHIFT (170)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, SHIFT (171)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, SHIFT (172)
, C_Lexique_piccolo_5F_lexique::kToken_btg, SHIFT (173)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, SHIFT (174)
, C_Lexique_piccolo_5F_lexique::kToken_call, SHIFT (175)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, SHIFT (176)
, C_Lexique_piccolo_5F_lexique::kToken_daw, SHIFT (177)
, C_Lexique_piccolo_5F_lexique::kToken_nop, SHIFT (178)
, C_Lexique_piccolo_5F_lexique::kToken_pop, SHIFT (179)
, C_Lexique_piccolo_5F_lexique::kToken_push, SHIFT (180)
, C_Lexique_piccolo_5F_lexique::kToken_reset, SHIFT (181)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, SHIFT (182)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, SHIFT (183)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, SHIFT (184)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, SHIFT (185)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, SHIFT (186)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, SHIFT (187)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, SHIFT (188)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, SHIFT (189)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, SHIFT (190)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, SHIFT (191)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, SHIFT (192)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, SHIFT (193)
, END
// State S412 (index = 22914)
, C_Lexique_piccolo_5F_lexique::kToken_end, SHIFT (454)
, END
// State S413 (index = 22917)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (151)
, C_Lexique_piccolo_5F_lexique::kToken_while, SHIFT (455)
, END
// State S414 (index = 22922)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (94)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (94)
, END
// State S415 (index = 23079)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken__2E_, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (274)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (274)
, END
// State S416 (index = 23254)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S417 (index = 23269)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (458)
, END
// State S418 (index = 23272)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (459)
, END
// State S419 (index = 23275)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (460)
, END
// State S420 (index = 23278)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (100)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (100)
, END
// State S421 (index = 23435)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (143)
, END
// State S422 (index = 23438)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (77)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (77)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (77)
, END
// State S423 (index = 23445)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (78)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (78)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (78)
, END
// State S424 (index = 23452)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (79)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (79)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (79)
, END
// State S425 (index = 23459)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (80)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (80)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (80)
, END
// State S426 (index = 23466)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (81)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (81)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (81)
, END
// State S427 (index = 23473)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (82)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (82)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (82)
, END
// State S428 (index = 23480)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (461)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (83)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (83)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (83)
, END
// State S429 (index = 23489)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (87)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (87)
, C_Lexique_piccolo_5F_lexique::kToken__26_, SHIFT (379)
, END
// State S430 (index = 23496)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, SHIFT (381)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (85)
, END
// State S431 (index = 23501)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken__3F_, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (9)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (9)
, END
// State S432 (index = 23662)
, C_Lexique_piccolo_5F_lexique::kToken_w, SHIFT (465)
, END
// State S433 (index = 23665)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (466)
, END
// State S434 (index = 23668)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (467)
, END
// State S435 (index = 23671)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (28)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (28)
, END
// State S436 (index = 23838)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (146)
, END
// State S437 (index = 23841)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (144)
, END
// State S438 (index = 23844)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (102)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (102)
, END
// State S439 (index = 24001)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (163)
, END
// State S440 (index = 24004)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (162)
, END
// State S441 (index = 24007)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (150)
, END
// State S442 (index = 24010)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, SHIFT (468)
, END
// State S443 (index = 24013)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (469)
, END
// State S444 (index = 24016)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (235)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (235)
, C_Lexique_piccolo_5F_lexique::kToken__2F_, SHIFT (470)
, END
// State S445 (index = 24023)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (402)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (403)
, END
// State S446 (index = 24028)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, SHIFT (473)
, END
// State S447 (index = 24031)
, C_Lexique_piccolo_5F_lexique::kToken__7B_, REDUCE (67)
, END
// State S448 (index = 24034)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (474)
, END
// State S449 (index = 24037)
, C_Lexique_piccolo_5F_lexique::kToken__29_, SHIFT (475)
, END
// State S450 (index = 24040)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S451 (index = 24055)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (409)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (115)
, END
// State S452 (index = 24060)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (122)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (123)
, C_Lexique_piccolo_5F_lexique::kToken_switch, SHIFT (124)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_block, SHIFT (125)
, C_Lexique_piccolo_5F_lexique::kToken_do, SHIFT (126)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, SHIFT (127)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, SHIFT (128)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, SHIFT (129)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, SHIFT (130)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, SHIFT (131)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, SHIFT (132)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, SHIFT (133)
, C_Lexique_piccolo_5F_lexique::kToken_computed, SHIFT (134)
, C_Lexique_piccolo_5F_lexique::kToken_bra, SHIFT (135)
, C_Lexique_piccolo_5F_lexique::kToken_goto, SHIFT (136)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, SHIFT (137)
, C_Lexique_piccolo_5F_lexique::kToken_forever, SHIFT (138)
, C_Lexique_piccolo_5F_lexique::kToken_if, SHIFT (139)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, SHIFT (140)
, C_Lexique_piccolo_5F_lexique::kToken_bc, SHIFT (141)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, SHIFT (142)
, C_Lexique_piccolo_5F_lexique::kToken_bn, SHIFT (143)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, SHIFT (144)
, C_Lexique_piccolo_5F_lexique::kToken_bov, SHIFT (145)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, SHIFT (146)
, C_Lexique_piccolo_5F_lexique::kToken_bz, SHIFT (147)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, SHIFT (148)
, C_Lexique_piccolo_5F_lexique::kToken_jump, SHIFT (149)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, SHIFT (150)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, SHIFT (151)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, SHIFT (152)
, C_Lexique_piccolo_5F_lexique::kToken_comf, SHIFT (153)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, SHIFT (154)
, C_Lexique_piccolo_5F_lexique::kToken_movf, SHIFT (155)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, SHIFT (156)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, SHIFT (157)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, SHIFT (158)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, SHIFT (159)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, SHIFT (160)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, SHIFT (161)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, SHIFT (162)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, SHIFT (163)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, SHIFT (164)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, SHIFT (165)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, SHIFT (166)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, SHIFT (167)
, C_Lexique_piccolo_5F_lexique::kToken_negf, SHIFT (168)
, C_Lexique_piccolo_5F_lexique::kToken_setf, SHIFT (169)
, C_Lexique_piccolo_5F_lexique::kToken_movff, SHIFT (170)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, SHIFT (171)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, SHIFT (172)
, C_Lexique_piccolo_5F_lexique::kToken_btg, SHIFT (173)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, SHIFT (174)
, C_Lexique_piccolo_5F_lexique::kToken_call, SHIFT (175)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, SHIFT (176)
, C_Lexique_piccolo_5F_lexique::kToken_daw, SHIFT (177)
, C_Lexique_piccolo_5F_lexique::kToken_nop, SHIFT (178)
, C_Lexique_piccolo_5F_lexique::kToken_pop, SHIFT (179)
, C_Lexique_piccolo_5F_lexique::kToken_push, SHIFT (180)
, C_Lexique_piccolo_5F_lexique::kToken_reset, SHIFT (181)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, SHIFT (182)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, SHIFT (183)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, SHIFT (184)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, SHIFT (185)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, SHIFT (186)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, SHIFT (187)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, SHIFT (188)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, SHIFT (189)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, SHIFT (190)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, SHIFT (191)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, SHIFT (192)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, SHIFT (193)
, END
// State S453 (index = 24217)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, SHIFT (479)
, END
// State S454 (index = 24220)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (91)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (91)
, END
// State S455 (index = 24377)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (255)
, END
// State S456 (index = 24380)
, C_Lexique_piccolo_5F_lexique::kToken_end, SHIFT (481)
, END
// State S457 (index = 24383)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (482)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (131)
, END
// State S458 (index = 24542)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (484)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (133)
, END
// State S459 (index = 24701)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (486)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (135)
, END
// State S460 (index = 24860)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (488)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (137)
, END
// State S461 (index = 25019)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (84)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (84)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (84)
, END
// State S462 (index = 25026)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (70)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (70)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (70)
, END
// State S463 (index = 25033)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (88)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (88)
, END
// State S464 (index = 25038)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (86)
, END
// State S465 (index = 25041)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (76)
, END
// State S466 (index = 25044)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (68)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (68)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (68)
, END
// State S467 (index = 25051)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, SHIFT (490)
, END
// State S468 (index = 25054)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (122)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (123)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, SHIFT (137)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, SHIFT (150)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, SHIFT (151)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, SHIFT (152)
, C_Lexique_piccolo_5F_lexique::kToken_comf, SHIFT (153)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, SHIFT (154)
, C_Lexique_piccolo_5F_lexique::kToken_movf, SHIFT (155)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, SHIFT (156)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, SHIFT (157)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, SHIFT (158)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, SHIFT (159)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, SHIFT (160)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, SHIFT (161)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, SHIFT (162)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, SHIFT (163)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, SHIFT (164)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, SHIFT (165)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, SHIFT (166)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, SHIFT (167)
, C_Lexique_piccolo_5F_lexique::kToken_negf, SHIFT (168)
, C_Lexique_piccolo_5F_lexique::kToken_setf, SHIFT (169)
, C_Lexique_piccolo_5F_lexique::kToken_movff, SHIFT (170)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, SHIFT (171)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, SHIFT (172)
, C_Lexique_piccolo_5F_lexique::kToken_btg, SHIFT (173)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, SHIFT (174)
, C_Lexique_piccolo_5F_lexique::kToken_call, SHIFT (175)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, SHIFT (176)
, C_Lexique_piccolo_5F_lexique::kToken_daw, SHIFT (177)
, C_Lexique_piccolo_5F_lexique::kToken_nop, SHIFT (178)
, C_Lexique_piccolo_5F_lexique::kToken_pop, SHIFT (179)
, C_Lexique_piccolo_5F_lexique::kToken_push, SHIFT (180)
, C_Lexique_piccolo_5F_lexique::kToken_reset, SHIFT (181)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, SHIFT (182)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, SHIFT (183)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, SHIFT (184)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, SHIFT (185)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, SHIFT (186)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, SHIFT (187)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, SHIFT (188)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, SHIFT (189)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, SHIFT (190)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, SHIFT (191)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, SHIFT (192)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, SHIFT (193)
, END
// State S469 (index = 25149)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, SHIFT (492)
, END
// State S470 (index = 25152)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (493)
, END
// State S471 (index = 25155)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (233)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (233)
, END
// State S472 (index = 25160)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (445)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (231)
, END
// State S473 (index = 25165)
, C_Lexique_piccolo_5F_lexique::kToken_byte, REDUCE (230)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (230)
, END
// State S474 (index = 25170)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, SHIFT (495)
, END
// State S475 (index = 25173)
, C_Lexique_piccolo_5F_lexique::kToken_mark, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_unused, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_routine, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_inline, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_include, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_checkpic, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_data, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_interrupt, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_noreturn, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken__21__3D_, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken__3D__3D_, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3D_, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3D_, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken__3C_, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken__2A_, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_configuration, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken__2F_, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_ram, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_const, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken__5E_, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken__2B_, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken__3C__3C_, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken__3E__3E_, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken__25_, REDUCE (268)
, C_Lexique_piccolo_5F_lexique::kToken_, REDUCE (268)
, END
// State S476 (index = 25396)
, C_Lexique_piccolo_5F_lexique::kToken__5D_, SHIFT (496)
, END
// State S477 (index = 25399)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (116)
, END
// State S478 (index = 25402)
, C_Lexique_piccolo_5F_lexique::kToken_case, SHIFT (497)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (113)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (113)
, END
// State S479 (index = 25409)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (499)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (255)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (500)
, END
// State S480 (index = 25416)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (122)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (123)
, C_Lexique_piccolo_5F_lexique::kToken_switch, SHIFT (124)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_block, SHIFT (125)
, C_Lexique_piccolo_5F_lexique::kToken_do, SHIFT (126)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, SHIFT (127)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, SHIFT (128)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, SHIFT (129)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, SHIFT (130)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, SHIFT (131)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, SHIFT (132)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, SHIFT (133)
, C_Lexique_piccolo_5F_lexique::kToken_computed, SHIFT (134)
, C_Lexique_piccolo_5F_lexique::kToken_bra, SHIFT (135)
, C_Lexique_piccolo_5F_lexique::kToken_goto, SHIFT (136)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, SHIFT (137)
, C_Lexique_piccolo_5F_lexique::kToken_forever, SHIFT (138)
, C_Lexique_piccolo_5F_lexique::kToken_if, SHIFT (139)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, SHIFT (140)
, C_Lexique_piccolo_5F_lexique::kToken_bc, SHIFT (141)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, SHIFT (142)
, C_Lexique_piccolo_5F_lexique::kToken_bn, SHIFT (143)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, SHIFT (144)
, C_Lexique_piccolo_5F_lexique::kToken_bov, SHIFT (145)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, SHIFT (146)
, C_Lexique_piccolo_5F_lexique::kToken_bz, SHIFT (147)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, SHIFT (148)
, C_Lexique_piccolo_5F_lexique::kToken_jump, SHIFT (149)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, SHIFT (150)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, SHIFT (151)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, SHIFT (152)
, C_Lexique_piccolo_5F_lexique::kToken_comf, SHIFT (153)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, SHIFT (154)
, C_Lexique_piccolo_5F_lexique::kToken_movf, SHIFT (155)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, SHIFT (156)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, SHIFT (157)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, SHIFT (158)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, SHIFT (159)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, SHIFT (160)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, SHIFT (161)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, SHIFT (162)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, SHIFT (163)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, SHIFT (164)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, SHIFT (165)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, SHIFT (166)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, SHIFT (167)
, C_Lexique_piccolo_5F_lexique::kToken_negf, SHIFT (168)
, C_Lexique_piccolo_5F_lexique::kToken_setf, SHIFT (169)
, C_Lexique_piccolo_5F_lexique::kToken_movff, SHIFT (170)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, SHIFT (171)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, SHIFT (172)
, C_Lexique_piccolo_5F_lexique::kToken_btg, SHIFT (173)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, SHIFT (174)
, C_Lexique_piccolo_5F_lexique::kToken_call, SHIFT (175)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, SHIFT (176)
, C_Lexique_piccolo_5F_lexique::kToken_daw, SHIFT (177)
, C_Lexique_piccolo_5F_lexique::kToken_nop, SHIFT (178)
, C_Lexique_piccolo_5F_lexique::kToken_pop, SHIFT (179)
, C_Lexique_piccolo_5F_lexique::kToken_push, SHIFT (180)
, C_Lexique_piccolo_5F_lexique::kToken_reset, SHIFT (181)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, SHIFT (182)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, SHIFT (183)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, SHIFT (184)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, SHIFT (185)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, SHIFT (186)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, SHIFT (187)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, SHIFT (188)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, SHIFT (189)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, SHIFT (190)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, SHIFT (191)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, SHIFT (192)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, SHIFT (193)
, END
// State S481 (index = 25573)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (106)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (106)
, END
// State S482 (index = 25730)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S483 (index = 25745)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (127)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (127)
, END
// State S484 (index = 25902)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (505)
, END
// State S485 (index = 25905)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (128)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (128)
, END
// State S486 (index = 26062)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (506)
, END
// State S487 (index = 26065)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (129)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (129)
, END
// State S488 (index = 26222)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (507)
, END
// State S489 (index = 26225)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (130)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (130)
, END
// State S490 (index = 26382)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken__7C_, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken__26_, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (276)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (276)
, END
// State S491 (index = 26549)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (104)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (104)
, END
// State S492 (index = 26706)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (238)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (238)
, C_Lexique_piccolo_5F_lexique::kToken__2F_, REDUCE (238)
, END
// State S493 (index = 26713)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (237)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (237)
, C_Lexique_piccolo_5F_lexique::kToken__5B_, SHIFT (443)
, C_Lexique_piccolo_5F_lexique::kToken__2F_, REDUCE (237)
, END
// State S494 (index = 26722)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (232)
, END
// State S495 (index = 26725)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S496 (index = 26740)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (118)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (118)
, END
// State S497 (index = 26745)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (64)
, C_Lexique_piccolo_5F_lexique::kToken_integer, SHIFT (65)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (66)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (67)
, C_Lexique_piccolo_5F_lexique::kToken__5B_, SHIFT (356)
, C_Lexique_piccolo_5F_lexique::kToken__7E_, SHIFT (68)
, C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char, SHIFT (69)
, C_Lexique_piccolo_5F_lexique::kToken__40_, SHIFT (70)
, END
// State S498 (index = 26762)
, C_Lexique_piccolo_5F_lexique::kToken_else, SHIFT (511)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (119)
, END
// State S499 (index = 26767)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (12)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (12)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (12)
, END
// State S500 (index = 26774)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (11)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (11)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (11)
, END
// State S501 (index = 26781)
, C_Lexique_piccolo_5F_lexique::kToken__3F_, SHIFT (513)
, END
// State S502 (index = 26784)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (514)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (121)
, END
// State S503 (index = 26789)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (151)
, C_Lexique_piccolo_5F_lexique::kToken_while, SHIFT (455)
, END
// State S504 (index = 26794)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (482)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (131)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (131)
, END
// State S505 (index = 26953)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (484)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (133)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (133)
, END
// State S506 (index = 27112)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (486)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (135)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (135)
, END
// State S507 (index = 27271)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (488)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (137)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (137)
, END
// State S508 (index = 27430)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (235)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (235)
, C_Lexique_piccolo_5F_lexique::kToken__2F_, SHIFT (470)
, END
// State S509 (index = 27437)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (448)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (271)
, END
// State S510 (index = 27442)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, SHIFT (409)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (115)
, END
// State S511 (index = 27447)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (122)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (123)
, C_Lexique_piccolo_5F_lexique::kToken_switch, SHIFT (124)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_block, SHIFT (125)
, C_Lexique_piccolo_5F_lexique::kToken_do, SHIFT (126)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, SHIFT (127)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, SHIFT (128)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, SHIFT (129)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, SHIFT (130)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, SHIFT (131)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, SHIFT (132)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, SHIFT (133)
, C_Lexique_piccolo_5F_lexique::kToken_computed, SHIFT (134)
, C_Lexique_piccolo_5F_lexique::kToken_bra, SHIFT (135)
, C_Lexique_piccolo_5F_lexique::kToken_goto, SHIFT (136)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, SHIFT (137)
, C_Lexique_piccolo_5F_lexique::kToken_forever, SHIFT (138)
, C_Lexique_piccolo_5F_lexique::kToken_if, SHIFT (139)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, SHIFT (140)
, C_Lexique_piccolo_5F_lexique::kToken_bc, SHIFT (141)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, SHIFT (142)
, C_Lexique_piccolo_5F_lexique::kToken_bn, SHIFT (143)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, SHIFT (144)
, C_Lexique_piccolo_5F_lexique::kToken_bov, SHIFT (145)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, SHIFT (146)
, C_Lexique_piccolo_5F_lexique::kToken_bz, SHIFT (147)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, SHIFT (148)
, C_Lexique_piccolo_5F_lexique::kToken_jump, SHIFT (149)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, SHIFT (150)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, SHIFT (151)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, SHIFT (152)
, C_Lexique_piccolo_5F_lexique::kToken_comf, SHIFT (153)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, SHIFT (154)
, C_Lexique_piccolo_5F_lexique::kToken_movf, SHIFT (155)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, SHIFT (156)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, SHIFT (157)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, SHIFT (158)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, SHIFT (159)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, SHIFT (160)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, SHIFT (161)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, SHIFT (162)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, SHIFT (163)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, SHIFT (164)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, SHIFT (165)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, SHIFT (166)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, SHIFT (167)
, C_Lexique_piccolo_5F_lexique::kToken_negf, SHIFT (168)
, C_Lexique_piccolo_5F_lexique::kToken_setf, SHIFT (169)
, C_Lexique_piccolo_5F_lexique::kToken_movff, SHIFT (170)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, SHIFT (171)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, SHIFT (172)
, C_Lexique_piccolo_5F_lexique::kToken_btg, SHIFT (173)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, SHIFT (174)
, C_Lexique_piccolo_5F_lexique::kToken_call, SHIFT (175)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, SHIFT (176)
, C_Lexique_piccolo_5F_lexique::kToken_daw, SHIFT (177)
, C_Lexique_piccolo_5F_lexique::kToken_nop, SHIFT (178)
, C_Lexique_piccolo_5F_lexique::kToken_pop, SHIFT (179)
, C_Lexique_piccolo_5F_lexique::kToken_push, SHIFT (180)
, C_Lexique_piccolo_5F_lexique::kToken_reset, SHIFT (181)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, SHIFT (182)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, SHIFT (183)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, SHIFT (184)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, SHIFT (185)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, SHIFT (186)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, SHIFT (187)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, SHIFT (188)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, SHIFT (189)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, SHIFT (190)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, SHIFT (191)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, SHIFT (192)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, SHIFT (193)
, END
// State S512 (index = 27604)
, C_Lexique_piccolo_5F_lexique::kToken_end, SHIFT (525)
, END
// State S513 (index = 27607)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (499)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (255)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (500)
, END
// State S514 (index = 27614)
, C_Lexique_piccolo_5F_lexique::kToken__7B_, SHIFT (527)
, END
// State S515 (index = 27617)
, C_Lexique_piccolo_5F_lexique::kToken_end, SHIFT (528)
, END
// State S516 (index = 27620)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (152)
, END
// State S517 (index = 27623)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (132)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (132)
, END
// State S518 (index = 27780)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (134)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (134)
, END
// State S519 (index = 27937)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (136)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (136)
, END
// State S520 (index = 28094)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (138)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (138)
, END
// State S521 (index = 28251)
, C_Lexique_piccolo_5F_lexique::kToken__2C_, REDUCE (236)
, C_Lexique_piccolo_5F_lexique::kToken__3E_, REDUCE (236)
, END
// State S522 (index = 28256)
, C_Lexique_piccolo_5F_lexique::kToken__29_, REDUCE (272)
, END
// State S523 (index = 28259)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, SHIFT (529)
, END
// State S524 (index = 28262)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (120)
, END
// State S525 (index = 28265)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (89)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (89)
, END
// State S526 (index = 28422)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, SHIFT (530)
, END
// State S527 (index = 28425)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (122)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (123)
, C_Lexique_piccolo_5F_lexique::kToken_switch, SHIFT (124)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_block, SHIFT (125)
, C_Lexique_piccolo_5F_lexique::kToken_do, SHIFT (126)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, SHIFT (127)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, SHIFT (128)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, SHIFT (129)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, SHIFT (130)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, SHIFT (131)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, SHIFT (132)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, SHIFT (133)
, C_Lexique_piccolo_5F_lexique::kToken_computed, SHIFT (134)
, C_Lexique_piccolo_5F_lexique::kToken_bra, SHIFT (135)
, C_Lexique_piccolo_5F_lexique::kToken_goto, SHIFT (136)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, SHIFT (137)
, C_Lexique_piccolo_5F_lexique::kToken_forever, SHIFT (138)
, C_Lexique_piccolo_5F_lexique::kToken_if, SHIFT (139)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, SHIFT (140)
, C_Lexique_piccolo_5F_lexique::kToken_bc, SHIFT (141)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, SHIFT (142)
, C_Lexique_piccolo_5F_lexique::kToken_bn, SHIFT (143)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, SHIFT (144)
, C_Lexique_piccolo_5F_lexique::kToken_bov, SHIFT (145)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, SHIFT (146)
, C_Lexique_piccolo_5F_lexique::kToken_bz, SHIFT (147)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, SHIFT (148)
, C_Lexique_piccolo_5F_lexique::kToken_jump, SHIFT (149)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, SHIFT (150)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, SHIFT (151)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, SHIFT (152)
, C_Lexique_piccolo_5F_lexique::kToken_comf, SHIFT (153)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, SHIFT (154)
, C_Lexique_piccolo_5F_lexique::kToken_movf, SHIFT (155)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, SHIFT (156)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, SHIFT (157)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, SHIFT (158)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, SHIFT (159)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, SHIFT (160)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, SHIFT (161)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, SHIFT (162)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, SHIFT (163)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, SHIFT (164)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, SHIFT (165)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, SHIFT (166)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, SHIFT (167)
, C_Lexique_piccolo_5F_lexique::kToken_negf, SHIFT (168)
, C_Lexique_piccolo_5F_lexique::kToken_setf, SHIFT (169)
, C_Lexique_piccolo_5F_lexique::kToken_movff, SHIFT (170)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, SHIFT (171)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, SHIFT (172)
, C_Lexique_piccolo_5F_lexique::kToken_btg, SHIFT (173)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, SHIFT (174)
, C_Lexique_piccolo_5F_lexique::kToken_call, SHIFT (175)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, SHIFT (176)
, C_Lexique_piccolo_5F_lexique::kToken_daw, SHIFT (177)
, C_Lexique_piccolo_5F_lexique::kToken_nop, SHIFT (178)
, C_Lexique_piccolo_5F_lexique::kToken_pop, SHIFT (179)
, C_Lexique_piccolo_5F_lexique::kToken_push, SHIFT (180)
, C_Lexique_piccolo_5F_lexique::kToken_reset, SHIFT (181)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, SHIFT (182)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, SHIFT (183)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, SHIFT (184)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, SHIFT (185)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, SHIFT (186)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, SHIFT (187)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, SHIFT (188)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, SHIFT (189)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, SHIFT (190)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, SHIFT (191)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, SHIFT (192)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, SHIFT (193)
, END
// State S528 (index = 28582)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_incf, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_decf, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_switch, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_block, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_do, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_computed, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_bra, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_goto, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_forever, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_if, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_bc, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_bn, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_bov, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_bz, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_jump, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_comf, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_movf, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_negf, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_setf, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_movff, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_btg, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_call, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_daw, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_nop, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_pop, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_push, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_reset, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, REDUCE (90)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, REDUCE (90)
, END
// State S529 (index = 28739)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_incf, SHIFT (122)
, C_Lexique_piccolo_5F_lexique::kToken_decf, SHIFT (123)
, C_Lexique_piccolo_5F_lexique::kToken_switch, SHIFT (124)
, C_Lexique_piccolo_5F_lexique::kToken_case, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_block, SHIFT (125)
, C_Lexique_piccolo_5F_lexique::kToken_do, SHIFT (126)
, C_Lexique_piccolo_5F_lexique::kToken_checkbank, SHIFT (127)
, C_Lexique_piccolo_5F_lexique::kToken_checknobank, SHIFT (128)
, C_Lexique_piccolo_5F_lexique::kToken_ldataptr, SHIFT (129)
, C_Lexique_piccolo_5F_lexique::kToken_ltblptr, SHIFT (130)
, C_Lexique_piccolo_5F_lexique::kToken_banksel, SHIFT (131)
, C_Lexique_piccolo_5F_lexique::kToken_nobank, SHIFT (132)
, C_Lexique_piccolo_5F_lexique::kToken_banksave, SHIFT (133)
, C_Lexique_piccolo_5F_lexique::kToken_computed, SHIFT (134)
, C_Lexique_piccolo_5F_lexique::kToken_bra, SHIFT (135)
, C_Lexique_piccolo_5F_lexique::kToken_goto, SHIFT (136)
, C_Lexique_piccolo_5F_lexique::kToken_rcall, SHIFT (137)
, C_Lexique_piccolo_5F_lexique::kToken_forever, SHIFT (138)
, C_Lexique_piccolo_5F_lexique::kToken_if, SHIFT (139)
, C_Lexique_piccolo_5F_lexique::kToken_while, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_mnop, SHIFT (140)
, C_Lexique_piccolo_5F_lexique::kToken_bc, SHIFT (141)
, C_Lexique_piccolo_5F_lexique::kToken_bnc, SHIFT (142)
, C_Lexique_piccolo_5F_lexique::kToken_bn, SHIFT (143)
, C_Lexique_piccolo_5F_lexique::kToken_bnn, SHIFT (144)
, C_Lexique_piccolo_5F_lexique::kToken_bov, SHIFT (145)
, C_Lexique_piccolo_5F_lexique::kToken_bnov, SHIFT (146)
, C_Lexique_piccolo_5F_lexique::kToken_bz, SHIFT (147)
, C_Lexique_piccolo_5F_lexique::kToken_bnz, SHIFT (148)
, C_Lexique_piccolo_5F_lexique::kToken_jump, SHIFT (149)
, C_Lexique_piccolo_5F_lexique::kToken_elsif, REDUCE (54)
, C_Lexique_piccolo_5F_lexique::kToken_addwf, SHIFT (150)
, C_Lexique_piccolo_5F_lexique::kToken_addwfc, SHIFT (151)
, C_Lexique_piccolo_5F_lexique::kToken_andwf, SHIFT (152)
, C_Lexique_piccolo_5F_lexique::kToken_comf, SHIFT (153)
, C_Lexique_piccolo_5F_lexique::kToken_iorwf, SHIFT (154)
, C_Lexique_piccolo_5F_lexique::kToken_movf, SHIFT (155)
, C_Lexique_piccolo_5F_lexique::kToken_rlcf, SHIFT (156)
, C_Lexique_piccolo_5F_lexique::kToken_rlncf, SHIFT (157)
, C_Lexique_piccolo_5F_lexique::kToken_rrcf, SHIFT (158)
, C_Lexique_piccolo_5F_lexique::kToken_rrncf, SHIFT (159)
, C_Lexique_piccolo_5F_lexique::kToken_subfwb, SHIFT (160)
, C_Lexique_piccolo_5F_lexique::kToken_subwf, SHIFT (161)
, C_Lexique_piccolo_5F_lexique::kToken_subwfb, SHIFT (162)
, C_Lexique_piccolo_5F_lexique::kToken_swapf, SHIFT (163)
, C_Lexique_piccolo_5F_lexique::kToken_xorwf, SHIFT (164)
, C_Lexique_piccolo_5F_lexique::kToken_clrf, SHIFT (165)
, C_Lexique_piccolo_5F_lexique::kToken_movwf, SHIFT (166)
, C_Lexique_piccolo_5F_lexique::kToken_mulwf, SHIFT (167)
, C_Lexique_piccolo_5F_lexique::kToken_negf, SHIFT (168)
, C_Lexique_piccolo_5F_lexique::kToken_setf, SHIFT (169)
, C_Lexique_piccolo_5F_lexique::kToken_movff, SHIFT (170)
, C_Lexique_piccolo_5F_lexique::kToken_bcf, SHIFT (171)
, C_Lexique_piccolo_5F_lexique::kToken_bsf, SHIFT (172)
, C_Lexique_piccolo_5F_lexique::kToken_btg, SHIFT (173)
, C_Lexique_piccolo_5F_lexique::kToken_jsr, SHIFT (174)
, C_Lexique_piccolo_5F_lexique::kToken_call, SHIFT (175)
, C_Lexique_piccolo_5F_lexique::kToken_clrwdt, SHIFT (176)
, C_Lexique_piccolo_5F_lexique::kToken_daw, SHIFT (177)
, C_Lexique_piccolo_5F_lexique::kToken_nop, SHIFT (178)
, C_Lexique_piccolo_5F_lexique::kToken_pop, SHIFT (179)
, C_Lexique_piccolo_5F_lexique::kToken_push, SHIFT (180)
, C_Lexique_piccolo_5F_lexique::kToken_reset, SHIFT (181)
, C_Lexique_piccolo_5F_lexique::kToken_sleep, SHIFT (182)
, C_Lexique_piccolo_5F_lexique::kToken_fnop, SHIFT (183)
, C_Lexique_piccolo_5F_lexique::kToken_addlw, SHIFT (184)
, C_Lexique_piccolo_5F_lexique::kToken_andlw, SHIFT (185)
, C_Lexique_piccolo_5F_lexique::kToken_iorlw, SHIFT (186)
, C_Lexique_piccolo_5F_lexique::kToken_movlw, SHIFT (187)
, C_Lexique_piccolo_5F_lexique::kToken_mullw, SHIFT (188)
, C_Lexique_piccolo_5F_lexique::kToken_sublw, SHIFT (189)
, C_Lexique_piccolo_5F_lexique::kToken_xorlw, SHIFT (190)
, C_Lexique_piccolo_5F_lexique::kToken_lfsr, SHIFT (191)
, C_Lexique_piccolo_5F_lexique::kToken_tblrd, SHIFT (192)
, C_Lexique_piccolo_5F_lexique::kToken_tblwt, SHIFT (193)
, END
// State S530 (index = 28896)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (499)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (255)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (500)
, END
// State S531 (index = 28903)
, C_Lexique_piccolo_5F_lexique::kToken__7D_, SHIFT (534)
, END
// State S532 (index = 28906)
, C_Lexique_piccolo_5F_lexique::kToken_case, SHIFT (497)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (113)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (113)
, END
// State S533 (index = 28913)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, REDUCE (13)
, C_Lexique_piccolo_5F_lexique::kToken__3A_, REDUCE (13)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (13)
, END
// State S534 (index = 28920)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (499)
, C_Lexique_piccolo_5F_lexique::kToken__28_, SHIFT (255)
, C_Lexique_piccolo_5F_lexique::kToken__2D_, SHIFT (500)
, END
// State S535 (index = 28927)
, C_Lexique_piccolo_5F_lexique::kToken_else, REDUCE (114)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (114)
, END
// State S536 (index = 28932)
, C_Lexique_piccolo_5F_lexique::kToken_identifier, SHIFT (514)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (121)
, END
// State S537 (index = 28937)
, C_Lexique_piccolo_5F_lexique::kToken_end, REDUCE (122)
, END} ;

static const uint32_t gActionTableIndex_pic18_include_grammar [538] = {
  0  // S0
, 27  // S1
, 30  // S2
, 35  // S3
, 38  // S4
, 41  // S5
, 44  // S6
, 47  // S7
, 50  // S8
, 53  // S9
, 56  // S10
, 59  // S11
, 62  // S12
, 89  // S13
, 116  // S14
, 143  // S15
, 146  // S16
, 173  // S17
, 200  // S18
, 227  // S19
, 254  // S20
, 257  // S21
, 260  // S22
, 287  // S23
, 290  // S24
, 293  // S25
, 322  // S26
, 349  // S27
, 378  // S28
, 381  // S29
, 386  // S30
, 391  // S31
, 394  // S32
, 397  // S33
, 400  // S34
, 403  // S35
, 406  // S36
, 409  // S37
, 412  // S38
, 415  // S39
, 418  // S40
, 421  // S41
, 424  // S42
, 453  // S43
, 482  // S44
, 485  // S45
, 512  // S46
, 515  // S47
, 518  // S48
, 545  // S49
, 560  // S50
, 563  // S51
, 566  // S52
, 569  // S53
, 572  // S54
, 577  // S55
, 592  // S56
, 597  // S57
, 600  // S58
, 627  // S59
, 630  // S60
, 657  // S61
, 686  // S62
, 689  // S63
, 718  // S64
, 943  // S65
, 1166  // S66
, 1181  // S67
, 1196  // S68
, 1211  // S69
, 1434  // S70
, 1437  // S71
, 1442  // S72
, 1637  // S73
, 1834  // S74
, 2043  // S75
, 2260  // S76
, 2483  // S77
, 2706  // S78
, 2863  // S79
, 2868  // S80
, 2895  // S81
, 2898  // S82
, 2903  // S83
, 2906  // S84
, 2933  // S85
, 2936  // S86
, 2939  // S87
, 2968  // S88
, 2971  // S89
, 3000  // S90
, 3003  // S91
, 3030  // S92
, 3057  // S93
, 3060  // S94
, 3283  // S95
, 3286  // S96
, 3509  // S97
, 3732  // S98
, 3735  // S99
, 3750  // S100
, 3753  // S101
, 3768  // S102
, 3783  // S103
, 3974  // S104
, 3989  // S105
, 4184  // S106
, 4199  // S107
, 4214  // S108
, 4229  // S109
, 4244  // S110
, 4259  // S111
, 4274  // S112
, 4471  // S113
, 4486  // S114
, 4501  // S115
, 4516  // S116
, 4531  // S117
, 4740  // S118
, 4755  // S119
, 4770  // S120
, 4785  // S121
, 5002  // S122
, 5005  // S123
, 5008  // S124
, 5011  // S125
, 5014  // S126
, 5173  // S127
, 5176  // S128
, 5333  // S129
, 5336  // S130
, 5351  // S131
, 5356  // S132
, 5513  // S133
, 5516  // S134
, 5519  // S135
, 5522  // S136
, 5525  // S137
, 5528  // S138
, 5685  // S139
, 5696  // S140
, 5699  // S141
, 5702  // S142
, 5705  // S143
, 5708  // S144
, 5711  // S145
, 5714  // S146
, 5717  // S147
, 5720  // S148
, 5723  // S149
, 5726  // S150
, 5729  // S151
, 5732  // S152
, 5735  // S153
, 5738  // S154
, 5741  // S155
, 5744  // S156
, 5747  // S157
, 5750  // S158
, 5753  // S159
, 5756  // S160
, 5759  // S161
, 5762  // S162
, 5765  // S163
, 5768  // S164
, 5771  // S165
, 5774  // S166
, 5777  // S167
, 5780  // S168
, 5783  // S169
, 5786  // S170
, 5789  // S171
, 5792  // S172
, 5795  // S173
, 5798  // S174
, 5801  // S175
, 5804  // S176
, 5961  // S177
, 6118  // S178
, 6275  // S179
, 6432  // S180
, 6589  // S181
, 6746  // S182
, 6903  // S183
, 6918  // S184
, 6933  // S185
, 6948  // S186
, 6963  // S187
, 6978  // S188
, 6993  // S189
, 7008  // S190
, 7023  // S191
, 7026  // S192
, 7035  // S193
, 7044  // S194
, 7047  // S195
, 7204  // S196
, 7361  // S197
, 7374  // S198
, 7531  // S199
, 7534  // S200
, 7691  // S201
, 7694  // S202
, 7697  // S203
, 7700  // S204
, 7715  // S205
, 7720  // S206
, 7725  // S207
, 7730  // S208
, 7739  // S209
, 7742  // S210
, 7769  // S211
, 7776  // S212
, 7933  // S213
, 7960  // S214
, 7987  // S215
, 7990  // S216
, 8213  // S217
, 8216  // S218
, 8221  // S219
, 8248  // S220
, 8443  // S221
, 8638  // S222
, 8835  // S223
, 9032  // S224
, 9229  // S225
, 9426  // S226
, 9623  // S227
, 9820  // S228
, 10017  // S229
, 10234  // S230
, 10451  // S231
, 10668  // S232
, 10885  // S233
, 11108  // S234
, 11331  // S235
, 11554  // S236
, 11557  // S237
, 11560  // S238
, 11575  // S239
, 11578  // S240
, 11735  // S241
, 11738  // S242
, 11895  // S243
, 12072  // S244
, 12231  // S245
, 12390  // S246
, 12547  // S247
, 12562  // S248
, 12719  // S249
, 12876  // S250
, 13033  // S251
, 13036  // S252
, 13039  // S253
, 13042  // S254
, 13045  // S255
, 13056  // S256
, 13067  // S257
, 13224  // S258
, 13227  // S259
, 13230  // S260
, 13233  // S261
, 13390  // S262
, 13549  // S263
, 13552  // S264
, 13709  // S265
, 13866  // S266
, 14023  // S267
, 14026  // S268
, 14183  // S269
, 14340  // S270
, 14497  // S271
, 14654  // S272
, 14811  // S273
, 14968  // S274
, 15125  // S275
, 15282  // S276
, 15439  // S277
, 15596  // S278
, 15623  // S279
, 15636  // S280
, 15649  // S281
, 15806  // S282
, 15965  // S283
, 16122  // S284
, 16125  // S285
, 16282  // S286
, 16285  // S287
, 16288  // S288
, 16295  // S289
, 16298  // S290
, 16301  // S291
, 16304  // S292
, 16307  // S293
, 16310  // S294
, 16533  // S295
, 16536  // S296
, 16539  // S297
, 16730  // S298
, 16921  // S299
, 17116  // S300
, 17325  // S301
, 17534  // S302
, 17743  // S303
, 17952  // S304
, 18169  // S305
, 18386  // S306
, 18603  // S307
, 18620  // S308
, 18623  // S309
, 18626  // S310
, 18629  // S311
, 18632  // S312
, 18635  // S313
, 18810  // S314
, 18813  // S315
, 18970  // S316
, 18973  // S317
, 19130  // S318
, 19133  // S319
, 19136  // S320
, 19293  // S321
, 19296  // S322
, 19479  // S323
, 19490  // S324
, 19493  // S325
, 19496  // S326
, 19513  // S327
, 19520  // S328
, 19527  // S329
, 19532  // S330
, 19539  // S331
, 19542  // S332
, 19545  // S333
, 19548  // S334
, 19551  // S335
, 19554  // S336
, 19559  // S337
, 19562  // S338
, 19569  // S339
, 19726  // S340
, 19821  // S341
, 19826  // S342
, 19983  // S343
, 19986  // S344
, 20001  // S345
, 20004  // S346
, 20161  // S347
, 20318  // S348
, 20323  // S349
, 20326  // S350
, 20331  // S351
, 20336  // S352
, 20341  // S353
, 20344  // S354
, 20371  // S355
, 20386  // S356
, 20401  // S357
, 20406  // S358
, 20411  // S359
, 20414  // S360
, 20571  // S361
, 20728  // S362
, 20731  // S363
, 20734  // S364
, 20891  // S365
, 21048  // S366
, 21205  // S367
, 21214  // S368
, 21219  // S369
, 21226  // S370
, 21233  // S371
, 21236  // S372
, 21239  // S373
, 21242  // S374
, 21245  // S375
, 21248  // S376
, 21251  // S377
, 21256  // S378
, 21263  // S379
, 21274  // S380
, 21279  // S381
, 21290  // S382
, 21293  // S383
, 21298  // S384
, 21301  // S385
, 21304  // S386
, 21307  // S387
, 21476  // S388
, 21643  // S389
, 21648  // S390
, 21743  // S391
, 21900  // S392
, 21903  // S393
, 21906  // S394
, 22063  // S395
, 22066  // S396
, 22069  // S397
, 22226  // S398
, 22383  // S399
, 22540  // S400
, 22697  // S401
, 22704  // S402
, 22713  // S403
, 22718  // S404
, 22723  // S405
, 22726  // S406
, 22729  // S407
, 22734  // S408
, 22737  // S409
, 22754  // S410
, 22757  // S411
, 22914  // S412
, 22917  // S413
, 22922  // S414
, 23079  // S415
, 23254  // S416
, 23269  // S417
, 23272  // S418
, 23275  // S419
, 23278  // S420
, 23435  // S421
, 23438  // S422
, 23445  // S423
, 23452  // S424
, 23459  // S425
, 23466  // S426
, 23473  // S427
, 23480  // S428
, 23489  // S429
, 23496  // S430
, 23501  // S431
, 23662  // S432
, 23665  // S433
, 23668  // S434
, 23671  // S435
, 23838  // S436
, 23841  // S437
, 23844  // S438
, 24001  // S439
, 24004  // S440
, 24007  // S441
, 24010  // S442
, 24013  // S443
, 24016  // S444
, 24023  // S445
, 24028  // S446
, 24031  // S447
, 24034  // S448
, 24037  // S449
, 24040  // S450
, 24055  // S451
, 24060  // S452
, 24217  // S453
, 24220  // S454
, 24377  // S455
, 24380  // S456
, 24383  // S457
, 24542  // S458
, 24701  // S459
, 24860  // S460
, 25019  // S461
, 25026  // S462
, 25033  // S463
, 25038  // S464
, 25041  // S465
, 25044  // S466
, 25051  // S467
, 25054  // S468
, 25149  // S469
, 25152  // S470
, 25155  // S471
, 25160  // S472
, 25165  // S473
, 25170  // S474
, 25173  // S475
, 25396  // S476
, 25399  // S477
, 25402  // S478
, 25409  // S479
, 25416  // S480
, 25573  // S481
, 25730  // S482
, 25745  // S483
, 25902  // S484
, 25905  // S485
, 26062  // S486
, 26065  // S487
, 26222  // S488
, 26225  // S489
, 26382  // S490
, 26549  // S491
, 26706  // S492
, 26713  // S493
, 26722  // S494
, 26725  // S495
, 26740  // S496
, 26745  // S497
, 26762  // S498
, 26767  // S499
, 26774  // S500
, 26781  // S501
, 26784  // S502
, 26789  // S503
, 26794  // S504
, 26953  // S505
, 27112  // S506
, 27271  // S507
, 27430  // S508
, 27437  // S509
, 27442  // S510
, 27447  // S511
, 27604  // S512
, 27607  // S513
, 27614  // S514
, 27617  // S515
, 27620  // S516
, 27623  // S517
, 27780  // S518
, 27937  // S519
, 28094  // S520
, 28251  // S521
, 28256  // S522
, 28259  // S523
, 28262  // S524
, 28265  // S525
, 28422  // S526
, 28425  // S527
, 28582  // S528
, 28739  // S529
, 28896  // S530
, 28903  // S531
, 28906  // S532
, 28913  // S533
, 28920  // S534
, 28927  // S535
, 28932  // S536
, 28937  // S537
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            SLR states successors table                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

// Successor tables handle non terminal successors ;
// an entry is (non_terminal_symbol, n) ; successor is state n.

static const int16_t gSuccessorTable_pic18_include_grammar_0 [21] = {0, 12,
  1, 13,
  2, 14,
  7, 15,
  8, 16,
  9, 17,
  11, 18,
  12, 19,
  26, 20,
  34, 21, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_12 [19] = {0, 12,
  1, 13,
  2, 14,
  8, 16,
  9, 17,
  11, 18,
  12, 19,
  26, 33,
  34, 21, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_13 [19] = {0, 12,
  1, 13,
  2, 14,
  8, 16,
  9, 17,
  11, 18,
  12, 19,
  26, 34,
  34, 21, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_14 [19] = {0, 12,
  1, 13,
  2, 14,
  8, 16,
  9, 17,
  11, 18,
  12, 19,
  26, 35,
  34, 21, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_16 [19] = {0, 12,
  1, 13,
  2, 14,
  8, 16,
  9, 17,
  11, 18,
  12, 19,
  26, 36,
  34, 21, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_17 [19] = {0, 12,
  1, 13,
  2, 14,
  8, 16,
  9, 17,
  11, 18,
  12, 19,
  26, 37,
  34, 21, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_18 [19] = {0, 12,
  1, 13,
  2, 14,
  8, 16,
  9, 17,
  11, 18,
  12, 19,
  26, 38,
  34, 21, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_19 [19] = {0, 12,
  1, 13,
  2, 14,
  8, 16,
  9, 17,
  11, 18,
  12, 19,
  26, 39,
  34, 21, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_22 [19] = {0, 12,
  1, 13,
  2, 14,
  8, 16,
  9, 17,
  11, 18,
  12, 19,
  26, 41,
  34, 21, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_25 [3] = {29, 45, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_26 [19] = {0, 12,
  1, 13,
  2, 14,
  8, 16,
  9, 17,
  11, 18,
  12, 19,
  26, 46,
  34, 21, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_27 [3] = {30, 48, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_29 [3] = {33, 51, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_30 [3] = {73, 53, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_42 [3] = {27, 58, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_43 [3] = {28, 60, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_45 [19] = {0, 12,
  1, 13,
  2, 14,
  8, 16,
  9, 17,
  11, 18,
  12, 19,
  26, 62,
  34, 21, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_49 [15] = {3, 71,
  21, 72,
  22, 73,
  23, 74,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_54 [5] = {20, 82,
  81, 83, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_55 [15] = {3, 84,
  21, 72,
  22, 73,
  23, 74,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_56 [3] = {35, 86, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_58 [19] = {0, 12,
  1, 13,
  2, 14,
  8, 16,
  9, 17,
  11, 18,
  12, 19,
  26, 88,
  34, 21, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_60 [19] = {0, 12,
  1, 13,
  2, 14,
  8, 16,
  9, 17,
  11, 18,
  12, 19,
  26, 90,
  34, 21, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_61 [3] = {29, 91, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_63 [3] = {30, 92, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_64 [3] = {88, 94, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_66 [15] = {3, 95,
  21, 72,
  22, 73,
  23, 74,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_67 [5] = {25, 96,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_68 [5] = {25, 97,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_71 [3] = {31, 100, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_72 [3] = {82, 103, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_73 [3] = {83, 105, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_74 [3] = {84, 112, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_75 [3] = {85, 117, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_76 [3] = {86, 121, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_78 [23] = {10, 194,
  17, 195,
  19, 196,
  32, 197,
  45, 198,
  64, 199,
  66, 200,
  67, 201,
  68, 202,
  69, 203,
  70, 204, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_79 [3] = {74, 207, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_82 [5] = {20, 82,
  81, 209, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_87 [3] = {27, 213, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_89 [3] = {28, 214, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_99 [15] = {3, 218,
  21, 72,
  22, 73,
  23, 74,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_101 [13] = {21, 220,
  22, 73,
  23, 74,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_102 [13] = {21, 221,
  22, 73,
  23, 74,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_104 [11] = {22, 222,
  23, 74,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_106 [9] = {23, 223,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_107 [9] = {23, 224,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_108 [9] = {23, 225,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_109 [9] = {23, 226,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_110 [9] = {23, 227,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_111 [9] = {23, 228,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_113 [7] = {24, 229,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_114 [7] = {24, 230,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_115 [7] = {24, 231,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_116 [7] = {24, 232,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_118 [5] = {25, 233,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_119 [5] = {25, 234,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_120 [5] = {25, 235,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_126 [23] = {10, 239,
  17, 195,
  19, 196,
  32, 197,
  45, 198,
  64, 199,
  66, 200,
  67, 201,
  68, 202,
  69, 203,
  70, 204, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_130 [15] = {3, 242,
  21, 72,
  22, 73,
  23, 74,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_131 [3] = {4, 245, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_133 [3] = {4, 246, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_138 [23] = {10, 251,
  17, 195,
  19, 196,
  32, 197,
  45, 198,
  64, 199,
  66, 200,
  67, 201,
  68, 202,
  69, 203,
  70, 204, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_139 [11] = {4, 256,
  14, 257,
  18, 258,
  59, 259,
  61, 260, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_170 [3] = {4, 263, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_183 [15] = {3, 266,
  21, 72,
  22, 73,
  23, 74,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_192 [3] = {71, 272, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_193 [3] = {72, 277, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_195 [21] = {17, 195,
  19, 196,
  32, 279,
  45, 198,
  64, 199,
  66, 200,
  67, 201,
  68, 202,
  69, 203,
  70, 204, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_196 [21] = {17, 195,
  19, 196,
  32, 280,
  45, 198,
  64, 199,
  66, 200,
  67, 201,
  68, 202,
  69, 203,
  70, 204, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_201 [3] = {4, 282, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_202 [3] = {4, 283, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_203 [3] = {4, 284, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_204 [15] = {3, 285,
  21, 72,
  22, 73,
  23, 74,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_207 [3] = {73, 286, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_208 [3] = {75, 288, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_211 [3] = {36, 292, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_212 [23] = {10, 293,
  17, 195,
  19, 196,
  32, 197,
  45, 198,
  64, 199,
  66, 200,
  67, 201,
  68, 202,
  69, 203,
  70, 204, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_218 [3] = {31, 296, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_220 [3] = {82, 297, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_221 [3] = {82, 298, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_222 [3] = {83, 299, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_229 [3] = {85, 300, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_230 [3] = {85, 301, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_231 [3] = {85, 302, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_232 [3] = {85, 303, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_233 [3] = {86, 304, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_234 [3] = {86, 305, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_235 [3] = {86, 306, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_238 [15] = {3, 309,
  21, 72,
  22, 73,
  23, 74,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_243 [3] = {90, 313, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_244 [3] = {51, 315, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_245 [3] = {52, 317, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_246 [23] = {10, 318,
  17, 195,
  19, 196,
  32, 197,
  45, 198,
  64, 199,
  66, 200,
  67, 201,
  68, 202,
  69, 203,
  70, 204, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_247 [15] = {3, 319,
  21, 72,
  22, 73,
  23, 74,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_252 [3] = {4, 321, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_255 [13] = {4, 326,
  13, 327,
  14, 328,
  15, 329,
  38, 330,
  39, 331, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_256 [3] = {58, 337, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_257 [23] = {10, 338,
  17, 195,
  19, 196,
  32, 197,
  45, 198,
  64, 199,
  66, 200,
  67, 201,
  68, 202,
  69, 203,
  70, 204, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_260 [3] = {4, 341, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_282 [5] = {5, 346,
  92, 347, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_288 [3] = {76, 351, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_307 [17] = {3, 357,
  21, 72,
  22, 73,
  23, 74,
  24, 75,
  25, 76,
  48, 358,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_310 [3] = {14, 361, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_322 [3] = {90, 313, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_323 [11] = {4, 326,
  13, 369,
  14, 328,
  38, 330,
  39, 331, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_326 [3] = {41, 378, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_327 [3] = {44, 380, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_329 [3] = {43, 382, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_331 [3] = {4, 383, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_336 [3] = {6, 389, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_338 [3] = {65, 393, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_340 [13] = {19, 394,
  66, 200,
  67, 201,
  68, 202,
  69, 203,
  70, 204, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_341 [3] = {62, 396, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_343 [3] = {4, 397, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_344 [15] = {3, 398,
  21, 72,
  22, 73,
  23, 74,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_348 [3] = {6, 400, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_350 [3] = {78, 404, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_352 [3] = {37, 406, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_355 [15] = {3, 407,
  21, 72,
  22, 73,
  23, 74,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_356 [15] = {3, 408,
  21, 72,
  22, 73,
  23, 74,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_358 [3] = {47, 410, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_360 [23] = {10, 412,
  17, 195,
  19, 196,
  32, 197,
  45, 198,
  64, 199,
  66, 200,
  67, 201,
  68, 202,
  69, 203,
  70, 204, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_361 [23] = {10, 413,
  17, 195,
  19, 196,
  32, 197,
  45, 198,
  64, 199,
  66, 200,
  67, 201,
  68, 202,
  69, 203,
  70, 204, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_367 [3] = {53, 420, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_368 [3] = {6, 421, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_377 [3] = {6, 428, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_379 [11] = {4, 326,
  13, 429,
  14, 328,
  38, 330,
  39, 331, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_381 [13] = {4, 326,
  13, 327,
  14, 328,
  15, 430,
  38, 330,
  39, 331, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_383 [3] = {40, 433, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_387 [3] = {91, 435, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_389 [3] = {60, 437, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_390 [13] = {19, 438,
  66, 200,
  67, 201,
  68, 202,
  69, 203,
  70, 204, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_391 [23] = {10, 439,
  17, 195,
  19, 196,
  32, 197,
  45, 198,
  64, 199,
  66, 200,
  67, 201,
  68, 202,
  69, 203,
  70, 204, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_392 [5] = {14, 257,
  18, 440, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_402 [3] = {80, 444, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_404 [3] = {77, 446, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_407 [3] = {89, 449, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_409 [17] = {3, 357,
  21, 72,
  22, 73,
  23, 74,
  24, 75,
  25, 76,
  48, 451,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_411 [23] = {10, 453,
  17, 195,
  19, 196,
  32, 197,
  45, 198,
  64, 199,
  66, 200,
  67, 201,
  68, 202,
  69, 203,
  70, 204, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_413 [3] = {63, 456, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_416 [15] = {3, 457,
  21, 72,
  22, 73,
  23, 74,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_428 [3] = {42, 462, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_429 [3] = {44, 463, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_430 [3] = {43, 464, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_444 [3] = {79, 471, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_445 [3] = {78, 472, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_450 [15] = {3, 476,
  21, 72,
  22, 73,
  23, 74,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_451 [3] = {47, 477, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_452 [23] = {10, 478,
  17, 195,
  19, 196,
  32, 197,
  45, 198,
  64, 199,
  66, 200,
  67, 201,
  68, 202,
  69, 203,
  70, 204, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_455 [3] = {14, 480, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_457 [3] = {54, 483, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_458 [3] = {55, 485, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_459 [3] = {56, 487, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_460 [3] = {57, 489, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_468 [13] = {19, 491,
  66, 200,
  67, 201,
  68, 202,
  69, 203,
  70, 204, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_472 [3] = {77, 494, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_478 [3] = {46, 498, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_479 [5] = {14, 501,
  16, 502, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_480 [23] = {10, 503,
  17, 195,
  19, 196,
  32, 197,
  45, 198,
  64, 199,
  66, 200,
  67, 201,
  68, 202,
  69, 203,
  70, 204, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_482 [15] = {3, 504,
  21, 72,
  22, 73,
  23, 74,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_493 [3] = {80, 508, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_495 [15] = {3, 509,
  21, 72,
  22, 73,
  23, 74,
  24, 75,
  25, 76,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_497 [17] = {3, 357,
  21, 72,
  22, 73,
  23, 74,
  24, 75,
  25, 76,
  48, 510,
  87, 77, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_498 [3] = {49, 512, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_502 [3] = {50, 515, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_503 [3] = {63, 516, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_504 [3] = {54, 517, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_505 [3] = {55, 518, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_506 [3] = {56, 519, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_507 [3] = {57, 520, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_508 [3] = {79, 521, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_509 [3] = {89, 522, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_510 [3] = {47, 523, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_511 [23] = {10, 524,
  17, 195,
  19, 196,
  32, 197,
  45, 198,
  64, 199,
  66, 200,
  67, 201,
  68, 202,
  69, 203,
  70, 204, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_513 [5] = {14, 501,
  16, 526, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_527 [23] = {10, 531,
  17, 195,
  19, 196,
  32, 197,
  45, 198,
  64, 199,
  66, 200,
  67, 201,
  68, 202,
  69, 203,
  70, 204, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_529 [23] = {10, 532,
  17, 195,
  19, 196,
  32, 197,
  45, 198,
  64, 199,
  66, 200,
  67, 201,
  68, 202,
  69, 203,
  70, 204, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_530 [5] = {14, 501,
  16, 533, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_532 [3] = {46, 535, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_534 [5] = {14, 501,
  16, 536, -1} ;

static const int16_t gSuccessorTable_pic18_include_grammar_536 [3] = {50, 537, -1} ;

static const int16_t * gSuccessorTable_pic18_include_grammar [538] = {
gSuccessorTable_pic18_include_grammar_0, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_pic18_include_grammar_12, gSuccessorTable_pic18_include_grammar_13, gSuccessorTable_pic18_include_grammar_14, NULL, 
  gSuccessorTable_pic18_include_grammar_16, gSuccessorTable_pic18_include_grammar_17, gSuccessorTable_pic18_include_grammar_18, gSuccessorTable_pic18_include_grammar_19, 
  NULL, NULL, gSuccessorTable_pic18_include_grammar_22, NULL, 
  NULL, gSuccessorTable_pic18_include_grammar_25, gSuccessorTable_pic18_include_grammar_26, gSuccessorTable_pic18_include_grammar_27, 
  NULL, gSuccessorTable_pic18_include_grammar_29, gSuccessorTable_pic18_include_grammar_30, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_pic18_include_grammar_42, gSuccessorTable_pic18_include_grammar_43, 
  NULL, gSuccessorTable_pic18_include_grammar_45, NULL, NULL, 
  NULL, gSuccessorTable_pic18_include_grammar_49, NULL, NULL, 
  NULL, NULL, gSuccessorTable_pic18_include_grammar_54, gSuccessorTable_pic18_include_grammar_55, 
  gSuccessorTable_pic18_include_grammar_56, NULL, gSuccessorTable_pic18_include_grammar_58, NULL, 
  gSuccessorTable_pic18_include_grammar_60, gSuccessorTable_pic18_include_grammar_61, NULL, gSuccessorTable_pic18_include_grammar_63, 
  gSuccessorTable_pic18_include_grammar_64, NULL, gSuccessorTable_pic18_include_grammar_66, gSuccessorTable_pic18_include_grammar_67, 
  gSuccessorTable_pic18_include_grammar_68, NULL, NULL, gSuccessorTable_pic18_include_grammar_71, 
  gSuccessorTable_pic18_include_grammar_72, gSuccessorTable_pic18_include_grammar_73, gSuccessorTable_pic18_include_grammar_74, gSuccessorTable_pic18_include_grammar_75, 
  gSuccessorTable_pic18_include_grammar_76, NULL, gSuccessorTable_pic18_include_grammar_78, gSuccessorTable_pic18_include_grammar_79, 
  NULL, NULL, gSuccessorTable_pic18_include_grammar_82, NULL, 
  NULL, NULL, NULL, gSuccessorTable_pic18_include_grammar_87, 
  NULL, gSuccessorTable_pic18_include_grammar_89, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_pic18_include_grammar_99, 
  NULL, gSuccessorTable_pic18_include_grammar_101, gSuccessorTable_pic18_include_grammar_102, NULL, 
  gSuccessorTable_pic18_include_grammar_104, NULL, gSuccessorTable_pic18_include_grammar_106, gSuccessorTable_pic18_include_grammar_107, 
  gSuccessorTable_pic18_include_grammar_108, gSuccessorTable_pic18_include_grammar_109, gSuccessorTable_pic18_include_grammar_110, gSuccessorTable_pic18_include_grammar_111, 
  NULL, gSuccessorTable_pic18_include_grammar_113, gSuccessorTable_pic18_include_grammar_114, gSuccessorTable_pic18_include_grammar_115, 
  gSuccessorTable_pic18_include_grammar_116, NULL, gSuccessorTable_pic18_include_grammar_118, gSuccessorTable_pic18_include_grammar_119, 
  gSuccessorTable_pic18_include_grammar_120, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_pic18_include_grammar_126, NULL, 
  NULL, NULL, gSuccessorTable_pic18_include_grammar_130, gSuccessorTable_pic18_include_grammar_131, 
  NULL, gSuccessorTable_pic18_include_grammar_133, NULL, NULL, 
  NULL, NULL, gSuccessorTable_pic18_include_grammar_138, gSuccessorTable_pic18_include_grammar_139, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_pic18_include_grammar_170, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_pic18_include_grammar_183, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_pic18_include_grammar_192, gSuccessorTable_pic18_include_grammar_193, NULL, gSuccessorTable_pic18_include_grammar_195, 
  gSuccessorTable_pic18_include_grammar_196, NULL, NULL, NULL, 
  NULL, gSuccessorTable_pic18_include_grammar_201, gSuccessorTable_pic18_include_grammar_202, gSuccessorTable_pic18_include_grammar_203, 
  gSuccessorTable_pic18_include_grammar_204, NULL, NULL, gSuccessorTable_pic18_include_grammar_207, 
  gSuccessorTable_pic18_include_grammar_208, NULL, NULL, gSuccessorTable_pic18_include_grammar_211, 
  gSuccessorTable_pic18_include_grammar_212, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_pic18_include_grammar_218, NULL, 
  gSuccessorTable_pic18_include_grammar_220, gSuccessorTable_pic18_include_grammar_221, gSuccessorTable_pic18_include_grammar_222, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable_pic18_include_grammar_229, gSuccessorTable_pic18_include_grammar_230, gSuccessorTable_pic18_include_grammar_231, 
  gSuccessorTable_pic18_include_grammar_232, gSuccessorTable_pic18_include_grammar_233, gSuccessorTable_pic18_include_grammar_234, gSuccessorTable_pic18_include_grammar_235, 
  NULL, NULL, gSuccessorTable_pic18_include_grammar_238, NULL, 
  NULL, NULL, NULL, gSuccessorTable_pic18_include_grammar_243, 
  gSuccessorTable_pic18_include_grammar_244, gSuccessorTable_pic18_include_grammar_245, gSuccessorTable_pic18_include_grammar_246, gSuccessorTable_pic18_include_grammar_247, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_pic18_include_grammar_252, NULL, NULL, gSuccessorTable_pic18_include_grammar_255, 
  gSuccessorTable_pic18_include_grammar_256, gSuccessorTable_pic18_include_grammar_257, NULL, NULL, 
  gSuccessorTable_pic18_include_grammar_260, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_pic18_include_grammar_282, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_pic18_include_grammar_288, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_pic18_include_grammar_307, 
  NULL, NULL, gSuccessorTable_pic18_include_grammar_310, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_pic18_include_grammar_322, gSuccessorTable_pic18_include_grammar_323, 
  NULL, NULL, gSuccessorTable_pic18_include_grammar_326, gSuccessorTable_pic18_include_grammar_327, 
  NULL, gSuccessorTable_pic18_include_grammar_329, NULL, gSuccessorTable_pic18_include_grammar_331, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_pic18_include_grammar_336, NULL, gSuccessorTable_pic18_include_grammar_338, NULL, 
  gSuccessorTable_pic18_include_grammar_340, gSuccessorTable_pic18_include_grammar_341, NULL, gSuccessorTable_pic18_include_grammar_343, 
  gSuccessorTable_pic18_include_grammar_344, NULL, NULL, NULL, 
  gSuccessorTable_pic18_include_grammar_348, NULL, gSuccessorTable_pic18_include_grammar_350, NULL, 
  gSuccessorTable_pic18_include_grammar_352, NULL, NULL, gSuccessorTable_pic18_include_grammar_355, 
  gSuccessorTable_pic18_include_grammar_356, NULL, gSuccessorTable_pic18_include_grammar_358, NULL, 
  gSuccessorTable_pic18_include_grammar_360, gSuccessorTable_pic18_include_grammar_361, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_pic18_include_grammar_367, 
  gSuccessorTable_pic18_include_grammar_368, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable_pic18_include_grammar_377, NULL, gSuccessorTable_pic18_include_grammar_379, 
  NULL, gSuccessorTable_pic18_include_grammar_381, NULL, gSuccessorTable_pic18_include_grammar_383, 
  NULL, NULL, NULL, gSuccessorTable_pic18_include_grammar_387, 
  NULL, gSuccessorTable_pic18_include_grammar_389, gSuccessorTable_pic18_include_grammar_390, gSuccessorTable_pic18_include_grammar_391, 
  gSuccessorTable_pic18_include_grammar_392, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_pic18_include_grammar_402, NULL, 
  gSuccessorTable_pic18_include_grammar_404, NULL, NULL, gSuccessorTable_pic18_include_grammar_407, 
  NULL, gSuccessorTable_pic18_include_grammar_409, NULL, gSuccessorTable_pic18_include_grammar_411, 
  NULL, gSuccessorTable_pic18_include_grammar_413, NULL, NULL, 
  gSuccessorTable_pic18_include_grammar_416, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_pic18_include_grammar_428, gSuccessorTable_pic18_include_grammar_429, gSuccessorTable_pic18_include_grammar_430, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_pic18_include_grammar_444, gSuccessorTable_pic18_include_grammar_445, NULL, NULL, 
  NULL, NULL, gSuccessorTable_pic18_include_grammar_450, gSuccessorTable_pic18_include_grammar_451, 
  gSuccessorTable_pic18_include_grammar_452, NULL, NULL, gSuccessorTable_pic18_include_grammar_455, 
  NULL, gSuccessorTable_pic18_include_grammar_457, gSuccessorTable_pic18_include_grammar_458, gSuccessorTable_pic18_include_grammar_459, 
  gSuccessorTable_pic18_include_grammar_460, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable_pic18_include_grammar_468, NULL, NULL, NULL, 
  gSuccessorTable_pic18_include_grammar_472, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable_pic18_include_grammar_478, gSuccessorTable_pic18_include_grammar_479, 
  gSuccessorTable_pic18_include_grammar_480, NULL, gSuccessorTable_pic18_include_grammar_482, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable_pic18_include_grammar_493, NULL, gSuccessorTable_pic18_include_grammar_495, 
  NULL, gSuccessorTable_pic18_include_grammar_497, gSuccessorTable_pic18_include_grammar_498, NULL, 
  NULL, NULL, gSuccessorTable_pic18_include_grammar_502, gSuccessorTable_pic18_include_grammar_503, 
  gSuccessorTable_pic18_include_grammar_504, gSuccessorTable_pic18_include_grammar_505, gSuccessorTable_pic18_include_grammar_506, gSuccessorTable_pic18_include_grammar_507, 
  gSuccessorTable_pic18_include_grammar_508, gSuccessorTable_pic18_include_grammar_509, gSuccessorTable_pic18_include_grammar_510, gSuccessorTable_pic18_include_grammar_511, 
  NULL, gSuccessorTable_pic18_include_grammar_513, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable_pic18_include_grammar_527, 
  NULL, gSuccessorTable_pic18_include_grammar_529, gSuccessorTable_pic18_include_grammar_530, NULL, 
  gSuccessorTable_pic18_include_grammar_532, NULL, gSuccessorTable_pic18_include_grammar_534, NULL, 
  gSuccessorTable_pic18_include_grammar_536, NULL} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Production rules infos (left non terminal, size of right string)                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static const int16_t gProductionsTable_pic18_include_grammar [280 * 2] = {
  7, 1,
  8, 3,
  9, 6,
  10, 1,
  11, 6,
  12, 7,
  13, 2,
  13, 1,
  13, 1,
  14, 4,
  15, 2,
  16, 1,
  16, 1,
  16, 5,
  17, 1,
  18, 3,
  19, 1,
  0, 4,
  20, 4,
  1, 5,
  2, 4,
  3, 2,
  21, 2,
  22, 2,
  23, 2,
  24, 2,
  25, 1,
  4, 2,
  6, 2,
  6, 1,
  5, 1,
  26, 0,
  26, 3,
  26, 5,
  26, 5,
  26, 4,
  26, 2,
  26, 2,
  26, 2,
  26, 2,
  26, 2,
  26, 2,
  26, 2,
  26, 3,
  27, 0,
  27, 3,
  28, 0,
  28, 3,
  29, 0,
  29, 3,
  30, 0,
  30, 3,
  31, 0,
  31, 3,
  32, 0,
  32, 2,
  32, 2,
  33, 0,
  33, 1,
  34, 0,
  34, 1,
  35, 0,
  35, 3,
  36, 1,
  36, 3,
  36, 2,
  37, 0,
  37, 2,
  38, 4,
  38, 2,
  38, 4,
  38, 2,
  38, 1,
  39, 1,
  39, 1,
  40, 0,
  40, 2,
  41, 2,
  41, 2,
  41, 2,
  41, 2,
  41, 2,
  41, 2,
  42, 0,
  42, 1,
  43, 0,
  43, 3,
  44, 0,
  44, 3,
  45, 10,
  45, 10,
  45, 6,
  45, 2,
  45, 1,
  45, 5,
  45, 2,
  45, 3,
  45, 3,
  45, 1,
  45, 4,
  45, 5,
  45, 3,
  45, 5,
  45, 4,
  45, 7,
  45, 3,
  45, 7,
  45, 2,
  45, 2,
  45, 3,
  45, 2,
  45, 2,
  45, 2,
  46, 0,
  46, 6,
  47, 0,
  47, 3,
  48, 1,
  48, 5,
  49, 0,
  49, 2,
  50, 0,
  50, 6,
  51, 0,
  51, 2,
  52, 0,
  52, 2,
  53, 3,
  53, 3,
  53, 3,
  53, 3,
  54, 0,
  54, 3,
  55, 0,
  55, 3,
  56, 0,
  56, 3,
  57, 0,
  57, 3,
  58, 2,
  58, 2,
  58, 2,
  58, 1,
  59, 4,
  59, 4,
  60, 0,
  60, 1,
  61, 1,
  61, 1,
  62, 0,
  62, 2,
  63, 0,
  63, 4,
  64, 1,
  64, 1,
  64, 1,
  64, 1,
  64, 1,
  64, 1,
  64, 1,
  64, 1,
  65, 0,
  65, 2,
  65, 2,
  66, 3,
  66, 2,
  66, 4,
  66, 4,
  66, 2,
  66, 2,
  66, 2,
  66, 1,
  66, 1,
  66, 1,
  66, 1,
  66, 1,
  66, 1,
  66, 1,
  66, 2,
  66, 2,
  66, 4,
  66, 2,
  66, 2,
  67, 1,
  67, 1,
  67, 1,
  67, 1,
  67, 1,
  67, 1,
  67, 1,
  67, 1,
  67, 1,
  67, 1,
  67, 1,
  67, 1,
  67, 1,
  67, 1,
  67, 1,
  67, 1,
  67, 1,
  68, 1,
  68, 1,
  68, 1,
  68, 1,
  68, 1,
  69, 1,
  69, 1,
  69, 1,
  70, 1,
  70, 1,
  70, 1,
  70, 1,
  70, 1,
  70, 1,
  70, 1,
  71, 1,
  71, 1,
  71, 1,
  71, 1,
  72, 1,
  72, 1,
  72, 1,
  72, 1,
  73, 0,
  73, 4,
  74, 1,
  74, 1,
  75, 0,
  75, 3,
  76, 0,
  76, 4,
  77, 0,
  77, 3,
  78, 3,
  78, 1,
  79, 0,
  79, 4,
  80, 0,
  80, 3,
  81, 0,
  81, 2,
  82, 0,
  82, 3,
  82, 3,
  83, 0,
  83, 3,
  84, 0,
  84, 2,
  84, 2,
  84, 2,
  84, 2,
  84, 2,
  84, 2,
  85, 0,
  85, 3,
  85, 3,
  85, 3,
  85, 3,
  86, 0,
  86, 3,
  86, 3,
  86, 3,
  87, 2,
  87, 2,
  87, 1,
  87, 1,
  87, 2,
  87, 3,
  87, 8,
  88, 0,
  88, 3,
  89, 0,
  89, 5,
  90, 0,
  90, 3,
  91, 0,
  91, 3,
  92, 0,
  92, 2,
  93, 1
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                               'configuration_definition' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_configuration_5F_definition_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 17 :
      rule_communs_configuration_5F_definition_i0_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_configuration_5F_definition_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 17 :
      rule_communs_configuration_5F_definition_i0_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_configuration_5F_definition_ (GALGAS_configDefinitionList &  parameter_1,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 17 :
      rule_communs_configuration_5F_definition_i0_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    'ram_definition' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_ram_5F_definition_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 19 :
      rule_communs_ram_5F_definition_i2_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_ram_5F_definition_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 19 :
      rule_communs_ram_5F_definition_i2_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_ram_5F_definition_ (GALGAS_ramDefinitionList &  parameter_1,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 19 :
      rule_communs_ram_5F_definition_i2_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 'constant_definition' non terminal implementation                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_constant_5F_definition_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 20 :
      rule_communs_constant_5F_definition_i3_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_constant_5F_definition_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 20 :
      rule_communs_constant_5F_definition_i3_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_constant_5F_definition_ (GALGAS_constantDefinitionList &  parameter_1,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 20 :
      rule_communs_constant_5F_definition_i3_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 'immediate_expression' non terminal implementation                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_immediate_5F_expression_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 21 :
      rule_communs_immediate_5F_expression_i4_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_immediate_5F_expression_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 21 :
      rule_communs_immediate_5F_expression_i4_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_immediate_5F_expression_ (GALGAS_immediatExpression &  parameter_1,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 21 :
      rule_communs_immediate_5F_expression_i4_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'register_parsing' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_register_5F_parsing_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 27 :
      rule_communs_register_5F_parsing_i10_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_register_5F_parsing_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 27 :
      rule_communs_register_5F_parsing_i10_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_register_5F_parsing_ (GALGAS_registerExpression &  parameter_1,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 27 :
      rule_communs_register_5F_parsing_i10_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  'optional_w_as_dest' non terminal implementation                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_optional_5F_w_5F_as_5F_dest_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 30 :
      rule_communs_optional_5F_w_5F_as_5F_dest_i13_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_optional_5F_w_5F_as_5F_dest_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 30 :
      rule_communs_optional_5F_w_5F_as_5F_dest_i13_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_optional_5F_w_5F_as_5F_dest_ (GALGAS_bool &  parameter_1,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 30 :
      rule_communs_optional_5F_w_5F_as_5F_dest_i13_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  'bit_number_parsing' non terminal implementation                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_bit_5F_number_5F_parsing_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 28 :
      rule_communs_bit_5F_number_5F_parsing_i11_parse(inLexique) ;
    break ;
  case 29 :
      rule_communs_bit_5F_number_5F_parsing_i12_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_bit_5F_number_5F_parsing_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 28 :
      rule_communs_bit_5F_number_5F_parsing_i11_indexing(inLexique) ;
    break ;
  case 29 :
      rule_communs_bit_5F_number_5F_parsing_i12_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_bit_5F_number_5F_parsing_ (GALGAS_bitNumberExpression &  parameter_1,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 28 :
      rule_communs_bit_5F_number_5F_parsing_i11_(parameter_1, inLexique) ;
    break ;
  case 29 :
      rule_communs_bit_5F_number_5F_parsing_i12_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         'body' non terminal implementation                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_body_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 0 :
      rule_pic_31__38__5F_syntax_body_i0_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_body_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 0 :
      rule_pic_31__38__5F_syntax_body_i0_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_body_ (GALGAS_pic_31__38_InterruptDefinitionList &  parameter_1,
                                GALGAS_pic_31__38_RoutineDefinitionList &  parameter_2,
                                GALGAS_lstringlist &  parameter_3,
                                GALGAS_lstringlist &  parameter_4,
                                GALGAS_ramDefinitionList &  parameter_5,
                                GALGAS_lstringlist &  parameter_6,
                                GALGAS_configDefinitionList &  parameter_7,
                                GALGAS_constantDefinitionList &  parameter_8,
                                GALGAS_checkpicList &  parameter_9,
                                GALGAS_dataList &  parameter_10,
                                GALGAS_bool &  parameter_11,
                                GALGAS_bool &  parameter_12,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 0 :
      rule_pic_31__38__5F_syntax_body_i0_(parameter_1, parameter_2, parameter_3, parameter_4, parameter_5, parameter_6, parameter_7, parameter_8, parameter_9, parameter_10, parameter_11, parameter_12, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::performIndexing (C_Compiler * inCompiler,
             const C_String & inSourceFilePath) {
  C_Lexique_piccolo_5F_lexique * scanner = NULL ;
  macroMyNew (scanner, C_Lexique_piccolo_5F_lexique (inCompiler, "", "", inSourceFilePath COMMA_HERE)) ;
  scanner->enableIndexing () ;
  if (scanner->sourceText () != NULL) {
    const bool ok = scanner->performBottomUpParsing (gActionTable_pic18_include_grammar, gNonTerminalNames_pic18_include_grammar,
                                                     gActionTableIndex_pic18_include_grammar, gSuccessorTable_pic18_include_grammar,
                                                     gProductionsTable_pic18_include_grammar) ;
    if (ok) {
      cGrammar_pic_31__38__5F_include_5F_grammar grammar ;
      grammar.nt_body_indexing (scanner) ;
    }
    scanner->generateIndexFile () ;
  }
  macroDetachSharedObject (scanner) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Grammar start symbol implementation                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::_performSourceFileParsing_ (C_Compiler * inCompiler,
                                GALGAS_lstring inFilePath,
                                GALGAS_pic_31__38_InterruptDefinitionList &  parameter_1,
                                GALGAS_pic_31__38_RoutineDefinitionList &  parameter_2,
                                GALGAS_lstringlist &  parameter_3,
                                GALGAS_lstringlist &  parameter_4,
                                GALGAS_ramDefinitionList &  parameter_5,
                                GALGAS_lstringlist &  parameter_6,
                                GALGAS_configDefinitionList &  parameter_7,
                                GALGAS_constantDefinitionList &  parameter_8,
                                GALGAS_checkpicList &  parameter_9,
                                GALGAS_dataList &  parameter_10,
                                GALGAS_bool &  parameter_11,
                                GALGAS_bool &  parameter_12
                                COMMA_LOCATION_ARGS) {
  if (inFilePath.isValid ()) {
    const GALGAS_string filePathAsString = inFilePath.reader_string (HERE) ;
    C_String filePath = filePathAsString.stringValue () ;
    if (! C_FileManager::isAbsolutePath (filePath)) {
      filePath = inCompiler->sourceFilePath ().stringByDeletingLastPathComponent ().stringByAppendingPathComponent (filePath) ;
    }
    if (C_FileManager::fileExistsAtPath (filePath)) {
      C_Lexique_piccolo_5F_lexique * scanner = NULL ;
      macroMyNew (scanner, C_Lexique_piccolo_5F_lexique (inCompiler, "", "", filePath COMMA_HERE)) ;
      if (scanner->sourceText () != NULL) {
        const bool ok = scanner->performBottomUpParsing (gActionTable_pic18_include_grammar, gNonTerminalNames_pic18_include_grammar,
                                                         gActionTableIndex_pic18_include_grammar, gSuccessorTable_pic18_include_grammar,
                                                         gProductionsTable_pic18_include_grammar) ;
        if (ok && ! executionModeIsSyntaxAnalysisOnly ()) {
          cGrammar_pic_31__38__5F_include_5F_grammar grammar ;
          grammar.nt_body_ (parameter_1, parameter_2, parameter_3, parameter_4, parameter_5, parameter_6, parameter_7, parameter_8, parameter_9, parameter_10, parameter_11, parameter_12, scanner) ;
        }
      }else{
        C_String message ;
        message << "the '" << filePath << "' file exists, but cannot be read" ;
        const GALGAS_location errorLocation (inFilePath.reader_location (THERE)) ;
        inCompiler->semanticErrorAtLocation (errorLocation, message COMMA_THERE) ;
      }
      macroDetachSharedObject (scanner) ;
    }else{
      C_String message ;
      message << "the '" << filePath << "' file does not exist" ;
      const GALGAS_location errorLocation (inFilePath.reader_location (THERE)) ;
      inCompiler->semanticErrorAtLocation (errorLocation, message COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::_performSourceStringParsing_ (C_Compiler * inCompiler,
                                GALGAS_string inSourceString,
                                GALGAS_pic_31__38_InterruptDefinitionList &  parameter_1,
                                GALGAS_pic_31__38_RoutineDefinitionList &  parameter_2,
                                GALGAS_lstringlist &  parameter_3,
                                GALGAS_lstringlist &  parameter_4,
                                GALGAS_ramDefinitionList &  parameter_5,
                                GALGAS_lstringlist &  parameter_6,
                                GALGAS_configDefinitionList &  parameter_7,
                                GALGAS_constantDefinitionList &  parameter_8,
                                GALGAS_checkpicList &  parameter_9,
                                GALGAS_dataList &  parameter_10,
                                GALGAS_bool &  parameter_11,
                                GALGAS_bool &  parameter_12
                                COMMA_UNUSED_LOCATION_ARGS) {
  C_Lexique_piccolo_5F_lexique * scanner = NULL ;
  macroMyNew (scanner, C_Lexique_piccolo_5F_lexique (inCompiler, inSourceString.stringValue (), "" COMMA_HERE)) ;
  if (scanner->sourceText () != NULL) {
    const bool ok = scanner->performBottomUpParsing (gActionTable_pic18_include_grammar, gNonTerminalNames_pic18_include_grammar,
                                                     gActionTableIndex_pic18_include_grammar, gSuccessorTable_pic18_include_grammar,
                                                     gProductionsTable_pic18_include_grammar) ;
    if (ok && ! executionModeIsSyntaxAnalysisOnly ()) {
      cGrammar_pic_31__38__5F_include_5F_grammar grammar ;
      grammar.nt_body_ (parameter_1, parameter_2, parameter_3, parameter_4, parameter_5, parameter_6, parameter_7, parameter_8, parameter_9, parameter_10, parameter_11, parameter_12, scanner) ;
      }
  }
  macroDetachSharedObject (scanner) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 'checkpic_definition' non terminal implementation                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_checkpic_5F_definition_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 1 :
      rule_pic_31__38__5F_syntax_checkpic_5F_definition_i1_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_checkpic_5F_definition_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 1 :
      rule_pic_31__38__5F_syntax_checkpic_5F_definition_i1_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_checkpic_5F_definition_ (GALGAS_checkpicList &  parameter_1,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 1 :
      rule_pic_31__38__5F_syntax_checkpic_5F_definition_i1_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'data_definition' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_data_5F_definition_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 2 :
      rule_pic_31__38__5F_syntax_data_5F_definition_i2_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_data_5F_definition_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 2 :
      rule_pic_31__38__5F_syntax_data_5F_definition_i2_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_data_5F_definition_ (GALGAS_dataList &  parameter_1,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 2 :
      rule_pic_31__38__5F_syntax_data_5F_definition_i2_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'instruction_list' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_instruction_5F_list_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 3 :
      rule_pic_31__38__5F_syntax_instruction_5F_list_i3_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_instruction_5F_list_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 3 :
      rule_pic_31__38__5F_syntax_instruction_5F_list_i3_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_instruction_5F_list_ (GALGAS_pic_31__38_InstructionList &  parameter_1,
                                GALGAS_bool &  parameter_2,
                                GALGAS_bool &  parameter_3,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 3 :
      rule_pic_31__38__5F_syntax_instruction_5F_list_i3_(parameter_1, parameter_2, parameter_3, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 'interrupt_definition' non terminal implementation                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_interrupt_5F_definition_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 4 :
      rule_pic_31__38__5F_syntax_interrupt_5F_definition_i4_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_interrupt_5F_definition_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 4 :
      rule_pic_31__38__5F_syntax_interrupt_5F_definition_i4_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_interrupt_5F_definition_ (GALGAS_pic_31__38_InterruptDefinitionList &  parameter_1,
                                GALGAS_bool &  parameter_2,
                                GALGAS_bool &  parameter_3,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 4 :
      rule_pic_31__38__5F_syntax_interrupt_5F_definition_i4_(parameter_1, parameter_2, parameter_3, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  'routine_definition' non terminal implementation                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_routine_5F_definition_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 5 :
      rule_pic_31__38__5F_syntax_routine_5F_definition_i5_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_routine_5F_definition_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 5 :
      rule_pic_31__38__5F_syntax_routine_5F_definition_i5_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_routine_5F_definition_ (GALGAS_pic_31__38_RoutineDefinitionList &  parameter_1,
                                GALGAS_bool &  parameter_2,
                                GALGAS_bool &  parameter_3,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 5 :
      rule_pic_31__38__5F_syntax_routine_5F_definition_i5_(parameter_1, parameter_2, parameter_3, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'condition_factor' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_condition_5F_factor_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 6 :
      rule_pic_31__38__5F_syntax_condition_5F_factor_i6_parse(inLexique) ;
    break ;
  case 7 :
      rule_pic_31__38__5F_syntax_condition_5F_factor_i7_parse(inLexique) ;
    break ;
  case 8 :
      rule_pic_31__38__5F_syntax_condition_5F_factor_i8_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_condition_5F_factor_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 6 :
      rule_pic_31__38__5F_syntax_condition_5F_factor_i6_indexing(inLexique) ;
    break ;
  case 7 :
      rule_pic_31__38__5F_syntax_condition_5F_factor_i7_indexing(inLexique) ;
    break ;
  case 8 :
      rule_pic_31__38__5F_syntax_condition_5F_factor_i8_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_condition_5F_factor_ (GALGAS_pic_31__38_ConditionExpression &  parameter_1,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 6 :
      rule_pic_31__38__5F_syntax_condition_5F_factor_i6_(parameter_1, inLexique) ;
    break ;
  case 7 :
      rule_pic_31__38__5F_syntax_condition_5F_factor_i7_(parameter_1, inLexique) ;
    break ;
  case 8 :
      rule_pic_31__38__5F_syntax_condition_5F_factor_i8_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 'condition_expression' non terminal implementation                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_condition_5F_expression_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 9 :
      rule_pic_31__38__5F_syntax_condition_5F_expression_i9_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_condition_5F_expression_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 9 :
      rule_pic_31__38__5F_syntax_condition_5F_expression_i9_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_condition_5F_expression_ (GALGAS_pic_31__38_ConditionExpression &  parameter_1,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 9 :
      rule_pic_31__38__5F_syntax_condition_5F_expression_i9_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    'condition_term' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_condition_5F_term_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 10 :
      rule_pic_31__38__5F_syntax_condition_5F_term_i10_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_condition_5F_term_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 10 :
      rule_pic_31__38__5F_syntax_condition_5F_term_i10_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_condition_5F_term_ (GALGAS_pic_31__38_ConditionExpression &  parameter_1,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 10 :
      rule_pic_31__38__5F_syntax_condition_5F_term_i10_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  'block_termination' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_block_5F_termination_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 11 :
      rule_pic_31__38__5F_syntax_block_5F_termination_i11_parse(inLexique) ;
    break ;
  case 12 :
      rule_pic_31__38__5F_syntax_block_5F_termination_i12_parse(inLexique) ;
    break ;
  case 13 :
      rule_pic_31__38__5F_syntax_block_5F_termination_i13_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_block_5F_termination_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 11 :
      rule_pic_31__38__5F_syntax_block_5F_termination_i11_indexing(inLexique) ;
    break ;
  case 12 :
      rule_pic_31__38__5F_syntax_block_5F_termination_i12_indexing(inLexique) ;
    break ;
  case 13 :
      rule_pic_31__38__5F_syntax_block_5F_termination_i13_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_block_5F_termination_ (GALGAS_abstractBlockTerminationForBlockInstruction &  parameter_1,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 11 :
      rule_pic_31__38__5F_syntax_block_5F_termination_i11_(parameter_1, inLexique) ;
    break ;
  case 12 :
      rule_pic_31__38__5F_syntax_block_5F_termination_i12_(parameter_1, inLexique) ;
    break ;
  case 13 :
      rule_pic_31__38__5F_syntax_block_5F_termination_i13_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                'structured_instruction' non terminal implementation                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_structured_5F_instruction_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 14 :
      rule_pic_31__38__5F_syntax_structured_5F_instruction_i14_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_structured_5F_instruction_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 14 :
      rule_pic_31__38__5F_syntax_structured_5F_instruction_i14_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_structured_5F_instruction_ (GALGAS_pic_31__38_PiccoloInstruction &  parameter_1,
                                GALGAS_bool &  parameter_2,
                                GALGAS_bool &  parameter_3,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 14 :
      rule_pic_31__38__5F_syntax_structured_5F_instruction_i14_(parameter_1, parameter_2, parameter_3, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              'structured_if_instruction' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_structured_5F_if_5F_instruction_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 15 :
      rule_pic_31__38__5F_syntax_structured_5F_if_5F_instruction_i15_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_structured_5F_if_5F_instruction_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 15 :
      rule_pic_31__38__5F_syntax_structured_5F_if_5F_instruction_i15_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_structured_5F_if_5F_instruction_ (GALGAS_pic_31__38_PiccoloInstruction &  parameter_1,
                                GALGAS_bool &  parameter_2,
                                GALGAS_bool &  parameter_3,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 15 :
      rule_pic_31__38__5F_syntax_structured_5F_if_5F_instruction_i15_(parameter_1, parameter_2, parameter_3, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  'simple_instruction' non terminal implementation                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_simple_5F_instruction_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 16 :
      rule_pic_31__38__5F_syntax_simple_5F_instruction_i16_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_simple_5F_instruction_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 16 :
      rule_pic_31__38__5F_syntax_simple_5F_instruction_i16_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_simple_5F_instruction_ (GALGAS_pic_31__38_PiccoloSimpleInstruction &  parameter_1,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 16 :
      rule_pic_31__38__5F_syntax_simple_5F_instruction_i16_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  'declaration_in_ram' non terminal implementation                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_declaration_5F_in_5F_ram_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 18 :
      rule_communs_declaration_5F_in_5F_ram_i1_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_declaration_5F_in_5F_ram_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 18 :
      rule_communs_declaration_5F_in_5F_ram_i1_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_declaration_5F_in_5F_ram_ (GALGAS_declarationInRam &  parameter_1,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 18 :
      rule_communs_declaration_5F_in_5F_ram_i1_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                'immediate_bitwise_term' non terminal implementation                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_immediate_5F_bitwise_5F_term_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 22 :
      rule_communs_immediate_5F_bitwise_5F_term_i5_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_immediate_5F_bitwise_5F_term_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 22 :
      rule_communs_immediate_5F_bitwise_5F_term_i5_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_immediate_5F_bitwise_5F_term_ (GALGAS_immediatExpression &  parameter_1,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 22 :
      rule_communs_immediate_5F_bitwise_5F_term_i5_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                               'immediate_bitwise_factor' non terminal implementation                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_immediate_5F_bitwise_5F_factor_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 23 :
      rule_communs_immediate_5F_bitwise_5F_factor_i6_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_immediate_5F_bitwise_5F_factor_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 23 :
      rule_communs_immediate_5F_bitwise_5F_factor_i6_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_immediate_5F_bitwise_5F_factor_ (GALGAS_immediatExpression &  parameter_1,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 23 :
      rule_communs_immediate_5F_bitwise_5F_factor_i6_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    'immediate_term' non terminal implementation                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_immediate_5F_term_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 24 :
      rule_communs_immediate_5F_term_i7_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_immediate_5F_term_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 24 :
      rule_communs_immediate_5F_term_i7_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_immediate_5F_term_ (GALGAS_immediatExpression &  parameter_1,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 24 :
      rule_communs_immediate_5F_term_i7_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'immediate_factor' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_immediate_5F_factor_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 25 :
      rule_communs_immediate_5F_factor_i8_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_immediate_5F_factor_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 25 :
      rule_communs_immediate_5F_factor_i8_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_immediate_5F_factor_ (GALGAS_immediatExpression &  parameter_1,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 25 :
      rule_communs_immediate_5F_factor_i8_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  'immediate_primary' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_immediate_5F_primary_parse (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 26 :
      rule_communs_immediate_5F_primary_i9_parse(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_immediate_5F_primary_indexing (C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 26 :
      rule_communs_immediate_5F_primary_i9_indexing(inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
    break ;
  }
}

void cGrammar_pic_31__38__5F_include_5F_grammar::nt_immediate_5F_primary_ (GALGAS_immediatExpression &  parameter_1,
                                C_Lexique_piccolo_5F_lexique * inLexique) {
  switch (inLexique->nextProductionIndex ()) {
  case 26 :
      rule_communs_immediate_5F_primary_i9_(parameter_1, inLexique) ;
    break ;
  default :
    inLexique->internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_pic_31__38__5F_syntax_0' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_0 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 31 32 33 34 35 36 37 38 39 40 41 42 43
  return inLexique->nextProductionIndex () - 30 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_pic_31__38__5F_syntax_1' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_1 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 44 45
  return inLexique->nextProductionIndex () - 43 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_pic_31__38__5F_syntax_2' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_2 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 46 47
  return inLexique->nextProductionIndex () - 45 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_pic_31__38__5F_syntax_3' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_3 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 48 49
  return inLexique->nextProductionIndex () - 47 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_pic_31__38__5F_syntax_4' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_4 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 50 51
  return inLexique->nextProductionIndex () - 49 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_pic_31__38__5F_syntax_5' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_5 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 52 53
  return inLexique->nextProductionIndex () - 51 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_pic_31__38__5F_syntax_6' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_6 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 54 55 56
  return inLexique->nextProductionIndex () - 53 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_pic_31__38__5F_syntax_7' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_7 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 57 58
  return inLexique->nextProductionIndex () - 56 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_pic_31__38__5F_syntax_8' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_8 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 59 60
  return inLexique->nextProductionIndex () - 58 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            'select_pic_31__38__5F_syntax_9' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_9 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 61 62
  return inLexique->nextProductionIndex () - 60 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_10' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_10 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 63 64 65
  return inLexique->nextProductionIndex () - 62 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_11' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_11 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 66 67
  return inLexique->nextProductionIndex () - 65 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_12' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_12 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 68 69 70 71 72
  return inLexique->nextProductionIndex () - 67 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_13' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_13 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 73 74
  return inLexique->nextProductionIndex () - 72 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_14' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_14 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 75 76
  return inLexique->nextProductionIndex () - 74 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_15' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_15 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 77 78 79 80 81 82
  return inLexique->nextProductionIndex () - 76 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_16' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_16 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 83 84
  return inLexique->nextProductionIndex () - 82 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_17' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_17 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 85 86
  return inLexique->nextProductionIndex () - 84 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_18' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_18 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 87 88
  return inLexique->nextProductionIndex () - 86 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_19' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_19 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112
  return inLexique->nextProductionIndex () - 88 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_20' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_20 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 113 114
  return inLexique->nextProductionIndex () - 112 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_21' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_21 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 115 116
  return inLexique->nextProductionIndex () - 114 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_22' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_22 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 117 118
  return inLexique->nextProductionIndex () - 116 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_23' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_23 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 119 120
  return inLexique->nextProductionIndex () - 118 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_24' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_24 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 121 122
  return inLexique->nextProductionIndex () - 120 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_25' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_25 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 123 124
  return inLexique->nextProductionIndex () - 122 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_26' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_26 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 125 126
  return inLexique->nextProductionIndex () - 124 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_27' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_27 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 127 128 129 130
  return inLexique->nextProductionIndex () - 126 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_28' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_28 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 131 132
  return inLexique->nextProductionIndex () - 130 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_29' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_29 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 133 134
  return inLexique->nextProductionIndex () - 132 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_30' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_30 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 135 136
  return inLexique->nextProductionIndex () - 134 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_31' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_31 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 137 138
  return inLexique->nextProductionIndex () - 136 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_32' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_32 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 139 140 141 142
  return inLexique->nextProductionIndex () - 138 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_33' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_33 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 143 144
  return inLexique->nextProductionIndex () - 142 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_34' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_34 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 145 146
  return inLexique->nextProductionIndex () - 144 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_35' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_35 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 147 148
  return inLexique->nextProductionIndex () - 146 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_36' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_36 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 149 150
  return inLexique->nextProductionIndex () - 148 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_37' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_37 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 151 152
  return inLexique->nextProductionIndex () - 150 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_38' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_38 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 153 154 155 156 157 158 159 160
  return inLexique->nextProductionIndex () - 152 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_39' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_39 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 161 162 163
  return inLexique->nextProductionIndex () - 160 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_40' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_40 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182
  return inLexique->nextProductionIndex () - 163 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_41' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_41 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199
  return inLexique->nextProductionIndex () - 182 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_42' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_42 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 200 201 202 203 204
  return inLexique->nextProductionIndex () - 199 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_43' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_43 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 205 206 207
  return inLexique->nextProductionIndex () - 204 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_44' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_44 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 208 209 210 211 212 213 214
  return inLexique->nextProductionIndex () - 207 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_45' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_45 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 215 216 217 218
  return inLexique->nextProductionIndex () - 214 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           'select_pic_31__38__5F_syntax_46' non terminal implementation                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_pic_31__38__5F_syntax_46 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 219 220 221 222
  return inLexique->nextProductionIndex () - 218 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'select_communs_0' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_communs_0 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 223 224
  return inLexique->nextProductionIndex () - 222 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'select_communs_1' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_communs_1 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 225 226
  return inLexique->nextProductionIndex () - 224 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'select_communs_2' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_communs_2 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 227 228
  return inLexique->nextProductionIndex () - 226 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'select_communs_3' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_communs_3 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 229 230
  return inLexique->nextProductionIndex () - 228 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'select_communs_4' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_communs_4 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 231 232
  return inLexique->nextProductionIndex () - 230 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'select_communs_5' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_communs_5 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 233 234
  return inLexique->nextProductionIndex () - 232 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'select_communs_6' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_communs_6 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 235 236
  return inLexique->nextProductionIndex () - 234 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'select_communs_7' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_communs_7 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 237 238
  return inLexique->nextProductionIndex () - 236 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'select_communs_8' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_communs_8 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 239 240
  return inLexique->nextProductionIndex () - 238 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   'select_communs_9' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_communs_9 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 241 242 243
  return inLexique->nextProductionIndex () - 240 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  'select_communs_10' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_communs_10 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 244 245
  return inLexique->nextProductionIndex () - 243 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  'select_communs_11' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_communs_11 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 246 247 248 249 250 251 252
  return inLexique->nextProductionIndex () - 245 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  'select_communs_12' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_communs_12 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 253 254 255 256 257
  return inLexique->nextProductionIndex () - 252 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  'select_communs_13' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_communs_13 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 258 259 260 261
  return inLexique->nextProductionIndex () - 257 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  'select_communs_14' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_communs_14 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 262 263 264 265 266 267 268
  return inLexique->nextProductionIndex () - 261 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  'select_communs_15' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_communs_15 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 269 270
  return inLexique->nextProductionIndex () - 268 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  'select_communs_16' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_communs_16 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 271 272
  return inLexique->nextProductionIndex () - 270 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  'select_communs_17' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_communs_17 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 273 274
  return inLexique->nextProductionIndex () - 272 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  'select_communs_18' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_communs_18 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 275 276
  return inLexique->nextProductionIndex () - 274 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  'select_communs_19' non terminal implementation                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int32_t cGrammar_pic_31__38__5F_include_5F_grammar::select_communs_19 (C_Lexique_piccolo_5F_lexique * inLexique) {
// Productions numbers : 277 278
  return inLexique->nextProductionIndex () - 276 ;
}

//---------------------------------------------------------------------------------------------------------------------*

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_pic_31__38__5F_dataMap::cMapElement_pic_31__38__5F_dataMap (const GALGAS_lstring & inKey,
                                                                        const GALGAS_uintlist & in_mData
                                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mData (in_mData) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_pic_31__38__5F_dataMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mData.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_pic_31__38__5F_dataMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_pic_31__38__5F_dataMap (mAttribute_lkey, mAttribute_mData COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_pic_31__38__5F_dataMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mData" ":" ;
  mAttribute_mData.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_pic_31__38__5F_dataMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_pic_31__38__5F_dataMap * operand = (cMapElement_pic_31__38__5F_dataMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mData.objectCompare (operand->mAttribute_mData) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38__5F_dataMap::GALGAS_pic_31__38__5F_dataMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38__5F_dataMap::GALGAS_pic_31__38__5F_dataMap (const GALGAS_pic_31__38__5F_dataMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38__5F_dataMap & GALGAS_pic_31__38__5F_dataMap::operator = (const GALGAS_pic_31__38__5F_dataMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38__5F_dataMap GALGAS_pic_31__38__5F_dataMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_pic_31__38__5F_dataMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38__5F_dataMap GALGAS_pic_31__38__5F_dataMap::constructor_mapWithMapToOverride (const GALGAS_pic_31__38__5F_dataMap & inMapToOverride
                                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_pic_31__38__5F_dataMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38__5F_dataMap GALGAS_pic_31__38__5F_dataMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_pic_31__38__5F_dataMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38__5F_dataMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                         const GALGAS_uintlist & inArgument0,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cMapElement_pic_31__38__5F_dataMap * p = NULL ;
  macroMyNew (p, cMapElement_pic_31__38__5F_dataMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@pic_31__38__5F_dataMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38__5F_dataMap::modifier_insertKey (GALGAS_lstring inKey,
                                                        GALGAS_uintlist inArgument0,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cMapElement_pic_31__38__5F_dataMap * p = NULL ;
  macroMyNew (p, cMapElement_pic_31__38__5F_dataMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' data is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_pic_31__38__5F_dataMap_searchKey = "the '%K' data is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38__5F_dataMap::method_searchKey (GALGAS_lstring inKey,
                                                      GALGAS_uintlist & outArgument0,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) const {
  const cMapElement_pic_31__38__5F_dataMap * p = (const cMapElement_pic_31__38__5F_dataMap *) performSearch (inKey,
                                                                                                               inCompiler,
                                                                                                               kSearchErrorMessage_pic_31__38__5F_dataMap_searchKey
                                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_pic_31__38__5F_dataMap) ;
    outArgument0 = p->mAttribute_mData ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uintlist GALGAS_pic_31__38__5F_dataMap::reader_mDataForKey (const GALGAS_string & inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_pic_31__38__5F_dataMap * p = (const cMapElement_pic_31__38__5F_dataMap *) attributes ;
  GALGAS_uintlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_pic_31__38__5F_dataMap) ;
    result = p->mAttribute_mData ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38__5F_dataMap::modifier_setMDataForKey (GALGAS_uintlist inAttributeValue,
                                                             GALGAS_string inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_pic_31__38__5F_dataMap * p = (cMapElement_pic_31__38__5F_dataMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_pic_31__38__5F_dataMap) ;
    p->mAttribute_mData = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_pic_31__38__5F_dataMap * GALGAS_pic_31__38__5F_dataMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                       const GALGAS_string & inKey
                                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_pic_31__38__5F_dataMap * result = (cMapElement_pic_31__38__5F_dataMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_pic_31__38__5F_dataMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_pic_31__38__5F_dataMap::cEnumerator_pic_31__38__5F_dataMap (const GALGAS_pic_31__38__5F_dataMap & inEnumeratedObject,
                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38__5F_dataMap_2D_element cEnumerator_pic_31__38__5F_dataMap::current (LOCATION_ARGS) const {
  const cMapElement_pic_31__38__5F_dataMap * p = (const cMapElement_pic_31__38__5F_dataMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_pic_31__38__5F_dataMap) ;
  return GALGAS_pic_31__38__5F_dataMap_2D_element (p->mAttribute_lkey, p->mAttribute_mData) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_pic_31__38__5F_dataMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uintlist cEnumerator_pic_31__38__5F_dataMap::current_mData (LOCATION_ARGS) const {
  const cMapElement_pic_31__38__5F_dataMap * p = (const cMapElement_pic_31__38__5F_dataMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_pic_31__38__5F_dataMap) ;
  return p->mAttribute_mData ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                 @pic18_dataMap type                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_pic_31__38__5F_dataMap ("pic18_dataMap",
                                               NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_pic_31__38__5F_dataMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_pic_31__38__5F_dataMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_pic_31__38__5F_dataMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_pic_31__38__5F_dataMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38__5F_dataMap GALGAS_pic_31__38__5F_dataMap::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_pic_31__38__5F_dataMap result ;
  const GALGAS_pic_31__38__5F_dataMap * p = (const GALGAS_pic_31__38__5F_dataMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_pic_31__38__5F_dataMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("pic18_dataMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                         Class for element of '@ipic_31__38_SequentialInstructionList' list                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_ipic_31__38_SequentialInstructionList : public cCollectionElement {
  public : GALGAS_ipic_31__38_SequentialInstructionList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_ipic_31__38_SequentialInstructionList (const GALGAS_ipic_31__38_SequentialInstruction & in_mInstruction
                                                                     COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_ipic_31__38_SequentialInstructionList::cCollectionElement_ipic_31__38_SequentialInstructionList (const GALGAS_ipic_31__38_SequentialInstruction & in_mInstruction
                                                                                                                    COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mInstruction) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_ipic_31__38_SequentialInstructionList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_ipic_31__38_SequentialInstructionList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_ipic_31__38_SequentialInstructionList (mObject.mAttribute_mInstruction COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_ipic_31__38_SequentialInstructionList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstruction" ":" ;
  mObject.mAttribute_mInstruction.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_ipic_31__38_SequentialInstructionList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_ipic_31__38_SequentialInstructionList * operand = (cCollectionElement_ipic_31__38_SequentialInstructionList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_ipic_31__38_SequentialInstructionList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_SequentialInstructionList::GALGAS_ipic_31__38_SequentialInstructionList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_SequentialInstructionList::GALGAS_ipic_31__38_SequentialInstructionList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_SequentialInstructionList GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_ipic_31__38_SequentialInstructionList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_SequentialInstructionList GALGAS_ipic_31__38_SequentialInstructionList::constructor_listWithValue (const GALGAS_ipic_31__38_SequentialInstruction & inOperand0
                                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_ipic_31__38_SequentialInstructionList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_ipic_31__38_SequentialInstructionList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ipic_31__38_SequentialInstructionList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                              const GALGAS_ipic_31__38_SequentialInstruction & in_mInstruction
                                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement_ipic_31__38_SequentialInstructionList * p = NULL ;
  macroMyNew (p, cCollectionElement_ipic_31__38_SequentialInstructionList (in_mInstruction COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ipic_31__38_SequentialInstructionList::addAssign_operation (const GALGAS_ipic_31__38_SequentialInstruction & inOperand0
                                                                        COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_ipic_31__38_SequentialInstructionList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ipic_31__38_SequentialInstructionList::modifier_insertAtIndex (const GALGAS_ipic_31__38_SequentialInstruction inOperand0,
                                                                           const GALGAS_uint inInsertionIndex,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_ipic_31__38_SequentialInstructionList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ipic_31__38_SequentialInstructionList::modifier_removeAtIndex (GALGAS_ipic_31__38_SequentialInstruction & outOperand0,
                                                                           const GALGAS_uint inRemoveIndex,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_ipic_31__38_SequentialInstructionList * p = (cCollectionElement_ipic_31__38_SequentialInstructionList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_ipic_31__38_SequentialInstructionList) ;
      outOperand0 = p->mObject.mAttribute_mInstruction ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ipic_31__38_SequentialInstructionList::modifier_popFirst (GALGAS_ipic_31__38_SequentialInstruction & outOperand0,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ipic_31__38_SequentialInstructionList * p = (cCollectionElement_ipic_31__38_SequentialInstructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ipic_31__38_SequentialInstructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ipic_31__38_SequentialInstructionList::modifier_popLast (GALGAS_ipic_31__38_SequentialInstruction & outOperand0,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ipic_31__38_SequentialInstructionList * p = (cCollectionElement_ipic_31__38_SequentialInstructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ipic_31__38_SequentialInstructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ipic_31__38_SequentialInstructionList::method_first (GALGAS_ipic_31__38_SequentialInstruction & outOperand0,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ipic_31__38_SequentialInstructionList * p = (cCollectionElement_ipic_31__38_SequentialInstructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ipic_31__38_SequentialInstructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ipic_31__38_SequentialInstructionList::method_last (GALGAS_ipic_31__38_SequentialInstruction & outOperand0,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ipic_31__38_SequentialInstructionList * p = (cCollectionElement_ipic_31__38_SequentialInstructionList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ipic_31__38_SequentialInstructionList) ;
    outOperand0 = p->mObject.mAttribute_mInstruction ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_SequentialInstructionList GALGAS_ipic_31__38_SequentialInstructionList::operator_concat (const GALGAS_ipic_31__38_SequentialInstructionList & inOperand
                                                                                                            COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_ipic_31__38_SequentialInstructionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_SequentialInstructionList GALGAS_ipic_31__38_SequentialInstructionList::add_operation (const GALGAS_ipic_31__38_SequentialInstructionList & inOperand,
                                                                                                          C_Compiler * /* inCompiler */
                                                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_ipic_31__38_SequentialInstructionList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_SequentialInstructionList GALGAS_ipic_31__38_SequentialInstructionList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                                    C_Compiler * inCompiler
                                                                                                                    COMMA_LOCATION_ARGS) const {
  GALGAS_ipic_31__38_SequentialInstructionList result = GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_SequentialInstructionList GALGAS_ipic_31__38_SequentialInstructionList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                                    C_Compiler * inCompiler
                                                                                                                    COMMA_LOCATION_ARGS) const {
  GALGAS_ipic_31__38_SequentialInstructionList result = GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ipic_31__38_SequentialInstructionList::dotAssign_operation (const GALGAS_ipic_31__38_SequentialInstructionList inOperand
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_SequentialInstruction GALGAS_ipic_31__38_SequentialInstructionList::reader_mInstructionAtIndex (const GALGAS_uint & inIndex,
                                                                                                                   C_Compiler * inCompiler
                                                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ipic_31__38_SequentialInstructionList * p = (cCollectionElement_ipic_31__38_SequentialInstructionList *) attributes.ptr () ;
  GALGAS_ipic_31__38_SequentialInstruction result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ipic_31__38_SequentialInstructionList) ;
    result = p->mObject.mAttribute_mInstruction ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_ipic_31__38_SequentialInstructionList::cEnumerator_ipic_31__38_SequentialInstructionList (const GALGAS_ipic_31__38_SequentialInstructionList & inEnumeratedObject,
                                                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_SequentialInstructionList_2D_element cEnumerator_ipic_31__38_SequentialInstructionList::current (LOCATION_ARGS) const {
  const cCollectionElement_ipic_31__38_SequentialInstructionList * p = (const cCollectionElement_ipic_31__38_SequentialInstructionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_ipic_31__38_SequentialInstructionList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_SequentialInstruction cEnumerator_ipic_31__38_SequentialInstructionList::current_mInstruction (LOCATION_ARGS) const {
  const cCollectionElement_ipic_31__38_SequentialInstructionList * p = (const cCollectionElement_ipic_31__38_SequentialInstructionList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_ipic_31__38_SequentialInstructionList) ;
  return p->mObject.mAttribute_mInstruction ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        @ipic18SequentialInstructionList type                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_ipic_31__38_SequentialInstructionList ("ipic18SequentialInstructionList",
                                                              NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_ipic_31__38_SequentialInstructionList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_ipic_31__38_SequentialInstructionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_ipic_31__38_SequentialInstructionList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_ipic_31__38_SequentialInstructionList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_SequentialInstructionList GALGAS_ipic_31__38_SequentialInstructionList::extractObject (const GALGAS_object & inObject,
                                                                                                          C_Compiler * inCompiler
                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_ipic_31__38_SequentialInstructionList result ;
  const GALGAS_ipic_31__38_SequentialInstructionList * p = (const GALGAS_ipic_31__38_SequentialInstructionList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_ipic_31__38_SequentialInstructionList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("ipic18SequentialInstructionList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 Class for element of '@ipic_31__38_BlockList' list                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_ipic_31__38_BlockList : public cCollectionElement {
  public : GALGAS_ipic_31__38_BlockList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_ipic_31__38_BlockList (const GALGAS_ipic_31__38_Block & in_mBlock
                                                     COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_ipic_31__38_BlockList::cCollectionElement_ipic_31__38_BlockList (const GALGAS_ipic_31__38_Block & in_mBlock
                                                                                    COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mBlock) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_ipic_31__38_BlockList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_ipic_31__38_BlockList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_ipic_31__38_BlockList (mObject.mAttribute_mBlock COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_ipic_31__38_BlockList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBlock" ":" ;
  mObject.mAttribute_mBlock.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_ipic_31__38_BlockList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_ipic_31__38_BlockList * operand = (cCollectionElement_ipic_31__38_BlockList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_ipic_31__38_BlockList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_BlockList::GALGAS_ipic_31__38_BlockList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_BlockList::GALGAS_ipic_31__38_BlockList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_BlockList GALGAS_ipic_31__38_BlockList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_ipic_31__38_BlockList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_BlockList GALGAS_ipic_31__38_BlockList::constructor_listWithValue (const GALGAS_ipic_31__38_Block & inOperand0
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_ipic_31__38_BlockList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_ipic_31__38_BlockList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ipic_31__38_BlockList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                              const GALGAS_ipic_31__38_Block & in_mBlock
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement_ipic_31__38_BlockList * p = NULL ;
  macroMyNew (p, cCollectionElement_ipic_31__38_BlockList (in_mBlock COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ipic_31__38_BlockList::addAssign_operation (const GALGAS_ipic_31__38_Block & inOperand0
                                                        COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_ipic_31__38_BlockList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ipic_31__38_BlockList::modifier_insertAtIndex (const GALGAS_ipic_31__38_Block inOperand0,
                                                           const GALGAS_uint inInsertionIndex,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_ipic_31__38_BlockList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ipic_31__38_BlockList::modifier_removeAtIndex (GALGAS_ipic_31__38_Block & outOperand0,
                                                           const GALGAS_uint inRemoveIndex,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_ipic_31__38_BlockList * p = (cCollectionElement_ipic_31__38_BlockList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_ipic_31__38_BlockList) ;
      outOperand0 = p->mObject.mAttribute_mBlock ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ipic_31__38_BlockList::modifier_popFirst (GALGAS_ipic_31__38_Block & outOperand0,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ipic_31__38_BlockList * p = (cCollectionElement_ipic_31__38_BlockList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ipic_31__38_BlockList) ;
    outOperand0 = p->mObject.mAttribute_mBlock ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ipic_31__38_BlockList::modifier_popLast (GALGAS_ipic_31__38_Block & outOperand0,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ipic_31__38_BlockList * p = (cCollectionElement_ipic_31__38_BlockList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ipic_31__38_BlockList) ;
    outOperand0 = p->mObject.mAttribute_mBlock ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ipic_31__38_BlockList::method_first (GALGAS_ipic_31__38_Block & outOperand0,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ipic_31__38_BlockList * p = (cCollectionElement_ipic_31__38_BlockList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ipic_31__38_BlockList) ;
    outOperand0 = p->mObject.mAttribute_mBlock ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ipic_31__38_BlockList::method_last (GALGAS_ipic_31__38_Block & outOperand0,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ipic_31__38_BlockList * p = (cCollectionElement_ipic_31__38_BlockList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ipic_31__38_BlockList) ;
    outOperand0 = p->mObject.mAttribute_mBlock ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_BlockList GALGAS_ipic_31__38_BlockList::operator_concat (const GALGAS_ipic_31__38_BlockList & inOperand
                                                                            COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_ipic_31__38_BlockList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_BlockList GALGAS_ipic_31__38_BlockList::add_operation (const GALGAS_ipic_31__38_BlockList & inOperand,
                                                                          C_Compiler * /* inCompiler */
                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_ipic_31__38_BlockList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_BlockList GALGAS_ipic_31__38_BlockList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  GALGAS_ipic_31__38_BlockList result = GALGAS_ipic_31__38_BlockList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_BlockList GALGAS_ipic_31__38_BlockList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  GALGAS_ipic_31__38_BlockList result = GALGAS_ipic_31__38_BlockList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ipic_31__38_BlockList::dotAssign_operation (const GALGAS_ipic_31__38_BlockList inOperand
                                                        COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_Block GALGAS_ipic_31__38_BlockList::reader_mBlockAtIndex (const GALGAS_uint & inIndex,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ipic_31__38_BlockList * p = (cCollectionElement_ipic_31__38_BlockList *) attributes.ptr () ;
  GALGAS_ipic_31__38_Block result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ipic_31__38_BlockList) ;
    result = p->mObject.mAttribute_mBlock ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_ipic_31__38_BlockList::cEnumerator_ipic_31__38_BlockList (const GALGAS_ipic_31__38_BlockList & inEnumeratedObject,
                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_BlockList_2D_element cEnumerator_ipic_31__38_BlockList::current (LOCATION_ARGS) const {
  const cCollectionElement_ipic_31__38_BlockList * p = (const cCollectionElement_ipic_31__38_BlockList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_ipic_31__38_BlockList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_Block cEnumerator_ipic_31__38_BlockList::current_mBlock (LOCATION_ARGS) const {
  const cCollectionElement_ipic_31__38_BlockList * p = (const cCollectionElement_ipic_31__38_BlockList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_ipic_31__38_BlockList) ;
  return p->mObject.mAttribute_mBlock ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @ipic18BlockList type                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_ipic_31__38_BlockList ("ipic18BlockList",
                                              NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_ipic_31__38_BlockList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_ipic_31__38_BlockList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_ipic_31__38_BlockList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_ipic_31__38_BlockList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_BlockList GALGAS_ipic_31__38_BlockList::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_ipic_31__38_BlockList result ;
  const GALGAS_ipic_31__38_BlockList * p = (const GALGAS_ipic_31__38_BlockList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_ipic_31__38_BlockList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("ipic18BlockList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_conditionalBranchMode::GALGAS_conditionalBranchMode (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_conditionalBranchMode GALGAS_conditionalBranchMode::constructor_native (UNUSED_LOCATION_ARGS) {
  GALGAS_conditionalBranchMode result ;
  result.mEnum = kEnum_native ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_conditionalBranchMode GALGAS_conditionalBranchMode::constructor_ipicBRA (UNUSED_LOCATION_ARGS) {
  GALGAS_conditionalBranchMode result ;
  result.mEnum = kEnum_ipicBRA ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_conditionalBranchMode GALGAS_conditionalBranchMode::constructor_ipicGOTO (UNUSED_LOCATION_ARGS) {
  GALGAS_conditionalBranchMode result ;
  result.mEnum = kEnum_ipicGOTO ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_conditionalBranchMode [4] = {
  "(not built)",
  "native",
  "ipicBRA",
  "ipicGOTO"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_conditionalBranchMode::reader_isNative (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_native == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_conditionalBranchMode::reader_isIpicBRA (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_ipicBRA == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_conditionalBranchMode::reader_isIpicGOTO (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_ipicGOTO == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_conditionalBranchMode::description (C_String & ioString,
                                                const int32_t /* inIndentation */) const {
  ioString << "<enum @conditionalBranchMode: " << gEnumNameArrayFor_conditionalBranchMode [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_conditionalBranchMode::objectCompare (const GALGAS_conditionalBranchMode & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @conditionalBranchMode type                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_conditionalBranchMode ("conditionalBranchMode",
                                              NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_conditionalBranchMode::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_conditionalBranchMode ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_conditionalBranchMode::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_conditionalBranchMode (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_conditionalBranchMode GALGAS_conditionalBranchMode::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_conditionalBranchMode result ;
  const GALGAS_conditionalBranchMode * p = (const GALGAS_conditionalBranchMode *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_conditionalBranchMode *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("conditionalBranchMode", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_RegisterComparison::GALGAS_ipic_31__38_RegisterComparison (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_RegisterComparison GALGAS_ipic_31__38_RegisterComparison::constructor_registerEqualsToW (UNUSED_LOCATION_ARGS) {
  GALGAS_ipic_31__38_RegisterComparison result ;
  result.mEnum = kEnum_registerEqualsToW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_RegisterComparison GALGAS_ipic_31__38_RegisterComparison::constructor_registerGreaterThanW (UNUSED_LOCATION_ARGS) {
  GALGAS_ipic_31__38_RegisterComparison result ;
  result.mEnum = kEnum_registerGreaterThanW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_RegisterComparison GALGAS_ipic_31__38_RegisterComparison::constructor_registerLowerThanW (UNUSED_LOCATION_ARGS) {
  GALGAS_ipic_31__38_RegisterComparison result ;
  result.mEnum = kEnum_registerLowerThanW ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_ipic_31__38_RegisterComparison [4] = {
  "(not built)",
  "registerEqualsToW",
  "registerGreaterThanW",
  "registerLowerThanW"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_ipic_31__38_RegisterComparison::reader_isRegisterEqualsToW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_registerEqualsToW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_ipic_31__38_RegisterComparison::reader_isRegisterGreaterThanW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_registerGreaterThanW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_ipic_31__38_RegisterComparison::reader_isRegisterLowerThanW (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_registerLowerThanW == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ipic_31__38_RegisterComparison::description (C_String & ioString,
                                                         const int32_t /* inIndentation */) const {
  ioString << "<enum @ipic18RegisterComparison: " << gEnumNameArrayFor_ipic_31__38_RegisterComparison [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_ipic_31__38_RegisterComparison::objectCompare (const GALGAS_ipic_31__38_RegisterComparison & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @ipic18RegisterComparison type                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_ipic_31__38_RegisterComparison ("ipic18RegisterComparison",
                                                       NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_ipic_31__38_RegisterComparison::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_ipic_31__38_RegisterComparison ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_ipic_31__38_RegisterComparison::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_ipic_31__38_RegisterComparison (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_RegisterComparison GALGAS_ipic_31__38_RegisterComparison::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_ipic_31__38_RegisterComparison result ;
  const GALGAS_ipic_31__38_RegisterComparison * p = (const GALGAS_ipic_31__38_RegisterComparison *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_ipic_31__38_RegisterComparison *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("ipic18RegisterComparison", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::constructor_CLRF (UNUSED_LOCATION_ARGS) {
  GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code result ;
  result.mEnum = kEnum_CLRF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::constructor_MOVWF (UNUSED_LOCATION_ARGS) {
  GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code result ;
  result.mEnum = kEnum_MOVWF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::constructor_MULWF (UNUSED_LOCATION_ARGS) {
  GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code result ;
  result.mEnum = kEnum_MULWF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::constructor_NEGF (UNUSED_LOCATION_ARGS) {
  GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code result ;
  result.mEnum = kEnum_NEGF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::constructor_SETF (UNUSED_LOCATION_ARGS) {
  GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code result ;
  result.mEnum = kEnum_SETF ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_FA_5F_sequential_5F_instruction_5F_base_5F_code [6] = {
  "(not built)",
  "CLRF",
  "MOVWF",
  "MULWF",
  "NEGF",
  "SETF"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::reader_isCLRF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_CLRF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::reader_isMOVWF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_MOVWF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::reader_isMULWF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_MULWF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::reader_isNEGF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_NEGF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::reader_isSETF (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_SETF == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::description (C_String & ioString,
                                                                          const int32_t /* inIndentation */) const {
  ioString << "<enum @FA_sequential_instruction_base_code: " << gEnumNameArrayFor_FA_5F_sequential_5F_instruction_5F_base_5F_code [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::objectCompare (const GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      @FA_sequential_instruction_base_code type                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code ("FA_sequential_instruction_base_code",
                                                                        NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::extractObject (const GALGAS_object & inObject,
                                                                                                                              C_Compiler * inCompiler
                                                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code result ;
  const GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code * p = (const GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("FA_sequential_instruction_base_code", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code::GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code::constructor_CPFSEQ (UNUSED_LOCATION_ARGS) {
  GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code result ;
  result.mEnum = kEnum_CPFSEQ ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code::constructor_CPFSGT (UNUSED_LOCATION_ARGS) {
  GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code result ;
  result.mEnum = kEnum_CPFSGT ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code::constructor_CPFSLT (UNUSED_LOCATION_ARGS) {
  GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code result ;
  result.mEnum = kEnum_CPFSLT ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code::constructor_TSTFSZ (UNUSED_LOCATION_ARGS) {
  GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code result ;
  result.mEnum = kEnum_TSTFSZ ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code [5] = {
  "(not built)",
  "CPFSEQ",
  "CPFSGT",
  "CPFSLT",
  "TSTFSZ"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code::reader_isCPFSEQ (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_CPFSEQ == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code::reader_isCPFSGT (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_CPFSGT == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code::reader_isCPFSLT (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_CPFSLT == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code::reader_isTSTFSZ (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_TSTFSZ == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code::description (C_String & ioString,
                                                                                             const int32_t /* inIndentation */) const {
  ioString << "<enum @ipic18_compare_register_instruction_base_code: " << gEnumNameArrayFor_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code::objectCompare (const GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 @ipic18_compare_register_instruction_base_code type                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code ("ipic18_compare_register_instruction_base_code",
                                                                                           NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code::extractObject (const GALGAS_object & inObject,
                                                                                                                                                                    C_Compiler * inCompiler
                                                                                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code result ;
  const GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code * p = (const GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("ipic18_compare_register_instruction_base_code", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code::GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code::constructor_DECFSZ (UNUSED_LOCATION_ARGS) {
  GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code result ;
  result.mEnum = kEnum_DECFSZ ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code::constructor_DCFSNZ (UNUSED_LOCATION_ARGS) {
  GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code result ;
  result.mEnum = kEnum_DCFSNZ ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code::constructor_INCFSZ (UNUSED_LOCATION_ARGS) {
  GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code result ;
  result.mEnum = kEnum_INCFSZ ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code::constructor_INFSNZ (UNUSED_LOCATION_ARGS) {
  GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code result ;
  result.mEnum = kEnum_INFSNZ ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_skip_5F_instruction_5F_FDA_5F_base_5F_code [5] = {
  "(not built)",
  "DECFSZ",
  "DCFSNZ",
  "INCFSZ",
  "INFSNZ"
} ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code::reader_isDECFSZ (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_DECFSZ == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code::reader_isDCFSNZ (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_DCFSNZ == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code::reader_isINCFSZ (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_INCFSZ == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code::reader_isINFSNZ (UNUSED_LOCATION_ARGS) const {
  return GALGAS_bool (kNotBuilt != mEnum, kEnum_INFSNZ == mEnum) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code::description (C_String & ioString,
                                                                     const int32_t /* inIndentation */) const {
  ioString << "<enum @skip_instruction_FDA_base_code: " << gEnumNameArrayFor_skip_5F_instruction_5F_FDA_5F_base_5F_code [mEnum] ;
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code::objectCompare (const GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        @skip_instruction_FDA_base_code type                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code ("skip_instruction_FDA_base_code",
                                                                   NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code::extractObject (const GALGAS_object & inObject,
                                                                                                                    C_Compiler * inCompiler
                                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code result ;
  const GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code * p = (const GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("skip_instruction_FDA_base_code", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_symbolTableForBlockOptimization::cMapElement_symbolTableForBlockOptimization (const GALGAS_lstring & inKey,
                                                                                          const GALGAS_uint & in_mDefinitionBlockIndex
                                                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mDefinitionBlockIndex (in_mDefinitionBlockIndex) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_symbolTableForBlockOptimization::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mDefinitionBlockIndex.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_symbolTableForBlockOptimization::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_symbolTableForBlockOptimization (mAttribute_lkey, mAttribute_mDefinitionBlockIndex COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_symbolTableForBlockOptimization::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDefinitionBlockIndex" ":" ;
  mAttribute_mDefinitionBlockIndex.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_symbolTableForBlockOptimization::compare (const cCollectionElement * inOperand) const {
  cMapElement_symbolTableForBlockOptimization * operand = (cMapElement_symbolTableForBlockOptimization *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mDefinitionBlockIndex.objectCompare (operand->mAttribute_mDefinitionBlockIndex) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForBlockOptimization::GALGAS_symbolTableForBlockOptimization (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForBlockOptimization::GALGAS_symbolTableForBlockOptimization (const GALGAS_symbolTableForBlockOptimization & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForBlockOptimization & GALGAS_symbolTableForBlockOptimization::operator = (const GALGAS_symbolTableForBlockOptimization & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForBlockOptimization GALGAS_symbolTableForBlockOptimization::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_symbolTableForBlockOptimization result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForBlockOptimization GALGAS_symbolTableForBlockOptimization::constructor_mapWithMapToOverride (const GALGAS_symbolTableForBlockOptimization & inMapToOverride
                                                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_symbolTableForBlockOptimization result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForBlockOptimization GALGAS_symbolTableForBlockOptimization::reader_overriddenMap (C_Compiler * inCompiler
                                                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_symbolTableForBlockOptimization result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_symbolTableForBlockOptimization::addAssign_operation (const GALGAS_lstring & inKey,
                                                                  const GALGAS_uint & inArgument0,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cMapElement_symbolTableForBlockOptimization * p = NULL ;
  macroMyNew (p, cMapElement_symbolTableForBlockOptimization (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@symbolTableForBlockOptimization insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_symbolTableForBlockOptimization::modifier_insertKey (GALGAS_lstring inKey,
                                                                 GALGAS_uint inArgument0,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_symbolTableForBlockOptimization * p = NULL ;
  macroMyNew (p, cMapElement_symbolTableForBlockOptimization (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' label is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_symbolTableForBlockOptimization_searchKey = "the '%K' label is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_symbolTableForBlockOptimization::method_searchKey (GALGAS_lstring inKey,
                                                               GALGAS_uint & outArgument0,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  const cMapElement_symbolTableForBlockOptimization * p = (const cMapElement_symbolTableForBlockOptimization *) performSearch (inKey,
                                                                                                                                 inCompiler,
                                                                                                                                 kSearchErrorMessage_symbolTableForBlockOptimization_searchKey
                                                                                                                                 COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_symbolTableForBlockOptimization) ;
    outArgument0 = p->mAttribute_mDefinitionBlockIndex ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_symbolTableForBlockOptimization::reader_mDefinitionBlockIndexForKey (const GALGAS_string & inKey,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_symbolTableForBlockOptimization * p = (const cMapElement_symbolTableForBlockOptimization *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_symbolTableForBlockOptimization) ;
    result = p->mAttribute_mDefinitionBlockIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_symbolTableForBlockOptimization::modifier_setMDefinitionBlockIndexForKey (GALGAS_uint inAttributeValue,
                                                                                      GALGAS_string inKey,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_symbolTableForBlockOptimization * p = (cMapElement_symbolTableForBlockOptimization *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_symbolTableForBlockOptimization) ;
    p->mAttribute_mDefinitionBlockIndex = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_symbolTableForBlockOptimization * GALGAS_symbolTableForBlockOptimization::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                                         const GALGAS_string & inKey
                                                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement_symbolTableForBlockOptimization * result = (cMapElement_symbolTableForBlockOptimization *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_symbolTableForBlockOptimization) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_symbolTableForBlockOptimization::cEnumerator_symbolTableForBlockOptimization (const GALGAS_symbolTableForBlockOptimization & inEnumeratedObject,
                                                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForBlockOptimization_2D_element cEnumerator_symbolTableForBlockOptimization::current (LOCATION_ARGS) const {
  const cMapElement_symbolTableForBlockOptimization * p = (const cMapElement_symbolTableForBlockOptimization *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_symbolTableForBlockOptimization) ;
  return GALGAS_symbolTableForBlockOptimization_2D_element (p->mAttribute_lkey, p->mAttribute_mDefinitionBlockIndex) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_symbolTableForBlockOptimization::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_symbolTableForBlockOptimization::current_mDefinitionBlockIndex (LOCATION_ARGS) const {
  const cMapElement_symbolTableForBlockOptimization * p = (const cMapElement_symbolTableForBlockOptimization *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_symbolTableForBlockOptimization) ;
  return p->mAttribute_mDefinitionBlockIndex ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        @symbolTableForBlockOptimization type                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_symbolTableForBlockOptimization ("symbolTableForBlockOptimization",
                                                        NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_symbolTableForBlockOptimization::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_symbolTableForBlockOptimization ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_symbolTableForBlockOptimization::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_symbolTableForBlockOptimization (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForBlockOptimization GALGAS_symbolTableForBlockOptimization::extractObject (const GALGAS_object & inObject,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_symbolTableForBlockOptimization result ;
  const GALGAS_symbolTableForBlockOptimization * p = (const GALGAS_symbolTableForBlockOptimization *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_symbolTableForBlockOptimization *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("symbolTableForBlockOptimization", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_symbolTableForClusterOrdering::cMapElement_symbolTableForClusterOrdering (const GALGAS_lstring & inKey,
                                                                                      const GALGAS_uint & in_mCluster
                                                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mCluster (in_mCluster) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_symbolTableForClusterOrdering::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mCluster.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_symbolTableForClusterOrdering::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_symbolTableForClusterOrdering (mAttribute_lkey, mAttribute_mCluster COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_symbolTableForClusterOrdering::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCluster" ":" ;
  mAttribute_mCluster.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_symbolTableForClusterOrdering::compare (const cCollectionElement * inOperand) const {
  cMapElement_symbolTableForClusterOrdering * operand = (cMapElement_symbolTableForClusterOrdering *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mCluster.objectCompare (operand->mAttribute_mCluster) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForClusterOrdering::GALGAS_symbolTableForClusterOrdering (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForClusterOrdering::GALGAS_symbolTableForClusterOrdering (const GALGAS_symbolTableForClusterOrdering & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForClusterOrdering & GALGAS_symbolTableForClusterOrdering::operator = (const GALGAS_symbolTableForClusterOrdering & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForClusterOrdering GALGAS_symbolTableForClusterOrdering::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_symbolTableForClusterOrdering result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForClusterOrdering GALGAS_symbolTableForClusterOrdering::constructor_mapWithMapToOverride (const GALGAS_symbolTableForClusterOrdering & inMapToOverride
                                                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_symbolTableForClusterOrdering result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForClusterOrdering GALGAS_symbolTableForClusterOrdering::reader_overriddenMap (C_Compiler * inCompiler
                                                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_symbolTableForClusterOrdering result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_symbolTableForClusterOrdering::addAssign_operation (const GALGAS_lstring & inKey,
                                                                const GALGAS_uint & inArgument0,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cMapElement_symbolTableForClusterOrdering * p = NULL ;
  macroMyNew (p, cMapElement_symbolTableForClusterOrdering (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@symbolTableForClusterOrdering insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_symbolTableForClusterOrdering::modifier_insertKey (GALGAS_lstring inKey,
                                                               GALGAS_uint inArgument0,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cMapElement_symbolTableForClusterOrdering * p = NULL ;
  macroMyNew (p, cMapElement_symbolTableForClusterOrdering (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' label is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_symbolTableForClusterOrdering_searchKey = "the '%K' label is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_symbolTableForClusterOrdering::method_searchKey (GALGAS_lstring inKey,
                                                             GALGAS_uint & outArgument0,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  const cMapElement_symbolTableForClusterOrdering * p = (const cMapElement_symbolTableForClusterOrdering *) performSearch (inKey,
                                                                                                                             inCompiler,
                                                                                                                             kSearchErrorMessage_symbolTableForClusterOrdering_searchKey
                                                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_symbolTableForClusterOrdering) ;
    outArgument0 = p->mAttribute_mCluster ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_symbolTableForClusterOrdering::reader_mClusterForKey (const GALGAS_string & inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_symbolTableForClusterOrdering * p = (const cMapElement_symbolTableForClusterOrdering *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_symbolTableForClusterOrdering) ;
    result = p->mAttribute_mCluster ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_symbolTableForClusterOrdering::modifier_setMClusterForKey (GALGAS_uint inAttributeValue,
                                                                       GALGAS_string inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_symbolTableForClusterOrdering * p = (cMapElement_symbolTableForClusterOrdering *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_symbolTableForClusterOrdering) ;
    p->mAttribute_mCluster = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_symbolTableForClusterOrdering * GALGAS_symbolTableForClusterOrdering::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                                     const GALGAS_string & inKey
                                                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_symbolTableForClusterOrdering * result = (cMapElement_symbolTableForClusterOrdering *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_symbolTableForClusterOrdering) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_symbolTableForClusterOrdering::cEnumerator_symbolTableForClusterOrdering (const GALGAS_symbolTableForClusterOrdering & inEnumeratedObject,
                                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForClusterOrdering_2D_element cEnumerator_symbolTableForClusterOrdering::current (LOCATION_ARGS) const {
  const cMapElement_symbolTableForClusterOrdering * p = (const cMapElement_symbolTableForClusterOrdering *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_symbolTableForClusterOrdering) ;
  return GALGAS_symbolTableForClusterOrdering_2D_element (p->mAttribute_lkey, p->mAttribute_mCluster) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_symbolTableForClusterOrdering::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_symbolTableForClusterOrdering::current_mCluster (LOCATION_ARGS) const {
  const cMapElement_symbolTableForClusterOrdering * p = (const cMapElement_symbolTableForClusterOrdering *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_symbolTableForClusterOrdering) ;
  return p->mAttribute_mCluster ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         @symbolTableForClusterOrdering type                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_symbolTableForClusterOrdering ("symbolTableForClusterOrdering",
                                                      NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_symbolTableForClusterOrdering::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_symbolTableForClusterOrdering ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_symbolTableForClusterOrdering::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_symbolTableForClusterOrdering (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForClusterOrdering GALGAS_symbolTableForClusterOrdering::extractObject (const GALGAS_object & inObject,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_symbolTableForClusterOrdering result ;
  const GALGAS_symbolTableForClusterOrdering * p = (const GALGAS_symbolTableForClusterOrdering *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_symbolTableForClusterOrdering *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("symbolTableForClusterOrdering", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_symbolTableForRelativesResolution::cMapElement_symbolTableForRelativesResolution (const GALGAS_lstring & inKey,
                                                                                              const GALGAS_uint & in_mLabelAddress
                                                                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mLabelAddress (in_mLabelAddress) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_symbolTableForRelativesResolution::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mLabelAddress.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_symbolTableForRelativesResolution::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_symbolTableForRelativesResolution (mAttribute_lkey, mAttribute_mLabelAddress COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_symbolTableForRelativesResolution::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mLabelAddress" ":" ;
  mAttribute_mLabelAddress.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_symbolTableForRelativesResolution::compare (const cCollectionElement * inOperand) const {
  cMapElement_symbolTableForRelativesResolution * operand = (cMapElement_symbolTableForRelativesResolution *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mLabelAddress.objectCompare (operand->mAttribute_mLabelAddress) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForRelativesResolution::GALGAS_symbolTableForRelativesResolution (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForRelativesResolution::GALGAS_symbolTableForRelativesResolution (const GALGAS_symbolTableForRelativesResolution & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForRelativesResolution & GALGAS_symbolTableForRelativesResolution::operator = (const GALGAS_symbolTableForRelativesResolution & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForRelativesResolution GALGAS_symbolTableForRelativesResolution::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_symbolTableForRelativesResolution result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForRelativesResolution GALGAS_symbolTableForRelativesResolution::constructor_mapWithMapToOverride (const GALGAS_symbolTableForRelativesResolution & inMapToOverride
                                                                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_symbolTableForRelativesResolution result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForRelativesResolution GALGAS_symbolTableForRelativesResolution::reader_overriddenMap (C_Compiler * inCompiler
                                                                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_symbolTableForRelativesResolution result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_symbolTableForRelativesResolution::addAssign_operation (const GALGAS_lstring & inKey,
                                                                    const GALGAS_uint & inArgument0,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cMapElement_symbolTableForRelativesResolution * p = NULL ;
  macroMyNew (p, cMapElement_symbolTableForRelativesResolution (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@symbolTableForRelativesResolution insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_symbolTableForRelativesResolution::modifier_insertKey (GALGAS_lstring inKey,
                                                                   GALGAS_uint inArgument0,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cMapElement_symbolTableForRelativesResolution * p = NULL ;
  macroMyNew (p, cMapElement_symbolTableForRelativesResolution (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' label is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_symbolTableForRelativesResolution_searchKey = "the '%K' label is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_symbolTableForRelativesResolution::method_searchKey (GALGAS_lstring inKey,
                                                                 GALGAS_uint & outArgument0,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  const cMapElement_symbolTableForRelativesResolution * p = (const cMapElement_symbolTableForRelativesResolution *) performSearch (inKey,
                                                                                                                                     inCompiler,
                                                                                                                                     kSearchErrorMessage_symbolTableForRelativesResolution_searchKey
                                                                                                                                     COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_symbolTableForRelativesResolution) ;
    outArgument0 = p->mAttribute_mLabelAddress ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_symbolTableForRelativesResolution::reader_mLabelAddressForKey (const GALGAS_string & inKey,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_symbolTableForRelativesResolution * p = (const cMapElement_symbolTableForRelativesResolution *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_symbolTableForRelativesResolution) ;
    result = p->mAttribute_mLabelAddress ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_symbolTableForRelativesResolution::modifier_setMLabelAddressForKey (GALGAS_uint inAttributeValue,
                                                                                GALGAS_string inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_symbolTableForRelativesResolution * p = (cMapElement_symbolTableForRelativesResolution *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_symbolTableForRelativesResolution) ;
    p->mAttribute_mLabelAddress = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_symbolTableForRelativesResolution * GALGAS_symbolTableForRelativesResolution::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                                             const GALGAS_string & inKey
                                                                                                                             COMMA_LOCATION_ARGS) {
  cMapElement_symbolTableForRelativesResolution * result = (cMapElement_symbolTableForRelativesResolution *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_symbolTableForRelativesResolution) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_symbolTableForRelativesResolution::cEnumerator_symbolTableForRelativesResolution (const GALGAS_symbolTableForRelativesResolution & inEnumeratedObject,
                                                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForRelativesResolution_2D_element cEnumerator_symbolTableForRelativesResolution::current (LOCATION_ARGS) const {
  const cMapElement_symbolTableForRelativesResolution * p = (const cMapElement_symbolTableForRelativesResolution *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_symbolTableForRelativesResolution) ;
  return GALGAS_symbolTableForRelativesResolution_2D_element (p->mAttribute_lkey, p->mAttribute_mLabelAddress) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_symbolTableForRelativesResolution::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_symbolTableForRelativesResolution::current_mLabelAddress (LOCATION_ARGS) const {
  const cMapElement_symbolTableForRelativesResolution * p = (const cMapElement_symbolTableForRelativesResolution *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_symbolTableForRelativesResolution) ;
  return p->mAttribute_mLabelAddress ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       @symbolTableForRelativesResolution type                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_symbolTableForRelativesResolution ("symbolTableForRelativesResolution",
                                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_symbolTableForRelativesResolution::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_symbolTableForRelativesResolution ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_symbolTableForRelativesResolution::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_symbolTableForRelativesResolution (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_symbolTableForRelativesResolution GALGAS_symbolTableForRelativesResolution::extractObject (const GALGAS_object & inObject,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_symbolTableForRelativesResolution result ;
  const GALGAS_symbolTableForRelativesResolution * p = (const GALGAS_symbolTableForRelativesResolution *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_symbolTableForRelativesResolution *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("symbolTableForRelativesResolution", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Class for element of '@codeList' list                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_codeList : public cCollectionElement {
  public : GALGAS_codeList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_codeList (const GALGAS_string & in_mAssemblyCode,
                                        const GALGAS_uintlist & in_mBinaryCode
                                        COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_codeList::cCollectionElement_codeList (const GALGAS_string & in_mAssemblyCode,
                                                          const GALGAS_uintlist & in_mBinaryCode
                                                          COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mAssemblyCode, in_mBinaryCode) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_codeList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_codeList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_codeList (mObject.mAttribute_mAssemblyCode, mObject.mAttribute_mBinaryCode COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_codeList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAssemblyCode" ":" ;
  mObject.mAttribute_mAssemblyCode.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBinaryCode" ":" ;
  mObject.mAttribute_mBinaryCode.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_codeList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_codeList * operand = (cCollectionElement_codeList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_codeList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_codeList::GALGAS_codeList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_codeList::GALGAS_codeList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_codeList GALGAS_codeList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_codeList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_codeList GALGAS_codeList::constructor_listWithValue (const GALGAS_string & inOperand0,
                                                            const GALGAS_uintlist & inOperand1
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_codeList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_codeList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_codeList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                 const GALGAS_string & in_mAssemblyCode,
                                                 const GALGAS_uintlist & in_mBinaryCode
                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement_codeList * p = NULL ;
  macroMyNew (p, cCollectionElement_codeList (in_mAssemblyCode,
                                              in_mBinaryCode COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_codeList::addAssign_operation (const GALGAS_string & inOperand0,
                                           const GALGAS_uintlist & inOperand1
                                           COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_codeList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_codeList::modifier_insertAtIndex (const GALGAS_string inOperand0,
                                              const GALGAS_uintlist inOperand1,
                                              const GALGAS_uint inInsertionIndex,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_codeList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_codeList::modifier_removeAtIndex (GALGAS_string & outOperand0,
                                              GALGAS_uintlist & outOperand1,
                                              const GALGAS_uint inRemoveIndex,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_codeList * p = (cCollectionElement_codeList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_codeList) ;
      outOperand0 = p->mObject.mAttribute_mAssemblyCode ;
      outOperand1 = p->mObject.mAttribute_mBinaryCode ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_codeList::modifier_popFirst (GALGAS_string & outOperand0,
                                         GALGAS_uintlist & outOperand1,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_codeList * p = (cCollectionElement_codeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_codeList) ;
    outOperand0 = p->mObject.mAttribute_mAssemblyCode ;
    outOperand1 = p->mObject.mAttribute_mBinaryCode ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_codeList::modifier_popLast (GALGAS_string & outOperand0,
                                        GALGAS_uintlist & outOperand1,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_codeList * p = (cCollectionElement_codeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_codeList) ;
    outOperand0 = p->mObject.mAttribute_mAssemblyCode ;
    outOperand1 = p->mObject.mAttribute_mBinaryCode ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_codeList::method_first (GALGAS_string & outOperand0,
                                    GALGAS_uintlist & outOperand1,
                                    C_Compiler * inCompiler
                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_codeList * p = (cCollectionElement_codeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_codeList) ;
    outOperand0 = p->mObject.mAttribute_mAssemblyCode ;
    outOperand1 = p->mObject.mAttribute_mBinaryCode ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_codeList::method_last (GALGAS_string & outOperand0,
                                   GALGAS_uintlist & outOperand1,
                                   C_Compiler * inCompiler
                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_codeList * p = (cCollectionElement_codeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_codeList) ;
    outOperand0 = p->mObject.mAttribute_mAssemblyCode ;
    outOperand1 = p->mObject.mAttribute_mBinaryCode ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_codeList GALGAS_codeList::operator_concat (const GALGAS_codeList & inOperand
                                                  COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_codeList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_codeList GALGAS_codeList::add_operation (const GALGAS_codeList & inOperand,
                                                C_Compiler * /* inCompiler */
                                                COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_codeList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_codeList GALGAS_codeList::reader_subListWithRange (const GALGAS_range & inRange,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_codeList result = GALGAS_codeList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_codeList GALGAS_codeList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_codeList result = GALGAS_codeList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_codeList::dotAssign_operation (const GALGAS_codeList inOperand
                                           COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_codeList::reader_mAssemblyCodeAtIndex (const GALGAS_uint & inIndex,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_codeList * p = (cCollectionElement_codeList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_codeList) ;
    result = p->mObject.mAttribute_mAssemblyCode ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uintlist GALGAS_codeList::reader_mBinaryCodeAtIndex (const GALGAS_uint & inIndex,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_codeList * p = (cCollectionElement_codeList *) attributes.ptr () ;
  GALGAS_uintlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_codeList) ;
    result = p->mObject.mAttribute_mBinaryCode ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_codeList::cEnumerator_codeList (const GALGAS_codeList & inEnumeratedObject,
                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_codeList_2D_element cEnumerator_codeList::current (LOCATION_ARGS) const {
  const cCollectionElement_codeList * p = (const cCollectionElement_codeList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_codeList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_codeList::current_mAssemblyCode (LOCATION_ARGS) const {
  const cCollectionElement_codeList * p = (const cCollectionElement_codeList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_codeList) ;
  return p->mObject.mAttribute_mAssemblyCode ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uintlist cEnumerator_codeList::current_mBinaryCode (LOCATION_ARGS) const {
  const cCollectionElement_codeList * p = (const cCollectionElement_codeList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_codeList) ;
  return p->mObject.mAttribute_mBinaryCode ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                   @codeList type                                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_codeList ("codeList",
                                 NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_codeList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_codeList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_codeList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_codeList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_codeList GALGAS_codeList::extractObject (const GALGAS_object & inObject,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  GALGAS_codeList result ;
  const GALGAS_codeList * p = (const GALGAS_codeList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_codeList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("codeList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_pic_31__38__5F_dataAddressMap::cMapElement_pic_31__38__5F_dataAddressMap (const GALGAS_lstring & inKey,
                                                                                      const GALGAS_uint & in_mDataAddress
                                                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mDataAddress (in_mDataAddress) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_pic_31__38__5F_dataAddressMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mDataAddress.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_pic_31__38__5F_dataAddressMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_pic_31__38__5F_dataAddressMap (mAttribute_lkey, mAttribute_mDataAddress COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_pic_31__38__5F_dataAddressMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDataAddress" ":" ;
  mAttribute_mDataAddress.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_pic_31__38__5F_dataAddressMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_pic_31__38__5F_dataAddressMap * operand = (cMapElement_pic_31__38__5F_dataAddressMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mDataAddress.objectCompare (operand->mAttribute_mDataAddress) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38__5F_dataAddressMap::GALGAS_pic_31__38__5F_dataAddressMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38__5F_dataAddressMap::GALGAS_pic_31__38__5F_dataAddressMap (const GALGAS_pic_31__38__5F_dataAddressMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38__5F_dataAddressMap & GALGAS_pic_31__38__5F_dataAddressMap::operator = (const GALGAS_pic_31__38__5F_dataAddressMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38__5F_dataAddressMap GALGAS_pic_31__38__5F_dataAddressMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_pic_31__38__5F_dataAddressMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38__5F_dataAddressMap GALGAS_pic_31__38__5F_dataAddressMap::constructor_mapWithMapToOverride (const GALGAS_pic_31__38__5F_dataAddressMap & inMapToOverride
                                                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_pic_31__38__5F_dataAddressMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38__5F_dataAddressMap GALGAS_pic_31__38__5F_dataAddressMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_pic_31__38__5F_dataAddressMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38__5F_dataAddressMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                                const GALGAS_uint & inArgument0,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cMapElement_pic_31__38__5F_dataAddressMap * p = NULL ;
  macroMyNew (p, cMapElement_pic_31__38__5F_dataAddressMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@pic_31__38__5F_dataAddressMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38__5F_dataAddressMap::modifier_insertKey (GALGAS_lstring inKey,
                                                               GALGAS_uint inArgument0,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cMapElement_pic_31__38__5F_dataAddressMap * p = NULL ;
  macroMyNew (p, cMapElement_pic_31__38__5F_dataAddressMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' data is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_pic_31__38__5F_dataAddressMap_searchKey = "the '%K' data is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38__5F_dataAddressMap::method_searchKey (GALGAS_lstring inKey,
                                                             GALGAS_uint & outArgument0,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  const cMapElement_pic_31__38__5F_dataAddressMap * p = (const cMapElement_pic_31__38__5F_dataAddressMap *) performSearch (inKey,
                                                                                                                             inCompiler,
                                                                                                                             kSearchErrorMessage_pic_31__38__5F_dataAddressMap_searchKey
                                                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_pic_31__38__5F_dataAddressMap) ;
    outArgument0 = p->mAttribute_mDataAddress ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_pic_31__38__5F_dataAddressMap::reader_mDataAddressForKey (const GALGAS_string & inKey,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_pic_31__38__5F_dataAddressMap * p = (const cMapElement_pic_31__38__5F_dataAddressMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_pic_31__38__5F_dataAddressMap) ;
    result = p->mAttribute_mDataAddress ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_pic_31__38__5F_dataAddressMap::modifier_setMDataAddressForKey (GALGAS_uint inAttributeValue,
                                                                           GALGAS_string inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_pic_31__38__5F_dataAddressMap * p = (cMapElement_pic_31__38__5F_dataAddressMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_pic_31__38__5F_dataAddressMap) ;
    p->mAttribute_mDataAddress = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_pic_31__38__5F_dataAddressMap * GALGAS_pic_31__38__5F_dataAddressMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                                     const GALGAS_string & inKey
                                                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_pic_31__38__5F_dataAddressMap * result = (cMapElement_pic_31__38__5F_dataAddressMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_pic_31__38__5F_dataAddressMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_pic_31__38__5F_dataAddressMap::cEnumerator_pic_31__38__5F_dataAddressMap (const GALGAS_pic_31__38__5F_dataAddressMap & inEnumeratedObject,
                                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38__5F_dataAddressMap_2D_element cEnumerator_pic_31__38__5F_dataAddressMap::current (LOCATION_ARGS) const {
  const cMapElement_pic_31__38__5F_dataAddressMap * p = (const cMapElement_pic_31__38__5F_dataAddressMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_pic_31__38__5F_dataAddressMap) ;
  return GALGAS_pic_31__38__5F_dataAddressMap_2D_element (p->mAttribute_lkey, p->mAttribute_mDataAddress) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_pic_31__38__5F_dataAddressMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_pic_31__38__5F_dataAddressMap::current_mDataAddress (LOCATION_ARGS) const {
  const cMapElement_pic_31__38__5F_dataAddressMap * p = (const cMapElement_pic_31__38__5F_dataAddressMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_pic_31__38__5F_dataAddressMap) ;
  return p->mAttribute_mDataAddress ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @pic18_dataAddressMap type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_pic_31__38__5F_dataAddressMap ("pic18_dataAddressMap",
                                                      NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_pic_31__38__5F_dataAddressMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_pic_31__38__5F_dataAddressMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_pic_31__38__5F_dataAddressMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_pic_31__38__5F_dataAddressMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38__5F_dataAddressMap GALGAS_pic_31__38__5F_dataAddressMap::extractObject (const GALGAS_object & inObject,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_pic_31__38__5F_dataAddressMap result ;
  const GALGAS_pic_31__38__5F_dataAddressMap * p = (const GALGAS_pic_31__38__5F_dataAddressMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_pic_31__38__5F_dataAddressMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("pic18_dataAddressMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_declaredRoutineMap::cMapElement_declaredRoutineMap (const GALGAS_lstring & inKey,
                                                                const GALGAS_luint & in_mRequiredBank,
                                                                const GALGAS_luint & in_mReturnedBank,
                                                                const GALGAS_bool & in_mPreservesBank,
                                                                const GALGAS_bool & in_mIsNoReturn,
                                                                const GALGAS_pic_31__38_InstructionList & in_mInstructionList
                                                                COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mRequiredBank (in_mRequiredBank),
mAttribute_mReturnedBank (in_mReturnedBank),
mAttribute_mPreservesBank (in_mPreservesBank),
mAttribute_mIsNoReturn (in_mIsNoReturn),
mAttribute_mInstructionList (in_mInstructionList) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_declaredRoutineMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRequiredBank.isValid () && mAttribute_mReturnedBank.isValid () && mAttribute_mPreservesBank.isValid () && mAttribute_mIsNoReturn.isValid () && mAttribute_mInstructionList.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_declaredRoutineMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_declaredRoutineMap (mAttribute_lkey, mAttribute_mRequiredBank, mAttribute_mReturnedBank, mAttribute_mPreservesBank, mAttribute_mIsNoReturn, mAttribute_mInstructionList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_declaredRoutineMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRequiredBank" ":" ;
  mAttribute_mRequiredBank.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mReturnedBank" ":" ;
  mAttribute_mReturnedBank.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPreservesBank" ":" ;
  mAttribute_mPreservesBank.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsNoReturn" ":" ;
  mAttribute_mIsNoReturn.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstructionList" ":" ;
  mAttribute_mInstructionList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_declaredRoutineMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_declaredRoutineMap * operand = (cMapElement_declaredRoutineMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mRequiredBank.objectCompare (operand->mAttribute_mRequiredBank) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mReturnedBank.objectCompare (operand->mAttribute_mReturnedBank) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mPreservesBank.objectCompare (operand->mAttribute_mPreservesBank) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mIsNoReturn.objectCompare (operand->mAttribute_mIsNoReturn) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInstructionList.objectCompare (operand->mAttribute_mInstructionList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredRoutineMap::GALGAS_declaredRoutineMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredRoutineMap::GALGAS_declaredRoutineMap (const GALGAS_declaredRoutineMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredRoutineMap & GALGAS_declaredRoutineMap::operator = (const GALGAS_declaredRoutineMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredRoutineMap GALGAS_declaredRoutineMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_declaredRoutineMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredRoutineMap GALGAS_declaredRoutineMap::constructor_mapWithMapToOverride (const GALGAS_declaredRoutineMap & inMapToOverride
                                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_declaredRoutineMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredRoutineMap GALGAS_declaredRoutineMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  GALGAS_declaredRoutineMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declaredRoutineMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                     const GALGAS_luint & inArgument0,
                                                     const GALGAS_luint & inArgument1,
                                                     const GALGAS_bool & inArgument2,
                                                     const GALGAS_bool & inArgument3,
                                                     const GALGAS_pic_31__38_InstructionList & inArgument4,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cMapElement_declaredRoutineMap * p = NULL ;
  macroMyNew (p, cMapElement_declaredRoutineMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@declaredRoutineMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declaredRoutineMap::modifier_insertKey (GALGAS_lstring inKey,
                                                    GALGAS_luint inArgument0,
                                                    GALGAS_luint inArgument1,
                                                    GALGAS_bool inArgument2,
                                                    GALGAS_bool inArgument3,
                                                    GALGAS_pic_31__38_InstructionList inArgument4,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_declaredRoutineMap * p = NULL ;
  macroMyNew (p, cMapElement_declaredRoutineMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' routine is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_declaredRoutineMap_searchKey = "the '%K' routine is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declaredRoutineMap::method_searchKey (GALGAS_lstring inKey,
                                                  GALGAS_luint & outArgument0,
                                                  GALGAS_luint & outArgument1,
                                                  GALGAS_bool & outArgument2,
                                                  GALGAS_bool & outArgument3,
                                                  GALGAS_pic_31__38_InstructionList & outArgument4,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  const cMapElement_declaredRoutineMap * p = (const cMapElement_declaredRoutineMap *) performSearch (inKey,
                                                                                                       inCompiler,
                                                                                                       kSearchErrorMessage_declaredRoutineMap_searchKey
                                                                                                       COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_declaredRoutineMap) ;
    outArgument0 = p->mAttribute_mRequiredBank ;
    outArgument1 = p->mAttribute_mReturnedBank ;
    outArgument2 = p->mAttribute_mPreservesBank ;
    outArgument3 = p->mAttribute_mIsNoReturn ;
    outArgument4 = p->mAttribute_mInstructionList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint GALGAS_declaredRoutineMap::reader_mRequiredBankForKey (const GALGAS_string & inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_declaredRoutineMap * p = (const cMapElement_declaredRoutineMap *) attributes ;
  GALGAS_luint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_declaredRoutineMap) ;
    result = p->mAttribute_mRequiredBank ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint GALGAS_declaredRoutineMap::reader_mReturnedBankForKey (const GALGAS_string & inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_declaredRoutineMap * p = (const cMapElement_declaredRoutineMap *) attributes ;
  GALGAS_luint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_declaredRoutineMap) ;
    result = p->mAttribute_mReturnedBank ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_declaredRoutineMap::reader_mPreservesBankForKey (const GALGAS_string & inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_declaredRoutineMap * p = (const cMapElement_declaredRoutineMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_declaredRoutineMap) ;
    result = p->mAttribute_mPreservesBank ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_declaredRoutineMap::reader_mIsNoReturnForKey (const GALGAS_string & inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_declaredRoutineMap * p = (const cMapElement_declaredRoutineMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_declaredRoutineMap) ;
    result = p->mAttribute_mIsNoReturn ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList GALGAS_declaredRoutineMap::reader_mInstructionListForKey (const GALGAS_string & inKey,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_declaredRoutineMap * p = (const cMapElement_declaredRoutineMap *) attributes ;
  GALGAS_pic_31__38_InstructionList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_declaredRoutineMap) ;
    result = p->mAttribute_mInstructionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declaredRoutineMap::modifier_setMRequiredBankForKey (GALGAS_luint inAttributeValue,
                                                                 GALGAS_string inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_declaredRoutineMap * p = (cMapElement_declaredRoutineMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_declaredRoutineMap) ;
    p->mAttribute_mRequiredBank = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declaredRoutineMap::modifier_setMReturnedBankForKey (GALGAS_luint inAttributeValue,
                                                                 GALGAS_string inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_declaredRoutineMap * p = (cMapElement_declaredRoutineMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_declaredRoutineMap) ;
    p->mAttribute_mReturnedBank = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declaredRoutineMap::modifier_setMPreservesBankForKey (GALGAS_bool inAttributeValue,
                                                                  GALGAS_string inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_declaredRoutineMap * p = (cMapElement_declaredRoutineMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_declaredRoutineMap) ;
    p->mAttribute_mPreservesBank = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declaredRoutineMap::modifier_setMIsNoReturnForKey (GALGAS_bool inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_declaredRoutineMap * p = (cMapElement_declaredRoutineMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_declaredRoutineMap) ;
    p->mAttribute_mIsNoReturn = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declaredRoutineMap::modifier_setMInstructionListForKey (GALGAS_pic_31__38_InstructionList inAttributeValue,
                                                                    GALGAS_string inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_declaredRoutineMap * p = (cMapElement_declaredRoutineMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_declaredRoutineMap) ;
    p->mAttribute_mInstructionList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_declaredRoutineMap * GALGAS_declaredRoutineMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                               const GALGAS_string & inKey
                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement_declaredRoutineMap * result = (cMapElement_declaredRoutineMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_declaredRoutineMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_declaredRoutineMap::cEnumerator_declaredRoutineMap (const GALGAS_declaredRoutineMap & inEnumeratedObject,
                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredRoutineMap_2D_element cEnumerator_declaredRoutineMap::current (LOCATION_ARGS) const {
  const cMapElement_declaredRoutineMap * p = (const cMapElement_declaredRoutineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_declaredRoutineMap) ;
  return GALGAS_declaredRoutineMap_2D_element (p->mAttribute_lkey, p->mAttribute_mRequiredBank, p->mAttribute_mReturnedBank, p->mAttribute_mPreservesBank, p->mAttribute_mIsNoReturn, p->mAttribute_mInstructionList) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_declaredRoutineMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint cEnumerator_declaredRoutineMap::current_mRequiredBank (LOCATION_ARGS) const {
  const cMapElement_declaredRoutineMap * p = (const cMapElement_declaredRoutineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_declaredRoutineMap) ;
  return p->mAttribute_mRequiredBank ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint cEnumerator_declaredRoutineMap::current_mReturnedBank (LOCATION_ARGS) const {
  const cMapElement_declaredRoutineMap * p = (const cMapElement_declaredRoutineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_declaredRoutineMap) ;
  return p->mAttribute_mReturnedBank ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_declaredRoutineMap::current_mPreservesBank (LOCATION_ARGS) const {
  const cMapElement_declaredRoutineMap * p = (const cMapElement_declaredRoutineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_declaredRoutineMap) ;
  return p->mAttribute_mPreservesBank ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cEnumerator_declaredRoutineMap::current_mIsNoReturn (LOCATION_ARGS) const {
  const cMapElement_declaredRoutineMap * p = (const cMapElement_declaredRoutineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_declaredRoutineMap) ;
  return p->mAttribute_mIsNoReturn ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList cEnumerator_declaredRoutineMap::current_mInstructionList (LOCATION_ARGS) const {
  const cMapElement_declaredRoutineMap * p = (const cMapElement_declaredRoutineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_declaredRoutineMap) ;
  return p->mAttribute_mInstructionList ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              @declaredRoutineMap type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_declaredRoutineMap ("declaredRoutineMap",
                                           NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_declaredRoutineMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_declaredRoutineMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_declaredRoutineMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_declaredRoutineMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredRoutineMap GALGAS_declaredRoutineMap::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_declaredRoutineMap result ;
  const GALGAS_declaredRoutineMap * p = (const GALGAS_declaredRoutineMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_declaredRoutineMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("declaredRoutineMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_caseConstantMap::cMapElement_caseConstantMap (const GALGAS_lstring & inKey
                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_caseConstantMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_caseConstantMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_caseConstantMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_caseConstantMap::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_caseConstantMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_caseConstantMap * operand = (cMapElement_caseConstantMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_caseConstantMap::GALGAS_caseConstantMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_caseConstantMap::GALGAS_caseConstantMap (const GALGAS_caseConstantMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_caseConstantMap & GALGAS_caseConstantMap::operator = (const GALGAS_caseConstantMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_caseConstantMap GALGAS_caseConstantMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_caseConstantMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_caseConstantMap GALGAS_caseConstantMap::constructor_mapWithMapToOverride (const GALGAS_caseConstantMap & inMapToOverride
                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_caseConstantMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_caseConstantMap GALGAS_caseConstantMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_caseConstantMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_caseConstantMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  cMapElement_caseConstantMap * p = NULL ;
  macroMyNew (p, cMapElement_caseConstantMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@caseConstantMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_caseConstantMap::modifier_insertKey (GALGAS_lstring inKey,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_caseConstantMap * p = NULL ;
  macroMyNew (p, cMapElement_caseConstantMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' constant is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_caseConstantMap * GALGAS_caseConstantMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                         const GALGAS_string & inKey
                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement_caseConstantMap * result = (cMapElement_caseConstantMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_caseConstantMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_caseConstantMap::cEnumerator_caseConstantMap (const GALGAS_caseConstantMap & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_caseConstantMap_2D_element cEnumerator_caseConstantMap::current (LOCATION_ARGS) const {
  const cMapElement_caseConstantMap * p = (const cMapElement_caseConstantMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_caseConstantMap) ;
  return GALGAS_caseConstantMap_2D_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_caseConstantMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @caseConstantMap type                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_caseConstantMap ("caseConstantMap",
                                        NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_caseConstantMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_caseConstantMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_caseConstantMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_caseConstantMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_caseConstantMap GALGAS_caseConstantMap::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_caseConstantMap result ;
  const GALGAS_caseConstantMap * p = (const GALGAS_caseConstantMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_caseConstantMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("caseConstantMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_blockInstructionBlockMap::cMapElement_blockInstructionBlockMap (const GALGAS_lstring & inKey,
                                                                            const GALGAS_pic_31__38_InstructionList & in_mInstructionList,
                                                                            const GALGAS_abstractBlockTerminationForBlockInstruction & in_mBlockTerminaisonForBlockInstruction,
                                                                            const GALGAS_location & in_mEndOfBlock
                                                                            COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mInstructionList (in_mInstructionList),
mAttribute_mBlockTerminaisonForBlockInstruction (in_mBlockTerminaisonForBlockInstruction),
mAttribute_mEndOfBlock (in_mEndOfBlock) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_blockInstructionBlockMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mInstructionList.isValid () && mAttribute_mBlockTerminaisonForBlockInstruction.isValid () && mAttribute_mEndOfBlock.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_blockInstructionBlockMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_blockInstructionBlockMap (mAttribute_lkey, mAttribute_mInstructionList, mAttribute_mBlockTerminaisonForBlockInstruction, mAttribute_mEndOfBlock COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_blockInstructionBlockMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstructionList" ":" ;
  mAttribute_mInstructionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBlockTerminaisonForBlockInstruction" ":" ;
  mAttribute_mBlockTerminaisonForBlockInstruction.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEndOfBlock" ":" ;
  mAttribute_mEndOfBlock.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_blockInstructionBlockMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_blockInstructionBlockMap * operand = (cMapElement_blockInstructionBlockMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mInstructionList.objectCompare (operand->mAttribute_mInstructionList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mBlockTerminaisonForBlockInstruction.objectCompare (operand->mAttribute_mBlockTerminaisonForBlockInstruction) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mEndOfBlock.objectCompare (operand->mAttribute_mEndOfBlock) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockInstructionBlockMap::GALGAS_blockInstructionBlockMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockInstructionBlockMap::GALGAS_blockInstructionBlockMap (const GALGAS_blockInstructionBlockMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockInstructionBlockMap & GALGAS_blockInstructionBlockMap::operator = (const GALGAS_blockInstructionBlockMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockInstructionBlockMap GALGAS_blockInstructionBlockMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_blockInstructionBlockMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockInstructionBlockMap GALGAS_blockInstructionBlockMap::constructor_mapWithMapToOverride (const GALGAS_blockInstructionBlockMap & inMapToOverride
                                                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_blockInstructionBlockMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockInstructionBlockMap GALGAS_blockInstructionBlockMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                       COMMA_LOCATION_ARGS) const {
  GALGAS_blockInstructionBlockMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_blockInstructionBlockMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                           const GALGAS_pic_31__38_InstructionList & inArgument0,
                                                           const GALGAS_abstractBlockTerminationForBlockInstruction & inArgument1,
                                                           const GALGAS_location & inArgument2,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cMapElement_blockInstructionBlockMap * p = NULL ;
  macroMyNew (p, cMapElement_blockInstructionBlockMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@blockInstructionBlockMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_blockInstructionBlockMap::modifier_insertKey (GALGAS_lstring inKey,
                                                          GALGAS_pic_31__38_InstructionList inArgument0,
                                                          GALGAS_abstractBlockTerminationForBlockInstruction inArgument1,
                                                          GALGAS_location inArgument2,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cMapElement_blockInstructionBlockMap * p = NULL ;
  macroMyNew (p, cMapElement_blockInstructionBlockMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' block is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_blockInstructionBlockMap_searchKey = "the '%K' block is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_blockInstructionBlockMap::method_searchKey (GALGAS_lstring inKey,
                                                        GALGAS_pic_31__38_InstructionList & outArgument0,
                                                        GALGAS_abstractBlockTerminationForBlockInstruction & outArgument1,
                                                        GALGAS_location & outArgument2,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) const {
  const cMapElement_blockInstructionBlockMap * p = (const cMapElement_blockInstructionBlockMap *) performSearch (inKey,
                                                                                                                   inCompiler,
                                                                                                                   kSearchErrorMessage_blockInstructionBlockMap_searchKey
                                                                                                                   COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_blockInstructionBlockMap) ;
    outArgument0 = p->mAttribute_mInstructionList ;
    outArgument1 = p->mAttribute_mBlockTerminaisonForBlockInstruction ;
    outArgument2 = p->mAttribute_mEndOfBlock ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList GALGAS_blockInstructionBlockMap::reader_mInstructionListForKey (const GALGAS_string & inKey,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_blockInstructionBlockMap * p = (const cMapElement_blockInstructionBlockMap *) attributes ;
  GALGAS_pic_31__38_InstructionList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_blockInstructionBlockMap) ;
    result = p->mAttribute_mInstructionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBlockTerminationForBlockInstruction GALGAS_blockInstructionBlockMap::reader_mBlockTerminaisonForBlockInstructionForKey (const GALGAS_string & inKey,
                                                                                                                                       C_Compiler * inCompiler
                                                                                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_blockInstructionBlockMap * p = (const cMapElement_blockInstructionBlockMap *) attributes ;
  GALGAS_abstractBlockTerminationForBlockInstruction result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_blockInstructionBlockMap) ;
    result = p->mAttribute_mBlockTerminaisonForBlockInstruction ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_blockInstructionBlockMap::reader_mEndOfBlockForKey (const GALGAS_string & inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_blockInstructionBlockMap * p = (const cMapElement_blockInstructionBlockMap *) attributes ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_blockInstructionBlockMap) ;
    result = p->mAttribute_mEndOfBlock ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_blockInstructionBlockMap::modifier_setMInstructionListForKey (GALGAS_pic_31__38_InstructionList inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_blockInstructionBlockMap * p = (cMapElement_blockInstructionBlockMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_blockInstructionBlockMap) ;
    p->mAttribute_mInstructionList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_blockInstructionBlockMap::modifier_setMBlockTerminaisonForBlockInstructionForKey (GALGAS_abstractBlockTerminationForBlockInstruction inAttributeValue,
                                                                                              GALGAS_string inKey,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_blockInstructionBlockMap * p = (cMapElement_blockInstructionBlockMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_blockInstructionBlockMap) ;
    p->mAttribute_mBlockTerminaisonForBlockInstruction = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_blockInstructionBlockMap::modifier_setMEndOfBlockForKey (GALGAS_location inAttributeValue,
                                                                     GALGAS_string inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_blockInstructionBlockMap * p = (cMapElement_blockInstructionBlockMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_blockInstructionBlockMap) ;
    p->mAttribute_mEndOfBlock = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_blockInstructionBlockMap * GALGAS_blockInstructionBlockMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                           const GALGAS_string & inKey
                                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement_blockInstructionBlockMap * result = (cMapElement_blockInstructionBlockMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_blockInstructionBlockMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_blockInstructionBlockMap::cEnumerator_blockInstructionBlockMap (const GALGAS_blockInstructionBlockMap & inEnumeratedObject,
                                                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockInstructionBlockMap_2D_element cEnumerator_blockInstructionBlockMap::current (LOCATION_ARGS) const {
  const cMapElement_blockInstructionBlockMap * p = (const cMapElement_blockInstructionBlockMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_blockInstructionBlockMap) ;
  return GALGAS_blockInstructionBlockMap_2D_element (p->mAttribute_lkey, p->mAttribute_mInstructionList, p->mAttribute_mBlockTerminaisonForBlockInstruction, p->mAttribute_mEndOfBlock) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_blockInstructionBlockMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_pic_31__38_InstructionList cEnumerator_blockInstructionBlockMap::current_mInstructionList (LOCATION_ARGS) const {
  const cMapElement_blockInstructionBlockMap * p = (const cMapElement_blockInstructionBlockMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_blockInstructionBlockMap) ;
  return p->mAttribute_mInstructionList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBlockTerminationForBlockInstruction cEnumerator_blockInstructionBlockMap::current_mBlockTerminaisonForBlockInstruction (LOCATION_ARGS) const {
  const cMapElement_blockInstructionBlockMap * p = (const cMapElement_blockInstructionBlockMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_blockInstructionBlockMap) ;
  return p->mAttribute_mBlockTerminaisonForBlockInstruction ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location cEnumerator_blockInstructionBlockMap::current_mEndOfBlock (LOCATION_ARGS) const {
  const cMapElement_blockInstructionBlockMap * p = (const cMapElement_blockInstructionBlockMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_blockInstructionBlockMap) ;
  return p->mAttribute_mEndOfBlock ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @blockInstructionBlockMap type                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_blockInstructionBlockMap ("blockInstructionBlockMap",
                                                 NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_blockInstructionBlockMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_blockInstructionBlockMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_blockInstructionBlockMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_blockInstructionBlockMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockInstructionBlockMap GALGAS_blockInstructionBlockMap::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_blockInstructionBlockMap result ;
  const GALGAS_blockInstructionBlockMap * p = (const GALGAS_blockInstructionBlockMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_blockInstructionBlockMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("blockInstructionBlockMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_blockInitialBankSelectionMap::cMapElement_blockInitialBankSelectionMap (const GALGAS_lstring & inKey,
                                                                                    const GALGAS_uint & in_mInitialBankSelection,
                                                                                    const GALGAS_string & in_mSourceBlock
                                                                                    COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mInitialBankSelection (in_mInitialBankSelection),
mAttribute_mSourceBlock (in_mSourceBlock) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_blockInitialBankSelectionMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mInitialBankSelection.isValid () && mAttribute_mSourceBlock.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_blockInitialBankSelectionMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_blockInitialBankSelectionMap (mAttribute_lkey, mAttribute_mInitialBankSelection, mAttribute_mSourceBlock COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_blockInitialBankSelectionMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInitialBankSelection" ":" ;
  mAttribute_mInitialBankSelection.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSourceBlock" ":" ;
  mAttribute_mSourceBlock.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_blockInitialBankSelectionMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_blockInitialBankSelectionMap * operand = (cMapElement_blockInitialBankSelectionMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mInitialBankSelection.objectCompare (operand->mAttribute_mInitialBankSelection) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSourceBlock.objectCompare (operand->mAttribute_mSourceBlock) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockInitialBankSelectionMap::GALGAS_blockInitialBankSelectionMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockInitialBankSelectionMap::GALGAS_blockInitialBankSelectionMap (const GALGAS_blockInitialBankSelectionMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockInitialBankSelectionMap & GALGAS_blockInitialBankSelectionMap::operator = (const GALGAS_blockInitialBankSelectionMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockInitialBankSelectionMap GALGAS_blockInitialBankSelectionMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_blockInitialBankSelectionMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockInitialBankSelectionMap GALGAS_blockInitialBankSelectionMap::constructor_mapWithMapToOverride (const GALGAS_blockInitialBankSelectionMap & inMapToOverride
                                                                                                           COMMA_LOCATION_ARGS) {
  GALGAS_blockInitialBankSelectionMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockInitialBankSelectionMap GALGAS_blockInitialBankSelectionMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                               COMMA_LOCATION_ARGS) const {
  GALGAS_blockInitialBankSelectionMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_blockInitialBankSelectionMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                               const GALGAS_uint & inArgument0,
                                                               const GALGAS_string & inArgument1,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cMapElement_blockInitialBankSelectionMap * p = NULL ;
  macroMyNew (p, cMapElement_blockInitialBankSelectionMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@blockInitialBankSelectionMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_blockInitialBankSelectionMap::modifier_insertKey (GALGAS_lstring inKey,
                                                              GALGAS_uint inArgument0,
                                                              GALGAS_string inArgument1,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cMapElement_blockInitialBankSelectionMap * p = NULL ;
  macroMyNew (p, cMapElement_blockInitialBankSelectionMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' block is already declared (internal error)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_blockInitialBankSelectionMap_searchKey = "the '%K' block is not declared (internal error)" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_blockInitialBankSelectionMap::method_searchKey (GALGAS_lstring inKey,
                                                            GALGAS_uint & outArgument0,
                                                            GALGAS_string & outArgument1,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cMapElement_blockInitialBankSelectionMap * p = (const cMapElement_blockInitialBankSelectionMap *) performSearch (inKey,
                                                                                                                           inCompiler,
                                                                                                                           kSearchErrorMessage_blockInitialBankSelectionMap_searchKey
                                                                                                                           COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_blockInitialBankSelectionMap) ;
    outArgument0 = p->mAttribute_mInitialBankSelection ;
    outArgument1 = p->mAttribute_mSourceBlock ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_blockInitialBankSelectionMap::reader_mInitialBankSelectionForKey (const GALGAS_string & inKey,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_blockInitialBankSelectionMap * p = (const cMapElement_blockInitialBankSelectionMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_blockInitialBankSelectionMap) ;
    result = p->mAttribute_mInitialBankSelection ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_blockInitialBankSelectionMap::reader_mSourceBlockForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_blockInitialBankSelectionMap * p = (const cMapElement_blockInitialBankSelectionMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_blockInitialBankSelectionMap) ;
    result = p->mAttribute_mSourceBlock ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_blockInitialBankSelectionMap::modifier_setMInitialBankSelectionForKey (GALGAS_uint inAttributeValue,
                                                                                   GALGAS_string inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_blockInitialBankSelectionMap * p = (cMapElement_blockInitialBankSelectionMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_blockInitialBankSelectionMap) ;
    p->mAttribute_mInitialBankSelection = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_blockInitialBankSelectionMap::modifier_setMSourceBlockForKey (GALGAS_string inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_blockInitialBankSelectionMap * p = (cMapElement_blockInitialBankSelectionMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_blockInitialBankSelectionMap) ;
    p->mAttribute_mSourceBlock = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_blockInitialBankSelectionMap * GALGAS_blockInitialBankSelectionMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                                   const GALGAS_string & inKey
                                                                                                                   COMMA_LOCATION_ARGS) {
  cMapElement_blockInitialBankSelectionMap * result = (cMapElement_blockInitialBankSelectionMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_blockInitialBankSelectionMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_blockInitialBankSelectionMap::cEnumerator_blockInitialBankSelectionMap (const GALGAS_blockInitialBankSelectionMap & inEnumeratedObject,
                                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockInitialBankSelectionMap_2D_element cEnumerator_blockInitialBankSelectionMap::current (LOCATION_ARGS) const {
  const cMapElement_blockInitialBankSelectionMap * p = (const cMapElement_blockInitialBankSelectionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_blockInitialBankSelectionMap) ;
  return GALGAS_blockInitialBankSelectionMap_2D_element (p->mAttribute_lkey, p->mAttribute_mInitialBankSelection, p->mAttribute_mSourceBlock) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_blockInitialBankSelectionMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_blockInitialBankSelectionMap::current_mInitialBankSelection (LOCATION_ARGS) const {
  const cMapElement_blockInitialBankSelectionMap * p = (const cMapElement_blockInitialBankSelectionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_blockInitialBankSelectionMap) ;
  return p->mAttribute_mInitialBankSelection ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_blockInitialBankSelectionMap::current_mSourceBlock (LOCATION_ARGS) const {
  const cMapElement_blockInitialBankSelectionMap * p = (const cMapElement_blockInitialBankSelectionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_blockInitialBankSelectionMap) ;
  return p->mAttribute_mSourceBlock ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         @blockInitialBankSelectionMap type                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_blockInitialBankSelectionMap ("blockInitialBankSelectionMap",
                                                     NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_blockInitialBankSelectionMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_blockInitialBankSelectionMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_blockInitialBankSelectionMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_blockInitialBankSelectionMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockInitialBankSelectionMap GALGAS_blockInitialBankSelectionMap::extractObject (const GALGAS_object & inObject,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_blockInitialBankSelectionMap result ;
  const GALGAS_blockInitialBankSelectionMap * p = (const GALGAS_blockInitialBankSelectionMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_blockInitialBankSelectionMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("blockInitialBankSelectionMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            '@blockInvocationGraph' graph                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockInvocationGraph::GALGAS_blockInvocationGraph (void) :
AC_GALGAS_graph () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockInvocationGraph GALGAS_blockInvocationGraph::constructor_emptyGraph (LOCATION_ARGS) {
  GALGAS_blockInvocationGraph result ;
  result.makeNewEmptyGraph (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_blockInvocationGraph::modifier_addNode (GALGAS_lstring inKey,
                                                    GALGAS_string inArgument_0,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  GALGAS_stringlist::makeAttributesFromObjects (attributes, inArgument_0 COMMA_THERE) ;
  const char * kErrorMessage = "the '%K' label is already declared at %L" ;
  internalAddNode (inKey, kErrorMessage, attributes, inCompiler COMMA_THERE) ;
}


//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_blockInvocationGraph::method_topologicalSort (GALGAS_stringlist & outSortedList,
                                                          GALGAS_lstringlist & outSortedKeyList,
                                                          GALGAS_stringlist & outUnsortedList,
                                                          GALGAS_lstringlist & outUnsortedKeyList,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  cSharedList * sortedList = NULL ;
  cSharedList * unsortedList = NULL ;
  internalTopologicalSort (sortedList, outSortedKeyList, unsortedList, outUnsortedKeyList, inCompiler COMMA_THERE) ;
  outSortedList = GALGAS_stringlist (sortedList) ;
  outUnsortedList = GALGAS_stringlist (unsortedList) ;
  GALGAS_stringlist::detachSharedList (sortedList) ;
  GALGAS_stringlist::detachSharedList (unsortedList) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_blockInvocationGraph::method_depthFirstTopologicalSort (GALGAS_stringlist & outSortedList,
                                                                    GALGAS_lstringlist & outSortedKeyList,
                                                                    GALGAS_stringlist & outUnsortedList,
                                                                    GALGAS_lstringlist & outUnsortedKeyList,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) const {
  cSharedList * sortedList = NULL ;
  cSharedList * unsortedList = NULL ;
  internalDepthFirstTopologicalSort (sortedList, outSortedKeyList, unsortedList, outUnsortedKeyList, inCompiler COMMA_THERE) ;
  outSortedList = GALGAS_stringlist (sortedList) ;
  outUnsortedList = GALGAS_stringlist (unsortedList) ;
  GALGAS_stringlist::detachSharedList (sortedList) ;
  GALGAS_stringlist::detachSharedList (unsortedList) ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockInvocationGraph GALGAS_blockInvocationGraph::reader_reversedGraph (LOCATION_ARGS) const {
  GALGAS_blockInvocationGraph result ;
  result.reversedGraphFromGraph (*this COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_blockInvocationGraph::method_nodesWithNoSuccessor (GALGAS_stringlist & outInfoList,
                                                               GALGAS_lstringlist & outKeyList
                                                               COMMA_LOCATION_ARGS) const {
  cSharedList * infoList = NULL ;
  internalNodesWithNoSuccessor (infoList, outKeyList COMMA_THERE) ;
  outInfoList = GALGAS_stringlist (infoList) ;
  GALGAS_stringlist::detachSharedList (infoList) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_blockInvocationGraph::method_nodesWithNoPredecessor (GALGAS_stringlist & outInfoList,
                                                                 GALGAS_lstringlist & outKeyList
                                                                 COMMA_LOCATION_ARGS) const {
  cSharedList * infoList = NULL ;
  internalNodesWithNoPredecessor (infoList, outKeyList COMMA_THERE) ;
  outInfoList = GALGAS_stringlist (infoList) ;
  GALGAS_stringlist::detachSharedList (infoList) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockInvocationGraph GALGAS_blockInvocationGraph::reader_subgraphFromNodes (const GALGAS_lstringlist & inStartKeyList,
                                                                                   const GALGAS_stringset & inKeysToExclude,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_blockInvocationGraph result ;
  subGraph (result, inStartKeyList, inKeysToExclude, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @blockInvocationGraph type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_blockInvocationGraph ("blockInvocationGraph",
                                             NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_blockInvocationGraph::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_blockInvocationGraph ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_blockInvocationGraph::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_blockInvocationGraph (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockInvocationGraph GALGAS_blockInvocationGraph::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_blockInvocationGraph result ;
  const GALGAS_blockInvocationGraph * p = (const GALGAS_blockInvocationGraph *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_blockInvocationGraph *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("blockInvocationGraph", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      Class for element of '@clusterList' list                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_clusterList : public cCollectionElement {
  public : GALGAS_clusterList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_clusterList (const GALGAS_ipic_31__38_BlockList & in_mBlockList
                                           COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_clusterList::cCollectionElement_clusterList (const GALGAS_ipic_31__38_BlockList & in_mBlockList
                                                                COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mBlockList) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_clusterList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_clusterList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_clusterList (mObject.mAttribute_mBlockList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_clusterList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBlockList" ":" ;
  mObject.mAttribute_mBlockList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_clusterList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_clusterList * operand = (cCollectionElement_clusterList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_clusterList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_clusterList::GALGAS_clusterList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_clusterList::GALGAS_clusterList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_clusterList GALGAS_clusterList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_clusterList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_clusterList GALGAS_clusterList::constructor_listWithValue (const GALGAS_ipic_31__38_BlockList & inOperand0
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_clusterList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_clusterList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_clusterList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                    const GALGAS_ipic_31__38_BlockList & in_mBlockList
                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement_clusterList * p = NULL ;
  macroMyNew (p, cCollectionElement_clusterList (in_mBlockList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_clusterList::addAssign_operation (const GALGAS_ipic_31__38_BlockList & inOperand0
                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_clusterList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_clusterList::modifier_insertAtIndex (const GALGAS_ipic_31__38_BlockList inOperand0,
                                                 const GALGAS_uint inInsertionIndex,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_clusterList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_clusterList::modifier_removeAtIndex (GALGAS_ipic_31__38_BlockList & outOperand0,
                                                 const GALGAS_uint inRemoveIndex,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_clusterList * p = (cCollectionElement_clusterList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_clusterList) ;
      outOperand0 = p->mObject.mAttribute_mBlockList ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_clusterList::modifier_popFirst (GALGAS_ipic_31__38_BlockList & outOperand0,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_clusterList * p = (cCollectionElement_clusterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_clusterList) ;
    outOperand0 = p->mObject.mAttribute_mBlockList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_clusterList::modifier_popLast (GALGAS_ipic_31__38_BlockList & outOperand0,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_clusterList * p = (cCollectionElement_clusterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_clusterList) ;
    outOperand0 = p->mObject.mAttribute_mBlockList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_clusterList::method_first (GALGAS_ipic_31__38_BlockList & outOperand0,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_clusterList * p = (cCollectionElement_clusterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_clusterList) ;
    outOperand0 = p->mObject.mAttribute_mBlockList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_clusterList::method_last (GALGAS_ipic_31__38_BlockList & outOperand0,
                                      C_Compiler * inCompiler
                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_clusterList * p = (cCollectionElement_clusterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_clusterList) ;
    outOperand0 = p->mObject.mAttribute_mBlockList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_clusterList GALGAS_clusterList::operator_concat (const GALGAS_clusterList & inOperand
                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_clusterList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_clusterList GALGAS_clusterList::add_operation (const GALGAS_clusterList & inOperand,
                                                      C_Compiler * /* inCompiler */
                                                      COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_clusterList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_clusterList GALGAS_clusterList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_clusterList result = GALGAS_clusterList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_clusterList GALGAS_clusterList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_clusterList result = GALGAS_clusterList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_clusterList::dotAssign_operation (const GALGAS_clusterList inOperand
                                              COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_BlockList GALGAS_clusterList::reader_mBlockListAtIndex (const GALGAS_uint & inIndex,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_clusterList * p = (cCollectionElement_clusterList *) attributes.ptr () ;
  GALGAS_ipic_31__38_BlockList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_clusterList) ;
    result = p->mObject.mAttribute_mBlockList ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_clusterList::cEnumerator_clusterList (const GALGAS_clusterList & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_clusterList_2D_element cEnumerator_clusterList::current (LOCATION_ARGS) const {
  const cCollectionElement_clusterList * p = (const cCollectionElement_clusterList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_clusterList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_BlockList cEnumerator_clusterList::current_mBlockList (LOCATION_ARGS) const {
  const cCollectionElement_clusterList * p = (const cCollectionElement_clusterList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_clusterList) ;
  return p->mObject.mAttribute_mBlockList ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                  @clusterList type                                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_clusterList ("clusterList",
                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_clusterList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_clusterList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_clusterList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_clusterList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_clusterList GALGAS_clusterList::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_clusterList result ;
  const GALGAS_clusterList * p = (const GALGAS_clusterList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_clusterList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("clusterList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_neededConversionForClusterOrder::cMapElement_neededConversionForClusterOrder (const GALGAS_lstring & inKey,
                                                                                          const GALGAS_uint & in_mConversions
                                                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mConversions (in_mConversions) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_neededConversionForClusterOrder::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mConversions.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_neededConversionForClusterOrder::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_neededConversionForClusterOrder (mAttribute_lkey, mAttribute_mConversions COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_neededConversionForClusterOrder::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mConversions" ":" ;
  mAttribute_mConversions.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_neededConversionForClusterOrder::compare (const cCollectionElement * inOperand) const {
  cMapElement_neededConversionForClusterOrder * operand = (cMapElement_neededConversionForClusterOrder *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mConversions.objectCompare (operand->mAttribute_mConversions) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_neededConversionForClusterOrder::GALGAS_neededConversionForClusterOrder (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_neededConversionForClusterOrder::GALGAS_neededConversionForClusterOrder (const GALGAS_neededConversionForClusterOrder & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_neededConversionForClusterOrder & GALGAS_neededConversionForClusterOrder::operator = (const GALGAS_neededConversionForClusterOrder & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_neededConversionForClusterOrder GALGAS_neededConversionForClusterOrder::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_neededConversionForClusterOrder result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_neededConversionForClusterOrder GALGAS_neededConversionForClusterOrder::constructor_mapWithMapToOverride (const GALGAS_neededConversionForClusterOrder & inMapToOverride
                                                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_neededConversionForClusterOrder result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_neededConversionForClusterOrder GALGAS_neededConversionForClusterOrder::reader_overriddenMap (C_Compiler * inCompiler
                                                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_neededConversionForClusterOrder result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_neededConversionForClusterOrder::addAssign_operation (const GALGAS_lstring & inKey,
                                                                  const GALGAS_uint & inArgument0,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cMapElement_neededConversionForClusterOrder * p = NULL ;
  macroMyNew (p, cMapElement_neededConversionForClusterOrder (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@neededConversionForClusterOrder insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_neededConversionForClusterOrder::modifier_insertKey (GALGAS_lstring inKey,
                                                                 GALGAS_uint inArgument0,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_neededConversionForClusterOrder * p = NULL ;
  macroMyNew (p, cMapElement_neededConversionForClusterOrder (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' key is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_neededConversionForClusterOrder_searchKey = "the '%K' key is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_neededConversionForClusterOrder::method_searchKey (GALGAS_lstring inKey,
                                                               GALGAS_uint & outArgument0,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  const cMapElement_neededConversionForClusterOrder * p = (const cMapElement_neededConversionForClusterOrder *) performSearch (inKey,
                                                                                                                                 inCompiler,
                                                                                                                                 kSearchErrorMessage_neededConversionForClusterOrder_searchKey
                                                                                                                                 COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_neededConversionForClusterOrder) ;
    outArgument0 = p->mAttribute_mConversions ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_neededConversionForClusterOrder::reader_mConversionsForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_neededConversionForClusterOrder * p = (const cMapElement_neededConversionForClusterOrder *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_neededConversionForClusterOrder) ;
    result = p->mAttribute_mConversions ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_neededConversionForClusterOrder::modifier_setMConversionsForKey (GALGAS_uint inAttributeValue,
                                                                             GALGAS_string inKey,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_neededConversionForClusterOrder * p = (cMapElement_neededConversionForClusterOrder *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_neededConversionForClusterOrder) ;
    p->mAttribute_mConversions = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_neededConversionForClusterOrder * GALGAS_neededConversionForClusterOrder::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                                         const GALGAS_string & inKey
                                                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement_neededConversionForClusterOrder * result = (cMapElement_neededConversionForClusterOrder *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_neededConversionForClusterOrder) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_neededConversionForClusterOrder::cEnumerator_neededConversionForClusterOrder (const GALGAS_neededConversionForClusterOrder & inEnumeratedObject,
                                                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_neededConversionForClusterOrder_2D_element cEnumerator_neededConversionForClusterOrder::current (LOCATION_ARGS) const {
  const cMapElement_neededConversionForClusterOrder * p = (const cMapElement_neededConversionForClusterOrder *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_neededConversionForClusterOrder) ;
  return GALGAS_neededConversionForClusterOrder_2D_element (p->mAttribute_lkey, p->mAttribute_mConversions) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_neededConversionForClusterOrder::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_neededConversionForClusterOrder::current_mConversions (LOCATION_ARGS) const {
  const cMapElement_neededConversionForClusterOrder * p = (const cMapElement_neededConversionForClusterOrder *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_neededConversionForClusterOrder) ;
  return p->mAttribute_mConversions ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        @neededConversionForClusterOrder type                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_neededConversionForClusterOrder ("neededConversionForClusterOrder",
                                                        NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_neededConversionForClusterOrder::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_neededConversionForClusterOrder ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_neededConversionForClusterOrder::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_neededConversionForClusterOrder (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_neededConversionForClusterOrder GALGAS_neededConversionForClusterOrder::extractObject (const GALGAS_object & inObject,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_neededConversionForClusterOrder result ;
  const GALGAS_neededConversionForClusterOrder * p = (const GALGAS_neededConversionForClusterOrder *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_neededConversionForClusterOrder *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("neededConversionForClusterOrder", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_blockMapForStackComputation::cMapElement_blockMapForStackComputation (const GALGAS_lstring & inKey,
                                                                                  const GALGAS_ipic_31__38_Block & in_mBlock
                                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mBlock (in_mBlock) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_blockMapForStackComputation::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mBlock.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_blockMapForStackComputation::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_blockMapForStackComputation (mAttribute_lkey, mAttribute_mBlock COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_blockMapForStackComputation::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBlock" ":" ;
  mAttribute_mBlock.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_blockMapForStackComputation::compare (const cCollectionElement * inOperand) const {
  cMapElement_blockMapForStackComputation * operand = (cMapElement_blockMapForStackComputation *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mBlock.objectCompare (operand->mAttribute_mBlock) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockMapForStackComputation::GALGAS_blockMapForStackComputation (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockMapForStackComputation::GALGAS_blockMapForStackComputation (const GALGAS_blockMapForStackComputation & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockMapForStackComputation & GALGAS_blockMapForStackComputation::operator = (const GALGAS_blockMapForStackComputation & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockMapForStackComputation GALGAS_blockMapForStackComputation::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_blockMapForStackComputation result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockMapForStackComputation GALGAS_blockMapForStackComputation::constructor_mapWithMapToOverride (const GALGAS_blockMapForStackComputation & inMapToOverride
                                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_blockMapForStackComputation result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockMapForStackComputation GALGAS_blockMapForStackComputation::reader_overriddenMap (C_Compiler * inCompiler
                                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_blockMapForStackComputation result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_blockMapForStackComputation::addAssign_operation (const GALGAS_lstring & inKey,
                                                              const GALGAS_ipic_31__38_Block & inArgument0,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cMapElement_blockMapForStackComputation * p = NULL ;
  macroMyNew (p, cMapElement_blockMapForStackComputation (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@blockMapForStackComputation insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_blockMapForStackComputation::modifier_insertKey (GALGAS_lstring inKey,
                                                             GALGAS_ipic_31__38_Block inArgument0,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cMapElement_blockMapForStackComputation * p = NULL ;
  macroMyNew (p, cMapElement_blockMapForStackComputation (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' block is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_blockMapForStackComputation_searchKey = "the '%K' block is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_blockMapForStackComputation::method_searchKey (GALGAS_lstring inKey,
                                                           GALGAS_ipic_31__38_Block & outArgument0,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  const cMapElement_blockMapForStackComputation * p = (const cMapElement_blockMapForStackComputation *) performSearch (inKey,
                                                                                                                         inCompiler,
                                                                                                                         kSearchErrorMessage_blockMapForStackComputation_searchKey
                                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_blockMapForStackComputation) ;
    outArgument0 = p->mAttribute_mBlock ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_Block GALGAS_blockMapForStackComputation::reader_mBlockForKey (const GALGAS_string & inKey,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_blockMapForStackComputation * p = (const cMapElement_blockMapForStackComputation *) attributes ;
  GALGAS_ipic_31__38_Block result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_blockMapForStackComputation) ;
    result = p->mAttribute_mBlock ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_blockMapForStackComputation::modifier_setMBlockForKey (GALGAS_ipic_31__38_Block inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_blockMapForStackComputation * p = (cMapElement_blockMapForStackComputation *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_blockMapForStackComputation) ;
    p->mAttribute_mBlock = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_blockMapForStackComputation * GALGAS_blockMapForStackComputation::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                                 const GALGAS_string & inKey
                                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_blockMapForStackComputation * result = (cMapElement_blockMapForStackComputation *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_blockMapForStackComputation) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_blockMapForStackComputation::cEnumerator_blockMapForStackComputation (const GALGAS_blockMapForStackComputation & inEnumeratedObject,
                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockMapForStackComputation_2D_element cEnumerator_blockMapForStackComputation::current (LOCATION_ARGS) const {
  const cMapElement_blockMapForStackComputation * p = (const cMapElement_blockMapForStackComputation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_blockMapForStackComputation) ;
  return GALGAS_blockMapForStackComputation_2D_element (p->mAttribute_lkey, p->mAttribute_mBlock) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_blockMapForStackComputation::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ipic_31__38_Block cEnumerator_blockMapForStackComputation::current_mBlock (LOCATION_ARGS) const {
  const cMapElement_blockMapForStackComputation * p = (const cMapElement_blockMapForStackComputation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_blockMapForStackComputation) ;
  return p->mAttribute_mBlock ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          @blockMapForStackComputation type                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_blockMapForStackComputation ("blockMapForStackComputation",
                                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_blockMapForStackComputation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_blockMapForStackComputation ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_blockMapForStackComputation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_blockMapForStackComputation (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_blockMapForStackComputation GALGAS_blockMapForStackComputation::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_blockMapForStackComputation result ;
  const GALGAS_blockMapForStackComputation * p = (const GALGAS_blockMapForStackComputation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_blockMapForStackComputation *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("blockMapForStackComputation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_routineCallMap::cMapElement_routineCallMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_stringset & in_mCalledRoutineSet
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mCalledRoutineSet (in_mCalledRoutineSet) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_routineCallMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mCalledRoutineSet.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_routineCallMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_routineCallMap (mAttribute_lkey, mAttribute_mCalledRoutineSet COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_routineCallMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCalledRoutineSet" ":" ;
  mAttribute_mCalledRoutineSet.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_routineCallMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_routineCallMap * operand = (cMapElement_routineCallMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mCalledRoutineSet.objectCompare (operand->mAttribute_mCalledRoutineSet) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineCallMap::GALGAS_routineCallMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineCallMap::GALGAS_routineCallMap (const GALGAS_routineCallMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineCallMap & GALGAS_routineCallMap::operator = (const GALGAS_routineCallMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineCallMap GALGAS_routineCallMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_routineCallMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineCallMap GALGAS_routineCallMap::constructor_mapWithMapToOverride (const GALGAS_routineCallMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_routineCallMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineCallMap GALGAS_routineCallMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_routineCallMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineCallMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                 const GALGAS_stringset & inArgument0,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_routineCallMap * p = NULL ;
  macroMyNew (p, cMapElement_routineCallMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@routineCallMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineCallMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_stringset inArgument0,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_routineCallMap * p = NULL ;
  macroMyNew (p, cMapElement_routineCallMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' entry is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringset GALGAS_routineCallMap::reader_mCalledRoutineSetForKey (const GALGAS_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineCallMap * p = (const cMapElement_routineCallMap *) attributes ;
  GALGAS_stringset result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineCallMap) ;
    result = p->mAttribute_mCalledRoutineSet ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineCallMap::modifier_setMCalledRoutineSetForKey (GALGAS_stringset inAttributeValue,
                                                                 GALGAS_string inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineCallMap * p = (cMapElement_routineCallMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineCallMap) ;
    p->mAttribute_mCalledRoutineSet = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_routineCallMap * GALGAS_routineCallMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                       const GALGAS_string & inKey
                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_routineCallMap * result = (cMapElement_routineCallMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_routineCallMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_routineCallMap::cEnumerator_routineCallMap (const GALGAS_routineCallMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineCallMap_2D_element cEnumerator_routineCallMap::current (LOCATION_ARGS) const {
  const cMapElement_routineCallMap * p = (const cMapElement_routineCallMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineCallMap) ;
  return GALGAS_routineCallMap_2D_element (p->mAttribute_lkey, p->mAttribute_mCalledRoutineSet) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_routineCallMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringset cEnumerator_routineCallMap::current_mCalledRoutineSet (LOCATION_ARGS) const {
  const cMapElement_routineCallMap * p = (const cMapElement_routineCallMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineCallMap) ;
  return p->mAttribute_mCalledRoutineSet ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @routineCallMap type                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_routineCallMap ("routineCallMap",
                                       NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_routineCallMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_routineCallMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_routineCallMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_routineCallMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineCallMap GALGAS_routineCallMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_routineCallMap result ;
  const GALGAS_routineCallMap * p = (const GALGAS_routineCallMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_routineCallMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("routineCallMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_routineStackRequirementMap::cMapElement_routineStackRequirementMap (const GALGAS_lstring & inKey,
                                                                                const GALGAS_uint & in_mLevels
                                                                                COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mLevels (in_mLevels) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_routineStackRequirementMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mLevels.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_routineStackRequirementMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_routineStackRequirementMap (mAttribute_lkey, mAttribute_mLevels COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_routineStackRequirementMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mLevels" ":" ;
  mAttribute_mLevels.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_routineStackRequirementMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_routineStackRequirementMap * operand = (cMapElement_routineStackRequirementMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mLevels.objectCompare (operand->mAttribute_mLevels) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineStackRequirementMap::GALGAS_routineStackRequirementMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineStackRequirementMap::GALGAS_routineStackRequirementMap (const GALGAS_routineStackRequirementMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineStackRequirementMap & GALGAS_routineStackRequirementMap::operator = (const GALGAS_routineStackRequirementMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineStackRequirementMap GALGAS_routineStackRequirementMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_routineStackRequirementMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineStackRequirementMap GALGAS_routineStackRequirementMap::constructor_mapWithMapToOverride (const GALGAS_routineStackRequirementMap & inMapToOverride
                                                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_routineStackRequirementMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineStackRequirementMap GALGAS_routineStackRequirementMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                           COMMA_LOCATION_ARGS) const {
  GALGAS_routineStackRequirementMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineStackRequirementMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                             const GALGAS_uint & inArgument0,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cMapElement_routineStackRequirementMap * p = NULL ;
  macroMyNew (p, cMapElement_routineStackRequirementMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@routineStackRequirementMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineStackRequirementMap::modifier_insertKey (GALGAS_lstring inKey,
                                                            GALGAS_uint inArgument0,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cMapElement_routineStackRequirementMap * p = NULL ;
  macroMyNew (p, cMapElement_routineStackRequirementMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' entry is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_routineStackRequirementMap_searchKey = "the '%K' entry is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineStackRequirementMap::method_searchKey (GALGAS_lstring inKey,
                                                          GALGAS_uint & outArgument0,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  const cMapElement_routineStackRequirementMap * p = (const cMapElement_routineStackRequirementMap *) performSearch (inKey,
                                                                                                                       inCompiler,
                                                                                                                       kSearchErrorMessage_routineStackRequirementMap_searchKey
                                                                                                                       COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_routineStackRequirementMap) ;
    outArgument0 = p->mAttribute_mLevels ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_routineStackRequirementMap::reader_mLevelsForKey (const GALGAS_string & inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineStackRequirementMap * p = (const cMapElement_routineStackRequirementMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineStackRequirementMap) ;
    result = p->mAttribute_mLevels ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_routineStackRequirementMap::modifier_setMLevelsForKey (GALGAS_uint inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineStackRequirementMap * p = (cMapElement_routineStackRequirementMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineStackRequirementMap) ;
    p->mAttribute_mLevels = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_routineStackRequirementMap * GALGAS_routineStackRequirementMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                               const GALGAS_string & inKey
                                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement_routineStackRequirementMap * result = (cMapElement_routineStackRequirementMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_routineStackRequirementMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_routineStackRequirementMap::cEnumerator_routineStackRequirementMap (const GALGAS_routineStackRequirementMap & inEnumeratedObject,
                                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineStackRequirementMap_2D_element cEnumerator_routineStackRequirementMap::current (LOCATION_ARGS) const {
  const cMapElement_routineStackRequirementMap * p = (const cMapElement_routineStackRequirementMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineStackRequirementMap) ;
  return GALGAS_routineStackRequirementMap_2D_element (p->mAttribute_lkey, p->mAttribute_mLevels) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_routineStackRequirementMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_routineStackRequirementMap::current_mLevels (LOCATION_ARGS) const {
  const cMapElement_routineStackRequirementMap * p = (const cMapElement_routineStackRequirementMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineStackRequirementMap) ;
  return p->mAttribute_mLevels ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          @routineStackRequirementMap type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_routineStackRequirementMap ("routineStackRequirementMap",
                                                   NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_routineStackRequirementMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_routineStackRequirementMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_routineStackRequirementMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_routineStackRequirementMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_routineStackRequirementMap GALGAS_routineStackRequirementMap::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_routineStackRequirementMap result ;
  const GALGAS_routineStackRequirementMap * p = (const GALGAS_routineStackRequirementMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_routineStackRequirementMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("routineStackRequirementMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//     L E X I Q U E                                                                                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

#include "strings/unicode_character_cpp.h"
#include "galgas2/scanner_actions.h"

//---------------------------------------------------------------------------------------------------------------------*

cTokenFor_piccoloDevice_5F_lexique::cTokenFor_piccoloDevice_5F_lexique (void) :
mLexicalAttribute_charValue (),
mLexicalAttribute_identifierString (),
mLexicalAttribute_tokenString (),
mLexicalAttribute_uint_33__32_value () {
}

//---------------------------------------------------------------------------------------------------------------------*

C_Lexique_piccoloDevice_5F_lexique::C_Lexique_piccoloDevice_5F_lexique (C_Compiler * inCallerCompiler,
                const C_String & inDependencyFileExtension,
                const C_String & inDependencyFilePath,
                const C_String & inSourceFileName
                COMMA_LOCATION_ARGS) :
C_Lexique (inCallerCompiler, inDependencyFileExtension, inDependencyFilePath, inSourceFileName COMMA_THERE) {
}

//---------------------------------------------------------------------------------------------------------------------*

C_Lexique_piccoloDevice_5F_lexique::C_Lexique_piccoloDevice_5F_lexique (C_Compiler * inCallerCompiler,
                const C_String & inSourceString,
                const C_String & inStringForError
                COMMA_LOCATION_ARGS) :
C_Lexique (inCallerCompiler, inSourceString, inStringForError COMMA_THERE) {
}

//---------------------------------------------------------------------------------------------------------------------*
//                 I N D E X I N G    D I R E C T O R Y                                                                *
//---------------------------------------------------------------------------------------------------------------------*

C_String C_Lexique_piccoloDevice_5F_lexique::indexingDirectory (void) const {
  return "" ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                        Lexical error message list                                                                   *
//---------------------------------------------------------------------------------------------------------------------*

static const utf32 gLexicalMessage_piccoloDevice_5F_lexique_ASCIIcodeTooLargeError [] = {
  TO_UNICODE ('A'),
  TO_UNICODE ('S'),
  TO_UNICODE ('C'),
  TO_UNICODE ('I'),
  TO_UNICODE ('I'),
  TO_UNICODE (' '),
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('>'),
  TO_UNICODE (' '),
  TO_UNICODE ('2'),
  TO_UNICODE ('5'),
  TO_UNICODE ('5'),
  TO_UNICODE (0)
} ;

static const utf32 gLexicalMessage_piccoloDevice_5F_lexique_decimalNumberTooLarge [] = {
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('a'),
  TO_UNICODE ('l'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('u'),
  TO_UNICODE ('m'),
  TO_UNICODE ('b'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (' '),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('o'),
  TO_UNICODE (' '),
  TO_UNICODE ('l'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('g'),
  TO_UNICODE ('e'),
  TO_UNICODE (0)
} ;

static const utf32 gLexicalMessage_piccoloDevice_5F_lexique_hexNumberTooLarge [] = {
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE ('x'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('u'),
  TO_UNICODE ('m'),
  TO_UNICODE ('b'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (' '),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('o'),
  TO_UNICODE (' '),
  TO_UNICODE ('l'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('g'),
  TO_UNICODE ('e'),
  TO_UNICODE (0)
} ;

static const utf32 gLexicalMessage_piccoloDevice_5F_lexique_incorrectCharConstant [] = {
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE (' '),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE ('a'),
  TO_UNICODE ('l'),
  TO_UNICODE (' '),
  TO_UNICODE ('c'),
  TO_UNICODE ('h'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('a'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

static const utf32 gLexicalMessage_piccoloDevice_5F_lexique_incorrectStringEnd [] = {
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('g'),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('o'),
  TO_UNICODE ('e'),
  TO_UNICODE ('s'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('t'),
  TO_UNICODE (' '),
  TO_UNICODE ('e'),
  TO_UNICODE ('n'),
  TO_UNICODE ('d'),
  TO_UNICODE (' '),
  TO_UNICODE ('w'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('\"'),
  TO_UNICODE ('\''),
  TO_UNICODE (0)
} ;

static const utf32 gLexicalMessage_piccoloDevice_5F_lexique_internalError [] = {
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE ('n'),
  TO_UNICODE ('a'),
  TO_UNICODE ('l'),
  TO_UNICODE (' '),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE ('r'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------------------------------------------------*
//          Syntax error messages, for every terminal symbol                                                           *
//---------------------------------------------------------------------------------------------------------------------*

//--- Syntax error message for terminal '$identifier$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique_identifier [] = {
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('n'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('f'),
  TO_UNICODE ('i'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$integer$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique_integer [] = {
  TO_UNICODE ('a'),
  TO_UNICODE (' '),
  TO_UNICODE ('3'),
  TO_UNICODE ('2'),
  TO_UNICODE ('-'),
  TO_UNICODE ('b'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE (' '),
  TO_UNICODE ('u'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('i'),
  TO_UNICODE ('g'),
  TO_UNICODE ('n'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('u'),
  TO_UNICODE ('m'),
  TO_UNICODE ('b'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$string$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique_string [] = {
  TO_UNICODE ('a'),
  TO_UNICODE (' '),
  TO_UNICODE ('c'),
  TO_UNICODE ('h'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('a'),
  TO_UNICODE ('c'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (' '),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('g'),
  TO_UNICODE (' '),
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('t'),
  TO_UNICODE (' '),
  TO_UNICODE ('\"'),
  TO_UNICODE ('.'),
  TO_UNICODE ('.'),
  TO_UNICODE ('.'),
  TO_UNICODE ('\"'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$comment$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique_comment [] = {
  TO_UNICODE ('a'),
  TO_UNICODE (' '),
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('m'),
  TO_UNICODE ('m'),
  TO_UNICODE ('e'),
  TO_UNICODE ('n'),
  TO_UNICODE ('t'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$controller$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique_controller [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('o'),
  TO_UNICODE ('l'),
  TO_UNICODE ('l'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$processor$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique_processor [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('p'),
  TO_UNICODE ('r'),
  TO_UNICODE ('o'),
  TO_UNICODE ('c'),
  TO_UNICODE ('e'),
  TO_UNICODE ('s'),
  TO_UNICODE ('s'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$romsize$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique_romsize [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('r'),
  TO_UNICODE ('o'),
  TO_UNICODE ('m'),
  TO_UNICODE ('s'),
  TO_UNICODE ('i'),
  TO_UNICODE ('z'),
  TO_UNICODE ('e'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$eepromsize$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique_eepromsize [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('e'),
  TO_UNICODE ('e'),
  TO_UNICODE ('p'),
  TO_UNICODE ('r'),
  TO_UNICODE ('o'),
  TO_UNICODE ('m'),
  TO_UNICODE ('s'),
  TO_UNICODE ('i'),
  TO_UNICODE ('z'),
  TO_UNICODE ('e'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$bank$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique_bank [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('b'),
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('k'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$unusedregister$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique_unusedregister [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('u'),
  TO_UNICODE ('n'),
  TO_UNICODE ('u'),
  TO_UNICODE ('s'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('g'),
  TO_UNICODE ('i'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$mirrorat$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique_mirrorat [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('r'),
  TO_UNICODE ('r'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('a'),
  TO_UNICODE ('t'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$ram$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique_ram [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('r'),
  TO_UNICODE ('a'),
  TO_UNICODE ('m'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$register$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique_register [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('g'),
  TO_UNICODE ('i'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$at$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique_at [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('a'),
  TO_UNICODE ('t'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$to$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique_to [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$configuration$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique_configuration [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE ('f'),
  TO_UNICODE ('i'),
  TO_UNICODE ('g'),
  TO_UNICODE ('u'),
  TO_UNICODE ('r'),
  TO_UNICODE ('a'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$width$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique_width [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('w'),
  TO_UNICODE ('i'),
  TO_UNICODE ('d'),
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$description$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique_description [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('s'),
  TO_UNICODE ('c'),
  TO_UNICODE ('r'),
  TO_UNICODE ('i'),
  TO_UNICODE ('p'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$mask$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique_mask [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('m'),
  TO_UNICODE ('a'),
  TO_UNICODE ('s'),
  TO_UNICODE ('k'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$illegal$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique_illegal [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('i'),
  TO_UNICODE ('l'),
  TO_UNICODE ('l'),
  TO_UNICODE ('e'),
  TO_UNICODE ('g'),
  TO_UNICODE ('a'),
  TO_UNICODE ('l'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$message$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique_message [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('m'),
  TO_UNICODE ('e'),
  TO_UNICODE ('s'),
  TO_UNICODE ('s'),
  TO_UNICODE ('a'),
  TO_UNICODE ('g'),
  TO_UNICODE ('e'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$setting$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique_setting [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('s'),
  TO_UNICODE ('e'),
  TO_UNICODE ('t'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('g'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('k'),
  TO_UNICODE ('e'),
  TO_UNICODE ('y'),
  TO_UNICODE ('w'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$<$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique__3C_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('<'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$>$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique__3E_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('>'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$,$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique__2C_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE (','),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$-$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique__2D_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('-'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$/$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique__2F_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('/'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$;$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique__3B_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE (';'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$:$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique__3A_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE (':'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$[$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique__5B_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('['),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$]$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique__5D_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE (']'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '${$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique__7B_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('{'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Syntax error message for terminal '$}$' :
static const utf32 gSyntaxErrorMessage_piccoloDevice_5F_lexique__7D_ [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('}'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('i'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------------------------------------------------*
//                getMessageForTerminal                                                                                *
//---------------------------------------------------------------------------------------------------------------------*

C_String C_Lexique_piccoloDevice_5F_lexique::getMessageForTerminal (const int16_t inTerminalIndex) const {
  static const utf32 * syntaxErrorMessageArray [34] = {kEndOfSourceLexicalErrorMessage,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique_identifier,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique_integer,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique_string,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique_comment,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique_controller,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique_processor,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique_romsize,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique_eepromsize,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique_bank,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique_unusedregister,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique_mirrorat,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique_ram,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique_register,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique_at,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique_to,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique_configuration,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique_width,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique_description,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique_mask,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique_illegal,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique_message,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique_setting,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique__3C_,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique__3E_,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique__2C_,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique__2D_,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique__2F_,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique__3B_,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique__3A_,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique__5B_,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique__5D_,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique__7B_,
    gSyntaxErrorMessage_piccoloDevice_5F_lexique__7D_} ;
  return syntaxErrorMessageArray [inTerminalIndex] ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                      U N I C O D E    S T R I N G S                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

//--- Unicode string for '$_2C_$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique__2C_ [] = {
  TO_UNICODE (','),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_2D_$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique__2D_ [] = {
  TO_UNICODE ('-'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_2F_$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique__2F_ [] = {
  TO_UNICODE ('/'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_30_x$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique__30_x [] = {
  TO_UNICODE ('0'),
  TO_UNICODE ('x'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_3A_$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique__3A_ [] = {
  TO_UNICODE (':'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_3B_$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique__3B_ [] = {
  TO_UNICODE (';'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_3C_$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique__3C_ [] = {
  TO_UNICODE ('<'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_3E_$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique__3E_ [] = {
  TO_UNICODE ('>'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_5B_$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique__5B_ [] = {
  TO_UNICODE ('['),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_5D_$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique__5D_ [] = {
  TO_UNICODE (']'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$at$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique_at [] = {
  TO_UNICODE ('a'),
  TO_UNICODE ('t'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$bank$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique_bank [] = {
  TO_UNICODE ('b'),
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('k'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$configuration$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique_configuration [] = {
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE ('f'),
  TO_UNICODE ('i'),
  TO_UNICODE ('g'),
  TO_UNICODE ('u'),
  TO_UNICODE ('r'),
  TO_UNICODE ('a'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$controller$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique_controller [] = {
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE ('t'),
  TO_UNICODE ('r'),
  TO_UNICODE ('o'),
  TO_UNICODE ('l'),
  TO_UNICODE ('l'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$description$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique_description [] = {
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('s'),
  TO_UNICODE ('c'),
  TO_UNICODE ('r'),
  TO_UNICODE ('i'),
  TO_UNICODE ('p'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$eepromsize$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique_eepromsize [] = {
  TO_UNICODE ('e'),
  TO_UNICODE ('e'),
  TO_UNICODE ('p'),
  TO_UNICODE ('r'),
  TO_UNICODE ('o'),
  TO_UNICODE ('m'),
  TO_UNICODE ('s'),
  TO_UNICODE ('i'),
  TO_UNICODE ('z'),
  TO_UNICODE ('e'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$illegal$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique_illegal [] = {
  TO_UNICODE ('i'),
  TO_UNICODE ('l'),
  TO_UNICODE ('l'),
  TO_UNICODE ('e'),
  TO_UNICODE ('g'),
  TO_UNICODE ('a'),
  TO_UNICODE ('l'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$mask$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique_mask [] = {
  TO_UNICODE ('m'),
  TO_UNICODE ('a'),
  TO_UNICODE ('s'),
  TO_UNICODE ('k'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$message$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique_message [] = {
  TO_UNICODE ('m'),
  TO_UNICODE ('e'),
  TO_UNICODE ('s'),
  TO_UNICODE ('s'),
  TO_UNICODE ('a'),
  TO_UNICODE ('g'),
  TO_UNICODE ('e'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$mirrorat$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique_mirrorat [] = {
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('r'),
  TO_UNICODE ('r'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE ('a'),
  TO_UNICODE ('t'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$processor$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique_processor [] = {
  TO_UNICODE ('p'),
  TO_UNICODE ('r'),
  TO_UNICODE ('o'),
  TO_UNICODE ('c'),
  TO_UNICODE ('e'),
  TO_UNICODE ('s'),
  TO_UNICODE ('s'),
  TO_UNICODE ('o'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$ram$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique_ram [] = {
  TO_UNICODE ('r'),
  TO_UNICODE ('a'),
  TO_UNICODE ('m'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$register$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique_register [] = {
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('g'),
  TO_UNICODE ('i'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$romsize$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique_romsize [] = {
  TO_UNICODE ('r'),
  TO_UNICODE ('o'),
  TO_UNICODE ('m'),
  TO_UNICODE ('s'),
  TO_UNICODE ('i'),
  TO_UNICODE ('z'),
  TO_UNICODE ('e'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$setting$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique_setting [] = {
  TO_UNICODE ('s'),
  TO_UNICODE ('e'),
  TO_UNICODE ('t'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('g'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$to$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique_to [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('o'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$unusedregister$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique_unusedregister [] = {
  TO_UNICODE ('u'),
  TO_UNICODE ('n'),
  TO_UNICODE ('u'),
  TO_UNICODE ('s'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('g'),
  TO_UNICODE ('i'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$width$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique_width [] = {
  TO_UNICODE ('w'),
  TO_UNICODE ('i'),
  TO_UNICODE ('d'),
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_7B_$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique__7B_ [] = {
  TO_UNICODE ('{'),
  TO_UNICODE (0)
} ;

//--- Unicode string for '$_7D_$'
static const utf32 kUnicodeString_piccoloDevice_5F_lexique__7D_ [] = {
  TO_UNICODE ('}'),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------------------------------------------------*
//             Key words table 'controlKeyWordList'                            *
//---------------------------------------------------------------------------------------------------------------------*

static const int32_t ktable_size_piccoloDevice_5F_lexique_controlKeyWordList = 18 ;

static const C_unicode_lexique_table_entry ktable_for_piccoloDevice_5F_lexique_controlKeyWordList [ktable_size_piccoloDevice_5F_lexique_controlKeyWordList] = {
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique_at, 2, C_Lexique_piccoloDevice_5F_lexique::kToken_at),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique_to, 2, C_Lexique_piccoloDevice_5F_lexique::kToken_to),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique_ram, 3, C_Lexique_piccoloDevice_5F_lexique::kToken_ram),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique_bank, 4, C_Lexique_piccoloDevice_5F_lexique::kToken_bank),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique_mask, 4, C_Lexique_piccoloDevice_5F_lexique::kToken_mask),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique_width, 5, C_Lexique_piccoloDevice_5F_lexique::kToken_width),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique_illegal, 7, C_Lexique_piccoloDevice_5F_lexique::kToken_illegal),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique_message, 7, C_Lexique_piccoloDevice_5F_lexique::kToken_message),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique_romsize, 7, C_Lexique_piccoloDevice_5F_lexique::kToken_romsize),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique_setting, 7, C_Lexique_piccoloDevice_5F_lexique::kToken_setting),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique_mirrorat, 8, C_Lexique_piccoloDevice_5F_lexique::kToken_mirrorat),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique_register, 8, C_Lexique_piccoloDevice_5F_lexique::kToken_register),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique_processor, 9, C_Lexique_piccoloDevice_5F_lexique::kToken_processor),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique_controller, 10, C_Lexique_piccoloDevice_5F_lexique::kToken_controller),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique_eepromsize, 10, C_Lexique_piccoloDevice_5F_lexique::kToken_eepromsize),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique_description, 11, C_Lexique_piccoloDevice_5F_lexique::kToken_description),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique_configuration, 13, C_Lexique_piccoloDevice_5F_lexique::kToken_configuration),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique_unusedregister, 14, C_Lexique_piccoloDevice_5F_lexique::kToken_unusedregister)
} ;

int16_t C_Lexique_piccoloDevice_5F_lexique::search_into_controlKeyWordList (const C_String & inSearchedString) {
  return searchInList (inSearchedString, ktable_for_piccoloDevice_5F_lexique_controlKeyWordList, ktable_size_piccoloDevice_5F_lexique_controlKeyWordList) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//             Key words table 'delimitorsList'                            *
//---------------------------------------------------------------------------------------------------------------------*

static const int32_t ktable_size_piccoloDevice_5F_lexique_delimitorsList = 11 ;

static const C_unicode_lexique_table_entry ktable_for_piccoloDevice_5F_lexique_delimitorsList [ktable_size_piccoloDevice_5F_lexique_delimitorsList] = {
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique__2C_, 1, C_Lexique_piccoloDevice_5F_lexique::kToken__2C_),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique__2D_, 1, C_Lexique_piccoloDevice_5F_lexique::kToken__2D_),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique__2F_, 1, C_Lexique_piccoloDevice_5F_lexique::kToken__2F_),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique__3A_, 1, C_Lexique_piccoloDevice_5F_lexique::kToken__3A_),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique__3B_, 1, C_Lexique_piccoloDevice_5F_lexique::kToken__3B_),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique__3C_, 1, C_Lexique_piccoloDevice_5F_lexique::kToken__3C_),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique__3E_, 1, C_Lexique_piccoloDevice_5F_lexique::kToken__3E_),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique__5B_, 1, C_Lexique_piccoloDevice_5F_lexique::kToken__5B_),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique__5D_, 1, C_Lexique_piccoloDevice_5F_lexique::kToken__5D_),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique__7B_, 1, C_Lexique_piccoloDevice_5F_lexique::kToken__7B_),
  C_unicode_lexique_table_entry (kUnicodeString_piccoloDevice_5F_lexique__7D_, 1, C_Lexique_piccoloDevice_5F_lexique::kToken__7D_)
} ;

int16_t C_Lexique_piccoloDevice_5F_lexique::search_into_delimitorsList (const C_String & inSearchedString) {
  return searchInList (inSearchedString, ktable_for_piccoloDevice_5F_lexique_delimitorsList, ktable_size_piccoloDevice_5F_lexique_delimitorsList) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                          getCurrentTokenString                                                                      *
//---------------------------------------------------------------------------------------------------------------------*

C_String C_Lexique_piccoloDevice_5F_lexique::getCurrentTokenString (const cToken * inTokenPtr) const {
  const cTokenFor_piccoloDevice_5F_lexique * ptr = (const cTokenFor_piccoloDevice_5F_lexique *) inTokenPtr ;
  C_String s ;
  if (ptr == NULL) {
    s.appendCString("$$") ;
  }else{
    switch (ptr->mTokenCode) {
    case kToken_:
      s.appendCString("$$") ;
      break ;
    case kToken_identifier:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("identifier") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendUnicodeCharacter (TO_UNICODE (' ') COMMA_HERE) ;
      s.appendCLiteralStringConstant (ptr->mLexicalAttribute_tokenString) ;
      break ;
    case kToken_integer:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("integer") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendUnicodeCharacter (TO_UNICODE (' ') COMMA_HERE) ;
      s.appendUnsigned (ptr->mLexicalAttribute_uint_33__32_value) ;
      break ;
    case kToken_string:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("string") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendUnicodeCharacter (TO_UNICODE (' ') COMMA_HERE) ;
      s.appendCLiteralStringConstant (ptr->mLexicalAttribute_tokenString) ;
      break ;
    case kToken_comment:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("comment") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_controller:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("controller") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_processor:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("processor") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_romsize:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("romsize") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_eepromsize:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("eepromsize") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_bank:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("bank") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_unusedregister:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("unusedregister") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_mirrorat:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("mirrorat") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_ram:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("ram") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_register:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("register") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_at:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("at") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_to:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("to") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_configuration:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("configuration") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_width:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("width") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_description:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("description") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_mask:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("mask") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_illegal:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("illegal") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_message:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("message") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken_setting:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("setting") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__3C_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("<") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__3E_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString (">") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__2C_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString (",") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__2D_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("-") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__2F_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("/") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__3B_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString (";") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__3A_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString (":") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__5B_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("[") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__5D_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("]") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__7B_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("{") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    case kToken__7D_:
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      s.appendCString ("}") ;
      s.appendUnicodeCharacter (TO_UNICODE ('$') COMMA_HERE) ;
      break ;
    default:
      break ;
    }
  }
  return s ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                           Template Delimiters                                                                       *
//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//                           Template Replacements                                                                     *
//---------------------------------------------------------------------------------------------------------------------*


//---------------------------------------------------------------------------------------------------------------------*
//            Terminal Symbols as end of script in template mark                                                       *
//---------------------------------------------------------------------------------------------------------------------*



//---------------------------------------------------------------------------------------------------------------------*
//               P A R S E    L E X I C A L    T O K E N                                                               *
//---------------------------------------------------------------------------------------------------------------------*

bool C_Lexique_piccoloDevice_5F_lexique::parseLexicalToken (void) {
  cTokenFor_piccoloDevice_5F_lexique token ;
  mLoop = true ;
  token.mTokenCode = -1 ;
  while ((token.mTokenCode < 0) && (UNICODE_VALUE (mCurrentChar) != '\0')) {
    token.mLexicalAttribute_charValue = TO_UNICODE (0) ;
    token.mLexicalAttribute_identifierString.setLengthToZero () ;
    token.mLexicalAttribute_tokenString.setLengthToZero () ;
    token.mLexicalAttribute_uint_33__32_value = 0 ;
    mTokenStartLocation = mCurrentLocation ;
    try{
      if (testForInputUTF32CharRange (TO_UNICODE ('a'), TO_UNICODE ('z')) || testForInputUTF32CharRange (TO_UNICODE ('A'), TO_UNICODE ('Z'))) {
        do {
          ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_identifierString, ::scanner_function_toLower (*this, previousChar ())) ;
          ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, previousChar ()) ;
          if (testForInputUTF32CharRange (TO_UNICODE ('a'), TO_UNICODE ('z')) || testForInputUTF32CharRange (TO_UNICODE ('A'), TO_UNICODE ('Z')) || testForInputUTF32Char (TO_UNICODE ('_')) || testForInputUTF32CharRange (TO_UNICODE ('0'), TO_UNICODE ('9'))) {
          }else{
            mLoop = false ;
          }
        }while (mLoop) ;
        mLoop = true ;
        if (token.mTokenCode == -1) {
          token.mTokenCode = search_into_controlKeyWordList (token.mLexicalAttribute_identifierString) ;
        }
        if (token.mTokenCode == -1) {
          token.mTokenCode = kToken_identifier ;
        }
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccoloDevice_5F_lexique__30_x, 2, true)) {
        do {
          if (testForInputUTF32CharRange (TO_UNICODE ('0'), TO_UNICODE ('9'))) {
            ::scanner_routine_enterHexDigitIntoUInt (*this, previousChar (), token.mLexicalAttribute_uint_33__32_value, gLexicalMessage_piccoloDevice_5F_lexique_hexNumberTooLarge, gLexicalMessage_piccoloDevice_5F_lexique_internalError) ;
          }else if (testForInputUTF32CharRange (TO_UNICODE ('a'), TO_UNICODE ('f'))) {
            ::scanner_routine_enterHexDigitIntoUInt (*this, previousChar (), token.mLexicalAttribute_uint_33__32_value, gLexicalMessage_piccoloDevice_5F_lexique_hexNumberTooLarge, gLexicalMessage_piccoloDevice_5F_lexique_internalError) ;
          }else if (testForInputUTF32CharRange (TO_UNICODE ('A'), TO_UNICODE ('F'))) {
            ::scanner_routine_enterHexDigitIntoUInt (*this, previousChar (), token.mLexicalAttribute_uint_33__32_value, gLexicalMessage_piccoloDevice_5F_lexique_hexNumberTooLarge, gLexicalMessage_piccoloDevice_5F_lexique_internalError) ;
          }else if (testForInputUTF32Char (TO_UNICODE ('_'))) {
          }else{
            mLoop = false ;
          }
        }while (mLoop) ;
        mLoop = true ;
        token.mTokenCode = kToken_integer ;
        enterToken (token) ;
      }else if (testForInputUTF32CharRange (TO_UNICODE ('0'), TO_UNICODE ('9'))) {
        ::scanner_routine_enterDigitIntoUInt (*this, previousChar (), token.mLexicalAttribute_uint_33__32_value, gLexicalMessage_piccoloDevice_5F_lexique_decimalNumberTooLarge, gLexicalMessage_piccoloDevice_5F_lexique_internalError) ;
        do {
          if (testForInputUTF32CharRange (TO_UNICODE ('0'), TO_UNICODE ('9'))) {
            ::scanner_routine_enterDigitIntoUInt (*this, previousChar (), token.mLexicalAttribute_uint_33__32_value, gLexicalMessage_piccoloDevice_5F_lexique_decimalNumberTooLarge, gLexicalMessage_piccoloDevice_5F_lexique_internalError) ;
          }else if (testForInputUTF32Char (TO_UNICODE ('_'))) {
          }else{
            mLoop = false ;
          }
        }while (mLoop) ;
        mLoop = true ;
        token.mTokenCode = kToken_integer ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccoloDevice_5F_lexique__7D_, 1, true)) {
        token.mTokenCode = kToken__7D_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccoloDevice_5F_lexique__7B_, 1, true)) {
        token.mTokenCode = kToken__7B_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccoloDevice_5F_lexique__5D_, 1, true)) {
        token.mTokenCode = kToken__5D_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccoloDevice_5F_lexique__5B_, 1, true)) {
        token.mTokenCode = kToken__5B_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccoloDevice_5F_lexique__3E_, 1, true)) {
        token.mTokenCode = kToken__3E_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccoloDevice_5F_lexique__3C_, 1, true)) {
        token.mTokenCode = kToken__3C_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccoloDevice_5F_lexique__3B_, 1, true)) {
        token.mTokenCode = kToken__3B_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccoloDevice_5F_lexique__3A_, 1, true)) {
        token.mTokenCode = kToken__3A_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccoloDevice_5F_lexique__2F_, 1, true)) {
        token.mTokenCode = kToken__2F_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccoloDevice_5F_lexique__2D_, 1, true)) {
        token.mTokenCode = kToken__2D_ ;
        enterToken (token) ;
      }else if (testForInputUTF32String (kUnicodeString_piccoloDevice_5F_lexique__2C_, 1, true)) {
        token.mTokenCode = kToken__2C_ ;
        enterToken (token) ;
      }else if (testForInputUTF32Char (TO_UNICODE ('\"'))) {
        do {
          if (testForInputUTF32Char (TO_UNICODE ('\\'))) {
            if (testForInputUTF32Char (TO_UNICODE ('f'))) {
              ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, TO_UNICODE ('\f')) ;
            }else if (testForInputUTF32Char (TO_UNICODE ('n'))) {
              ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, TO_UNICODE ('\n')) ;
            }else if (testForInputUTF32Char (TO_UNICODE ('r'))) {
              ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, TO_UNICODE ('\r')) ;
            }else if (testForInputUTF32Char (TO_UNICODE ('t'))) {
              ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, TO_UNICODE ('\t')) ;
            }else if (testForInputUTF32Char (TO_UNICODE ('v'))) {
              ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, TO_UNICODE ('\v')) ;
            }else if (testForInputUTF32Char (TO_UNICODE ('\\'))) {
              ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, TO_UNICODE ('\\')) ;
            }else if (testForInputUTF32Char (TO_UNICODE ('0'))) {
              ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, TO_UNICODE ('\0')) ;
            }else if (testForInputUTF32Char (TO_UNICODE ('\"'))) {
              ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, TO_UNICODE ('\"')) ;
            }else if (testForInputUTF32Char (TO_UNICODE ('\''))) {
              ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, TO_UNICODE ('\'')) ;
            }else if (testForInputUTF32CharRange (TO_UNICODE ('0'), TO_UNICODE ('9'))) {
              do {
                ::scanner_routine_enterHexDigitIntoASCIIcharacter (*this, token.mLexicalAttribute_charValue, previousChar (), gLexicalMessage_piccoloDevice_5F_lexique_ASCIIcodeTooLargeError, gLexicalMessage_piccoloDevice_5F_lexique_internalError) ;
                if (testForInputUTF32CharRange (TO_UNICODE ('0'), TO_UNICODE ('9'))) {
                }else{
                  mLoop = false ;
                }
              }while (mLoop) ;
              mLoop = true ;
              ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, token.mLexicalAttribute_charValue) ;
            }else{
              lexicalError (gLexicalMessage_piccoloDevice_5F_lexique_incorrectCharConstant COMMA_LINE_AND_SOURCE_FILE) ;
            }
          }else if (testForInputUTF32Char (TO_UNICODE (' ')) || testForInputUTF32Char (TO_UNICODE ('!')) || testForInputUTF32CharRange (TO_UNICODE ('#'), TO_UNICODE ('~'))) {
            ::scanner_routine_enterCharacterIntoString (*this, token.mLexicalAttribute_tokenString, previousChar ()) ;
          }else{
            mLoop = false ;
          }
        }while (mLoop) ;
        mLoop = true ;
        if (testForInputUTF32Char (TO_UNICODE ('\"'))) {
          token.mTokenCode = kToken_string ;
          enterToken (token) ;
        }else{
          lexicalError (gLexicalMessage_piccoloDevice_5F_lexique_incorrectStringEnd COMMA_LINE_AND_SOURCE_FILE) ;
        }
      }else if (testForInputUTF32Char (TO_UNICODE ('#'))) {
        do {
          if (testForInputUTF32CharRange (TO_UNICODE (1), TO_UNICODE ('\t')) || testForInputUTF32Char (TO_UNICODE ('\v')) || testForInputUTF32Char (TO_UNICODE ('\f')) || testForInputUTF32CharRange (TO_UNICODE (14), TO_UNICODE (65533))) {
          }else{
            mLoop = false ;
          }
        }while (mLoop) ;
        mLoop = true ;
      }else if (testForInputUTF32CharRange (TO_UNICODE (1), TO_UNICODE (' '))) {
      }else if (testForInputUTF32Char (TO_UNICODE ('\0'))) { // End of source text ? 
        token.mTokenCode = kToken_ ; // Empty string code
      }else{ // Unknown input character
        unknownCharacterLexicalError (LINE_AND_SOURCE_FILE) ;
      }
    }catch (const C_lexicalErrorException &) {
      token.mTokenCode = -1 ; // No token
      advance () ; // ... go throught unknown character
    }
  }
  if ((UNICODE_VALUE (mCurrentChar) == '\0') && (token.mTemplateStringBeforeToken.length () > 0)) {
    token.mTokenCode = 0 ;
    enterToken (token) ;
  }
  return token.mTokenCode > 0 ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                         E N T E R    T O K E N                                                                      *
//---------------------------------------------------------------------------------------------------------------------*

void C_Lexique_piccoloDevice_5F_lexique::enterToken (const cTokenFor_piccoloDevice_5F_lexique & inToken) {
  cTokenFor_piccoloDevice_5F_lexique * ptr = NULL ;
  macroMyNew (ptr, cTokenFor_piccoloDevice_5F_lexique ()) ;
  ptr->mTokenCode = inToken.mTokenCode ;
  ptr->mStartLocation = mTokenStartLocation ;
  ptr->mEndLocation = mTokenEndLocation ;
  ptr->mTemplateStringBeforeToken = inToken.mTemplateStringBeforeToken ;
  ptr->mLexicalAttribute_charValue = inToken.mLexicalAttribute_charValue ;
  ptr->mLexicalAttribute_identifierString = inToken.mLexicalAttribute_identifierString ;
  ptr->mLexicalAttribute_tokenString = inToken.mLexicalAttribute_tokenString ;
  ptr->mLexicalAttribute_uint_33__32_value = inToken.mLexicalAttribute_uint_33__32_value ;
  enterTokenFromPointer (ptr) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//               A T T R I B U T E   A C C E S S                                                                       *
//-----------------------------------------------------------------------------*

utf32 C_Lexique_piccoloDevice_5F_lexique::attributeValue_charValue (void) const {
  cTokenFor_piccoloDevice_5F_lexique * ptr = (cTokenFor_piccoloDevice_5F_lexique *) mCurrentTokenPtr ;
  return ptr->mLexicalAttribute_charValue ;
}

//-----------------------------------------------------------------------------*

C_String C_Lexique_piccoloDevice_5F_lexique::attributeValue_identifierString (void) const {
  cTokenFor_piccoloDevice_5F_lexique * ptr = (cTokenFor_piccoloDevice_5F_lexique *) mCurrentTokenPtr ;
  return ptr->mLexicalAttribute_identifierString ;
}

//-----------------------------------------------------------------------------*

C_String C_Lexique_piccoloDevice_5F_lexique::attributeValue_tokenString (void) const {
  cTokenFor_piccoloDevice_5F_lexique * ptr = (cTokenFor_piccoloDevice_5F_lexique *) mCurrentTokenPtr ;
  return ptr->mLexicalAttribute_tokenString ;
}

//-----------------------------------------------------------------------------*

uint32_t C_Lexique_piccoloDevice_5F_lexique::attributeValue_uint_33__32_value (void) const {
  cTokenFor_piccoloDevice_5F_lexique * ptr = (cTokenFor_piccoloDevice_5F_lexique *) mCurrentTokenPtr ;
  return ptr->mLexicalAttribute_uint_33__32_value ;
}

//---------------------------------------------------------------------------------------------------------------------*
//         A S S I G N    F R O M    A T T R I B U T E                                                                 *
//-----------------------------------------------------------------------------*

GALGAS_lchar C_Lexique_piccoloDevice_5F_lexique::synthetizedAttribute_charValue (void) const {
  cTokenFor_piccoloDevice_5F_lexique * ptr = (cTokenFor_piccoloDevice_5F_lexique *) mCurrentTokenPtr ;
  macroValidSharedObject (ptr, cTokenFor_piccoloDevice_5F_lexique) ;
  GALGAS_location currentLocation (ptr->mStartLocation, ptr->mEndLocation, sourceText ()) ;
  GALGAS_char value (ptr->mLexicalAttribute_charValue) ;
  GALGAS_lchar result (value, currentLocation) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring C_Lexique_piccoloDevice_5F_lexique::synthetizedAttribute_identifierString (void) const {
  cTokenFor_piccoloDevice_5F_lexique * ptr = (cTokenFor_piccoloDevice_5F_lexique *) mCurrentTokenPtr ;
  macroValidSharedObject (ptr, cTokenFor_piccoloDevice_5F_lexique) ;
  GALGAS_location currentLocation (ptr->mStartLocation, ptr->mEndLocation, sourceText ()) ;
  GALGAS_string value (ptr->mLexicalAttribute_identifierString) ;
  GALGAS_lstring result (value, currentLocation) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring C_Lexique_piccoloDevice_5F_lexique::synthetizedAttribute_tokenString (void) const {
  cTokenFor_piccoloDevice_5F_lexique * ptr = (cTokenFor_piccoloDevice_5F_lexique *) mCurrentTokenPtr ;
  macroValidSharedObject (ptr, cTokenFor_piccoloDevice_5F_lexique) ;
  GALGAS_location currentLocation (ptr->mStartLocation, ptr->mEndLocation, sourceText ()) ;
  GALGAS_string value (ptr->mLexicalAttribute_tokenString) ;
  GALGAS_lstring result (value, currentLocation) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_luint C_Lexique_piccoloDevice_5F_lexique::synthetizedAttribute_uint_33__32_value (void) const {
  cTokenFor_piccoloDevice_5F_lexique * ptr = (cTokenFor_piccoloDevice_5F_lexique *) mCurrentTokenPtr ;
  macroValidSharedObject (ptr, cTokenFor_piccoloDevice_5F_lexique) ;
  GALGAS_location currentLocation (ptr->mStartLocation, ptr->mEndLocation, sourceText ()) ;
  GALGAS_uint value (ptr->mLexicalAttribute_uint_33__32_value) ;
  GALGAS_luint result (value, currentLocation) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                         I N T R O S P E C T I O N                                                                   *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringlist C_Lexique_piccoloDevice_5F_lexique::symbols (LOCATION_ARGS) {
  GALGAS_stringlist result = GALGAS_stringlist::constructor_emptyList (THERE) ;
  result.addAssign_operation (GALGAS_string ("identifier") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("integer") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("string") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("comment") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("controller") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("processor") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("romsize") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("eepromsize") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("bank") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("unusedregister") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("mirrorat") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("ram") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("register") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("at") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("to") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("configuration") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("width") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("description") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("mask") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("illegal") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("message") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("setting") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("<") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string (">") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string (",") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("-") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("/") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string (";") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string (":") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("[") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("]") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("{") COMMA_THERE) ;
  result.addAssign_operation (GALGAS_string ("}") COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_declaredByteMap::cMapElement_declaredByteMap (const GALGAS_lstring & inKey
                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_declaredByteMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_declaredByteMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_declaredByteMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_declaredByteMap::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_declaredByteMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_declaredByteMap * operand = (cMapElement_declaredByteMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredByteMap::GALGAS_declaredByteMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredByteMap::GALGAS_declaredByteMap (const GALGAS_declaredByteMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredByteMap & GALGAS_declaredByteMap::operator = (const GALGAS_declaredByteMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredByteMap GALGAS_declaredByteMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_declaredByteMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredByteMap GALGAS_declaredByteMap::constructor_mapWithMapToOverride (const GALGAS_declaredByteMap & inMapToOverride
                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_declaredByteMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredByteMap GALGAS_declaredByteMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_declaredByteMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declaredByteMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  cMapElement_declaredByteMap * p = NULL ;
  macroMyNew (p, cMapElement_declaredByteMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@declaredByteMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declaredByteMap::modifier_insertKey (GALGAS_lstring inKey,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_declaredByteMap * p = NULL ;
  macroMyNew (p, cMapElement_declaredByteMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' byte is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_declaredByteMap_searchKey = "the '%K' byte is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declaredByteMap::method_searchKey (GALGAS_lstring inKey,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  const cMapElement_declaredByteMap * p = (const cMapElement_declaredByteMap *) performSearch (inKey,
                                                                                                 inCompiler,
                                                                                                 kSearchErrorMessage_declaredByteMap_searchKey
                                                                                                 COMMA_THERE) ;
  if (NULL == p) {
  }else{
    macroValidSharedObject (p, cMapElement_declaredByteMap) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_declaredByteMap * GALGAS_declaredByteMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                         const GALGAS_string & inKey
                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement_declaredByteMap * result = (cMapElement_declaredByteMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_declaredByteMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_declaredByteMap::cEnumerator_declaredByteMap (const GALGAS_declaredByteMap & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredByteMap_2D_element cEnumerator_declaredByteMap::current (LOCATION_ARGS) const {
  const cMapElement_declaredByteMap * p = (const cMapElement_declaredByteMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_declaredByteMap) ;
  return GALGAS_declaredByteMap_2D_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_declaredByteMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @declaredByteMap type                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_declaredByteMap ("declaredByteMap",
                                        NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_declaredByteMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_declaredByteMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_declaredByteMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_declaredByteMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredByteMap GALGAS_declaredByteMap::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_declaredByteMap result ;
  const GALGAS_declaredByteMap * p = (const GALGAS_declaredByteMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_declaredByteMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("declaredByteMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

