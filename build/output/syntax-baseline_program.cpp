//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         File 'syntax-baseline_program.cpp'                                          *
//                                             Generated by version 3.0.0                                              *
//                                          september 4th, 2014, at 19h5'12"                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "grammar-baseline_include_grammar.h"
#include "grammar-pic18_grammar.h"
#include "grammar-pic18_include_grammar.h"
#include "grammar-piccoloDevice_grammar.h"
#include "list-baseline_routineDefinitionList.h"
#include "list-configDefinitionList.h"
#include "list-constantDefinitionList.h"
#include "list-ramDefinitionList.h"
#include "list-routineDeclarationList.h"
#include "map-bootloaderReservedRAMmap.h"
#include "map-ramBankTable.h"
#include "map-registerTable.h"
#include "option-piccolo_options.h"
#include "option-piccolo_options_not_in_cocoa.h"
#include "proc-baseline_analysis.h"
#include "struct-baseline_model.h"
#include "struct-piccoloDeviceModel.h"


//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_program::rule_baseline_5F_program_start_5F_symbol_i0_ (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_baseline) COMMA_SOURCE_FILE ("baseline_program.galgas", 16)) ;
  GALGAS_lstring var_programName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_program.galgas", 17)) ;
  GALGAS_lstring var_deviceName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("baseline_program.galgas", 18)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("baseline_program.galgas", 19)) ;
  GALGAS_baseline_5F_routineDefinitionList var_routineDefinitionList = GALGAS_baseline_5F_routineDefinitionList::constructor_emptyList (SOURCE_FILE ("baseline_program.galgas", 20)) ;
  GALGAS_ramDefinitionList var_ramDefinitionList = GALGAS_ramDefinitionList::constructor_emptyList (SOURCE_FILE ("baseline_program.galgas", 21)) ;
  GALGAS_lstringlist var_unusedRegisterList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE ("baseline_program.galgas", 22)) ;
  GALGAS_lstringlist var_unusedRoutineList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE ("baseline_program.galgas", 23)) ;
  GALGAS_configDefinitionList var_configDefinitionList = GALGAS_configDefinitionList::constructor_emptyList (SOURCE_FILE ("baseline_program.galgas", 24)) ;
  GALGAS_constantDefinitionList var_constantDefinitionList = GALGAS_constantDefinitionList::constructor_emptyList (SOURCE_FILE ("baseline_program.galgas", 25)) ;
  nt_section_5F_list_ (var_routineDefinitionList, var_unusedRoutineList, var_ramDefinitionList, var_unusedRegisterList, var_configDefinitionList, var_constantDefinitionList, inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("baseline_program.galgas", 33)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("baseline_program.galgas", 35)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_baseline_5F_model var_piccoloModel = GALGAS_baseline_5F_model::constructor_new (var_programName, var_deviceName, var_configDefinitionList, var_ramDefinitionList, var_unusedRegisterList, var_constantDefinitionList, var_routineDefinitionList, var_unusedRoutineList, GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("baseline_program.galgas", 45))  COMMA_SOURCE_FILE ("baseline_program.galgas", 36)) ;
    {
    routine_baseline_5F_analysis (var_piccoloModel, GALGAS_string::constructor_stringWithSourceFilePath (inCompiler  COMMA_SOURCE_FILE ("baseline_program.galgas", 47)), inCompiler  COMMA_SOURCE_FILE ("baseline_program.galgas", 47)) ;
    }
  }else if (kBoolFalse == test_0) {
    GALGAS_string var_hexDestinationFile = GALGAS_string::constructor_stringWithSourceFilePath (inCompiler  COMMA_SOURCE_FILE ("baseline_program.galgas", 49)).reader_stringByDeletingPathExtension (SOURCE_FILE ("baseline_program.galgas", 49)).add_operation (GALGAS_string (".hex"), inCompiler COMMA_SOURCE_FILE ("baseline_program.galgas", 49)) ;
    const enumGalgasBool test_1 = var_hexDestinationFile.reader_fileExists (SOURCE_FILE ("baseline_program.galgas", 50)).boolEnum () ;
    if (kBoolTrue == test_1) {
      {
      GALGAS_string::class_method_deleteFile (var_hexDestinationFile, inCompiler COMMA_SOURCE_FILE ("baseline_program.galgas", 51)) ;
      }
    }
    GALGAS_string var_asmDestinationFile = GALGAS_string::constructor_stringWithSourceFilePath (inCompiler  COMMA_SOURCE_FILE ("baseline_program.galgas", 53)).reader_stringByDeletingPathExtension (SOURCE_FILE ("baseline_program.galgas", 53)).add_operation (GALGAS_string (".asm"), inCompiler COMMA_SOURCE_FILE ("baseline_program.galgas", 53)) ;
    const enumGalgasBool test_2 = var_asmDestinationFile.reader_fileExists (SOURCE_FILE ("baseline_program.galgas", 54)).boolEnum () ;
    if (kBoolTrue == test_2) {
      {
      GALGAS_string::class_method_deleteFile (var_asmDestinationFile, inCompiler COMMA_SOURCE_FILE ("baseline_program.galgas", 55)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_program::rule_baseline_5F_program_start_5F_symbol_i0_importBootloaderSpecification (GALGAS_piccoloDeviceModel & outArgument_outPiccoloDeviceModel,
                                                                                                             GALGAS_string & outArgument_outDeviceName,
                                                                                                             GALGAS_uint & outArgument_outAccessBankSplitOffset,
                                                                                                             GALGAS_ramBankTable & outArgument_outRamBank,
                                                                                                             GALGAS_registerTable & outArgument_outRegisterTable,
                                                                                                             GALGAS_bootloaderReservedRAMmap & outArgument_outBootloaderReservedRAMmap,
                                                                                                             GALGAS_routineDeclarationList & outArgument_outBootloaderRoutineDeclarationList,
                                                                                                             GALGAS_routineDeclarationList & outArgument_outUserRoutineDeclarationList,
                                                                                                             GALGAS_luint & outArgument_outBootloaderReservedROMsize,
                                                                                                             C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outPiccoloDeviceModel.drop () ; // Release 'out' argument
  outArgument_outDeviceName.drop () ; // Release 'out' argument
  outArgument_outAccessBankSplitOffset.drop () ; // Release 'out' argument
  outArgument_outRamBank.drop () ; // Release 'out' argument
  outArgument_outRegisterTable.drop () ; // Release 'out' argument
  outArgument_outBootloaderReservedRAMmap.drop () ; // Release 'out' argument
  outArgument_outBootloaderRoutineDeclarationList.drop () ; // Release 'out' argument
  outArgument_outUserRoutineDeclarationList.drop () ; // Release 'out' argument
  outArgument_outBootloaderReservedROMsize.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_baseline) COMMA_SOURCE_FILE ("baseline_program.galgas", 69)) ;
  GALGAS_lstring var_programName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_program.galgas", 70)) ;
  GALGAS_location location_0 (var_programName.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_0, GALGAS_string ("this file does not define a bootloader specification")  COMMA_SOURCE_FILE ("baseline_program.galgas", 71)) ;
  outArgument_outPiccoloDeviceModel.drop () ; // Release error dropped variable
  outArgument_outAccessBankSplitOffset.drop () ; // Release error dropped variable
  outArgument_outRamBank.drop () ; // Release error dropped variable
  outArgument_outRegisterTable.drop () ; // Release error dropped variable
  outArgument_outBootloaderReservedRAMmap.drop () ; // Release error dropped variable
  outArgument_outBootloaderRoutineDeclarationList.drop () ; // Release error dropped variable
  outArgument_outUserRoutineDeclarationList.drop () ; // Release error dropped variable
  outArgument_outDeviceName.drop () ; // Release error dropped variable
  outArgument_outBootloaderReservedROMsize.drop () ; // Release error dropped variable
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("baseline_program.galgas", 76)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("baseline_program.galgas", 77)) ;
  nt_section_5F_list_parse (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("baseline_program.galgas", 79)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_program::rule_baseline_5F_program_start_5F_symbol_i0_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_baseline) COMMA_SOURCE_FILE ("baseline_program.galgas", 16)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_program.galgas", 17)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("baseline_program.galgas", 18)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("baseline_program.galgas", 19)) ;
  nt_section_5F_list_parse (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("baseline_program.galgas", 33)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_baseline_5F_program::rule_baseline_5F_program_start_5F_symbol_i0_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_baseline) COMMA_SOURCE_FILE ("baseline_program.galgas", 16)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("baseline_program.galgas", 17)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("baseline_program.galgas", 18)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("baseline_program.galgas", 19)) ;
  nt_section_5F_list_indexing (inCompiler) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE ("baseline_program.galgas", 33)) ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


