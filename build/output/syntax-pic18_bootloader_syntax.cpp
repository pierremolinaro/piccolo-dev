//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     File 'syntax-pic18_bootloader_syntax.cpp'                                       *
//                                             Generated by version 3.0.0                                              *
//                                         september 23th, 2014, at 21h34'46"                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "grammar-baseline_include_grammar.h"
#include "grammar-pic18_grammar.h"
#include "grammar-pic18_include_grammar.h"
#include "grammar-piccoloDevice_grammar.h"
#include "list-ramDefinitionList.h"
#include "list-routineDeclarationList.h"
#include "map-bootloaderReservedRAMmap.h"
#include "map-ramBankTable.h"
#include "map-registerTable.h"
#include "option-piccolo_options.h"
#include "option-piccolo_options_not_in_cocoa.h"
#include "proc-pic18BootloaderSpecificationAnalysis.h"
#include "struct-piccoloDeviceModel.h"


//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_bootloader_5F_syntax::rule_pic_31__38__5F_bootloader_5F_syntax_parse_5F_bootloader_i0_ (GALGAS_lstring & outArgument_outBootloaderName,
                                                                                                                    GALGAS_lstring & outArgument_outDeviceName,
                                                                                                                    GALGAS_routineDeclarationList & outArgument_outBootloaderRoutineDeclarationList,
                                                                                                                    GALGAS_bootloaderReservedRAMmap & outArgument_outBootloaderReservedRAMmap,
                                                                                                                    GALGAS_luint & outArgument_outReservedRomSize,
                                                                                                                    GALGAS_routineDeclarationList & outArgument_outUserRoutineDeclarationList,
                                                                                                                    GALGAS_ramDefinitionList & outArgument_outSharedRamDefinitionList,
                                                                                                                    GALGAS_string & outArgument_outListFileContents,
                                                                                                                    GALGAS_piccoloDeviceModel & outArgument_outPiccoloDeviceModel,
                                                                                                                    GALGAS_uint & outArgument_outAccessBankSplitOffset,
                                                                                                                    GALGAS_ramBankTable & outArgument_outRamBank,
                                                                                                                    GALGAS_registerTable & outArgument_outRegisterTable,
                                                                                                                    C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outBootloaderName.drop () ; // Release 'out' argument
  outArgument_outDeviceName.drop () ; // Release 'out' argument
  outArgument_outBootloaderRoutineDeclarationList.drop () ; // Release 'out' argument
  outArgument_outBootloaderReservedRAMmap.drop () ; // Release 'out' argument
  outArgument_outReservedRomSize.drop () ; // Release 'out' argument
  outArgument_outUserRoutineDeclarationList.drop () ; // Release 'out' argument
  outArgument_outSharedRamDefinitionList.drop () ; // Release 'out' argument
  outArgument_outListFileContents.drop () ; // Release 'out' argument
  outArgument_outPiccoloDeviceModel.drop () ; // Release 'out' argument
  outArgument_outAccessBankSplitOffset.drop () ; // Release 'out' argument
  outArgument_outRamBank.drop () ; // Release 'out' argument
  outArgument_outRegisterTable.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_pic_31__38_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 37)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bootloader) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 38)) ;
  outArgument_outBootloaderName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 39)) ;
  outArgument_outDeviceName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 40)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 42)) ;
  outArgument_outBootloaderRoutineDeclarationList = GALGAS_routineDeclarationList::constructor_emptyList (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 43)) ;
  outArgument_outBootloaderReservedRAMmap = GALGAS_bootloaderReservedRAMmap::constructor_emptyMap (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 44)) ;
  outArgument_outReservedRomSize = GALGAS_luint::constructor_new (GALGAS_uint ((uint32_t) 0U), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 45))  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 45)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_pic_31__38__5F_bootloader_5F_syntax_0 (inCompiler)) {
    case 2: {
      nt_routine_5F_declaration_ (outArgument_outBootloaderRoutineDeclarationList, inCompiler) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rom) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 50)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 51)) ;
      GALGAS_luint var_rs = inCompiler->synthetizedAttribute_uint_33__32_value () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 52)) ;
      const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, outArgument_outReservedRomSize.reader_uint (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 53)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_1) {
        GALGAS_location location_2 (var_rs.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_2, GALGAS_string ("ROM size already defined")  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 54)) ;
      }else if (kBoolFalse == test_1) {
        const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, var_rs.reader_uint (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 55)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
        if (kBoolTrue == test_3) {
          GALGAS_location location_4 (var_rs.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_4, GALGAS_string ("ROM size should be > 0")  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 56)) ;
        }else if (kBoolFalse == test_3) {
          const enumGalgasBool test_5 = GALGAS_bool (kIsNotEqual, var_rs.reader_uint (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 57)).modulo_operation (GALGAS_uint ((uint32_t) 8U), inCompiler COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 57)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
          if (kBoolTrue == test_5) {
            GALGAS_location location_6 (var_rs.reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_6, GALGAS_string ("ROM size should be a multiple of 8")  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 58)) ;
          }else if (kBoolFalse == test_5) {
            outArgument_outReservedRomSize = var_rs ;
          }
        }
      }
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ram) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 63)) ;
      GALGAS_lstring var_bankName = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 64)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 65)) ;
      GALGAS_luint var_rs = inCompiler->synthetizedAttribute_uint_33__32_value () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 66)) ;
      const enumGalgasBool test_7 = outArgument_outBootloaderReservedRAMmap.reader_hasKey (var_bankName.reader_string (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 67)) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 67)).boolEnum () ;
      if (kBoolTrue == test_7) {
        GALGAS_location location_8 (var_rs.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_8, GALGAS_string ("RAM size already defined for '").add_operation (var_bankName.reader_string (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 68)), inCompiler COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 68)).add_operation (GALGAS_string ("' bank"), inCompiler COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 68))  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 68)) ;
      }else if (kBoolFalse == test_7) {
        const enumGalgasBool test_9 = GALGAS_bool (kIsEqual, var_rs.reader_uint (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 69)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
        if (kBoolTrue == test_9) {
          GALGAS_location location_10 (var_rs.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_10, GALGAS_string ("RAM size should be > 0")  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 70)) ;
        }else if (kBoolFalse == test_9) {
          {
          outArgument_outBootloaderReservedRAMmap.modifier_insertKey (var_bankName, var_rs, inCompiler COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 72)) ;
          }
        }
      }
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 75)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 77)) ;
  outArgument_outUserRoutineDeclarationList = GALGAS_routineDeclarationList::constructor_emptyList (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 78)) ;
  bool repeatFlag_11 = true ;
  while (repeatFlag_11) {
    switch (select_pic_31__38__5F_bootloader_5F_syntax_1 (inCompiler)) {
    case 2: {
      nt_routine_5F_declaration_ (outArgument_outUserRoutineDeclarationList, inCompiler) ;
    } break ;
    default:
      repeatFlag_11 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 83)) ;
  outArgument_outSharedRamDefinitionList = GALGAS_ramDefinitionList::constructor_emptyList (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 85)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 86)) ;
  bool repeatFlag_12 = true ;
  while (repeatFlag_12) {
    switch (select_pic_31__38__5F_bootloader_5F_syntax_2 (inCompiler)) {
    case 2: {
      nt_ram_5F_definition_ (outArgument_outSharedRamDefinitionList, inCompiler) ;
    } break ;
    default:
      repeatFlag_12 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 91)) ;
  {
  routine_pic_31__38_BootloaderSpecificationAnalysis (GALGAS_string::constructor_stringWithSourceFilePath (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 94)), outArgument_outBootloaderName, outArgument_outDeviceName, outArgument_outBootloaderRoutineDeclarationList, outArgument_outBootloaderReservedRAMmap, outArgument_outReservedRomSize, outArgument_outUserRoutineDeclarationList, outArgument_outSharedRamDefinitionList, outArgument_outListFileContents, outArgument_outPiccoloDeviceModel, outArgument_outAccessBankSplitOffset, outArgument_outRamBank, outArgument_outRegisterTable, inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 93)) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_bootloader_5F_syntax::rule_pic_31__38__5F_bootloader_5F_syntax_parse_5F_bootloader_i0_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_pic_31__38_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 37)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bootloader) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 38)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 39)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 40)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 42)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_pic_31__38__5F_bootloader_5F_syntax_0 (inCompiler)) {
    case 2: {
      nt_routine_5F_declaration_parse (inCompiler) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rom) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 50)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 51)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 52)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ram) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 63)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 64)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 65)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 66)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 75)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 77)) ;
  bool repeatFlag_1 = true ;
  while (repeatFlag_1) {
    switch (select_pic_31__38__5F_bootloader_5F_syntax_1 (inCompiler)) {
    case 2: {
      nt_routine_5F_declaration_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_1 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 83)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 86)) ;
  bool repeatFlag_2 = true ;
  while (repeatFlag_2) {
    switch (select_pic_31__38__5F_bootloader_5F_syntax_2 (inCompiler)) {
    case 2: {
      nt_ram_5F_definition_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_2 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 91)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_bootloader_5F_syntax::rule_pic_31__38__5F_bootloader_5F_syntax_parse_5F_bootloader_i0_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_pic_31__38_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 37)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bootloader) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 38)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 39)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 40)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 42)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_pic_31__38__5F_bootloader_5F_syntax_0 (inCompiler)) {
    case 2: {
      nt_routine_5F_declaration_indexing (inCompiler) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rom) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 50)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 51)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 52)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ram) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 63)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 64)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 65)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 66)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 75)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 77)) ;
  bool repeatFlag_1 = true ;
  while (repeatFlag_1) {
    switch (select_pic_31__38__5F_bootloader_5F_syntax_1 (inCompiler)) {
    case 2: {
      nt_routine_5F_declaration_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_1 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 83)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 86)) ;
  bool repeatFlag_2 = true ;
  while (repeatFlag_2) {
    switch (select_pic_31__38__5F_bootloader_5F_syntax_2 (inCompiler)) {
    case 2: {
      nt_ram_5F_definition_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_2 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 91)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_bootloader_5F_syntax::rule_pic_31__38__5F_bootloader_5F_syntax_start_5F_symbol_i1_ (C_Lexique_piccolo_5F_lexique * inCompiler) {
  GALGAS_lstring var_bootloaderName ;
  GALGAS_lstring var_deviceName ;
  GALGAS_routineDeclarationList var_bootloaderRoutineDeclarationList ;
  GALGAS_bootloaderReservedRAMmap var_bootloaderReservedRAMmap ;
  GALGAS_luint var_reservedRomSize ;
  GALGAS_routineDeclarationList var_userRoutineDeclarationList ;
  GALGAS_ramDefinitionList var_sharedRamDefinitionList ;
  GALGAS_string var_listFileContents ;
  GALGAS_piccoloDeviceModel var_piccoloDeviceModel ;
  GALGAS_uint var_accessBankSplitOffset ;
  GALGAS_ramBankTable var_ramBank ;
  GALGAS_registerTable var_registerTable ;
  nt_parse_5F_bootloader_ (var_bootloaderName, var_deviceName, var_bootloaderRoutineDeclarationList, var_bootloaderReservedRAMmap, var_reservedRomSize, var_userRoutineDeclarationList, var_sharedRamDefinitionList, var_listFileContents, var_piccoloDeviceModel, var_accessBankSplitOffset, var_ramBank, var_registerTable, inCompiler) ;
  GALGAS_string var_listingFile = GALGAS_string::constructor_stringWithSourceFilePath (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 139)).reader_stringByDeletingPathExtension (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 139)).add_operation (GALGAS_string (".list"), inCompiler COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 139)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 140)).objectCompare (GALGAS_uint ((uint32_t) 0U))).operator_and (GALGAS_bool (gOption_piccolo_5F_options_ouputListingFile.reader_value ()) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 140)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_bool joker_4289_0 ; // Joker input parameter
    var_listFileContents.method_writeToFileWhenDifferentContents (var_listingFile, joker_4289_0, inCompiler COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 141)) ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 143)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    {
    GALGAS_string::class_method_deleteFileIfExists (var_listingFile, inCompiler COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 144)) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_bootloader_5F_syntax::rule_pic_31__38__5F_bootloader_5F_syntax_start_5F_symbol_i1_importBootloaderSpecification (GALGAS_piccoloDeviceModel & outArgument_outPiccoloDeviceModel,
                                                                                                                                             GALGAS_string & outArgument_outDeviceName,
                                                                                                                                             GALGAS_uint & outArgument_outAccessBankSplitOffset,
                                                                                                                                             GALGAS_ramBankTable & outArgument_outRamBank,
                                                                                                                                             GALGAS_registerTable & outArgument_outRegisterTable,
                                                                                                                                             GALGAS_bootloaderReservedRAMmap & outArgument_outBootloaderReservedRAMmap,
                                                                                                                                             GALGAS_routineDeclarationList & outArgument_outBootloaderRoutineDeclarationList,
                                                                                                                                             GALGAS_routineDeclarationList & outArgument_outUserRoutineDeclarationList,
                                                                                                                                             GALGAS_luint & outArgument_outBootloaderReservedROMsize,
                                                                                                                                             C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outPiccoloDeviceModel.drop () ; // Release 'out' argument
  outArgument_outDeviceName.drop () ; // Release 'out' argument
  outArgument_outAccessBankSplitOffset.drop () ; // Release 'out' argument
  outArgument_outRamBank.drop () ; // Release 'out' argument
  outArgument_outRegisterTable.drop () ; // Release 'out' argument
  outArgument_outBootloaderReservedRAMmap.drop () ; // Release 'out' argument
  outArgument_outBootloaderRoutineDeclarationList.drop () ; // Release 'out' argument
  outArgument_outUserRoutineDeclarationList.drop () ; // Release 'out' argument
  outArgument_outBootloaderReservedROMsize.drop () ; // Release 'out' argument
  GALGAS_lstring var_bootloaderName ;
  GALGAS_ramDefinitionList var_sharedRamDefinitionList ;
  GALGAS_string var_listFileContents ;
  GALGAS_lstring var_deviceName ;
  nt_parse_5F_bootloader_ (var_bootloaderName, var_deviceName, outArgument_outBootloaderRoutineDeclarationList, outArgument_outBootloaderReservedRAMmap, outArgument_outBootloaderReservedROMsize, outArgument_outUserRoutineDeclarationList, var_sharedRamDefinitionList, var_listFileContents, outArgument_outPiccoloDeviceModel, outArgument_outAccessBankSplitOffset, outArgument_outRamBank, outArgument_outRegisterTable, inCompiler) ;
  outArgument_outDeviceName = var_deviceName.mAttribute_string ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_bootloader_5F_syntax::rule_pic_31__38__5F_bootloader_5F_syntax_start_5F_symbol_i1_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_parse_5F_bootloader_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_bootloader_5F_syntax::rule_pic_31__38__5F_bootloader_5F_syntax_start_5F_symbol_i1_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_parse_5F_bootloader_indexing (inCompiler) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_bootloader_5F_syntax::rule_pic_31__38__5F_bootloader_5F_syntax_routine_5F_declaration_i2_ (GALGAS_routineDeclarationList & ioArgument_ioRoutineDefinitionList,
                                                                                                                       C_Lexique_piccolo_5F_lexique * inCompiler) {
  GALGAS_bool var_noreturn ;
  switch (select_pic_31__38__5F_bootloader_5F_syntax_3 (inCompiler)) {
  case 1: {
    var_noreturn = GALGAS_bool (false) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_noreturn) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 184)) ;
    var_noreturn = GALGAS_bool (true) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 187)) ;
  GALGAS_lstring var_routineName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 188)) ;
  GALGAS_luint var_requiredBank ;
  GALGAS_luint var_returnedBank ;
  GALGAS_bool var_preservesBank ;
  switch (select_pic_31__38__5F_bootloader_5F_syntax_4 (inCompiler)) {
  case 1: {
    var_requiredBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 193)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 193))  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 193)) ;
    var_returnedBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 194)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 194))  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 194)) ;
    var_preservesBank = GALGAS_bool (false) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bank) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 197)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 198)) ;
    switch (select_pic_31__38__5F_bootloader_5F_syntax_5 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_preserved) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 200)) ;
      const enumGalgasBool test_0 = var_noreturn.boolEnum () ;
      if (kBoolTrue == test_0) {
        inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 202)), GALGAS_string ("a \"noreturn\" routine cannot accept \"bank:preserved\" setting")  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 202)) ;
      }
      var_preservesBank = GALGAS_bool (true) ;
      var_requiredBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 205)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 205))  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 205)) ;
      var_returnedBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 206)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 206))  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 206)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_requires) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 208)) ;
      var_requiredBank = inCompiler->synthetizedAttribute_uint_33__32_value () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 209)) ;
      var_preservesBank = GALGAS_bool (false) ;
      switch (select_pic_31__38__5F_bootloader_5F_syntax_6 (inCompiler)) {
      case 1: {
        var_returnedBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 212)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 212))  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 212)) ;
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 214)) ;
        var_returnedBank = inCompiler->synthetizedAttribute_uint_33__32_value () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 215)) ;
        const enumGalgasBool test_1 = var_noreturn.boolEnum () ;
        if (kBoolTrue == test_1) {
          inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 217)), GALGAS_string ("a \"noreturn\" routine cannot accept \"bank:returned\" setting")  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 217)) ;
        }
      } break ;
      default:
        break ;
      }
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 221)) ;
      var_returnedBank = inCompiler->synthetizedAttribute_uint_33__32_value () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 222)) ;
      const enumGalgasBool test_2 = var_noreturn.boolEnum () ;
      if (kBoolTrue == test_2) {
        inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 224)), GALGAS_string ("a \"noreturn\" routine cannot accept \"bank:returned\" setting")  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 224)) ;
      }
      var_preservesBank = GALGAS_bool (false) ;
      var_requiredBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE ("pic18_bootloader_syntax.galgas", 227)), GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 227))  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 227)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
  ioArgument_ioRoutineDefinitionList.addAssign_operation (var_routineName, var_requiredBank, var_returnedBank, var_preservesBank, var_noreturn  COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 231)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_bootloader_5F_syntax::rule_pic_31__38__5F_bootloader_5F_syntax_routine_5F_declaration_i2_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_pic_31__38__5F_bootloader_5F_syntax_3 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_noreturn) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 184)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 187)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 188)) ;
  switch (select_pic_31__38__5F_bootloader_5F_syntax_4 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bank) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 197)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 198)) ;
    switch (select_pic_31__38__5F_bootloader_5F_syntax_5 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_preserved) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 200)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_requires) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 208)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 209)) ;
      switch (select_pic_31__38__5F_bootloader_5F_syntax_6 (inCompiler)) {
      case 1: {
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 214)) ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 215)) ;
      } break ;
      default:
        break ;
      }
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 221)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 222)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cParser_pic_31__38__5F_bootloader_5F_syntax::rule_pic_31__38__5F_bootloader_5F_syntax_routine_5F_declaration_i2_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_pic_31__38__5F_bootloader_5F_syntax_3 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_noreturn) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 184)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 187)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 188)) ;
  switch (select_pic_31__38__5F_bootloader_5F_syntax_4 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bank) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 197)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 198)) ;
    switch (select_pic_31__38__5F_bootloader_5F_syntax_5 (inCompiler)) {
    case 1: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_preserved) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 200)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_requires) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 208)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 209)) ;
      switch (select_pic_31__38__5F_bootloader_5F_syntax_6 (inCompiler)) {
      case 1: {
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 214)) ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 215)) ;
      } break ;
      default:
        break ;
      }
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 221)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE ("pic18_bootloader_syntax.galgas", 222)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


