
#----------------------------------------------------*

enum @baseline_instruction_FD_base_code {
  case ADDWF  case ANDWF  case COMF  case DECF  case DECFSZ  case INCF  case INCFSZ  case IORWF  case MOVF  case RLF  case RRF  case SUBWF  case SWAPF  case XORWF
}

getter @baseline_instruction_FD_base_code mnemonic -> @string outResult {
  switch self
    case ADDWF : outResult = "ADDWF"
    case ANDWF : outResult = "ANDWF"
    case COMF : outResult = "COMF"
    case DECF : outResult = "DECF"
    case DECFSZ : outResult = "DECFSZ"
    case INCF : outResult = "INCF"
    case INCFSZ : outResult = "INCFSZ"
    case IORWF : outResult = "IORWF"
    case MOVF : outResult = "MOVF"
    case RLF : outResult = "RLF"
    case RRF : outResult = "RRF"
    case SUBWF : outResult = "SUBWF"
    case SWAPF : outResult = "SWAPF"
    case XORWF : outResult = "XORWF"
  end
}

#----------------------------------------------------*

enum @baseline_F_instruction_base_code {
  case CLRF  case MOVWF
}

getter @baseline_F_instruction_base_code mnemonic -> @string outResult {
  switch self
    case CLRF   : outResult = "CLRF"
    case MOVWF  : outResult = "MOVWF"
  end
}

#----------------------------------------------------*

enum @baseline_bit_oriented_op {
  case BCF  case BSF
}

#----------------------------------------------------*

getter @baseline_bit_oriented_op mnemonic -> @string outResult {
  switch self
    case BCF : outResult = "BCF"
    case BSF : outResult = "BSF"
  end
}

#----------------------------------------------------*

enum @baseline_literal_instruction_opcode {
  case ANDLW  case IORLW  case MOVLW  case RETLW  case XORLW
}

#----------------------------------------------------*

getter @baseline_literal_instruction_opcode mnemonic -> @string outResult {
  switch self
    case ANDLW : outResult = "ANDLW"
    case IORLW : outResult = "IORLW"
    case MOVLW : outResult = "MOVLW"
    case RETLW : outResult = "RETLW"
    case XORLW : outResult = "XORLW"
  end
}

#----------------------------------------------------*

enum @baseline_IF_BitTest_opcode {
  case BTFSS  case BTFSC
}

#----------------------------------------------------*

getter @baseline_IF_BitTest_opcode mnemonic -> @string outResult {
  switch self
  case BTFSS : outResult = "BTFSS"
  case BTFSC : outResult = "BTFSC"
  end
} 

#----------------------------------------------------*

enum @baseline_WO_OPERAND_group {
  case CLRW  case NOP  case CLRWDT  case OPTION_  case SLEEP
}

#----------------------------------------------------*

getter @baseline_WO_OPERAND_group mnemonic -> @string outResult {
  switch self
  case NOP     : outResult = "NOP"
  case CLRW    : outResult = "CLRW"
  case CLRWDT  : outResult = "CLRWDT"
  case OPTION_ : outResult = "OPTION"
  case SLEEP   : outResult = "SLEEP"
  end
} 

#----------------------------------------------------*

