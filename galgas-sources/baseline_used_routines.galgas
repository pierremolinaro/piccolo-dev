

#---------------------------------------------------------------------------*

abstract method @baseline_instruction addUsedRoutines
  ?!@stringset ioUsedRoutines

#---------------------------------------------------------------------------*

override method @baseline_instruction_IF_BitTest addUsedRoutines
  ?!@stringset ioUsedRoutines {
  [self.mInstruction addUsedRoutines !?ioUsedRoutines]
}

#---------------------------------------------------------------------------*

override method @baseline_instruction_IF_SEMI_COLON addUsedRoutines
  ?!@stringset ioUsedRoutines {
  [self.mInstruction addUsedRoutines !?ioUsedRoutines]
}

#---------------------------------------------------------------------------*

override method @baseline_instruction_IF_IncDec addUsedRoutines
  ?!@stringset ioUsedRoutines {
  [self.mInstruction addUsedRoutines !?ioUsedRoutines]
}

#---------------------------------------------------------------------------*

override method @baseline_instruction_JUMP addUsedRoutines
  ?!@stringset ioUsedRoutines {
  ioUsedRoutines += !self.mTargetLabel.string
}

#---------------------------------------------------------------------------*

override method @baseline_instruction_GOTO addUsedRoutines
  ?!@stringset ioUsedRoutines {
  ioUsedRoutines += !self.mTargetLabel.string
}

#---------------------------------------------------------------------------*

override method @baseline_instruction_CALL addUsedRoutines
  ?!@stringset ioUsedRoutines {
  ioUsedRoutines += !self.mTargetLabel.string
}

#---------------------------------------------------------------------------*

override method @baseline_instruction_FOREVER addUsedRoutines
  ?!@stringset ioUsedRoutines {
  addBaselineUsedRoutinesFromInstructionList ( !self.mInstructionList !?ioUsedRoutines )
}

#---------------------------------------------------------------------------*

override method @baseline_instruction_STATIC_REPEAT addUsedRoutines
  ?!@stringset ioUsedRoutines {
  addBaselineUsedRoutinesFromInstructionList ( !self.mInstructionList !?ioUsedRoutines )
}

#---------------------------------------------------------------------------*

override method @baseline_instruction_MNOP addUsedRoutines
  ?!@stringset unused ioUsedRoutines {
}

#---------------------------------------------------------------------------*

override method @baseline_instruction_TRIS addUsedRoutines
  ?!@stringset unused ioUsedRoutines {
}

#---------------------------------------------------------------------------*

override method @baseline_instruction_WO_OPERAND addUsedRoutines
  ?!@stringset unused ioUsedRoutines {
}

#---------------------------------------------------------------------------*

override method @baseline_instruction_F addUsedRoutines
  ?!@stringset unused ioUsedRoutines {
}

#---------------------------------------------------------------------------*

override method @baseline_instruction_FB addUsedRoutines
  ?!@stringset unused ioUsedRoutines {
}

#---------------------------------------------------------------------------*

override method @baseline_instruction_do_while addUsedRoutines
  ?!@stringset ioUsedRoutines {
  addBaselineUsedRoutinesFromInstructionList ( !self.mRepeatedInstructionList !?ioUsedRoutines )
  for (* mInstructionList *) in  self.mWhilePartList do
    addBaselineUsedRoutinesFromInstructionList ( !mInstructionList !?ioUsedRoutines )
  end
}

#---------------------------------------------------------------------------*

override method @baseline_instruction_structured_if addUsedRoutines
  ?!@stringset ioUsedRoutines {
  addBaselineUsedRoutinesFromInstructionList ( !self.mThenInstructionList !?ioUsedRoutines )
  addBaselineUsedRoutinesFromInstructionList ( !self.mElseInstructionList !?ioUsedRoutines )
}

#---------------------------------------------------------------------------*

override method @baseline_instruction_FD addUsedRoutines
  ?!@stringset unused ioUsedRoutines {
}

#---------------------------------------------------------------------------*

override method @baseline_instruction_JSR addUsedRoutines
  ?!@stringset ioUsedRoutines {
  ioUsedRoutines += !self.mTargetLabel.string
}

#---------------------------------------------------------------------------*

override method @baseline_instruction_literalOperation addUsedRoutines
  ?!@stringset unused ioUsedRoutines {
}

#---------------------------------------------------------------------------*

proc addBaselineUsedRoutinesFromInstructionList
  ?let @baseline_instructionList inInstructionList
  ?!@stringset ioUsedRoutines {
  for (mInstruction) in  inInstructionList do
    [mInstruction addUsedRoutines !?ioUsedRoutines]
  end
}

#---------------------------------------------------------------------------*

func baseline_computeUsedRoutines
  ?let @baseline_routineDefinitionList inRoutineDefinitionList
  -> @stringset outUsedRoutineSet {
#--- Main routine is used
  outUsedRoutineSet = @stringset. setWithString { !"main"}
#--- Loop for accumulating used routines
  var s =@stringset.emptySet{}
  loop( [inRoutineDefinitionList length])
  while s != outUsedRoutineSet do
    s = outUsedRoutineSet
    for (mRoutineName * * mInstructionList *) in  inRoutineDefinitionList do
      if [outUsedRoutineSet hasKey !mRoutineName.string] then
        addBaselineUsedRoutinesFromInstructionList ( !mInstructionList !?outUsedRoutineSet )
      end
    end
  end
}

#---------------------------------------------------------------------------*

