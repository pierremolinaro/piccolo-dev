

#---------------------------------------------------------------------------*

abstract method @midrange_instruction addUsedRoutines
  ?!@stringset ioUsedRoutines

#---------------------------------------------------------------------------*

override method @midrange_instruction_IF_BitTest addUsedRoutines
  ?!@stringset ioUsedRoutines {
  [mInstruction addUsedRoutines !?ioUsedRoutines]
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_IF_SEMI_COLON addUsedRoutines
  ?!@stringset ioUsedRoutines {
  [mInstruction addUsedRoutines !?ioUsedRoutines]
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_IF_IncDec addUsedRoutines
  ?!@stringset ioUsedRoutines {
  [mInstruction addUsedRoutines !?ioUsedRoutines]
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_JUMP addUsedRoutines
  ?!@stringset ioUsedRoutines {
  ioUsedRoutines += !mTargetLabel.string
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_GOTO addUsedRoutines
  ?!@stringset ioUsedRoutines {
  ioUsedRoutines += !mTargetLabel.string
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_CALL addUsedRoutines
  ?!@stringset ioUsedRoutines {
  ioUsedRoutines += !mTargetLabel.string
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_FOREVER addUsedRoutines
  ?!@stringset ioUsedRoutines {
  addMidRangeUsedRoutinesFromInstructionList ( !mInstructionList !?ioUsedRoutines )
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_STATIC_REPEAT addUsedRoutines
  ?!@stringset ioUsedRoutines {
  addMidRangeUsedRoutinesFromInstructionList ( !mInstructionList !?ioUsedRoutines )
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_MNOP addUsedRoutines
  ?!@stringset unused ioUsedRoutines {
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_F addUsedRoutines
  ?!@stringset unused ioUsedRoutines {
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_CLRW addUsedRoutines
  ?!@stringset unused ioUsedRoutines {
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_CLRWDT addUsedRoutines
  ?!@stringset unused ioUsedRoutines {
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_SLEEP addUsedRoutines
  ?!@stringset unused ioUsedRoutines {
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_FB addUsedRoutines
  ?!@stringset unused ioUsedRoutines {
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_NOP addUsedRoutines
  ?!@stringset unused ioUsedRoutines {
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_banksel addUsedRoutines
  ?!@stringset unused ioUsedRoutines {
}

#---------------------------------------------------------------------------*

override method @midrangeInstruction_checkbank addUsedRoutines
  ?!@stringset unused ioUsedRoutines {
}

#---------------------------------------------------------------------------*

override method @midrangeInstruction_checknobank addUsedRoutines
  ?!@stringset unused ioUsedRoutines {
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_banksel_register addUsedRoutines
  ?!@stringset unused ioUsedRoutines {
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_do_while addUsedRoutines
  ?!@stringset ioUsedRoutines {
  addMidRangeUsedRoutinesFromInstructionList ( !mRepeatedInstructionList !?ioUsedRoutines )
  for () in  mWhilePartList do
    addMidRangeUsedRoutinesFromInstructionList ( !mInstructionList !?ioUsedRoutines )
  end
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_nobanksel addUsedRoutines
  ?!@stringset unused ioUsedRoutines {
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_savebank addUsedRoutines
  ?!@stringset ioUsedRoutines {
  addMidRangeUsedRoutinesFromInstructionList ( !mInstructionList !?ioUsedRoutines )
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_structured_if addUsedRoutines
  ?!@stringset ioUsedRoutines {
  addMidRangeUsedRoutinesFromInstructionList ( !mThenInstructionList !?ioUsedRoutines )
  addMidRangeUsedRoutinesFromInstructionList ( !mElseInstructionList !?ioUsedRoutines )
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_FD addUsedRoutines
  ?!@stringset unused ioUsedRoutines {
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_JSR addUsedRoutines
  ?!@stringset ioUsedRoutines {
  ioUsedRoutines += !mTargetLabel.string
}

#---------------------------------------------------------------------------*

override method @midrange_instruction_literalOperation addUsedRoutines
  ?!@stringset unused ioUsedRoutines {
}

#---------------------------------------------------------------------------*

proc addMidRangeUsedRoutinesFromInstructionList
  ?let @midrange_instructionList inInstructionList
  ?!@stringset ioUsedRoutines {
  for () in  inInstructionList do
    [mInstruction addUsedRoutines !?ioUsedRoutines]
  end
}

#---------------------------------------------------------------------------*

func midrange_computeUsedRoutines
  ?let @midrange_interruptDefinitionList inInterruptDefinitionList
  ?let @midrange_routineDefinitionList inRoutineDefinitionList
  -> @stringset outUsedRoutineSet {
#--- Main routine is used
  outUsedRoutineSet = @stringset. setWithString { !"main"}
#--- Routines called by interrupt routines are used
  for () in  inInterruptDefinitionList do
    addMidRangeUsedRoutinesFromInstructionList (
      !mInstructionList
      !?outUsedRoutineSet
    )  
  end
#--- Loop for accumulating used routines
  var s =@stringset.emptySet{}
  loop( [inRoutineDefinitionList length])
  while s != outUsedRoutineSet do
    s = outUsedRoutineSet
    for () in  inRoutineDefinitionList do
      if [outUsedRoutineSet hasKey !mRoutineName.string] then
        addMidRangeUsedRoutinesFromInstructionList ( !mInstructionList !?outUsedRoutineSet )
      end
    end
  end
}

#---------------------------------------------------------------------------*

