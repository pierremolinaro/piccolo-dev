//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'baseline_compilation.cpp'                       *
//                        Generated by version 2.5.4                         *
//                     january 21th, 2014, at 19h37'53"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "baseline_compilation.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "piccoloDevice_grammar.h"
#include "piccolo_options.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "baseline_compilation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*

cMapElement_baseline_5F_declaredRoutineMap::cMapElement_baseline_5F_declaredRoutineMap (const GALGAS_lstring & inKey
                                                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------*

bool cMapElement_baseline_5F_declaredRoutineMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_baseline_5F_declaredRoutineMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_baseline_5F_declaredRoutineMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_baseline_5F_declaredRoutineMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_baseline_5F_declaredRoutineMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_baseline_5F_declaredRoutineMap * operand = (cMapElement_baseline_5F_declaredRoutineMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_baseline_5F_declaredRoutineMap::GALGAS_baseline_5F_declaredRoutineMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_baseline_5F_declaredRoutineMap::GALGAS_baseline_5F_declaredRoutineMap (const GALGAS_baseline_5F_declaredRoutineMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_baseline_5F_declaredRoutineMap & GALGAS_baseline_5F_declaredRoutineMap::operator = (const GALGAS_baseline_5F_declaredRoutineMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_baseline_5F_declaredRoutineMap GALGAS_baseline_5F_declaredRoutineMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_baseline_5F_declaredRoutineMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_baseline_5F_declaredRoutineMap GALGAS_baseline_5F_declaredRoutineMap::constructor_mapWithMapToOverride (const GALGAS_baseline_5F_declaredRoutineMap & inMapToOverride
                                                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_declaredRoutineMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_baseline_5F_declaredRoutineMap GALGAS_baseline_5F_declaredRoutineMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_baseline_5F_declaredRoutineMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_baseline_5F_declaredRoutineMap::modifier_insertKey (GALGAS_lstring inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cMapElement_baseline_5F_declaredRoutineMap * p = NULL ;
  macroMyNew (p, cMapElement_baseline_5F_declaredRoutineMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' routine is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_baseline_5F_declaredRoutineMap_searchKey = "the '%K' routine is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_baseline_5F_declaredRoutineMap::method_searchKey (GALGAS_lstring inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_baseline_5F_declaredRoutineMap * p = (const cMapElement_baseline_5F_declaredRoutineMap *) performSearch (inKey,
                                                                                                                               inCompiler,
                                                                                                                               kSearchErrorMessage_baseline_5F_declaredRoutineMap_searchKey
                                                                                                                               COMMA_THERE) ;
  if (NULL == p) {
  }else{
    macroValidSharedObject (p, const cMapElement_baseline_5F_declaredRoutineMap) ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_baseline_5F_declaredRoutineMap * GALGAS_baseline_5F_declaredRoutineMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                              const GALGAS_string & inKey
                                                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_baseline_5F_declaredRoutineMap * result = (cMapElement_baseline_5F_declaredRoutineMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_baseline_5F_declaredRoutineMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_baseline_5F_declaredRoutineMap * GALGAS_baseline_5F_declaredRoutineMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                                 const GALGAS_lstring & inKey
                                                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_baseline_5F_declaredRoutineMap_searchKey COMMA_THERE) ;
  cMapElement_baseline_5F_declaredRoutineMap * result = (cMapElement_baseline_5F_declaredRoutineMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_baseline_5F_declaredRoutineMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_baseline_5F_declaredRoutineMap::cEnumerator_baseline_5F_declaredRoutineMap (const GALGAS_baseline_5F_declaredRoutineMap & inEnumeratedObject,
                                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_baseline_5F_declaredRoutineMap_2E_element cEnumerator_baseline_5F_declaredRoutineMap::current (LOCATION_ARGS) const {
  const cMapElement_baseline_5F_declaredRoutineMap * p = (const cMapElement_baseline_5F_declaredRoutineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_baseline_5F_declaredRoutineMap) ;
  return GALGAS_baseline_5F_declaredRoutineMap_2E_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_baseline_5F_declaredRoutineMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @baseline_declaredRoutineMap type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_baseline_5F_declaredRoutineMap ("baseline_declaredRoutineMap",
                                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_baseline_5F_declaredRoutineMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_baseline_5F_declaredRoutineMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_baseline_5F_declaredRoutineMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_baseline_5F_declaredRoutineMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_baseline_5F_declaredRoutineMap GALGAS_baseline_5F_declaredRoutineMap::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_declaredRoutineMap result ;
  const GALGAS_baseline_5F_declaredRoutineMap * p = (const GALGAS_baseline_5F_declaredRoutineMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_baseline_5F_declaredRoutineMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("baseline_declaredRoutineMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'baseline_analysis'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_baseline_5F_analysis (const GALGAS_baseline_5F_model constinArgument_inPiccoloModel,
                                   const GALGAS_string constinArgument_inSourceFileName,
                                   C_Compiler * inCompiler
                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_sourceFileBaseName = constinArgument_inSourceFileName.reader_lastPathComponent (SOURCE_FILE_AT_LINE (116)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (116)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_sourceFileBaseName.objectCompare (constinArgument_inPiccoloModel.reader_mProgramName (SOURCE_FILE_AT_LINE (117)).reader_string (SOURCE_FILE_AT_LINE (117)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (constinArgument_inPiccoloModel.reader_mProgramName (SOURCE_FILE_AT_LINE (118)).reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the program name ('").operator_concat (constinArgument_inPiccoloModel.reader_mProgramName (SOURCE_FILE_AT_LINE (118)).reader_string (SOURCE_FILE_AT_LINE (118)) COMMA_SOURCE_FILE_AT_LINE (118)).operator_concat (GALGAS_string ("') should be identical to the file base name '") COMMA_SOURCE_FILE_AT_LINE (118)).operator_concat (var_sourceFileBaseName COMMA_SOURCE_FILE_AT_LINE (119)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (119)) COMMA_SOURCE_FILE_AT_LINE (118)) ;
  }
  GALGAS_string var_listFileContents = GALGAS_string::makeEmptyString () ;
  GALGAS_piccoloDeviceModel var_piccoloDeviceModel ;
  {
  routine_parseDeviceDefinition (constinArgument_inPiccoloModel.mAttribute_mDeviceName, var_piccoloDeviceModel, inCompiler COMMA_SOURCE_FILE_AT_LINE (124)) ;
  }
  if (var_piccoloDeviceModel.reader_mProcessorType (SOURCE_FILE_AT_LINE (125)).isValid ()) {
    switch (var_piccoloDeviceModel.reader_mProcessorType (SOURCE_FILE_AT_LINE (125)).enumValue ()) {
    case GALGAS_processorType::kNotBuilt:
      break ;
    case GALGAS_processorType::kEnum_baseline: {
      } break ;
    case GALGAS_processorType::kEnum_pic_31__38__5F__36__30_: case GALGAS_processorType::kEnum_pic_31__38__5F__38__30_: {
      GALGAS_location location_2 (constinArgument_inPiccoloModel.reader_mDeviceName (SOURCE_FILE_AT_LINE (127)).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("a pic18 device is not accepted here : only a baseline device") COMMA_SOURCE_FILE_AT_LINE (127)) ;
      } break ;
    case GALGAS_processorType::kEnum_midrange: {
      GALGAS_location location_3 (constinArgument_inPiccoloModel.reader_mDeviceName (SOURCE_FILE_AT_LINE (128)).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("a mid-ranfe device is not accepted here : only a baseline device") COMMA_SOURCE_FILE_AT_LINE (128)) ;
      } break ;
    }
  }
  GALGAS_actualConfigurationMap var_actualConfigurationMap ;
  {
  routine_buildConfig (var_piccoloDeviceModel.reader_mConfigRegisterMap (SOURCE_FILE_AT_LINE (133)), constinArgument_inPiccoloModel.reader_mConfigDefinitionList (SOURCE_FILE_AT_LINE (134)), var_listFileContents, var_actualConfigurationMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (132)) ;
  }
  GALGAS_registerTable var_registerTable = var_piccoloDeviceModel.reader_mRegisterTable (SOURCE_FILE_AT_LINE (139)) ;
  GALGAS_ramBankTable var_ramBank = var_piccoloDeviceModel.reader_mRamBankTable (SOURCE_FILE_AT_LINE (140)) ;
  GALGAS_declaredByteMap var_declaredByteMap ;
  {
  routine_analyze_5F_ram_5F_sections (GALGAS_string ("DECLARED VARIABLES"), constinArgument_inPiccoloModel.mAttribute_mRamDefinitionList, var_ramBank, var_piccoloDeviceModel.reader_mRegisterTable (SOURCE_FILE_AT_LINE (145)), var_listFileContents, var_registerTable, var_declaredByteMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (141)) ;
  }
  GALGAS_baselineRoutineMap var_routineMap = GALGAS_baselineRoutineMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (151)) ;
  cEnumerator_baseline_5F_routineDefinitionList enumerator_6364 (constinArgument_inPiccoloModel.mAttribute_mRoutineDefinitionList, kEnumeration_up) ;
  while (enumerator_6364.hasCurrentObject ()) {
    {
    var_routineMap.modifier_insertKey (enumerator_6364.current_mRoutineName (HERE), enumerator_6364.current_mIsNoReturn (HERE), enumerator_6364.current_mPage (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (153)) ;
    }
    enumerator_6364.gotoNextObject () ;
  }
  GALGAS_constantMap var_constantMap = GALGAS_constantMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (156)) ;
  GALGAS_stringset var_usedRegisters = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (161)) ;
  cEnumerator_constantDefinitionList enumerator_6824 (constinArgument_inPiccoloModel.reader_mConstantDefinitionList (SOURCE_FILE_AT_LINE (162)), kEnumeration_up) ;
  while (enumerator_6824.hasCurrentObject ()) {
    GALGAS_sint_36__34_ var_result ;
    callCategoryMethod_eval ((const cPtr_immediatExpression *) enumerator_6824.current_mExpression (HERE).ptr (), var_registerTable, var_constantMap, var_result, var_usedRegisters, inCompiler COMMA_SOURCE_FILE_AT_LINE (163)) ;
    const enumGalgasBool test_4 = var_registerTable.reader_hasKey (enumerator_6824.current_mConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (164)) COMMA_SOURCE_FILE_AT_LINE (164)).boolEnum () ;
    if (kBoolTrue == test_4) {
      GALGAS_location location_5 (enumerator_6824.current_mConstantName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_5, GALGAS_string ("'").operator_concat (enumerator_6824.current_mConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (165)) COMMA_SOURCE_FILE_AT_LINE (165)).operator_concat (GALGAS_string ("' is already declared as ram register or special register") COMMA_SOURCE_FILE_AT_LINE (165)) COMMA_SOURCE_FILE_AT_LINE (165)) ;
    }else if (kBoolFalse == test_4) {
      {
      var_constantMap.modifier_insertKey (enumerator_6824.current_mConstantName (HERE), var_result, inCompiler COMMA_SOURCE_FILE_AT_LINE (167)) ;
      }
    }
    enumerator_6824.gotoNextObject () ;
  }
  const enumGalgasBool test_6 = GALGAS_bool (gOption_piccolo_5F_options_ouputListingFile.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_6) {
    {
    routine_print_5F_constant_5F_definition (var_constantMap, var_listFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (172)) ;
    }
  }
  const enumGalgasBool test_7 = var_routineMap.reader_hasKey (GALGAS_string ("main") COMMA_SOURCE_FILE_AT_LINE (178)).boolEnum () ;
  if (kBoolTrue == test_7) {
    GALGAS_bool var_isNoReturn ;
    GALGAS_luint var_page ;
    var_routineMap.method_searchKey (GALGAS_lstring::constructor_new (GALGAS_string ("main"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (179)), var_isNoReturn, var_page, inCompiler COMMA_SOURCE_FILE_AT_LINE (179)) ;
    const enumGalgasBool test_8 = var_isNoReturn.operator_not (SOURCE_FILE_AT_LINE (180)).boolEnum () ;
    if (kBoolTrue == test_8) {
      inCompiler->emitSemanticError (var_routineMap.reader_locationForKey (GALGAS_string ("main"), inCompiler COMMA_SOURCE_FILE_AT_LINE (181)), GALGAS_string ("the \"main\" should be declared with \"noreturn\" qualifier: \"noreturn main page 0\"") COMMA_SOURCE_FILE_AT_LINE (181)) ;
    }
    const enumGalgasBool test_9 = GALGAS_bool (kIsNotEqual, var_page.mAttribute_uint.objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_9) {
      GALGAS_location location_10 (var_page.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_10, GALGAS_string ("the \"main\" should be declared in page 0: \"noreturn main page 0\"") COMMA_SOURCE_FILE_AT_LINE (184)) ;
    }
  }else if (kBoolFalse == test_7) {
    inCompiler->emitSemanticError (constinArgument_inPiccoloModel.reader_mEndOfProgram (SOURCE_FILE_AT_LINE (187)), GALGAS_string ("the program should declare the \"main\" routine") COMMA_SOURCE_FILE_AT_LINE (187)) ;
  }
  GALGAS_bool var_needsToSavePCLATH = GALGAS_bool (false) ;
  GALGAS_uint var_totalPageCount = var_piccoloDeviceModel.mAttribute_mRomSize.reader_uint (SOURCE_FILE_AT_LINE (191)).add_operation (GALGAS_uint ((PMUInt32) 511U), inCompiler COMMA_SOURCE_FILE_AT_LINE (191)).divide_operation (GALGAS_uint ((PMUInt32) 512U), inCompiler COMMA_SOURCE_FILE_AT_LINE (191)) ;
  cEnumerator_baseline_5F_routineDefinitionList enumerator_8265 (constinArgument_inPiccoloModel.reader_mRoutineDefinitionList (SOURCE_FILE_AT_LINE (192)), kEnumeration_up) ;
  while (enumerator_8265.hasCurrentObject ()) {
    const enumGalgasBool test_11 = GALGAS_bool (kIsStrictSup, enumerator_8265.current_mPage (HERE).reader_uint (SOURCE_FILE_AT_LINE (193)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_11) {
      var_needsToSavePCLATH = GALGAS_bool (true) ;
    }
    const enumGalgasBool test_12 = GALGAS_bool (kIsSupOrEqual, enumerator_8265.current_mPage (HERE).reader_uint (SOURCE_FILE_AT_LINE (196)).objectCompare (var_totalPageCount)).boolEnum () ;
    if (kBoolTrue == test_12) {
      GALGAS_location location_13 (enumerator_8265.current_mPage (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_13, GALGAS_string ("invalid value (").operator_concat (enumerator_8265.current_mPage (HERE).mAttribute_uint.reader_string (SOURCE_FILE_AT_LINE (197)) COMMA_SOURCE_FILE_AT_LINE (197)).operator_concat (GALGAS_string ("); the device has ") COMMA_SOURCE_FILE_AT_LINE (197)).operator_concat (var_totalPageCount.reader_string (SOURCE_FILE_AT_LINE (197)) COMMA_SOURCE_FILE_AT_LINE (197)).operator_concat (GALGAS_string (" 512 word page(s) on rom") COMMA_SOURCE_FILE_AT_LINE (197)) COMMA_SOURCE_FILE_AT_LINE (197)) ;
    }
    enumerator_8265.gotoNextObject () ;
  }
  GALGAS_baseline_5F_routineDefinitionList var_sortedRoutineDefinitionList = GALGAS_baseline_5F_routineDefinitionList::constructor_emptyList (SOURCE_FILE_AT_LINE (201)) ;
  cEnumerator_baseline_5F_routineDefinitionList enumerator_8740 (constinArgument_inPiccoloModel.mAttribute_mRoutineDefinitionList, kEnumeration_up) ;
  while (enumerator_8740.hasCurrentObject ()) {
    const enumGalgasBool test_14 = GALGAS_bool (kIsEqual, enumerator_8740.current_mRoutineName (HERE).mAttribute_string.objectCompare (GALGAS_string ("main"))).boolEnum () ;
    if (kBoolTrue == test_14) {
      {
      var_sortedRoutineDefinitionList.modifier_insertAtIndex (enumerator_8740.current_mRoutineName (HERE), enumerator_8740.current_mPage (HERE), enumerator_8740.current_mIsNoReturn (HERE), enumerator_8740.current_mInstructionList (HERE), enumerator_8740.current_mEndOfRoutineLocation (HERE), GALGAS_uint ((PMUInt32) 0U), inCompiler COMMA_SOURCE_FILE_AT_LINE (204)) ;
      }
    }else if (kBoolFalse == test_14) {
      var_sortedRoutineDefinitionList.addAssign_operation (enumerator_8740.current_mRoutineName (HERE), enumerator_8740.current_mPage (HERE), enumerator_8740.current_mIsNoReturn (HERE), enumerator_8740.current_mInstructionList (HERE), enumerator_8740.current_mEndOfRoutineLocation (HERE) COMMA_SOURCE_FILE_AT_LINE (213)) ;
    }
    enumerator_8740.gotoNextObject () ;
  }
  GALGAS_baseline_5F_intermediate_5F_instructionList var_intermediateInstructionList = GALGAS_baseline_5F_intermediate_5F_instructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (223)) ;
  const enumGalgasBool test_15 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (224)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_15) {
    GALGAS_uint var_currentPage = GALGAS_uint ((PMUInt32) 0U) ;
    GALGAS_uint var_localLabelIndex = GALGAS_uint ((PMUInt32) 0U) ;
    if (var_totalPageCount.isValid ()) {
      PMUInt32 variant_9424 = var_totalPageCount.uintValue () ;
      bool loop_9424 = true ;
      while (loop_9424) {
        loop_9424 = GALGAS_bool (kIsStrictInf, var_currentPage.objectCompare (var_totalPageCount)).isValid () ;
        if (loop_9424) {
          loop_9424 = GALGAS_bool (kIsStrictInf, var_currentPage.objectCompare (var_totalPageCount)).boolValue () ;
        }
        if (loop_9424 && (0 == variant_9424)) {
          loop_9424 = false ;
          inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (227)) ;
        }
        if (loop_9424) {
          variant_9424 -- ;
          GALGAS_bool var_pseudo_5F_PAGE_5F_generated = GALGAS_bool (false) ;
          cEnumerator_baseline_5F_routineDefinitionList enumerator_9566 (var_sortedRoutineDefinitionList, kEnumeration_up) ;
          while (enumerator_9566.hasCurrentObject ()) {
            const enumGalgasBool test_16 = GALGAS_bool (kIsEqual, enumerator_9566.current_mPage (HERE).reader_uint (SOURCE_FILE_AT_LINE (230)).objectCompare (var_currentPage)).boolEnum () ;
            if (kBoolTrue == test_16) {
              const enumGalgasBool test_17 = var_pseudo_5F_PAGE_5F_generated.operator_not (SOURCE_FILE_AT_LINE (232)).boolEnum () ;
              if (kBoolTrue == test_17) {
                var_pseudo_5F_PAGE_5F_generated = GALGAS_bool (true) ;
                var_intermediateInstructionList.addAssign_operation (GALGAS_baseline_5F_intermediate_5F_pseudo_5F_PAGE::constructor_new (var_currentPage COMMA_SOURCE_FILE_AT_LINE (234)) COMMA_SOURCE_FILE_AT_LINE (234)) ;
              }
              GALGAS_routineKind var_routineKind ;
              const enumGalgasBool test_18 = enumerator_9566.current_mIsNoReturn (HERE).boolEnum () ;
              if (kBoolTrue == test_18) {
                var_routineKind = GALGAS_routineKind::constructor_noReturnRoutine (SOURCE_FILE_AT_LINE (239)) ;
                const enumGalgasBool test_19 = GALGAS_bool (kIsEqual, enumerator_9566.current_mInstructionList (HERE).reader_length (SOURCE_FILE_AT_LINE (241)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
                if (kBoolTrue == test_19) {
                  GALGAS_location location_20 (enumerator_9566.current_mRoutineName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
                  inCompiler->emitSemanticError (location_20, GALGAS_string ("a noreturn routine should terminate by a GOTO or a FOREVER loop") COMMA_SOURCE_FILE_AT_LINE (242)) ;
                }else if (kBoolFalse == test_19) {
                  GALGAS_baseline_5F_instruction var_lastInstruction ;
                  enumerator_9566.current_mInstructionList (HERE).method_last (var_lastInstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (244)) ;
                  callCategoryMethod_shouldNotContinueInSequence ((const cPtr_baseline_5F_instruction *) var_lastInstruction.ptr (), GALGAS_string ("a noreturn routine should terminate by a GOTO or a FOREVER loop"), inCompiler COMMA_SOURCE_FILE_AT_LINE (245)) ;
                }
              }else if (kBoolFalse == test_18) {
                var_routineKind = GALGAS_routineKind::constructor_regularRoutine (SOURCE_FILE_AT_LINE (248)) ;
                const enumGalgasBool test_21 = GALGAS_bool (kIsEqual, enumerator_9566.current_mInstructionList (HERE).reader_length (SOURCE_FILE_AT_LINE (250)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
                if (kBoolTrue == test_21) {
                  GALGAS_location location_22 (enumerator_9566.current_mRoutineName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
                  inCompiler->emitSemanticError (location_22, GALGAS_string ("a baseline routine must end with a MOVLW instruction") COMMA_SOURCE_FILE_AT_LINE (251)) ;
                }else if (kBoolFalse == test_21) {
                  GALGAS_baseline_5F_instruction var_lastInstruction ;
                  enumerator_9566.current_mInstructionList (HERE).method_last (var_lastInstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (253)) ;
                  callCategoryMethod_shouldTerminateWithMOVLW ((const cPtr_baseline_5F_instruction *) var_lastInstruction.ptr (), GALGAS_string ("the last routine instruction should be MOVLW"), inCompiler COMMA_SOURCE_FILE_AT_LINE (254)) ;
                }
              }
              const enumGalgasBool test_23 = GALGAS_bool (kIsNotEqual, enumerator_9566.current_mRoutineName (HERE).mAttribute_string.objectCompare (GALGAS_string ("main"))).boolEnum () ;
              if (kBoolTrue == test_23) {
                var_intermediateInstructionList.addAssign_operation (GALGAS_baseline_5F_intermediate_5F_pseudo_5F_BEGIN_5F_ROUTINE::constructor_new (enumerator_9566.current_mRoutineName (HERE), enumerator_9566.current_mIsNoReturn (HERE).operator_not (SOURCE_FILE_AT_LINE (259)) COMMA_SOURCE_FILE_AT_LINE (259)) COMMA_SOURCE_FILE_AT_LINE (259)) ;
                var_intermediateInstructionList.addAssign_operation (GALGAS_baseline_5F_intermediate_5F_pseudo_5F_LABEL::constructor_new (enumerator_9566.current_mRoutineName (HERE) COMMA_SOURCE_FILE_AT_LINE (260)) COMMA_SOURCE_FILE_AT_LINE (260)) ;
              }
              GALGAS_bool var_continuesInSequence ;
              {
              routine_handleBaselineInstructionList (var_currentPage, enumerator_9566.current_mInstructionList (HERE), var_routineMap, var_registerTable, var_constantMap, var_localLabelIndex, var_intermediateInstructionList, var_listFileContents, var_continuesInSequence, var_routineKind, enumerator_9566.current_mIsNoReturn (HERE).operator_not (SOURCE_FILE_AT_LINE (273)), var_usedRegisters, inCompiler COMMA_SOURCE_FILE_AT_LINE (262)) ;
              }
              var_intermediateInstructionList.addAssign_operation (GALGAS_baseline_5F_intermediate_5F_pseudo_5F_END_5F_ROUTINE::constructor_new (enumerator_9566.current_mRoutineName (HERE), var_currentPage COMMA_SOURCE_FILE_AT_LINE (276)) COMMA_SOURCE_FILE_AT_LINE (276)) ;
              const enumGalgasBool test_24 = enumerator_9566.current_mIsNoReturn (HERE).operator_and (var_continuesInSequence COMMA_SOURCE_FILE_AT_LINE (277)).boolEnum () ;
              if (kBoolTrue == test_24) {
                GALGAS_location location_25 (enumerator_9566.current_mRoutineName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
                inCompiler->emitSemanticError (location_25, GALGAS_string ("execution should not reach the end of a \"noreturn\" routine") COMMA_SOURCE_FILE_AT_LINE (278)) ;
              }
            }
            enumerator_9566.gotoNextObject () ;
          }
          var_currentPage.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (282)) ;
        }
      }
    }
  }
  GALGAS_stringset var_usedRoutineSet = function_baseline_5F_computeUsedRoutines (constinArgument_inPiccoloModel.mAttribute_mRoutineDefinitionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (286)) ;
  GALGAS_baseline_5F_declaredRoutineMap var_declaredRoutineMap = GALGAS_baseline_5F_declaredRoutineMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (289)) ;
  cEnumerator_baseline_5F_routineDefinitionList enumerator_12400 (constinArgument_inPiccoloModel.mAttribute_mRoutineDefinitionList, kEnumeration_up) ;
  while (enumerator_12400.hasCurrentObject ()) {
    {
    var_declaredRoutineMap.modifier_insertKey (enumerator_12400.current_mRoutineName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (291)) ;
    }
    enumerator_12400.gotoNextObject () ;
  }
  GALGAS_stringset var_unusedRoutineDeclarationUnicity = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (294)) ;
  cEnumerator_lstringlist enumerator_12629 (constinArgument_inPiccoloModel.mAttribute_mUnusedRoutineList, kEnumeration_up) ;
  while (enumerator_12629.hasCurrentObject ()) {
    const enumGalgasBool test_26 = var_declaredRoutineMap.reader_hasKey (enumerator_12629.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (296)).operator_not (SOURCE_FILE_AT_LINE (296)).boolEnum () ;
    if (kBoolTrue == test_26) {
      GALGAS_location location_27 (enumerator_12629.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_27, GALGAS_string ("the '").operator_concat (enumerator_12629.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (297)) COMMA_SOURCE_FILE_AT_LINE (297)).operator_concat (GALGAS_string ("' routine is not declared") COMMA_SOURCE_FILE_AT_LINE (297)) COMMA_SOURCE_FILE_AT_LINE (297)) ;
    }else if (kBoolFalse == test_26) {
      const enumGalgasBool test_28 = var_unusedRoutineDeclarationUnicity.reader_hasKey (enumerator_12629.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (298)).boolEnum () ;
      if (kBoolTrue == test_28) {
        GALGAS_location location_29 (enumerator_12629.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticWarning (location_29, GALGAS_string ("the '").operator_concat (enumerator_12629.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (299)) COMMA_SOURCE_FILE_AT_LINE (299)).operator_concat (GALGAS_string ("' routine is already declared as unused") COMMA_SOURCE_FILE_AT_LINE (299)) COMMA_SOURCE_FILE_AT_LINE (299)) ;
      }else if (kBoolFalse == test_28) {
        const enumGalgasBool test_30 = var_usedRoutineSet.reader_hasKey (enumerator_12629.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (300)).boolEnum () ;
        if (kBoolTrue == test_30) {
          GALGAS_location location_31 (enumerator_12629.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticWarning (location_31, GALGAS_string ("the '").operator_concat (enumerator_12629.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (301)) COMMA_SOURCE_FILE_AT_LINE (301)).operator_concat (GALGAS_string ("' routine is declared as unused, but is used") COMMA_SOURCE_FILE_AT_LINE (301)) COMMA_SOURCE_FILE_AT_LINE (301)) ;
        }
      }
    }
    var_unusedRoutineDeclarationUnicity.addAssign_operation (enumerator_12629.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (303)) ;
    enumerator_12629.gotoNextObject () ;
  }
  cEnumerator_baseline_5F_declaredRoutineMap enumerator_13181 (var_declaredRoutineMap, kEnumeration_up) ;
  while (enumerator_13181.hasCurrentObject ()) {
    const enumGalgasBool test_32 = var_usedRoutineSet.reader_hasKey (enumerator_13181.current_lkey (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (306)).operator_not (SOURCE_FILE_AT_LINE (306)).operator_and (var_unusedRoutineDeclarationUnicity.reader_hasKey (enumerator_13181.current_lkey (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (306)).operator_not (SOURCE_FILE_AT_LINE (306)) COMMA_SOURCE_FILE_AT_LINE (306)).boolEnum () ;
    if (kBoolTrue == test_32) {
      GALGAS_location location_33 (enumerator_13181.current_lkey (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticWarning (location_33, GALGAS_string ("the '").operator_concat (enumerator_13181.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (307)) COMMA_SOURCE_FILE_AT_LINE (307)).operator_concat (GALGAS_string ("' routine is unused") COMMA_SOURCE_FILE_AT_LINE (307)) COMMA_SOURCE_FILE_AT_LINE (307)) ;
    }
    enumerator_13181.gotoNextObject () ;
  }
  GALGAS_stringset var_unusedDeclarationUnicity = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (311)) ;
  cEnumerator_lstringlist enumerator_13582 (constinArgument_inPiccoloModel.mAttribute_mUnusedRegisterList, kEnumeration_up) ;
  while (enumerator_13582.hasCurrentObject ()) {
    const enumGalgasBool test_34 = var_registerTable.reader_hasKey (enumerator_13582.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (313)).operator_not (SOURCE_FILE_AT_LINE (313)).boolEnum () ;
    if (kBoolTrue == test_34) {
      GALGAS_location location_35 (enumerator_13582.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_35, GALGAS_string ("the '").operator_concat (enumerator_13582.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (314)) COMMA_SOURCE_FILE_AT_LINE (314)).operator_concat (GALGAS_string ("' byte is not declared") COMMA_SOURCE_FILE_AT_LINE (314)) COMMA_SOURCE_FILE_AT_LINE (314)) ;
    }else if (kBoolFalse == test_34) {
      const enumGalgasBool test_36 = var_unusedDeclarationUnicity.reader_hasKey (enumerator_13582.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (315)).boolEnum () ;
      if (kBoolTrue == test_36) {
        GALGAS_location location_37 (enumerator_13582.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticWarning (location_37, GALGAS_string ("the '").operator_concat (enumerator_13582.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (316)) COMMA_SOURCE_FILE_AT_LINE (316)).operator_concat (GALGAS_string ("' byte is already declared as unused") COMMA_SOURCE_FILE_AT_LINE (316)) COMMA_SOURCE_FILE_AT_LINE (316)) ;
      }else if (kBoolFalse == test_36) {
        const enumGalgasBool test_38 = var_usedRegisters.reader_hasKey (enumerator_13582.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (317)).boolEnum () ;
        if (kBoolTrue == test_38) {
          GALGAS_location location_39 (enumerator_13582.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticWarning (location_39, GALGAS_string ("the '").operator_concat (enumerator_13582.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (318)) COMMA_SOURCE_FILE_AT_LINE (318)).operator_concat (GALGAS_string ("' byte is declared as unused, but is used") COMMA_SOURCE_FILE_AT_LINE (318)) COMMA_SOURCE_FILE_AT_LINE (318)) ;
        }
      }
    }
    var_unusedDeclarationUnicity.addAssign_operation (enumerator_13582.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (320)) ;
    enumerator_13582.gotoNextObject () ;
  }
  cEnumerator_declaredByteMap enumerator_14102 (var_declaredByteMap, kEnumeration_up) ;
  while (enumerator_14102.hasCurrentObject ()) {
    const enumGalgasBool test_40 = var_usedRegisters.reader_hasKey (enumerator_14102.current_lkey (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (323)).operator_not (SOURCE_FILE_AT_LINE (323)).operator_and (var_unusedDeclarationUnicity.reader_hasKey (enumerator_14102.current_lkey (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (323)).operator_not (SOURCE_FILE_AT_LINE (323)) COMMA_SOURCE_FILE_AT_LINE (323)).boolEnum () ;
    if (kBoolTrue == test_40) {
      GALGAS_location location_41 (enumerator_14102.current_lkey (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticWarning (location_41, GALGAS_string ("the '").operator_concat (enumerator_14102.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (324)) COMMA_SOURCE_FILE_AT_LINE (324)).operator_concat (GALGAS_string ("' byte is unused") COMMA_SOURCE_FILE_AT_LINE (324)) COMMA_SOURCE_FILE_AT_LINE (324)) ;
    }
    enumerator_14102.gotoNextObject () ;
  }
  const enumGalgasBool test_42 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (328)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (gOption_piccolo_5F_options_ouputListingFile.reader_value ()) COMMA_SOURCE_FILE_AT_LINE (328)).boolEnum () ;
  if (kBoolTrue == test_42) {
    var_listFileContents.dotAssign_operation (GALGAS_string::makeEmptyString ().reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (329)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (329)) COMMA_SOURCE_FILE_AT_LINE (329)) ;
    var_listFileContents.dotAssign_operation (GALGAS_string ("*").operator_concat (GALGAS_string ("INTERMEDIATE INSTRUCTION LIST").reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 77U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (330)) COMMA_SOURCE_FILE_AT_LINE (330)).operator_concat (GALGAS_string ("*\n") COMMA_SOURCE_FILE_AT_LINE (330)) COMMA_SOURCE_FILE_AT_LINE (330)) ;
    var_listFileContents.dotAssign_operation (GALGAS_string::makeEmptyString ().reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (331)).operator_concat (GALGAS_string ("\n"
      "\n") COMMA_SOURCE_FILE_AT_LINE (331)) COMMA_SOURCE_FILE_AT_LINE (331)) ;
    var_listFileContents.dotAssign_operation (GALGAS_string ("Generated intermediate code:\n") COMMA_SOURCE_FILE_AT_LINE (332)) ;
    var_listFileContents.dotAssign_operation (GALGAS_string (" Line Length Mnemonic\n") COMMA_SOURCE_FILE_AT_LINE (333)) ;
    GALGAS_uint var_currentAddress = GALGAS_uint ((PMUInt32) 0U) ;
    cEnumerator_baseline_5F_intermediate_5F_instructionList enumerator_14906 (var_intermediateInstructionList, kEnumeration_up) ;
    GALGAS_uint index_14878 ((PMUInt32) 0) ;
    while (enumerator_14906.hasCurrentObject ()) {
      var_listFileContents.dotAssign_operation (index_14878.reader_string (SOURCE_FILE_AT_LINE (336)).reader_stringByLeftPadding (GALGAS_uint ((PMUInt32) 5U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (336)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (336)) COMMA_SOURCE_FILE_AT_LINE (336)) ;
      var_listFileContents.dotAssign_operation (callCategoryReader_length ((const cPtr_baseline_5F_intermediate_5F_instruction *) enumerator_14906.current_mInstruction (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (337)).reader_string (SOURCE_FILE_AT_LINE (337)).reader_stringByLeftPadding (GALGAS_uint ((PMUInt32) 6U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (337)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (337)) COMMA_SOURCE_FILE_AT_LINE (337)) ;
      callCategoryMethod_print ((const cPtr_baseline_5F_intermediate_5F_instruction *) enumerator_14906.current_mInstruction (HERE).ptr (), var_listFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (338)) ;
      var_listFileContents.dotAssign_operation (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (339)) ;
      callCategoryMethod_setCurrentAddress ((const cPtr_baseline_5F_intermediate_5F_instruction *) enumerator_14906.current_mInstruction (HERE).ptr (), var_currentAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (340)) ;
      enumerator_14906.gotoNextObject () ;
      index_14878.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (335)) ;
    }
    var_listFileContents.dotAssign_operation (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (342)) ;
    var_listFileContents.dotAssign_operation (GALGAS_string ("Code size without optimization: ").operator_concat (var_currentAddress.reader_string (SOURCE_FILE_AT_LINE (343)) COMMA_SOURCE_FILE_AT_LINE (343)).operator_concat (GALGAS_string (" words.\n"
      "\n") COMMA_SOURCE_FILE_AT_LINE (343)) COMMA_SOURCE_FILE_AT_LINE (343)) ;
  }
  const enumGalgasBool test_43 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (346)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (gOption_piccolo_5F_options_performOptimizations.reader_value ()) COMMA_SOURCE_FILE_AT_LINE (346)).boolEnum () ;
  if (kBoolTrue == test_43) {
    {
    routine_perform_5F_baseline_5F_optimizations (var_intermediateInstructionList, var_listFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (347)) ;
    }
  }
  {
  routine_initCodeGenerator (inCompiler COMMA_SOURCE_FILE_AT_LINE (350)) ;
  }
  GALGAS_registerExpression var_sr = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("STATUS"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (351)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (351)) COMMA_SOURCE_FILE_AT_LINE (351)) ;
  GALGAS_baseline_5F_intermediate_5F_registerExpression var_statusRegister ;
  GALGAS_bitSliceTable var_statusRegisterBitSliceTable ;
  callCategoryMethod_resolveBaselineAccess ((const cPtr_registerExpression *) var_sr.ptr (), var_registerTable, var_statusRegister, var_statusRegisterBitSliceTable, var_usedRegisters, inCompiler COMMA_SOURCE_FILE_AT_LINE (352)) ;
  GALGAS_baseline_5F_assembly_5F_instructionList var_assemblyInstructionList = GALGAS_baseline_5F_assembly_5F_instructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (358)) ;
  const enumGalgasBool test_44 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (359)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_44) {
    {
    routine_build_5F_baseline_5F_assembly_5F_code (var_intermediateInstructionList, var_actualConfigurationMap, var_statusRegister, var_statusRegisterBitSliceTable, var_assemblyInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (360)) ;
    }
  }
  const enumGalgasBool test_45 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (369)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_45) {
    var_listFileContents.dotAssign_operation (GALGAS_string::makeEmptyString ().reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (370)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (370)) COMMA_SOURCE_FILE_AT_LINE (370)) ;
    var_listFileContents.dotAssign_operation (GALGAS_string ("*").operator_concat (GALGAS_string ("GENERATED CODE").reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 77U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (371)) COMMA_SOURCE_FILE_AT_LINE (371)).operator_concat (GALGAS_string ("*\n") COMMA_SOURCE_FILE_AT_LINE (371)) COMMA_SOURCE_FILE_AT_LINE (371)) ;
    var_listFileContents.dotAssign_operation (GALGAS_string::makeEmptyString ().reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (372)).operator_concat (GALGAS_string ("\n"
      "\n") COMMA_SOURCE_FILE_AT_LINE (372)) COMMA_SOURCE_FILE_AT_LINE (372)) ;
    var_listFileContents.dotAssign_operation (GALGAS_string ("Address Code Mnemonic\n") COMMA_SOURCE_FILE_AT_LINE (373)) ;
    GALGAS_uint var_usedROMsize ;
    {
    routine_build_5F_baseline_5F_binary_5F_code (var_assemblyInstructionList, var_piccoloDeviceModel.mAttribute_mRomSize.reader_uint (SOURCE_FILE_AT_LINE (376)), var_listFileContents, var_usedROMsize, inCompiler COMMA_SOURCE_FILE_AT_LINE (374)) ;
    }
  }
  const enumGalgasBool test_46 = GALGAS_bool (gOption_piccolo_5F_options_ouputListingFile.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_46) {
    GALGAS_string var_listFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (383)).operator_concat (GALGAS_string (".list") COMMA_SOURCE_FILE_AT_LINE (383)) ;
    GALGAS_bool joker_17133_0 ; // Joker input parameter
    var_listFileContents.method_writeToFileWhenDifferentContents (var_listFile, joker_17133_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (384)) ;
  }
  const enumGalgasBool test_47 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (388)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_47) {
    GALGAS_string var_contents ;
    {
    routine_getGeneratedContents (var_contents, inCompiler COMMA_SOURCE_FILE_AT_LINE (399)) ;
    }
    GALGAS_string var_destinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (400)).operator_concat (GALGAS_string (".hex") COMMA_SOURCE_FILE_AT_LINE (400)) ;
    GALGAS_bool joker_17777_0 ; // Joker input parameter
    var_contents.method_writeToFileWhenDifferentContents (var_destinationFile, joker_17777_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (401)) ;
    const enumGalgasBool test_48 = GALGAS_bool (gOption_piccolo_5F_options_output_5F_C_5F_Array.reader_value ()).boolEnum () ;
    if (kBoolTrue == test_48) {
      GALGAS_string var_baseName = constinArgument_inSourceFileName.reader_lastPathComponent (SOURCE_FILE_AT_LINE (403)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (403)) ;
      {
      routine_get_5F_C_5F_ArrayImplementation (var_baseName, var_contents, inCompiler COMMA_SOURCE_FILE_AT_LINE (404)) ;
      }
      var_destinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (405)).operator_concat (GALGAS_string (".c") COMMA_SOURCE_FILE_AT_LINE (405)) ;
      GALGAS_bool joker_18147_0 ; // Joker input parameter
      var_contents.method_writeToFileWhenDifferentContents (var_destinationFile, joker_18147_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (406)) ;
      {
      routine_get_5F_C_5F_ArrayHeader (var_baseName, var_contents, inCompiler COMMA_SOURCE_FILE_AT_LINE (407)) ;
      }
      var_destinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (408)).operator_concat (GALGAS_string (".h") COMMA_SOURCE_FILE_AT_LINE (408)) ;
      GALGAS_bool joker_18348_0 ; // Joker input parameter
      var_contents.method_writeToFileWhenDifferentContents (var_destinationFile, joker_18348_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (409)) ;
    }
    const enumGalgasBool test_49 = GALGAS_bool (gOption_piccolo_5F_options_generateAssembly.reader_value ()).boolEnum () ;
    if (kBoolTrue == test_49) {
      GALGAS_string var_assemblyCode = GALGAS_string ("  processor ").operator_concat (constinArgument_inPiccoloModel.mAttribute_mDeviceName.reader_string (SOURCE_FILE_AT_LINE (428)) COMMA_SOURCE_FILE_AT_LINE (428)).operator_concat (GALGAS_string ("\n"
        "\n") COMMA_SOURCE_FILE_AT_LINE (428)) ;
      cEnumerator_baseline_5F_assembly_5F_instructionList enumerator_19457 (var_assemblyInstructionList, kEnumeration_up) ;
      while (enumerator_19457.hasCurrentObject ()) {
        callCategoryMethod_print ((const cPtr_baseline_5F_assembly_5F_instruction *) enumerator_19457.current_mInstruction (HERE).ptr (), var_assemblyCode, inCompiler COMMA_SOURCE_FILE_AT_LINE (430)) ;
        var_assemblyCode.dotAssign_operation (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (431)) ;
        enumerator_19457.gotoNextObject () ;
      }
      var_assemblyCode.dotAssign_operation (GALGAS_string ("\n"
        ";--- Registers\n") COMMA_SOURCE_FILE_AT_LINE (433)) ;
      cEnumerator_registerTable enumerator_19630 (var_registerTable, kEnumeration_up) ;
      while (enumerator_19630.hasCurrentObject ()) {
        GALGAS_uint var_address ;
        enumerator_19630.current_mRegisterAddressList (HERE).method_first (var_address, inCompiler COMMA_SOURCE_FILE_AT_LINE (435)) ;
        var_assemblyCode.dotAssign_operation (enumerator_19630.current_lkey (HERE).mAttribute_string.operator_concat (GALGAS_string (" EQU ") COMMA_SOURCE_FILE_AT_LINE (436)).operator_concat (var_address.reader_hexString (SOURCE_FILE_AT_LINE (436)) COMMA_SOURCE_FILE_AT_LINE (436)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (436)) COMMA_SOURCE_FILE_AT_LINE (436)) ;
        enumerator_19630.gotoNextObject () ;
      }
      var_assemblyCode.dotAssign_operation (GALGAS_string ("W EQU 0\n"
        "\n") COMMA_SOURCE_FILE_AT_LINE (438)) ;
      var_assemblyCode.dotAssign_operation (GALGAS_string (";--- Configuration\n") COMMA_SOURCE_FILE_AT_LINE (439)) ;
      cEnumerator_actualConfigurationMap enumerator_19907 (var_actualConfigurationMap, kEnumeration_up) ;
      while (enumerator_19907.hasCurrentObject ()) {
        var_assemblyCode.dotAssign_operation (GALGAS_string ("  __config ").operator_concat (enumerator_19907.current_mRegisterAddress (HERE).reader_hexString (SOURCE_FILE_AT_LINE (441)) COMMA_SOURCE_FILE_AT_LINE (441)).operator_concat (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (441)).operator_concat (enumerator_19907.current_mRegisterValue (HERE).operator_and (GALGAS_uint ((PMUInt32) 255U) COMMA_SOURCE_FILE_AT_LINE (441)).reader_hexString (SOURCE_FILE_AT_LINE (441)) COMMA_SOURCE_FILE_AT_LINE (441)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (441)) COMMA_SOURCE_FILE_AT_LINE (441)) ;
        enumerator_19907.gotoNextObject () ;
      }
      var_assemblyCode.dotAssign_operation (GALGAS_string ("\n"
        "  END\n") COMMA_SOURCE_FILE_AT_LINE (443)) ;
      GALGAS_string var_asmDestinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (444)).operator_concat (GALGAS_string (".asm") COMMA_SOURCE_FILE_AT_LINE (444)) ;
      GALGAS_bool joker_20257_0 ; // Joker input parameter
      var_assemblyCode.method_writeToFileWhenDifferentContents (var_asmDestinationFile, joker_20257_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (445)) ;
    }
  }else if (kBoolFalse == test_47) {
    GALGAS_string var_hexDestinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (448)).operator_concat (GALGAS_string (".hex") COMMA_SOURCE_FILE_AT_LINE (448)) ;
    const enumGalgasBool test_50 = var_hexDestinationFile.reader_fileExists (SOURCE_FILE_AT_LINE (449)).boolEnum () ;
    if (kBoolTrue == test_50) {
      {
      GALGAS_string::class_method_deleteFile (var_hexDestinationFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (450)) ;
      }
    }
    GALGAS_string var_asmDestinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (452)).operator_concat (GALGAS_string (".asm") COMMA_SOURCE_FILE_AT_LINE (452)) ;
    const enumGalgasBool test_51 = var_asmDestinationFile.reader_fileExists (SOURCE_FILE_AT_LINE (453)).boolEnum () ;
    if (kBoolTrue == test_51) {
      {
      GALGAS_string::class_method_deleteFile (var_asmDestinationFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (454)) ;
      }
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@baseline_instruction shouldTerminateWithMOVLW'      *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_baseline_5F_instruction_shouldTerminateWithMOVLW> gCategoryMethodTable_baseline_5F_instruction_shouldTerminateWithMOVLW ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_shouldTerminateWithMOVLW (const PMSInt32 inClassIndex,
                                                   categoryMethodSignature_baseline_5F_instruction_shouldTerminateWithMOVLW inMethod) {
  gCategoryMethodTable_baseline_5F_instruction_shouldTerminateWithMOVLW.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void callCategoryMethod_shouldTerminateWithMOVLW (const cPtr_baseline_5F_instruction * inObject,
                                                  const GALGAS_string constin_inErrorMessage,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_baseline_5F_instruction) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_baseline_5F_instruction_shouldTerminateWithMOVLW f = NULL ;
    if (classIndex < gCategoryMethodTable_baseline_5F_instruction_shouldTerminateWithMOVLW.count ()) {
      f = gCategoryMethodTable_baseline_5F_instruction_shouldTerminateWithMOVLW (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_baseline_5F_instruction_shouldTerminateWithMOVLW.count ()) {
           f = gCategoryMethodTable_baseline_5F_instruction_shouldTerminateWithMOVLW (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_baseline_5F_instruction_shouldTerminateWithMOVLW.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inErrorMessage, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*

static void categoryMethod_baseline_5F_instruction_shouldTerminateWithMOVLW (const cPtr_baseline_5F_instruction * inObject,
                                                                             const GALGAS_string constinArgument_inErrorMessage,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_baseline_5F_instruction * object = inObject ;
  macroValidSharedObject (object, const cPtr_baseline_5F_instruction) ;
  inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, constinArgument_inErrorMessage COMMA_SOURCE_FILE_AT_LINE (31)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_baseline_5F_instruction_shouldTerminateWithMOVLW (void) {
  enterCategoryMethod_shouldTerminateWithMOVLW (kTypeDescriptor_GALGAS_baseline_5F_instruction.mSlotID,
                                                categoryMethod_baseline_5F_instruction_shouldTerminateWithMOVLW) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_baseline_5F_instruction_shouldTerminateWithMOVLW (void) {
  gCategoryMethodTable_baseline_5F_instruction_shouldTerminateWithMOVLW.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_baseline_5F_instruction_shouldTerminateWithMOVLW (defineCategoryMethod_baseline_5F_instruction_shouldTerminateWithMOVLW,
                                                                             freeCategoryMethod_baseline_5F_instruction_shouldTerminateWithMOVLW) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@baseline_instruction_literalOperation shouldTerminateWithMOVLW'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_baseline_5F_instruction_5F_literalOperation_shouldTerminateWithMOVLW (const cPtr_baseline_5F_instruction * inObject,
                                                                                                 const GALGAS_string constinArgument_inErrorMessage,
                                                                                                 C_Compiler * inCompiler
                                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_baseline_5F_instruction_5F_literalOperation * object = (const cPtr_baseline_5F_instruction_5F_literalOperation *) inObject ;
  macroValidSharedObject (object, const cPtr_baseline_5F_instruction_5F_literalOperation) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, object->mAttribute_mLiteralInstruction.objectCompare (GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::constructor_MOVLW (SOURCE_FILE_AT_LINE (39)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, constinArgument_inErrorMessage COMMA_SOURCE_FILE_AT_LINE (40)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_baseline_5F_instruction_5F_literalOperation_shouldTerminateWithMOVLW (void) {
  enterCategoryMethod_shouldTerminateWithMOVLW (kTypeDescriptor_GALGAS_baseline_5F_instruction_5F_literalOperation.mSlotID,
                                                categoryMethod_baseline_5F_instruction_5F_literalOperation_shouldTerminateWithMOVLW) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_baseline_5F_instruction_5F_literalOperation_shouldTerminateWithMOVLW (defineCategoryMethod_baseline_5F_instruction_5F_literalOperation_shouldTerminateWithMOVLW, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@baseline_instruction_CALL shouldTerminateWithMOVLW'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_baseline_5F_instruction_5F_CALL_shouldTerminateWithMOVLW (const cPtr_baseline_5F_instruction * /* inObject */,
                                                                                     const GALGAS_string /* constinArgument_inErrorMessage */,
                                                                                     C_Compiler * /* inCompiler */
                                                                                     COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_baseline_5F_instruction_5F_CALL_shouldTerminateWithMOVLW (void) {
  enterCategoryMethod_shouldTerminateWithMOVLW (kTypeDescriptor_GALGAS_baseline_5F_instruction_5F_CALL.mSlotID,
                                                categoryMethod_baseline_5F_instruction_5F_CALL_shouldTerminateWithMOVLW) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_baseline_5F_instruction_5F_CALL_shouldTerminateWithMOVLW (defineCategoryMethod_baseline_5F_instruction_5F_CALL_shouldTerminateWithMOVLW, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@baseline_instruction_structured_if shouldTerminateWithMOVLW'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_baseline_5F_instruction_5F_structured_5F_if_shouldTerminateWithMOVLW (const cPtr_baseline_5F_instruction * inObject,
                                                                                                 const GALGAS_string /* constinArgument_inErrorMessage */,
                                                                                                 C_Compiler * inCompiler
                                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_baseline_5F_instruction_5F_structured_5F_if * object = (const cPtr_baseline_5F_instruction_5F_structured_5F_if *) inObject ;
  macroValidSharedObject (object, const cPtr_baseline_5F_instruction_5F_structured_5F_if) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mThenInstructionList.reader_length (SOURCE_FILE_AT_LINE (57)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the 'then' branch of this 'if' instruction does not have any instruction; it must terminate with a MOVLW instruction") COMMA_SOURCE_FILE_AT_LINE (58)) ;
  }else if (kBoolFalse == test_0) {
    GALGAS_baseline_5F_instruction var_lastInstruction ;
    object->mAttribute_mThenInstructionList.method_last (var_lastInstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (60)) ;
    callCategoryMethod_shouldTerminateWithMOVLW ((const cPtr_baseline_5F_instruction *) var_lastInstruction.ptr (), GALGAS_string ("the 'then' branch of this 'if' instruction must terminate with a MOVLW instruction"), inCompiler COMMA_SOURCE_FILE_AT_LINE (61)) ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, object->mAttribute_mElseInstructionList.reader_length (SOURCE_FILE_AT_LINE (64)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the 'else' branch of this 'if' instruction does not have any instruction; it must terminate with a MOVLW instruction") COMMA_SOURCE_FILE_AT_LINE (65)) ;
  }else if (kBoolFalse == test_1) {
    GALGAS_baseline_5F_instruction var_lastInstruction ;
    object->mAttribute_mElseInstructionList.method_last (var_lastInstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (67)) ;
    callCategoryMethod_shouldTerminateWithMOVLW ((const cPtr_baseline_5F_instruction *) var_lastInstruction.ptr (), GALGAS_string ("the 'else' branch of this 'if' instruction must terminate with a MOVLW instruction"), inCompiler COMMA_SOURCE_FILE_AT_LINE (68)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_baseline_5F_instruction_5F_structured_5F_if_shouldTerminateWithMOVLW (void) {
  enterCategoryMethod_shouldTerminateWithMOVLW (kTypeDescriptor_GALGAS_baseline_5F_instruction_5F_structured_5F_if.mSlotID,
                                                categoryMethod_baseline_5F_instruction_5F_structured_5F_if_shouldTerminateWithMOVLW) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_baseline_5F_instruction_5F_structured_5F_if_shouldTerminateWithMOVLW (defineCategoryMethod_baseline_5F_instruction_5F_structured_5F_if_shouldTerminateWithMOVLW, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@baseline_instruction shouldNotContinueInSequence'    *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_baseline_5F_instruction_shouldNotContinueInSequence> gCategoryMethodTable_baseline_5F_instruction_shouldNotContinueInSequence ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_shouldNotContinueInSequence (const PMSInt32 inClassIndex,
                                                      categoryMethodSignature_baseline_5F_instruction_shouldNotContinueInSequence inMethod) {
  gCategoryMethodTable_baseline_5F_instruction_shouldNotContinueInSequence.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void callCategoryMethod_shouldNotContinueInSequence (const cPtr_baseline_5F_instruction * inObject,
                                                     const GALGAS_string constin_inErrorMessage,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_baseline_5F_instruction) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_baseline_5F_instruction_shouldNotContinueInSequence f = NULL ;
    if (classIndex < gCategoryMethodTable_baseline_5F_instruction_shouldNotContinueInSequence.count ()) {
      f = gCategoryMethodTable_baseline_5F_instruction_shouldNotContinueInSequence (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_baseline_5F_instruction_shouldNotContinueInSequence.count ()) {
           f = gCategoryMethodTable_baseline_5F_instruction_shouldNotContinueInSequence (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_baseline_5F_instruction_shouldNotContinueInSequence.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inErrorMessage, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*

static void categoryMethod_baseline_5F_instruction_shouldNotContinueInSequence (const cPtr_baseline_5F_instruction * inObject,
                                                                                const GALGAS_string constinArgument_inErrorMessage,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_baseline_5F_instruction * object = inObject ;
  macroValidSharedObject (object, const cPtr_baseline_5F_instruction) ;
  inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, constinArgument_inErrorMessage COMMA_SOURCE_FILE_AT_LINE (82)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_baseline_5F_instruction_shouldNotContinueInSequence (void) {
  enterCategoryMethod_shouldNotContinueInSequence (kTypeDescriptor_GALGAS_baseline_5F_instruction.mSlotID,
                                                   categoryMethod_baseline_5F_instruction_shouldNotContinueInSequence) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_baseline_5F_instruction_shouldNotContinueInSequence (void) {
  gCategoryMethodTable_baseline_5F_instruction_shouldNotContinueInSequence.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_baseline_5F_instruction_shouldNotContinueInSequence (defineCategoryMethod_baseline_5F_instruction_shouldNotContinueInSequence,
                                                                                freeCategoryMethod_baseline_5F_instruction_shouldNotContinueInSequence) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@baseline_instruction_GOTO shouldNotContinueInSequence'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_baseline_5F_instruction_5F_GOTO_shouldNotContinueInSequence (const cPtr_baseline_5F_instruction * /* inObject */,
                                                                                        const GALGAS_string /* constinArgument_inErrorMessage */,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_baseline_5F_instruction_5F_GOTO_shouldNotContinueInSequence (void) {
  enterCategoryMethod_shouldNotContinueInSequence (kTypeDescriptor_GALGAS_baseline_5F_instruction_5F_GOTO.mSlotID,
                                                   categoryMethod_baseline_5F_instruction_5F_GOTO_shouldNotContinueInSequence) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_baseline_5F_instruction_5F_GOTO_shouldNotContinueInSequence (defineCategoryMethod_baseline_5F_instruction_5F_GOTO_shouldNotContinueInSequence, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@baseline_instruction_JUMP shouldNotContinueInSequence'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_baseline_5F_instruction_5F_JUMP_shouldNotContinueInSequence (const cPtr_baseline_5F_instruction * /* inObject */,
                                                                                        const GALGAS_string /* constinArgument_inErrorMessage */,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_baseline_5F_instruction_5F_JUMP_shouldNotContinueInSequence (void) {
  enterCategoryMethod_shouldNotContinueInSequence (kTypeDescriptor_GALGAS_baseline_5F_instruction_5F_JUMP.mSlotID,
                                                   categoryMethod_baseline_5F_instruction_5F_JUMP_shouldNotContinueInSequence) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_baseline_5F_instruction_5F_JUMP_shouldNotContinueInSequence (defineCategoryMethod_baseline_5F_instruction_5F_JUMP_shouldNotContinueInSequence, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@baseline_instruction_FOREVER shouldNotContinueInSequence'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_baseline_5F_instruction_5F_FOREVER_shouldNotContinueInSequence (const cPtr_baseline_5F_instruction * /* inObject */,
                                                                                           const GALGAS_string /* constinArgument_inErrorMessage */,
                                                                                           C_Compiler * /* inCompiler */
                                                                                           COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_baseline_5F_instruction_5F_FOREVER_shouldNotContinueInSequence (void) {
  enterCategoryMethod_shouldNotContinueInSequence (kTypeDescriptor_GALGAS_baseline_5F_instruction_5F_FOREVER.mSlotID,
                                                   categoryMethod_baseline_5F_instruction_5F_FOREVER_shouldNotContinueInSequence) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_baseline_5F_instruction_5F_FOREVER_shouldNotContinueInSequence (defineCategoryMethod_baseline_5F_instruction_5F_FOREVER_shouldNotContinueInSequence, NULL) ;

//---------------------------------------------------------------------------*

GALGAS_baseline_5F_declaredRoutineMap_2E_element::GALGAS_baseline_5F_declaredRoutineMap_2E_element (void) :
mAttribute_lkey () {
}

//---------------------------------------------------------------------------*

GALGAS_baseline_5F_declaredRoutineMap_2E_element::~ GALGAS_baseline_5F_declaredRoutineMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_baseline_5F_declaredRoutineMap_2E_element::GALGAS_baseline_5F_declaredRoutineMap_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//---------------------------------------------------------------------------*

GALGAS_baseline_5F_declaredRoutineMap_2E_element GALGAS_baseline_5F_declaredRoutineMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_baseline_5F_declaredRoutineMap_2E_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_baseline_5F_declaredRoutineMap_2E_element GALGAS_baseline_5F_declaredRoutineMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_baseline_5F_declaredRoutineMap_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_baseline_5F_declaredRoutineMap_2E_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_baseline_5F_declaredRoutineMap_2E_element::objectCompare (const GALGAS_baseline_5F_declaredRoutineMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_baseline_5F_declaredRoutineMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_baseline_5F_declaredRoutineMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_baseline_5F_declaredRoutineMap_2E_element::description (C_String & ioString,
                                                                    const PMSInt32 inIndentation) const {
  ioString << "<struct @baseline_declaredRoutineMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_baseline_5F_declaredRoutineMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                 @baseline_declaredRoutineMap.element type                 *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_baseline_5F_declaredRoutineMap_2E_element ("baseline_declaredRoutineMap.element",
                                                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_baseline_5F_declaredRoutineMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_baseline_5F_declaredRoutineMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_baseline_5F_declaredRoutineMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_baseline_5F_declaredRoutineMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_baseline_5F_declaredRoutineMap_2E_element GALGAS_baseline_5F_declaredRoutineMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                  C_Compiler * inCompiler
                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_baseline_5F_declaredRoutineMap_2E_element result ;
  const GALGAS_baseline_5F_declaredRoutineMap_2E_element * p = (const GALGAS_baseline_5F_declaredRoutineMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_baseline_5F_declaredRoutineMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("baseline_declaredRoutineMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


