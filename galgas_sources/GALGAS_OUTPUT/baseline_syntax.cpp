//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'baseline_syntax.cpp'                         *
//                        Generated by version 2.4.3                         *
//                       may 8th, 2013, at 14h21'45"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "baseline_syntax.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "piccoloDevice_grammar.h"
#include "piccolo_options.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "baseline_syntax.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_start_5F_symbol_i0_ (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_baseline) COMMA_SOURCE_FILE_AT_LINE (42)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_programName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (43)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_deviceName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (44)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (45)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_baseline_5F_routineDefinitionList var_routineDefinitionList = GALGAS_baseline_5F_routineDefinitionList::constructor_emptyList (SOURCE_FILE_AT_LINE (46)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_ramDefinitionList var_ramDefinitionList = GALGAS_ramDefinitionList::constructor_emptyList (SOURCE_FILE_AT_LINE (47)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_configDefinitionList var_configDefinitionList = GALGAS_configDefinitionList::constructor_emptyList (SOURCE_FILE_AT_LINE (48)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_constantDefinitionList var_constantDefinitionList = GALGAS_constantDefinitionList::constructor_emptyList (SOURCE_FILE_AT_LINE (49)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_baseline_5F_syntax_0 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mark) COMMA_SOURCE_FILE_AT_LINE (52)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (53)) ;
    } break ;
    case 3: {
      //-------- @nonterminalInstructionForGeneration
      nt_configuration_5F_definition_ (var_configDefinitionList, inCompiler) ;
    } break ;
    case 4: {
      //-------- @nonterminalInstructionForGeneration
      nt_ram_5F_definition_ (var_ramDefinitionList, inCompiler) ;
    } break ;
    case 5: {
      //-------- @nonterminalInstructionForGeneration
      nt_constant_5F_definition_ (var_constantDefinitionList, inCompiler) ;
    } break ;
    case 6: {
      //-------- @nonterminalInstructionForGeneration
      nt_baseline_5F_routine_5F_definition_ (var_routineDefinitionList, inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE_AT_LINE (65)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (67)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_baseline_5F_model var_piccoloModel = GALGAS_baseline_5F_model::constructor_new (var_programName, var_deviceName, var_configDefinitionList, var_ramDefinitionList, var_constantDefinitionList, var_routineDefinitionList, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (68)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_baseline_5F_analysis (var_piccoloModel, GALGAS_string::constructor_stringWithSourceFilePath (inCompiler COMMA_SOURCE_FILE_AT_LINE (77)), inCompiler COMMA_SOURCE_FILE_AT_LINE (77)) ;
    } //-------- @routineCallInstructionForGeneration
  }else if (kBoolFalse == test_1) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_hexDestinationFile = GALGAS_string::constructor_stringWithSourceFilePath (inCompiler COMMA_SOURCE_FILE_AT_LINE (79)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (79)).operator_concat (GALGAS_string (".hex") COMMA_SOURCE_FILE_AT_LINE (79)) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_2 = var_hexDestinationFile.reader_fileExists (SOURCE_FILE_AT_LINE (80)).boolEnum () ;
    if (kBoolTrue == test_2) {
      { //-------- @typeMethodInstructionForGeneration
      GALGAS_string::class_method_deleteFile (var_hexDestinationFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (81)) ;
      } //-------- @routineCallInstructionForGeneration
    }
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_asmDestinationFile = GALGAS_string::constructor_stringWithSourceFilePath (inCompiler COMMA_SOURCE_FILE_AT_LINE (83)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (83)).operator_concat (GALGAS_string (".asm") COMMA_SOURCE_FILE_AT_LINE (83)) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_3 = var_asmDestinationFile.reader_fileExists (SOURCE_FILE_AT_LINE (84)).boolEnum () ;
    if (kBoolTrue == test_3) {
      { //-------- @typeMethodInstructionForGeneration
      GALGAS_string::class_method_deleteFile (var_asmDestinationFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (85)) ;
      } //-------- @routineCallInstructionForGeneration
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_start_5F_symbol_i0_importBootloaderSpecification (GALGAS_piccoloDeviceModel & outArgument_outPiccoloDeviceModel,
                                                                                                           GALGAS_uint & outArgument_outAccessBankSplitOffset,
                                                                                                           GALGAS_ramBankTable & outArgument_outRamBank,
                                                                                                           GALGAS_registerTable & outArgument_outRegisterTable,
                                                                                                           GALGAS_bootloaderReservedRAMmap & outArgument_outBootloaderReservedRAMmap,
                                                                                                           GALGAS_routineDeclarationList & outArgument_outBootloaderRoutineDeclarationList,
                                                                                                           GALGAS_routineDeclarationList & outArgument_outUserRoutineDeclarationList,
                                                                                                           GALGAS_luint & outArgument_outBootloaderReservedROMsize,
                                                                                                           C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outPiccoloDeviceModel.drop () ; // Release 'out' argument
  outArgument_outAccessBankSplitOffset.drop () ; // Release 'out' argument
  outArgument_outRamBank.drop () ; // Release 'out' argument
  outArgument_outRegisterTable.drop () ; // Release 'out' argument
  outArgument_outBootloaderReservedRAMmap.drop () ; // Release 'out' argument
  outArgument_outBootloaderRoutineDeclarationList.drop () ; // Release 'out' argument
  outArgument_outUserRoutineDeclarationList.drop () ; // Release 'out' argument
  outArgument_outBootloaderReservedROMsize.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_baseline) COMMA_SOURCE_FILE_AT_LINE (98)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_programName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (99)) ;
  //-------- @errorInstructionForGeneration
  GALGAS_location location_0 (var_programName.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_0, GALGAS_string ("this file does not define a bootloader specification") COMMA_SOURCE_FILE_AT_LINE (100)) ;
  outArgument_outPiccoloDeviceModel.drop () ; // Release error dropped variable
  outArgument_outAccessBankSplitOffset.drop () ; // Release error dropped variable
  outArgument_outRamBank.drop () ; // Release error dropped variable
  outArgument_outRegisterTable.drop () ; // Release error dropped variable
  outArgument_outBootloaderReservedRAMmap.drop () ; // Release error dropped variable
  outArgument_outBootloaderRoutineDeclarationList.drop () ; // Release error dropped variable
  outArgument_outUserRoutineDeclarationList.drop () ; // Release error dropped variable
  outArgument_outBootloaderReservedROMsize.drop () ; // Release error dropped variable
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (105)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (106)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_1 = true ;
  while (repeatFlag_1) {
    switch (select_baseline_5F_syntax_0 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mark) COMMA_SOURCE_FILE_AT_LINE (109)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (110)) ;
    } break ;
    case 3: {
      //-------- @nonterminalInstructionForGeneration
      nt_configuration_5F_definition_parse (inCompiler) ;
    } break ;
    case 4: {
      //-------- @nonterminalInstructionForGeneration
      nt_ram_5F_definition_parse (inCompiler) ;
    } break ;
    case 5: {
      //-------- @nonterminalInstructionForGeneration
      nt_constant_5F_definition_parse (inCompiler) ;
    } break ;
    case 6: {
      //-------- @nonterminalInstructionForGeneration
      nt_baseline_5F_routine_5F_definition_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_1 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE_AT_LINE (120)) ;
}

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_start_5F_symbol_i0_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_baseline) COMMA_SOURCE_FILE_AT_LINE (42)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (43)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (44)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (45)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_baseline_5F_syntax_0 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mark) COMMA_SOURCE_FILE_AT_LINE (52)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (53)) ;
    } break ;
    case 3: {
      //-------- @nonterminalInstructionForGeneration
      nt_configuration_5F_definition_parse (inCompiler) ;
    } break ;
    case 4: {
      //-------- @nonterminalInstructionForGeneration
      nt_ram_5F_definition_parse (inCompiler) ;
    } break ;
    case 5: {
      //-------- @nonterminalInstructionForGeneration
      nt_constant_5F_definition_parse (inCompiler) ;
    } break ;
    case 6: {
      //-------- @nonterminalInstructionForGeneration
      nt_baseline_5F_routine_5F_definition_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE_AT_LINE (65)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_instruction_5F_list_i1_ (GALGAS_baseline_5F_instructionList & outArgument_outInstructionList,
                                                                                              C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outInstructionList.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outInstructionList = GALGAS_baseline_5F_instructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (128)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_baseline_5F_syntax_1 (inCompiler)) {
    case 2: {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_baseline_5F_instruction var_instruction ;
      //-------- @nonterminalInstructionForGeneration
      nt_baseline_5F_simple_5F_instruction_ (var_instruction, inCompiler) ;
      //-------- @plusEqualnstructionForGeneration
      outArgument_outInstructionList.addAssign_operation (var_instruction COMMA_SOURCE_FILE_AT_LINE (133)) ;
    } break ;
    case 3: {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_baseline_5F_instruction var_instruction ;
      //-------- @nonterminalInstructionForGeneration
      nt_baseline_5F_structured_5F_instruction_ (var_instruction, inCompiler) ;
      //-------- @plusEqualnstructionForGeneration
      outArgument_outInstructionList.addAssign_operation (var_instruction COMMA_SOURCE_FILE_AT_LINE (139)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_instruction_5F_list_i1_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_baseline_5F_syntax_1 (inCompiler)) {
    case 2: {
      //-------- @nonterminalInstructionForGeneration
      nt_baseline_5F_simple_5F_instruction_parse (inCompiler) ;
    } break ;
    case 3: {
      //-------- @nonterminalInstructionForGeneration
      nt_baseline_5F_structured_5F_instruction_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_routine_5F_definition_i2_ (GALGAS_baseline_5F_routineDefinitionList & ioArgument_ioRoutineDefinitionList,
                                                                                                C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @localVariableDeclarationForGeneration
  GALGAS_bool var_noreturn ;
  //-------- @selectInstructionForGeneration
  switch (select_baseline_5F_syntax_2 (inCompiler)) {
  case 1: {
    //-------- @assignmentInstructionForGeneration
    var_noreturn = GALGAS_bool (false) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_noreturn) COMMA_SOURCE_FILE_AT_LINE (152)) ;
    //-------- @assignmentInstructionForGeneration
    var_noreturn = GALGAS_bool (true) ;
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE_AT_LINE (155)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_routineName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (156)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_luint var_page ;
  //-------- @selectInstructionForGeneration
  switch (select_baseline_5F_syntax_3 (inCompiler)) {
  case 1: {
    //-------- @assignmentInstructionForGeneration
    var_page = GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (160)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_page) COMMA_SOURCE_FILE_AT_LINE (162)) ;
    //-------- @terminalCheckInstructionForGeneration
    var_page = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (163)) ;
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (166)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_baseline_5F_instructionList var_instructionList ;
  //-------- @nonterminalInstructionForGeneration
  nt_baseline_5F_instruction_5F_list_ (var_instructionList, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (171)) ;
  //-------- @plusEqualnstructionForGeneration
  ioArgument_ioRoutineDefinitionList.addAssign_operation (var_routineName, var_page, var_noreturn, var_instructionList, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (172)) ;
}

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_routine_5F_definition_i2_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @selectInstructionForGeneration
  switch (select_baseline_5F_syntax_2 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_noreturn) COMMA_SOURCE_FILE_AT_LINE (152)) ;
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE_AT_LINE (155)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (156)) ;
  //-------- @selectInstructionForGeneration
  switch (select_baseline_5F_syntax_3 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_page) COMMA_SOURCE_FILE_AT_LINE (162)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (163)) ;
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (166)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_baseline_5F_instruction_5F_list_parse (inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (171)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_structured_5F_instruction_i3_ (GALGAS_baseline_5F_instruction & outArgument_outInstruction,
                                                                                                    C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  //-------- @selectInstructionForGeneration
  switch (select_baseline_5F_syntax_4 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jump) COMMA_SOURCE_FILE_AT_LINE (187)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (189)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_JUMP::constructor_new (var_instructionLocation, var_targetLabelName COMMA_SOURCE_FILE_AT_LINE (190)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jsr) COMMA_SOURCE_FILE_AT_LINE (195)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (197)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_JSR::constructor_new (var_instructionLocation, var_targetLabelName COMMA_SOURCE_FILE_AT_LINE (198)) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_forever) COMMA_SOURCE_FILE_AT_LINE (203)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_baseline_5F_instructionList var_instructionList ;
    //-------- @nonterminalInstructionForGeneration
    nt_baseline_5F_instruction_5F_list_ (var_instructionList, inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE_AT_LINE (207)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_FOREVER::constructor_new (var_instructionLocation, var_instructionList, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (208)) ;
  } break ;
  case 4: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE_AT_LINE (214)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_registerExpression var_registerExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bitNumberExpression var_bitNumberExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_skipIfSet ;
    //-------- @selectInstructionForGeneration
    switch (select_baseline_5F_syntax_5 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE_AT_LINE (220)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (222)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_bit_5F_number_5F_parsing_ (var_bitNumberExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      var_skipIfSet = GALGAS_bool (true) ;
    } break ;
    case 2: {
      //-------- @nonterminalInstructionForGeneration
      nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (227)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_bit_5F_number_5F_parsing_ (var_bitNumberExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      var_skipIfSet = GALGAS_bool (false) ;
    } break ;
    default:
      break ;
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (231)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_baseline_5F_instruction var_instruction ;
    //-------- @nonterminalInstructionForGeneration
    nt_baseline_5F_simple_5F_instruction_ (var_instruction, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_IF_5F_BitTest::constructor_new (var_instructionLocation, var_instruction, var_skipIfSet, var_registerExpression, var_bitNumberExpression COMMA_SOURCE_FILE_AT_LINE (234)) ;
  } break ;
  case 5: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE_AT_LINE (242)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_increment ;
    //-------- @selectInstructionForGeneration
    switch (select_baseline_5F_syntax_6 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE_AT_LINE (246)) ;
      //-------- @assignmentInstructionForGeneration
      var_increment = GALGAS_bool (false) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE_AT_LINE (248)) ;
      //-------- @assignmentInstructionForGeneration
      var_increment = GALGAS_bool (true) ;
    } break ;
    default:
      break ;
    }
    //-------- @localVariableDeclarationForGeneration
    GALGAS_registerExpression var_registerExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_w_5F_isTarget ;
    //-------- @selectInstructionForGeneration
    switch (select_baseline_5F_syntax_7 (inCompiler)) {
    case 1: {
      //-------- @assignmentInstructionForGeneration
      var_w_5F_isTarget = GALGAS_bool (false) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (256)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (256)) ;
      //-------- @assignmentInstructionForGeneration
      var_w_5F_isTarget = GALGAS_bool (true) ;
    } break ;
    default:
      break ;
    }
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (258)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE_AT_LINE (259)).reader_uppercaseString (SOURCE_FILE_AT_LINE (259)) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).boolEnum () ;
    if (kBoolTrue == test_0) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_1 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("invalid '").operator_concat (var_condition COMMA_SOURCE_FILE_AT_LINE (261)).operator_concat (GALGAS_string ("' condition; it should be 'nz'") COMMA_SOURCE_FILE_AT_LINE (261)) COMMA_SOURCE_FILE_AT_LINE (261)) ;
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (263)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_baseline_5F_instruction var_instruction ;
    //-------- @nonterminalInstructionForGeneration
    nt_baseline_5F_simple_5F_instruction_ (var_instruction, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_IF_5F_IncDec::constructor_new (var_instructionLocation, var_instruction, var_increment, var_registerExpression, var_w_5F_isTarget COMMA_SOURCE_FILE_AT_LINE (266)) ;
  } break ;
  case 6: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE_AT_LINE (274)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_baseline_5F_structured_5F_if_5F_instruction_ (outArgument_outInstruction, inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE_AT_LINE (278)) ;
  } break ;
  case 7: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_do) COMMA_SOURCE_FILE_AT_LINE (280)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_baseline_5F_instructionList var_repeatedInstructionList ;
    //-------- @nonterminalInstructionForGeneration
    nt_baseline_5F_instruction_5F_list_ (var_repeatedInstructionList, inCompiler) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_endOfRepeatedInstructionList = inCompiler->here () ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_baseline_5F_partList var_whilePartList = GALGAS_baseline_5F_partList::constructor_emptyList (SOURCE_FILE_AT_LINE (287)) ;
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_2 = true ;
    while (repeatFlag_2) {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_while) COMMA_SOURCE_FILE_AT_LINE (289)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_baseline_5F_conditionExpression var_whileCondition ;
      //-------- @nonterminalInstructionForGeneration
      nt_baseline_5F_condition_5F_expression_ (var_whileCondition, inCompiler) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_baseline_5F_instructionList var_instructionList ;
      //-------- @nonterminalInstructionForGeneration
      nt_baseline_5F_instruction_5F_list_ (var_instructionList, inCompiler) ;
      //-------- @plusEqualnstructionForGeneration
      var_whilePartList.addAssign_operation (var_whileCondition, var_instructionList, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (296)) ;
      switch (select_baseline_5F_syntax_8 (inCompiler)) {
      case 2: {
      } break ;
      default:
        repeatFlag_2 = false ;
        break ;
      }
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE_AT_LINE (299)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_do_5F_while::constructor_new (var_instructionLocation, var_repeatedInstructionList, var_endOfRepeatedInstructionList, var_whilePartList COMMA_SOURCE_FILE_AT_LINE (300)) ;
  } break ;
  case 8: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mnop) COMMA_SOURCE_FILE_AT_LINE (307)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_luint var_occurrenceFactor = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (309)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_MNOP::constructor_new (var_instructionLocation, var_occurrenceFactor COMMA_SOURCE_FILE_AT_LINE (310)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_structured_5F_instruction_i3_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @selectInstructionForGeneration
  switch (select_baseline_5F_syntax_4 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jump) COMMA_SOURCE_FILE_AT_LINE (187)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (189)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jsr) COMMA_SOURCE_FILE_AT_LINE (195)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (197)) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_forever) COMMA_SOURCE_FILE_AT_LINE (203)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_baseline_5F_instruction_5F_list_parse (inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE_AT_LINE (207)) ;
  } break ;
  case 4: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE_AT_LINE (214)) ;
    //-------- @selectInstructionForGeneration
    switch (select_baseline_5F_syntax_5 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE_AT_LINE (220)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_register_5F_parsing_parse (inCompiler) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (222)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_bit_5F_number_5F_parsing_parse (inCompiler) ;
    } break ;
    case 2: {
      //-------- @nonterminalInstructionForGeneration
      nt_register_5F_parsing_parse (inCompiler) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (227)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_bit_5F_number_5F_parsing_parse (inCompiler) ;
    } break ;
    default:
      break ;
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (231)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_baseline_5F_simple_5F_instruction_parse (inCompiler) ;
  } break ;
  case 5: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE_AT_LINE (242)) ;
    //-------- @selectInstructionForGeneration
    switch (select_baseline_5F_syntax_6 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE_AT_LINE (246)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE_AT_LINE (248)) ;
    } break ;
    default:
      break ;
    }
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_parse (inCompiler) ;
    //-------- @selectInstructionForGeneration
    switch (select_baseline_5F_syntax_7 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (256)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (256)) ;
    } break ;
    default:
      break ;
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (258)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (263)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_baseline_5F_simple_5F_instruction_parse (inCompiler) ;
  } break ;
  case 6: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE_AT_LINE (274)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_baseline_5F_structured_5F_if_5F_instruction_parse (inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE_AT_LINE (278)) ;
  } break ;
  case 7: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_do) COMMA_SOURCE_FILE_AT_LINE (280)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_baseline_5F_instruction_5F_list_parse (inCompiler) ;
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_while) COMMA_SOURCE_FILE_AT_LINE (289)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_baseline_5F_condition_5F_expression_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_baseline_5F_instruction_5F_list_parse (inCompiler) ;
      switch (select_baseline_5F_syntax_8 (inCompiler)) {
      case 2: {
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE_AT_LINE (299)) ;
  } break ;
  case 8: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mnop) COMMA_SOURCE_FILE_AT_LINE (307)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (309)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_structured_5F_if_5F_instruction_i4_ (GALGAS_baseline_5F_instruction & outArgument_outInstruction,
                                                                                                          C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_instructionLocation = inCompiler->here () ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_baseline_5F_conditionExpression var_structured_5F_if_5F_condition ;
  //-------- @nonterminalInstructionForGeneration
  nt_baseline_5F_condition_5F_expression_ (var_structured_5F_if_5F_condition, inCompiler) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_baseline_5F_instructionList var_thenInstructionList ;
  //-------- @nonterminalInstructionForGeneration
  nt_baseline_5F_instruction_5F_list_ (var_thenInstructionList, inCompiler) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_baseline_5F_instructionList var_elseInstructionList ;
  //-------- @selectInstructionForGeneration
  switch (select_baseline_5F_syntax_9 (inCompiler)) {
  case 1: {
    //-------- @assignmentInstructionForGeneration
    var_elseInstructionList = GALGAS_baseline_5F_instructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (328)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_elsif) COMMA_SOURCE_FILE_AT_LINE (330)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_baseline_5F_instruction var_elsifPartInstruction ;
    //-------- @nonterminalInstructionForGeneration
    nt_baseline_5F_structured_5F_if_5F_instruction_ (var_elsifPartInstruction, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    var_elseInstructionList = GALGAS_baseline_5F_instructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (335)) ;
    //-------- @plusEqualnstructionForGeneration
    var_elseInstructionList.addAssign_operation (var_elsifPartInstruction COMMA_SOURCE_FILE_AT_LINE (336)) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_else) COMMA_SOURCE_FILE_AT_LINE (338)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_baseline_5F_instruction_5F_list_ (var_elseInstructionList, inCompiler) ;
  } break ;
  default:
    break ;
  }
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_endOfElsePartLocation = inCompiler->here () ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_structured_5F_if::constructor_new (var_instructionLocation, var_structured_5F_if_5F_condition, var_thenInstructionList, var_elseInstructionList, var_endOfElsePartLocation COMMA_SOURCE_FILE_AT_LINE (344)) ;
}

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_structured_5F_if_5F_instruction_i4_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_baseline_5F_condition_5F_expression_parse (inCompiler) ;
  //-------- @nonterminalInstructionForGeneration
  nt_baseline_5F_instruction_5F_list_parse (inCompiler) ;
  //-------- @selectInstructionForGeneration
  switch (select_baseline_5F_syntax_9 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_elsif) COMMA_SOURCE_FILE_AT_LINE (330)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_baseline_5F_structured_5F_if_5F_instruction_parse (inCompiler) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_else) COMMA_SOURCE_FILE_AT_LINE (338)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_baseline_5F_instruction_5F_list_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_simple_5F_instruction_i5_ (GALGAS_baseline_5F_instruction & outArgument_outInstruction,
                                                                                                C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  //-------- @selectInstructionForGeneration
  switch (select_baseline_5F_syntax_10 (inCompiler)) {
  case 1: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code var_baseCode ;
    //-------- @selectInstructionForGeneration
    switch (select_baseline_5F_syntax_11 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addwf) COMMA_SOURCE_FILE_AT_LINE (359)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_ADDWF (SOURCE_FILE_AT_LINE (360)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andwf) COMMA_SOURCE_FILE_AT_LINE (362)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_ANDWF (SOURCE_FILE_AT_LINE (363)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_comf) COMMA_SOURCE_FILE_AT_LINE (365)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_COMF (SOURCE_FILE_AT_LINE (366)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE_AT_LINE (368)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_DECF (SOURCE_FILE_AT_LINE (369)) ;
    } break ;
    case 5: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE_AT_LINE (371)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_INCF (SOURCE_FILE_AT_LINE (372)) ;
    } break ;
    case 6: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorwf) COMMA_SOURCE_FILE_AT_LINE (374)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_IORWF (SOURCE_FILE_AT_LINE (375)) ;
    } break ;
    case 7: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movf) COMMA_SOURCE_FILE_AT_LINE (377)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_MOVF (SOURCE_FILE_AT_LINE (378)) ;
    } break ;
    case 8: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rlf) COMMA_SOURCE_FILE_AT_LINE (380)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_RLF (SOURCE_FILE_AT_LINE (381)) ;
    } break ;
    case 9: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rrf) COMMA_SOURCE_FILE_AT_LINE (383)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_RRF (SOURCE_FILE_AT_LINE (384)) ;
    } break ;
    case 10: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subwf) COMMA_SOURCE_FILE_AT_LINE (386)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_SUBWF (SOURCE_FILE_AT_LINE (387)) ;
    } break ;
    case 11: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_swapf) COMMA_SOURCE_FILE_AT_LINE (389)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_SWAPF (SOURCE_FILE_AT_LINE (390)) ;
    } break ;
    case 12: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorwf) COMMA_SOURCE_FILE_AT_LINE (392)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_baseline_5F_instruction_5F_FD_5F_base_5F_code::constructor_XORWF (SOURCE_FILE_AT_LINE (393)) ;
    } break ;
    default:
      break ;
    }
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_registerExpression var_registerExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_W_5F_isDestination ;
    //-------- @nonterminalInstructionForGeneration
    nt_optional_5F_w_5F_as_5F_dest_ (var_W_5F_isDestination, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_FD::constructor_new (var_instructionLocation, var_baseCode, var_registerExpression, var_W_5F_isDestination COMMA_SOURCE_FILE_AT_LINE (400)) ;
  } break ;
  case 2: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code var_FAinstruction ;
    //-------- @selectInstructionForGeneration
    switch (select_baseline_5F_syntax_12 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrf) COMMA_SOURCE_FILE_AT_LINE (409)) ;
      //-------- @assignmentInstructionForGeneration
      var_FAinstruction = GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code::constructor_CLRF (SOURCE_FILE_AT_LINE (410)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movwf) COMMA_SOURCE_FILE_AT_LINE (412)) ;
      //-------- @assignmentInstructionForGeneration
      var_FAinstruction = GALGAS_baseline_5F_F_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE_AT_LINE (413)) ;
    } break ;
    default:
      break ;
    }
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_registerExpression var_registerExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_F::constructor_new (var_instructionLocation, var_FAinstruction, var_registerExpression COMMA_SOURCE_FILE_AT_LINE (418)) ;
  } break ;
  case 3: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_baseline_5F_bit_5F_oriented_5F_op var_bitOrientedOp ;
    //-------- @selectInstructionForGeneration
    switch (select_baseline_5F_syntax_13 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bcf) COMMA_SOURCE_FILE_AT_LINE (426)) ;
      //-------- @assignmentInstructionForGeneration
      var_bitOrientedOp = GALGAS_baseline_5F_bit_5F_oriented_5F_op::constructor_BCF (SOURCE_FILE_AT_LINE (426)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bsf) COMMA_SOURCE_FILE_AT_LINE (428)) ;
      //-------- @assignmentInstructionForGeneration
      var_bitOrientedOp = GALGAS_baseline_5F_bit_5F_oriented_5F_op::constructor_BSF (SOURCE_FILE_AT_LINE (428)) ;
    } break ;
    default:
      break ;
    }
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_registerExpression var_registerExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (433)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bitNumberExpression var_bitNumberExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_bit_5F_number_5F_parsing_ (var_bitNumberExpression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_FB::constructor_new (var_instructionLocation, var_bitOrientedOp, var_registerExpression, var_bitNumberExpression COMMA_SOURCE_FILE_AT_LINE (436)) ;
  } break ;
  case 4: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_goto) COMMA_SOURCE_FILE_AT_LINE (443)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (445)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_GOTO::constructor_new (var_instructionLocation, var_targetLabelName COMMA_SOURCE_FILE_AT_LINE (446)) ;
  } break ;
  case 5: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_call) COMMA_SOURCE_FILE_AT_LINE (451)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (453)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_CALL::constructor_new (var_instructionLocation, var_targetLabelName COMMA_SOURCE_FILE_AT_LINE (454)) ;
  } break ;
  case 6: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrw) COMMA_SOURCE_FILE_AT_LINE (459)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_WO_5F_OPERAND::constructor_new (inCompiler->here (), GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::constructor_CLRW (SOURCE_FILE_AT_LINE (460)) COMMA_SOURCE_FILE_AT_LINE (460)) ;
  } break ;
  case 7: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrwdt) COMMA_SOURCE_FILE_AT_LINE (462)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_WO_5F_OPERAND::constructor_new (inCompiler->here (), GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::constructor_CLRWDT (SOURCE_FILE_AT_LINE (463)) COMMA_SOURCE_FILE_AT_LINE (463)) ;
  } break ;
  case 8: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_nop) COMMA_SOURCE_FILE_AT_LINE (465)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_WO_5F_OPERAND::constructor_new (inCompiler->here (), GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::constructor_NOP (SOURCE_FILE_AT_LINE (466)) COMMA_SOURCE_FILE_AT_LINE (466)) ;
  } break ;
  case 9: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_option) COMMA_SOURCE_FILE_AT_LINE (468)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_WO_5F_OPERAND::constructor_new (inCompiler->here (), GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::constructor_OPTION_5F_ (SOURCE_FILE_AT_LINE (469)) COMMA_SOURCE_FILE_AT_LINE (469)) ;
  } break ;
  case 10: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_sleep) COMMA_SOURCE_FILE_AT_LINE (471)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_WO_5F_OPERAND::constructor_new (inCompiler->here (), GALGAS_baseline_5F_WO_5F_OPERAND_5F_group::constructor_SLEEP (SOURCE_FILE_AT_LINE (472)) COMMA_SOURCE_FILE_AT_LINE (472)) ;
  } break ;
  case 11: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_tris) COMMA_SOURCE_FILE_AT_LINE (474)) ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_operand = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (475)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_TRIS::constructor_new (inCompiler->here (), var_operand COMMA_SOURCE_FILE_AT_LINE (476)) ;
  } break ;
  case 12: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_baseline_5F_literal_5F_instruction_5F_opcode var_literalInstruction ;
    //-------- @selectInstructionForGeneration
    switch (select_baseline_5F_syntax_14 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andlw) COMMA_SOURCE_FILE_AT_LINE (480)) ;
      //-------- @assignmentInstructionForGeneration
      var_literalInstruction = GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::constructor_ANDLW (SOURCE_FILE_AT_LINE (480)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorlw) COMMA_SOURCE_FILE_AT_LINE (482)) ;
      //-------- @assignmentInstructionForGeneration
      var_literalInstruction = GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::constructor_IORLW (SOURCE_FILE_AT_LINE (482)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movlw) COMMA_SOURCE_FILE_AT_LINE (484)) ;
      //-------- @assignmentInstructionForGeneration
      var_literalInstruction = GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::constructor_MOVLW (SOURCE_FILE_AT_LINE (484)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorlw) COMMA_SOURCE_FILE_AT_LINE (486)) ;
      //-------- @assignmentInstructionForGeneration
      var_literalInstruction = GALGAS_baseline_5F_literal_5F_instruction_5F_opcode::constructor_XORLW (SOURCE_FILE_AT_LINE (486)) ;
    } break ;
    default:
      break ;
    }
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_immediatExpression var_expression ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_expression_ (var_expression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_baseline_5F_instruction_5F_literalOperation::constructor_new (var_instructionLocation, var_literalInstruction, var_expression COMMA_SOURCE_FILE_AT_LINE (491)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_simple_5F_instruction_i5_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @selectInstructionForGeneration
  switch (select_baseline_5F_syntax_10 (inCompiler)) {
  case 1: {
    //-------- @selectInstructionForGeneration
    switch (select_baseline_5F_syntax_11 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addwf) COMMA_SOURCE_FILE_AT_LINE (359)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andwf) COMMA_SOURCE_FILE_AT_LINE (362)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_comf) COMMA_SOURCE_FILE_AT_LINE (365)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE_AT_LINE (368)) ;
    } break ;
    case 5: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE_AT_LINE (371)) ;
    } break ;
    case 6: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorwf) COMMA_SOURCE_FILE_AT_LINE (374)) ;
    } break ;
    case 7: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movf) COMMA_SOURCE_FILE_AT_LINE (377)) ;
    } break ;
    case 8: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rlf) COMMA_SOURCE_FILE_AT_LINE (380)) ;
    } break ;
    case 9: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rrf) COMMA_SOURCE_FILE_AT_LINE (383)) ;
    } break ;
    case 10: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subwf) COMMA_SOURCE_FILE_AT_LINE (386)) ;
    } break ;
    case 11: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_swapf) COMMA_SOURCE_FILE_AT_LINE (389)) ;
    } break ;
    case 12: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorwf) COMMA_SOURCE_FILE_AT_LINE (392)) ;
    } break ;
    default:
      break ;
    }
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_parse (inCompiler) ;
    //-------- @nonterminalInstructionForGeneration
    nt_optional_5F_w_5F_as_5F_dest_parse (inCompiler) ;
  } break ;
  case 2: {
    //-------- @selectInstructionForGeneration
    switch (select_baseline_5F_syntax_12 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrf) COMMA_SOURCE_FILE_AT_LINE (409)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movwf) COMMA_SOURCE_FILE_AT_LINE (412)) ;
    } break ;
    default:
      break ;
    }
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_parse (inCompiler) ;
  } break ;
  case 3: {
    //-------- @selectInstructionForGeneration
    switch (select_baseline_5F_syntax_13 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bcf) COMMA_SOURCE_FILE_AT_LINE (426)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bsf) COMMA_SOURCE_FILE_AT_LINE (428)) ;
    } break ;
    default:
      break ;
    }
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_parse (inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (433)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_bit_5F_number_5F_parsing_parse (inCompiler) ;
  } break ;
  case 4: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_goto) COMMA_SOURCE_FILE_AT_LINE (443)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (445)) ;
  } break ;
  case 5: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_call) COMMA_SOURCE_FILE_AT_LINE (451)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (453)) ;
  } break ;
  case 6: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrw) COMMA_SOURCE_FILE_AT_LINE (459)) ;
  } break ;
  case 7: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrwdt) COMMA_SOURCE_FILE_AT_LINE (462)) ;
  } break ;
  case 8: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_nop) COMMA_SOURCE_FILE_AT_LINE (465)) ;
  } break ;
  case 9: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_option) COMMA_SOURCE_FILE_AT_LINE (468)) ;
  } break ;
  case 10: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_sleep) COMMA_SOURCE_FILE_AT_LINE (471)) ;
  } break ;
  case 11: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_tris) COMMA_SOURCE_FILE_AT_LINE (474)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (475)) ;
  } break ;
  case 12: {
    //-------- @selectInstructionForGeneration
    switch (select_baseline_5F_syntax_14 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andlw) COMMA_SOURCE_FILE_AT_LINE (480)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorlw) COMMA_SOURCE_FILE_AT_LINE (482)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movlw) COMMA_SOURCE_FILE_AT_LINE (484)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorlw) COMMA_SOURCE_FILE_AT_LINE (486)) ;
    } break ;
    default:
      break ;
    }
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_expression_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_factor_i6_ (GALGAS_baseline_5F_conditionExpression & outArgument_outCondition,
                                                                                              C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE_AT_LINE (504)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_baseline_5F_conditionExpression var_condition ;
  //-------- @nonterminalInstructionForGeneration
  nt_baseline_5F_condition_5F_factor_ (var_condition, inCompiler) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outCondition = GALGAS_baseline_5F_negateCondition::constructor_new (var_condition COMMA_SOURCE_FILE_AT_LINE (507)) ;
}

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_factor_i6_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE_AT_LINE (504)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_baseline_5F_condition_5F_factor_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_factor_i7_ (GALGAS_baseline_5F_conditionExpression & outArgument_outCondition,
                                                                                              C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_baseline_5F_condition_5F_expression_ (outArgument_outCondition, inCompiler) ;
}

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_factor_i7_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_baseline_5F_condition_5F_expression_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_factor_i8_ (GALGAS_baseline_5F_conditionExpression & outArgument_outCondition,
                                                                                              C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  //-------- @selectInstructionForGeneration
  switch (select_baseline_5F_syntax_15 (inCompiler)) {
  case 1: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_isIncrement ;
    //-------- @selectInstructionForGeneration
    switch (select_baseline_5F_syntax_16 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE_AT_LINE (526)) ;
      //-------- @assignmentInstructionForGeneration
      var_isIncrement = GALGAS_bool (true) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE_AT_LINE (528)) ;
      //-------- @assignmentInstructionForGeneration
      var_isIncrement = GALGAS_bool (false) ;
    } break ;
    default:
      break ;
    }
    //-------- @localVariableDeclarationForGeneration
    GALGAS_registerExpression var_registerExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_W_5F_isDestination ;
    //-------- @selectInstructionForGeneration
    switch (select_baseline_5F_syntax_17 (inCompiler)) {
    case 1: {
      //-------- @assignmentInstructionForGeneration
      var_W_5F_isDestination = GALGAS_bool (false) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (536)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (536)) ;
      //-------- @assignmentInstructionForGeneration
      var_W_5F_isDestination = GALGAS_bool (true) ;
    } break ;
    default:
      break ;
    }
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (538)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE_AT_LINE (539)).reader_uppercaseString (SOURCE_FILE_AT_LINE (539)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_branchIfZero ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("Z"))).boolEnum () ;
    if (kBoolTrue == test_0) {
      //-------- @assignmentInstructionForGeneration
      var_branchIfZero = GALGAS_bool (true) ;
    }else if (kBoolFalse == test_0) {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).boolEnum () ;
      if (kBoolTrue == test_1) {
        //-------- @assignmentInstructionForGeneration
        var_branchIfZero = GALGAS_bool (false) ;
      }else if (kBoolFalse == test_1) {
        //-------- @errorInstructionForGeneration
        GALGAS_location location_2 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_2, GALGAS_string ("invalid '").operator_concat (var_conditionString.reader_string (SOURCE_FILE_AT_LINE (546)) COMMA_SOURCE_FILE_AT_LINE (546)).operator_concat (GALGAS_string ("' condition; valid ones are: 'z' and 'nz'") COMMA_SOURCE_FILE_AT_LINE (547)) COMMA_SOURCE_FILE_AT_LINE (546)) ;
        var_branchIfZero.drop () ; // Release error dropped variable
      }
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outCondition = GALGAS_baseline_5F_incDecRegisterInCondition::constructor_new (var_registerExpression, var_isIncrement, var_W_5F_isDestination, var_branchIfZero COMMA_SOURCE_FILE_AT_LINE (551)) ;
  } break ;
  case 2: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_registerExpression var_registerExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bitNumberExpression var_bitNumberExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_BTFSSinstruction ;
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (562)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_bit_5F_number_5F_parsing_ (var_bitNumberExpression, inCompiler) ;
    //-------- @selectInstructionForGeneration
    switch (select_baseline_5F_syntax_18 (inCompiler)) {
    case 1: {
      //-------- @assignmentInstructionForGeneration
      var_BTFSSinstruction = GALGAS_bool (false) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (567)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE_AT_LINE (568)).reader_uppercaseString (SOURCE_FILE_AT_LINE (568)) ;
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("Z"))).boolEnum () ;
      if (kBoolTrue == test_3) {
        //-------- @assignmentInstructionForGeneration
        var_BTFSSinstruction = GALGAS_bool (true) ;
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_string var_s = GALGAS_string ("! ").operator_concat (var_registerExpression.reader_mRegisterName (SOURCE_FILE_AT_LINE (571)).reader_string (SOURCE_FILE_AT_LINE (571)) COMMA_SOURCE_FILE_AT_LINE (571)) ;
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_4 = GALGAS_bool (kIsStrictSup, var_registerExpression.reader_mOffset (SOURCE_FILE_AT_LINE (572)).reader_uint (SOURCE_FILE_AT_LINE (572)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
        if (kBoolTrue == test_4) {
          //-------- @concatInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string (" [").operator_concat (var_registerExpression.reader_mOffset (SOURCE_FILE_AT_LINE (573)).reader_uint (SOURCE_FILE_AT_LINE (573)).reader_string (SOURCE_FILE_AT_LINE (573)) COMMA_SOURCE_FILE_AT_LINE (573)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (573)) COMMA_SOURCE_FILE_AT_LINE (573)) ;
        }
        //-------- @concatInstructionForGeneration
        var_s.dotAssign_operation (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (575)) ;
        //-------- @methodCallInstructionForGeneration
        callCategoryMethod_display ((const cPtr_bitNumberExpression *) var_bitNumberExpression.ptr (), var_s, inCompiler COMMA_SOURCE_FILE_AT_LINE (575)) ;
        //-------- END @methodCallInstructionForGeneration
        //-------- @warningInstructionForGeneration
        GALGAS_location location_5 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticWarning (location_5, GALGAS_string ("In Piccolo 1.2.0 and later, this construction is deprecated; use '").operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (576)).operator_concat (GALGAS_string ("' instead") COMMA_SOURCE_FILE_AT_LINE (576)) COMMA_SOURCE_FILE_AT_LINE (576)) ;
      }else if (kBoolFalse == test_3) {
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).boolEnum () ;
        if (kBoolTrue == test_6) {
          //-------- @assignmentInstructionForGeneration
          var_BTFSSinstruction = GALGAS_bool (false) ;
          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
          GALGAS_string var_s = var_registerExpression.reader_mRegisterName (SOURCE_FILE_AT_LINE (579)).reader_string (SOURCE_FILE_AT_LINE (579)) ;
          //-------- @ifInstructionForGeneration
          const enumGalgasBool test_7 = GALGAS_bool (kIsStrictSup, var_registerExpression.reader_mOffset (SOURCE_FILE_AT_LINE (580)).reader_uint (SOURCE_FILE_AT_LINE (580)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
          if (kBoolTrue == test_7) {
            //-------- @concatInstructionForGeneration
            var_s.dotAssign_operation (GALGAS_string (" [").operator_concat (var_registerExpression.reader_mOffset (SOURCE_FILE_AT_LINE (581)).reader_uint (SOURCE_FILE_AT_LINE (581)).reader_string (SOURCE_FILE_AT_LINE (581)) COMMA_SOURCE_FILE_AT_LINE (581)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (581)) COMMA_SOURCE_FILE_AT_LINE (581)) ;
          }
          //-------- @concatInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (583)) ;
          //-------- @methodCallInstructionForGeneration
          callCategoryMethod_display ((const cPtr_bitNumberExpression *) var_bitNumberExpression.ptr (), var_s, inCompiler COMMA_SOURCE_FILE_AT_LINE (583)) ;
          //-------- END @methodCallInstructionForGeneration
          //-------- @warningInstructionForGeneration
          GALGAS_location location_8 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticWarning (location_8, GALGAS_string ("In Piccolo 1.2.0 and later, this construction is deprecated; use '").operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (584)).operator_concat (GALGAS_string ("' instead") COMMA_SOURCE_FILE_AT_LINE (584)) COMMA_SOURCE_FILE_AT_LINE (584)) ;
        }else if (kBoolFalse == test_6) {
          //-------- @errorInstructionForGeneration
          GALGAS_location location_9 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_9, GALGAS_string ("invalid '").operator_concat (var_conditionString.reader_string (SOURCE_FILE_AT_LINE (586)) COMMA_SOURCE_FILE_AT_LINE (586)).operator_concat (GALGAS_string ("' condition; valid ones are: 'z' and 'nz'") COMMA_SOURCE_FILE_AT_LINE (587)) COMMA_SOURCE_FILE_AT_LINE (586)) ;
          var_BTFSSinstruction.drop () ; // Release error dropped variable
        }
      }
    } break ;
    default:
      break ;
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outCondition = GALGAS_baseline_5F_bitTest_5F_in_5F_structured_5F_if_5F_condition::constructor_new (var_registerExpression, var_bitNumberExpression, var_BTFSSinstruction COMMA_SOURCE_FILE_AT_LINE (592)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_factor_i8_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @selectInstructionForGeneration
  switch (select_baseline_5F_syntax_15 (inCompiler)) {
  case 1: {
    //-------- @selectInstructionForGeneration
    switch (select_baseline_5F_syntax_16 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE_AT_LINE (526)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE_AT_LINE (528)) ;
    } break ;
    default:
      break ;
    }
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_parse (inCompiler) ;
    //-------- @selectInstructionForGeneration
    switch (select_baseline_5F_syntax_17 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (536)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (536)) ;
    } break ;
    default:
      break ;
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (538)) ;
  } break ;
  case 2: {
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_parse (inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (562)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_bit_5F_number_5F_parsing_parse (inCompiler) ;
    //-------- @selectInstructionForGeneration
    switch (select_baseline_5F_syntax_18 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (567)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_expression_i9_ (GALGAS_baseline_5F_conditionExpression & outArgument_outCondition,
                                                                                                  C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (605)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_baseline_5F_condition_5F_term_ (outArgument_outCondition, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_baseline_5F_syntax_19 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE_AT_LINE (609)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_baseline_5F_conditionExpression var_c ;
      //-------- @nonterminalInstructionForGeneration
      nt_baseline_5F_condition_5F_term_ (var_c, inCompiler) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_baseline_5F_conditionExpression var_rc = GALGAS_baseline_5F_negateCondition::constructor_new (var_c COMMA_SOURCE_FILE_AT_LINE (612)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_baseline_5F_conditionExpression var_lc = GALGAS_baseline_5F_negateCondition::constructor_new (outArgument_outCondition COMMA_SOURCE_FILE_AT_LINE (613)) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outCondition = GALGAS_baseline_5F_negateCondition::constructor_new (GALGAS_baseline_5F_andCondition::constructor_new (var_lc, var_rc COMMA_SOURCE_FILE_AT_LINE (614)) COMMA_SOURCE_FILE_AT_LINE (614)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (616)) ;
}

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_expression_i9_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (605)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_baseline_5F_condition_5F_term_parse (inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_baseline_5F_syntax_19 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE_AT_LINE (609)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_baseline_5F_condition_5F_term_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (616)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_term_i10_ (GALGAS_baseline_5F_conditionExpression & outArgument_outCondition,
                                                                                             C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_baseline_5F_condition_5F_factor_ (outArgument_outCondition, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_baseline_5F_syntax_20 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__26_) COMMA_SOURCE_FILE_AT_LINE (627)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_baseline_5F_conditionExpression var_c ;
      //-------- @nonterminalInstructionForGeneration
      nt_baseline_5F_condition_5F_factor_ (var_c, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outCondition = GALGAS_baseline_5F_andCondition::constructor_new (outArgument_outCondition, var_c COMMA_SOURCE_FILE_AT_LINE (630)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_baseline_5F_syntax::rule_baseline_5F_syntax_baseline_5F_condition_5F_term_i10_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_baseline_5F_condition_5F_factor_parse (inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_baseline_5F_syntax_20 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__26_) COMMA_SOURCE_FILE_AT_LINE (627)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_baseline_5F_condition_5F_factor_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


