//---------------------------------------------------------------------------*
//                                                                           *
//               File 'buildIPICAssemblyInstructionList.cpp'                 *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      august 7th, 2008, at 19h31'19"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "buildIPICAssemblyInstructionList.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "buildIPICAssemblyInstructionList.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//       Virtual Table for category method '@immediatExpression.eval'        *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__immediatExpression__eval> gDispatchTableFor__immediatExpression__eval ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__immediatExpression__eval (typeCategoryMethod__immediatExpression__eval inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__immediatExpression__eval.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__immediatExpression__eval
findCategoryMethod__immediatExpression__eval (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__immediatExpression__eval result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__immediatExpression__eval.count ()) {
    result = gDispatchTableFor__immediatExpression__eval (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__immediatExpression__eval (superClassPtr) ;
      gDispatchTableFor__immediatExpression__eval.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 Category method '@immediatInteger.eval'                   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatInteger__eval (C_Compiler & _inLexique,
                                const cPtr_immediatInteger * operand_969,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_969 != NULL) {
    var_cas_outResult = operand_969->mValue.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (25)).reader_sint (_inLexique COMMA_SOURCE_FILE_AT_LINE (25)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 Category method '@immediatRegister.eval'                  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatRegister__eval (C_Compiler & _inLexique,
                                const cPtr_immediatRegister * operand_1203,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1203 != NULL) {
    GGS_uintlist  var_cas_registerAddressList ;
    GGS_uint  var_cas_size ;
    GGS_bitSliceTable  automatic_var_0 ;
    GGS_string automatic_var_1 ;
    const GGS_registerTable  _temp_1331 = var_cas_inRegisterTable ;
    if (_temp_1331._isBuilt ()) {
      _temp_1331 (HERE)->method_searchKey (_inLexique, operand_1203->mRegister.reader_mRegisterName (_inLexique COMMA_SOURCE_FILE_AT_LINE (36)), var_cas_registerAddressList, var_cas_size, automatic_var_0, automatic_var_1 COMMA_SOURCE_FILE_AT_LINE (36)) ;
    }
    GGS_uint  var_cas_registerAddress ;
    const GGS_uintlist  _temp_1451 = var_cas_registerAddressList ;
    if (_temp_1451._isBuilt ()) {
      _temp_1451 (HERE)->method_first (_inLexique, var_cas_registerAddress COMMA_SOURCE_FILE_AT_LINE (37)) ;
    }
    if (((operand_1203->mRegister.reader_mOffset (_inLexique COMMA_SOURCE_FILE_AT_LINE (38)).reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (38)))._operator_supOrEqual (var_cas_size)).isBuiltAndTrue ()) {
      operand_1203->mRegister.reader_mOffset (_inLexique COMMA_SOURCE_FILE_AT_LINE (39)).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "index ("))._operator_concat (operand_1203->mRegister.reader_mOffset (_inLexique COMMA_SOURCE_FILE_AT_LINE (39)).reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (39)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (39))))._operator_concat (GGS_string (true, ") should be lower than size (")))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (39))))._operator_concat (GGS_string (true, ")")) COMMA_SOURCE_FILE_AT_LINE (39)) ;
    }
    var_cas_outResult = var_cas_registerAddress._add_operation (_inLexique, operand_1203->mRegister.reader_mOffset (_inLexique COMMA_SOURCE_FILE_AT_LINE (41)).reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (41)) COMMA_SOURCE_FILE_AT_LINE (41)).reader_sint (_inLexique COMMA_SOURCE_FILE_AT_LINE (41)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   Category method '@immediatAdd.eval'                     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatAdd__eval (C_Compiler & _inLexique,
                                const cPtr_immediatAdd * operand_1862,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1862 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_1960 = operand_1862->mLeftExpression ;
    if (_temp_1960._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_1960._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_1960 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (50)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_2037 = operand_1862->mRightExpression ;
    if (_temp_2037._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_2037._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_2037 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (51)) ;
      }
    }
    var_cas_outResult = var_cas_leftResult._add_operation (_inLexique, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (52)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   Category method '@immediatSub.eval'                     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatSub__eval (C_Compiler & _inLexique,
                                const cPtr_immediatSub * operand_2241,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2241 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_2339 = operand_2241->mLeftExpression ;
    if (_temp_2339._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_2339._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_2339 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (61)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_2416 = operand_2241->mRightExpression ;
    if (_temp_2416._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_2416._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_2416 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (62)) ;
      }
    }
    var_cas_outResult = var_cas_leftResult._substract_operation (_inLexique, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (63)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   Category method '@immediatMul.eval'                     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatMul__eval (C_Compiler & _inLexique,
                                const cPtr_immediatMul * operand_2620,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2620 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_2718 = operand_2620->mLeftExpression ;
    if (_temp_2718._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_2718._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_2718 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (72)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_2795 = operand_2620->mRightExpression ;
    if (_temp_2795._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_2795._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_2795 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (73)) ;
      }
    }
    var_cas_outResult = var_cas_leftResult._multiply_operation (_inLexique, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (74)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   Category method '@immediatDiv.eval'                     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatDiv__eval (C_Compiler & _inLexique,
                                const cPtr_immediatDiv * operand_2999,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2999 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_3097 = operand_2999->mLeftExpression ;
    if (_temp_3097._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_3097._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_3097 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (83)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_3174 = operand_2999->mRightExpression ;
    if (_temp_3174._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_3174._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_3174 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (84)) ;
      }
    }
    var_cas_outResult = var_cas_leftResult._multiply_operation (_inLexique, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (85)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   Category method '@immediatMod.eval'                     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatMod__eval (C_Compiler & _inLexique,
                                const cPtr_immediatMod * operand_3378,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3378 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_3476 = operand_3378->mLeftExpression ;
    if (_temp_3476._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_3476._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_3476 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (94)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_3553 = operand_3378->mRightExpression ;
    if (_temp_3553._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_3553._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_3553 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (95)) ;
      }
    }
    var_cas_outResult = var_cas_leftResult._modulo_operation (_inLexique, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (96)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   Category method '@immediatAnd.eval'                     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatAnd__eval (C_Compiler & _inLexique,
                                const cPtr_immediatAnd * operand_3759,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3759 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_3857 = operand_3759->mLeftExpression ;
    if (_temp_3857._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_3857._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_3857 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (105)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_3934 = operand_3759->mRightExpression ;
    if (_temp_3934._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_3934._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_3934 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (106)) ;
      }
    }
    var_cas_outResult = (var_cas_leftResult)._operator_and (var_cas_rightResult) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                    Category method '@immediatOr.eval'                     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatOr__eval (C_Compiler & _inLexique,
                                const cPtr_immediatOr * operand_4137,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4137 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_4235 = operand_4137->mLeftExpression ;
    if (_temp_4235._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_4235._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_4235 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (116)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_4312 = operand_4137->mRightExpression ;
    if (_temp_4312._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_4312._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_4312 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (117)) ;
      }
    }
    var_cas_outResult = (var_cas_leftResult)._operator_or (var_cas_rightResult) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   Category method '@immediatXor.eval'                     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatXor__eval (C_Compiler & _inLexique,
                                const cPtr_immediatXor * operand_4516,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4516 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_4614 = operand_4516->mLeftExpression ;
    if (_temp_4614._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_4614._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_4614 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (127)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_4691 = operand_4516->mRightExpression ;
    if (_temp_4691._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_4691._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_4691 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (128)) ;
      }
    }
    var_cas_outResult = (var_cas_leftResult)._operator_xor (var_cas_rightResult) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Category method '@immediatLeftShift.eval'                  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatLeftShift__eval (C_Compiler & _inLexique,
                                const cPtr_immediatLeftShift * operand_4901,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4901 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_4999 = operand_4901->mLeftExpression ;
    if (_temp_4999._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_4999._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_4999 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (138)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_5076 = operand_4901->mRightExpression ;
    if (_temp_5076._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_5076._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_5076 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (139)) ;
      }
    }
    var_cas_outResult = var_cas_leftResult._left_shift_operation (_inLexique, var_cas_rightResult.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (140)) COMMA_SOURCE_FILE_AT_LINE (140)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Category method '@immediatRightShift.eval'                 *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatRightShift__eval (C_Compiler & _inLexique,
                                const cPtr_immediatRightShift * operand_5295,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5295 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_5393 = operand_5295->mLeftExpression ;
    if (_temp_5393._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_5393._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_5393 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (149)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_5470 = operand_5295->mRightExpression ;
    if (_temp_5470._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_5470._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_5470 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (150)) ;
      }
    }
    var_cas_outResult = var_cas_leftResult._right_shift_operation (_inLexique, var_cas_rightResult.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (151)) COMMA_SOURCE_FILE_AT_LINE (151)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Category method '@immediatEqualTest.eval'                  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatEqualTest__eval (C_Compiler & _inLexique,
                                const cPtr_immediatEqualTest * operand_5688,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5688 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_5786 = operand_5688->mLeftExpression ;
    if (_temp_5786._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_5786._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_5786 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (160)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_5863 = operand_5688->mRightExpression ;
    if (_temp_5863._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_5863._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_5863 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (161)) ;
      }
    }
    if (((var_cas_leftResult)._operator_isEqual (var_cas_rightResult)).isBuiltAndTrue ()) {
      var_cas_outResult = GGS_sint (true, 1L) ;
    }else{
      var_cas_outResult = GGS_sint (true, 0L) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//               Category method '@immediatNotEqualTest.eval'                *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatNotEqualTest__eval (C_Compiler & _inLexique,
                                const cPtr_immediatNotEqualTest * operand_6132,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6132 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_6230 = operand_6132->mLeftExpression ;
    if (_temp_6230._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_6230._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_6230 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (175)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_6307 = operand_6132->mRightExpression ;
    if (_temp_6307._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_6307._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_6307 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (176)) ;
      }
    }
    if (((var_cas_leftResult)._operator_isNotEqual (var_cas_rightResult)).isBuiltAndTrue ()) {
      var_cas_outResult = GGS_sint (true, 1L) ;
    }else{
      var_cas_outResult = GGS_sint (true, 0L) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@immediatGreaterOrEqualTest.eval'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatGreaterOrEqualTest__eval (C_Compiler & _inLexique,
                                const cPtr_immediatGreaterOrEqualTest * operand_6582,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6582 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_6680 = operand_6582->mLeftExpression ;
    if (_temp_6680._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_6680._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_6680 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (190)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_6757 = operand_6582->mRightExpression ;
    if (_temp_6757._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_6757._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_6757 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (191)) ;
      }
    }
    if (((var_cas_leftResult)._operator_supOrEqual (var_cas_rightResult)).isBuiltAndTrue ()) {
      var_cas_outResult = GGS_sint (true, 1L) ;
    }else{
      var_cas_outResult = GGS_sint (true, 0L) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@immediatLowerOrEqualTest.eval'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatLowerOrEqualTest__eval (C_Compiler & _inLexique,
                                const cPtr_immediatLowerOrEqualTest * operand_7030,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7030 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_7128 = operand_7030->mLeftExpression ;
    if (_temp_7128._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_7128._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_7128 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (205)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_7205 = operand_7030->mRightExpression ;
    if (_temp_7205._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_7205._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_7205 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (206)) ;
      }
    }
    if (((var_cas_leftResult)._operator_infOrEqual (var_cas_rightResult)).isBuiltAndTrue ()) {
      var_cas_outResult = GGS_sint (true, 1L) ;
    }else{
      var_cas_outResult = GGS_sint (true, 0L) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//               Category method '@immediatGreaterTest.eval'                 *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatGreaterTest__eval (C_Compiler & _inLexique,
                                const cPtr_immediatGreaterTest * operand_7473,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7473 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_7571 = operand_7473->mLeftExpression ;
    if (_temp_7571._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_7571._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_7571 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (220)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_7648 = operand_7473->mRightExpression ;
    if (_temp_7648._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_7648._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_7648 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (221)) ;
      }
    }
    if (((var_cas_leftResult)._operator_strictSup (var_cas_rightResult)).isBuiltAndTrue ()) {
      var_cas_outResult = GGS_sint (true, 1L) ;
    }else{
      var_cas_outResult = GGS_sint (true, 0L) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Category method '@immediatLowerTest.eval'                  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatLowerTest__eval (C_Compiler & _inLexique,
                                const cPtr_immediatLowerTest * operand_7913,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7913 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_8011 = operand_7913->mLeftExpression ;
    if (_temp_8011._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_8011._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_8011 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (235)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_8088 = operand_7913->mRightExpression ;
    if (_temp_8088._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_8088._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_8088 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (236)) ;
      }
    }
    if (((var_cas_leftResult)._operator_strictInf (var_cas_rightResult)).isBuiltAndTrue ()) {
      var_cas_outResult = GGS_sint (true, 1L) ;
    }else{
      var_cas_outResult = GGS_sint (true, 0L) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                  Category method '@immediatNegate.eval'                   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatNegate__eval (C_Compiler & _inLexique,
                                const cPtr_immediatNegate * operand_8350,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8350 != NULL) {
    GGS_sint  var_cas_result ;
    const GGS_immediatExpression  _temp_8440 = operand_8350->mExpression ;
    if (_temp_8440._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_8440._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_8440 (HERE), var_cas_inRegisterTable, var_cas_result COMMA_SOURCE_FILE_AT_LINE (250)) ;
      }
    }
    var_cas_outResult = var_cas_result._operator_unary_minus (_inLexique COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Category method '@immediatComplement.eval'                 *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatComplement__eval (C_Compiler & _inLexique,
                                const cPtr_immediatComplement * operand_8630,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8630 != NULL) {
    GGS_sint  var_cas_result ;
    const GGS_immediatExpression  _temp_8720 = operand_8630->mExpression ;
    if (_temp_8720._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_8720._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_8720 (HERE), var_cas_inRegisterTable, var_cas_result COMMA_SOURCE_FILE_AT_LINE (260)) ;
      }
    }
    var_cas_outResult = (var_cas_result)._operator_tilde () ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Virtual Table for category method '@bitNumberExpression.getBitNumber'    *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__bitNumberExpression__getBitNumber> gDispatchTableFor__bitNumberExpression__getBitNumber ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__bitNumberExpression__getBitNumber (typeCategoryMethod__bitNumberExpression__getBitNumber inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__bitNumberExpression__getBitNumber.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__bitNumberExpression__getBitNumber
findCategoryMethod__bitNumberExpression__getBitNumber (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__bitNumberExpression__getBitNumber result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__bitNumberExpression__getBitNumber.count ()) {
    result = gDispatchTableFor__bitNumberExpression__getBitNumber (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__bitNumberExpression__getBitNumber (superClassPtr) ;
      gDispatchTableFor__bitNumberExpression__getBitNumber.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@bitNumberLiteralValue.getBitNumber'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__bitNumberLiteralValue__getBitNumber (C_Compiler & _inLexique,
                                const cPtr_bitNumberLiteralValue * operand_9419,
                                const GGS_bitSliceTable   /* var_cas_inBitSliceTable */,
                                GGS_uint  & var_cas_outBitNumber
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9419 != NULL) {
    if (((operand_9419->mBitNumberLiteralValue.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (281)))._operator_strictSup (GGS_uint (true, 7U))).isBuiltAndTrue ()) {
      operand_9419->mBitNumberLiteralValue.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "The bit number is "))._operator_concat (operand_9419->mBitNumberLiteralValue.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (282)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (282))))._operator_concat (GGS_string (true, " (should be <= 7)")) COMMA_SOURCE_FILE_AT_LINE (282)) ;
    }
    var_cas_outBitNumber = operand_9419->mBitNumberLiteralValue.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (284)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@bitNumberLabelValue.getBitNumber'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__bitNumberLabelValue__getBitNumber (C_Compiler & _inLexique,
                                const cPtr_bitNumberLabelValue * operand_9853,
                                const GGS_bitSliceTable   var_cas_inBitSliceTable,
                                GGS_uint  & var_cas_outBitNumber
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9853 != NULL) {
    GGS_uint  var_cas_sliceIndex ;
    GGS_uint  var_cas_sliceSize ;
    const GGS_bitSliceTable  _temp_9984 = var_cas_inBitSliceTable ;
    if (_temp_9984._isBuilt ()) {
      _temp_9984 (HERE)->method_searchKey (_inLexique, operand_9853->mBitNumberLabelValue, var_cas_sliceIndex, var_cas_sliceSize COMMA_SOURCE_FILE_AT_LINE (295)) ;
    }
    if (((operand_9853->mBitNumberIndexValue.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (296)))._operator_strictSup (var_cas_sliceSize)).isBuiltAndTrue ()) {
      operand_9853->mBitNumberIndexValue.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "The "))._operator_concat (operand_9853->mBitNumberIndexValue.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (297)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (297))))._operator_concat (GGS_string (true, " index is too large (should be < ")))._operator_concat (var_cas_sliceSize.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (298))))._operator_concat (GGS_string (true, ")")) COMMA_SOURCE_FILE_AT_LINE (298)) ;
    }
    var_cas_outBitNumber = var_cas_sliceIndex._add_operation (_inLexique, operand_9853->mBitNumberIndexValue.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (300)) COMMA_SOURCE_FILE_AT_LINE (300)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@registerExpression.resolveAccess'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__registerExpression__resolveAccess (C_Compiler & _inLexique,
                                const cPtr_registerExpression * operand_10412,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_ipic_registerExpression & var_cas_outIPICregisterDescription,
                                GGS_bitSliceTable  & var_cas_outBitSliceTable
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10412 != NULL) {
    GGS_string var_cas_assemblyString ;
    var_cas_assemblyString = operand_10412->mRegisterName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (312)) ;
    if (((operand_10412->mOffset.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (313)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
      var_cas_assemblyString.writeString (" + ") ;
      var_cas_assemblyString._dotAssign_operation (operand_10412->mOffset.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (314)).reader_hexString (_inLexique COMMA_SOURCE_FILE_AT_LINE (314))) ;
    }
    GGS_uintlist  var_cas_registerAddressList ;
    GGS_uint  var_cas_size ;
    GGS_uint  var_cas_registerAddress ;
    var_cas_registerAddress = GGS_uint (true, 0U) ;
    GGS_string automatic_var_2 ;
    const GGS_registerTable  _temp_10870 = var_cas_inRegisterTable ;
    if (_temp_10870._isBuilt ()) {
      _temp_10870 (HERE)->method_searchKey (_inLexique, operand_10412->mRegisterName, var_cas_registerAddressList, var_cas_size, var_cas_outBitSliceTable, automatic_var_2 COMMA_SOURCE_FILE_AT_LINE (320)) ;
    }
    GGS_bool var_cas_found ;
    var_cas_found = GGS_bool (true, false) ;
    {
      GGS_uintlist::cEnumerator enumerator_10981 (var_cas_registerAddressList, true) ;
      const GGS_uintlist::cElement * operand_10981 = NULL ;
      while (((operand_10981 = enumerator_10981.nextObject ()))
          && ((var_cas_found)._operator_not ().isBuiltAndTrue ())) {
        macroValidPointer (operand_10981) ;
        var_cas_found = ((operand_10981->mValue)._operator_strictInf (var_cas_inAccessBankSplitOffset))._operator_or ((operand_10981->mValue)._operator_supOrEqual (GGS_uint (true, 3840U)._add_operation (_inLexique, var_cas_inAccessBankSplitOffset COMMA_SOURCE_FILE_AT_LINE (323)))) ;
        var_cas_registerAddress = operand_10981->mValue ;
      }
    }
    GGS_bool var_cas_needsBSRaccess ;
    var_cas_needsBSRaccess = GGS_bool (true, false) ;
    if (((var_cas_found)._operator_not ()).isBuiltAndTrue ()) {
      var_cas_needsBSRaccess = GGS_bool (true, true) ;
      const GGS_uintlist  _temp_11275 = var_cas_registerAddressList ;
      if (_temp_11275._isBuilt ()) {
        _temp_11275 (HERE)->method_first (_inLexique, var_cas_registerAddress COMMA_SOURCE_FILE_AT_LINE (329)) ;
      }
    }
    var_cas_outIPICregisterDescription = GGS_ipic_registerExpression::constructor_new (var_cas_assemblyString, var_cas_registerAddress._add_operation (_inLexique, operand_10412->mOffset.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (334)) COMMA_SOURCE_FILE_AT_LINE (334)), var_cas_needsBSRaccess) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Virtual Table for category method '@registerExpression.resolveAccess'    *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__registerExpression__resolveAccess> gDispatchTableFor__registerExpression__resolveAccess ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__registerExpression__resolveAccess (typeCategoryMethod__registerExpression__resolveAccess inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__registerExpression__resolveAccess.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__registerExpression__resolveAccess
findCategoryMethod__registerExpression__resolveAccess (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__registerExpression__resolveAccess result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__registerExpression__resolveAccess.count ()) {
    result = gDispatchTableFor__registerExpression__resolveAccess (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__registerExpression__resolveAccess (superClassPtr) ;
      gDispatchTableFor__registerExpression__resolveAccess.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@piccolo_instruction.buildIPICinstructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__piccolo_instruction__buildIPICinstructionList> gDispatchTableFor__piccolo_instruction__buildIPICinstructionList ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__piccolo_instruction__buildIPICinstructionList (typeCategoryMethod__piccolo_instruction__buildIPICinstructionList inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__piccolo_instruction__buildIPICinstructionList.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__piccolo_instruction__buildIPICinstructionList
findCategoryMethod__piccolo_instruction__buildIPICinstructionList (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__piccolo_instruction__buildIPICinstructionList result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__piccolo_instruction__buildIPICinstructionList.count ()) {
    result = gDispatchTableFor__piccolo_instruction__buildIPICinstructionList (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (superClassPtr) ;
      gDispatchTableFor__piccolo_instruction__buildIPICinstructionList.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@instruction_nobanksel.buildIPICinstructionList'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_nobanksel__buildIPICinstructionList (C_Compiler &,
                                const cPtr_instruction_nobanksel * operand_12020,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & /* var_cas_ioGeneratedInstructionList */,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12020 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_savebank.buildIPICinstructionList'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_savebank__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_savebank * operand_12394,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12394 != NULL) {
    GGS_registerExpression  var_cas_BSRregister ;
    var_cas_BSRregister = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "BSR"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_ipic_registerExpression var_cas_BSR_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_3 ;
    const GGS_registerExpression  _temp_12800 = var_cas_BSRregister ;
    if (_temp_12800._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_12800._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_12800 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_BSR_IPICregisterDescription, automatic_var_3 COMMA_SOURCE_FILE_AT_LINE (375)) ;
      }
    }
    GGS_ipic_registerExpression var_cas_save_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_4 ;
    const GGS_registerExpression  _temp_13026 = operand_12394->mRegister ;
    if (_temp_13026._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_13026._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_13026 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_save_IPICregisterDescription, automatic_var_4 COMMA_SOURCE_FILE_AT_LINE (383)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_MOVFF ::constructor_new (_inLexique, operand_12394->mInstructionLocation, var_cas_BSR_IPICregisterDescription, var_cas_save_IPICregisterDescription COMMA_HERE)) ;
    {
      GGS_instructionList::cEnumerator enumerator_13392 (operand_12394->mInstructionList, true) ;
      const GGS_instructionList::cElement * operand_13392 = NULL ;
      while (((operand_13392 = enumerator_13392.nextObject ()))) {
        macroValidPointer (operand_13392) ;
        const GGS_piccolo_instruction  _temp_13430 = operand_13392->mInstruction ;
        if (_temp_13430._isBuilt ()) {
          typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_13430._galgasObjectRunTimeInfo ()) ;
          if (_method != NULL) {
            _method (_inLexique, _temp_13430 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (397)) ;
          }
        }
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_MOVFF ::constructor_new (_inLexique, operand_12394->mInstructionLocation, var_cas_save_IPICregisterDescription, var_cas_BSR_IPICregisterDescription COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_banksel.buildIPICinstructionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_banksel__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_banksel * operand_13908,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13908 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_MOVLB ::constructor_new (_inLexique, operand_13908->mInstructionLocation, operand_13908->mBankIndex COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_FDA.buildIPICinstructionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_FDA__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_FDA * operand_14346,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_14346 != NULL) {
    GGS_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_5 ;
    const GGS_registerExpression  _temp_14643 = operand_14346->mRegisterExpression ;
    if (_temp_14643._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_14643._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_14643 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_5 COMMA_SOURCE_FILE_AT_LINE (429)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, operand_14346->mInstructionLocation, operand_14346->mInstruction_FDA_base_code, var_cas_IPICregisterDescription, operand_14346->m_W_isDestination COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@instruction_FA.buildIPICinstructionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_FA__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_FA * operand_15028,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_15028 != NULL) {
    GGS_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_6 ;
    const GGS_registerExpression  _temp_15325 = operand_15028->mRegisterExpression ;
    if (_temp_15325._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_15325._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_15325 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_6 COMMA_SOURCE_FILE_AT_LINE (453)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FA ::constructor_new (_inLexique, operand_15028->mInstructionLocation, operand_15028->mFAinstruction, var_cas_IPICregisterDescription COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_MOVFF.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_MOVFF__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_MOVFF * operand_15677,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_15677 != NULL) {
    GGS_ipic_registerExpression var_cas_sourceIPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_7 ;
    const GGS_registerExpression  _temp_15980 = operand_15677->mSourceRegisterName ;
    if (_temp_15980._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_15980._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_15980 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_sourceIPICregisterDescription, automatic_var_7 COMMA_SOURCE_FILE_AT_LINE (476)) ;
      }
    }
    GGS_ipic_registerExpression var_cas_destinationIPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_8 ;
    const GGS_registerExpression  _temp_16184 = operand_15677->mDestinationRegisterName ;
    if (_temp_16184._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_16184._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_16184 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_destinationIPICregisterDescription, automatic_var_8 COMMA_SOURCE_FILE_AT_LINE (483)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_MOVFF ::constructor_new (_inLexique, operand_15677->mInstructionLocation, var_cas_sourceIPICregisterDescription, var_cas_destinationIPICregisterDescription COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_FBA.buildIPICinstructionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_FBA__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_FBA * operand_16574,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16574 != NULL) {
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    GGS_ipic_registerExpression var_cas_IPICregisterDescription ;
    const GGS_registerExpression  _temp_16904 = operand_16574->mRegisterExpression ;
    if (_temp_16904._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_16904._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_16904 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (507)) ;
      }
    }
    GGS_uint  var_cas_bitNumber ;
    const GGS_bitNumberExpression  _temp_17056 = operand_16574->mBitNumber ;
    if (_temp_17056._isBuilt ()) {
      typeCategoryMethod__bitNumberExpression__getBitNumber _method = findCategoryMethod__bitNumberExpression__getBitNumber (_temp_17056._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_17056 (HERE), var_cas_bitSliceTable, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (514)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FBA ::constructor_new (_inLexique, operand_16574->mInstructionLocation, operand_16574->mBitOrientedOp, var_cas_IPICregisterDescription, var_cas_bitNumber COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_JSR.buildIPICinstructionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_JSR__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_JSR * operand_17369,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17369 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_JSR ::constructor_new (_inLexique, operand_17369->mInstructionLocation, operand_17369->mTargetLabel, operand_17369->mKind COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_JUMP.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_JUMP__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_JUMP * operand_17818,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17818 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_JUMP ::constructor_new (_inLexique, operand_17818->mInstructionLocation, operand_17818->mTargetLabel, operand_17818->mKind COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_JUMPCC.buildIPICinstructionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_JUMPCC__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_JUMPCC * operand_18270,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18270 != NULL) {
    GGS_condionalBranchMode var_cas_mode ;
    if ((operand_18270->mIsBcc).isBuiltAndTrue ()) {
      var_cas_mode = GGS_condionalBranchMode::constructor_native (_inLexique COMMA_HERE) ;
    }else{
      var_cas_mode = GGS_condionalBranchMode::constructor_native (_inLexique COMMA_HERE) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_conditionalBranch ::constructor_new (_inLexique, operand_18270->mInstructionLocation, var_cas_mode, operand_18270->mConditionalBranch, operand_18270->mTargetLabel COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_CLRWDT.buildIPICinstructionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_CLRWDT__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_CLRWDT * operand_18923,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18923 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_CLRWDT ::constructor_new (_inLexique, operand_18923->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_DAW.buildIPICinstructionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_DAW__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_DAW * operand_19357,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19357 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_DAW ::constructor_new (_inLexique, operand_19357->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_NOP.buildIPICinstructionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_NOP__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_NOP * operand_19788,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19788 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_NOP ::constructor_new (_inLexique, operand_19788->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_POP.buildIPICinstructionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_POP__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_POP * operand_20219,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20219 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_POP ::constructor_new (_inLexique, operand_20219->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_PUSH.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_PUSH__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_PUSH * operand_20651,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20651 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_PUSH ::constructor_new (_inLexique, operand_20651->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_RESET.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_RESET__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_RESET * operand_21085,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21085 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RESET ::constructor_new (_inLexique, operand_21085->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_SLEEP.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_SLEEP__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_SLEEP * operand_21520,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21520 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_SLEEP ::constructor_new (_inLexique, operand_21520->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@instruction_literalOperation.buildIPICinstructionList'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_literalOperation__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_literalOperation * operand_21966,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21966 != NULL) {
    GGS_sint  var_cas_result ;
    const GGS_immediatExpression  _temp_22232 = operand_21966->mImmediatExpression ;
    if (_temp_22232._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_22232._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_22232 (HERE), var_cas_inRegisterTable, var_cas_result COMMA_SOURCE_FILE_AT_LINE (688)) ;
      }
    }
    if ((((var_cas_result)._operator_strictSup (GGS_sint (true, 255L)))._operator_or ((var_cas_result)._operator_strictInf (GGS_sint (true, 128L)._operator_unary_minus (_inLexique COMMA_HERE)))).isBuiltAndTrue ()) {
      operand_21966->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "immediate value is evaluated as "))._operator_concat (var_cas_result.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (691))))._operator_concat (GGS_string (true, " (should be betwween -128 and 255)")) COMMA_SOURCE_FILE_AT_LINE (691)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_literalOperation ::constructor_new (_inLexique, operand_21966->mInstructionLocation, operand_21966->mLiteralInstruction, (var_cas_result)._operator_and (GGS_sint (true, 255L)).reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (697)) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_LFSR.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_LFSR__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_LFSR * operand_22729,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22729 != NULL) {
    GGS_sint  var_cas_result ;
    const GGS_immediatExpression  _temp_22995 = operand_22729->mImmediatExpression ;
    if (_temp_22995._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_22995._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_22995 (HERE), var_cas_inRegisterTable, var_cas_result COMMA_SOURCE_FILE_AT_LINE (710)) ;
      }
    }
    if ((((var_cas_result)._operator_strictSup (GGS_sint (true, 4095L)))._operator_or ((var_cas_result)._operator_strictInf (GGS_sint (true, 0L)))).isBuiltAndTrue ()) {
      operand_22729->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "immediate value is evaluated as "))._operator_concat (var_cas_result.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (713))))._operator_concat (GGS_string (true, " (should be between 0 and 4095)")) COMMA_SOURCE_FILE_AT_LINE (713)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_LFSR ::constructor_new (_inLexique, operand_22729->mInstructionLocation, operand_22729->mFSRindex, var_cas_result.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (718)) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_TBLRD.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_TBLRD__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_TBLRD * operand_23446,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23446 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_TBLRD ::constructor_new (_inLexique, operand_23446->mInstructionLocation, operand_23446->mOption COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_TBLWT.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_TBLWT__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_TBLWT * operand_23894,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23894 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_TBLWT ::constructor_new (_inLexique, operand_23894->mInstructionLocation, operand_23894->mOption COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@instruction_computed_retlw.buildIPICinstructionList'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_computed_retlw__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_computed_retlw * operand_24351,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24351 != NULL) {
    GGS_sint  var_cas_size ;
    const GGS_immediatExpression  _temp_24611 = operand_24351->mSizeExpression ;
    if (_temp_24611._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_24611._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_24611 (HERE), var_cas_inRegisterTable, var_cas_size COMMA_SOURCE_FILE_AT_LINE (761)) ;
      }
    }
    if (((var_cas_size)._operator_strictInf (GGS_sint (true, 2L))).isBuiltAndTrue ()) {
      operand_24351->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the computed range ("))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (763))))._operator_concat (GGS_string (true, ") should be greater or equal to 2")) COMMA_SOURCE_FILE_AT_LINE (763)) ;
    }else if (((var_cas_size)._operator_strictSup (GGS_sint (true, 128L))).isBuiltAndTrue ()) {
      operand_24351->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the computed range ("))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (765))))._operator_concat (GGS_string (true, ") should be lower or equal to 128")) COMMA_SOURCE_FILE_AT_LINE (765)) ;
    }else if (((var_cas_size.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (766)))._operator_isNotEqual (operand_24351->mImmediateExpressionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (766)))).isBuiltAndTrue ()) {
      operand_24351->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the constant list length ("))._operator_concat (operand_24351->mImmediateExpressionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (767)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (767))))._operator_concat (GGS_string (true, ") should be equal to the computed range (")))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (767))))._operator_concat (GGS_string (true, ")")) COMMA_SOURCE_FILE_AT_LINE (767)) ;
    }
    GGS_uintlist  var_cas_literalValues ;
    var_cas_literalValues = GGS_uintlist ::constructor_emptyList () ;
    {
        GGS_uint var_cas_idx (true, 0) ;
      GGS_immediatExpressionList::cEnumerator enumerator_25211 (operand_24351->mImmediateExpressionList, true) ;
      const GGS_immediatExpressionList::cElement * operand_25211 = NULL ;
      while (((operand_25211 = enumerator_25211.nextObject ()))) {
        macroValidPointer (operand_25211) ;
        GGS_sint  var_cas_v ;
        const GGS_immediatExpression  _temp_25271 = operand_25211->mExpression ;
        if (_temp_25271._isBuilt ()) {
          typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_25271._galgasObjectRunTimeInfo ()) ;
          if (_method != NULL) {
            _method (_inLexique, _temp_25271 (HERE), var_cas_inRegisterTable, var_cas_v COMMA_SOURCE_FILE_AT_LINE (772)) ;
          }
        }
        if ((((var_cas_v)._operator_strictSup (GGS_sint (true, 255L)))._operator_or ((var_cas_v)._operator_strictInf (GGS_sint (true, 128L)._operator_unary_minus (_inLexique COMMA_HERE)))).isBuiltAndTrue ()) {
          operand_24351->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "immediate value with index "))._operator_concat (var_cas_idx.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (774))))._operator_concat (GGS_string (true, " is evaluated as ")))._operator_concat (var_cas_v.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (774))))._operator_concat (GGS_string (true, " (should be <= 255)")) COMMA_SOURCE_FILE_AT_LINE (774)) ;
        }
        var_cas_literalValues._addAssign_operation ((var_cas_v)._operator_and (GGS_sint (true, 255L)).reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (776))) ;
        var_cas_idx.mValue ++ ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_computed_retlw ::constructor_new (_inLexique, operand_24351->mInstructionLocation, var_cas_literalValues, operand_24351->mUsesRelativeCall COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_MNOP.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_MNOP__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_MNOP * operand_25806,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25806 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_MNOP ::constructor_new (_inLexique, operand_25806->mInstructionLocation, operand_25806->mOccurrenceFactor COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@instruction_computed_bra.buildIPICinstructionList'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_computed_bra__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_computed_bra * operand_26270,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26270 != NULL) {
    GGS_sint  var_cas_size ;
    const GGS_immediatExpression  _temp_26530 = operand_26270->mSizeExpression ;
    if (_temp_26530._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_26530._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_26530 (HERE), var_cas_inRegisterTable, var_cas_size COMMA_SOURCE_FILE_AT_LINE (810)) ;
      }
    }
    if (((var_cas_size)._operator_strictInf (GGS_sint (true, 2L))).isBuiltAndTrue ()) {
      operand_26270->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the computed range ("))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (812))))._operator_concat (GGS_string (true, ") should be greater or equal to 2")) COMMA_SOURCE_FILE_AT_LINE (812)) ;
    }else if (((var_cas_size)._operator_strictSup (GGS_sint (true, 128L))).isBuiltAndTrue ()) {
      operand_26270->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the computed range ("))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (814))))._operator_concat (GGS_string (true, ") should be lower or equal to 128")) COMMA_SOURCE_FILE_AT_LINE (814)) ;
    }else if (((var_cas_size.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (815)))._operator_isNotEqual (operand_26270->mTargetLabels.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (815)))).isBuiltAndTrue ()) {
      operand_26270->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the routine name list length ("))._operator_concat (operand_26270->mTargetLabels.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (816)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (816))))._operator_concat (GGS_string (true, ") should be equal to the computed range (")))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (816))))._operator_concat (GGS_string (true, ")")) COMMA_SOURCE_FILE_AT_LINE (816)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_computed_bra ::constructor_new (_inLexique, operand_26270->mInstructionLocation, operand_26270->mTargetLabels, operand_26270->mUsesRelativeCall COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@instruction_computed_goto.buildIPICinstructionList'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_computed_goto__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_computed_goto * operand_27318,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_27318 != NULL) {
    GGS_sint  var_cas_size ;
    const GGS_immediatExpression  _temp_27578 = operand_27318->mSizeExpression ;
    if (_temp_27578._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_27578._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_27578 (HERE), var_cas_inRegisterTable, var_cas_size COMMA_SOURCE_FILE_AT_LINE (835)) ;
      }
    }
    if (((var_cas_size)._operator_strictInf (GGS_sint (true, 2L))).isBuiltAndTrue ()) {
      operand_27318->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the computed range ("))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (837))))._operator_concat (GGS_string (true, ") should be greater or equal to 2")) COMMA_SOURCE_FILE_AT_LINE (837)) ;
    }else if (((var_cas_size)._operator_strictSup (GGS_sint (true, 64L))).isBuiltAndTrue ()) {
      operand_27318->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the computed range ("))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (839))))._operator_concat (GGS_string (true, ") should be lower or equal to 64")) COMMA_SOURCE_FILE_AT_LINE (839)) ;
    }else if (((var_cas_size.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (840)))._operator_isNotEqual (operand_27318->mTargetLabels.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (840)))).isBuiltAndTrue ()) {
      operand_27318->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the routine name list length ("))._operator_concat (operand_27318->mTargetLabels.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (841)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (841))))._operator_concat (GGS_string (true, ") should be equal to the computed range (")))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (841))))._operator_concat (GGS_string (true, ")")) COMMA_SOURCE_FILE_AT_LINE (841)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_computed_goto ::constructor_new (_inLexique, operand_27318->mInstructionLocation, operand_27318->mTargetLabels, operand_27318->mUsesRelativeCall COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_FOREVER.buildIPICinstructionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_FOREVER__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_FOREVER * operand_28359,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_28359 != NULL) {
    GGS_string var_cas_label0 ;
    var_cas_label0 = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (860))) ;
    var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (861)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, operand_28359->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    {
      GGS_instructionList::cEnumerator enumerator_28769 (operand_28359->mInstructionList, true) ;
      const GGS_instructionList::cElement * operand_28769 = NULL ;
      while (((operand_28769 = enumerator_28769.nextObject ()))) {
        macroValidPointer (operand_28769) ;
        const GGS_piccolo_instruction  _temp_28807 = operand_28769->mInstruction ;
        if (_temp_28807._isBuilt ()) {
          typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_28807._galgasObjectRunTimeInfo ()) ;
          if (_method != NULL) {
            _method (_inLexique, _temp_28807 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (864)) ;
          }
        }
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_JUMP ::constructor_new (_inLexique, operand_28359->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, operand_28359->mInstructionLocation COMMA_HERE), GGS_jumpInstructionKind::constructor_ipicRelative (_inLexique COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@instruction_IF_FA_SEMI_COLON.buildIPICinstructionList'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_IF_FA_SEMI_COLON__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_IF_FA_SEMI_COLON * operand_29237,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_29237 != NULL) {
    GGS_FA_instruction_base_code var_cas_baseCode ;
    switch (operand_29237->mOpCode.enumValue ()) {
    case GGS_if_semi_colon_op::enum_CPFSEQ:
      {
      var_cas_baseCode = GGS_FA_instruction_base_code::constructor_CPFSEQ (_inLexique COMMA_HERE) ;
      }
      break ;
    case GGS_if_semi_colon_op::enum_CPFSGT:
      {
      var_cas_baseCode = GGS_FA_instruction_base_code::constructor_CPFSGT (_inLexique COMMA_HERE) ;
      }
      break ;
    case GGS_if_semi_colon_op::enum_CPFSLT:
      {
      var_cas_baseCode = GGS_FA_instruction_base_code::constructor_CPFSLT (_inLexique COMMA_HERE) ;
      }
      break ;
    case GGS_if_semi_colon_op::enum_TSTFSZ:
      {
      var_cas_baseCode = GGS_FA_instruction_base_code::constructor_TSTFSZ (_inLexique COMMA_HERE) ;
      }
      break ;
    case GGS_if_semi_colon_op::kNotBuilt:
      break ;
    }
    GGS_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_9 ;
    const GGS_registerExpression  _temp_29859 = operand_29237->mRegisterExpression ;
    if (_temp_29859._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_29859._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_29859 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_9 COMMA_SOURCE_FILE_AT_LINE (886)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FA ::constructor_new (_inLexique, operand_29237->mInstructionLocation, var_cas_baseCode, var_cas_IPICregisterDescription COMMA_HERE)) ;
    const GGS_piccolo_instruction  _temp_30139 = operand_29237->mInstruction ;
    if (_temp_30139._isBuilt ()) {
      typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_30139._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_30139 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (898)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@instruction_IF_BitTest.buildIPICinstructionList'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_IF_BitTest__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_IF_BitTest * operand_30390,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_30390 != NULL) {
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    GGS_ipic_registerExpression var_cas_IPICregisterDescription ;
    const GGS_registerExpression  _temp_30706 = operand_30390->mRegisterExpression ;
    if (_temp_30706._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_30706._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_30706 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (912)) ;
      }
    }
    GGS_uint  var_cas_bitNumber ;
    const GGS_bitNumberExpression  _temp_30858 = operand_30390->mBitNumber ;
    if (_temp_30858._isBuilt ()) {
      typeCategoryMethod__bitNumberExpression__getBitNumber _method = findCategoryMethod__bitNumberExpression__getBitNumber (_temp_30858._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_30858 (HERE), var_cas_bitSliceTable, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (919)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_BitTestSkip ::constructor_new (_inLexique, operand_30390->mInstructionLocation, operand_30390->mSkipIfSet, var_cas_IPICregisterDescription, var_cas_bitNumber COMMA_HERE)) ;
    const GGS_piccolo_instruction  _temp_31111 = operand_30390->mInstruction ;
    if (_temp_31111._isBuilt ()) {
      typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_31111._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_31111 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (930)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@conditionExpression.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition> gDispatchTableFor__conditionExpression__buildIPICinstructionForCondition ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition (typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__conditionExpression__buildIPICinstructionForCondition.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition
findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__conditionExpression__buildIPICinstructionForCondition.count ()) {
    result = gDispatchTableFor__conditionExpression__buildIPICinstructionForCondition (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (superClassPtr) ;
      gDispatchTableFor__conditionExpression__buildIPICinstructionForCondition.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@conditionExpression.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__conditionExpression__computeInstructionCountForCondition> gDispatchTableFor__conditionExpression__computeInstructionCountForCondition ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__conditionExpression__computeInstructionCountForCondition (typeCategoryMethod__conditionExpression__computeInstructionCountForCondition inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__conditionExpression__computeInstructionCountForCondition.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__conditionExpression__computeInstructionCountForCondition
findCategoryMethod__conditionExpression__computeInstructionCountForCondition (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__conditionExpression__computeInstructionCountForCondition result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__conditionExpression__computeInstructionCountForCondition.count ()) {
    result = gDispatchTableFor__conditionExpression__computeInstructionCountForCondition (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__conditionExpression__computeInstructionCountForCondition (superClassPtr) ;
      gDispatchTableFor__conditionExpression__computeInstructionCountForCondition.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@bcc_in_structured_if_condition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__bcc_in_structured_if_condition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_bcc_in_structured_if_condition * operand_31974,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_31974 != NULL) {
    GGS_conditional_branch var_cas_condition ;
    if ((var_cas_inComplementaryBranch).isBuiltAndTrue ()) {
      ::routine_getComplementaryBcc (_inLexique,  operand_31974->mCondition,  var_cas_condition COMMA_SOURCE_FILE_AT_LINE (966)) ;
    }else{
      var_cas_condition = operand_31974->mCondition ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_conditionalBranch ::constructor_new (_inLexique, var_cas_inInstructionLocation, GGS_condionalBranchMode::constructor_native (_inLexique COMMA_HERE), var_cas_condition, GGS_lstring ::constructor_new (_inLexique, var_cas_inTargetLabel, var_cas_inInstructionLocation COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@bcc_in_structured_if_condition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__bcc_in_structured_if_condition__computeInstructionCountForCondition (C_Compiler &,
                                const cPtr_bcc_in_structured_if_condition * operand_32808,
                                const GGS_bool  /* var_cas_inComplementaryBranch */,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_32808 != NULL) {
    var_cas_outInstructionCount = GGS_uint (true, 2U) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@registerComparisonCondition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__registerComparisonCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_registerComparisonCondition * operand_33058,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_33058 != NULL) {
    GGS_registerComparison var_cas_comparison ;
    if ((var_cas_inComplementaryBranch).isBuiltAndTrue ()) {
      ::routine_getRegisterComparisonComplementary (_inLexique,  operand_33058->mComparison,  var_cas_comparison COMMA_SOURCE_FILE_AT_LINE (1001)) ;
    }else{
      var_cas_comparison = operand_33058->mComparison ;
    }
    GGS_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_10 ;
    const GGS_registerExpression  _temp_33645 = operand_33058->mRegisterExpression ;
    if (_temp_33645._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_33645._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_33645 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_10 COMMA_SOURCE_FILE_AT_LINE (1008)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_registerComparisonCondition ::constructor_new (_inLexique, var_cas_inInstructionLocation, var_cas_IPICregisterDescription, var_cas_inTargetLabel, var_cas_comparison, GGS_bool (true, true) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@registerComparisonCondition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__registerComparisonCondition__computeInstructionCountForCondition (C_Compiler & _inLexique,
                                const cPtr_registerComparisonCondition * operand_34074,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_34074 != NULL) {
    GGS_registerComparison var_cas_comparison ;
    if ((var_cas_inComplementaryBranch).isBuiltAndTrue ()) {
      ::routine_getRegisterComparisonComplementary (_inLexique,  operand_34074->mComparison,  var_cas_comparison COMMA_SOURCE_FILE_AT_LINE (1031)) ;
    }else{
      var_cas_comparison = operand_34074->mComparison ;
    }
    ::routine_getRegisterComparisonInstructionCount (_inLexique,  var_cas_comparison,  var_cas_outInstructionCount COMMA_SOURCE_FILE_AT_LINE (1035)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@incDecRegisterInCondition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__incDecRegisterInCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_incDecRegisterInCondition * operand_34544,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_34544 != NULL) {
    GGS_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_11 ;
    const GGS_registerExpression  _temp_34943 = operand_34544->mRegisterExpression ;
    if (_temp_34943._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_34943._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_34943 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_11 COMMA_SOURCE_FILE_AT_LINE (1052)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_incDecRegisterInCondition ::constructor_new (_inLexique, var_cas_inInstructionLocation, var_cas_IPICregisterDescription, var_cas_inTargetLabel, operand_34544->mIncrement, operand_34544->m_W_isDestination, (operand_34544->mBranchIfZero)._operator_xor (var_cas_inComplementaryBranch), GGS_bool (true, true) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@incDecRegisterInCondition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__incDecRegisterInCondition__computeInstructionCountForCondition (C_Compiler &,
                                const cPtr_incDecRegisterInCondition * operand_35434,
                                const GGS_bool  /* var_cas_inComplementaryBranch */,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_35434 != NULL) {
    var_cas_outInstructionCount = GGS_uint (true, 2U) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@registerTestCondition.buildIPICinstructionForCondition'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__registerTestCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_registerTestCondition * operand_35678,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_35678 != NULL) {
    GGS_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_12 ;
    const GGS_registerExpression  _temp_36077 = operand_35678->mRegisterExpression ;
    if (_temp_36077._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_36077._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_36077 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_12 COMMA_SOURCE_FILE_AT_LINE (1092)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_jump_test_register ::constructor_new (_inLexique, var_cas_inInstructionLocation, var_cas_IPICregisterDescription, var_cas_inTargetLabel, (operand_35678->mBranchIfZero)._operator_xor (var_cas_inComplementaryBranch), GGS_bool (true, true) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@registerTestCondition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__registerTestCondition__computeInstructionCountForCondition (C_Compiler &,
                                const cPtr_registerTestCondition * operand_36518,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_36518 != NULL) {
    if (((operand_36518->mBranchIfZero)._operator_xor (var_cas_inComplementaryBranch)).isBuiltAndTrue ()) {
      var_cas_outInstructionCount = GGS_uint (true, 3U) ;
    }else{
      var_cas_outInstructionCount = GGS_uint (true, 2U) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@negateCondition.buildIPICinstructionForCondition'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__negateCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_negateCondition * operand_36848,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_36848 != NULL) {
    const GGS_conditionExpression  _temp_37171 = operand_36848->mCondition ;
    if (_temp_37171._isBuilt ()) {
      typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_37171._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_37171 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, (var_cas_inComplementaryBranch)._operator_not (), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1133)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@negateCondition.computeInstructionCountForCondition'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__negateCondition__computeInstructionCountForCondition (C_Compiler & _inLexique,
                                const cPtr_negateCondition * operand_37523,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_37523 != NULL) {
    const GGS_conditionExpression  _temp_37635 = operand_37523->mCondition ;
    if (_temp_37635._isBuilt ()) {
      typeCategoryMethod__conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__conditionExpression__computeInstructionCountForCondition (_temp_37635._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_37635 (HERE), (var_cas_inComplementaryBranch)._operator_not (), var_cas_outInstructionCount COMMA_SOURCE_FILE_AT_LINE (1151)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@andCondition.buildIPICinstructionForCondition'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__andCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_andCondition * operand_37834,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_37834 != NULL) {
    if ((var_cas_inComplementaryBranch).isBuiltAndTrue ()) {
      const GGS_conditionExpression  _temp_38196 = operand_37834->mLeftExpression ;
      if (_temp_38196._isBuilt ()) {
        typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_38196._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_38196 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1170)) ;
        }
      }
      const GGS_conditionExpression  _temp_38463 = operand_37834->mRightExpression ;
      if (_temp_38463._isBuilt ()) {
        typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_38463._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_38463 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1180)) ;
        }
      }
    }else{
      GGS_string var_cas_label0 ;
      var_cas_label0 = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1191))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1191)) ;
      const GGS_conditionExpression  _temp_38822 = operand_37834->mLeftExpression ;
      if (_temp_38822._isBuilt ()) {
        typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_38822._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_38822 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), var_cas_inInstructionLocation, var_cas_label0, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1192)) ;
        }
      }
      const GGS_conditionExpression  _temp_39082 = operand_37834->mRightExpression ;
      if (_temp_39082._isBuilt ()) {
        typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_39082._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_39082 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, false), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1202)) ;
        }
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, var_cas_inInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@andCondition.computeInstructionCountForCondition'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__andCondition__computeInstructionCountForCondition (C_Compiler & _inLexique,
                                const cPtr_andCondition * operand_39549,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_39549 != NULL) {
    GGS_uint  var_cas_countLeft ;
    const GGS_conditionExpression  _temp_39686 = operand_39549->mLeftExpression ;
    if (_temp_39686._isBuilt ()) {
      typeCategoryMethod__conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__conditionExpression__computeInstructionCountForCondition (_temp_39686._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_39686 (HERE), var_cas_inComplementaryBranch, var_cas_countLeft COMMA_SOURCE_FILE_AT_LINE (1223)) ;
      }
    }
    GGS_uint  var_cas_countRight ;
    const GGS_conditionExpression  _temp_39810 = operand_39549->mLeftExpression ;
    if (_temp_39810._isBuilt ()) {
      typeCategoryMethod__conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__conditionExpression__computeInstructionCountForCondition (_temp_39810._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_39810 (HERE), var_cas_inComplementaryBranch, var_cas_countRight COMMA_SOURCE_FILE_AT_LINE (1228)) ;
      }
    }
    var_cas_outInstructionCount = var_cas_countLeft._add_operation (_inLexique, var_cas_countRight COMMA_SOURCE_FILE_AT_LINE (1232)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@bitTest_in_structured_if_condition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__bitTest_in_structured_if_condition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_bitTest_in_structured_if_condition * operand_40068,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_40068 != NULL) {
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    GGS_ipic_registerExpression var_cas_IPICregisterDescription ;
    const GGS_registerExpression  _temp_40500 = operand_40068->mRegisterExpression ;
    if (_temp_40500._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_40500._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_40500 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (1249)) ;
      }
    }
    GGS_uint  var_cas_bitNumber ;
    const GGS_bitNumberExpression  _temp_40652 = operand_40068->mBitNumber ;
    if (_temp_40652._isBuilt ()) {
      typeCategoryMethod__bitNumberExpression__getBitNumber _method = findCategoryMethod__bitNumberExpression__getBitNumber (_temp_40652._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_40652 (HERE), var_cas_bitSliceTable, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (1256)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_BitTestSkip ::constructor_new (_inLexique, var_cas_inInstructionLocation, (operand_40068->mBTFSSinstruction)._operator_xor (var_cas_inComplementaryBranch), var_cas_IPICregisterDescription, var_cas_bitNumber COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_JUMP ::constructor_new (_inLexique, var_cas_inInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_inTargetLabel, var_cas_inInstructionLocation COMMA_HERE), GGS_jumpInstructionKind::constructor_ipicRelative (_inLexique COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@bitTest_in_structured_if_condition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__bitTest_in_structured_if_condition__computeInstructionCountForCondition (C_Compiler &,
                                const cPtr_bitTest_in_structured_if_condition * operand_41186,
                                const GGS_bool  /* var_cas_inComplementaryBranch */,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_41186 != NULL) {
    var_cas_outInstructionCount = GGS_uint (true, 2U) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@instruction_structured_if.buildIPICinstructionList'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_structured_if__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_structured_if * operand_41434,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_41434 != NULL) {
    GGS_bool var_cas_generateComplementaryCondition ;
    var_cas_generateComplementaryCondition = GGS_bool (true, false) ;
    if ((GGS_bool (true, _inLexique.boolOptionValueFromKeys ("piccolo_options", "performOptimizations" COMMA_SOURCE_FILE_AT_LINE (1289)))).isBuiltAndTrue ()) {
      GGS_uint  var_cas_directCount ;
      const GGS_conditionExpression  _temp_41820 = operand_41434->mIfCondition ;
      if (_temp_41820._isBuilt ()) {
        typeCategoryMethod__conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__conditionExpression__computeInstructionCountForCondition (_temp_41820._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_41820 (HERE), GGS_bool (true, true), var_cas_directCount COMMA_SOURCE_FILE_AT_LINE (1290)) ;
        }
      }
      if (((operand_41434->mElseInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1291)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_directCount._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1292)) ;
      }
      GGS_uint  var_cas_complementaryCount ;
      const GGS_conditionExpression  _temp_42005 = operand_41434->mIfCondition ;
      if (_temp_42005._isBuilt ()) {
        typeCategoryMethod__conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__conditionExpression__computeInstructionCountForCondition (_temp_42005._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_42005 (HERE), GGS_bool (true, false), var_cas_complementaryCount COMMA_SOURCE_FILE_AT_LINE (1294)) ;
        }
      }
      if (((operand_41434->mThenInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1295)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_complementaryCount._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1296)) ;
      }
      if (((var_cas_complementaryCount)._operator_strictInf (var_cas_directCount)).isBuiltAndTrue ()) {
        var_cas_generateComplementaryCondition = GGS_bool (true, true) ;
        var_cas_ioListFileContents.writeString ("  line ") ;
        var_cas_ioListFileContents._dotAssign_operation (var_cas_ioGeneratedInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1300)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1300))) ;
        var_cas_ioListFileContents.writeString (": generates complementary test (saves ") ;
        var_cas_ioListFileContents._dotAssign_operation (var_cas_directCount._substract_operation (_inLexique, var_cas_complementaryCount COMMA_SOURCE_FILE_AT_LINE (1301)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1301))) ;
        var_cas_ioListFileContents.writeString (" instruction") ;
        if (((var_cas_directCount._substract_operation (_inLexique, var_cas_complementaryCount COMMA_SOURCE_FILE_AT_LINE (1302)))._operator_strictSup (GGS_uint (true, 1U))).isBuiltAndTrue ()) {
          var_cas_ioListFileContents.writeString ("s") ;
        }
        var_cas_ioListFileContents.writeString (")\n") ;
      }
    }
    if ((var_cas_generateComplementaryCondition).isBuiltAndTrue ()) {
      GGS_string var_cas_label_nextCondition ;
      var_cas_label_nextCondition = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1310))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1310)) ;
      GGS_string var_cas_label_endOfIfinstruction ;
      var_cas_label_endOfIfinstruction = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1311))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1311)) ;
      const GGS_conditionExpression  _temp_42911 = operand_41434->mIfCondition ;
      if (_temp_42911._isBuilt ()) {
        typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_42911._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_42911 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, false), operand_41434->mInstructionLocation, var_cas_label_nextCondition, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1313)) ;
        }
      }
      {
        GGS_instructionList::cEnumerator enumerator_43201 (operand_41434->mElseInstructionList, true) ;
        const GGS_instructionList::cElement * operand_43201 = NULL ;
        while (((operand_43201 = enumerator_43201.nextObject ()))) {
          macroValidPointer (operand_43201) ;
          const GGS_piccolo_instruction  _temp_43245 = operand_43201->mInstruction ;
          if (_temp_43245._isBuilt ()) {
            typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_43245._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_43245 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1325)) ;
            }
          }
        }
      }
      if (((operand_41434->mThenInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1328)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_JUMP ::constructor_new (_inLexique, operand_41434->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_41434->mInstructionLocation COMMA_HERE), GGS_jumpInstructionKind::constructor_ipicRelative (_inLexique COMMA_HERE) COMMA_HERE)) ;
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_nextCondition, operand_41434->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      {
        GGS_instructionList::cEnumerator enumerator_43801 (operand_41434->mThenInstructionList, true) ;
        const GGS_instructionList::cElement * operand_43801 = NULL ;
        while (((operand_43801 = enumerator_43801.nextObject ()))) {
          macroValidPointer (operand_43801) ;
          const GGS_piccolo_instruction  _temp_43845 = operand_43801->mInstruction ;
          if (_temp_43845._isBuilt ()) {
            typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_43845._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_43845 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1333)) ;
            }
          }
        }
      }
      if (((operand_41434->mThenInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1335)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_41434->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      }
    }else{
      GGS_string var_cas_label_nextCondition ;
      var_cas_label_nextCondition = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1340))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1340)) ;
      GGS_string var_cas_label_endOfIfinstruction ;
      var_cas_label_endOfIfinstruction = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1341))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1341)) ;
      const GGS_conditionExpression  _temp_44452 = operand_41434->mIfCondition ;
      if (_temp_44452._isBuilt ()) {
        typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_44452._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_44452 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), operand_41434->mInstructionLocation, var_cas_label_nextCondition, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1343)) ;
        }
      }
      {
        GGS_instructionList::cEnumerator enumerator_44741 (operand_41434->mThenInstructionList, true) ;
        const GGS_instructionList::cElement * operand_44741 = NULL ;
        while (((operand_44741 = enumerator_44741.nextObject ()))) {
          macroValidPointer (operand_44741) ;
          const GGS_piccolo_instruction  _temp_44785 = operand_44741->mInstruction ;
          if (_temp_44785._isBuilt ()) {
            typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_44785._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_44785 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1355)) ;
            }
          }
        }
      }
      if (((operand_41434->mElseInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1358)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_JUMP ::constructor_new (_inLexique, operand_41434->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_41434->mInstructionLocation COMMA_HERE), GGS_jumpInstructionKind::constructor_ipicRelative (_inLexique COMMA_HERE) COMMA_HERE)) ;
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_nextCondition, operand_41434->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      {
        GGS_instructionList::cEnumerator enumerator_45341 (operand_41434->mElseInstructionList, true) ;
        const GGS_instructionList::cElement * operand_45341 = NULL ;
        while (((operand_45341 = enumerator_45341.nextObject ()))) {
          macroValidPointer (operand_45341) ;
          const GGS_piccolo_instruction  _temp_45385 = operand_45341->mInstruction ;
          if (_temp_45385._isBuilt ()) {
            typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_45385._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_45385 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1363)) ;
            }
          }
        }
      }
      if (((operand_41434->mElseInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1365)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_41434->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_do_while.buildIPICinstructionList'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_do_while__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_do_while * operand_45850,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_45850 != NULL) {
    GGS_string var_cas_labelInstructionBegin ;
    var_cas_labelInstructionBegin = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1381))) ;
    var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1381)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_labelInstructionBegin, operand_45850->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    {
      GGS_instructionList::cEnumerator enumerator_46352 (operand_45850->mRepeatedInstructionList, true) ;
      const GGS_instructionList::cElement * operand_46352 = NULL ;
      while (((operand_46352 = enumerator_46352.nextObject ()))) {
        macroValidPointer (operand_46352) ;
        const GGS_piccolo_instruction  _temp_46398 = operand_46352->mInstruction ;
        if (_temp_46398._isBuilt ()) {
          typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_46398._galgasObjectRunTimeInfo ()) ;
          if (_method != NULL) {
            _method (_inLexique, _temp_46398 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1386)) ;
          }
        }
      }
    }
    {
      GGS_partList::cEnumerator enumerator_46581 (operand_45850->mWhilePartList, true) ;
      const GGS_partList::cElement * operand_46581 = NULL ;
      while (((operand_46581 = enumerator_46581.nextObject ()))) {
        macroValidPointer (operand_46581) ;
        if (((operand_46581->mInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1390)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
          const GGS_conditionExpression  _temp_46660 = operand_46581->mCondition ;
          if (_temp_46660._isBuilt ()) {
            typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_46660._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_46660 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, false), operand_45850->mInstructionLocation, var_cas_labelInstructionBegin, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1391)) ;
            }
          }
        }else{
          GGS_string var_cas_nextBranchLabel ;
          var_cas_nextBranchLabel = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1402))) ;
          var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1402)) ;
          const GGS_conditionExpression  _temp_47055 = operand_46581->mCondition ;
          if (_temp_47055._isBuilt ()) {
            typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_47055._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_47055 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), operand_45850->mInstructionLocation, var_cas_nextBranchLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1403)) ;
            }
          }
          {
            GGS_instructionList::cEnumerator enumerator_47333 (operand_46581->mInstructionList, true) ;
            const GGS_instructionList::cElement * operand_47333 = NULL ;
            while (((operand_47333 = enumerator_47333.nextObject ()))) {
              macroValidPointer (operand_47333) ;
              const GGS_piccolo_instruction  _temp_47375 = operand_47333->mInstruction ;
              if (_temp_47375._isBuilt ()) {
                typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_47375._galgasObjectRunTimeInfo ()) ;
                if (_method != NULL) {
                  _method (_inLexique, _temp_47375 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1414)) ;
                }
              }
            }
          }
          var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_JUMP ::constructor_new (_inLexique, operand_45850->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_labelInstructionBegin, operand_45850->mInstructionLocation COMMA_HERE), GGS_jumpInstructionKind::constructor_ipicRelative (_inLexique COMMA_HERE) COMMA_HERE)) ;
          var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_nextBranchLabel, operand_45850->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@instruction_IF_IncDec.buildIPICinstructionList'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_IF_IncDec__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_IF_IncDec * operand_47969,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_47969 != NULL) {
    GGS_instruction_FDA_base_code var_cas_baseCode ;
    if (((operand_47969->mIncrement)._operator_and (operand_47969->mSkipIfZero)).isBuiltAndTrue ()) {
      var_cas_baseCode = GGS_instruction_FDA_base_code::constructor_INCFSZ (_inLexique COMMA_HERE) ;
    }else if (((operand_47969->mIncrement)._operator_and ((operand_47969->mSkipIfZero)._operator_not ())).isBuiltAndTrue ()) {
      var_cas_baseCode = GGS_instruction_FDA_base_code::constructor_INFSNZ (_inLexique COMMA_HERE) ;
    }else if ((((operand_47969->mIncrement)._operator_not ())._operator_and (operand_47969->mSkipIfZero)).isBuiltAndTrue ()) {
      var_cas_baseCode = GGS_instruction_FDA_base_code::constructor_DECFSZ (_inLexique COMMA_HERE) ;
    }else{
      var_cas_baseCode = GGS_instruction_FDA_base_code::constructor_DCFSNZ (_inLexique COMMA_HERE) ;
    }
    GGS_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_13 ;
    const GGS_registerExpression  _temp_48657 = operand_47969->mRegisterExpression ;
    if (_temp_48657._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_48657._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_48657 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_13 COMMA_SOURCE_FILE_AT_LINE (1444)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, operand_47969->mInstructionLocation, var_cas_baseCode, var_cas_IPICregisterDescription, operand_47969->m_W_isDestination COMMA_HERE)) ;
    const GGS_piccolo_instruction  _temp_48969 = operand_47969->mInstruction ;
    if (_temp_48969._isBuilt ()) {
      typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_48969._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_48969 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1458)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "buildIPICAssemblyInstructionList"        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildIPICAssemblyInstructionList (C_Compiler & _inLexique,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_piccoloModel  var_cas_inPiccoloModel,
                                const GGS_bool  var_cas_inHasHighInterrupt,
                                const GGS_bool  var_cas_inHasLowInterrupt,
                                GGS_ipic_instructionList  & var_cas_outGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_buildIPICAssemblyInstructionList at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_generationOptimizationMessages ;
  var_cas_generationOptimizationMessages = GGS_string (true, "") ;
  var_cas_outGeneratedInstructionList = GGS_ipic_instructionList ::constructor_emptyList () ;
  GGS_uint  var_cas_localLabelIndex ;
  var_cas_localLabelIndex = GGS_uint (true, 0U) ;
  var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_JUMP ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "main"), GGS_location (_inLexique) COMMA_HERE), GGS_jumpInstructionKind::constructor_ipicRelative (_inLexique COMMA_HERE) COMMA_HERE)) ;
  if (((var_cas_inHasLowInterrupt)._operator_and (var_cas_inHasHighInterrupt)).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_ORG ::constructor_new (_inLexique, GGS_uint (true, 8U) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_JUMP ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "_fast_interrupt"), GGS_location (_inLexique) COMMA_HERE), GGS_jumpInstructionKind::constructor_ipicRelative (_inLexique COMMA_HERE) COMMA_HERE)) ;
  }
  if ((var_cas_inHasLowInterrupt).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_ORG ::constructor_new (_inLexique, GGS_uint (true, 24U) COMMA_HERE)) ;
    {
      GGS_interruptDefinitionList::cEnumerator enumerator_50334 (var_cas_inPiccoloModel.reader_mInterruptDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1486)), true) ;
      const GGS_interruptDefinitionList::cElement * operand_50334 = NULL ;
      while (((operand_50334 = enumerator_50334.nextObject ()))) {
        macroValidPointer (operand_50334) ;
        if (((operand_50334->mInterruptName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1487)))._operator_isEqual (GGS_string (true, "low"))).isBuiltAndTrue ()) {
          {
            GGS_instructionList::cEnumerator enumerator_50442 (operand_50334->mInstructionList, true) ;
            const GGS_instructionList::cElement * operand_50442 = NULL ;
            while (((operand_50442 = enumerator_50442.nextObject ()))) {
              macroValidPointer (operand_50442) ;
              const GGS_piccolo_instruction  _temp_50486 = operand_50442->mInstruction ;
              if (_temp_50486._isBuilt ()) {
                typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_50486._galgasObjectRunTimeInfo ()) ;
                if (_method != NULL) {
                  _method (_inLexique, _temp_50486 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_localLabelIndex, var_cas_outGeneratedInstructionList, var_cas_generationOptimizationMessages COMMA_SOURCE_FILE_AT_LINE (1489)) ;
                }
              }
            }
          }
          var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RETFIE ::constructor_new (_inLexique, GGS_location (_inLexique), operand_50334->mFastReturn COMMA_HERE)) ;
        }
      }
    }
  }
  if ((var_cas_inHasHighInterrupt).isBuiltAndTrue ()) {
    if ((var_cas_inHasLowInterrupt).isBuiltAndTrue ()) {
      var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "_fast_interrupt"), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE)) ;
    }else{
      var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_ORG ::constructor_new (_inLexique, GGS_uint (true, 8U) COMMA_HERE)) ;
    }
    {
      GGS_interruptDefinitionList::cEnumerator enumerator_51145 (var_cas_inPiccoloModel.reader_mInterruptDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1503)), true) ;
      const GGS_interruptDefinitionList::cElement * operand_51145 = NULL ;
      while (((operand_51145 = enumerator_51145.nextObject ()))) {
        macroValidPointer (operand_51145) ;
        if (((operand_51145->mInterruptName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1504)))._operator_isEqual (GGS_string (true, "high"))).isBuiltAndTrue ()) {
          {
            GGS_instructionList::cEnumerator enumerator_51254 (operand_51145->mInstructionList, true) ;
            const GGS_instructionList::cElement * operand_51254 = NULL ;
            while (((operand_51254 = enumerator_51254.nextObject ()))) {
              macroValidPointer (operand_51254) ;
              const GGS_piccolo_instruction  _temp_51298 = operand_51254->mInstruction ;
              if (_temp_51298._isBuilt ()) {
                typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_51298._galgasObjectRunTimeInfo ()) ;
                if (_method != NULL) {
                  _method (_inLexique, _temp_51298 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_localLabelIndex, var_cas_outGeneratedInstructionList, var_cas_generationOptimizationMessages COMMA_SOURCE_FILE_AT_LINE (1506)) ;
                }
              }
            }
          }
          var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RETFIE ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_bool (true, true) COMMA_HERE)) ;
        }
      }
    }
  }
  {
    GGS_routineDefinitionList::cEnumerator enumerator_51668 (var_cas_inPiccoloModel.reader_mRoutineDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1514)), true) ;
    const GGS_routineDefinitionList::cElement * operand_51668 = NULL ;
    while (((operand_51668 = enumerator_51668.nextObject ()))) {
      macroValidPointer (operand_51668) ;
      var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, operand_51668->mRoutineName COMMA_HERE)) ;
      {
        GGS_instructionList::cEnumerator enumerator_51800 (operand_51668->mInstructionList, true) ;
        const GGS_instructionList::cElement * operand_51800 = NULL ;
        while (((operand_51800 = enumerator_51800.nextObject ()))) {
          macroValidPointer (operand_51800) ;
          const GGS_piccolo_instruction  _temp_51840 = operand_51800->mInstruction ;
          if (_temp_51840._isBuilt ()) {
            typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_51840._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_51840 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_localLabelIndex, var_cas_outGeneratedInstructionList, var_cas_generationOptimizationMessages COMMA_SOURCE_FILE_AT_LINE (1517)) ;
            }
          }
        }
      }
      if (((operand_51668->mIsNoReturn)._operator_not ()).isBuiltAndTrue ()) {
        var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RETURN ::constructor_new (_inLexique, operand_51668->mRoutineName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (1521)) COMMA_HERE)) ;
      }
    }
  }
  GGS_registerExpression  var_cas_WREGregister ;
  var_cas_WREGregister = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "WREG"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
  GGS_ipic_registerExpression var_cas_WREG_IPICregisterDescription ;
  GGS_bitSliceTable  automatic_var_14 ;
  const GGS_registerExpression  _temp_52428 = var_cas_WREGregister ;
  if (_temp_52428._isBuilt ()) {
    typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_52428._galgasObjectRunTimeInfo ()) ;
    if (_method != NULL) {
      _method (_inLexique, _temp_52428 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_WREG_IPICregisterDescription, automatic_var_14 COMMA_SOURCE_FILE_AT_LINE (1527)) ;
    }
  }
  GGS_registerExpression  var_cas_TOSLregister ;
  var_cas_TOSLregister = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "TOSL"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
  GGS_ipic_registerExpression var_cas_TOSL_IPICregisterDescription ;
  GGS_bitSliceTable  automatic_var_15 ;
  const GGS_registerExpression  _temp_52743 = var_cas_TOSLregister ;
  if (_temp_52743._isBuilt ()) {
    typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_52743._galgasObjectRunTimeInfo ()) ;
    if (_method != NULL) {
      _method (_inLexique, _temp_52743 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_TOSL_IPICregisterDescription, automatic_var_15 COMMA_SOURCE_FILE_AT_LINE (1536)) ;
    }
  }
  GGS_registerExpression  var_cas_TOSHregister ;
  var_cas_TOSHregister = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "TOSH"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
  GGS_ipic_registerExpression var_cas_TOSH_IPICregisterDescription ;
  GGS_bitSliceTable  automatic_var_16 ;
  const GGS_registerExpression  _temp_53058 = var_cas_TOSHregister ;
  if (_temp_53058._isBuilt ()) {
    typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_53058._galgasObjectRunTimeInfo ()) ;
    if (_method != NULL) {
      _method (_inLexique, _temp_53058 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_TOSH_IPICregisterDescription, automatic_var_16 COMMA_SOURCE_FILE_AT_LINE (1545)) ;
    }
  }
  GGS_registerExpression  var_cas_TOSUregister ;
  var_cas_TOSUregister = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "TOSU"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
  GGS_ipic_registerExpression var_cas_TOSU_IPICregisterDescription ;
  GGS_bitSliceTable  automatic_var_17 ;
  const GGS_registerExpression  _temp_53373 = var_cas_TOSUregister ;
  if (_temp_53373._isBuilt ()) {
    typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_53373._galgasObjectRunTimeInfo ()) ;
    if (_method != NULL) {
      _method (_inLexique, _temp_53373 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_TOSU_IPICregisterDescription, automatic_var_17 COMMA_SOURCE_FILE_AT_LINE (1554)) ;
    }
  }
  if ((var_cas_inPiccoloModel.reader_mNeedsComputedGoto4 (_inLexique COMMA_SOURCE_FILE_AT_LINE (1561))).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "_computed_goto_4"), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_instruction_FDA_base_code::constructor_ADDWF (_inLexique COMMA_HERE), var_cas_WREG_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
  }
  if ((var_cas_inPiccoloModel.reader_mNeedsComputedGoto2 (_inLexique COMMA_SOURCE_FILE_AT_LINE (1570))).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "_computed_goto_2"), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE)) ;
  }
  if (((var_cas_inPiccoloModel.reader_mNeedsComputedGoto2 (_inLexique COMMA_SOURCE_FILE_AT_LINE (1573)))._operator_or (var_cas_inPiccoloModel.reader_mNeedsComputedGoto4 (_inLexique COMMA_SOURCE_FILE_AT_LINE (1573)))).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_instruction_FDA_base_code::constructor_ADDWF (_inLexique COMMA_HERE), var_cas_WREG_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_instruction_FDA_base_code::constructor_ADDWFC (_inLexique COMMA_HERE), var_cas_TOSL_IPICregisterDescription, GGS_bool (true, false) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_literalOperation ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_literal_instruction_opcode::constructor_MOVLW (_inLexique COMMA_HERE), GGS_uint (true, 0U) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_instruction_FDA_base_code::constructor_ADDWFC (_inLexique COMMA_HERE), var_cas_TOSH_IPICregisterDescription, GGS_bool (true, false) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_instruction_FDA_base_code::constructor_ADDWFC (_inLexique COMMA_HERE), var_cas_TOSU_IPICregisterDescription, GGS_bool (true, false) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RETURN ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE)) ;
  }
  if ((GGS_bool (true, _inLexique.boolOptionValueFromKeys ("piccolo_options", "ouputListingFile" COMMA_SOURCE_FILE_AT_LINE (1608)))).isBuiltAndTrue ()) {
    var_cas_ioListFileContents._dotAssign_operation (GGS_string (true, "").reader_stringByLeftAndRightPadding (_inLexique, GGS_uint (true, 79U), GGS_char (true, '*') COMMA_SOURCE_FILE_AT_LINE (1609))) ;
    var_cas_ioListFileContents.writeString ("\n") ;
    var_cas_ioListFileContents.writeString ("*") ;
    var_cas_ioListFileContents._dotAssign_operation (GGS_string (true, "IPIC INSTRUCTION LIST").reader_stringByLeftAndRightPadding (_inLexique, GGS_uint (true, 77U), GGS_char (true, ' ') COMMA_SOURCE_FILE_AT_LINE (1610))) ;
    var_cas_ioListFileContents.writeString ("*\n") ;
    var_cas_ioListFileContents._dotAssign_operation (GGS_string (true, "").reader_stringByLeftAndRightPadding (_inLexique, GGS_uint (true, 79U), GGS_char (true, '*') COMMA_SOURCE_FILE_AT_LINE (1611))) ;
    var_cas_ioListFileContents.writeString ("\n"
      "\n") ;
    if (((var_cas_generationOptimizationMessages.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1612)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
      var_cas_ioListFileContents.writeString ("Optimizations during generation:\n") ;
      var_cas_ioListFileContents._dotAssign_operation (var_cas_generationOptimizationMessages) ;
      var_cas_ioListFileContents.writeString ("\n") ;
    }
    var_cas_ioListFileContents.writeString ("Generated intermediate code:\n") ;
    GGS_uint  var_cas_index ;
    var_cas_index = GGS_uint (true, 0U) ;
    GGS_uint  var_cas_currentAddress ;
    var_cas_currentAddress = GGS_uint (true, 0U) ;
    {
      GGS_ipic_instructionList::cEnumerator enumerator_55850 (var_cas_outGeneratedInstructionList, true) ;
      const GGS_ipic_instructionList::cElement * operand_55850 = NULL ;
      while (((operand_55850 = enumerator_55850.nextObject ()))) {
        macroValidPointer (operand_55850) ;
        const GGS_ipic_instruction  _temp_55901 = operand_55850->mInstruction ;
        if (_temp_55901._isBuilt ()) {
          _temp_55901 (HERE)->method_setCurrentAddress (_inLexique, var_cas_currentAddress COMMA_SOURCE_FILE_AT_LINE (1621)) ;
        }
        var_cas_ioListFileContents._dotAssign_operation (var_cas_index.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1622)).reader_stringByLeftPadding (_inLexique, GGS_uint (true, 5U), GGS_char (true, ' ') COMMA_SOURCE_FILE_AT_LINE (1622))) ;
        var_cas_ioListFileContents.writeString (": ") ;
        const GGS_ipic_instruction  _temp_56041 = operand_55850->mInstruction ;
        if (_temp_56041._isBuilt ()) {
          _temp_56041 (HERE)->method_displayIPICinstruction (_inLexique, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1623)) ;
        }
        var_cas_ioListFileContents.writeString ("\n") ;
        var_cas_index._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1625)) ;
      }
    }
    var_cas_ioListFileContents.writeString ("\n") ;
    var_cas_ioListFileContents.writeString ("Minimum code size without optimization: ") ;
    var_cas_ioListFileContents._dotAssign_operation (var_cas_currentAddress.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1628))) ;
    var_cas_ioListFileContents.writeString (" bytes.\n"
      "\n") ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_buildIPICAssemblyInstructionList\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_buildIPICAssemblyInstructionList (void) {
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatInteger__eval, gClassInfoFor__immediatInteger.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatRegister__eval, gClassInfoFor__immediatRegister.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatAdd__eval, gClassInfoFor__immediatAdd.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatSub__eval, gClassInfoFor__immediatSub.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatMul__eval, gClassInfoFor__immediatMul.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatDiv__eval, gClassInfoFor__immediatDiv.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatMod__eval, gClassInfoFor__immediatMod.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatAnd__eval, gClassInfoFor__immediatAnd.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatOr__eval, gClassInfoFor__immediatOr.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatXor__eval, gClassInfoFor__immediatXor.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatLeftShift__eval, gClassInfoFor__immediatLeftShift.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatRightShift__eval, gClassInfoFor__immediatRightShift.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatEqualTest__eval, gClassInfoFor__immediatEqualTest.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatNotEqualTest__eval, gClassInfoFor__immediatNotEqualTest.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatGreaterOrEqualTest__eval, gClassInfoFor__immediatGreaterOrEqualTest.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatLowerOrEqualTest__eval, gClassInfoFor__immediatLowerOrEqualTest.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatGreaterTest__eval, gClassInfoFor__immediatGreaterTest.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatLowerTest__eval, gClassInfoFor__immediatLowerTest.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatNegate__eval, gClassInfoFor__immediatNegate.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatComplement__eval, gClassInfoFor__immediatComplement.slotID ()) ;
 enterCategoryMethod__bitNumberExpression__getBitNumber ((typeCategoryMethod__bitNumberExpression__getBitNumber) category_method__bitNumberLiteralValue__getBitNumber, gClassInfoFor__bitNumberLiteralValue.slotID ()) ;
 enterCategoryMethod__bitNumberExpression__getBitNumber ((typeCategoryMethod__bitNumberExpression__getBitNumber) category_method__bitNumberLabelValue__getBitNumber, gClassInfoFor__bitNumberLabelValue.slotID ()) ;
 enterCategoryMethod__registerExpression__resolveAccess (category_method__registerExpression__resolveAccess, gClassInfoFor__registerExpression.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_nobanksel__buildIPICinstructionList, gClassInfoFor__instruction_nobanksel.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_savebank__buildIPICinstructionList, gClassInfoFor__instruction_savebank.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_banksel__buildIPICinstructionList, gClassInfoFor__instruction_banksel.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_FDA__buildIPICinstructionList, gClassInfoFor__instruction_FDA.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_FA__buildIPICinstructionList, gClassInfoFor__instruction_FA.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_MOVFF__buildIPICinstructionList, gClassInfoFor__instruction_MOVFF.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_FBA__buildIPICinstructionList, gClassInfoFor__instruction_FBA.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_JSR__buildIPICinstructionList, gClassInfoFor__instruction_JSR.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_JUMP__buildIPICinstructionList, gClassInfoFor__instruction_JUMP.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_JUMPCC__buildIPICinstructionList, gClassInfoFor__instruction_JUMPCC.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_CLRWDT__buildIPICinstructionList, gClassInfoFor__instruction_CLRWDT.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_DAW__buildIPICinstructionList, gClassInfoFor__instruction_DAW.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_NOP__buildIPICinstructionList, gClassInfoFor__instruction_NOP.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_POP__buildIPICinstructionList, gClassInfoFor__instruction_POP.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_PUSH__buildIPICinstructionList, gClassInfoFor__instruction_PUSH.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_RESET__buildIPICinstructionList, gClassInfoFor__instruction_RESET.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_SLEEP__buildIPICinstructionList, gClassInfoFor__instruction_SLEEP.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_literalOperation__buildIPICinstructionList, gClassInfoFor__instruction_literalOperation.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_LFSR__buildIPICinstructionList, gClassInfoFor__instruction_LFSR.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_TBLRD__buildIPICinstructionList, gClassInfoFor__instruction_TBLRD.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_TBLWT__buildIPICinstructionList, gClassInfoFor__instruction_TBLWT.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_computed_retlw__buildIPICinstructionList, gClassInfoFor__instruction_computed_retlw.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_MNOP__buildIPICinstructionList, gClassInfoFor__instruction_MNOP.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_computed_bra__buildIPICinstructionList, gClassInfoFor__instruction_computed_bra.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_computed_goto__buildIPICinstructionList, gClassInfoFor__instruction_computed_goto.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_FOREVER__buildIPICinstructionList, gClassInfoFor__instruction_FOREVER.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_IF_FA_SEMI_COLON__buildIPICinstructionList, gClassInfoFor__instruction_IF_FA_SEMI_COLON.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_IF_BitTest__buildIPICinstructionList, gClassInfoFor__instruction_IF_BitTest.slotID ()) ;
 enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition) category_method__bcc_in_structured_if_condition__buildIPICinstructionForCondition, gClassInfoFor__bcc_in_structured_if_condition.slotID ()) ;
 enterCategoryMethod__conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__conditionExpression__computeInstructionCountForCondition) category_method__bcc_in_structured_if_condition__computeInstructionCountForCondition, gClassInfoFor__bcc_in_structured_if_condition.slotID ()) ;
 enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition) category_method__registerComparisonCondition__buildIPICinstructionForCondition, gClassInfoFor__registerComparisonCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__conditionExpression__computeInstructionCountForCondition) category_method__registerComparisonCondition__computeInstructionCountForCondition, gClassInfoFor__registerComparisonCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition) category_method__incDecRegisterInCondition__buildIPICinstructionForCondition, gClassInfoFor__incDecRegisterInCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__conditionExpression__computeInstructionCountForCondition) category_method__incDecRegisterInCondition__computeInstructionCountForCondition, gClassInfoFor__incDecRegisterInCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition) category_method__registerTestCondition__buildIPICinstructionForCondition, gClassInfoFor__registerTestCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__conditionExpression__computeInstructionCountForCondition) category_method__registerTestCondition__computeInstructionCountForCondition, gClassInfoFor__registerTestCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition) category_method__negateCondition__buildIPICinstructionForCondition, gClassInfoFor__negateCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__conditionExpression__computeInstructionCountForCondition) category_method__negateCondition__computeInstructionCountForCondition, gClassInfoFor__negateCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition) category_method__andCondition__buildIPICinstructionForCondition, gClassInfoFor__andCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__conditionExpression__computeInstructionCountForCondition) category_method__andCondition__computeInstructionCountForCondition, gClassInfoFor__andCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition) category_method__bitTest_in_structured_if_condition__buildIPICinstructionForCondition, gClassInfoFor__bitTest_in_structured_if_condition.slotID ()) ;
 enterCategoryMethod__conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__conditionExpression__computeInstructionCountForCondition) category_method__bitTest_in_structured_if_condition__computeInstructionCountForCondition, gClassInfoFor__bitTest_in_structured_if_condition.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_structured_if__buildIPICinstructionList, gClassInfoFor__instruction_structured_if.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_do_while__buildIPICinstructionList, gClassInfoFor__instruction_do_while.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_IF_IncDec__buildIPICinstructionList, gClassInfoFor__instruction_IF_IncDec.slotID ()) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogueAction prologueEpilogueObjectFor_buildIPICAssemblyInstructionList (prologueRoutineFor_buildIPICAssemblyInstructionList,
                                   NULL) ;

//---------------------------------------------------------------------------*

