//---------------------------------------------------------------------------*
//                                                                           *
//               File 'buildIPICAssemblyInstructionList.cpp'                 *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     august 17th, 2008, at 18h18'49"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "buildIPICAssemblyInstructionList.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "buildIPICAssemblyInstructionList.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//       Virtual Table for category method '@immediatExpression.eval'        *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__immediatExpression__eval> gDispatchTableFor__immediatExpression__eval ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__immediatExpression__eval (typeCategoryMethod__immediatExpression__eval inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__immediatExpression__eval.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__immediatExpression__eval
findCategoryMethod__immediatExpression__eval (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__immediatExpression__eval result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__immediatExpression__eval.count ()) {
    result = gDispatchTableFor__immediatExpression__eval (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__immediatExpression__eval (superClassPtr) ;
      gDispatchTableFor__immediatExpression__eval.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 Category method '@immediatInteger.eval'                   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatInteger__eval (C_Compiler & _inLexique,
                                const cPtr_immediatInteger * operand_973,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_973 != NULL) {
    var_cas_outResult = operand_973->mValue.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (25)).reader_sint (_inLexique COMMA_SOURCE_FILE_AT_LINE (25)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 Category method '@immediatRegister.eval'                  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatRegister__eval (C_Compiler & _inLexique,
                                const cPtr_immediatRegister * operand_1207,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1207 != NULL) {
    GGS_uintlist  var_cas_registerAddressList ;
    GGS_uint  var_cas_size ;
    GGS_bitSliceTable  automatic_var_0 ;
    GGS_string automatic_var_1 ;
    const GGS_registerTable  _temp_1341 = var_cas_inRegisterTable ;
    if (_temp_1341._isBuilt ()) {
      _temp_1341 (HERE)->method_searchKey (_inLexique, operand_1207->mRegister.reader_mRegisterName (_inLexique COMMA_SOURCE_FILE_AT_LINE (36)), var_cas_registerAddressList, var_cas_size, automatic_var_0, automatic_var_1 COMMA_SOURCE_FILE_AT_LINE (36)) ;
    }
    GGS_uint  var_cas_registerAddress ;
    const GGS_uintlist  _temp_1457 = var_cas_registerAddressList ;
    if (_temp_1457._isBuilt ()) {
      _temp_1457 (HERE)->method_first (_inLexique, var_cas_registerAddress COMMA_SOURCE_FILE_AT_LINE (37)) ;
    }
    if (((operand_1207->mRegister.reader_mOffset (_inLexique COMMA_SOURCE_FILE_AT_LINE (38)).reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (38)))._operator_supOrEqual (var_cas_size)).isBuiltAndTrue ()) {
      operand_1207->mRegister.reader_mOffset (_inLexique COMMA_SOURCE_FILE_AT_LINE (39)).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "index ("))._operator_concat (operand_1207->mRegister.reader_mOffset (_inLexique COMMA_SOURCE_FILE_AT_LINE (39)).reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (39)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (39))))._operator_concat (GGS_string (true, ") should be lower than size (")))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (39))))._operator_concat (GGS_string (true, ")")) COMMA_SOURCE_FILE_AT_LINE (40)) ;
    }
    var_cas_outResult = var_cas_registerAddress._add_operation (_inLexique, operand_1207->mRegister.reader_mOffset (_inLexique COMMA_SOURCE_FILE_AT_LINE (41)).reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (41)) COMMA_SOURCE_FILE_AT_LINE (41)).reader_sint (_inLexique COMMA_SOURCE_FILE_AT_LINE (41)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   Category method '@immediatAdd.eval'                     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatAdd__eval (C_Compiler & _inLexique,
                                const cPtr_immediatAdd * operand_1866,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1866 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_1965 = operand_1866->mLeftExpression ;
    if (_temp_1965._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_1965._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_1965 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (50)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_2042 = operand_1866->mRightExpression ;
    if (_temp_2042._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_2042._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_2042 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (51)) ;
      }
    }
    var_cas_outResult = var_cas_leftResult._add_operation (_inLexique, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (52)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   Category method '@immediatSub.eval'                     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatSub__eval (C_Compiler & _inLexique,
                                const cPtr_immediatSub * operand_2245,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2245 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_2344 = operand_2245->mLeftExpression ;
    if (_temp_2344._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_2344._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_2344 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (61)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_2421 = operand_2245->mRightExpression ;
    if (_temp_2421._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_2421._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_2421 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (62)) ;
      }
    }
    var_cas_outResult = var_cas_leftResult._substract_operation (_inLexique, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (63)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   Category method '@immediatMul.eval'                     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatMul__eval (C_Compiler & _inLexique,
                                const cPtr_immediatMul * operand_2624,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2624 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_2723 = operand_2624->mLeftExpression ;
    if (_temp_2723._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_2723._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_2723 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (72)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_2800 = operand_2624->mRightExpression ;
    if (_temp_2800._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_2800._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_2800 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (73)) ;
      }
    }
    var_cas_outResult = var_cas_leftResult._multiply_operation (_inLexique, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (74)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   Category method '@immediatDiv.eval'                     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatDiv__eval (C_Compiler & _inLexique,
                                const cPtr_immediatDiv * operand_3003,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3003 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_3102 = operand_3003->mLeftExpression ;
    if (_temp_3102._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_3102._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_3102 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (83)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_3179 = operand_3003->mRightExpression ;
    if (_temp_3179._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_3179._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_3179 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (84)) ;
      }
    }
    var_cas_outResult = var_cas_leftResult._divide_operation (_inLexique, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (85)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   Category method '@immediatMod.eval'                     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatMod__eval (C_Compiler & _inLexique,
                                const cPtr_immediatMod * operand_3382,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3382 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_3481 = operand_3382->mLeftExpression ;
    if (_temp_3481._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_3481._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_3481 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (94)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_3558 = operand_3382->mRightExpression ;
    if (_temp_3558._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_3558._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_3558 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (95)) ;
      }
    }
    var_cas_outResult = var_cas_leftResult._modulo_operation (_inLexique, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (96)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   Category method '@immediatAnd.eval'                     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatAnd__eval (C_Compiler & _inLexique,
                                const cPtr_immediatAnd * operand_3763,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3763 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_3862 = operand_3763->mLeftExpression ;
    if (_temp_3862._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_3862._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_3862 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (105)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_3939 = operand_3763->mRightExpression ;
    if (_temp_3939._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_3939._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_3939 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (106)) ;
      }
    }
    var_cas_outResult = (var_cas_leftResult)._operator_and (var_cas_rightResult) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                    Category method '@immediatOr.eval'                     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatOr__eval (C_Compiler & _inLexique,
                                const cPtr_immediatOr * operand_4141,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4141 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_4240 = operand_4141->mLeftExpression ;
    if (_temp_4240._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_4240._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_4240 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (116)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_4317 = operand_4141->mRightExpression ;
    if (_temp_4317._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_4317._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_4317 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (117)) ;
      }
    }
    var_cas_outResult = (var_cas_leftResult)._operator_or (var_cas_rightResult) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   Category method '@immediatXor.eval'                     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatXor__eval (C_Compiler & _inLexique,
                                const cPtr_immediatXor * operand_4520,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4520 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_4619 = operand_4520->mLeftExpression ;
    if (_temp_4619._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_4619._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_4619 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (127)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_4696 = operand_4520->mRightExpression ;
    if (_temp_4696._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_4696._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_4696 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (128)) ;
      }
    }
    var_cas_outResult = (var_cas_leftResult)._operator_xor (var_cas_rightResult) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Category method '@immediatLeftShift.eval'                  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatLeftShift__eval (C_Compiler & _inLexique,
                                const cPtr_immediatLeftShift * operand_4905,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4905 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_5004 = operand_4905->mLeftExpression ;
    if (_temp_5004._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_5004._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_5004 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (138)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_5081 = operand_4905->mRightExpression ;
    if (_temp_5081._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_5081._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_5081 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (139)) ;
      }
    }
    var_cas_outResult = var_cas_leftResult._left_shift_operation (_inLexique, var_cas_rightResult.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (140)) COMMA_SOURCE_FILE_AT_LINE (140)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Category method '@immediatRightShift.eval'                 *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatRightShift__eval (C_Compiler & _inLexique,
                                const cPtr_immediatRightShift * operand_5299,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5299 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_5398 = operand_5299->mLeftExpression ;
    if (_temp_5398._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_5398._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_5398 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (149)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_5475 = operand_5299->mRightExpression ;
    if (_temp_5475._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_5475._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_5475 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (150)) ;
      }
    }
    var_cas_outResult = var_cas_leftResult._right_shift_operation (_inLexique, var_cas_rightResult.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (151)) COMMA_SOURCE_FILE_AT_LINE (151)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Category method '@immediatEqualTest.eval'                  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatEqualTest__eval (C_Compiler & _inLexique,
                                const cPtr_immediatEqualTest * operand_5692,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5692 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_5791 = operand_5692->mLeftExpression ;
    if (_temp_5791._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_5791._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_5791 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (160)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_5868 = operand_5692->mRightExpression ;
    if (_temp_5868._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_5868._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_5868 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (161)) ;
      }
    }
    if (((var_cas_leftResult)._operator_isEqual (var_cas_rightResult)).isBuiltAndTrue ()) {
      var_cas_outResult = GGS_sint (true, 1L) ;
    }else{
      var_cas_outResult = GGS_sint (true, 0L) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//               Category method '@immediatNotEqualTest.eval'                *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatNotEqualTest__eval (C_Compiler & _inLexique,
                                const cPtr_immediatNotEqualTest * operand_6136,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6136 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_6235 = operand_6136->mLeftExpression ;
    if (_temp_6235._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_6235._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_6235 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (175)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_6312 = operand_6136->mRightExpression ;
    if (_temp_6312._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_6312._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_6312 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (176)) ;
      }
    }
    if (((var_cas_leftResult)._operator_isNotEqual (var_cas_rightResult)).isBuiltAndTrue ()) {
      var_cas_outResult = GGS_sint (true, 1L) ;
    }else{
      var_cas_outResult = GGS_sint (true, 0L) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@immediatGreaterOrEqualTest.eval'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatGreaterOrEqualTest__eval (C_Compiler & _inLexique,
                                const cPtr_immediatGreaterOrEqualTest * operand_6586,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6586 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_6685 = operand_6586->mLeftExpression ;
    if (_temp_6685._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_6685._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_6685 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (190)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_6762 = operand_6586->mRightExpression ;
    if (_temp_6762._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_6762._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_6762 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (191)) ;
      }
    }
    if (((var_cas_leftResult)._operator_supOrEqual (var_cas_rightResult)).isBuiltAndTrue ()) {
      var_cas_outResult = GGS_sint (true, 1L) ;
    }else{
      var_cas_outResult = GGS_sint (true, 0L) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category method '@immediatLowerOrEqualTest.eval'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatLowerOrEqualTest__eval (C_Compiler & _inLexique,
                                const cPtr_immediatLowerOrEqualTest * operand_7034,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7034 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_7133 = operand_7034->mLeftExpression ;
    if (_temp_7133._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_7133._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_7133 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (205)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_7210 = operand_7034->mRightExpression ;
    if (_temp_7210._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_7210._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_7210 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (206)) ;
      }
    }
    if (((var_cas_leftResult)._operator_infOrEqual (var_cas_rightResult)).isBuiltAndTrue ()) {
      var_cas_outResult = GGS_sint (true, 1L) ;
    }else{
      var_cas_outResult = GGS_sint (true, 0L) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//               Category method '@immediatGreaterTest.eval'                 *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatGreaterTest__eval (C_Compiler & _inLexique,
                                const cPtr_immediatGreaterTest * operand_7477,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7477 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_7576 = operand_7477->mLeftExpression ;
    if (_temp_7576._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_7576._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_7576 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (220)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_7653 = operand_7477->mRightExpression ;
    if (_temp_7653._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_7653._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_7653 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (221)) ;
      }
    }
    if (((var_cas_leftResult)._operator_strictSup (var_cas_rightResult)).isBuiltAndTrue ()) {
      var_cas_outResult = GGS_sint (true, 1L) ;
    }else{
      var_cas_outResult = GGS_sint (true, 0L) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Category method '@immediatLowerTest.eval'                  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatLowerTest__eval (C_Compiler & _inLexique,
                                const cPtr_immediatLowerTest * operand_7917,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7917 != NULL) {
    GGS_sint  var_cas_leftResult ;
    const GGS_immediatExpression  _temp_8016 = operand_7917->mLeftExpression ;
    if (_temp_8016._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_8016._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_8016 (HERE), var_cas_inRegisterTable, var_cas_leftResult COMMA_SOURCE_FILE_AT_LINE (235)) ;
      }
    }
    GGS_sint  var_cas_rightResult ;
    const GGS_immediatExpression  _temp_8093 = operand_7917->mRightExpression ;
    if (_temp_8093._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_8093._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_8093 (HERE), var_cas_inRegisterTable, var_cas_rightResult COMMA_SOURCE_FILE_AT_LINE (236)) ;
      }
    }
    if (((var_cas_leftResult)._operator_strictInf (var_cas_rightResult)).isBuiltAndTrue ()) {
      var_cas_outResult = GGS_sint (true, 1L) ;
    }else{
      var_cas_outResult = GGS_sint (true, 0L) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                  Category method '@immediatNegate.eval'                   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatNegate__eval (C_Compiler & _inLexique,
                                const cPtr_immediatNegate * operand_8354,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8354 != NULL) {
    GGS_sint  var_cas_result ;
    const GGS_immediatExpression  _temp_8445 = operand_8354->mExpression ;
    if (_temp_8445._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_8445._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_8445 (HERE), var_cas_inRegisterTable, var_cas_result COMMA_SOURCE_FILE_AT_LINE (250)) ;
      }
    }
    var_cas_outResult = var_cas_result._operator_unary_minus (_inLexique COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Category method '@immediatComplement.eval'                 *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatComplement__eval (C_Compiler & _inLexique,
                                const cPtr_immediatComplement * operand_8634,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8634 != NULL) {
    GGS_sint  var_cas_result ;
    const GGS_immediatExpression  _temp_8725 = operand_8634->mExpression ;
    if (_temp_8725._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_8725._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_8725 (HERE), var_cas_inRegisterTable, var_cas_result COMMA_SOURCE_FILE_AT_LINE (260)) ;
      }
    }
    var_cas_outResult = (var_cas_result)._operator_tilde () ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                  Category method '@immediatSlice.eval'                    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__immediatSlice__eval (C_Compiler & _inLexique,
                                const cPtr_immediatSlice * operand_8909,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_sint  & var_cas_outResult
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8909 != NULL) {
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    var_cas_outResult = GGS_sint (true, 0L) ;
    GGS_uintlist  automatic_var_2 ;
    GGS_uint  automatic_var_3 ;
    GGS_string automatic_var_4 ;
    const GGS_registerTable  _temp_9047 = var_cas_inRegisterTable ;
    if (_temp_9047._isBuilt ()) {
      _temp_9047 (HERE)->method_searchKey (_inLexique, operand_8909->mRegisterName, automatic_var_2, automatic_var_3, var_cas_bitSliceTable, automatic_var_4 COMMA_SOURCE_FILE_AT_LINE (272)) ;
    }
    GGS_stringset  var_cas_sliceNameSet ;
    var_cas_sliceNameSet = GGS_stringset ::constructor_emptySet () ;
    {
      GGS_immediatSliceExpressionList::cEnumerator enumerator_9160 (operand_8909->mSliceExpressionList, true) ;
      const GGS_immediatSliceExpressionList::cElement * operand_9160 = NULL ;
      while (((operand_9160 = enumerator_9160.nextObject ()))) {
        macroValidPointer (operand_9160) ;
        if ((var_cas_sliceNameSet.reader_hasKey (_inLexique, operand_9160->mSliceName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (275)) COMMA_SOURCE_FILE_AT_LINE (275))).isBuiltAndTrue ()) {
          operand_9160->mSliceName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '"))._operator_concat (operand_9160->mSliceName))._operator_concat (GGS_string (true, "' bit field has been already defined")) COMMA_SOURCE_FILE_AT_LINE (277)) ;
        }else{
          var_cas_sliceNameSet._addAssign_operation (operand_9160->mSliceName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (278))) ;
          GGS_uint  var_cas_sliceIndex ;
          GGS_uint  var_cas_sliceSize ;
          const GGS_bitSliceTable  _temp_9439 = var_cas_bitSliceTable ;
          if (_temp_9439._isBuilt ()) {
            _temp_9439 (HERE)->method_searchKey (_inLexique, operand_9160->mSliceName, var_cas_sliceIndex, var_cas_sliceSize COMMA_SOURCE_FILE_AT_LINE (281)) ;
          }
          GGS_sint  var_cas_result ;
          const GGS_immediatExpression  _temp_9516 = operand_9160->mExpression ;
          if (_temp_9516._isBuilt ()) {
            typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_9516._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_9516 (HERE), var_cas_inRegisterTable, var_cas_result COMMA_SOURCE_FILE_AT_LINE (282)) ;
            }
          }
          if ((((var_cas_result)._operator_strictInf (GGS_sint (true, 0L)))._operator_or ((var_cas_result)._operator_strictSup (GGS_sint (true, 1L)._left_shift_operation (_inLexique, var_cas_sliceSize COMMA_SOURCE_FILE_AT_LINE (283))._substract_operation (_inLexique, GGS_sint (true, 1L) COMMA_SOURCE_FILE_AT_LINE (283))))).isBuiltAndTrue ()) {
            operand_9160->mSliceName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((GGS_string (true, "invalid immediat value associated to the '"))._operator_concat (operand_9160->mSliceName))._operator_concat (GGS_string (true, "' bit field, evaluated as ")))._operator_concat (var_cas_result.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (284))))._operator_concat (GGS_string (true, " (should be between 0 and ")))._operator_concat (GGS_uint (true, 1U)._left_shift_operation (_inLexique, var_cas_sliceSize COMMA_SOURCE_FILE_AT_LINE (285))._substract_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (285)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (285))))._operator_concat (GGS_string (true, ")")) COMMA_SOURCE_FILE_AT_LINE (286)) ;
          }
          var_cas_outResult = (var_cas_outResult)._operator_or (var_cas_result._left_shift_operation (_inLexique, var_cas_sliceIndex COMMA_SOURCE_FILE_AT_LINE (287))) ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Virtual Table for category method '@bitNumberExpression.getBitNumber'    *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__bitNumberExpression__getBitNumber> gDispatchTableFor__bitNumberExpression__getBitNumber ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__bitNumberExpression__getBitNumber (typeCategoryMethod__bitNumberExpression__getBitNumber inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__bitNumberExpression__getBitNumber.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__bitNumberExpression__getBitNumber
findCategoryMethod__bitNumberExpression__getBitNumber (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__bitNumberExpression__getBitNumber result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__bitNumberExpression__getBitNumber.count ()) {
    result = gDispatchTableFor__bitNumberExpression__getBitNumber (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__bitNumberExpression__getBitNumber (superClassPtr) ;
      gDispatchTableFor__bitNumberExpression__getBitNumber.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@bitNumberLiteralValue.getBitNumber'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__bitNumberLiteralValue__getBitNumber (C_Compiler & _inLexique,
                                const cPtr_bitNumberLiteralValue * operand_10575,
                                const GGS_bitSliceTable   /* var_cas_inBitSliceTable */,
                                GGS_uint  & var_cas_outBitNumber
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10575 != NULL) {
    if (((operand_10575->mBitNumberLiteralValue.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (309)))._operator_strictSup (GGS_uint (true, 7U))).isBuiltAndTrue ()) {
      operand_10575->mBitNumberLiteralValue.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "The bit number is "))._operator_concat (operand_10575->mBitNumberLiteralValue.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (310)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (310))))._operator_concat (GGS_string (true, " (should be <= 7)")) COMMA_SOURCE_FILE_AT_LINE (311)) ;
    }
    var_cas_outBitNumber = operand_10575->mBitNumberLiteralValue.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (312)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@bitNumberLabelValue.getBitNumber'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__bitNumberLabelValue__getBitNumber (C_Compiler & _inLexique,
                                const cPtr_bitNumberLabelValue * operand_11009,
                                const GGS_bitSliceTable   var_cas_inBitSliceTable,
                                GGS_uint  & var_cas_outBitNumber
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11009 != NULL) {
    GGS_uint  var_cas_sliceIndex ;
    GGS_uint  var_cas_sliceSize ;
    const GGS_bitSliceTable  _temp_11138 = var_cas_inBitSliceTable ;
    if (_temp_11138._isBuilt ()) {
      _temp_11138 (HERE)->method_searchKey (_inLexique, operand_11009->mBitNumberLabelValue, var_cas_sliceIndex, var_cas_sliceSize COMMA_SOURCE_FILE_AT_LINE (323)) ;
    }
    if (((operand_11009->mBitNumberIndexValue.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (324)))._operator_strictSup (var_cas_sliceSize)).isBuiltAndTrue ()) {
      operand_11009->mBitNumberIndexValue.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "The "))._operator_concat (operand_11009->mBitNumberIndexValue.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (325)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (325))))._operator_concat (GGS_string (true, " index is too large (should be < ")))._operator_concat (var_cas_sliceSize.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (326))))._operator_concat (GGS_string (true, ")")) COMMA_SOURCE_FILE_AT_LINE (327)) ;
    }
    var_cas_outBitNumber = var_cas_sliceIndex._add_operation (_inLexique, operand_11009->mBitNumberIndexValue.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (328)) COMMA_SOURCE_FILE_AT_LINE (328)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@registerExpression.resolveAccess'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__registerExpression__resolveAccess (C_Compiler & _inLexique,
                                const cPtr_registerExpression * operand_11569,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_ipic_registerExpression & var_cas_outIPICregisterDescription,
                                GGS_bitSliceTable  & var_cas_outBitSliceTable
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11569 != NULL) {
    GGS_string var_cas_assemblyString ;
    var_cas_assemblyString = operand_11569->mRegisterName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (340)) ;
    if (((operand_11569->mOffset.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (341)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
      var_cas_assemblyString.writeString (" + ") ;
      var_cas_assemblyString._dotAssign_operation (operand_11569->mOffset.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (342)).reader_hexString (_inLexique COMMA_SOURCE_FILE_AT_LINE (342))) ;
    }
    GGS_uintlist  var_cas_registerAddressList ;
    GGS_uint  var_cas_size ;
    GGS_uint  var_cas_registerAddress ;
    var_cas_registerAddress = GGS_uint (true, 0U) ;
    GGS_string automatic_var_5 ;
    const GGS_registerTable  _temp_12024 = var_cas_inRegisterTable ;
    if (_temp_12024._isBuilt ()) {
      _temp_12024 (HERE)->method_searchKey (_inLexique, operand_11569->mRegisterName, var_cas_registerAddressList, var_cas_size, var_cas_outBitSliceTable, automatic_var_5 COMMA_SOURCE_FILE_AT_LINE (348)) ;
    }
    GGS_bool var_cas_found ;
    var_cas_found = GGS_bool (true, false) ;
    {
      GGS_uintlist::cEnumerator enumerator_12145 (var_cas_registerAddressList, true) ;
      const GGS_uintlist::cElement * operand_12145 = NULL ;
      while (((operand_12145 = enumerator_12145.nextObject ()))
          && ((var_cas_found)._operator_not ().isBuiltAndTrue ())) {
        macroValidPointer (operand_12145) ;
        var_cas_found = ((operand_12145->mValue)._operator_strictInf (var_cas_inAccessBankSplitOffset))._operator_or ((operand_12145->mValue)._operator_supOrEqual (GGS_uint (true, 3840U)._add_operation (_inLexique, var_cas_inAccessBankSplitOffset COMMA_SOURCE_FILE_AT_LINE (351)))) ;
        var_cas_registerAddress = operand_12145->mValue ;
      }
    }
    GGS_bool var_cas_needsBSRaccess ;
    var_cas_needsBSRaccess = GGS_bool (true, false) ;
    if (((var_cas_found)._operator_not ()).isBuiltAndTrue ()) {
      var_cas_needsBSRaccess = GGS_bool (true, true) ;
      const GGS_uintlist  _temp_12425 = var_cas_registerAddressList ;
      if (_temp_12425._isBuilt ()) {
        _temp_12425 (HERE)->method_first (_inLexique, var_cas_registerAddress COMMA_SOURCE_FILE_AT_LINE (357)) ;
      }
    }
    var_cas_outIPICregisterDescription = GGS_ipic_registerExpression::constructor_new (var_cas_assemblyString, var_cas_registerAddress._add_operation (_inLexique, operand_11569->mOffset.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (362)) COMMA_SOURCE_FILE_AT_LINE (362)), var_cas_needsBSRaccess) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Virtual Table for category method '@registerExpression.resolveAccess'    *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__registerExpression__resolveAccess> gDispatchTableFor__registerExpression__resolveAccess ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__registerExpression__resolveAccess (typeCategoryMethod__registerExpression__resolveAccess inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__registerExpression__resolveAccess.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__registerExpression__resolveAccess
findCategoryMethod__registerExpression__resolveAccess (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__registerExpression__resolveAccess result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__registerExpression__resolveAccess.count ()) {
    result = gDispatchTableFor__registerExpression__resolveAccess (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__registerExpression__resolveAccess (superClassPtr) ;
      gDispatchTableFor__registerExpression__resolveAccess.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@piccolo_instruction.buildIPICinstructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__piccolo_instruction__buildIPICinstructionList> gDispatchTableFor__piccolo_instruction__buildIPICinstructionList ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__piccolo_instruction__buildIPICinstructionList (typeCategoryMethod__piccolo_instruction__buildIPICinstructionList inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__piccolo_instruction__buildIPICinstructionList.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__piccolo_instruction__buildIPICinstructionList
findCategoryMethod__piccolo_instruction__buildIPICinstructionList (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__piccolo_instruction__buildIPICinstructionList result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__piccolo_instruction__buildIPICinstructionList.count ()) {
    result = gDispatchTableFor__piccolo_instruction__buildIPICinstructionList (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (superClassPtr) ;
      gDispatchTableFor__piccolo_instruction__buildIPICinstructionList.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@instruction_nobanksel.buildIPICinstructionList'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_nobanksel__buildIPICinstructionList (C_Compiler &,
                                const cPtr_instruction_nobanksel * operand_13188,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & /* var_cas_ioGeneratedInstructionList */,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13188 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_savebank.buildIPICinstructionList'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_savebank__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_savebank * operand_13562,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13562 != NULL) {
    GGS_registerExpression  var_cas_BSRregister ;
    var_cas_BSRregister = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "BSR"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_ipic_registerExpression var_cas_BSR_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_6 ;
    const GGS_registerExpression  _temp_13958 = var_cas_BSRregister ;
    if (_temp_13958._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_13958._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_13958 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_BSR_IPICregisterDescription, automatic_var_6 COMMA_SOURCE_FILE_AT_LINE (403)) ;
      }
    }
    GGS_ipic_registerExpression var_cas_save_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_7 ;
    const GGS_registerExpression  _temp_14184 = operand_13562->mRegister ;
    if (_temp_14184._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_14184._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_14184 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_save_IPICregisterDescription, automatic_var_7 COMMA_SOURCE_FILE_AT_LINE (411)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_MOVFF ::constructor_new (_inLexique, operand_13562->mInstructionLocation, var_cas_BSR_IPICregisterDescription, var_cas_save_IPICregisterDescription COMMA_HERE)) ;
    {
      GGS_instructionList::cEnumerator enumerator_14553 (operand_13562->mInstructionList, true) ;
      const GGS_instructionList::cElement * operand_14553 = NULL ;
      while (((operand_14553 = enumerator_14553.nextObject ()))) {
        macroValidPointer (operand_14553) ;
        const GGS_piccolo_instruction  _temp_14599 = operand_14553->mInstruction ;
        if (_temp_14599._isBuilt ()) {
          typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_14599._galgasObjectRunTimeInfo ()) ;
          if (_method != NULL) {
            _method (_inLexique, _temp_14599 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (425)) ;
          }
        }
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_MOVFF ::constructor_new (_inLexique, operand_13562->mInstructionLocation, var_cas_save_IPICregisterDescription, var_cas_BSR_IPICregisterDescription COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_banksel.buildIPICinstructionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_banksel__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_banksel * operand_15076,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_15076 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_MOVLB ::constructor_new (_inLexique, operand_15076->mInstructionLocation, operand_15076->mBankIndex COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_FDA.buildIPICinstructionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_FDA__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_FDA * operand_15514,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_15514 != NULL) {
    GGS_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_8 ;
    const GGS_registerExpression  _temp_15801 = operand_15514->mRegisterExpression ;
    if (_temp_15801._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_15801._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_15801 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_8 COMMA_SOURCE_FILE_AT_LINE (457)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, operand_15514->mInstructionLocation, operand_15514->mInstruction_FDA_base_code, var_cas_IPICregisterDescription, operand_15514->m_W_isDestination COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@instruction_FA.buildIPICinstructionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_FA__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_FA * operand_16196,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16196 != NULL) {
    GGS_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_9 ;
    const GGS_registerExpression  _temp_16483 = operand_16196->mRegisterExpression ;
    if (_temp_16483._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_16483._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_16483 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_9 COMMA_SOURCE_FILE_AT_LINE (481)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FA ::constructor_new (_inLexique, operand_16196->mInstructionLocation, operand_16196->mFAinstruction, var_cas_IPICregisterDescription COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_MOVFF.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_MOVFF__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_MOVFF * operand_16845,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16845 != NULL) {
    GGS_ipic_registerExpression var_cas_sourceIPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_10 ;
    const GGS_registerExpression  _temp_17138 = operand_16845->mSourceRegisterName ;
    if (_temp_17138._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_17138._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_17138 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_sourceIPICregisterDescription, automatic_var_10 COMMA_SOURCE_FILE_AT_LINE (504)) ;
      }
    }
    GGS_ipic_registerExpression var_cas_destinationIPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_11 ;
    const GGS_registerExpression  _temp_17342 = operand_16845->mDestinationRegisterName ;
    if (_temp_17342._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_17342._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_17342 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_destinationIPICregisterDescription, automatic_var_11 COMMA_SOURCE_FILE_AT_LINE (511)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_MOVFF ::constructor_new (_inLexique, operand_16845->mInstructionLocation, var_cas_sourceIPICregisterDescription, var_cas_destinationIPICregisterDescription COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_FBA.buildIPICinstructionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_FBA__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_FBA * operand_17742,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17742 != NULL) {
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    GGS_ipic_registerExpression var_cas_IPICregisterDescription ;
    const GGS_registerExpression  _temp_18062 = operand_17742->mRegisterExpression ;
    if (_temp_18062._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_18062._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_18062 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (535)) ;
      }
    }
    GGS_uint  var_cas_bitNumber ;
    const GGS_bitNumberExpression  _temp_18213 = operand_17742->mBitNumber ;
    if (_temp_18213._isBuilt ()) {
      typeCategoryMethod__bitNumberExpression__getBitNumber _method = findCategoryMethod__bitNumberExpression__getBitNumber (_temp_18213._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_18213 (HERE), var_cas_bitSliceTable, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (542)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FBA ::constructor_new (_inLexique, operand_17742->mInstructionLocation, operand_17742->mBitOrientedOp, var_cas_IPICregisterDescription, var_cas_bitNumber COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_JSR.buildIPICinstructionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_JSR__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_JSR * operand_18537,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18537 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_JSR ::constructor_new (_inLexique, operand_18537->mInstructionLocation, operand_18537->mTargetLabel, operand_18537->mKind COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_JUMP.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_JUMP__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_JUMP * operand_18986,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18986 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_JUMP ::constructor_new (_inLexique, operand_18986->mInstructionLocation, operand_18986->mTargetLabel, operand_18986->mKind COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_JUMPCC.buildIPICinstructionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_JUMPCC__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_JUMPCC * operand_19438,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19438 != NULL) {
    GGS_condionalBranchMode var_cas_mode ;
    if ((operand_19438->mIsBcc).isBuiltAndTrue ()) {
      var_cas_mode = GGS_condionalBranchMode::constructor_native (_inLexique COMMA_HERE) ;
    }else{
      var_cas_mode = GGS_condionalBranchMode::constructor_native (_inLexique COMMA_HERE) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_conditionalBranch ::constructor_new (_inLexique, operand_19438->mInstructionLocation, var_cas_mode, operand_19438->mConditionalBranch, operand_19438->mTargetLabel COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_CLRWDT.buildIPICinstructionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_CLRWDT__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_CLRWDT * operand_20091,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20091 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_CLRWDT ::constructor_new (_inLexique, operand_20091->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_DAW.buildIPICinstructionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_DAW__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_DAW * operand_20525,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20525 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_DAW ::constructor_new (_inLexique, operand_20525->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_NOP.buildIPICinstructionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_NOP__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_NOP * operand_20956,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20956 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_NOP ::constructor_new (_inLexique, operand_20956->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_POP.buildIPICinstructionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_POP__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_POP * operand_21387,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21387 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_POP ::constructor_new (_inLexique, operand_21387->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_PUSH.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_PUSH__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_PUSH * operand_21819,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21819 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_PUSH ::constructor_new (_inLexique, operand_21819->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_RESET.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_RESET__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_RESET * operand_22253,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22253 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RESET ::constructor_new (_inLexique, operand_22253->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_SLEEP.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_SLEEP__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_SLEEP * operand_22688,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22688 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_SLEEP ::constructor_new (_inLexique, operand_22688->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@instruction_literalOperation.buildIPICinstructionList'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_literalOperation__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_literalOperation * operand_23134,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23134 != NULL) {
    GGS_sint  var_cas_result ;
    const GGS_immediatExpression  _temp_23381 = operand_23134->mImmediatExpression ;
    if (_temp_23381._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_23381._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_23381 (HERE), var_cas_inRegisterTable, var_cas_result COMMA_SOURCE_FILE_AT_LINE (716)) ;
      }
    }
    if ((((var_cas_result)._operator_strictSup (GGS_sint (true, 255L)))._operator_or ((var_cas_result)._operator_strictInf (GGS_sint (true, 128L)._operator_unary_minus (_inLexique COMMA_HERE)))).isBuiltAndTrue ()) {
      operand_23134->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "immediate value is evaluated as "))._operator_concat (var_cas_result.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (719))))._operator_concat (GGS_string (true, " (should be betwween -128 and 255)")) COMMA_SOURCE_FILE_AT_LINE (720)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_literalOperation ::constructor_new (_inLexique, operand_23134->mInstructionLocation, operand_23134->mLiteralInstruction, (var_cas_result)._operator_and (GGS_sint (true, 255L)).reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (725)) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_LFSR.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_LFSR__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_LFSR * operand_23897,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23897 != NULL) {
    GGS_sint  var_cas_result ;
    const GGS_immediatExpression  _temp_24144 = operand_23897->mImmediatExpression ;
    if (_temp_24144._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_24144._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_24144 (HERE), var_cas_inRegisterTable, var_cas_result COMMA_SOURCE_FILE_AT_LINE (738)) ;
      }
    }
    if ((((var_cas_result)._operator_strictSup (GGS_sint (true, 4095L)))._operator_or ((var_cas_result)._operator_strictInf (GGS_sint (true, 0L)))).isBuiltAndTrue ()) {
      operand_23897->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "immediate value is evaluated as "))._operator_concat (var_cas_result.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (741))))._operator_concat (GGS_string (true, " (should be between 0 and 4095)")) COMMA_SOURCE_FILE_AT_LINE (742)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_LFSR ::constructor_new (_inLexique, operand_23897->mInstructionLocation, operand_23897->mFSRindex, var_cas_result.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (746)) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_TBLRD.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_TBLRD__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_TBLRD * operand_24614,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24614 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_TBLRD ::constructor_new (_inLexique, operand_24614->mInstructionLocation, operand_24614->mOption COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_TBLWT.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_TBLWT__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_TBLWT * operand_25062,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25062 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_TBLWT ::constructor_new (_inLexique, operand_25062->mInstructionLocation, operand_25062->mOption COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@instruction_computed_retlw.buildIPICinstructionList'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_computed_retlw__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_computed_retlw * operand_25519,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25519 != NULL) {
    GGS_sint  var_cas_size ;
    const GGS_immediatExpression  _temp_25760 = operand_25519->mSizeExpression ;
    if (_temp_25760._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_25760._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_25760 (HERE), var_cas_inRegisterTable, var_cas_size COMMA_SOURCE_FILE_AT_LINE (789)) ;
      }
    }
    if (((var_cas_size)._operator_strictInf (GGS_sint (true, 2L))).isBuiltAndTrue ()) {
      operand_25519->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the computed range ("))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (791))))._operator_concat (GGS_string (true, ") should be greater or equal to 2")) COMMA_SOURCE_FILE_AT_LINE (792)) ;
    }else if (((var_cas_size)._operator_strictSup (GGS_sint (true, 128L))).isBuiltAndTrue ()) {
      operand_25519->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the computed range ("))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (793))))._operator_concat (GGS_string (true, ") should be lower or equal to 128")) COMMA_SOURCE_FILE_AT_LINE (794)) ;
    }else if (((var_cas_size.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (794)))._operator_isNotEqual (operand_25519->mImmediateExpressionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (794)))).isBuiltAndTrue ()) {
      operand_25519->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the constant list length ("))._operator_concat (operand_25519->mImmediateExpressionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (795)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (795))))._operator_concat (GGS_string (true, ") should be equal to the computed range (")))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (795))))._operator_concat (GGS_string (true, ")")) COMMA_SOURCE_FILE_AT_LINE (796)) ;
    }
    GGS_uintlist  var_cas_literalValues ;
    var_cas_literalValues = GGS_uintlist ::constructor_emptyList () ;
    {
        GGS_uint var_cas_idx (true, 0) ;
      GGS_immediatExpressionList::cEnumerator enumerator_26380 (operand_25519->mImmediateExpressionList, true) ;
      const GGS_immediatExpressionList::cElement * operand_26380 = NULL ;
      while (((operand_26380 = enumerator_26380.nextObject ()))) {
        macroValidPointer (operand_26380) ;
        GGS_sint  var_cas_v ;
        const GGS_immediatExpression  _temp_26420 = operand_26380->mExpression ;
        if (_temp_26420._isBuilt ()) {
          typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_26420._galgasObjectRunTimeInfo ()) ;
          if (_method != NULL) {
            _method (_inLexique, _temp_26420 (HERE), var_cas_inRegisterTable, var_cas_v COMMA_SOURCE_FILE_AT_LINE (800)) ;
          }
        }
        if ((((var_cas_v)._operator_strictSup (GGS_sint (true, 255L)))._operator_or ((var_cas_v)._operator_strictInf (GGS_sint (true, 128L)._operator_unary_minus (_inLexique COMMA_HERE)))).isBuiltAndTrue ()) {
          operand_25519->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "immediate value with index "))._operator_concat (var_cas_idx.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (802))))._operator_concat (GGS_string (true, " is evaluated as ")))._operator_concat (var_cas_v.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (802))))._operator_concat (GGS_string (true, " (should be <= 255)")) COMMA_SOURCE_FILE_AT_LINE (803)) ;
        }
        var_cas_literalValues._addAssign_operation ((var_cas_v)._operator_and (GGS_sint (true, 255L)).reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (804))) ;
        var_cas_idx.mValue ++ ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_computed_retlw ::constructor_new (_inLexique, operand_25519->mInstructionLocation, var_cas_literalValues, operand_25519->mUsesRelativeCall COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_MNOP.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_MNOP__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_MNOP * operand_26974,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26974 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_MNOP ::constructor_new (_inLexique, operand_26974->mInstructionLocation, operand_26974->mOccurrenceFactor COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@instruction_computed_bra.buildIPICinstructionList'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_computed_bra__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_computed_bra * operand_27438,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_27438 != NULL) {
    GGS_sint  var_cas_size ;
    const GGS_immediatExpression  _temp_27679 = operand_27438->mSizeExpression ;
    if (_temp_27679._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_27679._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_27679 (HERE), var_cas_inRegisterTable, var_cas_size COMMA_SOURCE_FILE_AT_LINE (838)) ;
      }
    }
    if (((var_cas_size)._operator_strictInf (GGS_sint (true, 2L))).isBuiltAndTrue ()) {
      operand_27438->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the computed range ("))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (840))))._operator_concat (GGS_string (true, ") should be greater or equal to 2")) COMMA_SOURCE_FILE_AT_LINE (841)) ;
    }else if (((var_cas_size)._operator_strictSup (GGS_sint (true, 128L))).isBuiltAndTrue ()) {
      operand_27438->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the computed range ("))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (842))))._operator_concat (GGS_string (true, ") should be lower or equal to 128")) COMMA_SOURCE_FILE_AT_LINE (843)) ;
    }else if (((var_cas_size.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (843)))._operator_isNotEqual (operand_27438->mTargetLabels.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (843)))).isBuiltAndTrue ()) {
      operand_27438->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the routine name list length ("))._operator_concat (operand_27438->mTargetLabels.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (844)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (844))))._operator_concat (GGS_string (true, ") should be equal to the computed range (")))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (844))))._operator_concat (GGS_string (true, ")")) COMMA_SOURCE_FILE_AT_LINE (845)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_computed_bra ::constructor_new (_inLexique, operand_27438->mInstructionLocation, operand_27438->mTargetLabels, operand_27438->mUsesRelativeCall COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@instruction_computed_goto.buildIPICinstructionList'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_computed_goto__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_computed_goto * operand_28486,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_28486 != NULL) {
    GGS_sint  var_cas_size ;
    const GGS_immediatExpression  _temp_28727 = operand_28486->mSizeExpression ;
    if (_temp_28727._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_28727._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_28727 (HERE), var_cas_inRegisterTable, var_cas_size COMMA_SOURCE_FILE_AT_LINE (863)) ;
      }
    }
    if (((var_cas_size)._operator_strictInf (GGS_sint (true, 2L))).isBuiltAndTrue ()) {
      operand_28486->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the computed range ("))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (865))))._operator_concat (GGS_string (true, ") should be greater or equal to 2")) COMMA_SOURCE_FILE_AT_LINE (866)) ;
    }else if (((var_cas_size)._operator_strictSup (GGS_sint (true, 64L))).isBuiltAndTrue ()) {
      operand_28486->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the computed range ("))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (867))))._operator_concat (GGS_string (true, ") should be lower or equal to 64")) COMMA_SOURCE_FILE_AT_LINE (868)) ;
    }else if (((var_cas_size.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (868)))._operator_isNotEqual (operand_28486->mTargetLabels.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (868)))).isBuiltAndTrue ()) {
      operand_28486->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the routine name list length ("))._operator_concat (operand_28486->mTargetLabels.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (869)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (869))))._operator_concat (GGS_string (true, ") should be equal to the computed range (")))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (869))))._operator_concat (GGS_string (true, ")")) COMMA_SOURCE_FILE_AT_LINE (870)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_computed_goto ::constructor_new (_inLexique, operand_28486->mInstructionLocation, operand_28486->mTargetLabels, operand_28486->mUsesRelativeCall COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_FOREVER.buildIPICinstructionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_FOREVER__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_FOREVER * operand_29527,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_29527 != NULL) {
    GGS_string var_cas_label0 ;
    var_cas_label0 = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (888))) ;
    var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (889)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, operand_29527->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    {
      GGS_instructionList::cEnumerator enumerator_29930 (operand_29527->mInstructionList, true) ;
      const GGS_instructionList::cElement * operand_29930 = NULL ;
      while (((operand_29930 = enumerator_29930.nextObject ()))) {
        macroValidPointer (operand_29930) ;
        const GGS_piccolo_instruction  _temp_29976 = operand_29930->mInstruction ;
        if (_temp_29976._isBuilt ()) {
          typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_29976._galgasObjectRunTimeInfo ()) ;
          if (_method != NULL) {
            _method (_inLexique, _temp_29976 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (892)) ;
          }
        }
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_JUMP ::constructor_new (_inLexique, operand_29527->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, operand_29527->mInstructionLocation COMMA_HERE), GGS_jumpInstructionKind::constructor_ipicRelative (_inLexique COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@instruction_IF_FA_SEMI_COLON.buildIPICinstructionList'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_IF_FA_SEMI_COLON__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_IF_FA_SEMI_COLON * operand_30405,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_30405 != NULL) {
    GGS_FA_instruction_base_code var_cas_baseCode ;
    switch (operand_30405->mOpCode.enumValue ()) {
    case GGS_if_semi_colon_op::enum_CPFSEQ:
      {
      var_cas_baseCode = GGS_FA_instruction_base_code::constructor_CPFSEQ (_inLexique COMMA_HERE) ;
      }
      break ;
    case GGS_if_semi_colon_op::enum_CPFSGT:
      {
      var_cas_baseCode = GGS_FA_instruction_base_code::constructor_CPFSGT (_inLexique COMMA_HERE) ;
      }
      break ;
    case GGS_if_semi_colon_op::enum_CPFSLT:
      {
      var_cas_baseCode = GGS_FA_instruction_base_code::constructor_CPFSLT (_inLexique COMMA_HERE) ;
      }
      break ;
    case GGS_if_semi_colon_op::enum_TSTFSZ:
      {
      var_cas_baseCode = GGS_FA_instruction_base_code::constructor_TSTFSZ (_inLexique COMMA_HERE) ;
      }
      break ;
    case GGS_if_semi_colon_op::kNotBuilt:
      break ;
    }
    GGS_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_12 ;
    const GGS_registerExpression  _temp_31017 = operand_30405->mRegisterExpression ;
    if (_temp_31017._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_31017._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_31017 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_12 COMMA_SOURCE_FILE_AT_LINE (914)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FA ::constructor_new (_inLexique, operand_30405->mInstructionLocation, var_cas_baseCode, var_cas_IPICregisterDescription COMMA_HERE)) ;
    const GGS_piccolo_instruction  _temp_31308 = operand_30405->mInstruction ;
    if (_temp_31308._isBuilt ()) {
      typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_31308._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_31308 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (926)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@instruction_IF_BitTest.buildIPICinstructionList'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_IF_BitTest__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_IF_BitTest * operand_31558,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_31558 != NULL) {
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    GGS_ipic_registerExpression var_cas_IPICregisterDescription ;
    const GGS_registerExpression  _temp_31864 = operand_31558->mRegisterExpression ;
    if (_temp_31864._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_31864._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_31864 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (940)) ;
      }
    }
    GGS_uint  var_cas_bitNumber ;
    const GGS_bitNumberExpression  _temp_32015 = operand_31558->mBitNumber ;
    if (_temp_32015._isBuilt ()) {
      typeCategoryMethod__bitNumberExpression__getBitNumber _method = findCategoryMethod__bitNumberExpression__getBitNumber (_temp_32015._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_32015 (HERE), var_cas_bitSliceTable, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (947)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_BitTestSkip ::constructor_new (_inLexique, operand_31558->mInstructionLocation, operand_31558->mSkipIfSet, var_cas_IPICregisterDescription, var_cas_bitNumber COMMA_HERE)) ;
    const GGS_piccolo_instruction  _temp_32280 = operand_31558->mInstruction ;
    if (_temp_32280._isBuilt ()) {
      typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_32280._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_32280 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (958)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@conditionExpression.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition> gDispatchTableFor__conditionExpression__buildIPICinstructionForCondition ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition (typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__conditionExpression__buildIPICinstructionForCondition.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition
findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__conditionExpression__buildIPICinstructionForCondition.count ()) {
    result = gDispatchTableFor__conditionExpression__buildIPICinstructionForCondition (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (superClassPtr) ;
      gDispatchTableFor__conditionExpression__buildIPICinstructionForCondition.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@conditionExpression.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__conditionExpression__computeInstructionCountForCondition> gDispatchTableFor__conditionExpression__computeInstructionCountForCondition ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__conditionExpression__computeInstructionCountForCondition (typeCategoryMethod__conditionExpression__computeInstructionCountForCondition inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__conditionExpression__computeInstructionCountForCondition.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__conditionExpression__computeInstructionCountForCondition
findCategoryMethod__conditionExpression__computeInstructionCountForCondition (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__conditionExpression__computeInstructionCountForCondition result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__conditionExpression__computeInstructionCountForCondition.count ()) {
    result = gDispatchTableFor__conditionExpression__computeInstructionCountForCondition (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__conditionExpression__computeInstructionCountForCondition (superClassPtr) ;
      gDispatchTableFor__conditionExpression__computeInstructionCountForCondition.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@bcc_in_structured_if_condition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__bcc_in_structured_if_condition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_bcc_in_structured_if_condition * operand_33150,
                                const GGS_uint   /* var_cas_inAccessBankSplitOffset */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_33150 != NULL) {
    GGS_conditional_branch var_cas_condition ;
    if ((var_cas_inComplementaryBranch).isBuiltAndTrue ()) {
      ::routine_getComplementaryBcc (_inLexique,  operand_33150->mCondition,  var_cas_condition COMMA_SOURCE_FILE_AT_LINE (995)) ;
    }else{
      var_cas_condition = operand_33150->mCondition ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_conditionalBranch ::constructor_new (_inLexique, var_cas_inInstructionLocation, GGS_condionalBranchMode::constructor_native (_inLexique COMMA_HERE), var_cas_condition, GGS_lstring ::constructor_new (_inLexique, var_cas_inTargetLabel, var_cas_inInstructionLocation COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@bcc_in_structured_if_condition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__bcc_in_structured_if_condition__computeInstructionCountForCondition (C_Compiler &,
                                const cPtr_bcc_in_structured_if_condition * operand_33987,
                                const GGS_bool  /* var_cas_inComplementaryBranch */,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_33987 != NULL) {
    var_cas_outInstructionCount = GGS_uint (true, 2U) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@registerComparisonCondition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__registerComparisonCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_registerComparisonCondition * operand_34234,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_34234 != NULL) {
    GGS_registerComparison var_cas_comparison ;
    if ((var_cas_inComplementaryBranch).isBuiltAndTrue ()) {
      ::routine_getRegisterComparisonComplementary (_inLexique,  operand_34234->mComparison,  var_cas_comparison COMMA_SOURCE_FILE_AT_LINE (1030)) ;
    }else{
      var_cas_comparison = operand_34234->mComparison ;
    }
    GGS_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_13 ;
    const GGS_registerExpression  _temp_34803 = operand_34234->mRegisterExpression ;
    if (_temp_34803._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_34803._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_34803 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_13 COMMA_SOURCE_FILE_AT_LINE (1036)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_registerComparisonCondition ::constructor_new (_inLexique, var_cas_inInstructionLocation, var_cas_IPICregisterDescription, var_cas_inTargetLabel, var_cas_comparison, GGS_bool (true, true) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@registerComparisonCondition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__registerComparisonCondition__computeInstructionCountForCondition (C_Compiler & _inLexique,
                                const cPtr_registerComparisonCondition * operand_35253,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_35253 != NULL) {
    GGS_registerComparison var_cas_comparison ;
    if ((var_cas_inComplementaryBranch).isBuiltAndTrue ()) {
      ::routine_getRegisterComparisonComplementary (_inLexique,  operand_35253->mComparison,  var_cas_comparison COMMA_SOURCE_FILE_AT_LINE (1060)) ;
    }else{
      var_cas_comparison = operand_35253->mComparison ;
    }
    ::routine_getRegisterComparisonInstructionCount (_inLexique,  var_cas_comparison,  var_cas_outInstructionCount COMMA_SOURCE_FILE_AT_LINE (1064)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@incDecRegisterInCondition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__incDecRegisterInCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_incDecRegisterInCondition * operand_35720,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_35720 != NULL) {
    GGS_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_14 ;
    const GGS_registerExpression  _temp_36101 = operand_35720->mRegisterExpression ;
    if (_temp_36101._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_36101._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_36101 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_14 COMMA_SOURCE_FILE_AT_LINE (1080)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_incDecRegisterInCondition ::constructor_new (_inLexique, var_cas_inInstructionLocation, var_cas_IPICregisterDescription, var_cas_inTargetLabel, operand_35720->mIncrement, operand_35720->m_W_isDestination, (operand_35720->mBranchIfZero)._operator_xor (var_cas_inComplementaryBranch), GGS_bool (true, true) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@incDecRegisterInCondition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__incDecRegisterInCondition__computeInstructionCountForCondition (C_Compiler &,
                                const cPtr_incDecRegisterInCondition * operand_36613,
                                const GGS_bool  /* var_cas_inComplementaryBranch */,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_36613 != NULL) {
    var_cas_outInstructionCount = GGS_uint (true, 2U) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@registerTestCondition.buildIPICinstructionForCondition'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__registerTestCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_registerTestCondition * operand_36854,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_36854 != NULL) {
    GGS_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_15 ;
    const GGS_registerExpression  _temp_37235 = operand_36854->mRegisterExpression ;
    if (_temp_37235._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_37235._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_37235 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_15 COMMA_SOURCE_FILE_AT_LINE (1120)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_jump_test_register ::constructor_new (_inLexique, var_cas_inInstructionLocation, var_cas_IPICregisterDescription, var_cas_inTargetLabel, (operand_36854->mBranchIfZero)._operator_xor (var_cas_inComplementaryBranch), GGS_bool (true, true) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@registerTestCondition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__registerTestCondition__computeInstructionCountForCondition (C_Compiler &,
                                const cPtr_registerTestCondition * operand_37697,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_37697 != NULL) {
    if (((operand_37697->mBranchIfZero)._operator_xor (var_cas_inComplementaryBranch)).isBuiltAndTrue ()) {
      var_cas_outInstructionCount = GGS_uint (true, 3U) ;
    }else{
      var_cas_outInstructionCount = GGS_uint (true, 2U) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@negateCondition.buildIPICinstructionForCondition'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__negateCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_negateCondition * operand_38024,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_38024 != NULL) {
    const GGS_conditionExpression  _temp_38348 = operand_38024->mCondition ;
    if (_temp_38348._isBuilt ()) {
      typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_38348._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_38348 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, (var_cas_inComplementaryBranch)._operator_not (), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1161)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@negateCondition.computeInstructionCountForCondition'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__negateCondition__computeInstructionCountForCondition (C_Compiler & _inLexique,
                                const cPtr_negateCondition * operand_38702,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_38702 != NULL) {
    const GGS_conditionExpression  _temp_38815 = operand_38702->mCondition ;
    if (_temp_38815._isBuilt ()) {
      typeCategoryMethod__conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__conditionExpression__computeInstructionCountForCondition (_temp_38815._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_38815 (HERE), (var_cas_inComplementaryBranch)._operator_not (), var_cas_outInstructionCount COMMA_SOURCE_FILE_AT_LINE (1179)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@andCondition.buildIPICinstructionForCondition'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__andCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_andCondition * operand_39010,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_39010 != NULL) {
    if ((var_cas_inComplementaryBranch).isBuiltAndTrue ()) {
      const GGS_conditionExpression  _temp_39373 = operand_39010->mLeftExpression ;
      if (_temp_39373._isBuilt ()) {
        typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_39373._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_39373 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1198)) ;
        }
      }
      const GGS_conditionExpression  _temp_39640 = operand_39010->mRightExpression ;
      if (_temp_39640._isBuilt ()) {
        typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_39640._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_39640 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1208)) ;
        }
      }
    }else{
      GGS_string var_cas_label0 ;
      var_cas_label0 = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1219))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1219)) ;
      const GGS_conditionExpression  _temp_39999 = operand_39010->mLeftExpression ;
      if (_temp_39999._isBuilt ()) {
        typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_39999._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_39999 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), var_cas_inInstructionLocation, var_cas_label0, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1220)) ;
        }
      }
      const GGS_conditionExpression  _temp_40259 = operand_39010->mRightExpression ;
      if (_temp_40259._isBuilt ()) {
        typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_40259._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_40259 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, false), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1230)) ;
        }
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, var_cas_inInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@andCondition.computeInstructionCountForCondition'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__andCondition__computeInstructionCountForCondition (C_Compiler & _inLexique,
                                const cPtr_andCondition * operand_40728,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_40728 != NULL) {
    GGS_uint  var_cas_countLeft ;
    const GGS_conditionExpression  _temp_40866 = operand_40728->mLeftExpression ;
    if (_temp_40866._isBuilt ()) {
      typeCategoryMethod__conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__conditionExpression__computeInstructionCountForCondition (_temp_40866._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_40866 (HERE), var_cas_inComplementaryBranch, var_cas_countLeft COMMA_SOURCE_FILE_AT_LINE (1251)) ;
      }
    }
    GGS_uint  var_cas_countRight ;
    const GGS_conditionExpression  _temp_40990 = operand_40728->mLeftExpression ;
    if (_temp_40990._isBuilt ()) {
      typeCategoryMethod__conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__conditionExpression__computeInstructionCountForCondition (_temp_40990._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_40990 (HERE), var_cas_inComplementaryBranch, var_cas_countRight COMMA_SOURCE_FILE_AT_LINE (1256)) ;
      }
    }
    var_cas_outInstructionCount = var_cas_countLeft._add_operation (_inLexique, var_cas_countRight COMMA_SOURCE_FILE_AT_LINE (1260)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@bitTest_in_structured_if_condition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__bitTest_in_structured_if_condition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_bitTest_in_structured_if_condition * operand_41244,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_41244 != NULL) {
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    GGS_ipic_registerExpression var_cas_IPICregisterDescription ;
    const GGS_registerExpression  _temp_41658 = operand_41244->mRegisterExpression ;
    if (_temp_41658._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_41658._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_41658 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (1277)) ;
      }
    }
    GGS_uint  var_cas_bitNumber ;
    const GGS_bitNumberExpression  _temp_41809 = operand_41244->mBitNumber ;
    if (_temp_41809._isBuilt ()) {
      typeCategoryMethod__bitNumberExpression__getBitNumber _method = findCategoryMethod__bitNumberExpression__getBitNumber (_temp_41809._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_41809 (HERE), var_cas_bitSliceTable, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (1284)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_BitTestSkip ::constructor_new (_inLexique, var_cas_inInstructionLocation, (operand_41244->mBTFSSinstruction)._operator_xor (var_cas_inComplementaryBranch), var_cas_IPICregisterDescription, var_cas_bitNumber COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_JUMP ::constructor_new (_inLexique, var_cas_inInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_inTargetLabel, var_cas_inInstructionLocation COMMA_HERE), GGS_jumpInstructionKind::constructor_ipicRelative (_inLexique COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@bitTest_in_structured_if_condition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__bitTest_in_structured_if_condition__computeInstructionCountForCondition (C_Compiler &,
                                const cPtr_bitTest_in_structured_if_condition * operand_42365,
                                const GGS_bool  /* var_cas_inComplementaryBranch */,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_42365 != NULL) {
    var_cas_outInstructionCount = GGS_uint (true, 2U) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@instruction_structured_if.buildIPICinstructionList'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_structured_if__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_structured_if * operand_42602,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_42602 != NULL) {
    GGS_bool var_cas_generateComplementaryCondition ;
    var_cas_generateComplementaryCondition = GGS_bool (true, false) ;
    if ((GGS_bool (true, _inLexique.boolOptionValueFromKeys ("piccolo_options", "performOptimizations" COMMA_SOURCE_FILE_AT_LINE (1317)))).isBuiltAndTrue ()) {
      GGS_uint  var_cas_directCount ;
      const GGS_conditionExpression  _temp_43000 = operand_42602->mIfCondition ;
      if (_temp_43000._isBuilt ()) {
        typeCategoryMethod__conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__conditionExpression__computeInstructionCountForCondition (_temp_43000._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_43000 (HERE), GGS_bool (true, true), var_cas_directCount COMMA_SOURCE_FILE_AT_LINE (1318)) ;
        }
      }
      if (((operand_42602->mElseInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1319)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_directCount._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1320)) ;
      }
      GGS_uint  var_cas_complementaryCount ;
      const GGS_conditionExpression  _temp_43185 = operand_42602->mIfCondition ;
      if (_temp_43185._isBuilt ()) {
        typeCategoryMethod__conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__conditionExpression__computeInstructionCountForCondition (_temp_43185._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_43185 (HERE), GGS_bool (true, false), var_cas_complementaryCount COMMA_SOURCE_FILE_AT_LINE (1322)) ;
        }
      }
      if (((operand_42602->mThenInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1323)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_complementaryCount._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1324)) ;
      }
      if (((var_cas_complementaryCount)._operator_strictInf (var_cas_directCount)).isBuiltAndTrue ()) {
        var_cas_generateComplementaryCondition = GGS_bool (true, true) ;
        var_cas_ioListFileContents.writeString ("  line ") ;
        var_cas_ioListFileContents._dotAssign_operation (var_cas_ioGeneratedInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1328)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1328))) ;
        var_cas_ioListFileContents.writeString (": generates complementary test (saves ") ;
        var_cas_ioListFileContents._dotAssign_operation (var_cas_directCount._substract_operation (_inLexique, var_cas_complementaryCount COMMA_SOURCE_FILE_AT_LINE (1329)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1329))) ;
        var_cas_ioListFileContents.writeString (" instruction") ;
        if (((var_cas_directCount._substract_operation (_inLexique, var_cas_complementaryCount COMMA_SOURCE_FILE_AT_LINE (1330)))._operator_strictSup (GGS_uint (true, 1U))).isBuiltAndTrue ()) {
          var_cas_ioListFileContents.writeString ("s") ;
        }
        var_cas_ioListFileContents.writeString (")\n") ;
      }
    }
    if ((var_cas_generateComplementaryCondition).isBuiltAndTrue ()) {
      GGS_string var_cas_label_nextCondition ;
      var_cas_label_nextCondition = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1338))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1338)) ;
      GGS_string var_cas_label_endOfIfinstruction ;
      var_cas_label_endOfIfinstruction = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1339))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1339)) ;
      const GGS_conditionExpression  _temp_44088 = operand_42602->mIfCondition ;
      if (_temp_44088._isBuilt ()) {
        typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_44088._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_44088 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, false), operand_42602->mInstructionLocation, var_cas_label_nextCondition, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1341)) ;
        }
      }
      {
        GGS_instructionList::cEnumerator enumerator_44366 (operand_42602->mElseInstructionList, true) ;
        const GGS_instructionList::cElement * operand_44366 = NULL ;
        while (((operand_44366 = enumerator_44366.nextObject ()))) {
          macroValidPointer (operand_44366) ;
          const GGS_piccolo_instruction  _temp_44414 = operand_44366->mInstruction ;
          if (_temp_44414._isBuilt ()) {
            typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_44414._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_44414 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1353)) ;
            }
          }
        }
      }
      if (((operand_42602->mThenInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1356)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_JUMP ::constructor_new (_inLexique, operand_42602->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_42602->mInstructionLocation COMMA_HERE), GGS_jumpInstructionKind::constructor_ipicRelative (_inLexique COMMA_HERE) COMMA_HERE)) ;
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_nextCondition, operand_42602->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      {
        GGS_instructionList::cEnumerator enumerator_44966 (operand_42602->mThenInstructionList, true) ;
        const GGS_instructionList::cElement * operand_44966 = NULL ;
        while (((operand_44966 = enumerator_44966.nextObject ()))) {
          macroValidPointer (operand_44966) ;
          const GGS_piccolo_instruction  _temp_45014 = operand_44966->mInstruction ;
          if (_temp_45014._isBuilt ()) {
            typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_45014._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_45014 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1361)) ;
            }
          }
        }
      }
      if (((operand_42602->mThenInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1363)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_42602->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      }
    }else{
      GGS_string var_cas_label_nextCondition ;
      var_cas_label_nextCondition = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1368))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1368)) ;
      GGS_string var_cas_label_endOfIfinstruction ;
      var_cas_label_endOfIfinstruction = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1369))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1369)) ;
      const GGS_conditionExpression  _temp_45629 = operand_42602->mIfCondition ;
      if (_temp_45629._isBuilt ()) {
        typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_45629._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_45629 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), operand_42602->mInstructionLocation, var_cas_label_nextCondition, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1371)) ;
        }
      }
      {
        GGS_instructionList::cEnumerator enumerator_45906 (operand_42602->mThenInstructionList, true) ;
        const GGS_instructionList::cElement * operand_45906 = NULL ;
        while (((operand_45906 = enumerator_45906.nextObject ()))) {
          macroValidPointer (operand_45906) ;
          const GGS_piccolo_instruction  _temp_45954 = operand_45906->mInstruction ;
          if (_temp_45954._isBuilt ()) {
            typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_45954._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_45954 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1383)) ;
            }
          }
        }
      }
      if (((operand_42602->mElseInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1386)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_JUMP ::constructor_new (_inLexique, operand_42602->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_42602->mInstructionLocation COMMA_HERE), GGS_jumpInstructionKind::constructor_ipicRelative (_inLexique COMMA_HERE) COMMA_HERE)) ;
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_nextCondition, operand_42602->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      {
        GGS_instructionList::cEnumerator enumerator_46506 (operand_42602->mElseInstructionList, true) ;
        const GGS_instructionList::cElement * operand_46506 = NULL ;
        while (((operand_46506 = enumerator_46506.nextObject ()))) {
          macroValidPointer (operand_46506) ;
          const GGS_piccolo_instruction  _temp_46554 = operand_46506->mInstruction ;
          if (_temp_46554._isBuilt ()) {
            typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_46554._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_46554 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1391)) ;
            }
          }
        }
      }
      if (((operand_42602->mElseInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1393)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_42602->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_do_while.buildIPICinstructionList'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_do_while__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_do_while * operand_47018,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_47018 != NULL) {
    GGS_string var_cas_labelInstructionBegin ;
    var_cas_labelInstructionBegin = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1409))) ;
    var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1409)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_labelInstructionBegin, operand_47018->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    {
      GGS_instructionList::cEnumerator enumerator_47521 (operand_47018->mRepeatedInstructionList, true) ;
      const GGS_instructionList::cElement * operand_47521 = NULL ;
      while (((operand_47521 = enumerator_47521.nextObject ()))) {
        macroValidPointer (operand_47521) ;
        const GGS_piccolo_instruction  _temp_47567 = operand_47521->mInstruction ;
        if (_temp_47567._isBuilt ()) {
          typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_47567._galgasObjectRunTimeInfo ()) ;
          if (_method != NULL) {
            _method (_inLexique, _temp_47567 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1414)) ;
          }
        }
      }
    }
    {
      GGS_partList::cEnumerator enumerator_47740 (operand_47018->mWhilePartList, true) ;
      const GGS_partList::cElement * operand_47740 = NULL ;
      while (((operand_47740 = enumerator_47740.nextObject ()))) {
        macroValidPointer (operand_47740) ;
        if (((operand_47740->mInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1418)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
          const GGS_conditionExpression  _temp_47837 = operand_47740->mCondition ;
          if (_temp_47837._isBuilt ()) {
            typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_47837._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_47837 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, false), operand_47018->mInstructionLocation, var_cas_labelInstructionBegin, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1419)) ;
            }
          }
        }else{
          GGS_string var_cas_nextBranchLabel ;
          var_cas_nextBranchLabel = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1430))) ;
          var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1430)) ;
          const GGS_conditionExpression  _temp_48232 = operand_47740->mCondition ;
          if (_temp_48232._isBuilt ()) {
            typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_48232._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_48232 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), operand_47018->mInstructionLocation, var_cas_nextBranchLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1431)) ;
            }
          }
          {
            GGS_instructionList::cEnumerator enumerator_48494 (operand_47740->mInstructionList, true) ;
            const GGS_instructionList::cElement * operand_48494 = NULL ;
            while (((operand_48494 = enumerator_48494.nextObject ()))) {
              macroValidPointer (operand_48494) ;
              const GGS_piccolo_instruction  _temp_48544 = operand_48494->mInstruction ;
              if (_temp_48544._isBuilt ()) {
                typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_48544._galgasObjectRunTimeInfo ()) ;
                if (_method != NULL) {
                  _method (_inLexique, _temp_48544 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1442)) ;
                }
              }
            }
          }
          var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_JUMP ::constructor_new (_inLexique, operand_47018->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_labelInstructionBegin, operand_47018->mInstructionLocation COMMA_HERE), GGS_jumpInstructionKind::constructor_ipicRelative (_inLexique COMMA_HERE) COMMA_HERE)) ;
          var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_nextBranchLabel, operand_47018->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@instruction_IF_IncDec.buildIPICinstructionList'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_IF_IncDec__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_IF_IncDec * operand_49137,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_49137 != NULL) {
    GGS_instruction_FDA_base_code var_cas_baseCode ;
    if (((operand_49137->mIncrement)._operator_and (operand_49137->mSkipIfZero)).isBuiltAndTrue ()) {
      var_cas_baseCode = GGS_instruction_FDA_base_code::constructor_INCFSZ (_inLexique COMMA_HERE) ;
    }else if (((operand_49137->mIncrement)._operator_and ((operand_49137->mSkipIfZero)._operator_not ())).isBuiltAndTrue ()) {
      var_cas_baseCode = GGS_instruction_FDA_base_code::constructor_INFSNZ (_inLexique COMMA_HERE) ;
    }else if ((((operand_49137->mIncrement)._operator_not ())._operator_and (operand_49137->mSkipIfZero)).isBuiltAndTrue ()) {
      var_cas_baseCode = GGS_instruction_FDA_base_code::constructor_DECFSZ (_inLexique COMMA_HERE) ;
    }else{
      var_cas_baseCode = GGS_instruction_FDA_base_code::constructor_DCFSNZ (_inLexique COMMA_HERE) ;
    }
    GGS_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_16 ;
    const GGS_registerExpression  _temp_49815 = operand_49137->mRegisterExpression ;
    if (_temp_49815._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_49815._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_49815 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_16 COMMA_SOURCE_FILE_AT_LINE (1472)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, operand_49137->mInstructionLocation, var_cas_baseCode, var_cas_IPICregisterDescription, operand_49137->m_W_isDestination COMMA_HERE)) ;
    const GGS_piccolo_instruction  _temp_50138 = operand_49137->mInstruction ;
    if (_temp_50138._isBuilt ()) {
      typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_50138._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_50138 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1486)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "buildIPICAssemblyInstructionList"        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildIPICAssemblyInstructionList (C_Compiler & _inLexique,
                                const GGS_uint   var_cas_inAccessBankSplitOffset,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_piccoloModel  var_cas_inPiccoloModel,
                                const GGS_bool  var_cas_inHasHighInterrupt,
                                const GGS_bool  var_cas_inHasLowInterrupt,
                                GGS_ipic_instructionList  & var_cas_outGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_buildIPICAssemblyInstructionList at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_generationOptimizationMessages ;
  var_cas_generationOptimizationMessages = GGS_string (true, "") ;
  var_cas_outGeneratedInstructionList = GGS_ipic_instructionList ::constructor_emptyList () ;
  GGS_uint  var_cas_localLabelIndex ;
  var_cas_localLabelIndex = GGS_uint (true, 0U) ;
  var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_JUMP ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "main"), GGS_location (_inLexique) COMMA_HERE), GGS_jumpInstructionKind::constructor_ipicRelative (_inLexique COMMA_HERE) COMMA_HERE)) ;
  if (((var_cas_inHasLowInterrupt)._operator_and (var_cas_inHasHighInterrupt)).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_ORG ::constructor_new (_inLexique, GGS_uint (true, 8U) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_JUMP ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "_fast_interrupt"), GGS_location (_inLexique) COMMA_HERE), GGS_jumpInstructionKind::constructor_ipicRelative (_inLexique COMMA_HERE) COMMA_HERE)) ;
  }
  if ((var_cas_inHasLowInterrupt).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_ORG ::constructor_new (_inLexique, GGS_uint (true, 24U) COMMA_HERE)) ;
    {
      GGS_interruptDefinitionList::cEnumerator enumerator_51480 (var_cas_inPiccoloModel.reader_mInterruptDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1514)), true) ;
      const GGS_interruptDefinitionList::cElement * operand_51480 = NULL ;
      while (((operand_51480 = enumerator_51480.nextObject ()))) {
        macroValidPointer (operand_51480) ;
        if (((operand_51480->mInterruptName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1515)))._operator_isEqual (GGS_string (true, "low"))).isBuiltAndTrue ()) {
          {
            GGS_instructionList::cEnumerator enumerator_51603 (operand_51480->mInstructionList, true) ;
            const GGS_instructionList::cElement * operand_51603 = NULL ;
            while (((operand_51603 = enumerator_51603.nextObject ()))) {
              macroValidPointer (operand_51603) ;
              const GGS_piccolo_instruction  _temp_51655 = operand_51603->mInstruction ;
              if (_temp_51655._isBuilt ()) {
                typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_51655._galgasObjectRunTimeInfo ()) ;
                if (_method != NULL) {
                  _method (_inLexique, _temp_51655 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_localLabelIndex, var_cas_outGeneratedInstructionList, var_cas_generationOptimizationMessages COMMA_SOURCE_FILE_AT_LINE (1517)) ;
                }
              }
            }
          }
          var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RETFIE ::constructor_new (_inLexique, GGS_location (_inLexique), operand_51480->mFastReturn COMMA_HERE)) ;
        }
      }
    }
  }
  if ((var_cas_inHasHighInterrupt).isBuiltAndTrue ()) {
    if ((var_cas_inHasLowInterrupt).isBuiltAndTrue ()) {
      var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "_fast_interrupt"), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE)) ;
    }else{
      var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_ORG ::constructor_new (_inLexique, GGS_uint (true, 8U) COMMA_HERE)) ;
    }
    {
      GGS_interruptDefinitionList::cEnumerator enumerator_52291 (var_cas_inPiccoloModel.reader_mInterruptDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1531)), true) ;
      const GGS_interruptDefinitionList::cElement * operand_52291 = NULL ;
      while (((operand_52291 = enumerator_52291.nextObject ()))) {
        macroValidPointer (operand_52291) ;
        if (((operand_52291->mInterruptName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1532)))._operator_isEqual (GGS_string (true, "high"))).isBuiltAndTrue ()) {
          {
            GGS_instructionList::cEnumerator enumerator_52415 (operand_52291->mInstructionList, true) ;
            const GGS_instructionList::cElement * operand_52415 = NULL ;
            while (((operand_52415 = enumerator_52415.nextObject ()))) {
              macroValidPointer (operand_52415) ;
              const GGS_piccolo_instruction  _temp_52467 = operand_52415->mInstruction ;
              if (_temp_52467._isBuilt ()) {
                typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_52467._galgasObjectRunTimeInfo ()) ;
                if (_method != NULL) {
                  _method (_inLexique, _temp_52467 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_localLabelIndex, var_cas_outGeneratedInstructionList, var_cas_generationOptimizationMessages COMMA_SOURCE_FILE_AT_LINE (1534)) ;
                }
              }
            }
          }
          var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RETFIE ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_bool (true, true) COMMA_HERE)) ;
        }
      }
    }
  }
  {
    GGS_routineDefinitionList::cEnumerator enumerator_52814 (var_cas_inPiccoloModel.reader_mRoutineDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1542)), true) ;
    const GGS_routineDefinitionList::cElement * operand_52814 = NULL ;
    while (((operand_52814 = enumerator_52814.nextObject ()))) {
      macroValidPointer (operand_52814) ;
      var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, operand_52814->mRoutineName COMMA_HERE)) ;
      {
        GGS_instructionList::cEnumerator enumerator_52961 (operand_52814->mInstructionList, true) ;
        const GGS_instructionList::cElement * operand_52961 = NULL ;
        while (((operand_52961 = enumerator_52961.nextObject ()))) {
          macroValidPointer (operand_52961) ;
          const GGS_piccolo_instruction  _temp_53009 = operand_52961->mInstruction ;
          if (_temp_53009._isBuilt ()) {
            typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_53009._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_53009 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_localLabelIndex, var_cas_outGeneratedInstructionList, var_cas_generationOptimizationMessages COMMA_SOURCE_FILE_AT_LINE (1545)) ;
            }
          }
        }
      }
      if (((operand_52814->mIsNoReturn)._operator_not ()).isBuiltAndTrue ()) {
        var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RETURN ::constructor_new (_inLexique, operand_52814->mRoutineName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (1549)) COMMA_HERE)) ;
      }
    }
  }
  GGS_registerExpression  var_cas_WREGregister ;
  var_cas_WREGregister = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "WREG"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
  GGS_ipic_registerExpression var_cas_WREG_IPICregisterDescription ;
  GGS_bitSliceTable  automatic_var_17 ;
  const GGS_registerExpression  _temp_53586 = var_cas_WREGregister ;
  if (_temp_53586._isBuilt ()) {
    typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_53586._galgasObjectRunTimeInfo ()) ;
    if (_method != NULL) {
      _method (_inLexique, _temp_53586 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_WREG_IPICregisterDescription, automatic_var_17 COMMA_SOURCE_FILE_AT_LINE (1555)) ;
    }
  }
  GGS_registerExpression  var_cas_TOSLregister ;
  var_cas_TOSLregister = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "TOSL"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
  GGS_ipic_registerExpression var_cas_TOSL_IPICregisterDescription ;
  GGS_bitSliceTable  automatic_var_18 ;
  const GGS_registerExpression  _temp_53901 = var_cas_TOSLregister ;
  if (_temp_53901._isBuilt ()) {
    typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_53901._galgasObjectRunTimeInfo ()) ;
    if (_method != NULL) {
      _method (_inLexique, _temp_53901 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_TOSL_IPICregisterDescription, automatic_var_18 COMMA_SOURCE_FILE_AT_LINE (1564)) ;
    }
  }
  GGS_registerExpression  var_cas_TOSHregister ;
  var_cas_TOSHregister = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "TOSH"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
  GGS_ipic_registerExpression var_cas_TOSH_IPICregisterDescription ;
  GGS_bitSliceTable  automatic_var_19 ;
  const GGS_registerExpression  _temp_54216 = var_cas_TOSHregister ;
  if (_temp_54216._isBuilt ()) {
    typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_54216._galgasObjectRunTimeInfo ()) ;
    if (_method != NULL) {
      _method (_inLexique, _temp_54216 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_TOSH_IPICregisterDescription, automatic_var_19 COMMA_SOURCE_FILE_AT_LINE (1573)) ;
    }
  }
  GGS_registerExpression  var_cas_TOSUregister ;
  var_cas_TOSUregister = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "TOSU"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
  GGS_ipic_registerExpression var_cas_TOSU_IPICregisterDescription ;
  GGS_bitSliceTable  automatic_var_20 ;
  const GGS_registerExpression  _temp_54531 = var_cas_TOSUregister ;
  if (_temp_54531._isBuilt ()) {
    typeCategoryMethod__registerExpression__resolveAccess _method = findCategoryMethod__registerExpression__resolveAccess (_temp_54531._galgasObjectRunTimeInfo ()) ;
    if (_method != NULL) {
      _method (_inLexique, _temp_54531 (HERE), var_cas_inAccessBankSplitOffset, var_cas_inRegisterTable, var_cas_TOSU_IPICregisterDescription, automatic_var_20 COMMA_SOURCE_FILE_AT_LINE (1582)) ;
    }
  }
  if ((var_cas_inPiccoloModel.reader_mNeedsComputedGoto4 (_inLexique COMMA_SOURCE_FILE_AT_LINE (1589))).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "_computed_goto_4"), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_instruction_FDA_base_code::constructor_ADDWF (_inLexique COMMA_HERE), var_cas_WREG_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
  }
  if ((var_cas_inPiccoloModel.reader_mNeedsComputedGoto2 (_inLexique COMMA_SOURCE_FILE_AT_LINE (1598))).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "_computed_goto_2"), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE)) ;
  }
  if (((var_cas_inPiccoloModel.reader_mNeedsComputedGoto2 (_inLexique COMMA_SOURCE_FILE_AT_LINE (1601)))._operator_or (var_cas_inPiccoloModel.reader_mNeedsComputedGoto4 (_inLexique COMMA_SOURCE_FILE_AT_LINE (1601)))).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_instruction_FDA_base_code::constructor_ADDWF (_inLexique COMMA_HERE), var_cas_WREG_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_instruction_FDA_base_code::constructor_ADDWFC (_inLexique COMMA_HERE), var_cas_TOSL_IPICregisterDescription, GGS_bool (true, false) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_literalOperation ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_literal_instruction_opcode::constructor_MOVLW (_inLexique COMMA_HERE), GGS_uint (true, 0U) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_instruction_FDA_base_code::constructor_ADDWFC (_inLexique COMMA_HERE), var_cas_TOSH_IPICregisterDescription, GGS_bool (true, false) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_instruction_FDA_base_code::constructor_ADDWFC (_inLexique COMMA_HERE), var_cas_TOSU_IPICregisterDescription, GGS_bool (true, false) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RETURN ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE)) ;
  }
  if ((GGS_bool (true, _inLexique.boolOptionValueFromKeys ("piccolo_options", "ouputListingFile" COMMA_SOURCE_FILE_AT_LINE (1636)))).isBuiltAndTrue ()) {
    var_cas_ioListFileContents._dotAssign_operation (GGS_string (true, "").reader_stringByLeftAndRightPadding (_inLexique, GGS_uint (true, 79U), GGS_char (true, '*') COMMA_SOURCE_FILE_AT_LINE (1637))) ;
    var_cas_ioListFileContents.writeString ("\n") ;
    var_cas_ioListFileContents.writeString ("*") ;
    var_cas_ioListFileContents._dotAssign_operation (GGS_string (true, "IPIC INSTRUCTION LIST").reader_stringByLeftAndRightPadding (_inLexique, GGS_uint (true, 77U), GGS_char (true, ' ') COMMA_SOURCE_FILE_AT_LINE (1638))) ;
    var_cas_ioListFileContents.writeString ("*\n") ;
    var_cas_ioListFileContents._dotAssign_operation (GGS_string (true, "").reader_stringByLeftAndRightPadding (_inLexique, GGS_uint (true, 79U), GGS_char (true, '*') COMMA_SOURCE_FILE_AT_LINE (1639))) ;
    var_cas_ioListFileContents.writeString ("\n"
      "\n") ;
    if (((var_cas_generationOptimizationMessages.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1640)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
      var_cas_ioListFileContents.writeString ("Optimizations during generation:\n") ;
      var_cas_ioListFileContents._dotAssign_operation (var_cas_generationOptimizationMessages) ;
      var_cas_ioListFileContents.writeString ("\n") ;
    }
    var_cas_ioListFileContents.writeString ("Generated intermediate code:\n") ;
    GGS_uint  var_cas_index ;
    var_cas_index = GGS_uint (true, 0U) ;
    GGS_uint  var_cas_currentAddress ;
    var_cas_currentAddress = GGS_uint (true, 0U) ;
    {
      GGS_ipic_instructionList::cEnumerator enumerator_57022 (var_cas_outGeneratedInstructionList, true) ;
      const GGS_ipic_instructionList::cElement * operand_57022 = NULL ;
      while (((operand_57022 = enumerator_57022.nextObject ()))) {
        macroValidPointer (operand_57022) ;
        const GGS_ipic_instruction  _temp_57063 = operand_57022->mInstruction ;
        if (_temp_57063._isBuilt ()) {
          _temp_57063 (HERE)->method_setCurrentAddress (_inLexique, var_cas_currentAddress COMMA_SOURCE_FILE_AT_LINE (1649)) ;
        }
        var_cas_ioListFileContents._dotAssign_operation (var_cas_index.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1650)).reader_stringByLeftPadding (_inLexique, GGS_uint (true, 5U), GGS_char (true, ' ') COMMA_SOURCE_FILE_AT_LINE (1650))) ;
        var_cas_ioListFileContents.writeString (": ") ;
        const GGS_ipic_instruction  _temp_57208 = operand_57022->mInstruction ;
        if (_temp_57208._isBuilt ()) {
          _temp_57208 (HERE)->method_displayIPICinstruction (_inLexique, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1651)) ;
        }
        var_cas_ioListFileContents.writeString ("\n") ;
        var_cas_index._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1653)) ;
      }
    }
    var_cas_ioListFileContents.writeString ("\n") ;
    var_cas_ioListFileContents.writeString ("Minimum code size without optimization: ") ;
    var_cas_ioListFileContents._dotAssign_operation (var_cas_currentAddress.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1656))) ;
    var_cas_ioListFileContents.writeString (" bytes.\n"
      "\n") ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_buildIPICAssemblyInstructionList\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_buildIPICAssemblyInstructionList (void) {
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatInteger__eval, gClassInfoFor__immediatInteger.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatRegister__eval, gClassInfoFor__immediatRegister.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatAdd__eval, gClassInfoFor__immediatAdd.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatSub__eval, gClassInfoFor__immediatSub.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatMul__eval, gClassInfoFor__immediatMul.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatDiv__eval, gClassInfoFor__immediatDiv.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatMod__eval, gClassInfoFor__immediatMod.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatAnd__eval, gClassInfoFor__immediatAnd.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatOr__eval, gClassInfoFor__immediatOr.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatXor__eval, gClassInfoFor__immediatXor.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatLeftShift__eval, gClassInfoFor__immediatLeftShift.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatRightShift__eval, gClassInfoFor__immediatRightShift.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatEqualTest__eval, gClassInfoFor__immediatEqualTest.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatNotEqualTest__eval, gClassInfoFor__immediatNotEqualTest.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatGreaterOrEqualTest__eval, gClassInfoFor__immediatGreaterOrEqualTest.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatLowerOrEqualTest__eval, gClassInfoFor__immediatLowerOrEqualTest.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatGreaterTest__eval, gClassInfoFor__immediatGreaterTest.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatLowerTest__eval, gClassInfoFor__immediatLowerTest.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatNegate__eval, gClassInfoFor__immediatNegate.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatComplement__eval, gClassInfoFor__immediatComplement.slotID ()) ;
 enterCategoryMethod__immediatExpression__eval ((typeCategoryMethod__immediatExpression__eval) category_method__immediatSlice__eval, gClassInfoFor__immediatSlice.slotID ()) ;
 enterCategoryMethod__bitNumberExpression__getBitNumber ((typeCategoryMethod__bitNumberExpression__getBitNumber) category_method__bitNumberLiteralValue__getBitNumber, gClassInfoFor__bitNumberLiteralValue.slotID ()) ;
 enterCategoryMethod__bitNumberExpression__getBitNumber ((typeCategoryMethod__bitNumberExpression__getBitNumber) category_method__bitNumberLabelValue__getBitNumber, gClassInfoFor__bitNumberLabelValue.slotID ()) ;
 enterCategoryMethod__registerExpression__resolveAccess (category_method__registerExpression__resolveAccess, gClassInfoFor__registerExpression.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_nobanksel__buildIPICinstructionList, gClassInfoFor__instruction_nobanksel.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_savebank__buildIPICinstructionList, gClassInfoFor__instruction_savebank.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_banksel__buildIPICinstructionList, gClassInfoFor__instruction_banksel.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_FDA__buildIPICinstructionList, gClassInfoFor__instruction_FDA.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_FA__buildIPICinstructionList, gClassInfoFor__instruction_FA.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_MOVFF__buildIPICinstructionList, gClassInfoFor__instruction_MOVFF.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_FBA__buildIPICinstructionList, gClassInfoFor__instruction_FBA.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_JSR__buildIPICinstructionList, gClassInfoFor__instruction_JSR.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_JUMP__buildIPICinstructionList, gClassInfoFor__instruction_JUMP.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_JUMPCC__buildIPICinstructionList, gClassInfoFor__instruction_JUMPCC.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_CLRWDT__buildIPICinstructionList, gClassInfoFor__instruction_CLRWDT.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_DAW__buildIPICinstructionList, gClassInfoFor__instruction_DAW.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_NOP__buildIPICinstructionList, gClassInfoFor__instruction_NOP.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_POP__buildIPICinstructionList, gClassInfoFor__instruction_POP.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_PUSH__buildIPICinstructionList, gClassInfoFor__instruction_PUSH.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_RESET__buildIPICinstructionList, gClassInfoFor__instruction_RESET.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_SLEEP__buildIPICinstructionList, gClassInfoFor__instruction_SLEEP.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_literalOperation__buildIPICinstructionList, gClassInfoFor__instruction_literalOperation.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_LFSR__buildIPICinstructionList, gClassInfoFor__instruction_LFSR.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_TBLRD__buildIPICinstructionList, gClassInfoFor__instruction_TBLRD.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_TBLWT__buildIPICinstructionList, gClassInfoFor__instruction_TBLWT.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_computed_retlw__buildIPICinstructionList, gClassInfoFor__instruction_computed_retlw.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_MNOP__buildIPICinstructionList, gClassInfoFor__instruction_MNOP.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_computed_bra__buildIPICinstructionList, gClassInfoFor__instruction_computed_bra.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_computed_goto__buildIPICinstructionList, gClassInfoFor__instruction_computed_goto.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_FOREVER__buildIPICinstructionList, gClassInfoFor__instruction_FOREVER.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_IF_FA_SEMI_COLON__buildIPICinstructionList, gClassInfoFor__instruction_IF_FA_SEMI_COLON.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_IF_BitTest__buildIPICinstructionList, gClassInfoFor__instruction_IF_BitTest.slotID ()) ;
 enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition) category_method__bcc_in_structured_if_condition__buildIPICinstructionForCondition, gClassInfoFor__bcc_in_structured_if_condition.slotID ()) ;
 enterCategoryMethod__conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__conditionExpression__computeInstructionCountForCondition) category_method__bcc_in_structured_if_condition__computeInstructionCountForCondition, gClassInfoFor__bcc_in_structured_if_condition.slotID ()) ;
 enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition) category_method__registerComparisonCondition__buildIPICinstructionForCondition, gClassInfoFor__registerComparisonCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__conditionExpression__computeInstructionCountForCondition) category_method__registerComparisonCondition__computeInstructionCountForCondition, gClassInfoFor__registerComparisonCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition) category_method__incDecRegisterInCondition__buildIPICinstructionForCondition, gClassInfoFor__incDecRegisterInCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__conditionExpression__computeInstructionCountForCondition) category_method__incDecRegisterInCondition__computeInstructionCountForCondition, gClassInfoFor__incDecRegisterInCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition) category_method__registerTestCondition__buildIPICinstructionForCondition, gClassInfoFor__registerTestCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__conditionExpression__computeInstructionCountForCondition) category_method__registerTestCondition__computeInstructionCountForCondition, gClassInfoFor__registerTestCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition) category_method__negateCondition__buildIPICinstructionForCondition, gClassInfoFor__negateCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__conditionExpression__computeInstructionCountForCondition) category_method__negateCondition__computeInstructionCountForCondition, gClassInfoFor__negateCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition) category_method__andCondition__buildIPICinstructionForCondition, gClassInfoFor__andCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__conditionExpression__computeInstructionCountForCondition) category_method__andCondition__computeInstructionCountForCondition, gClassInfoFor__andCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition) category_method__bitTest_in_structured_if_condition__buildIPICinstructionForCondition, gClassInfoFor__bitTest_in_structured_if_condition.slotID ()) ;
 enterCategoryMethod__conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__conditionExpression__computeInstructionCountForCondition) category_method__bitTest_in_structured_if_condition__computeInstructionCountForCondition, gClassInfoFor__bitTest_in_structured_if_condition.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_structured_if__buildIPICinstructionList, gClassInfoFor__instruction_structured_if.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_do_while__buildIPICinstructionList, gClassInfoFor__instruction_do_while.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_IF_IncDec__buildIPICinstructionList, gClassInfoFor__instruction_IF_IncDec.slotID ()) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogueAction prologueEpilogueObjectFor_buildIPICAssemblyInstructionList (prologueRoutineFor_buildIPICAssemblyInstructionList,
                                   NULL) ;

//---------------------------------------------------------------------------*

