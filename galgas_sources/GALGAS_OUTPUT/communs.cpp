//---------------------------------------------------------------------------*
//                                                                           *
//                            File 'communs.cpp'                             *
//                        Generated by version 2.5.4                         *
//                     january 4th, 2014, at 17h20'35"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "communs.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "communs.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_configuration_5F_definition_i0_ (GALGAS_configDefinitionList & ioArgument_ioConfigDefinitionList,
                                                                    C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_configuration) COMMA_SOURCE_FILE_AT_LINE (9)) ;
  GALGAS_location var_defLocation = inCompiler->here () ;
  GALGAS_configSettingList var_settingList = GALGAS_configSettingList::constructor_emptyList (SOURCE_FILE_AT_LINE (11)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (12)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_0 (inCompiler)) {
    case 2: {
      GALGAS_lstring var_settingName = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (15)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (16)) ;
      GALGAS_lstring var_settingValue ;
      switch (select_communs_1 (inCompiler)) {
      case 1: {
        var_settingValue = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (19)) ;
      } break ;
      case 2: {
        var_settingValue = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (21)) ;
      } break ;
      default:
        break ;
      }
      var_settingList.addAssign_operation (var_settingName, var_settingValue COMMA_SOURCE_FILE_AT_LINE (23)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (25)) ;
  ioArgument_ioConfigDefinitionList.addAssign_operation (var_defLocation, var_settingList COMMA_SOURCE_FILE_AT_LINE (26)) ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_configuration_5F_definition_i0_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_configuration) COMMA_SOURCE_FILE_AT_LINE (9)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (12)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_0 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (15)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (16)) ;
      switch (select_communs_1 (inCompiler)) {
      case 1: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (19)) ;
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (21)) ;
      } break ;
      default:
        break ;
      }
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (25)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_configuration_5F_definition_i0_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_configuration) COMMA_SOURCE_FILE_AT_LINE (9)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (12)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_0 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (15)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (16)) ;
      switch (select_communs_1 (inCompiler)) {
      case 1: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (19)) ;
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (21)) ;
      } break ;
      default:
        break ;
      }
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (25)) ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_declaration_5F_in_5F_ram_i1_ (GALGAS_declarationInRam & outArgument_outDeclaration,
                                                                 C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outDeclaration.drop () ; // Release 'out' argument
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_byte) COMMA_SOURCE_FILE_AT_LINE (34)) ;
  GALGAS_lstring var_name = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_variableDeclaration) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (35)) ;
  GALGAS_luint var_size ;
  switch (select_communs_2 (inCompiler)) {
  case 1: {
    var_size = GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 1U), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (38)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (40)) ;
    var_size = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (41)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (42)) ;
  } break ;
  default:
    break ;
  }
  GALGAS_bitSliceTable var_bitSliceTable = GALGAS_bitSliceTable::constructor_emptyMap (SOURCE_FILE_AT_LINE (44)) ;
  GALGAS_string var_bitDefinitionString ;
  switch (select_communs_3 (inCompiler)) {
  case 1: {
    var_bitDefinitionString = GALGAS_string::makeEmptyString () ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (49)) ;
    var_bitDefinitionString = GALGAS_string (" <") ;
    GALGAS_sint var_sliceIndex = GALGAS_sint ((PMSInt32) 8L) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      switch (select_communs_5 (inCompiler)) {
      case 1: {
        GALGAS_uint var_sliceWidth = GALGAS_uint ((PMUInt32) 0U) ;
        bool repeatFlag_1 = true ;
        while (repeatFlag_1) {
          GALGAS_uint var_sliceBase = GALGAS_uint ((PMUInt32) 0U) ;
          const enumGalgasBool test_2 = GALGAS_bool (kIsSupOrEqual, var_sliceIndex.objectCompare (GALGAS_sint ((PMSInt32) 0L))).boolEnum () ;
          if (kBoolTrue == test_2) {
            var_sliceBase = var_sliceIndex.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (58)) ;
          }
          GALGAS_lstring var_sliceName = inCompiler->synthetizedAttribute_tokenString () ;
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (60)) ;
          switch (select_communs_7 (inCompiler)) {
          case 1: {
            const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, var_sliceWidth.objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (kIsNotEqual, var_sliceWidth.objectCompare (GALGAS_uint ((PMUInt32) 1U))) COMMA_SOURCE_FILE_AT_LINE (62)).boolEnum () ;
            if (kBoolTrue == test_3) {
              GALGAS_location location_4 (var_sliceName.reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_4, GALGAS_string ("a slice of 1 bit is expected for '").operator_concat (var_sliceName.reader_string (SOURCE_FILE_AT_LINE (63)) COMMA_SOURCE_FILE_AT_LINE (63)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (63)) COMMA_SOURCE_FILE_AT_LINE (63)) ;
            }
            var_sliceWidth = GALGAS_uint ((PMUInt32) 1U) ;
            var_bitDefinitionString.dotAssign_operation (var_sliceName.reader_string (SOURCE_FILE_AT_LINE (66)) COMMA_SOURCE_FILE_AT_LINE (66)) ;
          } break ;
          case 2: {
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (68)) ;
            GALGAS_luint var_sliceSize = inCompiler->synthetizedAttribute_uint_33__32_value () ;
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (69)) ;
            const enumGalgasBool test_5 = GALGAS_bool (kIsNotEqual, var_sliceWidth.objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (kIsNotEqual, var_sliceWidth.objectCompare (var_sliceSize.reader_uint (SOURCE_FILE_AT_LINE (70)))) COMMA_SOURCE_FILE_AT_LINE (70)).boolEnum () ;
            if (kBoolTrue == test_5) {
              GALGAS_location location_6 (var_sliceName.reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_6, GALGAS_string ("a slice of ").operator_concat (var_sliceWidth.reader_string (SOURCE_FILE_AT_LINE (71)) COMMA_SOURCE_FILE_AT_LINE (71)).operator_concat (GALGAS_string (" bits is expected for '") COMMA_SOURCE_FILE_AT_LINE (71)).operator_concat (var_sliceName.reader_string (SOURCE_FILE_AT_LINE (71)) COMMA_SOURCE_FILE_AT_LINE (71)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (71)) COMMA_SOURCE_FILE_AT_LINE (71)) ;
            }
            var_sliceWidth = var_sliceSize.reader_uint (SOURCE_FILE_AT_LINE (73)) ;
            var_sliceBase = var_sliceBase.add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (74)).substract_operation (var_sliceSize.reader_uint (SOURCE_FILE_AT_LINE (74)), inCompiler COMMA_SOURCE_FILE_AT_LINE (74)) ;
            var_bitDefinitionString.dotAssign_operation (var_sliceName.reader_string (SOURCE_FILE_AT_LINE (75)).operator_concat (GALGAS_string ("[") COMMA_SOURCE_FILE_AT_LINE (75)).operator_concat (var_sliceSize.reader_uint (SOURCE_FILE_AT_LINE (75)).reader_string (SOURCE_FILE_AT_LINE (75)) COMMA_SOURCE_FILE_AT_LINE (75)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (75)) COMMA_SOURCE_FILE_AT_LINE (75)) ;
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (76)) ;
          } break ;
          default:
            break ;
          }
          GALGAS_uint var_base = GALGAS_uint ((PMUInt32) 0U) ;
          const enumGalgasBool test_7 = GALGAS_bool (kIsSupOrEqual, var_sliceIndex.objectCompare (var_sliceWidth.reader_sint (inCompiler COMMA_SOURCE_FILE_AT_LINE (79)))).boolEnum () ;
          if (kBoolTrue == test_7) {
            var_base = var_sliceIndex.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (80)).substract_operation (var_sliceWidth, inCompiler COMMA_SOURCE_FILE_AT_LINE (80)) ;
          }
          {
          var_bitSliceTable.modifier_insertKey (var_sliceName, var_base, var_sliceWidth, inCompiler COMMA_SOURCE_FILE_AT_LINE (82)) ;
          }
          switch (select_communs_6 (inCompiler)) {
          case 2: {
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2F_) COMMA_SOURCE_FILE_AT_LINE (84)) ;
            var_bitDefinitionString.dotAssign_operation (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (85)) ;
          } break ;
          default:
            repeatFlag_1 = false ;
            break ;
          }
        }
        var_sliceIndex = var_sliceIndex.substract_operation (var_sliceWidth.reader_sint (inCompiler COMMA_SOURCE_FILE_AT_LINE (87)), inCompiler COMMA_SOURCE_FILE_AT_LINE (87)) ;
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (89)) ;
        var_bitDefinitionString.dotAssign_operation (GALGAS_string ("-") COMMA_SOURCE_FILE_AT_LINE (90)) ;
        var_sliceIndex.decrement_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (91)) ;
      } break ;
      default:
        break ;
      }
      switch (select_communs_4 (inCompiler)) {
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (94)) ;
        var_bitDefinitionString.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (95)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    const enumGalgasBool test_8 = GALGAS_bool (kIsNotEqual, var_sliceIndex.objectCompare (GALGAS_sint ((PMSInt32) 0L))).boolEnum () ;
    if (kBoolTrue == test_8) {
      GALGAS_location location_9 (var_name.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_9, GALGAS_string ("Incorrect bit definition for register '").operator_concat (var_name.reader_string (SOURCE_FILE_AT_LINE (98)) COMMA_SOURCE_FILE_AT_LINE (98)).operator_concat (GALGAS_string ("': ") COMMA_SOURCE_FILE_AT_LINE (98)).operator_concat (GALGAS_sint ((PMSInt32) 8L).substract_operation (var_sliceIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (98)).reader_string (SOURCE_FILE_AT_LINE (98)) COMMA_SOURCE_FILE_AT_LINE (98)).operator_concat (GALGAS_string (" bits (s) are defined, instead of 8") COMMA_SOURCE_FILE_AT_LINE (98)) COMMA_SOURCE_FILE_AT_LINE (98)) ;
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (100)) ;
    var_bitDefinitionString.dotAssign_operation (GALGAS_string (">") COMMA_SOURCE_FILE_AT_LINE (101)) ;
  } break ;
  default:
    break ;
  }
  outArgument_outDeclaration = GALGAS_byteDeclarationInRam::constructor_new (var_name, var_size, var_bitSliceTable, var_bitDefinitionString COMMA_SOURCE_FILE_AT_LINE (103)) ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_declaration_5F_in_5F_ram_i1_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_byte) COMMA_SOURCE_FILE_AT_LINE (34)) ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_variableDeclaration) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (35)) ;
  switch (select_communs_2 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (40)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (41)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (42)) ;
  } break ;
  default:
    break ;
  }
  switch (select_communs_3 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (49)) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      switch (select_communs_5 (inCompiler)) {
      case 1: {
        bool repeatFlag_1 = true ;
        while (repeatFlag_1) {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (60)) ;
          switch (select_communs_7 (inCompiler)) {
          case 1: {
          } break ;
          case 2: {
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (68)) ;
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (69)) ;
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (76)) ;
          } break ;
          default:
            break ;
          }
          switch (select_communs_6 (inCompiler)) {
          case 2: {
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2F_) COMMA_SOURCE_FILE_AT_LINE (84)) ;
          } break ;
          default:
            repeatFlag_1 = false ;
            break ;
          }
        }
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (89)) ;
      } break ;
      default:
        break ;
      }
      switch (select_communs_4 (inCompiler)) {
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (94)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (100)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_declaration_5F_in_5F_ram_i1_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_byte) COMMA_SOURCE_FILE_AT_LINE (34)) ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_variableDeclaration) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (35)) ;
  switch (select_communs_2 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (40)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (41)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (42)) ;
  } break ;
  default:
    break ;
  }
  switch (select_communs_3 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (49)) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      switch (select_communs_5 (inCompiler)) {
      case 1: {
        bool repeatFlag_1 = true ;
        while (repeatFlag_1) {
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (60)) ;
          switch (select_communs_7 (inCompiler)) {
          case 1: {
          } break ;
          case 2: {
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (68)) ;
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (69)) ;
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (76)) ;
          } break ;
          default:
            break ;
          }
          switch (select_communs_6 (inCompiler)) {
          case 2: {
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2F_) COMMA_SOURCE_FILE_AT_LINE (84)) ;
          } break ;
          default:
            repeatFlag_1 = false ;
            break ;
          }
        }
      } break ;
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (89)) ;
      } break ;
      default:
        break ;
      }
      switch (select_communs_4 (inCompiler)) {
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (94)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (100)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_ram_5F_definition_i2_ (GALGAS_ramDefinitionList & ioArgument_ioRamDefinitionList,
                                                          C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ram) COMMA_SOURCE_FILE_AT_LINE (111)) ;
  GALGAS_lstring var_bankName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (112)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (113)) ;
  GALGAS_declarationInRamList var_declarationInRamList = GALGAS_declarationInRamList::constructor_emptyList (SOURCE_FILE_AT_LINE (114)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_8 (inCompiler)) {
    case 2: {
      GALGAS_declarationInRam var_declaration ;
      nt_declaration_5F_in_5F_ram_ (var_declaration, inCompiler) ;
      var_declarationInRamList.addAssign_operation (var_declaration COMMA_SOURCE_FILE_AT_LINE (118)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  ioArgument_ioRamDefinitionList.addAssign_operation (var_bankName, var_declarationInRamList COMMA_SOURCE_FILE_AT_LINE (120)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (121)) ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_ram_5F_definition_i2_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ram) COMMA_SOURCE_FILE_AT_LINE (111)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (112)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (113)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_8 (inCompiler)) {
    case 2: {
      nt_declaration_5F_in_5F_ram_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (121)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_ram_5F_definition_i2_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ram) COMMA_SOURCE_FILE_AT_LINE (111)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (112)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (113)) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_8 (inCompiler)) {
    case 2: {
      nt_declaration_5F_in_5F_ram_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (121)) ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_constant_5F_definition_i3_ (GALGAS_constantDefinitionList & ioArgument_ioConstantDefinitionList,
                                                               C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_const) COMMA_SOURCE_FILE_AT_LINE (129)) ;
  GALGAS_lstring var_constantName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_constantDeclaration) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (130)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE_AT_LINE (131)) ;
  GALGAS_immediatExpression var_expression ;
  nt_immediate_5F_expression_ (var_expression, inCompiler) ;
  ioArgument_ioConstantDefinitionList.addAssign_operation (var_constantName, var_expression COMMA_SOURCE_FILE_AT_LINE (133)) ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_constant_5F_definition_i3_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_const) COMMA_SOURCE_FILE_AT_LINE (129)) ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_constantDeclaration) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (130)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE_AT_LINE (131)) ;
  nt_immediate_5F_expression_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_constant_5F_definition_i3_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_const) COMMA_SOURCE_FILE_AT_LINE (129)) ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_constantDeclaration) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (130)) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE_AT_LINE (131)) ;
  nt_immediate_5F_expression_indexing (inCompiler) ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_expression_i4_ (GALGAS_immediatExpression & outArgument_outExpression,
                                                                C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  nt_immediate_5F_bitwise_5F_term_ (outArgument_outExpression, inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_9 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE_AT_LINE (142)) ;
      GALGAS_immediatExpression var_rightExpression ;
      nt_immediate_5F_bitwise_5F_term_ (var_rightExpression, inCompiler) ;
      outArgument_outExpression = GALGAS_immediatOr::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (144)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5E_) COMMA_SOURCE_FILE_AT_LINE (146)) ;
      GALGAS_immediatExpression var_rightExpression ;
      nt_immediate_5F_bitwise_5F_term_ (var_rightExpression, inCompiler) ;
      outArgument_outExpression = GALGAS_immediatXor::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (148)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_expression_i4_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_immediate_5F_bitwise_5F_term_parse (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_9 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE_AT_LINE (142)) ;
      nt_immediate_5F_bitwise_5F_term_parse (inCompiler) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5E_) COMMA_SOURCE_FILE_AT_LINE (146)) ;
      nt_immediate_5F_bitwise_5F_term_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_expression_i4_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_immediate_5F_bitwise_5F_term_indexing (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_9 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE_AT_LINE (142)) ;
      nt_immediate_5F_bitwise_5F_term_indexing (inCompiler) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5E_) COMMA_SOURCE_FILE_AT_LINE (146)) ;
      nt_immediate_5F_bitwise_5F_term_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_bitwise_5F_term_i5_ (GALGAS_immediatExpression & outArgument_outExpression,
                                                                     C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  nt_immediate_5F_bitwise_5F_factor_ (outArgument_outExpression, inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_10 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__26_) COMMA_SOURCE_FILE_AT_LINE (158)) ;
      GALGAS_immediatExpression var_rightExpression ;
      nt_immediate_5F_bitwise_5F_factor_ (var_rightExpression, inCompiler) ;
      outArgument_outExpression = GALGAS_immediatAnd::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (161)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_bitwise_5F_term_i5_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_immediate_5F_bitwise_5F_factor_parse (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_10 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__26_) COMMA_SOURCE_FILE_AT_LINE (158)) ;
      nt_immediate_5F_bitwise_5F_factor_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_bitwise_5F_term_i5_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_immediate_5F_bitwise_5F_factor_indexing (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_10 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__26_) COMMA_SOURCE_FILE_AT_LINE (158)) ;
      nt_immediate_5F_bitwise_5F_factor_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_bitwise_5F_factor_i6_ (GALGAS_immediatExpression & outArgument_outExpression,
                                                                       C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  nt_immediate_5F_term_ (outArgument_outExpression, inCompiler) ;
  switch (select_communs_11 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D__3D_) COMMA_SOURCE_FILE_AT_LINE (171)) ;
    GALGAS_immediatExpression var_rightExpression ;
    nt_immediate_5F_term_ (var_rightExpression, inCompiler) ;
    outArgument_outExpression = GALGAS_immediatEqualTest::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (174)) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21__3D_) COMMA_SOURCE_FILE_AT_LINE (176)) ;
    GALGAS_immediatExpression var_rightExpression ;
    nt_immediate_5F_term_ (var_rightExpression, inCompiler) ;
    outArgument_outExpression = GALGAS_immediatNotEqualTest::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (179)) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3D_) COMMA_SOURCE_FILE_AT_LINE (181)) ;
    GALGAS_immediatExpression var_rightExpression ;
    nt_immediate_5F_term_ (var_rightExpression, inCompiler) ;
    outArgument_outExpression = GALGAS_immediatGreaterOrEqualTest::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (184)) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3D_) COMMA_SOURCE_FILE_AT_LINE (186)) ;
    GALGAS_immediatExpression var_rightExpression ;
    nt_immediate_5F_term_ (var_rightExpression, inCompiler) ;
    outArgument_outExpression = GALGAS_immediatLowerOrEqualTest::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (189)) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (191)) ;
    GALGAS_immediatExpression var_rightExpression ;
    nt_immediate_5F_term_ (var_rightExpression, inCompiler) ;
    outArgument_outExpression = GALGAS_immediatGreaterTest::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (194)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (196)) ;
    GALGAS_immediatExpression var_rightExpression ;
    nt_immediate_5F_term_ (var_rightExpression, inCompiler) ;
    outArgument_outExpression = GALGAS_immediatLowerTest::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (199)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_bitwise_5F_factor_i6_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_immediate_5F_term_parse (inCompiler) ;
  switch (select_communs_11 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D__3D_) COMMA_SOURCE_FILE_AT_LINE (171)) ;
    nt_immediate_5F_term_parse (inCompiler) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21__3D_) COMMA_SOURCE_FILE_AT_LINE (176)) ;
    nt_immediate_5F_term_parse (inCompiler) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3D_) COMMA_SOURCE_FILE_AT_LINE (181)) ;
    nt_immediate_5F_term_parse (inCompiler) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3D_) COMMA_SOURCE_FILE_AT_LINE (186)) ;
    nt_immediate_5F_term_parse (inCompiler) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (191)) ;
    nt_immediate_5F_term_parse (inCompiler) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (196)) ;
    nt_immediate_5F_term_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_bitwise_5F_factor_i6_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_immediate_5F_term_indexing (inCompiler) ;
  switch (select_communs_11 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D__3D_) COMMA_SOURCE_FILE_AT_LINE (171)) ;
    nt_immediate_5F_term_indexing (inCompiler) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21__3D_) COMMA_SOURCE_FILE_AT_LINE (176)) ;
    nt_immediate_5F_term_indexing (inCompiler) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3D_) COMMA_SOURCE_FILE_AT_LINE (181)) ;
    nt_immediate_5F_term_indexing (inCompiler) ;
  } break ;
  case 5: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3D_) COMMA_SOURCE_FILE_AT_LINE (186)) ;
    nt_immediate_5F_term_indexing (inCompiler) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (191)) ;
    nt_immediate_5F_term_indexing (inCompiler) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (196)) ;
    nt_immediate_5F_term_indexing (inCompiler) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_term_i7_ (GALGAS_immediatExpression & outArgument_outExpression,
                                                          C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  nt_immediate_5F_factor_ (outArgument_outExpression, inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_12 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2B_) COMMA_SOURCE_FILE_AT_LINE (209)) ;
      GALGAS_immediatExpression var_rightExpression ;
      nt_immediate_5F_factor_ (var_rightExpression, inCompiler) ;
      outArgument_outExpression = GALGAS_immediatAdd::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (212)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (214)) ;
      GALGAS_immediatExpression var_rightExpression ;
      nt_immediate_5F_factor_ (var_rightExpression, inCompiler) ;
      outArgument_outExpression = GALGAS_immediatSub::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (217)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3C_) COMMA_SOURCE_FILE_AT_LINE (219)) ;
      GALGAS_immediatExpression var_rightExpression ;
      nt_immediate_5F_factor_ (var_rightExpression, inCompiler) ;
      outArgument_outExpression = GALGAS_immediatLeftShift::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (222)) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3E_) COMMA_SOURCE_FILE_AT_LINE (224)) ;
      GALGAS_immediatExpression var_rightExpression ;
      nt_immediate_5F_factor_ (var_rightExpression, inCompiler) ;
      outArgument_outExpression = GALGAS_immediatRightShift::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (227)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_term_i7_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_immediate_5F_factor_parse (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_12 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2B_) COMMA_SOURCE_FILE_AT_LINE (209)) ;
      nt_immediate_5F_factor_parse (inCompiler) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (214)) ;
      nt_immediate_5F_factor_parse (inCompiler) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3C_) COMMA_SOURCE_FILE_AT_LINE (219)) ;
      nt_immediate_5F_factor_parse (inCompiler) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3E_) COMMA_SOURCE_FILE_AT_LINE (224)) ;
      nt_immediate_5F_factor_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_term_i7_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_immediate_5F_factor_indexing (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_12 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2B_) COMMA_SOURCE_FILE_AT_LINE (209)) ;
      nt_immediate_5F_factor_indexing (inCompiler) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (214)) ;
      nt_immediate_5F_factor_indexing (inCompiler) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3C_) COMMA_SOURCE_FILE_AT_LINE (219)) ;
      nt_immediate_5F_factor_indexing (inCompiler) ;
    } break ;
    case 5: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3E_) COMMA_SOURCE_FILE_AT_LINE (224)) ;
      nt_immediate_5F_factor_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_factor_i8_ (GALGAS_immediatExpression & outArgument_outExpression,
                                                            C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  nt_immediate_5F_primary_ (outArgument_outExpression, inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_13 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE_AT_LINE (237)) ;
      GALGAS_immediatExpression var_rightExpression ;
      nt_immediate_5F_primary_ (var_rightExpression, inCompiler) ;
      outArgument_outExpression = GALGAS_immediatMul::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (240)) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__25_) COMMA_SOURCE_FILE_AT_LINE (242)) ;
      GALGAS_immediatExpression var_rightExpression ;
      nt_immediate_5F_primary_ (var_rightExpression, inCompiler) ;
      outArgument_outExpression = GALGAS_immediatMod::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (245)) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2F_) COMMA_SOURCE_FILE_AT_LINE (247)) ;
      GALGAS_immediatExpression var_rightExpression ;
      nt_immediate_5F_primary_ (var_rightExpression, inCompiler) ;
      outArgument_outExpression = GALGAS_immediatDiv::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (250)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_factor_i8_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_immediate_5F_primary_parse (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_13 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE_AT_LINE (237)) ;
      nt_immediate_5F_primary_parse (inCompiler) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__25_) COMMA_SOURCE_FILE_AT_LINE (242)) ;
      nt_immediate_5F_primary_parse (inCompiler) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2F_) COMMA_SOURCE_FILE_AT_LINE (247)) ;
      nt_immediate_5F_primary_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_factor_i8_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  nt_immediate_5F_primary_indexing (inCompiler) ;
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_communs_13 (inCompiler)) {
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE_AT_LINE (237)) ;
      nt_immediate_5F_primary_indexing (inCompiler) ;
    } break ;
    case 3: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__25_) COMMA_SOURCE_FILE_AT_LINE (242)) ;
      nt_immediate_5F_primary_indexing (inCompiler) ;
    } break ;
    case 4: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2F_) COMMA_SOURCE_FILE_AT_LINE (247)) ;
      nt_immediate_5F_primary_indexing (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_primary_i9_ (GALGAS_immediatExpression & outArgument_outExpression,
                                                             C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  switch (select_communs_14 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (259)) ;
    GALGAS_immediatExpression var_expression ;
    nt_immediate_5F_primary_ (var_expression, inCompiler) ;
    outArgument_outExpression = GALGAS_immediatNegate::constructor_new (var_expression COMMA_SOURCE_FILE_AT_LINE (262)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7E_) COMMA_SOURCE_FILE_AT_LINE (264)) ;
    GALGAS_immediatExpression var_expression ;
    nt_immediate_5F_primary_ (var_expression, inCompiler) ;
    outArgument_outExpression = GALGAS_immediatComplement::constructor_new (var_expression COMMA_SOURCE_FILE_AT_LINE (267)) ;
  } break ;
  case 3: {
    GALGAS_luint var_constant = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (269)) ;
    outArgument_outExpression = GALGAS_immediatInteger::constructor_new (var_constant COMMA_SOURCE_FILE_AT_LINE (270)) ;
  } break ;
  case 4: {
    GALGAS_lchar var_literalCharValue = inCompiler->synthetizedAttribute_charValue () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char) COMMA_SOURCE_FILE_AT_LINE (272)) ;
    outArgument_outExpression = GALGAS_immediatInteger::constructor_new (GALGAS_luint::constructor_new (var_literalCharValue.reader_char (SOURCE_FILE_AT_LINE (273)).reader_uint (SOURCE_FILE_AT_LINE (273)), var_literalCharValue.reader_location (SOURCE_FILE_AT_LINE (273)) COMMA_SOURCE_FILE_AT_LINE (273)) COMMA_SOURCE_FILE_AT_LINE (273)) ;
  } break ;
  case 5: {
    GALGAS_lstring var_registerName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_variableUse) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (275)) ;
    GALGAS_luint var_offset ;
    switch (select_communs_15 (inCompiler)) {
    case 1: {
      var_offset = GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (278)) ;
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (280)) ;
      var_offset = inCompiler->synthetizedAttribute_uint_33__32_value () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (281)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (282)) ;
    } break ;
    default:
      break ;
    }
    GALGAS_registerExpression var_registerExpression = GALGAS_registerExpression::constructor_new (var_registerName, var_offset COMMA_SOURCE_FILE_AT_LINE (284)) ;
    outArgument_outExpression = GALGAS_immediatRegister::constructor_new (var_registerExpression COMMA_SOURCE_FILE_AT_LINE (288)) ;
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (290)) ;
    nt_immediate_5F_expression_ (outArgument_outExpression, inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (292)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__40_) COMMA_SOURCE_FILE_AT_LINE (294)) ;
    GALGAS_lstring var_registerName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (295)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (296)) ;
    GALGAS_immediatSliceExpressionList var_sliceExpressionList = GALGAS_immediatSliceExpressionList::constructor_emptyList (SOURCE_FILE_AT_LINE (297)) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      GALGAS_lstring var_sliceName = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (299)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (300)) ;
      GALGAS_immediatExpression var_expression ;
      nt_immediate_5F_expression_ (var_expression, inCompiler) ;
      var_sliceExpressionList.addAssign_operation (var_sliceName, var_expression COMMA_SOURCE_FILE_AT_LINE (303)) ;
      switch (select_communs_16 (inCompiler)) {
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (305)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (307)) ;
    outArgument_outExpression = GALGAS_immediatSlice::constructor_new (var_registerName, var_sliceExpressionList COMMA_SOURCE_FILE_AT_LINE (308)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_primary_i9_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_communs_14 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (259)) ;
    nt_immediate_5F_primary_parse (inCompiler) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7E_) COMMA_SOURCE_FILE_AT_LINE (264)) ;
    nt_immediate_5F_primary_parse (inCompiler) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (269)) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char) COMMA_SOURCE_FILE_AT_LINE (272)) ;
  } break ;
  case 5: {
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_variableUse) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (275)) ;
    switch (select_communs_15 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (280)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (281)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (282)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (290)) ;
    nt_immediate_5F_expression_parse (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (292)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__40_) COMMA_SOURCE_FILE_AT_LINE (294)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (295)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (296)) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (299)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (300)) ;
      nt_immediate_5F_expression_parse (inCompiler) ;
      switch (select_communs_16 (inCompiler)) {
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (305)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (307)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_immediate_5F_primary_i9_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_communs_14 (inCompiler)) {
  case 1: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (259)) ;
    nt_immediate_5F_primary_indexing (inCompiler) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7E_) COMMA_SOURCE_FILE_AT_LINE (264)) ;
    nt_immediate_5F_primary_indexing (inCompiler) ;
  } break ;
  case 3: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (269)) ;
  } break ;
  case 4: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char) COMMA_SOURCE_FILE_AT_LINE (272)) ;
  } break ;
  case 5: {
    inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_variableUse) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (275)) ;
    switch (select_communs_15 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (280)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (281)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (282)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 6: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (290)) ;
    nt_immediate_5F_expression_indexing (inCompiler) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (292)) ;
  } break ;
  case 7: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__40_) COMMA_SOURCE_FILE_AT_LINE (294)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (295)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (296)) ;
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (299)) ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (300)) ;
      nt_immediate_5F_expression_indexing (inCompiler) ;
      switch (select_communs_16 (inCompiler)) {
      case 2: {
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (305)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (307)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_register_5F_parsing_i10_ (GALGAS_registerExpression & outArgument_outRegisterExpression,
                                                             C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outRegisterExpression.drop () ; // Release 'out' argument
  GALGAS_lstring var_registerName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_variableUse) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (315)) ;
  GALGAS_luint var_offset ;
  switch (select_communs_17 (inCompiler)) {
  case 1: {
    var_offset = GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (318)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (320)) ;
    var_offset = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (321)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (322)) ;
  } break ;
  default:
    break ;
  }
  outArgument_outRegisterExpression = GALGAS_registerExpression::constructor_new (var_registerName, var_offset COMMA_SOURCE_FILE_AT_LINE (324)) ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_register_5F_parsing_i10_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_variableUse) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (315)) ;
  switch (select_communs_17 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (320)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (321)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (322)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_register_5F_parsing_i10_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->enterIndexing (C_Lexique_piccolo_5F_lexique::kIndexing_variableUse) ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (315)) ;
  switch (select_communs_17 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (320)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (321)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (322)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_bit_5F_number_5F_parsing_i11_ (GALGAS_bitNumberExpression & outArgument_outBitNumber,
                                                                  C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outBitNumber.drop () ; // Release 'out' argument
  GALGAS_lstring var_bitNumberLabel = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (333)) ;
  GALGAS_luint var_bitIndex ;
  switch (select_communs_18 (inCompiler)) {
  case 1: {
    var_bitIndex = GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (336)) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (338)) ;
    var_bitIndex = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (339)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (340)) ;
  } break ;
  default:
    break ;
  }
  outArgument_outBitNumber = GALGAS_bitNumberLabelValue::constructor_new (var_bitNumberLabel, var_bitIndex COMMA_SOURCE_FILE_AT_LINE (342)) ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_bit_5F_number_5F_parsing_i11_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (333)) ;
  switch (select_communs_18 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (338)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (339)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (340)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_bit_5F_number_5F_parsing_i11_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (333)) ;
  switch (select_communs_18 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (338)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (339)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (340)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_bit_5F_number_5F_parsing_i12_ (GALGAS_bitNumberExpression & outArgument_outBitNumber,
                                                                  C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outBitNumber.drop () ; // Release 'out' argument
  GALGAS_luint var_bitNumberLiteral = inCompiler->synthetizedAttribute_uint_33__32_value () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (348)) ;
  outArgument_outBitNumber = GALGAS_bitNumberLiteralValue::constructor_new (var_bitNumberLiteral COMMA_SOURCE_FILE_AT_LINE (349)) ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_bit_5F_number_5F_parsing_i12_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (348)) ;
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_bit_5F_number_5F_parsing_i12_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (348)) ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_optional_5F_w_5F_as_5F_dest_i13_ (GALGAS_bool & outArgument_out_5F_W_5F_isDestination,
                                                                     C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_out_5F_W_5F_isDestination.drop () ; // Release 'out' argument
  switch (select_communs_19 (inCompiler)) {
  case 1: {
    outArgument_out_5F_W_5F_isDestination = GALGAS_bool (false) ;
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (358)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (359)) ;
    outArgument_out_5F_W_5F_isDestination = GALGAS_bool (true) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_optional_5F_w_5F_as_5F_dest_i13_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_communs_19 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (358)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (359)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//---------------------------------------------------------------------------*

void cParser_communs::rule_communs_optional_5F_w_5F_as_5F_dest_i13_indexing (C_Lexique_piccolo_5F_lexique * inCompiler) {
  switch (select_communs_19 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (358)) ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (359)) ;
  } break ;
  default:
    break ;
  }
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


