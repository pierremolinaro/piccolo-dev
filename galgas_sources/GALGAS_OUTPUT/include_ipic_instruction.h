//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'include_ipic_instruction.h'                      *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      july 30th, 2008, at 13h59'39"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_ipic_instruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_ipic_instruction : public cPtr__AC_galgas_class {
//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//--- Constructor
  public : cPtr_ipic_instruction (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_ipic_instruction (void) {}
  #endif

//--- Attributes
//--- Method 'instructionLength'
  public : virtual void method_instructionLength (C_Compiler &,
                                GGS_uint & 
                                COMMA_LOCATION_ARGS) const = 0 ;

//--- Method 'displayIPICinstruction'
  public : virtual void method_displayIPICinstruction (C_Compiler &,
                                GGS_string& 
                                COMMA_LOCATION_ARGS) const = 0 ;

//--- Method 'setCurrentAddress'
  public : virtual void method_setCurrentAddress (C_Compiler &,
                                GGS_uint & 
                                COMMA_LOCATION_ARGS) const ;

//--- Method 'isLABELorORG'
  public : virtual void method_isLABELorORG (C_Compiler &,
                                GGS_bool& 
                                COMMA_LOCATION_ARGS) const ;

//--- Method 'isNULL'
  public : virtual void method_isNULL (C_Compiler &,
                                GGS_bool& 
                                COMMA_LOCATION_ARGS) const ;

//--- Method 'nextInstructionIsReachable'
  public : virtual void method_nextInstructionIsReachable (C_Compiler &,
                                GGS_bool& 
                                COMMA_LOCATION_ARGS) const ;

//--- Method 'isSkippingInstruction'
  public : virtual void method_isSkippingInstruction (C_Compiler &,
                                GGS_bool& 
                                COMMA_LOCATION_ARGS) const ;

//--- Method 'enterReferencedLabel'
  public : virtual void method_enterReferencedLabel (C_Compiler &,
                                GGS_stringset & 
                                COMMA_LOCATION_ARGS) const ;

//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*

