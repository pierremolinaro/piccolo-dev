//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'ipic18_build_binary_code.h'                      *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                        may 2nd, 2010, at 21h0'9"                          *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef ipic18_build_binary_code_DEFINED
#define ipic18_build_binary_code_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "ipic18_build_assembly_code.h"
#include "ipic18_metamodel.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_ipic18_symbolTable ;
class GGS_emittedCodeList ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@ipic18_symbolTable'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ipic18_symbolTable ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ipic18_symbolTable ;

//---------------------------------------------------------------------------*

class GGS_ipic18_symbolTable : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_ipic18_symbolTable cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_ipic18_symbolTable & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_ipic18_symbolTable & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ipic18_symbolTable castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_ipic18_symbolTable * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_ipic18_symbolTable * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_ipic18_symbolTable constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_uint &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_uint & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_uint & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_ipic18_symbolTable constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_ipic18_symbolTable & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_ipic18_symbolTable reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_ipic18_symbolTable & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_ipic18_symbolTable & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mRoutineAddress (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@ipic18_instruction.enterLabelAtAddress'          *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__ipic18_instruction__enterLabelAtAddress)  (C_Compiler & inLexique,
                                const cPtr_ipic18_instruction * inObjectPtr,
                                GGS_ipic18_symbolTable  & var_cas_ioRoutineSymbolTable,
                                GGS_uint  & var_cas_ioAddress
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__ipic18_instruction__enterLabelAtAddress (typeCategoryMethod__ipic18_instruction__enterLabelAtAddress inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__ipic18_instruction__enterLabelAtAddress
findCategoryMethod__ipic18_instruction__enterLabelAtAddress (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         list '@emittedCodeList'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_emittedCodeList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_emittedCodeList ;

//---------------------------------------------------------------------------*

class GGS_emittedCodeList : public AC_GGS_list {
  public : typedef elementOf_GGS_emittedCodeList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_emittedCodeList constructor_emptyList (void) ;
  public : static GGS_emittedCodeList constructor_listWithValue (const GGS_uintlist & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_emittedCodeList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_emittedCodeList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_emittedCodeList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_emittedCodeList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_uintlist & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_uintlist & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_uintlist & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_uintlist & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_emittedCodeList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_uintlist & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_emittedCodeList operator_concat (const GGS_emittedCodeList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_uintlist & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_uintlist & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_uintlist & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_uintlist 
  reader_mCodeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMCodeAtIndex (C_Compiler & inLexique,
                              const GGS_uintlist  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_emittedCodeList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_emittedCodeList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uintlist   & _mCode (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@ipic18_instruction.generateBinaryCodeAtAddress'      *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__ipic18_instruction__generateBinaryCodeAtAddress)  (C_Compiler & inLexique,
                                const cPtr_ipic18_instruction * inObjectPtr,
                                const GGS_ipic18_symbolTable   var_cas_inRoutineSymbolTable,
                                GGS_uint  & var_cas_ioAddress,
                                GGS_emittedCodeList  & var_cas_ioCode
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__ipic18_instruction__generateBinaryCodeAtAddress (typeCategoryMethod__ipic18_instruction__generateBinaryCodeAtAddress inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__ipic18_instruction__generateBinaryCodeAtAddress
findCategoryMethod__ipic18_instruction__generateBinaryCodeAtAddress (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'getBccBaseCode'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_getBccBaseCode (C_Compiler &,
                                const GGS_conditional_branch ,
                                GGS_uint  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Routine 'emitConditionalBranchInstruction'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_emitConditionalBranchInstruction (C_Compiler &,
                                const GGS_uint  ,
                                const GGS_uint  ,
                                const GGS_location  ,
                                const GGS_conditional_branch ,
                                GGS_emittedCodeList  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'emitBRAinstruction'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_emitBRAinstruction (C_Compiler &,
                                const GGS_uint  ,
                                const GGS_uint  ,
                                const GGS_location  ,
                                GGS_emittedCodeList  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'emit_pic18_GOTOinstruction'                    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_emit_pic18_GOTOinstruction (C_Compiler &,
                                const GGS_uint  ,
                                GGS_emittedCodeList  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'emit_pic18_CALLinstruction'                    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_emit_pic18_CALLinstruction (C_Compiler &,
                                const GGS_uint  ,
                                GGS_emittedCodeList  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'emitRCALLinstruction'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_emitRCALLinstruction (C_Compiler &,
                                const GGS_uint  ,
                                const GGS_uint  ,
                                const GGS_lstring  ,
                                GGS_emittedCodeList  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'build_ipic18_binary_code'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_ipic18_binary_code (C_Compiler &,
                                const GGS_ipic18_instructionList  ,
                                const GGS_uint  ,
                                const GGS_actualConfigurationMap  ,
                                GGS_uint  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@ipic18_symbolTable'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_ipic18_symbolTable {
  public : GGS_uint  mRoutineAddress ;

  public : e_ipic18_symbolTable (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_ipic18_symbolTable : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_ipic18_symbolTable (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_ipic18_symbolTable & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_ipic18_symbolTable * nextObject (void) const { return (elementOf_GGS_ipic18_symbolTable *) mNextItem ; }
  public : inline elementOf_GGS_ipic18_symbolTable * infObject (void) const { return (elementOf_GGS_ipic18_symbolTable *) mInfPtr ; }
  public : inline elementOf_GGS_ipic18_symbolTable * supObject (void) const { return (elementOf_GGS_ipic18_symbolTable *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_ipic18_symbolTable mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@emittedCodeList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_emittedCodeList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_uintlist  mCode ;
//--- Constructor
  public : elementOf_GGS_emittedCodeList (const GGS_uintlist & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_emittedCodeList * nextObject (void) const { return (elementOf_GGS_emittedCodeList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_emittedCodeList * previousObject (void) const { return (elementOf_GGS_emittedCodeList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_emittedCodeList ;
} ;

//---------------------------------------------------------------------------*

#endif
