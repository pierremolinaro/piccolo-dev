//---------------------------------------------------------------------------*
//                                                                           *
//               File 'ipic18_build_block_representation.cpp'                *
//                        Generated by version 2.5.0                         *
//                      august 2nd, 2013, at 23h21'59"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "ipic18_build_block_representation.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "piccolo_options.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "ipic18_build_block_representation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'registerComparisonComplementary'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_registerComparisonComplementary (const GALGAS_pic_31__38_RegisterComparison constinArgument0,
                                              GALGAS_pic_31__38_RegisterComparison & outArgument1,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Routine 'registerComparisonInstructionCount'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_registerComparisonInstructionCount (const GALGAS_pic_31__38_RegisterComparison constinArgument0,
                                                 GALGAS_uint & outArgument1,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'analyzeInstructionList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeInstructionList (const GALGAS_instructionList constinArgument0,
                                     GALGAS_ipic_31__38_BlockList & ioArgument1,
                                     const GALGAS_uint constinArgument2,
                                     const GALGAS_routineMap constinArgument3,
                                     const GALGAS_registerTable constinArgument4,
                                     const GALGAS_dataMap constinArgument5,
                                     const GALGAS_constantMap constinArgument6,
                                     GALGAS_uint & ioArgument7,
                                     GALGAS_ipic_31__38_Block & ioArgument8,
                                     GALGAS_string & ioArgument9,
                                     GALGAS_uint & ioArgument10,
                                     const GALGAS_bool constinArgument11,
                                     GALGAS_bool & outArgument12,
                                     const GALGAS_routineKind constinArgument13,
                                     C_Compiler * inCompiler
                                     COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'displayBlockList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_displayBlockList (GALGAS_string & ioArgument0,
                               const GALGAS_ipic_31__38_BlockList constinArgument1,
                               C_Compiler * inCompiler
                               COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'registerComparisonComplementary'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_registerComparisonComplementary (const GALGAS_pic_31__38_RegisterComparison constinArgument_inComparison,
                                              GALGAS_pic_31__38_RegisterComparison & outArgument_outComparison,
                                              C_Compiler * /* inCompiler */
                                              COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outComparison.drop () ; // Release 'out' argument
  if (constinArgument_inComparison.isValid ()) {
    switch (constinArgument_inComparison.enumValue ()) {
    case GALGAS_pic_31__38_RegisterComparison::kNotBuilt:
      break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_notEqual: {
      outArgument_outComparison = GALGAS_pic_31__38_RegisterComparison::constructor_equal (SOURCE_FILE_AT_LINE (2009)) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_equal: {
      outArgument_outComparison = GALGAS_pic_31__38_RegisterComparison::constructor_notEqual (SOURCE_FILE_AT_LINE (2010)) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_greaterOrEqual: {
      outArgument_outComparison = GALGAS_pic_31__38_RegisterComparison::constructor_lower (SOURCE_FILE_AT_LINE (2011)) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_greater: {
      outArgument_outComparison = GALGAS_pic_31__38_RegisterComparison::constructor_lowerOrEqual (SOURCE_FILE_AT_LINE (2012)) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_lowerOrEqual: {
      outArgument_outComparison = GALGAS_pic_31__38_RegisterComparison::constructor_greater (SOURCE_FILE_AT_LINE (2013)) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_lower: {
      outArgument_outComparison = GALGAS_pic_31__38_RegisterComparison::constructor_greaterOrEqual (SOURCE_FILE_AT_LINE (2014)) ;
      } break ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//               Routine 'registerComparisonInstructionCount'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_registerComparisonInstructionCount (const GALGAS_pic_31__38_RegisterComparison constinArgument_inComparison,
                                                 GALGAS_uint & outArgument_outInstructionCount,
                                                 C_Compiler * /* inCompiler */
                                                 COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outInstructionCount.drop () ; // Release 'out' argument
  if (constinArgument_inComparison.isValid ()) {
    switch (constinArgument_inComparison.enumValue ()) {
    case GALGAS_pic_31__38_RegisterComparison::kNotBuilt:
      break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_notEqual: {
      outArgument_outInstructionCount = GALGAS_uint ((PMUInt32) 2U) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_equal: {
      outArgument_outInstructionCount = GALGAS_uint ((PMUInt32) 3U) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_greaterOrEqual: {
      outArgument_outInstructionCount = GALGAS_uint ((PMUInt32) 2U) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_greater: {
      outArgument_outInstructionCount = GALGAS_uint ((PMUInt32) 3U) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_lowerOrEqual: {
      outArgument_outInstructionCount = GALGAS_uint ((PMUInt32) 2U) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_lower: {
      outArgument_outInstructionCount = GALGAS_uint ((PMUInt32) 3U) ;
      } break ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'analyzeInstructionList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeInstructionList (const GALGAS_instructionList constinArgument_inInstructionList,
                                     GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                     const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                     const GALGAS_routineMap constinArgument_inRoutineMap,
                                     const GALGAS_registerTable constinArgument_inRegisterTable,
                                     const GALGAS_dataMap constinArgument_inDataMap,
                                     const GALGAS_constantMap constinArgument_inConstantMap,
                                     GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                     GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                     GALGAS_string & ioArgument_ioListFileContents,
                                     GALGAS_uint & ioArgument_ioCurrentBank,
                                     const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                     GALGAS_bool & outArgument_outContinuesInSequence,
                                     const GALGAS_routineKind constinArgument_inRoutineKind,
                                     C_Compiler * inCompiler
                                     COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outContinuesInSequence.drop () ; // Release 'out' argument
  outArgument_outContinuesInSequence = GALGAS_bool (true) ;
  cEnumerator_instructionList enumerator_79572 (constinArgument_inInstructionList, kEnumeration_up) ;
  while (enumerator_79572.hasCurrentObject ()) {
    const enumGalgasBool test_0 = outArgument_outContinuesInSequence.operator_not (SOURCE_FILE_AT_LINE (2310)).boolEnum () ;
    if (kBoolTrue == test_0) {
      inCompiler->emitSemanticError (enumerator_79572.current_mInstruction (HERE).reader_mInstructionLocation (SOURCE_FILE_AT_LINE (2311)), GALGAS_string ("Unreachable code") COMMA_SOURCE_FILE_AT_LINE (2311)) ;
      outArgument_outContinuesInSequence = GALGAS_bool (true) ;
    }
    callCategoryMethod_analyze ((const cPtr_pic_31__38_PiccoloInstruction *) enumerator_79572.current_mInstruction (HERE).ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioGeneratedBlockList, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioLocalLabelIndex, ioArgument_ioCurrentBlock, ioArgument_ioListFileContents, ioArgument_ioCurrentBank, constinArgument_inShouldPreserveBSR, outArgument_outContinuesInSequence, constinArgument_inRoutineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (2314)) ;
    enumerator_79572.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'displayBlockList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_displayBlockList (GALGAS_string & ioArgument_ioListFileContents,
                               const GALGAS_ipic_31__38_BlockList constinArgument_inGeneratedBlockList,
                               C_Compiler * inCompiler
                               COMMA_UNUSED_LOCATION_ARGS) {
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string::makeEmptyString ().reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (2338)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (2338)) COMMA_SOURCE_FILE_AT_LINE (2338)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*").operator_concat (GALGAS_string ("INTERMEDIATE BLOCK REPRESENTATION").reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 77U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (2339)) COMMA_SOURCE_FILE_AT_LINE (2339)).operator_concat (GALGAS_string ("*\n") COMMA_SOURCE_FILE_AT_LINE (2339)) COMMA_SOURCE_FILE_AT_LINE (2339)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string::makeEmptyString ().reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (2340)).operator_concat (GALGAS_string ("\n"
    "\n") COMMA_SOURCE_FILE_AT_LINE (2340)) COMMA_SOURCE_FILE_AT_LINE (2340)) ;
  cEnumerator_ipic_31__38_BlockList enumerator_80604 (constinArgument_inGeneratedBlockList, kEnumeration_up) ;
  while (enumerator_80604.hasCurrentObject ()) {
    categoryMethod_display (enumerator_80604.current_mBlock (HERE), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2342)) ;
    enumerator_80604.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//             Routine 'build_ipic18_block_representation_list'              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_5F_ipic_31__38__5F_block_5F_representation_5F_list (const GALGAS_sint constinArgument_inROMSize,
                                                                       const GALGAS_sint constinArgument_inRAMSize,
                                                                       const GALGAS_routineDeclarationList constinArgument_inBootloaderRoutineDeclarationListForBootloaderImplementation,
                                                                       const GALGAS_routineDeclarationList constinArgument_inUserRoutineDeclarationListForBootloaderImplementation,
                                                                       const GALGAS_luint constinArgument_inBootloaderReservedROMsize,
                                                                       const GALGAS_routineDeclarationList constinArgument_inBootloaderRoutineDeclarationListForUserProgramImplementation,
                                                                       const GALGAS_routineDeclarationList constinArgument_inUserRoutineDeclarationListForUserProgramImplementation,
                                                                       const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                       const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                       const GALGAS_dataMap constinArgument_inDataMap,
                                                                       const GALGAS_piccoloModel constinArgument_inPiccoloModel,
                                                                       const GALGAS_bool constinArgument_inHasHighInterrupt,
                                                                       const GALGAS_bool constinArgument_inHasLowInterrupt,
                                                                       const GALGAS_constantMap constinArgument_inDataLengthConstantMap,
                                                                       GALGAS_ipic_31__38_BlockList & outArgument_outGeneratedBlockList,
                                                                       GALGAS_string & ioArgument_ioListFileContents,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outGeneratedBlockList.drop () ; // Release 'out' argument
  GALGAS_routineMap var_routineMap = GALGAS_routineMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2367)) ;
  cEnumerator_routineDeclarationList enumerator_81692 (constinArgument_inUserRoutineDeclarationListForBootloaderImplementation, kEnumeration_up) ;
  while (enumerator_81692.hasCurrentObject ()) {
    {
    var_routineMap.modifier_insertKey (enumerator_81692.current_mRoutineName (HERE), enumerator_81692.current_mIsNoReturn (HERE), enumerator_81692.current_mRequiredBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2369)), enumerator_81692.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2369)), enumerator_81692.current_mPreservesBank (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (2369)) ;
    }
    enumerator_81692.gotoNextObject () ;
  }
  cEnumerator_routineDeclarationList enumerator_81902 (constinArgument_inBootloaderRoutineDeclarationListForUserProgramImplementation, kEnumeration_up) ;
  while (enumerator_81902.hasCurrentObject ()) {
    {
    var_routineMap.modifier_insertKey (enumerator_81902.current_mRoutineName (HERE), enumerator_81902.current_mIsNoReturn (HERE), enumerator_81902.current_mRequiredBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2372)), enumerator_81902.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2372)), enumerator_81902.current_mPreservesBank (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (2372)) ;
    }
    enumerator_81902.gotoNextObject () ;
  }
  cEnumerator_routineDefinitionList enumerator_82089 (constinArgument_inPiccoloModel.reader_mRoutineDefinitionList (SOURCE_FILE_AT_LINE (2374)), kEnumeration_up) ;
  while (enumerator_82089.hasCurrentObject ()) {
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, enumerator_82089.current_mRequiredBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2375)).objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2375)))).operator_and (GALGAS_bool (kIsStrictSup, enumerator_82089.current_mRequiredBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2375)).objectCompare (GALGAS_uint ((PMUInt32) 15U))) COMMA_SOURCE_FILE_AT_LINE (2375)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_location location_1 (enumerator_82089.current_mRequiredBank (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the required bank value should be lower or equal to 15") COMMA_SOURCE_FILE_AT_LINE (2376)) ;
    }
    const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, enumerator_82089.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2378)).objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2378)))).operator_and (GALGAS_bool (kIsStrictSup, enumerator_82089.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2378)).objectCompare (GALGAS_uint ((PMUInt32) 15U))) COMMA_SOURCE_FILE_AT_LINE (2378)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (enumerator_82089.current_mReturnedBank (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("the returned bank value should be lower or equal to 15") COMMA_SOURCE_FILE_AT_LINE (2379)) ;
    }
    {
    var_routineMap.modifier_insertKey (enumerator_82089.current_mRoutineName (HERE), enumerator_82089.current_mIsNoReturn (HERE), enumerator_82089.current_mRequiredBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2381)), enumerator_82089.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2381)), enumerator_82089.current_mPreservesBank (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (2381)) ;
    }
    enumerator_82089.gotoNextObject () ;
  }
  GALGAS_constantMap var_constantMap = constinArgument_inDataLengthConstantMap ;
  {
  var_constantMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("ROM_SIZE"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2386)), constinArgument_inROMSize, inCompiler COMMA_SOURCE_FILE_AT_LINE (2386)) ;
  }
  {
  var_constantMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("RAM_SIZE"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2387)), constinArgument_inRAMSize, inCompiler COMMA_SOURCE_FILE_AT_LINE (2387)) ;
  }
  const enumGalgasBool test_4 = GALGAS_bool (kIsNotEqual, constinArgument_inPiccoloModel.mAttribute_mProgramKind.objectCompare (GALGAS_programKind::constructor_regularProgram (SOURCE_FILE_AT_LINE (2389)))).boolEnum () ;
  if (kBoolTrue == test_4) {
    GALGAS_lstring var_bootloaderSizeString = GALGAS_lstring::constructor_new (GALGAS_string ("BOOTLOADER_RESERVED_SIZE"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2390)) ;
    {
    var_constantMap.modifier_insertKey (var_bootloaderSizeString, constinArgument_inBootloaderReservedROMsize.reader_uint (SOURCE_FILE_AT_LINE (2391)).reader_sint (inCompiler COMMA_SOURCE_FILE_AT_LINE (2391)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2391)) ;
    }
  }
  cEnumerator_constantDefinitionList enumerator_83266 (constinArgument_inPiccoloModel.reader_mConstantDefinitionList (SOURCE_FILE_AT_LINE (2394)), kEnumeration_up) ;
  while (enumerator_83266.hasCurrentObject ()) {
    GALGAS_sint var_result ;
    callCategoryMethod_eval ((const cPtr_immediatExpression *) enumerator_83266.current_mExpression (HERE).ptr (), constinArgument_inRegisterTable, var_constantMap, var_result, inCompiler COMMA_SOURCE_FILE_AT_LINE (2395)) ;
    const enumGalgasBool test_5 = constinArgument_inRegisterTable.reader_hasKey (enumerator_83266.current_mConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (2396)) COMMA_SOURCE_FILE_AT_LINE (2396)).boolEnum () ;
    if (kBoolTrue == test_5) {
      GALGAS_location location_6 (enumerator_83266.current_mConstantName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_6, GALGAS_string ("'").operator_concat (enumerator_83266.current_mConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (2397)) COMMA_SOURCE_FILE_AT_LINE (2397)).operator_concat (GALGAS_string ("' is already declared as ram register or special register") COMMA_SOURCE_FILE_AT_LINE (2397)) COMMA_SOURCE_FILE_AT_LINE (2397)) ;
    }else if (kBoolFalse == test_5) {
      {
      var_constantMap.modifier_insertKey (enumerator_83266.current_mConstantName (HERE), var_result, inCompiler COMMA_SOURCE_FILE_AT_LINE (2399)) ;
      }
    }
    enumerator_83266.gotoNextObject () ;
  }
  const enumGalgasBool test_7 = GALGAS_bool (gOption_piccolo_5F_options_ouputListingFile.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_7) {
    {
    routine_print_5F_constant_5F_definition (var_constantMap, ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2404)) ;
    }
  }
  const enumGalgasBool test_8 = GALGAS_bool (kIsNotEqual, constinArgument_inPiccoloModel.mAttribute_mProgramKind.objectCompare (GALGAS_programKind::constructor_userProgram (SOURCE_FILE_AT_LINE (2410)))).boolEnum () ;
  if (kBoolTrue == test_8) {
    const enumGalgasBool test_9 = var_routineMap.reader_hasKey (GALGAS_string ("main") COMMA_SOURCE_FILE_AT_LINE (2411)).boolEnum () ;
    if (kBoolTrue == test_9) {
      GALGAS_bool var_isNoReturn ;
      GALGAS_uint var_requiredBank ;
      GALGAS_uint joker_84134_0 ; // Joker input parameter
      GALGAS_bool joker_84137_0 ; // Joker input parameter
      var_routineMap.method_searchKey (GALGAS_lstring::constructor_new (GALGAS_string ("main"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2414)), var_isNoReturn, var_requiredBank, joker_84134_0, joker_84137_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2414)) ;
      const enumGalgasBool test_10 = var_isNoReturn.operator_not (SOURCE_FILE_AT_LINE (2415)).boolEnum () ;
      if (kBoolTrue == test_10) {
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("the \"main\" should be declared with \"noreturn\" qualifier: \"noreturn main requiresbank 0\"") COMMA_SOURCE_FILE_AT_LINE (2416)) ;
      }
      const enumGalgasBool test_11 = GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
      if (kBoolTrue == test_11) {
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("the \"main\" should be declared with \"requiresbank 0\" qualifier: \"noreturn main requiresbank 0\"") COMMA_SOURCE_FILE_AT_LINE (2419)) ;
      }
    }else if (kBoolFalse == test_9) {
      inCompiler->emitSemanticError (constinArgument_inPiccoloModel.reader_mEndOfProgram (SOURCE_FILE_AT_LINE (2422)), GALGAS_string ("the program should declare the \"main\" routine") COMMA_SOURCE_FILE_AT_LINE (2422)) ;
    }
  }
  outArgument_outGeneratedBlockList = GALGAS_ipic_31__38_BlockList::constructor_emptyList (SOURCE_FILE_AT_LINE (2426)) ;
  GALGAS_uint var_entryPoint = GALGAS_uint ((PMUInt32) 4U) ;
  cEnumerator_routineDeclarationList enumerator_84848 (constinArgument_inBootloaderRoutineDeclarationListForUserProgramImplementation, kEnumeration_up) ;
  while (enumerator_84848.hasCurrentObject ()) {
    outArgument_outGeneratedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (var_entryPoint, GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE_AT_LINE (2431)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2432)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (enumerator_84848.current_mRoutineName (HERE) COMMA_SOURCE_FILE_AT_LINE (2433)) COMMA_SOURCE_FILE_AT_LINE (2429)) COMMA_SOURCE_FILE_AT_LINE (2429)) ;
    var_entryPoint = var_entryPoint.add_operation (GALGAS_uint ((PMUInt32) 4U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2435)) ;
    const enumGalgasBool test_12 = GALGAS_bool (kIsEqual, var_entryPoint.objectCompare (GALGAS_uint ((PMUInt32) 8U))).boolEnum () ;
    if (kBoolTrue == test_12) {
      var_entryPoint = GALGAS_uint ((PMUInt32) 12U) ;
    }else if (kBoolFalse == test_12) {
      const enumGalgasBool test_13 = GALGAS_bool (kIsEqual, var_entryPoint.objectCompare (GALGAS_uint ((PMUInt32) 24U))).boolEnum () ;
      if (kBoolTrue == test_13) {
        var_entryPoint = GALGAS_uint ((PMUInt32) 28U) ;
      }
    }
    enumerator_84848.gotoNextObject () ;
  }
  var_entryPoint = constinArgument_inBootloaderReservedROMsize.reader_uint (SOURCE_FILE_AT_LINE (2443)) ;
  cEnumerator_routineDeclarationList enumerator_85435 (constinArgument_inUserRoutineDeclarationListForUserProgramImplementation, kEnumeration_up) ;
  while (enumerator_85435.hasCurrentObject ()) {
    outArgument_outGeneratedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (var_entryPoint, GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE_AT_LINE (2447)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2448)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (enumerator_85435.current_mRoutineName (HERE) COMMA_SOURCE_FILE_AT_LINE (2449)) COMMA_SOURCE_FILE_AT_LINE (2445)) COMMA_SOURCE_FILE_AT_LINE (2445)) ;
    var_entryPoint = var_entryPoint.add_operation (GALGAS_uint ((PMUInt32) 4U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2451)) ;
    enumerator_85435.gotoNextObject () ;
  }
  var_entryPoint = constinArgument_inBootloaderReservedROMsize.reader_uint (SOURCE_FILE_AT_LINE (2454)) ;
  cEnumerator_routineDeclarationList enumerator_85890 (constinArgument_inUserRoutineDeclarationListForUserProgramImplementation, kEnumeration_up) ;
  while (enumerator_85890.hasCurrentObject ()) {
    outArgument_outGeneratedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (var_entryPoint, GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE_AT_LINE (2458)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2459)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (enumerator_85890.current_mRoutineName (HERE) COMMA_SOURCE_FILE_AT_LINE (2460)) COMMA_SOURCE_FILE_AT_LINE (2456)) COMMA_SOURCE_FILE_AT_LINE (2456)) ;
    var_entryPoint = var_entryPoint.add_operation (GALGAS_uint ((PMUInt32) 4U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2462)) ;
    enumerator_85890.gotoNextObject () ;
  }
  const enumGalgasBool test_14 = GALGAS_bool (kIsNotEqual, constinArgument_inPiccoloModel.mAttribute_mProgramKind.objectCompare (GALGAS_programKind::constructor_userProgram (SOURCE_FILE_AT_LINE (2465)))).boolEnum () ;
  if (kBoolTrue == test_14) {
    outArgument_outGeneratedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint ((PMUInt32) 0U), GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE_AT_LINE (2468)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2469)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (GALGAS_string ("main").reader_nowhere (SOURCE_FILE_AT_LINE (2470)) COMMA_SOURCE_FILE_AT_LINE (2470)) COMMA_SOURCE_FILE_AT_LINE (2466)) COMMA_SOURCE_FILE_AT_LINE (2466)) ;
  }
  GALGAS_routineDeclarationList var_tempBootloaderRoutineDeclarationList = constinArgument_inBootloaderRoutineDeclarationListForBootloaderImplementation ;
  const enumGalgasBool test_15 = GALGAS_bool (kIsStrictSup, var_tempBootloaderRoutineDeclarationList.reader_length (SOURCE_FILE_AT_LINE (2475)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_15) {
    GALGAS_lstring var_routineName ;
    {
    GALGAS_luint joker_86838_0 ; // Joker input parameter
    GALGAS_luint joker_86841_0 ; // Joker input parameter
    GALGAS_bool joker_86844_0 ; // Joker input parameter
    GALGAS_bool joker_86847_0 ; // Joker input parameter
    var_tempBootloaderRoutineDeclarationList.modifier_popFirst (var_routineName, joker_86838_0, joker_86841_0, joker_86844_0, joker_86847_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2476)) ;
    }
    outArgument_outGeneratedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint ((PMUInt32) 4U), GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE_AT_LINE (2479)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2480)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (var_routineName COMMA_SOURCE_FILE_AT_LINE (2481)) COMMA_SOURCE_FILE_AT_LINE (2477)) COMMA_SOURCE_FILE_AT_LINE (2477)) ;
  }
  const enumGalgasBool test_16 = constinArgument_inHasHighInterrupt.boolEnum () ;
  if (kBoolTrue == test_16) {
    outArgument_outGeneratedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint ((PMUInt32) 8U), GALGAS_string ("_high_interrupt_routine").reader_nowhere (SOURCE_FILE_AT_LINE (2488)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2489)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (GALGAS_string ("_high_interrupt").reader_nowhere (SOURCE_FILE_AT_LINE (2490)) COMMA_SOURCE_FILE_AT_LINE (2490)) COMMA_SOURCE_FILE_AT_LINE (2486)) COMMA_SOURCE_FILE_AT_LINE (2486)) ;
  }
  var_entryPoint = GALGAS_uint ((PMUInt32) 12U) ;
  if (var_tempBootloaderRoutineDeclarationList.reader_length (SOURCE_FILE_AT_LINE (2495)).isValid ()) {
    PMUInt32 variant_87573 = var_tempBootloaderRoutineDeclarationList.reader_length (SOURCE_FILE_AT_LINE (2495)).uintValue () ;
    bool loop_87573 = true ;
    while (loop_87573) {
      loop_87573 = GALGAS_bool (kIsStrictSup, var_tempBootloaderRoutineDeclarationList.reader_length (SOURCE_FILE_AT_LINE (2496)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (kIsStrictInf, var_entryPoint.objectCompare (GALGAS_uint ((PMUInt32) 24U))) COMMA_SOURCE_FILE_AT_LINE (2496)).isValid () ;
      if (loop_87573) {
        loop_87573 = GALGAS_bool (kIsStrictSup, var_tempBootloaderRoutineDeclarationList.reader_length (SOURCE_FILE_AT_LINE (2496)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (kIsStrictInf, var_entryPoint.objectCompare (GALGAS_uint ((PMUInt32) 24U))) COMMA_SOURCE_FILE_AT_LINE (2496)).boolValue () ;
      }
      if (loop_87573 && (0 == variant_87573)) {
        loop_87573 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (2495)) ;
      }
      if (loop_87573) {
        variant_87573 -- ;
        GALGAS_lstring var_routineName ;
        {
        GALGAS_luint joker_87785_0 ; // Joker input parameter
        GALGAS_luint joker_87788_0 ; // Joker input parameter
        GALGAS_bool joker_87791_0 ; // Joker input parameter
        GALGAS_bool joker_87794_0 ; // Joker input parameter
        var_tempBootloaderRoutineDeclarationList.modifier_popFirst (var_routineName, joker_87785_0, joker_87788_0, joker_87791_0, joker_87794_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2498)) ;
        }
        outArgument_outGeneratedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (var_entryPoint, GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE_AT_LINE (2501)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2502)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (var_routineName COMMA_SOURCE_FILE_AT_LINE (2503)) COMMA_SOURCE_FILE_AT_LINE (2499)) COMMA_SOURCE_FILE_AT_LINE (2499)) ;
        var_entryPoint = var_entryPoint.add_operation (GALGAS_uint ((PMUInt32) 4U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2505)) ;
      }
    }
  }
  const enumGalgasBool test_17 = constinArgument_inHasLowInterrupt.boolEnum () ;
  if (kBoolTrue == test_17) {
    outArgument_outGeneratedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint ((PMUInt32) 24U), GALGAS_string ("_low_interrupt_routine").reader_nowhere (SOURCE_FILE_AT_LINE (2511)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2512)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (GALGAS_string ("_low_interrupt").reader_nowhere (SOURCE_FILE_AT_LINE (2513)) COMMA_SOURCE_FILE_AT_LINE (2513)) COMMA_SOURCE_FILE_AT_LINE (2509)) COMMA_SOURCE_FILE_AT_LINE (2509)) ;
  }
  var_entryPoint = GALGAS_uint ((PMUInt32) 28U) ;
  cEnumerator_routineDeclarationList enumerator_88542 (var_tempBootloaderRoutineDeclarationList, kEnumeration_up) ;
  while (enumerator_88542.hasCurrentObject ()) {
    outArgument_outGeneratedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (var_entryPoint, GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE_AT_LINE (2521)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2522)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (enumerator_88542.current_mRoutineName (HERE) COMMA_SOURCE_FILE_AT_LINE (2523)) COMMA_SOURCE_FILE_AT_LINE (2519)) COMMA_SOURCE_FILE_AT_LINE (2519)) ;
    var_entryPoint = var_entryPoint.add_operation (GALGAS_uint ((PMUInt32) 4U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2525)) ;
    enumerator_88542.gotoNextObject () ;
  }
  var_tempBootloaderRoutineDeclarationList.drop () ; // drop instruction
  GALGAS_uint var_localLabelIndex = GALGAS_uint ((PMUInt32) 0U) ;
  const enumGalgasBool test_18 = constinArgument_inHasLowInterrupt.boolEnum () ;
  if (kBoolTrue == test_18) {
    cEnumerator_interruptDefinitionList enumerator_89026 (constinArgument_inPiccoloModel.reader_mInterruptDefinitionList (SOURCE_FILE_AT_LINE (2531)), kEnumeration_up) ;
    while (enumerator_89026.hasCurrentObject ()) {
      const enumGalgasBool test_19 = GALGAS_bool (kIsEqual, enumerator_89026.current_mInterruptName (HERE).reader_string (SOURCE_FILE_AT_LINE (2532)).objectCompare (GALGAS_string ("low"))).boolEnum () ;
      if (kBoolTrue == test_19) {
        GALGAS_ipic_31__38_Block var_currentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2534)), GALGAS_lstring::constructor_new (GALGAS_string ("_low_interrupt"), enumerator_89026.current_mInterruptName (HERE).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (2535)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2536)), GALGAS_ipic_31__38_RetfieTerminator::constructor_new (enumerator_89026.current_mFastReturn (HERE) COMMA_SOURCE_FILE_AT_LINE (2537)) COMMA_SOURCE_FILE_AT_LINE (2533)) ;
        GALGAS_uint var_currentBank = GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2539)) ;
        GALGAS_bool var_continuesInSequence ;
        {
        routine_analyzeInstructionList (enumerator_89026.current_mInstructionList (HERE), outArgument_outGeneratedBlockList, constinArgument_inAccessBankSplitOffset, var_routineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, var_constantMap, var_localLabelIndex, var_currentBlock, ioArgument_ioListFileContents, var_currentBank, enumerator_89026.current_mFastReturn (HERE).operator_not (SOURCE_FILE_AT_LINE (2552)), var_continuesInSequence, GALGAS_routineKind::constructor_interruptRoutine (SOURCE_FILE_AT_LINE (2554)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2540)) ;
        }
        const enumGalgasBool test_20 = var_continuesInSequence.operator_not (SOURCE_FILE_AT_LINE (2556)).boolEnum () ;
        if (kBoolTrue == test_20) {
          inCompiler->emitSemanticError (enumerator_89026.current_mEndOfInterruptLocation (HERE), GALGAS_string ("execution cannot reach the end of the interrupt routine") COMMA_SOURCE_FILE_AT_LINE (2557)) ;
        }
        outArgument_outGeneratedBlockList.addAssign_operation (var_currentBlock COMMA_SOURCE_FILE_AT_LINE (2560)) ;
      }
      enumerator_89026.gotoNextObject () ;
    }
  }
  const enumGalgasBool test_21 = constinArgument_inHasHighInterrupt.boolEnum () ;
  if (kBoolTrue == test_21) {
    cEnumerator_interruptDefinitionList enumerator_90300 (constinArgument_inPiccoloModel.reader_mInterruptDefinitionList (SOURCE_FILE_AT_LINE (2566)), kEnumeration_up) ;
    while (enumerator_90300.hasCurrentObject ()) {
      const enumGalgasBool test_22 = GALGAS_bool (kIsEqual, enumerator_90300.current_mInterruptName (HERE).reader_string (SOURCE_FILE_AT_LINE (2567)).objectCompare (GALGAS_string ("high"))).boolEnum () ;
      if (kBoolTrue == test_22) {
        GALGAS_ipic_31__38_Block var_currentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2569)), GALGAS_lstring::constructor_new (GALGAS_string ("_high_interrupt"), enumerator_90300.current_mInterruptName (HERE).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (2570)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2571)), GALGAS_ipic_31__38_RetfieTerminator::constructor_new (GALGAS_bool (true) COMMA_SOURCE_FILE_AT_LINE (2572)) COMMA_SOURCE_FILE_AT_LINE (2568)) ;
        GALGAS_uint var_currentBank = GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2574)) ;
        GALGAS_bool var_continuesInSequence ;
        {
        routine_analyzeInstructionList (enumerator_90300.current_mInstructionList (HERE), outArgument_outGeneratedBlockList, constinArgument_inAccessBankSplitOffset, var_routineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, var_constantMap, var_localLabelIndex, var_currentBlock, ioArgument_ioListFileContents, var_currentBank, enumerator_90300.current_mFastReturn (HERE).operator_not (SOURCE_FILE_AT_LINE (2587)), var_continuesInSequence, GALGAS_routineKind::constructor_interruptRoutine (SOURCE_FILE_AT_LINE (2589)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2575)) ;
        }
        const enumGalgasBool test_23 = var_continuesInSequence.operator_not (SOURCE_FILE_AT_LINE (2591)).boolEnum () ;
        if (kBoolTrue == test_23) {
          inCompiler->emitSemanticError (enumerator_90300.current_mEndOfInterruptLocation (HERE), GALGAS_string ("execution cannot reach the end of the interrupt routine") COMMA_SOURCE_FILE_AT_LINE (2592)) ;
        }
        outArgument_outGeneratedBlockList.addAssign_operation (var_currentBlock COMMA_SOURCE_FILE_AT_LINE (2595)) ;
      }
      enumerator_90300.gotoNextObject () ;
    }
  }
  cEnumerator_routineDefinitionList enumerator_92384 (constinArgument_inPiccoloModel.mAttribute_mRoutineDefinitionList, kEnumeration_up) ;
  while (enumerator_92384.hasCurrentObject ()) {
    GALGAS_uint var_currentBank = enumerator_92384.current_mRequiredBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2624)) ;
    GALGAS_routineKind var_routineKind ;
    const enumGalgasBool test_24 = enumerator_92384.current_mIsNoReturn (HERE).boolEnum () ;
    if (kBoolTrue == test_24) {
      var_routineKind = GALGAS_routineKind::constructor_noReturnRoutine (SOURCE_FILE_AT_LINE (2627)) ;
    }else if (kBoolFalse == test_24) {
      var_routineKind = GALGAS_routineKind::constructor_regularRoutine (SOURCE_FILE_AT_LINE (2629)) ;
    }
    GALGAS_ipic_31__38_Block var_currentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2632)), enumerator_92384.current_mRoutineName (HERE), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2634)), GALGAS_ipic_31__38_ReturnTerminator::constructor_new (SOURCE_FILE_AT_LINE (2635)) COMMA_SOURCE_FILE_AT_LINE (2631)) ;
    GALGAS_bool var_continuesInSequence ;
    {
    routine_analyzeInstructionList (enumerator_92384.current_mInstructionList (HERE), outArgument_outGeneratedBlockList, constinArgument_inAccessBankSplitOffset, var_routineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, var_constantMap, var_localLabelIndex, var_currentBlock, ioArgument_ioListFileContents, var_currentBank, enumerator_92384.current_mPreservesBank (HERE), var_continuesInSequence, var_routineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (2637)) ;
    }
    outArgument_outGeneratedBlockList.addAssign_operation (var_currentBlock COMMA_SOURCE_FILE_AT_LINE (2654)) ;
    const enumGalgasBool test_25 = enumerator_92384.current_mIsNoReturn (HERE).operator_not (SOURCE_FILE_AT_LINE (2656)).operator_and (GALGAS_bool (kIsNotEqual, enumerator_92384.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2656)).objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2656)))) COMMA_SOURCE_FILE_AT_LINE (2656)).operator_and (GALGAS_bool (kIsNotEqual, var_currentBank.objectCompare (enumerator_92384.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2656)))) COMMA_SOURCE_FILE_AT_LINE (2656)).boolEnum () ;
    if (kBoolTrue == test_25) {
      GALGAS_location location_26 (enumerator_92384.current_mRoutineName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_26, GALGAS_string ("execution will not set BSR to ").operator_concat (enumerator_92384.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2657)).reader_string (SOURCE_FILE_AT_LINE (2657)) COMMA_SOURCE_FILE_AT_LINE (2657)) COMMA_SOURCE_FILE_AT_LINE (2657)) ;
    }
    const enumGalgasBool test_27 = enumerator_92384.current_mIsNoReturn (HERE).operator_and (var_continuesInSequence COMMA_SOURCE_FILE_AT_LINE (2659)).boolEnum () ;
    if (kBoolTrue == test_27) {
      GALGAS_location location_28 (enumerator_92384.current_mRoutineName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_28, GALGAS_string ("execution should not reach the end of a \"noreturn\" routine") COMMA_SOURCE_FILE_AT_LINE (2660)) ;
    }
    enumerator_92384.gotoNextObject () ;
  }
  {
  routine_displayBlockList (ioArgument_ioListFileContents, outArgument_outGeneratedBlockList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2664)) ;
  }
  const enumGalgasBool test_29 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (2666)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_29) {
    {
    routine_ipic_31__38_OptimizeBlocks (ioArgument_ioListFileContents, outArgument_outGeneratedBlockList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2667)) ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@registerExpression analyzeRegisterExpression'      *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_registerExpression_analyzeRegisterExpression> gCategoryMethodTable_registerExpression_analyzeRegisterExpression ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeRegisterExpression (const PMSInt32 inClassIndex,
                                                    categoryMethodSignature_registerExpression_analyzeRegisterExpression inMethod) {
  gCategoryMethodTable_registerExpression_analyzeRegisterExpression.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeRegisterExpression (const cPtr_registerExpression * inObject,
                                                   const GALGAS_uint constin_inAccessBankSplitOffset,
                                                   const GALGAS_uint constin_inCurrentBank,
                                                   const GALGAS_registerTable constin_inRegisterTable,
                                                   GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression & out_outIPICregisterDescription,
                                                   GALGAS_bitSliceTable & out_outBitSliceTable,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  out_outIPICregisterDescription.drop () ;
  out_outBitSliceTable.drop () ;
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_registerExpression) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_registerExpression_analyzeRegisterExpression f = NULL ;
    if (classIndex < gCategoryMethodTable_registerExpression_analyzeRegisterExpression.count ()) {
      f = gCategoryMethodTable_registerExpression_analyzeRegisterExpression (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_registerExpression_analyzeRegisterExpression.count ()) {
           f = gCategoryMethodTable_registerExpression_analyzeRegisterExpression (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_registerExpression_analyzeRegisterExpression.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAccessBankSplitOffset, constin_inCurrentBank, constin_inRegisterTable, out_outIPICregisterDescription, out_outBitSliceTable, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*

static void categoryMethod_registerExpression_analyzeRegisterExpression (const cPtr_registerExpression * inObject,
                                                                         const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                         const GALGAS_uint constinArgument_inCurrentBank,
                                                                         const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                         GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression & outArgument_outIPICregisterDescription,
                                                                         GALGAS_bitSliceTable & outArgument_outBitSliceTable,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_registerExpression * object = inObject ;
  macroValidSharedObject (object, const cPtr_registerExpression) ;
  GALGAS_string var_assemblyString = object->mAttribute_mRegisterName.reader_string (SOURCE_FILE_AT_LINE (21)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (22)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_assemblyString.dotAssign_operation (GALGAS_string (" + ").operator_concat (object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (23)).reader_hexString (SOURCE_FILE_AT_LINE (23)) COMMA_SOURCE_FILE_AT_LINE (23)) COMMA_SOURCE_FILE_AT_LINE (23)) ;
  }
  GALGAS_uintlist var_registerAddressList ;
  GALGAS_uint var_size ;
  GALGAS_uint var_registerAddress = GALGAS_uint ((PMUInt32) 0U) ;
  GALGAS_string joker_1007_0 ; // Joker input parameter
  constinArgument_inRegisterTable.method_searchKey (object->mAttribute_mRegisterName, var_registerAddressList, var_size, outArgument_outBitSliceTable, joker_1007_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (29)) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (31)).objectCompare (var_size)).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_location location_2 (object->mAttribute_mOffset.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("this offset is too large: should be lower than ").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (32)) COMMA_SOURCE_FILE_AT_LINE (32)) COMMA_SOURCE_FILE_AT_LINE (32)) ;
  }
  GALGAS_bool var_found = GALGAS_bool (false) ;
  cEnumerator_uintlist enumerator_1211 (var_registerAddressList, kEnumeration_up) ;
  bool bool_3 = var_found.operator_not (SOURCE_FILE_AT_LINE (36)).isValidAndTrue () ;
  if (enumerator_1211.hasCurrentObject () && bool_3) {
    while (enumerator_1211.hasCurrentObject () && bool_3) {
      var_found = GALGAS_bool (kIsStrictInf, enumerator_1211.current_mValue (HERE).objectCompare (constinArgument_inAccessBankSplitOffset)).operator_or (GALGAS_bool (kIsSupOrEqual, enumerator_1211.current_mValue (HERE).objectCompare (GALGAS_uint ((PMUInt32) 3840U).add_operation (constinArgument_inAccessBankSplitOffset, inCompiler COMMA_SOURCE_FILE_AT_LINE (37)))) COMMA_SOURCE_FILE_AT_LINE (37)) ;
      var_registerAddress = enumerator_1211.current_mValue (HERE) ;
      enumerator_1211.gotoNextObject () ;
      if (enumerator_1211.hasCurrentObject ()) {
        bool_3 = var_found.operator_not (SOURCE_FILE_AT_LINE (36)).isValidAndTrue () ;
      }
    }
  }
  GALGAS_bool var_needsBSRaccess = GALGAS_bool (false) ;
  const enumGalgasBool test_4 = var_found.operator_not (SOURCE_FILE_AT_LINE (41)).boolEnum () ;
  if (kBoolTrue == test_4) {
    var_needsBSRaccess = GALGAS_bool (true) ;
    var_registerAddressList.method_first (var_registerAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (43)) ;
    GALGAS_uint var_neededBank = var_registerAddress.right_shift_operation (GALGAS_uint ((PMUInt32) 8U) COMMA_SOURCE_FILE_AT_LINE (44)) ;
    const enumGalgasBool test_5 = GALGAS_bool (kIsNotEqual, var_neededBank.objectCompare (constinArgument_inCurrentBank)).boolEnum () ;
    if (kBoolTrue == test_5) {
      GALGAS_string var_errorMessage = GALGAS_string ("Accessing the '").operator_concat (object->mAttribute_mRegisterName.reader_string (SOURCE_FILE_AT_LINE (46)) COMMA_SOURCE_FILE_AT_LINE (46)).operator_concat (GALGAS_string ("' needs the bank selection set to ") COMMA_SOURCE_FILE_AT_LINE (46)).operator_concat (var_neededBank.reader_string (SOURCE_FILE_AT_LINE (46)) COMMA_SOURCE_FILE_AT_LINE (46)) ;
      const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, constinArgument_inCurrentBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (47)))).boolEnum () ;
      if (kBoolTrue == test_6) {
        var_errorMessage.dotAssign_operation (GALGAS_string (", but current bank selection cannot be known") COMMA_SOURCE_FILE_AT_LINE (48)) ;
      }else if (kBoolFalse == test_6) {
        var_errorMessage.dotAssign_operation (GALGAS_string (", but current bank selection is set to ").operator_concat (constinArgument_inCurrentBank.reader_string (SOURCE_FILE_AT_LINE (50)) COMMA_SOURCE_FILE_AT_LINE (50)) COMMA_SOURCE_FILE_AT_LINE (50)) ;
      }
      GALGAS_location location_7 (object->mAttribute_mRegisterName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_7, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (52)) ;
    }
  }
  outArgument_outIPICregisterDescription = GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression::constructor_new (var_assemblyString, var_registerAddress.add_operation (object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (58)), inCompiler COMMA_SOURCE_FILE_AT_LINE (58)), var_needsBSRaccess COMMA_SOURCE_FILE_AT_LINE (56)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_registerExpression_analyzeRegisterExpression (void) {
  enterCategoryMethod_analyzeRegisterExpression (kTypeDescriptor_GALGAS_registerExpression.mSlotID,
                                                 categoryMethod_registerExpression_analyzeRegisterExpression) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_registerExpression_analyzeRegisterExpression (void) {
  gCategoryMethodTable_registerExpression_analyzeRegisterExpression.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_registerExpression_analyzeRegisterExpression (defineCategoryMethod_registerExpression_analyzeRegisterExpression,
                                                                         freeCategoryMethod_registerExpression_analyzeRegisterExpression) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@registerExpression analyzeRegisterExpressionWithoutCheckingBank'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_registerExpression_analyzeRegisterExpressionWithoutCheckingBank> gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeRegisterExpressionWithoutCheckingBank (const PMSInt32 inClassIndex,
                                                                       categoryMethodSignature_registerExpression_analyzeRegisterExpressionWithoutCheckingBank inMethod) {
  gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeRegisterExpressionWithoutCheckingBank (const cPtr_registerExpression * inObject,
                                                                      const GALGAS_registerTable constin_inRegisterTable,
                                                                      GALGAS_ipic_31__38__5F_intermediate_5F_registerExpressionWithoutBSRIndication & out_outIPICregisterDescription,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  out_outIPICregisterDescription.drop () ;
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_registerExpression) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_registerExpression_analyzeRegisterExpressionWithoutCheckingBank f = NULL ;
    if (classIndex < gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank.count ()) {
      f = gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank.count ()) {
           f = gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inRegisterTable, out_outIPICregisterDescription, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*

static void categoryMethod_registerExpression_analyzeRegisterExpressionWithoutCheckingBank (const cPtr_registerExpression * inObject,
                                                                                            const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                                            GALGAS_ipic_31__38__5F_intermediate_5F_registerExpressionWithoutBSRIndication & outArgument_outIPICregisterDescription,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_registerExpression * object = inObject ;
  macroValidSharedObject (object, const cPtr_registerExpression) ;
  GALGAS_string var_assemblyString = object->mAttribute_mRegisterName.reader_string (SOURCE_FILE_AT_LINE (70)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (71)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_assemblyString.dotAssign_operation (GALGAS_string (" + ").operator_concat (object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (72)).reader_hexString (SOURCE_FILE_AT_LINE (72)) COMMA_SOURCE_FILE_AT_LINE (72)) COMMA_SOURCE_FILE_AT_LINE (72)) ;
  }
  GALGAS_uintlist var_registerAddressList ;
  GALGAS_uint var_size ;
  GALGAS_bitSliceTable joker_2756_0 ; // Joker input parameter
  GALGAS_string joker_2759_0 ; // Joker input parameter
  constinArgument_inRegisterTable.method_searchKey (object->mAttribute_mRegisterName, var_registerAddressList, var_size, joker_2756_0, joker_2759_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (75)) ;
  GALGAS_uint var_registerAddress ;
  var_registerAddressList.method_first (var_registerAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (76)) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (78)).objectCompare (var_size)).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_location location_2 (object->mAttribute_mOffset.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("this offset is too large: should be lower than ").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (79)) COMMA_SOURCE_FILE_AT_LINE (79)) COMMA_SOURCE_FILE_AT_LINE (79)) ;
  }
  outArgument_outIPICregisterDescription = GALGAS_ipic_31__38__5F_intermediate_5F_registerExpressionWithoutBSRIndication::constructor_new (var_assemblyString, var_registerAddress.add_operation (object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (84)), inCompiler COMMA_SOURCE_FILE_AT_LINE (84)) COMMA_SOURCE_FILE_AT_LINE (82)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_registerExpression_analyzeRegisterExpressionWithoutCheckingBank (void) {
  enterCategoryMethod_analyzeRegisterExpressionWithoutCheckingBank (kTypeDescriptor_GALGAS_registerExpression.mSlotID,
                                                                    categoryMethod_registerExpression_analyzeRegisterExpressionWithoutCheckingBank) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_registerExpression_analyzeRegisterExpressionWithoutCheckingBank (void) {
  gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_registerExpression_analyzeRegisterExpressionWithoutCheckingBank (defineCategoryMethod_registerExpression_analyzeRegisterExpressionWithoutCheckingBank,
                                                                                            freeCategoryMethod_registerExpression_analyzeRegisterExpressionWithoutCheckingBank) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Category reader '@registerExpression getRegisterAddress'          *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_registerExpression_getRegisterAddress> gCategoryReaderTable_registerExpression_getRegisterAddress ;

//---------------------------------------------------------------------------*

void enterCategoryReader_getRegisterAddress (const PMSInt32 inClassIndex,
                                             categoryReaderSignature_registerExpression_getRegisterAddress inReader) {
  gCategoryReaderTable_registerExpression_getRegisterAddress.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_uint callCategoryReader_getRegisterAddress (const cPtr_registerExpression * inObject,
                                                   const GALGAS_registerTable & in_inRegisterTable,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  GALGAS_uint result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_registerExpression) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_registerExpression_getRegisterAddress f = NULL ;
    if (classIndex < gCategoryReaderTable_registerExpression_getRegisterAddress.count ()) {
      f = gCategoryReaderTable_registerExpression_getRegisterAddress (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_registerExpression_getRegisterAddress.count ()) {
           f = gCategoryReaderTable_registerExpression_getRegisterAddress (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_registerExpression_getRegisterAddress.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, in_inRegisterTable, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_uint categoryReader_registerExpression_getRegisterAddress (const cPtr_registerExpression * inObject,
                                                                         const GALGAS_registerTable & constinArgument_inRegisterTable,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_uint result_outRegisterAddress ; // Returned variable
  const cPtr_registerExpression * object = inObject ;
  macroValidSharedObject (object, const cPtr_registerExpression) ;
  GALGAS_uintlist var_registerAddressList ;
  GALGAS_uint var_size ;
  GALGAS_bitSliceTable joker_3415_0 ; // Joker input parameter
  GALGAS_string joker_3418_0 ; // Joker input parameter
  constinArgument_inRegisterTable.method_searchKey (object->mAttribute_mRegisterName, var_registerAddressList, var_size, joker_3415_0, joker_3418_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (94)) ;
  var_registerAddressList.method_first (result_outRegisterAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (95)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (97)).objectCompare (var_size)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mOffset.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("this offset is too large: should be lower than ").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (98)) COMMA_SOURCE_FILE_AT_LINE (98)) COMMA_SOURCE_FILE_AT_LINE (98)) ;
  }
//---
  return result_outRegisterAddress ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_registerExpression_getRegisterAddress (void) {
  enterCategoryReader_getRegisterAddress (kTypeDescriptor_GALGAS_registerExpression.mSlotID,
                                          categoryReader_registerExpression_getRegisterAddress) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_registerExpression_getRegisterAddress (void) {
  gCategoryReaderTable_registerExpression_getRegisterAddress.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_registerExpression_getRegisterAddress (defineCategoryReader_registerExpression_getRegisterAddress,
                                                                  freeCategoryReader_registerExpression_getRegisterAddress) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Abstract category method '@pic18PiccoloSimpleInstruction analyzeSimpleInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction> gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeSimpleInstruction (const PMSInt32 inClassIndex,
                                                   categoryMethodSignature_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction inMethod) {
  gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction (void) {
  gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction (NULL,
                                                                                         freeCategoryMethod_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                  const GALGAS_uint constin_inAccessBankSplitOffset,
                                                  const GALGAS_routineMap constin_inRoutineMap,
                                                  const GALGAS_registerTable constin_inRegisterTable,
                                                  const GALGAS_dataMap constin_inDataMap,
                                                  const GALGAS_constantMap constin_inConstantMap,
                                                  GALGAS_uint & io_ioCurrentBank,
                                                  const GALGAS_bool constin_inShouldPreserveBSR,
                                                  GALGAS_ipic_31__38_SequentialInstruction & out_outInstruction,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
//--- Drop output arguments
  out_outInstruction.drop () ;
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_pic_31__38_PiccoloSimpleInstruction) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction f = NULL ;
    if (classIndex < gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction.count ()) {
      f = gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction.count ()) {
           f = gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAccessBankSplitOffset, constin_inRoutineMap, constin_inRegisterTable, constin_inDataMap, constin_inConstantMap, io_ioCurrentBank, constin_inShouldPreserveBSR, out_outInstruction, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@instruction_withNoOperand analyzeSimpleInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_withNoOperand_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                                  const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                                  const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                                  const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                                                  const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                                  const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                                  GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                                                  const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                                  GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                                  C_Compiler * /* inCompiler */
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_withNoOperand * object = (const cPtr_instruction_5F_withNoOperand *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_withNoOperand) ;
  outArgument_outInstruction = GALGAS_ipic_31__38_InstructionWithNoOperand::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mKind COMMA_SOURCE_FILE_AT_LINE (131)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_withNoOperand_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_withNoOperand.mSlotID,
                                                categoryMethod_instruction_5F_withNoOperand_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_withNoOperand_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_withNoOperand_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@instruction_FDA analyzeSimpleInstruction'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_FDA_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                        const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                        const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                        const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                        const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                        const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                        GALGAS_uint & ioArgument_ioCurrentBank,
                                                                        const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                        GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_FDA * object = (const cPtr_instruction_5F_FDA *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_FDA) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_5375_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, joker_5375_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (149)) ;
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mInstruction_5F_FDA_5F_base_5F_code, var_IPICregisterDescription, object->mAttribute_m_5F_W_5F_isDestination COMMA_SOURCE_FILE_AT_LINE (156)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_FDA_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_FDA.mSlotID,
                                                categoryMethod_instruction_5F_FDA_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_FDA_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_FDA_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@instruction_FA analyzeSimpleInstruction'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_FA_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                       const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                       const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                       const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                       const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                       const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                       GALGAS_uint & ioArgument_ioCurrentBank,
                                                                       const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                       GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_FA * object = (const cPtr_instruction_5F_FA *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_FA) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_6187_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, joker_6187_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (176)) ;
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mFAinstruction, var_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (183)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_FA_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_FA.mSlotID,
                                                categoryMethod_instruction_5F_FA_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_FA_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_FA_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@instruction_MOVFF analyzeSimpleInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_MOVFF_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                          const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                          const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                          const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                          const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                          const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                          GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                                          const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                          GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_MOVFF * object = (const cPtr_instruction_5F_MOVFF *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_MOVFF) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpressionWithoutBSRIndication var_sourceIPICregisterDescription ;
  callCategoryMethod_analyzeRegisterExpressionWithoutCheckingBank ((const cPtr_registerExpression *) object->mAttribute_mSourceRegisterName.ptr (), constinArgument_inRegisterTable, var_sourceIPICregisterDescription, inCompiler COMMA_SOURCE_FILE_AT_LINE (202)) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpressionWithoutBSRIndication var_destinationIPICregisterDescription ;
  callCategoryMethod_analyzeRegisterExpressionWithoutCheckingBank ((const cPtr_registerExpression *) object->mAttribute_mDestinationRegisterName.ptr (), constinArgument_inRegisterTable, var_destinationIPICregisterDescription, inCompiler COMMA_SOURCE_FILE_AT_LINE (206)) ;
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF::constructor_new (object->mAttribute_mInstructionLocation, var_sourceIPICregisterDescription, var_destinationIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (210)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_MOVFF_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_MOVFF.mSlotID,
                                                categoryMethod_instruction_5F_MOVFF_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_MOVFF_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_MOVFF_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@instruction_FBA analyzeSimpleInstruction'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_FBA_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                        const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                        const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                        const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                        const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                        const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                        GALGAS_uint & ioArgument_ioCurrentBank,
                                                                        const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                        GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_FBA * object = (const cPtr_instruction_5F_FBA *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_FBA) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable var_bitSliceTable ;
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, var_bitSliceTable, inCompiler COMMA_SOURCE_FILE_AT_LINE (229)) ;
  GALGAS_uint var_bitNumber ;
  callCategoryMethod_getBitNumber ((const cPtr_bitNumberExpression *) object->mAttribute_mBitNumber.ptr (), var_bitSliceTable, var_bitNumber, inCompiler COMMA_SOURCE_FILE_AT_LINE (236)) ;
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FBA::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mBitOrientedOp, var_IPICregisterDescription, var_bitNumber COMMA_SOURCE_FILE_AT_LINE (240)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_FBA_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_FBA.mSlotID,
                                                categoryMethod_instruction_5F_FBA_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_FBA_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_FBA_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@instruction_literalOperation analyzeSimpleInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_literalOperation_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                                     const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                                     const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                                     const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                                     const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                                     const GALGAS_constantMap constinArgument_inConstantMap,
                                                                                     GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                                                     const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                                     GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_literalOperation * object = (const cPtr_instruction_5F_literalOperation *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_literalOperation) ;
  GALGAS_sint var_result ;
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mImmediatExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_result, inCompiler COMMA_SOURCE_FILE_AT_LINE (260)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, var_result.objectCompare (GALGAS_sint ((PMSInt32) 255L))).operator_or (GALGAS_bool (kIsStrictInf, var_result.objectCompare (GALGAS_sint ((PMSInt32) 128L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE_AT_LINE (262)))) COMMA_SOURCE_FILE_AT_LINE (262)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("immediate value is evaluated as ").operator_concat (var_result.reader_string (SOURCE_FILE_AT_LINE (263)) COMMA_SOURCE_FILE_AT_LINE (263)).operator_concat (GALGAS_string (" (should be betwween -128 and 255)") COMMA_SOURCE_FILE_AT_LINE (263)) COMMA_SOURCE_FILE_AT_LINE (263)) ;
  }
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mLiteralInstruction, var_result.operator_and (GALGAS_sint ((PMSInt32) 255L) COMMA_SOURCE_FILE_AT_LINE (269)).reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (269)) COMMA_SOURCE_FILE_AT_LINE (266)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_literalOperation_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_literalOperation.mSlotID,
                                                categoryMethod_instruction_5F_literalOperation_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_literalOperation_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_literalOperation_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@instruction_LFSR analyzeSimpleInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_LFSR_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                         const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                         const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                         const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                         const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                         const GALGAS_constantMap constinArgument_inConstantMap,
                                                                         GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                                         const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                         GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_LFSR * object = (const cPtr_instruction_5F_LFSR *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_LFSR) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, object->mAttribute_mFSRindex.reader_uint (SOURCE_FILE_AT_LINE (285)).objectCompare (GALGAS_uint ((PMUInt32) 2U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mFSRindex.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the LFSR register idx (").operator_concat (object->mAttribute_mFSRindex.reader_uint (SOURCE_FILE_AT_LINE (286)).reader_string (SOURCE_FILE_AT_LINE (286)) COMMA_SOURCE_FILE_AT_LINE (286)).operator_concat (GALGAS_string (") should be lower or equal to 2") COMMA_SOURCE_FILE_AT_LINE (286)) COMMA_SOURCE_FILE_AT_LINE (286)) ;
  }
  GALGAS_sint var_result ;
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mImmediatExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_result, inCompiler COMMA_SOURCE_FILE_AT_LINE (289)) ;
  const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_result.objectCompare (GALGAS_sint ((PMSInt32) 4095L))).operator_or (GALGAS_bool (kIsStrictInf, var_result.objectCompare (GALGAS_sint ((PMSInt32) 0L))) COMMA_SOURCE_FILE_AT_LINE (291)).boolEnum () ;
  if (kBoolTrue == test_2) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("immediate value is evaluated as ").operator_concat (var_result.reader_string (SOURCE_FILE_AT_LINE (292)) COMMA_SOURCE_FILE_AT_LINE (292)).operator_concat (GALGAS_string (" (should be between 0 and 4095)") COMMA_SOURCE_FILE_AT_LINE (292)) COMMA_SOURCE_FILE_AT_LINE (292)) ;
  }
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_LFSR::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mFSRindex, var_result.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (297)) COMMA_SOURCE_FILE_AT_LINE (294)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_LFSR_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_LFSR.mSlotID,
                                                categoryMethod_instruction_5F_LFSR_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_LFSR_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_LFSR_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@instruction_JSR analyzeSimpleInstruction'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_JSR_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                        const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                        const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                        const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                                        const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                        const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                        GALGAS_uint & ioArgument_ioCurrentBank,
                                                                        const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                        GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_JSR * object = (const cPtr_instruction_5F_JSR *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_JSR) ;
  GALGAS_bool var_isNoReturn ;
  GALGAS_uint var_requiredBank ;
  GALGAS_uint var_returnedBank ;
  GALGAS_bool var_preservesBank ;
  constinArgument_inRoutineMap.method_searchKey (object->mAttribute_mTargetLabel, var_isNoReturn, var_requiredBank, var_returnedBank, var_preservesBank, inCompiler COMMA_SOURCE_FILE_AT_LINE (314)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (315)))).operator_and (GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (ioArgument_ioCurrentBank)) COMMA_SOURCE_FILE_AT_LINE (315)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_string var_errorMessage = GALGAS_string ("the routine '").operator_concat (object->mAttribute_mTargetLabel.reader_string (SOURCE_FILE_AT_LINE (316)) COMMA_SOURCE_FILE_AT_LINE (316)).operator_concat (GALGAS_string ("' requires BSR to be set to ") COMMA_SOURCE_FILE_AT_LINE (316)).operator_concat (var_requiredBank.reader_string (SOURCE_FILE_AT_LINE (316)) COMMA_SOURCE_FILE_AT_LINE (316)) ;
    var_errorMessage.dotAssign_operation (GALGAS_string (", but BSR ") COMMA_SOURCE_FILE_AT_LINE (317)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, ioArgument_ioCurrentBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (318)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_errorMessage.dotAssign_operation (GALGAS_string ("does contain any reliable value") COMMA_SOURCE_FILE_AT_LINE (319)) ;
    }else if (kBoolFalse == test_1) {
      var_errorMessage.dotAssign_operation (GALGAS_string ("is set to ").operator_concat (ioArgument_ioCurrentBank.reader_string (SOURCE_FILE_AT_LINE (321)) COMMA_SOURCE_FILE_AT_LINE (321)) COMMA_SOURCE_FILE_AT_LINE (321)) ;
    }
    GALGAS_location location_2 (object->mAttribute_mTargetLabel.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (323)) ;
  }
  const enumGalgasBool test_3 = var_isNoReturn.boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_location location_4 (object->mAttribute_mTargetLabel.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_4, GALGAS_string ("a \"noreturn\" routine should be called with a BRA, GOTO, Bcc or JUMP instruction") COMMA_SOURCE_FILE_AT_LINE (326)) ;
  }
  const enumGalgasBool test_5 = var_preservesBank.operator_not (SOURCE_FILE_AT_LINE (328)).boolEnum () ;
  if (kBoolTrue == test_5) {
    ioArgument_ioCurrentBank = var_returnedBank ;
    const enumGalgasBool test_6 = constinArgument_inShouldPreserveBSR.boolEnum () ;
    if (kBoolTrue == test_6) {
      GALGAS_location location_7 (object->mAttribute_mTargetLabel.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_7, GALGAS_string ("the routine call should preserve bank selection") COMMA_SOURCE_FILE_AT_LINE (331)) ;
    }
  }
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_JSR::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mTargetLabel, object->mAttribute_mKind COMMA_SOURCE_FILE_AT_LINE (335)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_JSR_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_JSR.mSlotID,
                                                categoryMethod_instruction_5F_JSR_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_JSR_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_JSR_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Abstract category method '@pic18PiccoloInstruction analyze'        *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_pic_31__38_PiccoloInstruction_analyze> gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyze (const PMSInt32 inClassIndex,
                                  categoryMethodSignature_pic_31__38_PiccoloInstruction_analyze inMethod) {
  gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_pic_31__38_PiccoloInstruction_analyze (void) {
  gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_pic_31__38_PiccoloInstruction_analyze (NULL,
                                                                  freeCategoryMethod_pic_31__38_PiccoloInstruction_analyze) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                 const GALGAS_uint constin_inAccessBankSplitOffset,
                                 GALGAS_ipic_31__38_BlockList & io_ioGeneratedBlockList,
                                 const GALGAS_routineMap constin_inRoutineMap,
                                 const GALGAS_registerTable constin_inRegisterTable,
                                 const GALGAS_dataMap constin_inDataMap,
                                 const GALGAS_constantMap constin_inConstantMap,
                                 GALGAS_uint & io_ioLocalLabelIndex,
                                 GALGAS_ipic_31__38_Block & io_ioCurrentBlock,
                                 GALGAS_string & io_ioListFileContents,
                                 GALGAS_uint & io_ioCurrentBank,
                                 const GALGAS_bool constin_inShouldPreserveBSR,
                                 GALGAS_bool & io_ioContinuesInSequence,
                                 const GALGAS_routineKind constin_inRoutineKind,
                                 C_Compiler * inCompiler
                                 COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_pic_31__38_PiccoloInstruction) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_pic_31__38_PiccoloInstruction_analyze f = NULL ;
    if (classIndex < gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze.count ()) {
      f = gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze.count ()) {
           f = gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAccessBankSplitOffset, io_ioGeneratedBlockList, constin_inRoutineMap, constin_inRegisterTable, constin_inDataMap, constin_inConstantMap, io_ioLocalLabelIndex, io_ioCurrentBlock, io_ioListFileContents, io_ioCurrentBank, constin_inShouldPreserveBSR, io_ioContinuesInSequence, constin_inRoutineKind, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category method '@pic18PiccoloSimpleInstruction analyze'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_pic_31__38_PiccoloSimpleInstruction_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                        const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                        GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                        const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                        const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                        const GALGAS_dataMap constinArgument_inDataMap,
                                                                        const GALGAS_constantMap constinArgument_inConstantMap,
                                                                        GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                        GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                        GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                        GALGAS_uint & ioArgument_ioCurrentBank,
                                                                        const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                        GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                                        const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_pic_31__38_PiccoloSimpleInstruction * object = (const cPtr_pic_31__38_PiccoloSimpleInstruction *) inObject ;
  macroValidSharedObject (object, const cPtr_pic_31__38_PiccoloSimpleInstruction) ;
  GALGAS_ipic_31__38_SequentialInstruction var_instruction ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_pic_31__38_PiccoloSimpleInstruction temp_0 = object ;
  callCategoryMethod_analyzeSimpleInstruction ((const cPtr_pic_31__38_PiccoloSimpleInstruction *) temp_0.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioCurrentBank, constinArgument_inShouldPreserveBSR, var_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (381)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (var_instruction COMMA_SOURCE_FILE_AT_LINE (391)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_pic_31__38_PiccoloSimpleInstruction_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_pic_31__38_PiccoloSimpleInstruction.mSlotID,
                               categoryMethod_pic_31__38_PiccoloSimpleInstruction_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_pic_31__38_PiccoloSimpleInstruction_analyze (defineCategoryMethod_pic_31__38_PiccoloSimpleInstruction_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category method '@instruction_FOREVER analyze'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_FOREVER_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                           const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                           GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                                           const GALGAS_routineMap constinArgument_inRoutineMap,
                                                           const GALGAS_registerTable constinArgument_inRegisterTable,
                                                           const GALGAS_dataMap constinArgument_inDataMap,
                                                           const GALGAS_constantMap constinArgument_inConstantMap,
                                                           GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                           GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                           GALGAS_string & ioArgument_ioListFileContents,
                                                           GALGAS_uint & ioArgument_ioCurrentBank,
                                                           const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                           GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                           const GALGAS_routineKind constinArgument_inRoutineKind,
                                                           C_Compiler * inCompiler
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_FOREVER * object = (const cPtr_instruction_5F_FOREVER *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_FOREVER) ;
  if (constinArgument_inRoutineKind.isValid ()) {
    switch (constinArgument_inRoutineKind.enumValue ()) {
    case GALGAS_routineKind::kNotBuilt:
      break ;
    case GALGAS_routineKind::kEnum_regularRoutine: {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("a regular routine does not accept the \"forever\" instruction") COMMA_SOURCE_FILE_AT_LINE (413)) ;
      } break ;
    case GALGAS_routineKind::kEnum_noReturnRoutine: {
      } break ;
    case GALGAS_routineKind::kEnum_interruptRoutine: {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("an interrupt routine does not accept the \"forever\" instruction") COMMA_SOURCE_FILE_AT_LINE (416)) ;
      } break ;
    }
  }
  GALGAS_uint var_finalBank = ioArgument_ioCurrentBank ;
  GALGAS_lstring var_label_30_ = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (420)) COMMA_SOURCE_FILE_AT_LINE (420)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (420)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (421)) ;
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = GALGAS_ipic_31__38_JumpTerminator::constructor_new (var_label_30_ COMMA_SOURCE_FILE_AT_LINE (423)) ;
  ioArgument_ioGeneratedBlockList.addAssign_operation (ioArgument_ioCurrentBlock COMMA_SOURCE_FILE_AT_LINE (425)) ;
  ioArgument_ioCurrentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (428)), var_label_30_, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (430)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (var_label_30_ COMMA_SOURCE_FILE_AT_LINE (431)) COMMA_SOURCE_FILE_AT_LINE (427)) ;
  {
  routine_analyzeInstructionList (object->mAttribute_mInstructionList, ioArgument_ioGeneratedBlockList, constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioLocalLabelIndex, ioArgument_ioCurrentBlock, ioArgument_ioListFileContents, ioArgument_ioCurrentBank, constinArgument_inShouldPreserveBSR, ioArgument_ioContinuesInSequence, constinArgument_inRoutineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (433)) ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, ioArgument_ioCurrentBank.objectCompare (var_finalBank)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mEndOfInstructionList, GALGAS_string ("instruction list does not leave BSR value unchanged") COMMA_SOURCE_FILE_AT_LINE (451)) ;
  }
  ioArgument_ioContinuesInSequence = GALGAS_bool (false) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_FOREVER_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_FOREVER.mSlotID,
                               categoryMethod_instruction_5F_FOREVER_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_FOREVER_analyze (defineCategoryMethod_instruction_5F_FOREVER_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category method '@instruction_nobanksel analyze'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_nobanksel_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                             const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                             GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                             const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                             const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                             const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                             const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                             GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                             GALGAS_ipic_31__38_Block & /* ioArgument_ioCurrentBlock */,
                                                             GALGAS_string & /* ioArgument_ioListFileContents */,
                                                             GALGAS_uint & ioArgument_ioCurrentBank,
                                                             const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                             GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                             const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                             C_Compiler * inCompiler
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_nobanksel * object = (const cPtr_instruction_5F_nobanksel *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_nobanksel) ;
  const enumGalgasBool test_0 = constinArgument_inShouldPreserveBSR.boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("cannot use \"nobank\" here: BSR should be preserved (use it in a \"banksave\" construct)") COMMA_SOURCE_FILE_AT_LINE (474)) ;
  }
  ioArgument_ioCurrentBank = GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (476)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_nobanksel_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_nobanksel.mSlotID,
                               categoryMethod_instruction_5F_nobanksel_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_nobanksel_analyze (defineCategoryMethod_instruction_5F_nobanksel_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category method '@instruction_savebank analyze'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_savebank_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                            const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                            GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                                            const GALGAS_routineMap constinArgument_inRoutineMap,
                                                            const GALGAS_registerTable constinArgument_inRegisterTable,
                                                            const GALGAS_dataMap constinArgument_inDataMap,
                                                            const GALGAS_constantMap constinArgument_inConstantMap,
                                                            GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                            GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                            GALGAS_string & ioArgument_ioListFileContents,
                                                            GALGAS_uint & ioArgument_ioCurrentBank,
                                                            const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                            GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                            const GALGAS_routineKind constinArgument_inRoutineKind,
                                                            C_Compiler * inCompiler
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_savebank * object = (const cPtr_instruction_5F_savebank *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_savebank) ;
  GALGAS_registerExpression var_BSRregister = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("BSR"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (498)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (498)) COMMA_SOURCE_FILE_AT_LINE (498)) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpressionWithoutBSRIndication var_BSR_5F_IPICregisterDescription ;
  callCategoryMethod_analyzeRegisterExpressionWithoutCheckingBank ((const cPtr_registerExpression *) var_BSRregister.ptr (), constinArgument_inRegisterTable, var_BSR_5F_IPICregisterDescription, inCompiler COMMA_SOURCE_FILE_AT_LINE (499)) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpressionWithoutBSRIndication var_save_5F_IPICregisterDescription ;
  callCategoryMethod_analyzeRegisterExpressionWithoutCheckingBank ((const cPtr_registerExpression *) object->mAttribute_mRegister.ptr (), constinArgument_inRegisterTable, var_save_5F_IPICregisterDescription, inCompiler COMMA_SOURCE_FILE_AT_LINE (504)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF::constructor_new (object->mAttribute_mInstructionLocation, var_BSR_5F_IPICregisterDescription, var_save_5F_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (509)) COMMA_SOURCE_FILE_AT_LINE (509)) ;
  GALGAS_uint var_finalBank = ioArgument_ioCurrentBank ;
  {
  routine_analyzeInstructionList (object->mAttribute_mInstructionList, ioArgument_ioGeneratedBlockList, constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioLocalLabelIndex, ioArgument_ioCurrentBlock, ioArgument_ioListFileContents, var_finalBank, GALGAS_bool (false), ioArgument_ioContinuesInSequence, constinArgument_inRoutineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (516)) ;
  }
  const enumGalgasBool test_0 = ioArgument_ioContinuesInSequence.operator_not (SOURCE_FILE_AT_LINE (532)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mEndOfSaveBankInstruction, GALGAS_string ("useless saving: execution does reach the end of \"savebank\" instruction list") COMMA_SOURCE_FILE_AT_LINE (533)) ;
  }
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF::constructor_new (object->mAttribute_mInstructionLocation, var_save_5F_IPICregisterDescription, var_BSR_5F_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (536)) COMMA_SOURCE_FILE_AT_LINE (536)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_savebank_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_savebank.mSlotID,
                               categoryMethod_instruction_5F_savebank_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_savebank_analyze (defineCategoryMethod_instruction_5F_savebank_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category method '@instruction_banksel analyze'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_banksel_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                           const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                           GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                           const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                           const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                           const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                           const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                           GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                           GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                           GALGAS_string & /* ioArgument_ioListFileContents */,
                                                           GALGAS_uint & ioArgument_ioCurrentBank,
                                                           const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                           GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                           const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                           C_Compiler * inCompiler
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_banksel * object = (const cPtr_instruction_5F_banksel *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_banksel) ;
  const enumGalgasBool test_0 = constinArgument_inShouldPreserveBSR.boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("cannot use \"banksel\" here: bank selection should be preserved (use \"banksave\" instruction)") COMMA_SOURCE_FILE_AT_LINE (561)) ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, object->mAttribute_mBankIndex.reader_uint (SOURCE_FILE_AT_LINE (563)).objectCompare (GALGAS_uint ((PMUInt32) 15U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_location location_2 (object->mAttribute_mBankIndex.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("selected bank idx should be lower or equal to 15") COMMA_SOURCE_FILE_AT_LINE (564)) ;
    ioArgument_ioCurrentBank = GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (565)) ;
  }else if (kBoolFalse == test_1) {
    const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, object->mAttribute_mBankIndex.reader_uint (SOURCE_FILE_AT_LINE (566)).objectCompare (ioArgument_ioCurrentBank)).boolEnum () ;
    if (kBoolTrue == test_3) {
      ioArgument_ioCurrentBank = object->mAttribute_mBankIndex.reader_uint (SOURCE_FILE_AT_LINE (567)) ;
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mBankIndex COMMA_SOURCE_FILE_AT_LINE (568)) COMMA_SOURCE_FILE_AT_LINE (568)) ;
    }else if (kBoolFalse == test_3) {
      const enumGalgasBool test_4 = object->mAttribute_mWarningOnUselessBanksel.boolEnum () ;
      if (kBoolTrue == test_4) {
        GALGAS_location location_5 (object->mAttribute_mBankIndex.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticWarning (location_5, GALGAS_string ("useless instruction: the bank ").operator_concat (ioArgument_ioCurrentBank.reader_string (SOURCE_FILE_AT_LINE (570)) COMMA_SOURCE_FILE_AT_LINE (570)).operator_concat (GALGAS_string (" is already selected") COMMA_SOURCE_FILE_AT_LINE (570)) COMMA_SOURCE_FILE_AT_LINE (570)) ;
      }
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_banksel_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_banksel.mSlotID,
                               categoryMethod_instruction_5F_banksel_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_banksel_analyze (defineCategoryMethod_instruction_5F_banksel_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category method '@instruction_banksel_register analyze'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_banksel_5F_register_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                       const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                       GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                       const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                       const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                       const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                       const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                       GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                       GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                       GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                       GALGAS_uint & ioArgument_ioCurrentBank,
                                                                       const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                       GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                                       const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_banksel_5F_register * object = (const cPtr_instruction_5F_banksel_5F_register *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_banksel_5F_register) ;
  const enumGalgasBool test_0 = constinArgument_inShouldPreserveBSR.boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("cannot use \"banksel\" here: bank selection should be preserved (use \"banksave\" instruction)") COMMA_SOURCE_FILE_AT_LINE (592)) ;
  }
  GALGAS_uint var_registerAddress = callCategoryReader_getRegisterAddress ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inRegisterTable, inCompiler COMMA_SOURCE_FILE_AT_LINE (594)) ;
  GALGAS_uint var_newBank = var_registerAddress.right_shift_operation (GALGAS_uint ((PMUInt32) 8U) COMMA_SOURCE_FILE_AT_LINE (595)) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, ioArgument_ioCurrentBank.objectCompare (var_newBank)).boolEnum () ;
  if (kBoolTrue == test_1) {
    ioArgument_ioCurrentBank = var_newBank ;
    ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_luint::constructor_new (var_newBank, object->mAttribute_mRegisterExpression.reader_mRegisterName (SOURCE_FILE_AT_LINE (600)).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (600)) COMMA_SOURCE_FILE_AT_LINE (598)) COMMA_SOURCE_FILE_AT_LINE (598)) ;
  }else if (kBoolFalse == test_1) {
    const enumGalgasBool test_2 = object->mAttribute_mWarningOnUselessBanksel.boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mRegisterExpression.reader_mRegisterName (SOURCE_FILE_AT_LINE (603)).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticWarning (location_3, GALGAS_string ("useless instruction: the bank ").operator_concat (var_newBank.reader_string (SOURCE_FILE_AT_LINE (603)) COMMA_SOURCE_FILE_AT_LINE (603)).operator_concat (GALGAS_string (" is already selected") COMMA_SOURCE_FILE_AT_LINE (603)) COMMA_SOURCE_FILE_AT_LINE (603)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_banksel_5F_register_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_banksel_5F_register.mSlotID,
                               categoryMethod_instruction_5F_banksel_5F_register_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_banksel_5F_register_analyze (defineCategoryMethod_instruction_5F_banksel_5F_register_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@instruction_TBLRD analyzeSimpleInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_TBLRD_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                          const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                          const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                          const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                                          const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                          const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                          GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                                          const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                          GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                          C_Compiler * /* inCompiler */
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_TBLRD * object = (const cPtr_instruction_5F_TBLRD *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_TBLRD) ;
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLRD::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mOption COMMA_SOURCE_FILE_AT_LINE (619)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_TBLRD_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_TBLRD.mSlotID,
                                                categoryMethod_instruction_5F_TBLRD_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_TBLRD_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_TBLRD_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@instruction_TBLWT analyzeSimpleInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_TBLWT_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                          const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                          const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                          const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                                          const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                          const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                          GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                                          const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                          GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                          C_Compiler * /* inCompiler */
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_TBLWT * object = (const cPtr_instruction_5F_TBLWT *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_TBLWT) ;
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLWT::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mOption COMMA_SOURCE_FILE_AT_LINE (637)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_TBLWT_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_TBLWT.mSlotID,
                                                categoryMethod_instruction_5F_TBLWT_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_TBLWT_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_TBLWT_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category method '@instruction_MNOP analyze'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_MNOP_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                        const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                        GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                        const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                        const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                        const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                        const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                        GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                        GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                        GALGAS_string & /* ioArgument_ioListFileContents */,
                                                        GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                        const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                        GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                        const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                        C_Compiler * inCompiler
                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_MNOP * object = (const cPtr_instruction_5F_MNOP *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_MNOP) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mOccurrenceFactor.reader_uint (SOURCE_FILE_AT_LINE (661)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mOccurrenceFactor.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticWarning (location_1, GALGAS_string ("occurrence argument is zero: no generated code") COMMA_SOURCE_FILE_AT_LINE (662)) ;
  }
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MNOP::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mOccurrenceFactor COMMA_SOURCE_FILE_AT_LINE (665)) COMMA_SOURCE_FILE_AT_LINE (665)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_MNOP_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_MNOP.mSlotID,
                               categoryMethod_instruction_5F_MNOP_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_MNOP_analyze (defineCategoryMethod_instruction_5F_MNOP_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category method '@instruction_LTBLPTR analyze'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_LTBLPTR_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                           const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                           GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                           const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                           const GALGAS_registerTable constinArgument_inRegisterTable,
                                                           const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                           const GALGAS_constantMap constinArgument_inConstantMap,
                                                           GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                           GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                           GALGAS_string & /* ioArgument_ioListFileContents */,
                                                           GALGAS_uint & ioArgument_ioCurrentBank,
                                                           const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                           GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                           const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                           C_Compiler * inCompiler
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_LTBLPTR * object = (const cPtr_instruction_5F_LTBLPTR *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_LTBLPTR) ;
  GALGAS_sint var_result ;
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mImmediatExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_result, inCompiler COMMA_SOURCE_FILE_AT_LINE (688)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, var_result.objectCompare (GALGAS_sint ((PMSInt32) 16777215L))).operator_or (GALGAS_bool (kIsStrictInf, var_result.objectCompare (GALGAS_sint ((PMSInt32) 0L))) COMMA_SOURCE_FILE_AT_LINE (690)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("immediate value is evaluated as ").operator_concat (var_result.reader_string (SOURCE_FILE_AT_LINE (691)) COMMA_SOURCE_FILE_AT_LINE (691)).operator_concat (GALGAS_string (" (should be between 0 and 0xFF_FFFF)") COMMA_SOURCE_FILE_AT_LINE (691)) COMMA_SOURCE_FILE_AT_LINE (691)) ;
  }
  GALGAS_uint var_address = var_result.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (693)) ;
  GALGAS_registerExpression var_TBLPTRU = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("TBLPTRU"), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (695)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (695)) COMMA_SOURCE_FILE_AT_LINE (695)) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_outIPICregisterDescription ;
  GALGAS_bitSliceTable joker_23852_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) var_TBLPTRU.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_outIPICregisterDescription, joker_23852_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (696)) ;
  GALGAS_uint var_upper = var_address.right_shift_operation (GALGAS_uint ((PMUInt32) 16U) COMMA_SOURCE_FILE_AT_LINE (703)) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_upper.objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_CLRF (SOURCE_FILE_AT_LINE (707)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (705)) COMMA_SOURCE_FILE_AT_LINE (705)) ;
  }else if (kBoolFalse == test_1) {
    const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_upper.objectCompare (GALGAS_uint ((PMUInt32) 255U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_SETF (SOURCE_FILE_AT_LINE (713)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (711)) COMMA_SOURCE_FILE_AT_LINE (711)) ;
    }else if (kBoolFalse == test_2) {
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_literal_5F_instruction_5F_opcode::constructor_MOVLW (SOURCE_FILE_AT_LINE (719)), var_upper COMMA_SOURCE_FILE_AT_LINE (717)) COMMA_SOURCE_FILE_AT_LINE (717)) ;
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE_AT_LINE (724)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (722)) COMMA_SOURCE_FILE_AT_LINE (722)) ;
    }
  }
  GALGAS_registerExpression var_TBLPTRH = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("TBLPTRH"), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (729)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (729)) COMMA_SOURCE_FILE_AT_LINE (729)) ;
  GALGAS_bitSliceTable joker_25026_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) var_TBLPTRH.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_outIPICregisterDescription, joker_25026_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (730)) ;
  GALGAS_uint var_high = var_address.right_shift_operation (GALGAS_uint ((PMUInt32) 8U) COMMA_SOURCE_FILE_AT_LINE (737)).operator_and (GALGAS_uint ((PMUInt32) 255U) COMMA_SOURCE_FILE_AT_LINE (737)) ;
  const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, var_high.objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_3) {
    ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_CLRF (SOURCE_FILE_AT_LINE (741)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (739)) COMMA_SOURCE_FILE_AT_LINE (739)) ;
  }else if (kBoolFalse == test_3) {
    const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, var_high.objectCompare (GALGAS_uint ((PMUInt32) 255U))).boolEnum () ;
    if (kBoolTrue == test_4) {
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_SETF (SOURCE_FILE_AT_LINE (747)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (745)) COMMA_SOURCE_FILE_AT_LINE (745)) ;
    }else if (kBoolFalse == test_4) {
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_literal_5F_instruction_5F_opcode::constructor_MOVLW (SOURCE_FILE_AT_LINE (753)), var_high COMMA_SOURCE_FILE_AT_LINE (751)) COMMA_SOURCE_FILE_AT_LINE (751)) ;
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE_AT_LINE (758)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (756)) COMMA_SOURCE_FILE_AT_LINE (756)) ;
    }
  }
  GALGAS_registerExpression var_TBLPTRL = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("TBLPTRL"), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (763)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (763)) COMMA_SOURCE_FILE_AT_LINE (763)) ;
  GALGAS_bitSliceTable joker_26203_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) var_TBLPTRL.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_outIPICregisterDescription, joker_26203_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (764)) ;
  GALGAS_uint var_low = var_address.operator_and (GALGAS_uint ((PMUInt32) 255U) COMMA_SOURCE_FILE_AT_LINE (771)) ;
  const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, var_low.objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_5) {
    ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_CLRF (SOURCE_FILE_AT_LINE (775)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (773)) COMMA_SOURCE_FILE_AT_LINE (773)) ;
  }else if (kBoolFalse == test_5) {
    const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, var_low.objectCompare (GALGAS_uint ((PMUInt32) 255U))).boolEnum () ;
    if (kBoolTrue == test_6) {
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_SETF (SOURCE_FILE_AT_LINE (781)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (779)) COMMA_SOURCE_FILE_AT_LINE (779)) ;
    }else if (kBoolFalse == test_6) {
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_literal_5F_instruction_5F_opcode::constructor_MOVLW (SOURCE_FILE_AT_LINE (787)), var_low COMMA_SOURCE_FILE_AT_LINE (785)) COMMA_SOURCE_FILE_AT_LINE (785)) ;
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE_AT_LINE (792)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (790)) COMMA_SOURCE_FILE_AT_LINE (790)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_LTBLPTR_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_LTBLPTR.mSlotID,
                               categoryMethod_instruction_5F_LTBLPTR_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_LTBLPTR_analyze (defineCategoryMethod_instruction_5F_LTBLPTR_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category method '@instruction_LDATAPTR analyze'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_LDATAPTR_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                            const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                            GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                            const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                            const GALGAS_registerTable constinArgument_inRegisterTable,
                                                            const GALGAS_dataMap constinArgument_inDataMap,
                                                            const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                            GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                            GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                            GALGAS_string & /* ioArgument_ioListFileContents */,
                                                            GALGAS_uint & ioArgument_ioCurrentBank,
                                                            const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                            GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                            const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                            C_Compiler * inCompiler
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_LDATAPTR * object = (const cPtr_instruction_5F_LDATAPTR *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_LDATAPTR) ;
  GALGAS_uint var_dataSize ;
  constinArgument_inDataMap.method_searchKey (object->mAttribute_mDataName, var_dataSize, inCompiler COMMA_SOURCE_FILE_AT_LINE (815)) ;
  GALGAS_lstring var_labelName = GALGAS_lstring::constructor_new (GALGAS_string ("_data_").operator_concat (object->mAttribute_mDataName.reader_string (SOURCE_FILE_AT_LINE (816)) COMMA_SOURCE_FILE_AT_LINE (816)), object->mAttribute_mDataName.mAttribute_location COMMA_SOURCE_FILE_AT_LINE (816)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsSupOrEqual, object->mAttribute_mDataIndex.reader_uint (SOURCE_FILE_AT_LINE (818)).objectCompare (var_dataSize)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mDataIndex.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("index should be < ").operator_concat (var_dataSize.reader_string (SOURCE_FILE_AT_LINE (819)) COMMA_SOURCE_FILE_AT_LINE (819)) COMMA_SOURCE_FILE_AT_LINE (819)) ;
  }
  GALGAS_registerExpression var_TBLPTRU = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("TBLPTRU"), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (822)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (822)) COMMA_SOURCE_FILE_AT_LINE (822)) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_outIPICregisterDescription ;
  GALGAS_bitSliceTable joker_28242_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) var_TBLPTRU.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_outIPICregisterDescription, joker_28242_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (823)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W::constructor_new (object->mAttribute_mInstructionLocation, var_labelName, object->mAttribute_mDataIndex.reader_uint (SOURCE_FILE_AT_LINE (833)).multiply_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (833)), GALGAS_uint ((PMUInt32) 16U) COMMA_SOURCE_FILE_AT_LINE (830)) COMMA_SOURCE_FILE_AT_LINE (830)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE_AT_LINE (838)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (836)) COMMA_SOURCE_FILE_AT_LINE (836)) ;
  GALGAS_registerExpression var_TBLPTRH = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("TBLPTRH"), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (842)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (842)) COMMA_SOURCE_FILE_AT_LINE (842)) ;
  GALGAS_bitSliceTable joker_28884_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) var_TBLPTRH.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_outIPICregisterDescription, joker_28884_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (843)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W::constructor_new (object->mAttribute_mInstructionLocation, var_labelName, object->mAttribute_mDataIndex.reader_uint (SOURCE_FILE_AT_LINE (853)).multiply_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (853)), GALGAS_uint ((PMUInt32) 8U) COMMA_SOURCE_FILE_AT_LINE (850)) COMMA_SOURCE_FILE_AT_LINE (850)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE_AT_LINE (858)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (856)) COMMA_SOURCE_FILE_AT_LINE (856)) ;
  GALGAS_registerExpression var_TBLPTRL = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("TBLPTRL"), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (862)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (862)) COMMA_SOURCE_FILE_AT_LINE (862)) ;
  GALGAS_bitSliceTable joker_29524_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) var_TBLPTRL.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_outIPICregisterDescription, joker_29524_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (863)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W::constructor_new (object->mAttribute_mInstructionLocation, var_labelName, object->mAttribute_mDataIndex.reader_uint (SOURCE_FILE_AT_LINE (873)).multiply_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (873)), GALGAS_uint ((PMUInt32) 0U) COMMA_SOURCE_FILE_AT_LINE (870)) COMMA_SOURCE_FILE_AT_LINE (870)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE_AT_LINE (878)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (876)) COMMA_SOURCE_FILE_AT_LINE (876)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_LDATAPTR_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_LDATAPTR.mSlotID,
                               categoryMethod_instruction_5F_LDATAPTR_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_LDATAPTR_analyze (defineCategoryMethod_instruction_5F_LDATAPTR_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category method '@instruction_JUMP analyze'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_JUMP_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                        const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                        GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                        const GALGAS_routineMap constinArgument_inRoutineMap,
                                                        const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                        const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                        const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                        GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                        GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                        GALGAS_string & /* ioArgument_ioListFileContents */,
                                                        GALGAS_uint & ioArgument_ioCurrentBank,
                                                        const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                        GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                        const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                        C_Compiler * inCompiler
                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_JUMP * object = (const cPtr_instruction_5F_JUMP *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_JUMP) ;
  GALGAS_bool var_isNoReturn ;
  GALGAS_uint var_requiredBank ;
  GALGAS_uint joker_30558_0 ; // Joker input parameter
  GALGAS_bool joker_30561_0 ; // Joker input parameter
  constinArgument_inRoutineMap.method_searchKey (object->mAttribute_mTargetLabel, var_isNoReturn, var_requiredBank, joker_30558_0, joker_30561_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (901)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (902)))).operator_and (GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (ioArgument_ioCurrentBank)) COMMA_SOURCE_FILE_AT_LINE (902)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_string var_errorMessage = GALGAS_string ("the routine '").operator_concat (object->mAttribute_mTargetLabel.reader_string (SOURCE_FILE_AT_LINE (903)) COMMA_SOURCE_FILE_AT_LINE (903)).operator_concat (GALGAS_string ("' requires BSR to be set to ") COMMA_SOURCE_FILE_AT_LINE (903)).operator_concat (var_requiredBank.reader_string (SOURCE_FILE_AT_LINE (903)) COMMA_SOURCE_FILE_AT_LINE (903)) ;
    var_errorMessage.dotAssign_operation (GALGAS_string (", but BSR ") COMMA_SOURCE_FILE_AT_LINE (904)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, ioArgument_ioCurrentBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (905)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_errorMessage.dotAssign_operation (GALGAS_string ("does contain any reliable value") COMMA_SOURCE_FILE_AT_LINE (906)) ;
    }else if (kBoolFalse == test_1) {
      var_errorMessage.dotAssign_operation (GALGAS_string ("is set to ").operator_concat (ioArgument_ioCurrentBank.reader_string (SOURCE_FILE_AT_LINE (908)) COMMA_SOURCE_FILE_AT_LINE (908)) COMMA_SOURCE_FILE_AT_LINE (908)) ;
    }
    GALGAS_location location_2 (object->mAttribute_mTargetLabel.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (910)) ;
  }
  const enumGalgasBool test_3 = var_isNoReturn.operator_not (SOURCE_FILE_AT_LINE (912)).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_location location_4 (object->mAttribute_mTargetLabel.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_4, GALGAS_string ("a regular routine should be called with a RCALL, CALL or JSR instruction") COMMA_SOURCE_FILE_AT_LINE (913)) ;
  }
  ioArgument_ioContinuesInSequence = GALGAS_bool (false) ;
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = GALGAS_ipic_31__38_JumpTerminator::constructor_new (object->mAttribute_mTargetLabel COMMA_SOURCE_FILE_AT_LINE (917)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_JUMP_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_JUMP.mSlotID,
                               categoryMethod_instruction_5F_JUMP_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_JUMP_analyze (defineCategoryMethod_instruction_5F_JUMP_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@instruction_computed_rcall analyze'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_computed_5F_rcall_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                     const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                     GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                     const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                     const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                     const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                     const GALGAS_constantMap constinArgument_inConstantMap,
                                                                     GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                                     GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                     GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                     GALGAS_uint & ioArgument_ioCurrentBank,
                                                                     const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                     GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                                     const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_computed_5F_rcall * object = (const cPtr_instruction_5F_computed_5F_rcall *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_computed_5F_rcall) ;
  GALGAS_bool var_allPreserveBank = GALGAS_bool (true) ;
  GALGAS_bool var_someReturnsBank = GALGAS_bool (false) ;
  GALGAS_uint var_returnedBankSelection = ioArgument_ioCurrentBank ;
  cEnumerator_lstringlist enumerator_32019 (object->mAttribute_mTargetLabels, kEnumeration_up) ;
  while (enumerator_32019.hasCurrentObject ()) {
    GALGAS_bool var_isNoReturn ;
    GALGAS_uint var_requiredBank ;
    GALGAS_uint var_returnedBank ;
    GALGAS_bool var_preservesBank ;
    constinArgument_inRoutineMap.method_searchKey (enumerator_32019.current_mValue (HERE), var_isNoReturn, var_requiredBank, var_returnedBank, var_preservesBank, inCompiler COMMA_SOURCE_FILE_AT_LINE (942)) ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (943)))).operator_and (GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (ioArgument_ioCurrentBank)) COMMA_SOURCE_FILE_AT_LINE (943)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string var_errorMessage = GALGAS_string ("the routine '").operator_concat (enumerator_32019.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (944)) COMMA_SOURCE_FILE_AT_LINE (944)).operator_concat (GALGAS_string ("' requires BSR to be set to ") COMMA_SOURCE_FILE_AT_LINE (944)).operator_concat (var_requiredBank.reader_string (SOURCE_FILE_AT_LINE (944)) COMMA_SOURCE_FILE_AT_LINE (944)) ;
      var_errorMessage.dotAssign_operation (GALGAS_string (", but BSR ") COMMA_SOURCE_FILE_AT_LINE (945)) ;
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, ioArgument_ioCurrentBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (946)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_errorMessage.dotAssign_operation (GALGAS_string ("does contain any reliable value") COMMA_SOURCE_FILE_AT_LINE (947)) ;
      }else if (kBoolFalse == test_1) {
        var_errorMessage.dotAssign_operation (GALGAS_string ("is set to ").operator_concat (ioArgument_ioCurrentBank.reader_string (SOURCE_FILE_AT_LINE (949)) COMMA_SOURCE_FILE_AT_LINE (949)) COMMA_SOURCE_FILE_AT_LINE (949)) ;
      }
      GALGAS_location location_2 (enumerator_32019.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (951)) ;
    }
    const enumGalgasBool test_3 = var_isNoReturn.boolEnum () ;
    if (kBoolTrue == test_3) {
      GALGAS_location location_4 (enumerator_32019.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, GALGAS_string ("for being named in a computed rcall, the '").operator_concat (enumerator_32019.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (954)) COMMA_SOURCE_FILE_AT_LINE (954)).operator_concat (GALGAS_string ("' routine should be declared without the \"noreturn\" qualifier") COMMA_SOURCE_FILE_AT_LINE (954)) COMMA_SOURCE_FILE_AT_LINE (954)) ;
    }
    const enumGalgasBool test_5 = constinArgument_inShouldPreserveBSR.operator_and (var_preservesBank.operator_not (SOURCE_FILE_AT_LINE (956)) COMMA_SOURCE_FILE_AT_LINE (956)).boolEnum () ;
    if (kBoolTrue == test_5) {
      GALGAS_location location_6 (enumerator_32019.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_6, GALGAS_string ("the '").operator_concat (enumerator_32019.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (957)) COMMA_SOURCE_FILE_AT_LINE (957)).operator_concat (GALGAS_string ("' routine should preserved bank selection") COMMA_SOURCE_FILE_AT_LINE (957)) COMMA_SOURCE_FILE_AT_LINE (957)) ;
    }else if (kBoolFalse == test_5) {
      const enumGalgasBool test_7 = constinArgument_inShouldPreserveBSR.operator_not (SOURCE_FILE_AT_LINE (958)).operator_and (var_preservesBank.operator_not (SOURCE_FILE_AT_LINE (958)) COMMA_SOURCE_FILE_AT_LINE (958)).boolEnum () ;
      if (kBoolTrue == test_7) {
        const enumGalgasBool test_8 = var_someReturnsBank.operator_not (SOURCE_FILE_AT_LINE (959)).boolEnum () ;
        if (kBoolTrue == test_8) {
          var_returnedBankSelection = var_returnedBank ;
          var_someReturnsBank = GALGAS_bool (true) ;
        }else if (kBoolFalse == test_8) {
          const enumGalgasBool test_9 = GALGAS_bool (kIsNotEqual, var_returnedBankSelection.objectCompare (var_returnedBank)).boolEnum () ;
          if (kBoolTrue == test_9) {
            GALGAS_string var_errorMessage = GALGAS_string ("the '").operator_concat (enumerator_32019.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (963)) COMMA_SOURCE_FILE_AT_LINE (963)).operator_concat (GALGAS_string ("' routine returns ") COMMA_SOURCE_FILE_AT_LINE (963)) ;
            const enumGalgasBool test_10 = GALGAS_bool (kIsEqual, var_returnedBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (964)))).boolEnum () ;
            if (kBoolTrue == test_10) {
              var_errorMessage.dotAssign_operation (GALGAS_string ("no bank selection") COMMA_SOURCE_FILE_AT_LINE (965)) ;
            }else if (kBoolFalse == test_10) {
              var_errorMessage.dotAssign_operation (GALGAS_string ("bank selection set to  ").operator_concat (var_returnedBank.reader_string (SOURCE_FILE_AT_LINE (967)) COMMA_SOURCE_FILE_AT_LINE (967)) COMMA_SOURCE_FILE_AT_LINE (967)) ;
            }
            var_errorMessage.dotAssign_operation (GALGAS_string (", but previous routine(s) return(s) ") COMMA_SOURCE_FILE_AT_LINE (969)) ;
            const enumGalgasBool test_11 = GALGAS_bool (kIsEqual, var_returnedBankSelection.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (970)))).boolEnum () ;
            if (kBoolTrue == test_11) {
              var_errorMessage.dotAssign_operation (GALGAS_string ("no bank selection") COMMA_SOURCE_FILE_AT_LINE (971)) ;
            }else if (kBoolFalse == test_11) {
              var_errorMessage.dotAssign_operation (GALGAS_string ("bank selection set to  ").operator_concat (var_returnedBankSelection.reader_string (SOURCE_FILE_AT_LINE (973)) COMMA_SOURCE_FILE_AT_LINE (973)) COMMA_SOURCE_FILE_AT_LINE (973)) ;
            }
            GALGAS_location location_12 (enumerator_32019.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_12, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (975)) ;
          }
        }
      }else if (kBoolFalse == test_7) {
        const enumGalgasBool test_13 = constinArgument_inShouldPreserveBSR.operator_not (SOURCE_FILE_AT_LINE (977)).operator_and (var_preservesBank COMMA_SOURCE_FILE_AT_LINE (977)).boolEnum () ;
        if (kBoolTrue == test_13) {
        }
      }
    }
    enumerator_32019.gotoNextObject () ;
  }
  ioArgument_ioContinuesInSequence = GALGAS_bool (true) ;
  ioArgument_ioCurrentBank = var_returnedBankSelection ;
  GALGAS_sint var_size ;
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mSizeExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_size, inCompiler COMMA_SOURCE_FILE_AT_LINE (984)) ;
  const enumGalgasBool test_14 = GALGAS_bool (kIsStrictInf, var_size.objectCompare (GALGAS_sint ((PMSInt32) 2L))).boolEnum () ;
  if (kBoolTrue == test_14) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (986)) COMMA_SOURCE_FILE_AT_LINE (986)).operator_concat (GALGAS_string (") should be greater or equal to 2") COMMA_SOURCE_FILE_AT_LINE (986)) COMMA_SOURCE_FILE_AT_LINE (986)) ;
  }else if (kBoolFalse == test_14) {
    const enumGalgasBool test_15 = GALGAS_bool (kIsStrictSup, var_size.objectCompare (GALGAS_sint ((PMSInt32) 64L))).boolEnum () ;
    if (kBoolTrue == test_15) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (988)) COMMA_SOURCE_FILE_AT_LINE (988)).operator_concat (GALGAS_string (") should be lower or equal to 64") COMMA_SOURCE_FILE_AT_LINE (988)) COMMA_SOURCE_FILE_AT_LINE (988)) ;
    }else if (kBoolFalse == test_15) {
      const enumGalgasBool test_16 = GALGAS_bool (kIsNotEqual, var_size.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (989)).objectCompare (object->mAttribute_mTargetLabels.reader_length (SOURCE_FILE_AT_LINE (989)))).boolEnum () ;
      if (kBoolTrue == test_16) {
        inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the routine name list length (").operator_concat (object->mAttribute_mTargetLabels.reader_length (SOURCE_FILE_AT_LINE (990)).reader_string (SOURCE_FILE_AT_LINE (990)) COMMA_SOURCE_FILE_AT_LINE (990)).operator_concat (GALGAS_string (") should be equal to the computed range (") COMMA_SOURCE_FILE_AT_LINE (990)).operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (990)) COMMA_SOURCE_FILE_AT_LINE (990)).operator_concat (GALGAS_string (")") COMMA_SOURCE_FILE_AT_LINE (990)) COMMA_SOURCE_FILE_AT_LINE (990)) ;
      }
    }
  }
  GALGAS_string var_label_30_ = GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (993)) COMMA_SOURCE_FILE_AT_LINE (993)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (994)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mTargetLabels, var_label_30_, object->mAttribute_mUsesRelativeCall COMMA_SOURCE_FILE_AT_LINE (995)) COMMA_SOURCE_FILE_AT_LINE (995)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_computed_5F_rcall_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_computed_5F_rcall.mSlotID,
                               categoryMethod_instruction_5F_computed_5F_rcall_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_computed_5F_rcall_analyze (defineCategoryMethod_instruction_5F_computed_5F_rcall_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category method '@instruction_computed_goto analyze'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_computed_5F_goto_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                    const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                    GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                    const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                    const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                    const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                    const GALGAS_constantMap constinArgument_inConstantMap,
                                                                    GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                    GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                    GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                    GALGAS_uint & ioArgument_ioCurrentBank,
                                                                    const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                    GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                                    const GALGAS_routineKind constinArgument_inRoutineKind,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_computed_5F_goto * object = (const cPtr_instruction_5F_computed_5F_goto *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_computed_5F_goto) ;
  cEnumerator_lstringlist enumerator_35398 (object->mAttribute_mTargetLabels, kEnumeration_up) ;
  while (enumerator_35398.hasCurrentObject ()) {
    GALGAS_bool var_isNoReturn ;
    GALGAS_uint var_requiredBank ;
    GALGAS_uint joker_35477_0 ; // Joker input parameter
    GALGAS_bool joker_35480_0 ; // Joker input parameter
    constinArgument_inRoutineMap.method_searchKey (enumerator_35398.current_mValue (HERE), var_isNoReturn, var_requiredBank, joker_35477_0, joker_35480_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1022)) ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1023)))).operator_and (GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (ioArgument_ioCurrentBank)) COMMA_SOURCE_FILE_AT_LINE (1023)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string var_errorMessage = GALGAS_string ("the routine '").operator_concat (enumerator_35398.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1024)) COMMA_SOURCE_FILE_AT_LINE (1024)).operator_concat (GALGAS_string ("' requires BSR to be set to ") COMMA_SOURCE_FILE_AT_LINE (1024)).operator_concat (var_requiredBank.reader_string (SOURCE_FILE_AT_LINE (1024)) COMMA_SOURCE_FILE_AT_LINE (1024)) ;
      var_errorMessage.dotAssign_operation (GALGAS_string (", but BSR ") COMMA_SOURCE_FILE_AT_LINE (1025)) ;
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, ioArgument_ioCurrentBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1026)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_errorMessage.dotAssign_operation (GALGAS_string ("does contain any reliable value") COMMA_SOURCE_FILE_AT_LINE (1027)) ;
      }else if (kBoolFalse == test_1) {
        var_errorMessage.dotAssign_operation (GALGAS_string ("is set to ").operator_concat (ioArgument_ioCurrentBank.reader_string (SOURCE_FILE_AT_LINE (1029)) COMMA_SOURCE_FILE_AT_LINE (1029)) COMMA_SOURCE_FILE_AT_LINE (1029)) ;
      }
      GALGAS_location location_2 (enumerator_35398.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (1031)) ;
    }
    const enumGalgasBool test_3 = var_isNoReturn.operator_not (SOURCE_FILE_AT_LINE (1033)).boolEnum () ;
    if (kBoolTrue == test_3) {
      GALGAS_location location_4 (enumerator_35398.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, GALGAS_string ("for being named in a computed goto, the '").operator_concat (enumerator_35398.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1034)) COMMA_SOURCE_FILE_AT_LINE (1034)).operator_concat (GALGAS_string ("' routine should be declared with the \"noreturn\" qualifier") COMMA_SOURCE_FILE_AT_LINE (1034)) COMMA_SOURCE_FILE_AT_LINE (1034)) ;
    }
    enumerator_35398.gotoNextObject () ;
  }
  ioArgument_ioContinuesInSequence = GALGAS_bool (false) ;
  if (constinArgument_inRoutineKind.isValid ()) {
    switch (constinArgument_inRoutineKind.enumValue ()) {
    case GALGAS_routineKind::kNotBuilt:
      break ;
    case GALGAS_routineKind::kEnum_regularRoutine: {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("a regular routine does not accept computed goto instruction") COMMA_SOURCE_FILE_AT_LINE (1040)) ;
      } break ;
    case GALGAS_routineKind::kEnum_noReturnRoutine: {
      } break ;
    case GALGAS_routineKind::kEnum_interruptRoutine: {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("an interrupt routine does not accept computed goto instruction") COMMA_SOURCE_FILE_AT_LINE (1043)) ;
      } break ;
    }
  }
  GALGAS_sint var_size ;
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mSizeExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_size, inCompiler COMMA_SOURCE_FILE_AT_LINE (1046)) ;
  const enumGalgasBool test_5 = GALGAS_bool (kIsStrictInf, var_size.objectCompare (GALGAS_sint ((PMSInt32) 2L))).boolEnum () ;
  if (kBoolTrue == test_5) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1048)) COMMA_SOURCE_FILE_AT_LINE (1048)).operator_concat (GALGAS_string (") should be greater or equal to 2") COMMA_SOURCE_FILE_AT_LINE (1048)) COMMA_SOURCE_FILE_AT_LINE (1048)) ;
  }else if (kBoolFalse == test_5) {
    const enumGalgasBool test_6 = GALGAS_bool (kIsStrictSup, var_size.objectCompare (GALGAS_sint ((PMSInt32) 64L))).boolEnum () ;
    if (kBoolTrue == test_6) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1050)) COMMA_SOURCE_FILE_AT_LINE (1050)).operator_concat (GALGAS_string (") should be lower or equal to 64") COMMA_SOURCE_FILE_AT_LINE (1050)) COMMA_SOURCE_FILE_AT_LINE (1050)) ;
    }else if (kBoolFalse == test_6) {
      const enumGalgasBool test_7 = GALGAS_bool (kIsNotEqual, var_size.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (1051)).objectCompare (object->mAttribute_mTargetLabels.reader_length (SOURCE_FILE_AT_LINE (1051)))).boolEnum () ;
      if (kBoolTrue == test_7) {
        inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the routine name list length (").operator_concat (object->mAttribute_mTargetLabels.reader_length (SOURCE_FILE_AT_LINE (1052)).reader_string (SOURCE_FILE_AT_LINE (1052)) COMMA_SOURCE_FILE_AT_LINE (1052)).operator_concat (GALGAS_string (") should be equal to the computed range (") COMMA_SOURCE_FILE_AT_LINE (1052)).operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1052)) COMMA_SOURCE_FILE_AT_LINE (1052)).operator_concat (GALGAS_string (")") COMMA_SOURCE_FILE_AT_LINE (1052)) COMMA_SOURCE_FILE_AT_LINE (1052)) ;
      }
    }
  }
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = GALGAS_ipic_31__38_ComputedGotoTerminator::constructor_new (object->mAttribute_mTargetLabels, object->mAttribute_mUsesRelativeCall COMMA_SOURCE_FILE_AT_LINE (1055)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_computed_5F_goto_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_computed_5F_goto.mSlotID,
                               categoryMethod_instruction_5F_computed_5F_goto_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_computed_5F_goto_analyze (defineCategoryMethod_instruction_5F_computed_5F_goto_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@instruction_computed_retlw analyze'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_computed_5F_retlw_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                     const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                     GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                     const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                     const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                     const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                     const GALGAS_constantMap constinArgument_inConstantMap,
                                                                     GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                     GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                     GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                     GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                                     const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                     GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                                     const GALGAS_routineKind constinArgument_inRoutineKind,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_computed_5F_retlw * object = (const cPtr_instruction_5F_computed_5F_retlw *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_computed_5F_retlw) ;
  ioArgument_ioContinuesInSequence = GALGAS_bool (false) ;
  if (constinArgument_inRoutineKind.isValid ()) {
    switch (constinArgument_inRoutineKind.enumValue ()) {
    case GALGAS_routineKind::kNotBuilt:
      break ;
    case GALGAS_routineKind::kEnum_regularRoutine: {
      } break ;
    case GALGAS_routineKind::kEnum_noReturnRoutine: {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("a \"noreturn\" routine does not accept computed retlw instruction") COMMA_SOURCE_FILE_AT_LINE (1082)) ;
      } break ;
    case GALGAS_routineKind::kEnum_interruptRoutine: {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("an interrupt routine does not accept computed retlw instruction") COMMA_SOURCE_FILE_AT_LINE (1084)) ;
      } break ;
    }
  }
  GALGAS_sint var_size ;
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mSizeExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_size, inCompiler COMMA_SOURCE_FILE_AT_LINE (1087)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictInf, var_size.objectCompare (GALGAS_sint ((PMSInt32) 2L))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1089)) COMMA_SOURCE_FILE_AT_LINE (1089)).operator_concat (GALGAS_string (") should be greater or equal to 2") COMMA_SOURCE_FILE_AT_LINE (1089)) COMMA_SOURCE_FILE_AT_LINE (1089)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, var_size.objectCompare (GALGAS_sint ((PMSInt32) 128L))).boolEnum () ;
    if (kBoolTrue == test_1) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1091)) COMMA_SOURCE_FILE_AT_LINE (1091)).operator_concat (GALGAS_string (") should be lower or equal to 128") COMMA_SOURCE_FILE_AT_LINE (1091)) COMMA_SOURCE_FILE_AT_LINE (1091)) ;
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, var_size.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (1092)).objectCompare (object->mAttribute_mImmediateExpressionList.reader_length (SOURCE_FILE_AT_LINE (1092)))).boolEnum () ;
      if (kBoolTrue == test_2) {
        inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the constant list length (").operator_concat (object->mAttribute_mImmediateExpressionList.reader_length (SOURCE_FILE_AT_LINE (1093)).reader_string (SOURCE_FILE_AT_LINE (1093)) COMMA_SOURCE_FILE_AT_LINE (1093)).operator_concat (GALGAS_string (") should be equal to the computed range (") COMMA_SOURCE_FILE_AT_LINE (1093)).operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1093)) COMMA_SOURCE_FILE_AT_LINE (1093)).operator_concat (GALGAS_string (")") COMMA_SOURCE_FILE_AT_LINE (1093)) COMMA_SOURCE_FILE_AT_LINE (1093)) ;
      }
    }
  }
  GALGAS_uintlist var_literalValues = GALGAS_uintlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1096)) ;
  cEnumerator_immediatExpressionList enumerator_38837 (object->mAttribute_mImmediateExpressionList, kEnumeration_up) ;
  GALGAS_uint index_38831 ((PMUInt32) 0) ;
  while (enumerator_38837.hasCurrentObject ()) {
    GALGAS_sint var_v ;
    callCategoryMethod_eval ((const cPtr_immediatExpression *) enumerator_38837.current_mExpression (HERE).ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_v, inCompiler COMMA_SOURCE_FILE_AT_LINE (1098)) ;
    const enumGalgasBool test_3 = GALGAS_bool (kIsStrictSup, var_v.objectCompare (GALGAS_sint ((PMSInt32) 255L))).operator_or (GALGAS_bool (kIsStrictInf, var_v.objectCompare (GALGAS_sint ((PMSInt32) 128L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE_AT_LINE (1099)))) COMMA_SOURCE_FILE_AT_LINE (1099)).boolEnum () ;
    if (kBoolTrue == test_3) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("immediate value with idx ").operator_concat (index_38831.reader_string (SOURCE_FILE_AT_LINE (1100)) COMMA_SOURCE_FILE_AT_LINE (1100)).operator_concat (GALGAS_string (" is evaluated as ") COMMA_SOURCE_FILE_AT_LINE (1100)).operator_concat (var_v.reader_string (SOURCE_FILE_AT_LINE (1100)) COMMA_SOURCE_FILE_AT_LINE (1100)).operator_concat (GALGAS_string (" (should be <= 255)") COMMA_SOURCE_FILE_AT_LINE (1100)) COMMA_SOURCE_FILE_AT_LINE (1100)) ;
    }
    var_literalValues.addAssign_operation (var_v.operator_and (GALGAS_sint ((PMSInt32) 255L) COMMA_SOURCE_FILE_AT_LINE (1102)).reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (1102)) COMMA_SOURCE_FILE_AT_LINE (1102)) ;
    enumerator_38837.gotoNextObject () ;
    index_38831.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1097)) ;
  }
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = GALGAS_ipic_31__38_ComputedRETLWTerminator::constructor_new (var_literalValues, object->mAttribute_mUsesRelativeCall COMMA_SOURCE_FILE_AT_LINE (1105)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_computed_5F_retlw_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_computed_5F_retlw.mSlotID,
                               categoryMethod_instruction_5F_computed_5F_retlw_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_computed_5F_retlw_analyze (defineCategoryMethod_instruction_5F_computed_5F_retlw_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category method '@instruction_JUMPCC analyze'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_JUMPCC_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                          const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                          GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                          const GALGAS_routineMap constinArgument_inRoutineMap,
                                                          const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                          const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                          const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                          GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                          GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                          GALGAS_string & /* ioArgument_ioListFileContents */,
                                                          GALGAS_uint & ioArgument_ioCurrentBank,
                                                          const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                          GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                          const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                          C_Compiler * inCompiler
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_JUMPCC * object = (const cPtr_instruction_5F_JUMPCC *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_JUMPCC) ;
  GALGAS_bool var_isNoReturn ;
  GALGAS_uint var_requiredBank ;
  GALGAS_uint joker_39983_0 ; // Joker input parameter
  GALGAS_bool joker_39986_0 ; // Joker input parameter
  constinArgument_inRoutineMap.method_searchKey (object->mAttribute_mTargetLabel, var_isNoReturn, var_requiredBank, joker_39983_0, joker_39986_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1128)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1129)))).operator_and (GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (ioArgument_ioCurrentBank)) COMMA_SOURCE_FILE_AT_LINE (1129)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_string var_errorMessage = GALGAS_string ("the routine '").operator_concat (object->mAttribute_mTargetLabel.reader_string (SOURCE_FILE_AT_LINE (1130)) COMMA_SOURCE_FILE_AT_LINE (1130)).operator_concat (GALGAS_string ("' requires BSR to be set to ") COMMA_SOURCE_FILE_AT_LINE (1130)).operator_concat (var_requiredBank.reader_string (SOURCE_FILE_AT_LINE (1130)) COMMA_SOURCE_FILE_AT_LINE (1130)) ;
    var_errorMessage.dotAssign_operation (GALGAS_string (", but BSR ") COMMA_SOURCE_FILE_AT_LINE (1131)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, ioArgument_ioCurrentBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1132)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_errorMessage.dotAssign_operation (GALGAS_string ("does contain any reliable value") COMMA_SOURCE_FILE_AT_LINE (1133)) ;
    }else if (kBoolFalse == test_1) {
      var_errorMessage.dotAssign_operation (GALGAS_string ("is set to ").operator_concat (ioArgument_ioCurrentBank.reader_string (SOURCE_FILE_AT_LINE (1135)) COMMA_SOURCE_FILE_AT_LINE (1135)) COMMA_SOURCE_FILE_AT_LINE (1135)) ;
    }
    GALGAS_location location_2 (object->mAttribute_mTargetLabel.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (1137)) ;
  }
  const enumGalgasBool test_3 = var_isNoReturn.operator_not (SOURCE_FILE_AT_LINE (1139)).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_location location_4 (object->mAttribute_mTargetLabel.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_4, GALGAS_string ("a regular routine should be called with a RCALL, CALL or JSR instruction") COMMA_SOURCE_FILE_AT_LINE (1140)) ;
  }
  GALGAS_conditionalBranchMode var_mode ;
  const enumGalgasBool test_5 = object->mAttribute_mIsBcc.boolEnum () ;
  if (kBoolTrue == test_5) {
    var_mode = GALGAS_conditionalBranchMode::constructor_native (SOURCE_FILE_AT_LINE (1145)) ;
  }else if (kBoolFalse == test_5) {
    var_mode = GALGAS_conditionalBranchMode::constructor_native (SOURCE_FILE_AT_LINE (1147)) ;
  }
  GALGAS_lstring var_label_30_ = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1150)) COMMA_SOURCE_FILE_AT_LINE (1150)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1150)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1151)) ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_terminator = ioArgument_ioCurrentBlock.mAttribute_mTerminator ;
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = GALGAS_ipic_31__38_ConditionalJumpTerminator::constructor_new (GALGAS_ipic_31__38_JumpTerminator::constructor_new (object->mAttribute_mTargetLabel COMMA_SOURCE_FILE_AT_LINE (1156)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (var_label_30_ COMMA_SOURCE_FILE_AT_LINE (1157)), var_mode, object->mAttribute_mConditionalBranch COMMA_SOURCE_FILE_AT_LINE (1155)) ;
  ioArgument_ioCurrentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1163)), var_label_30_, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1165)), var_terminator COMMA_SOURCE_FILE_AT_LINE (1162)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_JUMPCC_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_JUMPCC.mSlotID,
                               categoryMethod_instruction_5F_JUMPCC_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_JUMPCC_analyze (defineCategoryMethod_instruction_5F_JUMPCC_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category method '@instruction_computed_bra analyze'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_computed_5F_bra_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                   const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                   GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                   const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                   const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                   const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                   const GALGAS_constantMap constinArgument_inConstantMap,
                                                                   GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                   GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                   GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                   GALGAS_uint & ioArgument_ioCurrentBank,
                                                                   const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                   GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                                   const GALGAS_routineKind constinArgument_inRoutineKind,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_computed_5F_bra * object = (const cPtr_instruction_5F_computed_5F_bra *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_computed_5F_bra) ;
  GALGAS_bool var_allPreserveBankSetting = GALGAS_bool (true) ;
  GALGAS_bool var_allReturnBank = GALGAS_bool (true) ;
  GALGAS_uint var_returnedBankValue = GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1190)) ;
  cEnumerator_lstringlist enumerator_42157 (object->mAttribute_mTargetLabels, kEnumeration_up) ;
  while (enumerator_42157.hasCurrentObject ()) {
    GALGAS_bool var_isNoReturn ;
    GALGAS_uint var_requiredBank ;
    GALGAS_uint var_returnedBank ;
    GALGAS_bool var_preservesBank ;
    constinArgument_inRoutineMap.method_searchKey (enumerator_42157.current_mValue (HERE), var_isNoReturn, var_requiredBank, var_returnedBank, var_preservesBank, inCompiler COMMA_SOURCE_FILE_AT_LINE (1192)) ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1194)))).operator_and (GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (ioArgument_ioCurrentBank)) COMMA_SOURCE_FILE_AT_LINE (1194)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string var_errorMessage = GALGAS_string ("the routine '").operator_concat (enumerator_42157.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1195)) COMMA_SOURCE_FILE_AT_LINE (1195)).operator_concat (GALGAS_string ("' requires BSR to be set to ") COMMA_SOURCE_FILE_AT_LINE (1195)).operator_concat (var_requiredBank.reader_string (SOURCE_FILE_AT_LINE (1195)) COMMA_SOURCE_FILE_AT_LINE (1195)) ;
      var_errorMessage.dotAssign_operation (GALGAS_string (", but BSR ") COMMA_SOURCE_FILE_AT_LINE (1196)) ;
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, ioArgument_ioCurrentBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1197)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_errorMessage.dotAssign_operation (GALGAS_string ("does contain any reliable value") COMMA_SOURCE_FILE_AT_LINE (1198)) ;
      }else if (kBoolFalse == test_1) {
        var_errorMessage.dotAssign_operation (GALGAS_string ("is set to ").operator_concat (ioArgument_ioCurrentBank.reader_string (SOURCE_FILE_AT_LINE (1200)) COMMA_SOURCE_FILE_AT_LINE (1200)) COMMA_SOURCE_FILE_AT_LINE (1200)) ;
      }
      GALGAS_location location_2 (enumerator_42157.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (1202)) ;
    }
    const enumGalgasBool test_3 = var_preservesBank.boolEnum () ;
    if (kBoolTrue == test_3) {
      var_allReturnBank = GALGAS_bool (false) ;
    }else if (kBoolFalse == test_3) {
      const enumGalgasBool test_4 = GALGAS_bool (kIsNotEqual, var_returnedBankValue.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1207)))).operator_and (GALGAS_bool (kIsNotEqual, var_returnedBankValue.objectCompare (var_returnedBank)) COMMA_SOURCE_FILE_AT_LINE (1207)).boolEnum () ;
      if (kBoolTrue == test_4) {
        GALGAS_location location_5 (enumerator_42157.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_5, GALGAS_string ("this routine ensures setting of bank '").operator_concat (var_returnedBank.reader_string (SOURCE_FILE_AT_LINE (1208)) COMMA_SOURCE_FILE_AT_LINE (1208)).operator_concat (GALGAS_string ("', but ") COMMA_SOURCE_FILE_AT_LINE (1208)).operator_concat (GALGAS_string ("previous routine(s) ensure setting of bank '") COMMA_SOURCE_FILE_AT_LINE (1209)).operator_concat (var_returnedBankValue.reader_string (SOURCE_FILE_AT_LINE (1209)) COMMA_SOURCE_FILE_AT_LINE (1209)).operator_concat (GALGAS_string ("'.") COMMA_SOURCE_FILE_AT_LINE (1209)) COMMA_SOURCE_FILE_AT_LINE (1208)) ;
      }else if (kBoolFalse == test_4) {
        var_allPreserveBankSetting = GALGAS_bool (false) ;
        var_returnedBankValue = var_returnedBank ;
      }
    }
    const enumGalgasBool test_6 = GALGAS_bool (kIsNotEqual, GALGAS_routineKind::constructor_regularRoutine (SOURCE_FILE_AT_LINE (1214)).objectCompare (constinArgument_inRoutineKind)).operator_and (var_isNoReturn.operator_not (SOURCE_FILE_AT_LINE (1214)) COMMA_SOURCE_FILE_AT_LINE (1214)).boolEnum () ;
    if (kBoolTrue == test_6) {
      GALGAS_location location_7 (enumerator_42157.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_7, GALGAS_string ("for being named in a computed bra from a regular routine, the '").operator_concat (enumerator_42157.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1215)) COMMA_SOURCE_FILE_AT_LINE (1215)).operator_concat (GALGAS_string ("' routine should be declared without any \"noreturn\" qualifier") COMMA_SOURCE_FILE_AT_LINE (1215)) COMMA_SOURCE_FILE_AT_LINE (1215)) ;
    }
    enumerator_42157.gotoNextObject () ;
  }
  const enumGalgasBool test_8 = var_allReturnBank.operator_and (var_allPreserveBankSetting.operator_not (SOURCE_FILE_AT_LINE (1219)) COMMA_SOURCE_FILE_AT_LINE (1219)).boolEnum () ;
  if (kBoolTrue == test_8) {
    ioArgument_ioCurrentBank = var_returnedBankValue ;
  }else if (kBoolFalse == test_8) {
    const enumGalgasBool test_9 = var_allReturnBank.operator_not (SOURCE_FILE_AT_LINE (1221)).operator_and (var_allPreserveBankSetting.operator_not (SOURCE_FILE_AT_LINE (1221)) COMMA_SOURCE_FILE_AT_LINE (1221)).boolEnum () ;
    if (kBoolTrue == test_9) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("invoked routine should either all preserve bank, eihter return the same selected bank") COMMA_SOURCE_FILE_AT_LINE (1222)) ;
    }
  }
  const enumGalgasBool test_10 = constinArgument_inShouldPreserveBSR.operator_and (var_allPreserveBankSetting.operator_not (SOURCE_FILE_AT_LINE (1224)) COMMA_SOURCE_FILE_AT_LINE (1224)).boolEnum () ;
  if (kBoolTrue == test_10) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("invoked routine(s) do(es) not preserve bank selection") COMMA_SOURCE_FILE_AT_LINE (1225)) ;
  }
  ioArgument_ioContinuesInSequence = GALGAS_bool (false) ;
  if (constinArgument_inRoutineKind.isValid ()) {
    switch (constinArgument_inRoutineKind.enumValue ()) {
    case GALGAS_routineKind::kNotBuilt:
      break ;
    case GALGAS_routineKind::kEnum_regularRoutine: {
      } break ;
    case GALGAS_routineKind::kEnum_noReturnRoutine: {
      } break ;
    case GALGAS_routineKind::kEnum_interruptRoutine: {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("an interrupt routine does not accept computed bra instruction") COMMA_SOURCE_FILE_AT_LINE (1234)) ;
      } break ;
    }
  }
  GALGAS_sint var_size ;
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mSizeExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_size, inCompiler COMMA_SOURCE_FILE_AT_LINE (1237)) ;
  const enumGalgasBool test_11 = GALGAS_bool (kIsStrictInf, var_size.objectCompare (GALGAS_sint ((PMSInt32) 2L))).boolEnum () ;
  if (kBoolTrue == test_11) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1239)) COMMA_SOURCE_FILE_AT_LINE (1239)).operator_concat (GALGAS_string (") should be greater or equal to 2") COMMA_SOURCE_FILE_AT_LINE (1239)) COMMA_SOURCE_FILE_AT_LINE (1239)) ;
  }else if (kBoolFalse == test_11) {
    const enumGalgasBool test_12 = GALGAS_bool (kIsStrictSup, var_size.objectCompare (GALGAS_sint ((PMSInt32) 128L))).boolEnum () ;
    if (kBoolTrue == test_12) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1241)) COMMA_SOURCE_FILE_AT_LINE (1241)).operator_concat (GALGAS_string (") should be lower or equal to 128") COMMA_SOURCE_FILE_AT_LINE (1241)) COMMA_SOURCE_FILE_AT_LINE (1241)) ;
    }else if (kBoolFalse == test_12) {
      const enumGalgasBool test_13 = GALGAS_bool (kIsNotEqual, var_size.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (1242)).objectCompare (object->mAttribute_mTargetLabels.reader_length (SOURCE_FILE_AT_LINE (1242)))).boolEnum () ;
      if (kBoolTrue == test_13) {
        inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the routine name list length (").operator_concat (object->mAttribute_mTargetLabels.reader_length (SOURCE_FILE_AT_LINE (1243)).reader_string (SOURCE_FILE_AT_LINE (1243)) COMMA_SOURCE_FILE_AT_LINE (1243)).operator_concat (GALGAS_string (") should be equal to the computed range (") COMMA_SOURCE_FILE_AT_LINE (1243)).operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1243)) COMMA_SOURCE_FILE_AT_LINE (1243)).operator_concat (GALGAS_string (")") COMMA_SOURCE_FILE_AT_LINE (1243)) COMMA_SOURCE_FILE_AT_LINE (1243)) ;
      }
    }
  }
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = GALGAS_ipic_31__38_ComputedBraTerminator::constructor_new (object->mAttribute_mTargetLabels, object->mAttribute_mUsesRelativeCall COMMA_SOURCE_FILE_AT_LINE (1246)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_computed_5F_bra_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_computed_5F_bra.mSlotID,
                               categoryMethod_instruction_5F_computed_5F_bra_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_computed_5F_bra_analyze (defineCategoryMethod_instruction_5F_computed_5F_bra_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Overriding category method '@instruction_IF_BitTest analyze'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_IF_5F_BitTest_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                 const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                 GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                 const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                 const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                 const GALGAS_dataMap constinArgument_inDataMap,
                                                                 const GALGAS_constantMap constinArgument_inConstantMap,
                                                                 GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                 GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                 GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                 GALGAS_uint & ioArgument_ioCurrentBank,
                                                                 const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                 GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                                 const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_IF_5F_BitTest * object = (const cPtr_instruction_5F_IF_5F_BitTest *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_IF_5F_BitTest) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable var_bitSliceTable ;
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, var_bitSliceTable, inCompiler COMMA_SOURCE_FILE_AT_LINE (1270)) ;
  GALGAS_uint var_bitNumber ;
  callCategoryMethod_getBitNumber ((const cPtr_bitNumberExpression *) object->mAttribute_mBitNumber.ptr (), var_bitSliceTable, var_bitNumber, inCompiler COMMA_SOURCE_FILE_AT_LINE (1277)) ;
  GALGAS_uint var_currentBank = ioArgument_ioCurrentBank ;
  GALGAS_ipic_31__38_SequentialInstruction var_embeddedInstruction ;
  callCategoryMethod_analyzeSimpleInstruction ((const cPtr_pic_31__38_PiccoloSimpleInstruction *) object->mAttribute_mEmbeddedInstruction.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, var_currentBank, constinArgument_inShouldPreserveBSR, var_embeddedInstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1283)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_currentBank.objectCompare (var_currentBank)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mEmbeddedInstruction.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (1295)), GALGAS_string ("this instruction does not preserve bank setting") COMMA_SOURCE_FILE_AT_LINE (1295)) ;
  }
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_BitTestSkip::constructor_new (object->mAttribute_mInstructionLocation, var_embeddedInstruction, object->mAttribute_mSkipIfSet, var_IPICregisterDescription, var_bitNumber COMMA_SOURCE_FILE_AT_LINE (1298)) COMMA_SOURCE_FILE_AT_LINE (1298)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_IF_5F_BitTest_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_IF_5F_BitTest.mSlotID,
                               categoryMethod_instruction_5F_IF_5F_BitTest_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_IF_5F_BitTest_analyze (defineCategoryMethod_instruction_5F_IF_5F_BitTest_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category method '@instruction_IF_FA_SEMI_COLON analyze'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                             const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                             GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                             const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                             const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                             const GALGAS_dataMap constinArgument_inDataMap,
                                                                             const GALGAS_constantMap constinArgument_inConstantMap,
                                                                             GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                             GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                             GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                             GALGAS_uint & ioArgument_ioCurrentBank,
                                                                             const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                             GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                                             const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON * object = (const cPtr_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON) ;
  GALGAS_FA_5F_instruction_5F_base_5F_code var_baseCode ;
  if (object->mAttribute_mOpCode.isValid ()) {
    switch (object->mAttribute_mOpCode.enumValue ()) {
    case GALGAS_if_5F_semi_5F_colon_5F_op::kNotBuilt:
      break ;
    case GALGAS_if_5F_semi_5F_colon_5F_op::kEnum_CPFSEQ: {
      var_baseCode = GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_CPFSEQ (SOURCE_FILE_AT_LINE (1326)) ;
      } break ;
    case GALGAS_if_5F_semi_5F_colon_5F_op::kEnum_CPFSGT: {
      var_baseCode = GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_CPFSGT (SOURCE_FILE_AT_LINE (1327)) ;
      } break ;
    case GALGAS_if_5F_semi_5F_colon_5F_op::kEnum_CPFSLT: {
      var_baseCode = GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_CPFSLT (SOURCE_FILE_AT_LINE (1328)) ;
      } break ;
    case GALGAS_if_5F_semi_5F_colon_5F_op::kEnum_TSTFSZ: {
      var_baseCode = GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_TSTFSZ (SOURCE_FILE_AT_LINE (1329)) ;
      } break ;
    }
  }
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_47792_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, joker_47792_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1331)) ;
  GALGAS_uint var_currentBank = ioArgument_ioCurrentBank ;
  GALGAS_ipic_31__38_SequentialInstruction var_embeddedInstruction ;
  callCategoryMethod_analyzeSimpleInstruction ((const cPtr_pic_31__38_PiccoloSimpleInstruction *) object->mAttribute_mEmbeddedInstruction.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, var_currentBank, constinArgument_inShouldPreserveBSR, var_embeddedInstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1340)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_currentBank.objectCompare (var_currentBank)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mEmbeddedInstruction.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (1352)), GALGAS_string ("this instruction does not preserve bank setting") COMMA_SOURCE_FILE_AT_LINE (1352)) ;
  }
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_skip_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, var_embeddedInstruction, var_baseCode, var_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (1355)) COMMA_SOURCE_FILE_AT_LINE (1355)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON.mSlotID,
                               categoryMethod_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON_analyze (defineCategoryMethod_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category method '@instruction_IF_IncDec analyze'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_IF_5F_IncDec_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                const GALGAS_dataMap constinArgument_inDataMap,
                                                                const GALGAS_constantMap constinArgument_inConstantMap,
                                                                GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                GALGAS_uint & ioArgument_ioCurrentBank,
                                                                const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                                const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                                C_Compiler * inCompiler
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_IF_5F_IncDec * object = (const cPtr_instruction_5F_IF_5F_IncDec *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_IF_5F_IncDec) ;
  GALGAS_instruction_5F_FDA_5F_base_5F_code var_baseCode ;
  const enumGalgasBool test_0 = object->mAttribute_mIncrement.operator_and (object->mAttribute_mSkipIfZero COMMA_SOURCE_FILE_AT_LINE (1382)).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_INCFSZ (SOURCE_FILE_AT_LINE (1383)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = object->mAttribute_mIncrement.operator_and (object->mAttribute_mSkipIfZero.operator_not (SOURCE_FILE_AT_LINE (1384)) COMMA_SOURCE_FILE_AT_LINE (1384)).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_INFSNZ (SOURCE_FILE_AT_LINE (1385)) ;
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_2 = object->mAttribute_mIncrement.operator_not (SOURCE_FILE_AT_LINE (1386)).operator_and (object->mAttribute_mSkipIfZero COMMA_SOURCE_FILE_AT_LINE (1386)).boolEnum () ;
      if (kBoolTrue == test_2) {
        var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_DECFSZ (SOURCE_FILE_AT_LINE (1387)) ;
      }else if (kBoolFalse == test_2) {
        var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_DCFSNZ (SOURCE_FILE_AT_LINE (1389)) ;
      }
    }
  }
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_49677_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, joker_49677_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1392)) ;
  GALGAS_uint var_currentBank = ioArgument_ioCurrentBank ;
  GALGAS_ipic_31__38_SequentialInstruction var_embeddedInstruction ;
  callCategoryMethod_analyzeSimpleInstruction ((const cPtr_pic_31__38_PiccoloSimpleInstruction *) object->mAttribute_mEmbeddedInstruction.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, var_currentBank, constinArgument_inShouldPreserveBSR, var_embeddedInstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1401)) ;
  const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, var_currentBank.objectCompare (var_currentBank)).boolEnum () ;
  if (kBoolTrue == test_3) {
    inCompiler->emitSemanticError (object->mAttribute_mEmbeddedInstruction.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (1413)), GALGAS_string ("this instruction does not preserve bank setting") COMMA_SOURCE_FILE_AT_LINE (1413)) ;
  }
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_skip_5F_instruction_5F_FDA::constructor_new (object->mAttribute_mInstructionLocation, var_embeddedInstruction, var_baseCode, var_IPICregisterDescription, object->mAttribute_m_5F_W_5F_isDestination COMMA_SOURCE_FILE_AT_LINE (1416)) COMMA_SOURCE_FILE_AT_LINE (1416)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_IF_5F_IncDec_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_IF_5F_IncDec.mSlotID,
                               categoryMethod_instruction_5F_IF_5F_IncDec_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_IF_5F_IncDec_analyze (defineCategoryMethod_instruction_5F_IF_5F_IncDec_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category method '@instruction_structured_if analyze'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_structured_5F_if_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                    const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                    GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                                                    const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                    const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                    const GALGAS_dataMap constinArgument_inDataMap,
                                                                    const GALGAS_constantMap constinArgument_inConstantMap,
                                                                    GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                                    GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                    GALGAS_string & ioArgument_ioListFileContents,
                                                                    GALGAS_uint & ioArgument_ioCurrentBank,
                                                                    const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                    GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                                    const GALGAS_routineKind constinArgument_inRoutineKind,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_structured_5F_if * object = (const cPtr_instruction_5F_structured_5F_if *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_structured_5F_if) ;
  GALGAS_lstring var_conditionTrueLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1443)) COMMA_SOURCE_FILE_AT_LINE (1443)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1443)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1444)) ;
  GALGAS_lstring var_conditionFalseLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1445)) COMMA_SOURCE_FILE_AT_LINE (1445)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1445)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1446)) ;
  GALGAS_lstring var_exitLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1447)) COMMA_SOURCE_FILE_AT_LINE (1447)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1447)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1448)) ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_testTerminator ;
  callCategoryMethod_analyzeCondition ((const cPtr_conditionExpression *) object->mAttribute_mIfCondition.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, ioArgument_ioLocalLabelIndex, GALGAS_bool (false), object->mAttribute_mInstructionLocation, ioArgument_ioGeneratedBlockList, var_conditionTrueLabel, var_conditionFalseLabel, var_testTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (1450)) ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_currentBlockTerminator = ioArgument_ioCurrentBlock.mAttribute_mTerminator ;
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = var_testTerminator ;
  ioArgument_ioGeneratedBlockList.addAssign_operation (ioArgument_ioCurrentBlock COMMA_SOURCE_FILE_AT_LINE (1466)) ;
  ioArgument_ioCurrentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1469)), var_exitLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1471)), var_currentBlockTerminator COMMA_SOURCE_FILE_AT_LINE (1468)) ;
  GALGAS_uint var_elseBranchFinalBank = ioArgument_ioCurrentBank ;
  GALGAS_uint var_thenBranchFinalBank = ioArgument_ioCurrentBank ;
  GALGAS_ipic_31__38_Block var_thenBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1478)), var_conditionTrueLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1480)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (var_exitLabel COMMA_SOURCE_FILE_AT_LINE (1481)) COMMA_SOURCE_FILE_AT_LINE (1477)) ;
  GALGAS_bool var_thenContinuesInSequence ;
  {
  routine_analyzeInstructionList (object->mAttribute_mThenInstructionList, ioArgument_ioGeneratedBlockList, constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioLocalLabelIndex, var_thenBlock, ioArgument_ioListFileContents, var_thenBranchFinalBank, constinArgument_inShouldPreserveBSR, var_thenContinuesInSequence, constinArgument_inRoutineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (1483)) ;
  }
  ioArgument_ioGeneratedBlockList.addAssign_operation (var_thenBlock COMMA_SOURCE_FILE_AT_LINE (1499)) ;
  GALGAS_ipic_31__38_Block var_elseBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1502)), var_conditionFalseLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1504)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (var_exitLabel COMMA_SOURCE_FILE_AT_LINE (1505)) COMMA_SOURCE_FILE_AT_LINE (1501)) ;
  GALGAS_bool var_elseContinuesInSequence ;
  {
  routine_analyzeInstructionList (object->mAttribute_mElseInstructionList, ioArgument_ioGeneratedBlockList, constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioLocalLabelIndex, var_elseBlock, ioArgument_ioListFileContents, var_elseBranchFinalBank, constinArgument_inShouldPreserveBSR, var_elseContinuesInSequence, constinArgument_inRoutineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (1507)) ;
  }
  ioArgument_ioGeneratedBlockList.addAssign_operation (var_elseBlock COMMA_SOURCE_FILE_AT_LINE (1523)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_elseBranchFinalBank.objectCompare (var_thenBranchFinalBank)).boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioCurrentBank = var_elseBranchFinalBank ;
  }else if (kBoolFalse == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mEndOfElsePartLocation, GALGAS_string ("This branch does not leave BSR value as the first one does") COMMA_SOURCE_FILE_AT_LINE (1528)) ;
    var_elseBranchFinalBank = GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1529)) ;
  }
  ioArgument_ioContinuesInSequence = var_thenContinuesInSequence.operator_or (var_elseContinuesInSequence COMMA_SOURCE_FILE_AT_LINE (1532)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_structured_5F_if_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_structured_5F_if.mSlotID,
                               categoryMethod_instruction_5F_structured_5F_if_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_structured_5F_if_analyze (defineCategoryMethod_instruction_5F_structured_5F_if_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category method '@instruction_do_while analyze'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_do_5F_while_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                               const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                               GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                                               const GALGAS_routineMap constinArgument_inRoutineMap,
                                                               const GALGAS_registerTable constinArgument_inRegisterTable,
                                                               const GALGAS_dataMap constinArgument_inDataMap,
                                                               const GALGAS_constantMap constinArgument_inConstantMap,
                                                               GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                               GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                               GALGAS_string & ioArgument_ioListFileContents,
                                                               GALGAS_uint & ioArgument_ioCurrentBank,
                                                               const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                               GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                               const GALGAS_routineKind constinArgument_inRoutineKind,
                                                               C_Compiler * inCompiler
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_do_5F_while * object = (const cPtr_instruction_5F_do_5F_while *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_do_5F_while) ;
  GALGAS_lstring var_startLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1553)) COMMA_SOURCE_FILE_AT_LINE (1553)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1553)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1554)) ;
  GALGAS_lstring var_exitLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1555)) COMMA_SOURCE_FILE_AT_LINE (1555)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1555)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1556)) ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_currentBlockTerminator = ioArgument_ioCurrentBlock.mAttribute_mTerminator ;
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = GALGAS_ipic_31__38_JumpTerminator::constructor_new (var_startLabel COMMA_SOURCE_FILE_AT_LINE (1560)) ;
  ioArgument_ioGeneratedBlockList.addAssign_operation (ioArgument_ioCurrentBlock COMMA_SOURCE_FILE_AT_LINE (1561)) ;
  GALGAS_ipic_31__38_Block var_branchBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1564)), var_startLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1566)), var_currentBlockTerminator COMMA_SOURCE_FILE_AT_LINE (1563)) ;
  GALGAS_uint var_repeatedBranchFinalBank = ioArgument_ioCurrentBank ;
  GALGAS_bool var_repeatedInstructionsContinuesInSequence ;
  {
  routine_analyzeInstructionList (object->mAttribute_mRepeatedInstructionList, ioArgument_ioGeneratedBlockList, constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioLocalLabelIndex, var_branchBlock, ioArgument_ioListFileContents, var_repeatedBranchFinalBank, constinArgument_inShouldPreserveBSR, var_repeatedInstructionsContinuesInSequence, constinArgument_inRoutineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (1570)) ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, ioArgument_ioCurrentBank.objectCompare (var_repeatedBranchFinalBank)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mEndOfRepeatedInstructionList, GALGAS_string ("This branch does not leave BSR value unchanged") COMMA_SOURCE_FILE_AT_LINE (1587)) ;
  }
  const enumGalgasBool test_1 = var_repeatedInstructionsContinuesInSequence.operator_not (SOURCE_FILE_AT_LINE (1589)).boolEnum () ;
  if (kBoolTrue == test_1) {
    inCompiler->emitSemanticError (object->mAttribute_mEndOfRepeatedInstructionList, GALGAS_string ("This branch makes the next code unreachable") COMMA_SOURCE_FILE_AT_LINE (1590)) ;
  }
  cEnumerator_partList enumerator_55899 (object->mAttribute_mWhilePartList, kEnumeration_up) ;
  while (enumerator_55899.hasCurrentObject ()) {
    GALGAS_lstring var_conditionTrueLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1595)) COMMA_SOURCE_FILE_AT_LINE (1595)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1595)) ;
    ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1596)) ;
    GALGAS_lstring var_conditionFalseLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1597)) COMMA_SOURCE_FILE_AT_LINE (1597)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1597)) ;
    ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1598)) ;
    GALGAS_ipic_31__38_AbstractBlockTerminator var_testTerminator ;
    callCategoryMethod_analyzeCondition ((const cPtr_conditionExpression *) enumerator_55899.current_mCondition (HERE).ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, ioArgument_ioLocalLabelIndex, GALGAS_bool (false), object->mAttribute_mInstructionLocation, ioArgument_ioGeneratedBlockList, var_conditionTrueLabel, var_conditionFalseLabel, var_testTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (1600)) ;
    var_branchBlock.mAttribute_mTerminator = var_testTerminator ;
    ioArgument_ioGeneratedBlockList.addAssign_operation (var_branchBlock COMMA_SOURCE_FILE_AT_LINE (1613)) ;
    var_branchBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1615)), var_conditionTrueLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1617)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (var_startLabel COMMA_SOURCE_FILE_AT_LINE (1618)) COMMA_SOURCE_FILE_AT_LINE (1614)) ;
    GALGAS_uint var_branchFinalBank = ioArgument_ioCurrentBank ;
    GALGAS_bool var_branchInstructionsContinuesInSequence ;
    {
    routine_analyzeInstructionList (object->mAttribute_mRepeatedInstructionList, ioArgument_ioGeneratedBlockList, constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioLocalLabelIndex, var_branchBlock, ioArgument_ioListFileContents, var_branchFinalBank, constinArgument_inShouldPreserveBSR, var_branchInstructionsContinuesInSequence, constinArgument_inRoutineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (1621)) ;
    }
    const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, ioArgument_ioCurrentBank.objectCompare (var_branchFinalBank)).boolEnum () ;
    if (kBoolTrue == test_2) {
      inCompiler->emitSemanticError (enumerator_55899.current_mEndOfPartLocation (HERE), GALGAS_string ("This branch does not leave BSR value unchanged") COMMA_SOURCE_FILE_AT_LINE (1638)) ;
    }
    const enumGalgasBool test_3 = var_branchInstructionsContinuesInSequence.operator_not (SOURCE_FILE_AT_LINE (1640)).boolEnum () ;
    if (kBoolTrue == test_3) {
      inCompiler->emitSemanticError (enumerator_55899.current_mEndOfPartLocation (HERE), GALGAS_string ("This branch makes the next code unreachable") COMMA_SOURCE_FILE_AT_LINE (1641)) ;
    }
    ioArgument_ioGeneratedBlockList.addAssign_operation (var_branchBlock COMMA_SOURCE_FILE_AT_LINE (1643)) ;
    var_branchBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1645)), var_conditionFalseLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1647)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (var_exitLabel COMMA_SOURCE_FILE_AT_LINE (1648)) COMMA_SOURCE_FILE_AT_LINE (1644)) ;
    enumerator_55899.gotoNextObject () ;
  }
  ioArgument_ioCurrentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1653)), var_exitLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1655)), var_currentBlockTerminator COMMA_SOURCE_FILE_AT_LINE (1652)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_do_5F_while_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_do_5F_while.mSlotID,
                               categoryMethod_instruction_5F_do_5F_while_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_do_5F_while_analyze (defineCategoryMethod_instruction_5F_do_5F_while_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Abstract category method '@conditionExpression analyzeCondition'      *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_conditionExpression_analyzeCondition> gCategoryMethodTable_conditionExpression_analyzeCondition ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeCondition (const PMSInt32 inClassIndex,
                                           categoryMethodSignature_conditionExpression_analyzeCondition inMethod) {
  gCategoryMethodTable_conditionExpression_analyzeCondition.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_conditionExpression_analyzeCondition (void) {
  gCategoryMethodTable_conditionExpression_analyzeCondition.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_conditionExpression_analyzeCondition (NULL,
                                                                 freeCategoryMethod_conditionExpression_analyzeCondition) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeCondition (const cPtr_conditionExpression * inObject,
                                          const GALGAS_uint constin_inAccessBankSplitOffset,
                                          const GALGAS_uint constin_inCurrentBank,
                                          const GALGAS_registerTable constin_inRegisterTable,
                                          GALGAS_uint & io_ioLocalLabelIndex,
                                          const GALGAS_bool constin_inComplementaryBranch,
                                          const GALGAS_location constin_inInstructionLocation,
                                          GALGAS_ipic_31__38_BlockList & io_ioGeneratedBlockList,
                                          const GALGAS_lstring constin_inConditionTrueLabel,
                                          const GALGAS_lstring constin_inConditionFalseLabel,
                                          GALGAS_ipic_31__38_AbstractBlockTerminator & out_outCurrentBlockTerminator,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) {
//--- Drop output arguments
  out_outCurrentBlockTerminator.drop () ;
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_conditionExpression) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_conditionExpression_analyzeCondition f = NULL ;
    if (classIndex < gCategoryMethodTable_conditionExpression_analyzeCondition.count ()) {
      f = gCategoryMethodTable_conditionExpression_analyzeCondition (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_conditionExpression_analyzeCondition.count ()) {
           f = gCategoryMethodTable_conditionExpression_analyzeCondition (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_conditionExpression_analyzeCondition.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAccessBankSplitOffset, constin_inCurrentBank, constin_inRegisterTable, io_ioLocalLabelIndex, constin_inComplementaryBranch, constin_inInstructionLocation, io_ioGeneratedBlockList, constin_inConditionTrueLabel, constin_inConditionFalseLabel, out_outCurrentBlockTerminator, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@bcc_in_structured_if_condition analyzeCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition (const cPtr_conditionExpression * inObject,
                                                                                        const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                                        const GALGAS_uint /* constinArgument_inCurrentBank */,
                                                                                        const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                                                        GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                                        const GALGAS_bool constinArgument_inComplementaryBranch,
                                                                                        const GALGAS_location /* constinArgument_inInstructionLocation */,
                                                                                        GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                                        const GALGAS_lstring constinArgument_inConditionTrueLabel,
                                                                                        const GALGAS_lstring constinArgument_inConditionFalseLabel,
                                                                                        GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outCurrentBlockTerminator,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_bcc_5F_in_5F_structured_5F_if_5F_condition * object = (const cPtr_bcc_5F_in_5F_structured_5F_if_5F_condition *) inObject ;
  macroValidSharedObject (object, const cPtr_bcc_5F_in_5F_structured_5F_if_5F_condition) ;
  GALGAS_conditional_5F_branch var_condition ;
  const enumGalgasBool test_0 = constinArgument_inComplementaryBranch.boolEnum () ;
  if (kBoolTrue == test_0) {
    {
    routine_getComplementaryBcc (object->mAttribute_mCondition, var_condition, inCompiler COMMA_SOURCE_FILE_AT_LINE (1695)) ;
    }
  }else if (kBoolFalse == test_0) {
    var_condition = object->mAttribute_mCondition ;
  }
  outArgument_outCurrentBlockTerminator = GALGAS_pic_31__38_BraCCTerminator::constructor_new (GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inConditionTrueLabel COMMA_SOURCE_FILE_AT_LINE (1701)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inConditionFalseLabel COMMA_SOURCE_FILE_AT_LINE (1702)), GALGAS_conditionalBranchMode::constructor_native (SOURCE_FILE_AT_LINE (1703)), var_condition, GALGAS_bool (true) COMMA_SOURCE_FILE_AT_LINE (1700)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition (void) {
  enterCategoryMethod_analyzeCondition (kTypeDescriptor_GALGAS_bcc_5F_in_5F_structured_5F_if_5F_condition.mSlotID,
                                        categoryMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition (defineCategoryMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@registerComparisonCondition analyzeCondition' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_registerComparisonCondition_analyzeCondition (const cPtr_conditionExpression * inObject,
                                                                         const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                         const GALGAS_uint constinArgument_inCurrentBank,
                                                                         const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                         GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                         const GALGAS_bool constinArgument_inComplementaryBranch,
                                                                         const GALGAS_location /* constinArgument_inInstructionLocation */,
                                                                         GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                         const GALGAS_lstring constinArgument_inConditionTrueLabel,
                                                                         const GALGAS_lstring constinArgument_inConditionFalseLabel,
                                                                         GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outCurrentBlockTerminator,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_registerComparisonCondition * object = (const cPtr_registerComparisonCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_registerComparisonCondition) ;
  GALGAS_pic_31__38_RegisterComparison var_comparison ;
  const enumGalgasBool test_0 = constinArgument_inComplementaryBranch.boolEnum () ;
  if (kBoolTrue == test_0) {
    {
    routine_registerComparisonComplementary (object->mAttribute_mComparison, var_comparison, inCompiler COMMA_SOURCE_FILE_AT_LINE (1725)) ;
    }
  }else if (kBoolFalse == test_0) {
    var_comparison = object->mAttribute_mComparison ;
  }
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_60533_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, joker_60533_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1730)) ;
  outArgument_outCurrentBlockTerminator = GALGAS_pic_31__38_RegisterComparisonTerminator::constructor_new (GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inConditionTrueLabel COMMA_SOURCE_FILE_AT_LINE (1739)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inConditionFalseLabel COMMA_SOURCE_FILE_AT_LINE (1740)), var_IPICregisterDescription, var_comparison, GALGAS_bool (true) COMMA_SOURCE_FILE_AT_LINE (1738)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_registerComparisonCondition_analyzeCondition (void) {
  enterCategoryMethod_analyzeCondition (kTypeDescriptor_GALGAS_registerComparisonCondition.mSlotID,
                                        categoryMethod_registerComparisonCondition_analyzeCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_registerComparisonCondition_analyzeCondition (defineCategoryMethod_registerComparisonCondition_analyzeCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@incDecRegisterInCondition analyzeCondition'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_incDecRegisterInCondition_analyzeCondition (const cPtr_conditionExpression * inObject,
                                                                       const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                       const GALGAS_uint constinArgument_inCurrentBank,
                                                                       const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                       GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                       const GALGAS_bool constinArgument_inComplementaryBranch,
                                                                       const GALGAS_location /* constinArgument_inInstructionLocation */,
                                                                       GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                       const GALGAS_lstring constinArgument_inConditionTrueLabel,
                                                                       const GALGAS_lstring constinArgument_inConditionFalseLabel,
                                                                       GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outCurrentBlockTerminator,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_incDecRegisterInCondition * object = (const cPtr_incDecRegisterInCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_incDecRegisterInCondition) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_61551_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, joker_61551_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1761)) ;
  outArgument_outCurrentBlockTerminator = GALGAS_ipic_31__38_IncDecRegisterTerminator::constructor_new (GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inConditionTrueLabel COMMA_SOURCE_FILE_AT_LINE (1770)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inConditionFalseLabel COMMA_SOURCE_FILE_AT_LINE (1771)), var_IPICregisterDescription, object->mAttribute_mIncrement, object->mAttribute_m_5F_W_5F_isDestination, object->mAttribute_mBranchIfZero.operator_xor (constinArgument_inComplementaryBranch COMMA_SOURCE_FILE_AT_LINE (1775)), GALGAS_bool (true) COMMA_SOURCE_FILE_AT_LINE (1769)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_incDecRegisterInCondition_analyzeCondition (void) {
  enterCategoryMethod_analyzeCondition (kTypeDescriptor_GALGAS_incDecRegisterInCondition.mSlotID,
                                        categoryMethod_incDecRegisterInCondition_analyzeCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_incDecRegisterInCondition_analyzeCondition (defineCategoryMethod_incDecRegisterInCondition_analyzeCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@registerTestCondition analyzeCondition'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_registerTestCondition_analyzeCondition (const cPtr_conditionExpression * inObject,
                                                                   const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                   const GALGAS_uint constinArgument_inCurrentBank,
                                                                   const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                   GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                   const GALGAS_bool constinArgument_inComplementaryBranch,
                                                                   const GALGAS_location /* constinArgument_inInstructionLocation */,
                                                                   GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                   const GALGAS_lstring constinArgument_inConditionTrueLabel,
                                                                   const GALGAS_lstring constinArgument_inConditionFalseLabel,
                                                                   GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outCurrentBlockTerminator,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_registerTestCondition * object = (const cPtr_registerTestCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_registerTestCondition) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_62628_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, joker_62628_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1794)) ;
  outArgument_outCurrentBlockTerminator = GALGAS_pic_31__38_TestRegisterTerminator::constructor_new (GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inConditionTrueLabel COMMA_SOURCE_FILE_AT_LINE (1803)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inConditionFalseLabel COMMA_SOURCE_FILE_AT_LINE (1804)), var_IPICregisterDescription, object->mAttribute_mBranchIfZero.operator_xor (constinArgument_inComplementaryBranch COMMA_SOURCE_FILE_AT_LINE (1806)), GALGAS_bool (true) COMMA_SOURCE_FILE_AT_LINE (1802)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_registerTestCondition_analyzeCondition (void) {
  enterCategoryMethod_analyzeCondition (kTypeDescriptor_GALGAS_registerTestCondition.mSlotID,
                                        categoryMethod_registerTestCondition_analyzeCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_registerTestCondition_analyzeCondition (defineCategoryMethod_registerTestCondition_analyzeCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@bitTest_in_structured_if_condition analyzeCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition (const cPtr_conditionExpression * inObject,
                                                                                            const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                                            const GALGAS_uint constinArgument_inCurrentBank,
                                                                                            const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                                            GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                                            const GALGAS_bool constinArgument_inComplementaryBranch,
                                                                                            const GALGAS_location /* constinArgument_inInstructionLocation */,
                                                                                            GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                                            const GALGAS_lstring constinArgument_inConditionTrueLabel,
                                                                                            const GALGAS_lstring constinArgument_inConditionFalseLabel,
                                                                                            GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outCurrentBlockTerminator,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_bitTest_5F_in_5F_structured_5F_if_5F_condition * object = (const cPtr_bitTest_5F_in_5F_structured_5F_if_5F_condition *) inObject ;
  macroValidSharedObject (object, const cPtr_bitTest_5F_in_5F_structured_5F_if_5F_condition) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable var_bitSliceTable ;
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, var_bitSliceTable, inCompiler COMMA_SOURCE_FILE_AT_LINE (1825)) ;
  GALGAS_uint var_bitNumber ;
  callCategoryMethod_getBitNumber ((const cPtr_bitNumberExpression *) object->mAttribute_mBitNumber.ptr (), var_bitSliceTable, var_bitNumber, inCompiler COMMA_SOURCE_FILE_AT_LINE (1832)) ;
  outArgument_outCurrentBlockTerminator = GALGAS_pic_31__38_BitTestTerminator::constructor_new (GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inConditionTrueLabel COMMA_SOURCE_FILE_AT_LINE (1838)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inConditionFalseLabel COMMA_SOURCE_FILE_AT_LINE (1839)), object->mAttribute_mBTFSSinstruction.operator_xor (constinArgument_inComplementaryBranch COMMA_SOURCE_FILE_AT_LINE (1840)), var_IPICregisterDescription, var_bitNumber COMMA_SOURCE_FILE_AT_LINE (1837)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition (void) {
  enterCategoryMethod_analyzeCondition (kTypeDescriptor_GALGAS_bitTest_5F_in_5F_structured_5F_if_5F_condition.mSlotID,
                                        categoryMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition (defineCategoryMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category method '@negateCondition analyzeCondition'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_negateCondition_analyzeCondition (const cPtr_conditionExpression * inObject,
                                                             const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                             const GALGAS_uint constinArgument_inCurrentBank,
                                                             const GALGAS_registerTable constinArgument_inRegisterTable,
                                                             GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                             const GALGAS_bool constinArgument_inComplementaryBranch,
                                                             const GALGAS_location constinArgument_inInstructionLocation,
                                                             GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                                             const GALGAS_lstring constinArgument_inConditionTrueLabel,
                                                             const GALGAS_lstring constinArgument_inConditionFalseLabel,
                                                             GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outCurrentBlockTerminator,
                                                             C_Compiler * inCompiler
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_negateCondition * object = (const cPtr_negateCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_negateCondition) ;
  callCategoryMethod_analyzeCondition ((const cPtr_conditionExpression *) object->mAttribute_mCondition.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inCurrentBank, constinArgument_inRegisterTable, ioArgument_ioLocalLabelIndex, constinArgument_inComplementaryBranch, constinArgument_inInstructionLocation, ioArgument_ioGeneratedBlockList, constinArgument_inConditionFalseLabel, constinArgument_inConditionTrueLabel, outArgument_outCurrentBlockTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (1867)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_negateCondition_analyzeCondition (void) {
  enterCategoryMethod_analyzeCondition (kTypeDescriptor_GALGAS_negateCondition.mSlotID,
                                        categoryMethod_negateCondition_analyzeCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_negateCondition_analyzeCondition (defineCategoryMethod_negateCondition_analyzeCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category method '@andCondition analyzeCondition'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_andCondition_analyzeCondition (const cPtr_conditionExpression * inObject,
                                                          const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                          const GALGAS_uint constinArgument_inCurrentBank,
                                                          const GALGAS_registerTable constinArgument_inRegisterTable,
                                                          GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                          const GALGAS_bool constinArgument_inComplementaryBranch,
                                                          const GALGAS_location constinArgument_inInstructionLocation,
                                                          GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                                          const GALGAS_lstring constinArgument_inConditionTrueLabel,
                                                          const GALGAS_lstring constinArgument_inConditionFalseLabel,
                                                          GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outCurrentBlockTerminator,
                                                          C_Compiler * inCompiler
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_andCondition * object = (const cPtr_andCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_andCondition) ;
  GALGAS_lstring var_conditionTrueLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1896)) COMMA_SOURCE_FILE_AT_LINE (1896)), constinArgument_inInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1896)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1897)) ;
  callCategoryMethod_analyzeCondition ((const cPtr_conditionExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inCurrentBank, constinArgument_inRegisterTable, ioArgument_ioLocalLabelIndex, constinArgument_inComplementaryBranch, constinArgument_inInstructionLocation, ioArgument_ioGeneratedBlockList, var_conditionTrueLabel, constinArgument_inConditionFalseLabel, outArgument_outCurrentBlockTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (1899)) ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_secondTestBlockTerminator ;
  callCategoryMethod_analyzeCondition ((const cPtr_conditionExpression *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inCurrentBank, constinArgument_inRegisterTable, ioArgument_ioLocalLabelIndex, constinArgument_inComplementaryBranch, constinArgument_inInstructionLocation, ioArgument_ioGeneratedBlockList, constinArgument_inConditionTrueLabel, constinArgument_inConditionFalseLabel, var_secondTestBlockTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (1912)) ;
  ioArgument_ioGeneratedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1926)), var_conditionTrueLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1928)), var_secondTestBlockTerminator COMMA_SOURCE_FILE_AT_LINE (1925)) COMMA_SOURCE_FILE_AT_LINE (1925)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_andCondition_analyzeCondition (void) {
  enterCategoryMethod_analyzeCondition (kTypeDescriptor_GALGAS_andCondition.mSlotID,
                                        categoryMethod_andCondition_analyzeCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_andCondition_analyzeCondition (defineCategoryMethod_andCondition_analyzeCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Abstract category method '@conditionExpression instructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_conditionExpression_instructionCountForCondition> gCategoryMethodTable_conditionExpression_instructionCountForCondition ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_instructionCountForCondition (const PMSInt32 inClassIndex,
                                                       categoryMethodSignature_conditionExpression_instructionCountForCondition inMethod) {
  gCategoryMethodTable_conditionExpression_instructionCountForCondition.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_conditionExpression_instructionCountForCondition (void) {
  gCategoryMethodTable_conditionExpression_instructionCountForCondition.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_conditionExpression_instructionCountForCondition (NULL,
                                                                             freeCategoryMethod_conditionExpression_instructionCountForCondition) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_instructionCountForCondition (const cPtr_conditionExpression * inObject,
                                                      const GALGAS_bool constin_inComplementaryBranch,
                                                      GALGAS_uint & out_outInstructionCount,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
//--- Drop output arguments
  out_outInstructionCount.drop () ;
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_conditionExpression) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_conditionExpression_instructionCountForCondition f = NULL ;
    if (classIndex < gCategoryMethodTable_conditionExpression_instructionCountForCondition.count ()) {
      f = gCategoryMethodTable_conditionExpression_instructionCountForCondition (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_conditionExpression_instructionCountForCondition.count ()) {
           f = gCategoryMethodTable_conditionExpression_instructionCountForCondition (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_conditionExpression_instructionCountForCondition.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inComplementaryBranch, out_outInstructionCount, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@bcc_in_structured_if_condition instructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_instructionCountForCondition (const cPtr_conditionExpression * /* inObject */,
                                                                                                    const GALGAS_bool /* constinArgument_inComplementaryBranch */,
                                                                                                    GALGAS_uint & outArgument_outInstructionCount,
                                                                                                    C_Compiler * /* inCompiler */
                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outInstructionCount = GALGAS_uint ((PMUInt32) 2U) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_instructionCountForCondition (void) {
  enterCategoryMethod_instructionCountForCondition (kTypeDescriptor_GALGAS_bcc_5F_in_5F_structured_5F_if_5F_condition.mSlotID,
                                                    categoryMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_instructionCountForCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_instructionCountForCondition (defineCategoryMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_instructionCountForCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@registerComparisonCondition instructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_registerComparisonCondition_instructionCountForCondition (const cPtr_conditionExpression * inObject,
                                                                                     const GALGAS_bool constinArgument_inComplementaryBranch,
                                                                                     GALGAS_uint & outArgument_outInstructionCount,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_registerComparisonCondition * object = (const cPtr_registerComparisonCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_registerComparisonCondition) ;
  GALGAS_pic_31__38_RegisterComparison var_comparison ;
  const enumGalgasBool test_0 = constinArgument_inComplementaryBranch.boolEnum () ;
  if (kBoolTrue == test_0) {
    {
    routine_registerComparisonComplementary (object->mAttribute_mComparison, var_comparison, inCompiler COMMA_SOURCE_FILE_AT_LINE (2042)) ;
    }
  }else if (kBoolFalse == test_0) {
    var_comparison = object->mAttribute_mComparison ;
  }
  {
  routine_registerComparisonInstructionCount (var_comparison, outArgument_outInstructionCount, inCompiler COMMA_SOURCE_FILE_AT_LINE (2046)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_registerComparisonCondition_instructionCountForCondition (void) {
  enterCategoryMethod_instructionCountForCondition (kTypeDescriptor_GALGAS_registerComparisonCondition.mSlotID,
                                                    categoryMethod_registerComparisonCondition_instructionCountForCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_registerComparisonCondition_instructionCountForCondition (defineCategoryMethod_registerComparisonCondition_instructionCountForCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@incDecRegisterInCondition instructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_incDecRegisterInCondition_instructionCountForCondition (const cPtr_conditionExpression * /* inObject */,
                                                                                   const GALGAS_bool /* constinArgument_inComplementaryBranch */,
                                                                                   GALGAS_uint & outArgument_outInstructionCount,
                                                                                   C_Compiler * /* inCompiler */
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outInstructionCount = GALGAS_uint ((PMUInt32) 2U) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_incDecRegisterInCondition_instructionCountForCondition (void) {
  enterCategoryMethod_instructionCountForCondition (kTypeDescriptor_GALGAS_incDecRegisterInCondition.mSlotID,
                                                    categoryMethod_incDecRegisterInCondition_instructionCountForCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_incDecRegisterInCondition_instructionCountForCondition (defineCategoryMethod_incDecRegisterInCondition_instructionCountForCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@registerTestCondition instructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_registerTestCondition_instructionCountForCondition (const cPtr_conditionExpression * inObject,
                                                                               const GALGAS_bool constinArgument_inComplementaryBranch,
                                                                               GALGAS_uint & outArgument_outInstructionCount,
                                                                               C_Compiler * /* inCompiler */
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_registerTestCondition * object = (const cPtr_registerTestCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_registerTestCondition) ;
  const enumGalgasBool test_0 = object->mAttribute_mBranchIfZero.operator_xor (constinArgument_inComplementaryBranch COMMA_SOURCE_FILE_AT_LINE (2064)).boolEnum () ;
  if (kBoolTrue == test_0) {
    outArgument_outInstructionCount = GALGAS_uint ((PMUInt32) 3U) ;
  }else if (kBoolFalse == test_0) {
    outArgument_outInstructionCount = GALGAS_uint ((PMUInt32) 2U) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_registerTestCondition_instructionCountForCondition (void) {
  enterCategoryMethod_instructionCountForCondition (kTypeDescriptor_GALGAS_registerTestCondition.mSlotID,
                                                    categoryMethod_registerTestCondition_instructionCountForCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_registerTestCondition_instructionCountForCondition (defineCategoryMethod_registerTestCondition_instructionCountForCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@negateCondition instructionCountForCondition' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_negateCondition_instructionCountForCondition (const cPtr_conditionExpression * inObject,
                                                                         const GALGAS_bool constinArgument_inComplementaryBranch,
                                                                         GALGAS_uint & outArgument_outInstructionCount,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_negateCondition * object = (const cPtr_negateCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_negateCondition) ;
  callCategoryMethod_instructionCountForCondition ((const cPtr_conditionExpression *) object->mAttribute_mCondition.ptr (), constinArgument_inComplementaryBranch.operator_not (SOURCE_FILE_AT_LINE (2078)), outArgument_outInstructionCount, inCompiler COMMA_SOURCE_FILE_AT_LINE (2077)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_negateCondition_instructionCountForCondition (void) {
  enterCategoryMethod_instructionCountForCondition (kTypeDescriptor_GALGAS_negateCondition.mSlotID,
                                                    categoryMethod_negateCondition_instructionCountForCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_negateCondition_instructionCountForCondition (defineCategoryMethod_negateCondition_instructionCountForCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@andCondition instructionCountForCondition'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_andCondition_instructionCountForCondition (const cPtr_conditionExpression * inObject,
                                                                      const GALGAS_bool constinArgument_inComplementaryBranch,
                                                                      GALGAS_uint & outArgument_outInstructionCount,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_andCondition * object = (const cPtr_andCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_andCondition) ;
  GALGAS_uint var_countLeft ;
  callCategoryMethod_instructionCountForCondition ((const cPtr_conditionExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inComplementaryBranch, var_countLeft, inCompiler COMMA_SOURCE_FILE_AT_LINE (2090)) ;
  GALGAS_uint var_countRight ;
  callCategoryMethod_instructionCountForCondition ((const cPtr_conditionExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inComplementaryBranch, var_countRight, inCompiler COMMA_SOURCE_FILE_AT_LINE (2095)) ;
  outArgument_outInstructionCount = var_countLeft.add_operation (var_countRight, inCompiler COMMA_SOURCE_FILE_AT_LINE (2099)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_andCondition_instructionCountForCondition (void) {
  enterCategoryMethod_instructionCountForCondition (kTypeDescriptor_GALGAS_andCondition.mSlotID,
                                                    categoryMethod_andCondition_instructionCountForCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_andCondition_instructionCountForCondition (defineCategoryMethod_andCondition_instructionCountForCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@bitTest_in_structured_if_condition instructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_instructionCountForCondition (const cPtr_conditionExpression * /* inObject */,
                                                                                                        const GALGAS_bool /* constinArgument_inComplementaryBranch */,
                                                                                                        GALGAS_uint & outArgument_outInstructionCount,
                                                                                                        C_Compiler * /* inCompiler */
                                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outInstructionCount = GALGAS_uint ((PMUInt32) 2U) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_instructionCountForCondition (void) {
  enterCategoryMethod_instructionCountForCondition (kTypeDescriptor_GALGAS_bitTest_5F_in_5F_structured_5F_if_5F_condition.mSlotID,
                                                    categoryMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_instructionCountForCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_instructionCountForCondition (defineCategoryMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_instructionCountForCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Abstract category method '@ipic18SequentialInstruction display'      *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_ipic_31__38_SequentialInstruction_display> gCategoryMethodTable_ipic_31__38_SequentialInstruction_display ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_display (const PMSInt32 inClassIndex,
                                  categoryMethodSignature_ipic_31__38_SequentialInstruction_display inMethod) {
  gCategoryMethodTable_ipic_31__38_SequentialInstruction_display.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_ipic_31__38_SequentialInstruction_display (void) {
  gCategoryMethodTable_ipic_31__38_SequentialInstruction_display.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_SequentialInstruction_display (NULL,
                                                                      freeCategoryMethod_ipic_31__38_SequentialInstruction_display) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                 GALGAS_string & io_ioListFileContents,
                                 C_Compiler * inCompiler
                                 COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_ipic_31__38_SequentialInstruction) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_ipic_31__38_SequentialInstruction_display f = NULL ;
    if (classIndex < gCategoryMethodTable_ipic_31__38_SequentialInstruction_display.count ()) {
      f = gCategoryMethodTable_ipic_31__38_SequentialInstruction_display (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_ipic_31__38_SequentialInstruction_display.count ()) {
           f = gCategoryMethodTable_ipic_31__38_SequentialInstruction_display (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_ipic_31__38_SequentialInstruction_display.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, io_ioListFileContents, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@ipic18InstructionWithNoOperand display'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_InstructionWithNoOperand_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                         GALGAS_string & ioArgument_ioListFileContents,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38_InstructionWithNoOperand * object = (const cPtr_ipic_31__38_InstructionWithNoOperand *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38_InstructionWithNoOperand) ;
  ioArgument_ioListFileContents.dotAssign_operation (categoryReader_assemblyCode (object->mAttribute_mKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (2126)) COMMA_SOURCE_FILE_AT_LINE (2126)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_InstructionWithNoOperand_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38_InstructionWithNoOperand.mSlotID,
                               categoryMethod_ipic_31__38_InstructionWithNoOperand_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_InstructionWithNoOperand_display (defineCategoryMethod_ipic_31__38_InstructionWithNoOperand_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@ipic18_intermediate_instruction_FDA display' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                       GALGAS_string & ioArgument_ioListFileContents,
                                                                                       C_Compiler * inCompiler
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA) ;
  ioArgument_ioListFileContents.dotAssign_operation (categoryReader_mnemonic (object->mAttribute_mInstruction_5F_FDA_5F_base_5F_code, inCompiler COMMA_SOURCE_FILE_AT_LINE (2134)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (2134)).operator_concat (object->mAttribute_mRegisterDescription.reader_mAssemblyString (SOURCE_FILE_AT_LINE (2134)) COMMA_SOURCE_FILE_AT_LINE (2134)) COMMA_SOURCE_FILE_AT_LINE (2134)) ;
  const enumGalgasBool test_0 = object->mAttribute_m_5F_W_5F_isDestination.operator_and (object->mAttribute_mRegisterDescription.reader_mNeedsBSR (SOURCE_FILE_AT_LINE (2135)) COMMA_SOURCE_FILE_AT_LINE (2135)).boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (", W, BSR_ACCESS") COMMA_SOURCE_FILE_AT_LINE (2136)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = object->mAttribute_mRegisterDescription.reader_mNeedsBSR (SOURCE_FILE_AT_LINE (2137)).boolEnum () ;
    if (kBoolTrue == test_1) {
      ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (", F, BSR_ACCESS") COMMA_SOURCE_FILE_AT_LINE (2138)) ;
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_2 = object->mAttribute_m_5F_W_5F_isDestination.boolEnum () ;
      if (kBoolTrue == test_2) {
        ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (", W") COMMA_SOURCE_FILE_AT_LINE (2140)) ;
      }else if (kBoolFalse == test_2) {
        ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (", F") COMMA_SOURCE_FILE_AT_LINE (2142)) ;
      }
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@ipic18_intermediate_instruction_FA display'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FA_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                      GALGAS_string & ioArgument_ioListFileContents,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_FA * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_FA *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_FA) ;
  ioArgument_ioListFileContents.dotAssign_operation (categoryReader_mnemonic (object->mAttribute_mFAinstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (2149)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (2149)).operator_concat (object->mAttribute_mRegisterDescription.reader_mAssemblyString (SOURCE_FILE_AT_LINE (2149)) COMMA_SOURCE_FILE_AT_LINE (2149)) COMMA_SOURCE_FILE_AT_LINE (2149)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FA_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FA_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FA_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FA_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18_intermediate_instruction_MOVFF display'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                         GALGAS_string & ioArgument_ioListFileContents,
                                                                                         C_Compiler * /* inCompiler */
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("MOVFF ").operator_concat (object->mAttribute_mSourceRegisterDescription.reader_mAssemblyString (SOURCE_FILE_AT_LINE (2155)) COMMA_SOURCE_FILE_AT_LINE (2155)).operator_concat (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (2156)).operator_concat (object->mAttribute_mDestinationRegisterDescription.reader_mAssemblyString (SOURCE_FILE_AT_LINE (2156)) COMMA_SOURCE_FILE_AT_LINE (2156)) COMMA_SOURCE_FILE_AT_LINE (2155)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18_intermediate_instruction_literalOperation display'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                                    GALGAS_string & ioArgument_ioListFileContents,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation) ;
  ioArgument_ioListFileContents.dotAssign_operation (categoryReader_mnemonic (object->mAttribute_mLiteralInstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (2162)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (2162)).operator_concat (object->mAttribute_mLiteralValue.reader_hexString (SOURCE_FILE_AT_LINE (2162)) COMMA_SOURCE_FILE_AT_LINE (2162)) COMMA_SOURCE_FILE_AT_LINE (2162)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18_intermediate_instruction_LFSR display' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_LFSR_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                        GALGAS_string & ioArgument_ioListFileContents,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_LFSR * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_LFSR *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_LFSR) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("LFSR ").operator_concat (object->mAttribute_mFSRindex.reader_uint (SOURCE_FILE_AT_LINE (2168)).reader_string (SOURCE_FILE_AT_LINE (2168)) COMMA_SOURCE_FILE_AT_LINE (2168)).operator_concat (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (2168)).operator_concat (object->mAttribute_mValue.reader_hexString (SOURCE_FILE_AT_LINE (2168)) COMMA_SOURCE_FILE_AT_LINE (2168)) COMMA_SOURCE_FILE_AT_LINE (2168)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_LFSR_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_LFSR.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_LFSR_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_LFSR_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_LFSR_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@ipic18_intermediate_instruction_FBA display' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FBA_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                       GALGAS_string & ioArgument_ioListFileContents,
                                                                                       C_Compiler * inCompiler
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_FBA * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_FBA *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_FBA) ;
  ioArgument_ioListFileContents.dotAssign_operation (categoryReader_mnemonic (object->mAttribute_mBitOrientedOp, inCompiler COMMA_SOURCE_FILE_AT_LINE (2174)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (2174)).operator_concat (object->mAttribute_mRegisterDescription.reader_mAssemblyString (SOURCE_FILE_AT_LINE (2174)) COMMA_SOURCE_FILE_AT_LINE (2174)).operator_concat (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (2174)).operator_concat (object->mAttribute_mBitNumber.reader_string (SOURCE_FILE_AT_LINE (2174)) COMMA_SOURCE_FILE_AT_LINE (2174)) COMMA_SOURCE_FILE_AT_LINE (2174)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FBA_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FBA.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FBA_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FBA_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FBA_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Overriding category method '@ipic18_intermediate_JSR display'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_JSR_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                        GALGAS_string & ioArgument_ioListFileContents,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_JSR * object = (const cPtr_ipic_31__38__5F_intermediate_5F_JSR *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_JSR) ;
  if (object->mAttribute_mKind.isValid ()) {
    switch (object->mAttribute_mKind.enumValue ()) {
    case GALGAS_jumpInstructionKind::kNotBuilt:
      break ;
    case GALGAS_jumpInstructionKind::kEnum_ipicRelative: {
      ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("BSR ").operator_concat (object->mAttribute_mTargetLabel.reader_string (SOURCE_FILE_AT_LINE (2181)) COMMA_SOURCE_FILE_AT_LINE (2181)) COMMA_SOURCE_FILE_AT_LINE (2181)) ;
      } break ;
    case GALGAS_jumpInstructionKind::kEnum_ipicAbsolute: {
      ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("JSR ").operator_concat (object->mAttribute_mTargetLabel.reader_string (SOURCE_FILE_AT_LINE (2182)) COMMA_SOURCE_FILE_AT_LINE (2182)) COMMA_SOURCE_FILE_AT_LINE (2182)) ;
      } break ;
    case GALGAS_jumpInstructionKind::kEnum_relative: {
      ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("RCALL ").operator_concat (object->mAttribute_mTargetLabel.reader_string (SOURCE_FILE_AT_LINE (2183)) COMMA_SOURCE_FILE_AT_LINE (2183)) COMMA_SOURCE_FILE_AT_LINE (2183)) ;
      } break ;
    case GALGAS_jumpInstructionKind::kEnum_absolute: {
      ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("CALL ").operator_concat (object->mAttribute_mTargetLabel.reader_string (SOURCE_FILE_AT_LINE (2184)) COMMA_SOURCE_FILE_AT_LINE (2184)) COMMA_SOURCE_FILE_AT_LINE (2184)) ;
      } break ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_JSR_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_JSR.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_JSR_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_JSR_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_JSR_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18_intermediate_instruction_MOVLB display'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                         GALGAS_string & ioArgument_ioListFileContents,
                                                                                         C_Compiler * /* inCompiler */
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("MOVLB ").operator_concat (object->mAttribute_mBankIndex.reader_uint (SOURCE_FILE_AT_LINE (2191)).reader_string (SOURCE_FILE_AT_LINE (2191)) COMMA_SOURCE_FILE_AT_LINE (2191)) COMMA_SOURCE_FILE_AT_LINE (2191)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18_intermediate_instruction_TBLRD display'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLRD_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                         GALGAS_string & ioArgument_ioListFileContents,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLRD * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLRD *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLRD) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("TBLRD ").operator_concat (categoryReader_mnemonic (object->mAttribute_mOption, inCompiler COMMA_SOURCE_FILE_AT_LINE (2197)) COMMA_SOURCE_FILE_AT_LINE (2197)) COMMA_SOURCE_FILE_AT_LINE (2197)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLRD_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLRD.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLRD_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLRD_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLRD_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18_intermediate_instruction_TBLWT display'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLWT_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                         GALGAS_string & ioArgument_ioListFileContents,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLWT * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLWT *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLWT) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("TBLWT ").operator_concat (categoryReader_mnemonic (object->mAttribute_mOption, inCompiler COMMA_SOURCE_FILE_AT_LINE (2203)) COMMA_SOURCE_FILE_AT_LINE (2203)) COMMA_SOURCE_FILE_AT_LINE (2203)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLWT_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLWT.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLWT_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLWT_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLWT_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18_intermediate_instruction_MNOP display' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MNOP_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                        GALGAS_string & ioArgument_ioListFileContents,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_MNOP * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_MNOP *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_MNOP) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("MNOP ").operator_concat (object->mAttribute_mOccurrenceFactor.reader_uint (SOURCE_FILE_AT_LINE (2209)).reader_string (SOURCE_FILE_AT_LINE (2209)) COMMA_SOURCE_FILE_AT_LINE (2209)) COMMA_SOURCE_FILE_AT_LINE (2209)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MNOP_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MNOP.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MNOP_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MNOP_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MNOP_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@ipic18_intermediate_MOV_LABEL_W display'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                      GALGAS_string & ioArgument_ioListFileContents,
                                                                                      C_Compiler * /* inCompiler */
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W * object = (const cPtr_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("MOVLW ((").operator_concat (object->mAttribute_mLabel.reader_string (SOURCE_FILE_AT_LINE (2215)) COMMA_SOURCE_FILE_AT_LINE (2215)).operator_concat (GALGAS_string (" + ") COMMA_SOURCE_FILE_AT_LINE (2215)).operator_concat (object->mAttribute_mOffset.reader_string (SOURCE_FILE_AT_LINE (2215)) COMMA_SOURCE_FILE_AT_LINE (2215)).operator_concat (GALGAS_string (") >> ") COMMA_SOURCE_FILE_AT_LINE (2215)).operator_concat (object->mAttribute_mRightShift.reader_string (SOURCE_FILE_AT_LINE (2215)) COMMA_SOURCE_FILE_AT_LINE (2215)).operator_concat (GALGAS_string (") & 0xFF") COMMA_SOURCE_FILE_AT_LINE (2215)) COMMA_SOURCE_FILE_AT_LINE (2215)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18_intermediate_instruction_computed_rcall display'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                                     GALGAS_string & ioArgument_ioListFileContents,
                                                                                                     C_Compiler * /* inCompiler */
                                                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("COMPUTED RCALL ") COMMA_SOURCE_FILE_AT_LINE (2221)) ;
  const enumGalgasBool test_0 = object->mAttribute_mUsesRCALL.boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("(uses RCALL)") COMMA_SOURCE_FILE_AT_LINE (2223)) ;
  }else if (kBoolFalse == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("(uses CALL)") COMMA_SOURCE_FILE_AT_LINE (2225)) ;
  }
  cEnumerator_lstringlist enumerator_76867 (object->mAttribute_mTargetLabels, kEnumeration_up) ;
  while (enumerator_76867.hasCurrentObject ()) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("\n"
      "    ").operator_concat (enumerator_76867.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (2228)) COMMA_SOURCE_FILE_AT_LINE (2228)) COMMA_SOURCE_FILE_AT_LINE (2228)) ;
    enumerator_76867.gotoNextObject () ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18_intermediate_instruction_BitTestSkip display'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_BitTestSkip_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                               GALGAS_string & ioArgument_ioListFileContents,
                                                                                               C_Compiler * inCompiler
                                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_BitTestSkip * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_BitTestSkip *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_BitTestSkip) ;
  const enumGalgasBool test_0 = object->mAttribute_mSkipIfSet.boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("!") COMMA_SOURCE_FILE_AT_LINE (2236)) ;
  }
  ioArgument_ioListFileContents.dotAssign_operation (object->mAttribute_mRegisterDescription.reader_mAssemblyString (SOURCE_FILE_AT_LINE (2238)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (2238)).operator_concat (object->mAttribute_mBitNumber.reader_string (SOURCE_FILE_AT_LINE (2238)) COMMA_SOURCE_FILE_AT_LINE (2238)).operator_concat (GALGAS_string (" \?\n"
    "    ") COMMA_SOURCE_FILE_AT_LINE (2239)) COMMA_SOURCE_FILE_AT_LINE (2238)) ;
  callCategoryMethod_display ((const cPtr_ipic_31__38_SequentialInstruction *) object->mAttribute_mEmbeddedInstruction.ptr (), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2240)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_BitTestSkip_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_BitTestSkip.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_BitTestSkip_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_BitTestSkip_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_BitTestSkip_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@ipic18_skip_instruction_FA display'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_skip_5F_instruction_5F_FA_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                              GALGAS_string & ioArgument_ioListFileContents,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_skip_5F_instruction_5F_FA * object = (const cPtr_ipic_31__38__5F_skip_5F_instruction_5F_FA *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_skip_5F_instruction_5F_FA) ;
  ioArgument_ioListFileContents.dotAssign_operation (categoryReader_mnemonic (object->mAttribute_mFAinstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (2246)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (2246)).operator_concat (object->mAttribute_mRegisterDescription.reader_mAssemblyString (SOURCE_FILE_AT_LINE (2246)) COMMA_SOURCE_FILE_AT_LINE (2246)).operator_concat (GALGAS_string (" \?\n"
    "    ") COMMA_SOURCE_FILE_AT_LINE (2247)) COMMA_SOURCE_FILE_AT_LINE (2246)) ;
  callCategoryMethod_display ((const cPtr_ipic_31__38_SequentialInstruction *) object->mAttribute_mEmbeddedInstruction.ptr (), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2248)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_skip_5F_instruction_5F_FA_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_skip_5F_instruction_5F_FA.mSlotID,
                               categoryMethod_ipic_31__38__5F_skip_5F_instruction_5F_FA_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_skip_5F_instruction_5F_FA_display (defineCategoryMethod_ipic_31__38__5F_skip_5F_instruction_5F_FA_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@ipic18_skip_instruction_FDA display'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_skip_5F_instruction_5F_FDA_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                               GALGAS_string & ioArgument_ioListFileContents,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_skip_5F_instruction_5F_FDA * object = (const cPtr_ipic_31__38__5F_skip_5F_instruction_5F_FDA *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_skip_5F_instruction_5F_FDA) ;
  ioArgument_ioListFileContents.dotAssign_operation (categoryReader_mnemonic (object->mAttribute_mInstruction_5F_FDA_5F_base_5F_code, inCompiler COMMA_SOURCE_FILE_AT_LINE (2254)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (2254)).operator_concat (object->mAttribute_mRegisterDescription.reader_mAssemblyString (SOURCE_FILE_AT_LINE (2254)) COMMA_SOURCE_FILE_AT_LINE (2254)) COMMA_SOURCE_FILE_AT_LINE (2254)) ;
  const enumGalgasBool test_0 = object->mAttribute_m_5F_W_5F_isDestination.boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (", W") COMMA_SOURCE_FILE_AT_LINE (2256)) ;
  }
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (" \?\n"
    "    ") COMMA_SOURCE_FILE_AT_LINE (2258)) ;
  callCategoryMethod_display ((const cPtr_ipic_31__38_SequentialInstruction *) object->mAttribute_mEmbeddedInstruction.ptr (), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2259)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_skip_5F_instruction_5F_FDA_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_skip_5F_instruction_5F_FDA.mSlotID,
                               categoryMethod_ipic_31__38__5F_skip_5F_instruction_5F_FDA_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_skip_5F_instruction_5F_FDA_display (defineCategoryMethod_ipic_31__38__5F_skip_5F_instruction_5F_FDA_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Category method '@ipic18Block display'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void categoryMethod_display (const GALGAS_ipic_31__38_Block inObject,
                             GALGAS_string & ioArgument_ioListFileContents,
                             C_Compiler * inCompiler
                             COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, inObject.mAttribute_mStartAddress.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2271)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("ORG ").operator_concat (inObject.mAttribute_mStartAddress.reader_hexString (SOURCE_FILE_AT_LINE (2272)) COMMA_SOURCE_FILE_AT_LINE (2272)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (2272)) COMMA_SOURCE_FILE_AT_LINE (2272)) ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, inObject.mAttribute_mLabel.mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_1) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("LABEL ").operator_concat (inObject.mAttribute_mLabel.reader_string (SOURCE_FILE_AT_LINE (2275)) COMMA_SOURCE_FILE_AT_LINE (2275)).operator_concat (GALGAS_string (":\n") COMMA_SOURCE_FILE_AT_LINE (2275)) COMMA_SOURCE_FILE_AT_LINE (2275)) ;
  }
  cEnumerator_ipic_31__38_SequentialInstructionList enumerator_78672 (inObject.mAttribute_mInstructionList, kEnumeration_up) ;
  while (enumerator_78672.hasCurrentObject ()) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ") COMMA_SOURCE_FILE_AT_LINE (2279)) ;
    callCategoryMethod_display ((const cPtr_ipic_31__38_SequentialInstruction *) enumerator_78672.current_mInstruction (HERE).ptr (), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2280)) ;
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (2281)) ;
    enumerator_78672.gotoNextObject () ;
  }
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ") COMMA_SOURCE_FILE_AT_LINE (2284)) ;
  callCategoryMethod_display ((const cPtr_ipic_31__38_AbstractBlockTerminator *) inObject.mAttribute_mTerminator.ptr (), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2285)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("\n"
    "\n") COMMA_SOURCE_FILE_AT_LINE (2286)) ;
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


