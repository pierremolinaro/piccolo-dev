//---------------------------------------------------------------------------*
//                                                                           *
//               File 'ipic18_build_block_representation.cpp'                *
//                        Generated by version 2.5.0                         *
//                      august 2nd, 2013, at 21h26'27"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "ipic18_build_block_representation.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "piccolo_options.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "ipic18_build_block_representation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'registerComparisonComplementary'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_registerComparisonComplementary (const GALGAS_pic_31__38_RegisterComparison constinArgument0,
                                              GALGAS_pic_31__38_RegisterComparison & outArgument1,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Routine 'registerComparisonInstructionCount'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_registerComparisonInstructionCount (const GALGAS_pic_31__38_RegisterComparison constinArgument0,
                                                 GALGAS_uint & outArgument1,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'analyzeInstructionList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeInstructionList (const GALGAS_instructionList constinArgument0,
                                     GALGAS_ipic_31__38_BlockList & ioArgument1,
                                     const GALGAS_uint constinArgument2,
                                     const GALGAS_routineMap constinArgument3,
                                     const GALGAS_registerTable constinArgument4,
                                     const GALGAS_dataMap constinArgument5,
                                     const GALGAS_constantMap constinArgument6,
                                     GALGAS_uint & ioArgument7,
                                     GALGAS_ipic_31__38_Block & ioArgument8,
                                     GALGAS_string & ioArgument9,
                                     GALGAS_uint & ioArgument10,
                                     const GALGAS_bool constinArgument11,
                                     GALGAS_bool & outArgument12,
                                     const GALGAS_routineKind constinArgument13,
                                     C_Compiler * inCompiler
                                     COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'displayBlockList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_displayBlockList (GALGAS_string & ioArgument0,
                               const GALGAS_ipic_31__38_BlockList constinArgument1,
                               C_Compiler * inCompiler
                               COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'registerComparisonComplementary'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_registerComparisonComplementary (const GALGAS_pic_31__38_RegisterComparison constinArgument_inComparison,
                                              GALGAS_pic_31__38_RegisterComparison & outArgument_outComparison,
                                              C_Compiler * /* inCompiler */
                                              COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outComparison.drop () ; // Release 'out' argument
  if (constinArgument_inComparison.isValid ()) {
    switch (constinArgument_inComparison.enumValue ()) {
    case GALGAS_pic_31__38_RegisterComparison::kNotBuilt:
      break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_notEqual: {
      outArgument_outComparison = GALGAS_pic_31__38_RegisterComparison::constructor_equal (SOURCE_FILE_AT_LINE (2015)) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_equal: {
      outArgument_outComparison = GALGAS_pic_31__38_RegisterComparison::constructor_notEqual (SOURCE_FILE_AT_LINE (2016)) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_greaterOrEqual: {
      outArgument_outComparison = GALGAS_pic_31__38_RegisterComparison::constructor_lower (SOURCE_FILE_AT_LINE (2017)) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_greater: {
      outArgument_outComparison = GALGAS_pic_31__38_RegisterComparison::constructor_lowerOrEqual (SOURCE_FILE_AT_LINE (2018)) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_lowerOrEqual: {
      outArgument_outComparison = GALGAS_pic_31__38_RegisterComparison::constructor_greater (SOURCE_FILE_AT_LINE (2019)) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_lower: {
      outArgument_outComparison = GALGAS_pic_31__38_RegisterComparison::constructor_greaterOrEqual (SOURCE_FILE_AT_LINE (2020)) ;
      } break ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//               Routine 'registerComparisonInstructionCount'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_registerComparisonInstructionCount (const GALGAS_pic_31__38_RegisterComparison constinArgument_inComparison,
                                                 GALGAS_uint & outArgument_outInstructionCount,
                                                 C_Compiler * /* inCompiler */
                                                 COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outInstructionCount.drop () ; // Release 'out' argument
  if (constinArgument_inComparison.isValid ()) {
    switch (constinArgument_inComparison.enumValue ()) {
    case GALGAS_pic_31__38_RegisterComparison::kNotBuilt:
      break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_notEqual: {
      outArgument_outInstructionCount = GALGAS_uint ((PMUInt32) 2U) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_equal: {
      outArgument_outInstructionCount = GALGAS_uint ((PMUInt32) 3U) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_greaterOrEqual: {
      outArgument_outInstructionCount = GALGAS_uint ((PMUInt32) 2U) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_greater: {
      outArgument_outInstructionCount = GALGAS_uint ((PMUInt32) 3U) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_lowerOrEqual: {
      outArgument_outInstructionCount = GALGAS_uint ((PMUInt32) 2U) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_lower: {
      outArgument_outInstructionCount = GALGAS_uint ((PMUInt32) 3U) ;
      } break ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'analyzeInstructionList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeInstructionList (const GALGAS_instructionList constinArgument_inInstructionList,
                                     GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                     const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                     const GALGAS_routineMap constinArgument_inRoutineMap,
                                     const GALGAS_registerTable constinArgument_inRegisterTable,
                                     const GALGAS_dataMap constinArgument_inDataMap,
                                     const GALGAS_constantMap constinArgument_inConstantMap,
                                     GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                     GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                     GALGAS_string & ioArgument_ioListFileContents,
                                     GALGAS_uint & ioArgument_ioCurrentBank,
                                     const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                     GALGAS_bool & outArgument_outContinuesInSequence,
                                     const GALGAS_routineKind constinArgument_inRoutineKind,
                                     C_Compiler * inCompiler
                                     COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outContinuesInSequence.drop () ; // Release 'out' argument
  outArgument_outContinuesInSequence = GALGAS_bool (true) ;
  cEnumerator_instructionList enumerator_85124 (constinArgument_inInstructionList, kEnumeration_up) ;
  while (enumerator_85124.hasCurrentObject ()) {
    const enumGalgasBool test_0 = outArgument_outContinuesInSequence.operator_not (SOURCE_FILE_AT_LINE (2470)).boolEnum () ;
    if (kBoolTrue == test_0) {
      inCompiler->emitSemanticError (enumerator_85124.current_mInstruction (HERE).reader_mInstructionLocation (SOURCE_FILE_AT_LINE (2471)), GALGAS_string ("Unreachable code") COMMA_SOURCE_FILE_AT_LINE (2471)) ;
      outArgument_outContinuesInSequence = GALGAS_bool (true) ;
    }
    callCategoryMethod_analyze ((const cPtr_pic_31__38_PiccoloInstruction *) enumerator_85124.current_mInstruction (HERE).ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioGeneratedBlockList, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioLocalLabelIndex, ioArgument_ioCurrentBlock, ioArgument_ioListFileContents, ioArgument_ioCurrentBank, constinArgument_inShouldPreserveBSR, outArgument_outContinuesInSequence, constinArgument_inRoutineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (2474)) ;
    enumerator_85124.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'displayBlockList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_displayBlockList (GALGAS_string & ioArgument_ioListFileContents,
                               const GALGAS_ipic_31__38_BlockList constinArgument_inGeneratedBlockList,
                               C_Compiler * inCompiler
                               COMMA_UNUSED_LOCATION_ARGS) {
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string::makeEmptyString ().reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (2498)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (2498)) COMMA_SOURCE_FILE_AT_LINE (2498)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*").operator_concat (GALGAS_string ("INTERMEDIATE BLOCK REPRESENTATION").reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 77U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (2499)) COMMA_SOURCE_FILE_AT_LINE (2499)).operator_concat (GALGAS_string ("*\n") COMMA_SOURCE_FILE_AT_LINE (2499)) COMMA_SOURCE_FILE_AT_LINE (2499)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string::makeEmptyString ().reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (2500)).operator_concat (GALGAS_string ("\n"
    "\n") COMMA_SOURCE_FILE_AT_LINE (2500)) COMMA_SOURCE_FILE_AT_LINE (2500)) ;
  cEnumerator_ipic_31__38_BlockList enumerator_86156 (constinArgument_inGeneratedBlockList, kEnumeration_up) ;
  while (enumerator_86156.hasCurrentObject ()) {
    categoryMethod_display (enumerator_86156.current_mBlock (HERE), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2502)) ;
    enumerator_86156.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//             Routine 'build_ipic18_block_representation_list'              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_5F_ipic_31__38__5F_block_5F_representation_5F_list (const GALGAS_sint constinArgument_inROMSize,
                                                                       const GALGAS_sint constinArgument_inRAMSize,
                                                                       const GALGAS_routineDeclarationList constinArgument_inBootloaderRoutineDeclarationListForBootloaderImplementation,
                                                                       const GALGAS_routineDeclarationList constinArgument_inUserRoutineDeclarationListForBootloaderImplementation,
                                                                       const GALGAS_luint constinArgument_inBootloaderReservedROMsize,
                                                                       const GALGAS_routineDeclarationList constinArgument_inBootloaderRoutineDeclarationListForUserProgramImplementation,
                                                                       const GALGAS_routineDeclarationList constinArgument_inUserRoutineDeclarationListForUserProgramImplementation,
                                                                       const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                       const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                       const GALGAS_dataMap constinArgument_inDataMap,
                                                                       const GALGAS_piccoloModel constinArgument_inPiccoloModel,
                                                                       const GALGAS_bool constinArgument_inHasHighInterrupt,
                                                                       const GALGAS_bool constinArgument_inHasLowInterrupt,
                                                                       const GALGAS_constantMap constinArgument_inDataLengthConstantMap,
                                                                       GALGAS_ipic_31__38_BlockList & outArgument_outGeneratedBlockList,
                                                                       GALGAS_string & ioArgument_ioListFileContents,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outGeneratedBlockList.drop () ; // Release 'out' argument
  GALGAS_routineMap var_routineMap = GALGAS_routineMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2527)) ;
  cEnumerator_routineDeclarationList enumerator_87244 (constinArgument_inUserRoutineDeclarationListForBootloaderImplementation, kEnumeration_up) ;
  while (enumerator_87244.hasCurrentObject ()) {
    {
    var_routineMap.modifier_insertKey (enumerator_87244.current_mRoutineName (HERE), enumerator_87244.current_mIsNoReturn (HERE), enumerator_87244.current_mRequiredBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2529)), enumerator_87244.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2529)), enumerator_87244.current_mPreservesBank (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (2529)) ;
    }
    enumerator_87244.gotoNextObject () ;
  }
  cEnumerator_routineDeclarationList enumerator_87454 (constinArgument_inBootloaderRoutineDeclarationListForUserProgramImplementation, kEnumeration_up) ;
  while (enumerator_87454.hasCurrentObject ()) {
    {
    var_routineMap.modifier_insertKey (enumerator_87454.current_mRoutineName (HERE), enumerator_87454.current_mIsNoReturn (HERE), enumerator_87454.current_mRequiredBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2532)), enumerator_87454.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2532)), enumerator_87454.current_mPreservesBank (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (2532)) ;
    }
    enumerator_87454.gotoNextObject () ;
  }
  cEnumerator_routineDefinitionList enumerator_87641 (constinArgument_inPiccoloModel.reader_mRoutineDefinitionList (SOURCE_FILE_AT_LINE (2534)), kEnumeration_up) ;
  while (enumerator_87641.hasCurrentObject ()) {
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, enumerator_87641.current_mRequiredBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2535)).objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2535)))).operator_and (GALGAS_bool (kIsStrictSup, enumerator_87641.current_mRequiredBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2535)).objectCompare (GALGAS_uint ((PMUInt32) 15U))) COMMA_SOURCE_FILE_AT_LINE (2535)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_location location_1 (enumerator_87641.current_mRequiredBank (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the required bank value should be lower or equal to 15") COMMA_SOURCE_FILE_AT_LINE (2536)) ;
    }
    const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, enumerator_87641.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2538)).objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2538)))).operator_and (GALGAS_bool (kIsStrictSup, enumerator_87641.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2538)).objectCompare (GALGAS_uint ((PMUInt32) 15U))) COMMA_SOURCE_FILE_AT_LINE (2538)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (enumerator_87641.current_mReturnedBank (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("the returned bank value should be lower or equal to 15") COMMA_SOURCE_FILE_AT_LINE (2539)) ;
    }
    {
    var_routineMap.modifier_insertKey (enumerator_87641.current_mRoutineName (HERE), enumerator_87641.current_mIsNoReturn (HERE), enumerator_87641.current_mRequiredBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2541)), enumerator_87641.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2541)), enumerator_87641.current_mPreservesBank (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (2541)) ;
    }
    enumerator_87641.gotoNextObject () ;
  }
  GALGAS_constantMap var_constantMap = constinArgument_inDataLengthConstantMap ;
  {
  var_constantMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("ROM_SIZE"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2546)), constinArgument_inROMSize, inCompiler COMMA_SOURCE_FILE_AT_LINE (2546)) ;
  }
  {
  var_constantMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("RAM_SIZE"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2547)), constinArgument_inRAMSize, inCompiler COMMA_SOURCE_FILE_AT_LINE (2547)) ;
  }
  const enumGalgasBool test_4 = GALGAS_bool (kIsNotEqual, constinArgument_inPiccoloModel.mAttribute_mProgramKind.objectCompare (GALGAS_programKind::constructor_regularProgram (SOURCE_FILE_AT_LINE (2549)))).boolEnum () ;
  if (kBoolTrue == test_4) {
    GALGAS_lstring var_bootloaderSizeString = GALGAS_lstring::constructor_new (GALGAS_string ("BOOTLOADER_RESERVED_SIZE"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2550)) ;
    {
    var_constantMap.modifier_insertKey (var_bootloaderSizeString, constinArgument_inBootloaderReservedROMsize.reader_uint (SOURCE_FILE_AT_LINE (2551)).reader_sint (inCompiler COMMA_SOURCE_FILE_AT_LINE (2551)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2551)) ;
    }
  }
  cEnumerator_constantDefinitionList enumerator_88818 (constinArgument_inPiccoloModel.reader_mConstantDefinitionList (SOURCE_FILE_AT_LINE (2554)), kEnumeration_up) ;
  while (enumerator_88818.hasCurrentObject ()) {
    GALGAS_sint var_result ;
    callCategoryMethod_eval ((const cPtr_immediatExpression *) enumerator_88818.current_mExpression (HERE).ptr (), constinArgument_inRegisterTable, var_constantMap, var_result, inCompiler COMMA_SOURCE_FILE_AT_LINE (2555)) ;
    const enumGalgasBool test_5 = constinArgument_inRegisterTable.reader_hasKey (enumerator_88818.current_mConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (2556)) COMMA_SOURCE_FILE_AT_LINE (2556)).boolEnum () ;
    if (kBoolTrue == test_5) {
      GALGAS_location location_6 (enumerator_88818.current_mConstantName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_6, GALGAS_string ("'").operator_concat (enumerator_88818.current_mConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (2557)) COMMA_SOURCE_FILE_AT_LINE (2557)).operator_concat (GALGAS_string ("' is already declared as ram register or special register") COMMA_SOURCE_FILE_AT_LINE (2557)) COMMA_SOURCE_FILE_AT_LINE (2557)) ;
    }else if (kBoolFalse == test_5) {
      {
      var_constantMap.modifier_insertKey (enumerator_88818.current_mConstantName (HERE), var_result, inCompiler COMMA_SOURCE_FILE_AT_LINE (2559)) ;
      }
    }
    enumerator_88818.gotoNextObject () ;
  }
  const enumGalgasBool test_7 = GALGAS_bool (gOption_piccolo_5F_options_ouputListingFile.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_7) {
    {
    routine_print_5F_constant_5F_definition (var_constantMap, ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2564)) ;
    }
  }
  const enumGalgasBool test_8 = GALGAS_bool (kIsNotEqual, constinArgument_inPiccoloModel.mAttribute_mProgramKind.objectCompare (GALGAS_programKind::constructor_userProgram (SOURCE_FILE_AT_LINE (2570)))).boolEnum () ;
  if (kBoolTrue == test_8) {
    const enumGalgasBool test_9 = var_routineMap.reader_hasKey (GALGAS_string ("main") COMMA_SOURCE_FILE_AT_LINE (2571)).boolEnum () ;
    if (kBoolTrue == test_9) {
      GALGAS_bool var_isNoReturn ;
      GALGAS_uint var_requiredBank ;
      GALGAS_uint joker_89686_0 ; // Joker input parameter
      GALGAS_bool joker_89689_0 ; // Joker input parameter
      var_routineMap.method_searchKey (GALGAS_lstring::constructor_new (GALGAS_string ("main"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2574)), var_isNoReturn, var_requiredBank, joker_89686_0, joker_89689_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2574)) ;
      const enumGalgasBool test_10 = var_isNoReturn.operator_not (SOURCE_FILE_AT_LINE (2575)).boolEnum () ;
      if (kBoolTrue == test_10) {
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("the \"main\" should be declared with \"noreturn\" qualifier: \"noreturn main requiresbank 0\"") COMMA_SOURCE_FILE_AT_LINE (2576)) ;
      }
      const enumGalgasBool test_11 = GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
      if (kBoolTrue == test_11) {
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("the \"main\" should be declared with \"requiresbank 0\" qualifier: \"noreturn main requiresbank 0\"") COMMA_SOURCE_FILE_AT_LINE (2579)) ;
      }
    }else if (kBoolFalse == test_9) {
      inCompiler->emitSemanticError (constinArgument_inPiccoloModel.reader_mEndOfProgram (SOURCE_FILE_AT_LINE (2582)), GALGAS_string ("the program should declare the \"main\" routine") COMMA_SOURCE_FILE_AT_LINE (2582)) ;
    }
  }
  outArgument_outGeneratedBlockList = GALGAS_ipic_31__38_BlockList::constructor_emptyList (SOURCE_FILE_AT_LINE (2586)) ;
  GALGAS_uint var_entryPoint = GALGAS_uint ((PMUInt32) 4U) ;
  cEnumerator_routineDeclarationList enumerator_90400 (constinArgument_inBootloaderRoutineDeclarationListForUserProgramImplementation, kEnumeration_up) ;
  while (enumerator_90400.hasCurrentObject ()) {
    outArgument_outGeneratedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (var_entryPoint, GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE_AT_LINE (2591)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2592)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (enumerator_90400.current_mRoutineName (HERE) COMMA_SOURCE_FILE_AT_LINE (2593)) COMMA_SOURCE_FILE_AT_LINE (2589)) COMMA_SOURCE_FILE_AT_LINE (2589)) ;
    var_entryPoint = var_entryPoint.add_operation (GALGAS_uint ((PMUInt32) 4U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2595)) ;
    const enumGalgasBool test_12 = GALGAS_bool (kIsEqual, var_entryPoint.objectCompare (GALGAS_uint ((PMUInt32) 8U))).boolEnum () ;
    if (kBoolTrue == test_12) {
      var_entryPoint = GALGAS_uint ((PMUInt32) 12U) ;
    }else if (kBoolFalse == test_12) {
      const enumGalgasBool test_13 = GALGAS_bool (kIsEqual, var_entryPoint.objectCompare (GALGAS_uint ((PMUInt32) 24U))).boolEnum () ;
      if (kBoolTrue == test_13) {
        var_entryPoint = GALGAS_uint ((PMUInt32) 28U) ;
      }
    }
    enumerator_90400.gotoNextObject () ;
  }
  var_entryPoint = constinArgument_inBootloaderReservedROMsize.reader_uint (SOURCE_FILE_AT_LINE (2603)) ;
  cEnumerator_routineDeclarationList enumerator_90987 (constinArgument_inUserRoutineDeclarationListForUserProgramImplementation, kEnumeration_up) ;
  while (enumerator_90987.hasCurrentObject ()) {
    outArgument_outGeneratedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (var_entryPoint, GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE_AT_LINE (2607)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2608)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (enumerator_90987.current_mRoutineName (HERE) COMMA_SOURCE_FILE_AT_LINE (2609)) COMMA_SOURCE_FILE_AT_LINE (2605)) COMMA_SOURCE_FILE_AT_LINE (2605)) ;
    var_entryPoint = var_entryPoint.add_operation (GALGAS_uint ((PMUInt32) 4U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2611)) ;
    enumerator_90987.gotoNextObject () ;
  }
  var_entryPoint = constinArgument_inBootloaderReservedROMsize.reader_uint (SOURCE_FILE_AT_LINE (2614)) ;
  cEnumerator_routineDeclarationList enumerator_91442 (constinArgument_inUserRoutineDeclarationListForUserProgramImplementation, kEnumeration_up) ;
  while (enumerator_91442.hasCurrentObject ()) {
    outArgument_outGeneratedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (var_entryPoint, GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE_AT_LINE (2618)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2619)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (enumerator_91442.current_mRoutineName (HERE) COMMA_SOURCE_FILE_AT_LINE (2620)) COMMA_SOURCE_FILE_AT_LINE (2616)) COMMA_SOURCE_FILE_AT_LINE (2616)) ;
    var_entryPoint = var_entryPoint.add_operation (GALGAS_uint ((PMUInt32) 4U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2622)) ;
    enumerator_91442.gotoNextObject () ;
  }
  const enumGalgasBool test_14 = GALGAS_bool (kIsNotEqual, constinArgument_inPiccoloModel.mAttribute_mProgramKind.objectCompare (GALGAS_programKind::constructor_userProgram (SOURCE_FILE_AT_LINE (2625)))).boolEnum () ;
  if (kBoolTrue == test_14) {
    outArgument_outGeneratedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint ((PMUInt32) 0U), GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE_AT_LINE (2628)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2629)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (GALGAS_string ("main").reader_nowhere (SOURCE_FILE_AT_LINE (2630)) COMMA_SOURCE_FILE_AT_LINE (2630)) COMMA_SOURCE_FILE_AT_LINE (2626)) COMMA_SOURCE_FILE_AT_LINE (2626)) ;
  }
  GALGAS_routineDeclarationList var_tempBootloaderRoutineDeclarationList = constinArgument_inBootloaderRoutineDeclarationListForBootloaderImplementation ;
  const enumGalgasBool test_15 = GALGAS_bool (kIsStrictSup, var_tempBootloaderRoutineDeclarationList.reader_length (SOURCE_FILE_AT_LINE (2635)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_15) {
    GALGAS_lstring var_routineName ;
    {
    GALGAS_luint joker_92390_0 ; // Joker input parameter
    GALGAS_luint joker_92393_0 ; // Joker input parameter
    GALGAS_bool joker_92396_0 ; // Joker input parameter
    GALGAS_bool joker_92399_0 ; // Joker input parameter
    var_tempBootloaderRoutineDeclarationList.modifier_popFirst (var_routineName, joker_92390_0, joker_92393_0, joker_92396_0, joker_92399_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2636)) ;
    }
    outArgument_outGeneratedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint ((PMUInt32) 4U), GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE_AT_LINE (2639)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2640)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (var_routineName COMMA_SOURCE_FILE_AT_LINE (2641)) COMMA_SOURCE_FILE_AT_LINE (2637)) COMMA_SOURCE_FILE_AT_LINE (2637)) ;
  }
  const enumGalgasBool test_16 = constinArgument_inHasHighInterrupt.boolEnum () ;
  if (kBoolTrue == test_16) {
    outArgument_outGeneratedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint ((PMUInt32) 8U), GALGAS_string ("_high_interrupt_routine").reader_nowhere (SOURCE_FILE_AT_LINE (2648)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2649)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (GALGAS_string ("_high_interrupt").reader_nowhere (SOURCE_FILE_AT_LINE (2650)) COMMA_SOURCE_FILE_AT_LINE (2650)) COMMA_SOURCE_FILE_AT_LINE (2646)) COMMA_SOURCE_FILE_AT_LINE (2646)) ;
  }
  var_entryPoint = GALGAS_uint ((PMUInt32) 12U) ;
  if (var_tempBootloaderRoutineDeclarationList.reader_length (SOURCE_FILE_AT_LINE (2655)).isValid ()) {
    PMUInt32 variant_93125 = var_tempBootloaderRoutineDeclarationList.reader_length (SOURCE_FILE_AT_LINE (2655)).uintValue () ;
    bool loop_93125 = true ;
    while (loop_93125) {
      loop_93125 = GALGAS_bool (kIsStrictSup, var_tempBootloaderRoutineDeclarationList.reader_length (SOURCE_FILE_AT_LINE (2656)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (kIsStrictInf, var_entryPoint.objectCompare (GALGAS_uint ((PMUInt32) 24U))) COMMA_SOURCE_FILE_AT_LINE (2656)).isValid () ;
      if (loop_93125) {
        loop_93125 = GALGAS_bool (kIsStrictSup, var_tempBootloaderRoutineDeclarationList.reader_length (SOURCE_FILE_AT_LINE (2656)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (kIsStrictInf, var_entryPoint.objectCompare (GALGAS_uint ((PMUInt32) 24U))) COMMA_SOURCE_FILE_AT_LINE (2656)).boolValue () ;
      }
      if (loop_93125 && (0 == variant_93125)) {
        loop_93125 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (2655)) ;
      }
      if (loop_93125) {
        variant_93125 -- ;
        GALGAS_lstring var_routineName ;
        {
        GALGAS_luint joker_93337_0 ; // Joker input parameter
        GALGAS_luint joker_93340_0 ; // Joker input parameter
        GALGAS_bool joker_93343_0 ; // Joker input parameter
        GALGAS_bool joker_93346_0 ; // Joker input parameter
        var_tempBootloaderRoutineDeclarationList.modifier_popFirst (var_routineName, joker_93337_0, joker_93340_0, joker_93343_0, joker_93346_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2658)) ;
        }
        outArgument_outGeneratedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (var_entryPoint, GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE_AT_LINE (2661)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2662)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (var_routineName COMMA_SOURCE_FILE_AT_LINE (2663)) COMMA_SOURCE_FILE_AT_LINE (2659)) COMMA_SOURCE_FILE_AT_LINE (2659)) ;
        var_entryPoint = var_entryPoint.add_operation (GALGAS_uint ((PMUInt32) 4U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2665)) ;
      }
    }
  }
  const enumGalgasBool test_17 = constinArgument_inHasLowInterrupt.boolEnum () ;
  if (kBoolTrue == test_17) {
    outArgument_outGeneratedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint ((PMUInt32) 24U), GALGAS_string ("_low_interrupt_routine").reader_nowhere (SOURCE_FILE_AT_LINE (2671)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2672)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (GALGAS_string ("_low_interrupt").reader_nowhere (SOURCE_FILE_AT_LINE (2673)) COMMA_SOURCE_FILE_AT_LINE (2673)) COMMA_SOURCE_FILE_AT_LINE (2669)) COMMA_SOURCE_FILE_AT_LINE (2669)) ;
  }
  var_entryPoint = GALGAS_uint ((PMUInt32) 28U) ;
  cEnumerator_routineDeclarationList enumerator_94094 (var_tempBootloaderRoutineDeclarationList, kEnumeration_up) ;
  while (enumerator_94094.hasCurrentObject ()) {
    outArgument_outGeneratedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (var_entryPoint, GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE_AT_LINE (2681)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2682)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (enumerator_94094.current_mRoutineName (HERE) COMMA_SOURCE_FILE_AT_LINE (2683)) COMMA_SOURCE_FILE_AT_LINE (2679)) COMMA_SOURCE_FILE_AT_LINE (2679)) ;
    var_entryPoint = var_entryPoint.add_operation (GALGAS_uint ((PMUInt32) 4U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2685)) ;
    enumerator_94094.gotoNextObject () ;
  }
  var_tempBootloaderRoutineDeclarationList.drop () ; // drop instruction
  GALGAS_uint var_localLabelIndex = GALGAS_uint ((PMUInt32) 0U) ;
  cEnumerator_routineDefinitionList enumerator_94674 (constinArgument_inPiccoloModel.mAttribute_mRoutineDefinitionList, kEnumeration_up) ;
  while (enumerator_94674.hasCurrentObject ()) {
    GALGAS_uint var_currentBank = enumerator_94674.current_mRequiredBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2695)) ;
    GALGAS_routineKind var_routineKind ;
    const enumGalgasBool test_18 = enumerator_94674.current_mIsNoReturn (HERE).boolEnum () ;
    if (kBoolTrue == test_18) {
      var_routineKind = GALGAS_routineKind::constructor_noReturnRoutine (SOURCE_FILE_AT_LINE (2698)) ;
    }else if (kBoolFalse == test_18) {
      var_routineKind = GALGAS_routineKind::constructor_regularRoutine (SOURCE_FILE_AT_LINE (2700)) ;
    }
    GALGAS_ipic_31__38_Block var_currentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2703)), enumerator_94674.current_mRoutineName (HERE), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2705)), GALGAS_ipic_31__38_ReturnTerminator::constructor_new (SOURCE_FILE_AT_LINE (2706)) COMMA_SOURCE_FILE_AT_LINE (2702)) ;
    GALGAS_bool var_continuesInSequence ;
    {
    routine_analyzeInstructionList (enumerator_94674.current_mInstructionList (HERE), outArgument_outGeneratedBlockList, constinArgument_inAccessBankSplitOffset, var_routineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, var_constantMap, var_localLabelIndex, var_currentBlock, ioArgument_ioListFileContents, var_currentBank, enumerator_94674.current_mPreservesBank (HERE), var_continuesInSequence, var_routineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (2708)) ;
    }
    outArgument_outGeneratedBlockList.addAssign_operation (var_currentBlock COMMA_SOURCE_FILE_AT_LINE (2725)) ;
    const enumGalgasBool test_19 = enumerator_94674.current_mIsNoReturn (HERE).operator_not (SOURCE_FILE_AT_LINE (2727)).operator_and (GALGAS_bool (kIsNotEqual, enumerator_94674.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2727)).objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2727)))) COMMA_SOURCE_FILE_AT_LINE (2727)).operator_and (GALGAS_bool (kIsNotEqual, var_currentBank.objectCompare (enumerator_94674.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2727)))) COMMA_SOURCE_FILE_AT_LINE (2727)).boolEnum () ;
    if (kBoolTrue == test_19) {
      GALGAS_location location_20 (enumerator_94674.current_mRoutineName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_20, GALGAS_string ("execution will not set BSR to ").operator_concat (enumerator_94674.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2728)).reader_string (SOURCE_FILE_AT_LINE (2728)) COMMA_SOURCE_FILE_AT_LINE (2728)) COMMA_SOURCE_FILE_AT_LINE (2728)) ;
    }
    const enumGalgasBool test_21 = enumerator_94674.current_mIsNoReturn (HERE).operator_and (var_continuesInSequence COMMA_SOURCE_FILE_AT_LINE (2730)).boolEnum () ;
    if (kBoolTrue == test_21) {
      GALGAS_location location_22 (enumerator_94674.current_mRoutineName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_22, GALGAS_string ("execution should not reach the end of a \"noreturn\" routine") COMMA_SOURCE_FILE_AT_LINE (2731)) ;
    }
    enumerator_94674.gotoNextObject () ;
  }
  {
  routine_displayBlockList (ioArgument_ioListFileContents, outArgument_outGeneratedBlockList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2736)) ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@registerExpression analyzeRegisterExpression'      *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_registerExpression_analyzeRegisterExpression> gCategoryMethodTable_registerExpression_analyzeRegisterExpression ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeRegisterExpression (const PMSInt32 inClassIndex,
                                                    categoryMethodSignature_registerExpression_analyzeRegisterExpression inMethod) {
  gCategoryMethodTable_registerExpression_analyzeRegisterExpression.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeRegisterExpression (const cPtr_registerExpression * inObject,
                                                   const GALGAS_uint constin_inAccessBankSplitOffset,
                                                   const GALGAS_uint constin_inCurrentBank,
                                                   const GALGAS_registerTable constin_inRegisterTable,
                                                   GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression & out_outIPICregisterDescription,
                                                   GALGAS_bitSliceTable & out_outBitSliceTable,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  out_outIPICregisterDescription.drop () ;
  out_outBitSliceTable.drop () ;
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_registerExpression) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_registerExpression_analyzeRegisterExpression f = NULL ;
    if (classIndex < gCategoryMethodTable_registerExpression_analyzeRegisterExpression.count ()) {
      f = gCategoryMethodTable_registerExpression_analyzeRegisterExpression (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_registerExpression_analyzeRegisterExpression.count ()) {
           f = gCategoryMethodTable_registerExpression_analyzeRegisterExpression (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_registerExpression_analyzeRegisterExpression.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAccessBankSplitOffset, constin_inCurrentBank, constin_inRegisterTable, out_outIPICregisterDescription, out_outBitSliceTable, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*

static void categoryMethod_registerExpression_analyzeRegisterExpression (const cPtr_registerExpression * inObject,
                                                                         const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                         const GALGAS_uint constinArgument_inCurrentBank,
                                                                         const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                         GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression & outArgument_outIPICregisterDescription,
                                                                         GALGAS_bitSliceTable & outArgument_outBitSliceTable,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_registerExpression * object = inObject ;
  macroValidSharedObject (object, const cPtr_registerExpression) ;
  GALGAS_string var_assemblyString = object->mAttribute_mRegisterName.reader_string (SOURCE_FILE_AT_LINE (22)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (23)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_assemblyString.dotAssign_operation (GALGAS_string (" + ").operator_concat (object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (24)).reader_hexString (SOURCE_FILE_AT_LINE (24)) COMMA_SOURCE_FILE_AT_LINE (24)) COMMA_SOURCE_FILE_AT_LINE (24)) ;
  }
  GALGAS_uintlist var_registerAddressList ;
  GALGAS_uint var_size ;
  GALGAS_uint var_registerAddress = GALGAS_uint ((PMUInt32) 0U) ;
  GALGAS_string joker_1052_0 ; // Joker input parameter
  constinArgument_inRegisterTable.method_searchKey (object->mAttribute_mRegisterName, var_registerAddressList, var_size, outArgument_outBitSliceTable, joker_1052_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (30)) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (32)).objectCompare (var_size)).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_location location_2 (object->mAttribute_mOffset.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("this offset is too large: should be lower than ").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (33)) COMMA_SOURCE_FILE_AT_LINE (33)) COMMA_SOURCE_FILE_AT_LINE (33)) ;
  }
  GALGAS_bool var_found = GALGAS_bool (false) ;
  cEnumerator_uintlist enumerator_1256 (var_registerAddressList, kEnumeration_up) ;
  bool bool_3 = var_found.operator_not (SOURCE_FILE_AT_LINE (37)).isValidAndTrue () ;
  if (enumerator_1256.hasCurrentObject () && bool_3) {
    while (enumerator_1256.hasCurrentObject () && bool_3) {
      var_found = GALGAS_bool (kIsStrictInf, enumerator_1256.current_mValue (HERE).objectCompare (constinArgument_inAccessBankSplitOffset)).operator_or (GALGAS_bool (kIsSupOrEqual, enumerator_1256.current_mValue (HERE).objectCompare (GALGAS_uint ((PMUInt32) 3840U).add_operation (constinArgument_inAccessBankSplitOffset, inCompiler COMMA_SOURCE_FILE_AT_LINE (38)))) COMMA_SOURCE_FILE_AT_LINE (38)) ;
      var_registerAddress = enumerator_1256.current_mValue (HERE) ;
      enumerator_1256.gotoNextObject () ;
      if (enumerator_1256.hasCurrentObject ()) {
        bool_3 = var_found.operator_not (SOURCE_FILE_AT_LINE (37)).isValidAndTrue () ;
      }
    }
  }
  GALGAS_bool var_needsBSRaccess = GALGAS_bool (false) ;
  const enumGalgasBool test_4 = var_found.operator_not (SOURCE_FILE_AT_LINE (42)).boolEnum () ;
  if (kBoolTrue == test_4) {
    var_needsBSRaccess = GALGAS_bool (true) ;
    var_registerAddressList.method_first (var_registerAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (44)) ;
    GALGAS_uint var_neededBank = var_registerAddress.right_shift_operation (GALGAS_uint ((PMUInt32) 8U) COMMA_SOURCE_FILE_AT_LINE (45)) ;
    const enumGalgasBool test_5 = GALGAS_bool (kIsNotEqual, var_neededBank.objectCompare (constinArgument_inCurrentBank)).boolEnum () ;
    if (kBoolTrue == test_5) {
      GALGAS_string var_errorMessage = GALGAS_string ("Accessing the '").operator_concat (object->mAttribute_mRegisterName.reader_string (SOURCE_FILE_AT_LINE (47)) COMMA_SOURCE_FILE_AT_LINE (47)).operator_concat (GALGAS_string ("' needs the bank selection set to ") COMMA_SOURCE_FILE_AT_LINE (47)).operator_concat (var_neededBank.reader_string (SOURCE_FILE_AT_LINE (47)) COMMA_SOURCE_FILE_AT_LINE (47)) ;
      const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, constinArgument_inCurrentBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (48)))).boolEnum () ;
      if (kBoolTrue == test_6) {
        var_errorMessage.dotAssign_operation (GALGAS_string (", but current bank selection cannot be known") COMMA_SOURCE_FILE_AT_LINE (49)) ;
      }else if (kBoolFalse == test_6) {
        var_errorMessage.dotAssign_operation (GALGAS_string (", but current bank selection is set to ").operator_concat (constinArgument_inCurrentBank.reader_string (SOURCE_FILE_AT_LINE (51)) COMMA_SOURCE_FILE_AT_LINE (51)) COMMA_SOURCE_FILE_AT_LINE (51)) ;
      }
      GALGAS_location location_7 (object->mAttribute_mRegisterName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_7, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (53)) ;
    }
  }
  outArgument_outIPICregisterDescription = GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression::constructor_new (var_assemblyString, var_registerAddress.add_operation (object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (59)), inCompiler COMMA_SOURCE_FILE_AT_LINE (59)), var_needsBSRaccess COMMA_SOURCE_FILE_AT_LINE (57)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_registerExpression_analyzeRegisterExpression (void) {
  enterCategoryMethod_analyzeRegisterExpression (kTypeDescriptor_GALGAS_registerExpression.mSlotID,
                                                 categoryMethod_registerExpression_analyzeRegisterExpression) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_registerExpression_analyzeRegisterExpression (void) {
  gCategoryMethodTable_registerExpression_analyzeRegisterExpression.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_registerExpression_analyzeRegisterExpression (defineCategoryMethod_registerExpression_analyzeRegisterExpression,
                                                                         freeCategoryMethod_registerExpression_analyzeRegisterExpression) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@registerExpression analyzeRegisterExpressionWithoutCheckingBank'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_registerExpression_analyzeRegisterExpressionWithoutCheckingBank> gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeRegisterExpressionWithoutCheckingBank (const PMSInt32 inClassIndex,
                                                                       categoryMethodSignature_registerExpression_analyzeRegisterExpressionWithoutCheckingBank inMethod) {
  gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeRegisterExpressionWithoutCheckingBank (const cPtr_registerExpression * inObject,
                                                                      const GALGAS_registerTable constin_inRegisterTable,
                                                                      GALGAS_ipic_31__38__5F_intermediate_5F_registerExpressionWithoutBSRIndication & out_outIPICregisterDescription,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  out_outIPICregisterDescription.drop () ;
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_registerExpression) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_registerExpression_analyzeRegisterExpressionWithoutCheckingBank f = NULL ;
    if (classIndex < gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank.count ()) {
      f = gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank.count ()) {
           f = gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inRegisterTable, out_outIPICregisterDescription, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*

static void categoryMethod_registerExpression_analyzeRegisterExpressionWithoutCheckingBank (const cPtr_registerExpression * inObject,
                                                                                            const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                                            GALGAS_ipic_31__38__5F_intermediate_5F_registerExpressionWithoutBSRIndication & outArgument_outIPICregisterDescription,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_registerExpression * object = inObject ;
  macroValidSharedObject (object, const cPtr_registerExpression) ;
  GALGAS_string var_assemblyString = object->mAttribute_mRegisterName.reader_string (SOURCE_FILE_AT_LINE (71)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (72)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_assemblyString.dotAssign_operation (GALGAS_string (" + ").operator_concat (object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (73)).reader_hexString (SOURCE_FILE_AT_LINE (73)) COMMA_SOURCE_FILE_AT_LINE (73)) COMMA_SOURCE_FILE_AT_LINE (73)) ;
  }
  GALGAS_uintlist var_registerAddressList ;
  GALGAS_uint var_size ;
  GALGAS_bitSliceTable joker_2801_0 ; // Joker input parameter
  GALGAS_string joker_2804_0 ; // Joker input parameter
  constinArgument_inRegisterTable.method_searchKey (object->mAttribute_mRegisterName, var_registerAddressList, var_size, joker_2801_0, joker_2804_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (76)) ;
  GALGAS_uint var_registerAddress ;
  var_registerAddressList.method_first (var_registerAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (77)) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (79)).objectCompare (var_size)).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_location location_2 (object->mAttribute_mOffset.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("this offset is too large: should be lower than ").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (80)) COMMA_SOURCE_FILE_AT_LINE (80)) COMMA_SOURCE_FILE_AT_LINE (80)) ;
  }
  outArgument_outIPICregisterDescription = GALGAS_ipic_31__38__5F_intermediate_5F_registerExpressionWithoutBSRIndication::constructor_new (var_assemblyString, var_registerAddress.add_operation (object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (85)), inCompiler COMMA_SOURCE_FILE_AT_LINE (85)) COMMA_SOURCE_FILE_AT_LINE (83)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_registerExpression_analyzeRegisterExpressionWithoutCheckingBank (void) {
  enterCategoryMethod_analyzeRegisterExpressionWithoutCheckingBank (kTypeDescriptor_GALGAS_registerExpression.mSlotID,
                                                                    categoryMethod_registerExpression_analyzeRegisterExpressionWithoutCheckingBank) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_registerExpression_analyzeRegisterExpressionWithoutCheckingBank (void) {
  gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_registerExpression_analyzeRegisterExpressionWithoutCheckingBank (defineCategoryMethod_registerExpression_analyzeRegisterExpressionWithoutCheckingBank,
                                                                                            freeCategoryMethod_registerExpression_analyzeRegisterExpressionWithoutCheckingBank) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Category reader '@registerExpression getRegisterAddress'          *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_registerExpression_getRegisterAddress> gCategoryReaderTable_registerExpression_getRegisterAddress ;

//---------------------------------------------------------------------------*

void enterCategoryReader_getRegisterAddress (const PMSInt32 inClassIndex,
                                             categoryReaderSignature_registerExpression_getRegisterAddress inReader) {
  gCategoryReaderTable_registerExpression_getRegisterAddress.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_uint callCategoryReader_getRegisterAddress (const cPtr_registerExpression * inObject,
                                                   const GALGAS_registerTable & in_inRegisterTable,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  GALGAS_uint result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_registerExpression) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_registerExpression_getRegisterAddress f = NULL ;
    if (classIndex < gCategoryReaderTable_registerExpression_getRegisterAddress.count ()) {
      f = gCategoryReaderTable_registerExpression_getRegisterAddress (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_registerExpression_getRegisterAddress.count ()) {
           f = gCategoryReaderTable_registerExpression_getRegisterAddress (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_registerExpression_getRegisterAddress.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, in_inRegisterTable, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_uint categoryReader_registerExpression_getRegisterAddress (const cPtr_registerExpression * inObject,
                                                                         const GALGAS_registerTable & constinArgument_inRegisterTable,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_uint result_outRegisterAddress ; // Returned variable
  const cPtr_registerExpression * object = inObject ;
  macroValidSharedObject (object, const cPtr_registerExpression) ;
  GALGAS_uintlist var_registerAddressList ;
  GALGAS_uint var_size ;
  GALGAS_bitSliceTable joker_3460_0 ; // Joker input parameter
  GALGAS_string joker_3463_0 ; // Joker input parameter
  constinArgument_inRegisterTable.method_searchKey (object->mAttribute_mRegisterName, var_registerAddressList, var_size, joker_3460_0, joker_3463_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (95)) ;
  var_registerAddressList.method_first (result_outRegisterAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (96)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (98)).objectCompare (var_size)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mOffset.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("this offset is too large: should be lower than ").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (99)) COMMA_SOURCE_FILE_AT_LINE (99)) COMMA_SOURCE_FILE_AT_LINE (99)) ;
  }
//---
  return result_outRegisterAddress ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_registerExpression_getRegisterAddress (void) {
  enterCategoryReader_getRegisterAddress (kTypeDescriptor_GALGAS_registerExpression.mSlotID,
                                          categoryReader_registerExpression_getRegisterAddress) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_registerExpression_getRegisterAddress (void) {
  gCategoryReaderTable_registerExpression_getRegisterAddress.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_registerExpression_getRegisterAddress (defineCategoryReader_registerExpression_getRegisterAddress,
                                                                  freeCategoryReader_registerExpression_getRegisterAddress) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Abstract category method '@pic18PiccoloSimpleInstruction analyzeSimpleInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction> gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeSimpleInstruction (const PMSInt32 inClassIndex,
                                                   categoryMethodSignature_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction inMethod) {
  gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction (void) {
  gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction (NULL,
                                                                                         freeCategoryMethod_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                  const GALGAS_uint constin_inAccessBankSplitOffset,
                                                  const GALGAS_routineMap constin_inRoutineMap,
                                                  const GALGAS_registerTable constin_inRegisterTable,
                                                  const GALGAS_dataMap constin_inDataMap,
                                                  const GALGAS_constantMap constin_inConstantMap,
                                                  GALGAS_uint & io_ioCurrentBank,
                                                  const GALGAS_bool constin_inShouldPreserveBSR,
                                                  GALGAS_ipic_31__38_SequentialInstruction & out_outInstruction,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
//--- Drop output arguments
  out_outInstruction.drop () ;
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_pic_31__38_PiccoloSimpleInstruction) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction f = NULL ;
    if (classIndex < gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction.count ()) {
      f = gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction.count ()) {
           f = gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAccessBankSplitOffset, constin_inRoutineMap, constin_inRegisterTable, constin_inDataMap, constin_inConstantMap, io_ioCurrentBank, constin_inShouldPreserveBSR, out_outInstruction, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@instruction_withNoOperand analyzeSimpleInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_withNoOperand_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                                  const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                                  const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                                  const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                                                  const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                                  const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                                  GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                                                  const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                                  GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                                  C_Compiler * /* inCompiler */
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_withNoOperand * object = (const cPtr_instruction_5F_withNoOperand *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_withNoOperand) ;
  outArgument_outInstruction = GALGAS_ipic_31__38_InstructionWithNoOperand::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mKind COMMA_SOURCE_FILE_AT_LINE (132)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_withNoOperand_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_withNoOperand.mSlotID,
                                                categoryMethod_instruction_5F_withNoOperand_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_withNoOperand_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_withNoOperand_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@instruction_FDA analyzeSimpleInstruction'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_FDA_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                        const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                        const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                        const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                        const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                        const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                        GALGAS_uint & ioArgument_ioCurrentBank,
                                                                        const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                        GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_FDA * object = (const cPtr_instruction_5F_FDA *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_FDA) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_5420_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, joker_5420_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (150)) ;
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mInstruction_5F_FDA_5F_base_5F_code, var_IPICregisterDescription, object->mAttribute_m_5F_W_5F_isDestination COMMA_SOURCE_FILE_AT_LINE (157)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_FDA_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_FDA.mSlotID,
                                                categoryMethod_instruction_5F_FDA_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_FDA_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_FDA_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@instruction_FA analyzeSimpleInstruction'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_FA_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                       const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                       const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                       const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                       const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                       const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                       GALGAS_uint & ioArgument_ioCurrentBank,
                                                                       const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                       GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_FA * object = (const cPtr_instruction_5F_FA *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_FA) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_6232_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, joker_6232_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (177)) ;
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mFAinstruction, var_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (184)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_FA_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_FA.mSlotID,
                                                categoryMethod_instruction_5F_FA_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_FA_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_FA_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@instruction_MOVFF analyzeSimpleInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_MOVFF_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                          const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                          const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                          const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                          const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                          const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                          GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                                          const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                          GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_MOVFF * object = (const cPtr_instruction_5F_MOVFF *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_MOVFF) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpressionWithoutBSRIndication var_sourceIPICregisterDescription ;
  callCategoryMethod_analyzeRegisterExpressionWithoutCheckingBank ((const cPtr_registerExpression *) object->mAttribute_mSourceRegisterName.ptr (), constinArgument_inRegisterTable, var_sourceIPICregisterDescription, inCompiler COMMA_SOURCE_FILE_AT_LINE (203)) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpressionWithoutBSRIndication var_destinationIPICregisterDescription ;
  callCategoryMethod_analyzeRegisterExpressionWithoutCheckingBank ((const cPtr_registerExpression *) object->mAttribute_mDestinationRegisterName.ptr (), constinArgument_inRegisterTable, var_destinationIPICregisterDescription, inCompiler COMMA_SOURCE_FILE_AT_LINE (207)) ;
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF::constructor_new (object->mAttribute_mInstructionLocation, var_sourceIPICregisterDescription, var_destinationIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (211)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_MOVFF_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_MOVFF.mSlotID,
                                                categoryMethod_instruction_5F_MOVFF_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_MOVFF_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_MOVFF_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@instruction_FBA analyzeSimpleInstruction'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_FBA_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                        const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                        const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                        const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                        const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                        const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                        GALGAS_uint & ioArgument_ioCurrentBank,
                                                                        const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                        GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_FBA * object = (const cPtr_instruction_5F_FBA *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_FBA) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable var_bitSliceTable ;
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, var_bitSliceTable, inCompiler COMMA_SOURCE_FILE_AT_LINE (230)) ;
  GALGAS_uint var_bitNumber ;
  callCategoryMethod_getBitNumber ((const cPtr_bitNumberExpression *) object->mAttribute_mBitNumber.ptr (), var_bitSliceTable, var_bitNumber, inCompiler COMMA_SOURCE_FILE_AT_LINE (237)) ;
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FBA::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mBitOrientedOp, var_IPICregisterDescription, var_bitNumber COMMA_SOURCE_FILE_AT_LINE (241)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_FBA_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_FBA.mSlotID,
                                                categoryMethod_instruction_5F_FBA_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_FBA_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_FBA_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@instruction_literalOperation analyzeSimpleInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_literalOperation_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                                     const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                                     const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                                     const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                                     const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                                     const GALGAS_constantMap constinArgument_inConstantMap,
                                                                                     GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                                                     const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                                     GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_literalOperation * object = (const cPtr_instruction_5F_literalOperation *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_literalOperation) ;
  GALGAS_sint var_result ;
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mImmediatExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_result, inCompiler COMMA_SOURCE_FILE_AT_LINE (261)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, var_result.objectCompare (GALGAS_sint ((PMSInt32) 255L))).operator_or (GALGAS_bool (kIsStrictInf, var_result.objectCompare (GALGAS_sint ((PMSInt32) 128L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE_AT_LINE (263)))) COMMA_SOURCE_FILE_AT_LINE (263)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("immediate value is evaluated as ").operator_concat (var_result.reader_string (SOURCE_FILE_AT_LINE (264)) COMMA_SOURCE_FILE_AT_LINE (264)).operator_concat (GALGAS_string (" (should be betwween -128 and 255)") COMMA_SOURCE_FILE_AT_LINE (264)) COMMA_SOURCE_FILE_AT_LINE (264)) ;
  }
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mLiteralInstruction, var_result.operator_and (GALGAS_sint ((PMSInt32) 255L) COMMA_SOURCE_FILE_AT_LINE (270)).reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (270)) COMMA_SOURCE_FILE_AT_LINE (267)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_literalOperation_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_literalOperation.mSlotID,
                                                categoryMethod_instruction_5F_literalOperation_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_literalOperation_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_literalOperation_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@instruction_LFSR analyzeSimpleInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_LFSR_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                         const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                         const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                         const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                         const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                         const GALGAS_constantMap constinArgument_inConstantMap,
                                                                         GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                                         const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                         GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_LFSR * object = (const cPtr_instruction_5F_LFSR *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_LFSR) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, object->mAttribute_mFSRindex.reader_uint (SOURCE_FILE_AT_LINE (286)).objectCompare (GALGAS_uint ((PMUInt32) 2U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mFSRindex.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the LFSR register idx (").operator_concat (object->mAttribute_mFSRindex.reader_uint (SOURCE_FILE_AT_LINE (287)).reader_string (SOURCE_FILE_AT_LINE (287)) COMMA_SOURCE_FILE_AT_LINE (287)).operator_concat (GALGAS_string (") should be lower or equal to 2") COMMA_SOURCE_FILE_AT_LINE (287)) COMMA_SOURCE_FILE_AT_LINE (287)) ;
  }
  GALGAS_sint var_result ;
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mImmediatExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_result, inCompiler COMMA_SOURCE_FILE_AT_LINE (290)) ;
  const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_result.objectCompare (GALGAS_sint ((PMSInt32) 4095L))).operator_or (GALGAS_bool (kIsStrictInf, var_result.objectCompare (GALGAS_sint ((PMSInt32) 0L))) COMMA_SOURCE_FILE_AT_LINE (292)).boolEnum () ;
  if (kBoolTrue == test_2) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("immediate value is evaluated as ").operator_concat (var_result.reader_string (SOURCE_FILE_AT_LINE (293)) COMMA_SOURCE_FILE_AT_LINE (293)).operator_concat (GALGAS_string (" (should be between 0 and 4095)") COMMA_SOURCE_FILE_AT_LINE (293)) COMMA_SOURCE_FILE_AT_LINE (293)) ;
  }
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_LFSR::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mFSRindex, var_result.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (298)) COMMA_SOURCE_FILE_AT_LINE (295)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_LFSR_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_LFSR.mSlotID,
                                                categoryMethod_instruction_5F_LFSR_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_LFSR_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_LFSR_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@instruction_JSR analyzeSimpleInstruction'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_JSR_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                        const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                        const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                        const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                                        const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                        const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                        GALGAS_uint & ioArgument_ioCurrentBank,
                                                                        const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                        GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_JSR * object = (const cPtr_instruction_5F_JSR *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_JSR) ;
  GALGAS_bool var_isNoReturn ;
  GALGAS_uint var_requiredBank ;
  GALGAS_uint var_returnedBank ;
  GALGAS_bool var_preservesBank ;
  constinArgument_inRoutineMap.method_searchKey (object->mAttribute_mTargetLabel, var_isNoReturn, var_requiredBank, var_returnedBank, var_preservesBank, inCompiler COMMA_SOURCE_FILE_AT_LINE (315)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (316)))).operator_and (GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (ioArgument_ioCurrentBank)) COMMA_SOURCE_FILE_AT_LINE (316)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_string var_errorMessage = GALGAS_string ("the routine '").operator_concat (object->mAttribute_mTargetLabel.reader_string (SOURCE_FILE_AT_LINE (317)) COMMA_SOURCE_FILE_AT_LINE (317)).operator_concat (GALGAS_string ("' requires BSR to be set to ") COMMA_SOURCE_FILE_AT_LINE (317)).operator_concat (var_requiredBank.reader_string (SOURCE_FILE_AT_LINE (317)) COMMA_SOURCE_FILE_AT_LINE (317)) ;
    var_errorMessage.dotAssign_operation (GALGAS_string (", but BSR ") COMMA_SOURCE_FILE_AT_LINE (318)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, ioArgument_ioCurrentBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (319)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_errorMessage.dotAssign_operation (GALGAS_string ("does contain any reliable value") COMMA_SOURCE_FILE_AT_LINE (320)) ;
    }else if (kBoolFalse == test_1) {
      var_errorMessage.dotAssign_operation (GALGAS_string ("is set to ").operator_concat (ioArgument_ioCurrentBank.reader_string (SOURCE_FILE_AT_LINE (322)) COMMA_SOURCE_FILE_AT_LINE (322)) COMMA_SOURCE_FILE_AT_LINE (322)) ;
    }
    GALGAS_location location_2 (object->mAttribute_mTargetLabel.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (324)) ;
  }
  const enumGalgasBool test_3 = var_isNoReturn.boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_location location_4 (object->mAttribute_mTargetLabel.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_4, GALGAS_string ("a \"noreturn\" routine should be called with a BRA, GOTO, Bcc or JUMP instruction") COMMA_SOURCE_FILE_AT_LINE (327)) ;
  }
  const enumGalgasBool test_5 = var_preservesBank.operator_not (SOURCE_FILE_AT_LINE (329)).boolEnum () ;
  if (kBoolTrue == test_5) {
    ioArgument_ioCurrentBank = var_returnedBank ;
    const enumGalgasBool test_6 = constinArgument_inShouldPreserveBSR.boolEnum () ;
    if (kBoolTrue == test_6) {
      GALGAS_location location_7 (object->mAttribute_mTargetLabel.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_7, GALGAS_string ("the routine call should preserve bank selection") COMMA_SOURCE_FILE_AT_LINE (332)) ;
    }
  }
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_JSR::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mTargetLabel, object->mAttribute_mKind COMMA_SOURCE_FILE_AT_LINE (336)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_JSR_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_JSR.mSlotID,
                                                categoryMethod_instruction_5F_JSR_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_JSR_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_JSR_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Abstract category method '@pic18PiccoloInstruction analyze'        *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_pic_31__38_PiccoloInstruction_analyze> gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyze (const PMSInt32 inClassIndex,
                                  categoryMethodSignature_pic_31__38_PiccoloInstruction_analyze inMethod) {
  gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_pic_31__38_PiccoloInstruction_analyze (void) {
  gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_pic_31__38_PiccoloInstruction_analyze (NULL,
                                                                  freeCategoryMethod_pic_31__38_PiccoloInstruction_analyze) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                 const GALGAS_uint constin_inAccessBankSplitOffset,
                                 GALGAS_ipic_31__38_BlockList & io_ioGeneratedBlockList,
                                 const GALGAS_routineMap constin_inRoutineMap,
                                 const GALGAS_registerTable constin_inRegisterTable,
                                 const GALGAS_dataMap constin_inDataMap,
                                 const GALGAS_constantMap constin_inConstantMap,
                                 GALGAS_uint & io_ioLocalLabelIndex,
                                 GALGAS_ipic_31__38_Block & io_ioCurrentBlock,
                                 GALGAS_string & io_ioListFileContents,
                                 GALGAS_uint & io_ioCurrentBank,
                                 const GALGAS_bool constin_inShouldPreserveBSR,
                                 GALGAS_bool & io_ioContinuesInSequence,
                                 const GALGAS_routineKind constin_inRoutineKind,
                                 C_Compiler * inCompiler
                                 COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_pic_31__38_PiccoloInstruction) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_pic_31__38_PiccoloInstruction_analyze f = NULL ;
    if (classIndex < gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze.count ()) {
      f = gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze.count ()) {
           f = gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAccessBankSplitOffset, io_ioGeneratedBlockList, constin_inRoutineMap, constin_inRegisterTable, constin_inDataMap, constin_inConstantMap, io_ioLocalLabelIndex, io_ioCurrentBlock, io_ioListFileContents, io_ioCurrentBank, constin_inShouldPreserveBSR, io_ioContinuesInSequence, constin_inRoutineKind, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category method '@pic18PiccoloSimpleInstruction analyze'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_pic_31__38_PiccoloSimpleInstruction_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                        const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                        GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                        const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                        const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                        const GALGAS_dataMap constinArgument_inDataMap,
                                                                        const GALGAS_constantMap constinArgument_inConstantMap,
                                                                        GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                        GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                        GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                        GALGAS_uint & ioArgument_ioCurrentBank,
                                                                        const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                        GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                                        const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_pic_31__38_PiccoloSimpleInstruction * object = (const cPtr_pic_31__38_PiccoloSimpleInstruction *) inObject ;
  macroValidSharedObject (object, const cPtr_pic_31__38_PiccoloSimpleInstruction) ;
  GALGAS_ipic_31__38_SequentialInstruction var_instruction ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_pic_31__38_PiccoloSimpleInstruction temp_0 = object ;
  callCategoryMethod_analyzeSimpleInstruction ((const cPtr_pic_31__38_PiccoloSimpleInstruction *) temp_0.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioCurrentBank, constinArgument_inShouldPreserveBSR, var_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (382)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (var_instruction COMMA_SOURCE_FILE_AT_LINE (392)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_pic_31__38_PiccoloSimpleInstruction_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_pic_31__38_PiccoloSimpleInstruction.mSlotID,
                               categoryMethod_pic_31__38_PiccoloSimpleInstruction_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_pic_31__38_PiccoloSimpleInstruction_analyze (defineCategoryMethod_pic_31__38_PiccoloSimpleInstruction_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category method '@instruction_FOREVER analyze'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_FOREVER_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                           const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                           GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                                           const GALGAS_routineMap constinArgument_inRoutineMap,
                                                           const GALGAS_registerTable constinArgument_inRegisterTable,
                                                           const GALGAS_dataMap constinArgument_inDataMap,
                                                           const GALGAS_constantMap constinArgument_inConstantMap,
                                                           GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                           GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                           GALGAS_string & ioArgument_ioListFileContents,
                                                           GALGAS_uint & ioArgument_ioCurrentBank,
                                                           const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                           GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                           const GALGAS_routineKind constinArgument_inRoutineKind,
                                                           C_Compiler * inCompiler
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_FOREVER * object = (const cPtr_instruction_5F_FOREVER *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_FOREVER) ;
  if (constinArgument_inRoutineKind.isValid ()) {
    switch (constinArgument_inRoutineKind.enumValue ()) {
    case GALGAS_routineKind::kNotBuilt:
      break ;
    case GALGAS_routineKind::kEnum_regularRoutine: {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("a regular routine does not accept the \"forever\" instruction") COMMA_SOURCE_FILE_AT_LINE (414)) ;
      } break ;
    case GALGAS_routineKind::kEnum_noReturnRoutine: {
      } break ;
    case GALGAS_routineKind::kEnum_interruptRoutine: {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("an interrupt routine does not accept the \"forever\" instruction") COMMA_SOURCE_FILE_AT_LINE (417)) ;
      } break ;
    }
  }
  GALGAS_uint var_finalBank = ioArgument_ioCurrentBank ;
  GALGAS_lstring var_label_30_ = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (421)) COMMA_SOURCE_FILE_AT_LINE (421)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (421)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (422)) ;
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = GALGAS_ipic_31__38_JumpTerminator::constructor_new (var_label_30_ COMMA_SOURCE_FILE_AT_LINE (424)) ;
  ioArgument_ioGeneratedBlockList.addAssign_operation (ioArgument_ioCurrentBlock COMMA_SOURCE_FILE_AT_LINE (426)) ;
  ioArgument_ioCurrentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (429)), var_label_30_, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (431)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (var_label_30_ COMMA_SOURCE_FILE_AT_LINE (432)) COMMA_SOURCE_FILE_AT_LINE (428)) ;
  {
  routine_analyzeInstructionList (object->mAttribute_mInstructionList, ioArgument_ioGeneratedBlockList, constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioLocalLabelIndex, ioArgument_ioCurrentBlock, ioArgument_ioListFileContents, ioArgument_ioCurrentBank, constinArgument_inShouldPreserveBSR, ioArgument_ioContinuesInSequence, constinArgument_inRoutineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (434)) ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, ioArgument_ioCurrentBank.objectCompare (var_finalBank)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mEndOfInstructionList, GALGAS_string ("instruction list does not leave BSR value unchanged") COMMA_SOURCE_FILE_AT_LINE (452)) ;
  }
  ioArgument_ioContinuesInSequence = GALGAS_bool (false) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_FOREVER_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_FOREVER.mSlotID,
                               categoryMethod_instruction_5F_FOREVER_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_FOREVER_analyze (defineCategoryMethod_instruction_5F_FOREVER_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category method '@instruction_nobanksel analyze'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_nobanksel_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                             const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                             GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                             const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                             const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                             const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                             const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                             GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                             GALGAS_ipic_31__38_Block & /* ioArgument_ioCurrentBlock */,
                                                             GALGAS_string & /* ioArgument_ioListFileContents */,
                                                             GALGAS_uint & ioArgument_ioCurrentBank,
                                                             const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                             GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                             const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                             C_Compiler * inCompiler
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_nobanksel * object = (const cPtr_instruction_5F_nobanksel *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_nobanksel) ;
  const enumGalgasBool test_0 = constinArgument_inShouldPreserveBSR.boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("cannot use \"nobank\" here: BSR should be preserved (use it in a \"banksave\" construct)") COMMA_SOURCE_FILE_AT_LINE (475)) ;
  }
  ioArgument_ioCurrentBank = GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (477)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_nobanksel_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_nobanksel.mSlotID,
                               categoryMethod_instruction_5F_nobanksel_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_nobanksel_analyze (defineCategoryMethod_instruction_5F_nobanksel_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category method '@instruction_savebank analyze'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_savebank_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                            const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                            GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                                            const GALGAS_routineMap constinArgument_inRoutineMap,
                                                            const GALGAS_registerTable constinArgument_inRegisterTable,
                                                            const GALGAS_dataMap constinArgument_inDataMap,
                                                            const GALGAS_constantMap constinArgument_inConstantMap,
                                                            GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                            GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                            GALGAS_string & ioArgument_ioListFileContents,
                                                            GALGAS_uint & ioArgument_ioCurrentBank,
                                                            const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                            GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                            const GALGAS_routineKind constinArgument_inRoutineKind,
                                                            C_Compiler * inCompiler
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_savebank * object = (const cPtr_instruction_5F_savebank *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_savebank) ;
  GALGAS_registerExpression var_BSRregister = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("BSR"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (499)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (499)) COMMA_SOURCE_FILE_AT_LINE (499)) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpressionWithoutBSRIndication var_BSR_5F_IPICregisterDescription ;
  callCategoryMethod_analyzeRegisterExpressionWithoutCheckingBank ((const cPtr_registerExpression *) var_BSRregister.ptr (), constinArgument_inRegisterTable, var_BSR_5F_IPICregisterDescription, inCompiler COMMA_SOURCE_FILE_AT_LINE (500)) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpressionWithoutBSRIndication var_save_5F_IPICregisterDescription ;
  callCategoryMethod_analyzeRegisterExpressionWithoutCheckingBank ((const cPtr_registerExpression *) object->mAttribute_mRegister.ptr (), constinArgument_inRegisterTable, var_save_5F_IPICregisterDescription, inCompiler COMMA_SOURCE_FILE_AT_LINE (505)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF::constructor_new (object->mAttribute_mInstructionLocation, var_BSR_5F_IPICregisterDescription, var_save_5F_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (510)) COMMA_SOURCE_FILE_AT_LINE (510)) ;
  GALGAS_uint var_finalBank = ioArgument_ioCurrentBank ;
  {
  routine_analyzeInstructionList (object->mAttribute_mInstructionList, ioArgument_ioGeneratedBlockList, constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioLocalLabelIndex, ioArgument_ioCurrentBlock, ioArgument_ioListFileContents, var_finalBank, GALGAS_bool (false), ioArgument_ioContinuesInSequence, constinArgument_inRoutineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (517)) ;
  }
  const enumGalgasBool test_0 = ioArgument_ioContinuesInSequence.operator_not (SOURCE_FILE_AT_LINE (533)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mEndOfSaveBankInstruction, GALGAS_string ("useless saving: execution does reach the end of \"savebank\" instruction list") COMMA_SOURCE_FILE_AT_LINE (534)) ;
  }
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF::constructor_new (object->mAttribute_mInstructionLocation, var_save_5F_IPICregisterDescription, var_BSR_5F_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (537)) COMMA_SOURCE_FILE_AT_LINE (537)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_savebank_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_savebank.mSlotID,
                               categoryMethod_instruction_5F_savebank_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_savebank_analyze (defineCategoryMethod_instruction_5F_savebank_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category method '@instruction_banksel analyze'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_banksel_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                           const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                           GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                           const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                           const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                           const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                           const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                           GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                           GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                           GALGAS_string & /* ioArgument_ioListFileContents */,
                                                           GALGAS_uint & ioArgument_ioCurrentBank,
                                                           const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                           GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                           const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                           C_Compiler * inCompiler
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_banksel * object = (const cPtr_instruction_5F_banksel *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_banksel) ;
  const enumGalgasBool test_0 = constinArgument_inShouldPreserveBSR.boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("cannot use \"banksel\" here: bank selection should be preserved (use \"banksave\" instruction)") COMMA_SOURCE_FILE_AT_LINE (562)) ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, object->mAttribute_mBankIndex.reader_uint (SOURCE_FILE_AT_LINE (564)).objectCompare (GALGAS_uint ((PMUInt32) 15U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_location location_2 (object->mAttribute_mBankIndex.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("selected bank idx should be lower or equal to 15") COMMA_SOURCE_FILE_AT_LINE (565)) ;
    ioArgument_ioCurrentBank = GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (566)) ;
  }else if (kBoolFalse == test_1) {
    const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, object->mAttribute_mBankIndex.reader_uint (SOURCE_FILE_AT_LINE (567)).objectCompare (ioArgument_ioCurrentBank)).boolEnum () ;
    if (kBoolTrue == test_3) {
      ioArgument_ioCurrentBank = object->mAttribute_mBankIndex.reader_uint (SOURCE_FILE_AT_LINE (568)) ;
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mBankIndex COMMA_SOURCE_FILE_AT_LINE (569)) COMMA_SOURCE_FILE_AT_LINE (569)) ;
    }else if (kBoolFalse == test_3) {
      const enumGalgasBool test_4 = object->mAttribute_mWarningOnUselessBanksel.boolEnum () ;
      if (kBoolTrue == test_4) {
        GALGAS_location location_5 (object->mAttribute_mBankIndex.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticWarning (location_5, GALGAS_string ("useless instruction: the bank ").operator_concat (ioArgument_ioCurrentBank.reader_string (SOURCE_FILE_AT_LINE (571)) COMMA_SOURCE_FILE_AT_LINE (571)).operator_concat (GALGAS_string (" is already selected") COMMA_SOURCE_FILE_AT_LINE (571)) COMMA_SOURCE_FILE_AT_LINE (571)) ;
      }
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_banksel_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_banksel.mSlotID,
                               categoryMethod_instruction_5F_banksel_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_banksel_analyze (defineCategoryMethod_instruction_5F_banksel_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category method '@instruction_banksel_register analyze'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_banksel_5F_register_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                       const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                       GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                       const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                       const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                       const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                       const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                       GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                       GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                       GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                       GALGAS_uint & ioArgument_ioCurrentBank,
                                                                       const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                       GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                                       const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_banksel_5F_register * object = (const cPtr_instruction_5F_banksel_5F_register *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_banksel_5F_register) ;
  const enumGalgasBool test_0 = constinArgument_inShouldPreserveBSR.boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("cannot use \"banksel\" here: bank selection should be preserved (use \"banksave\" instruction)") COMMA_SOURCE_FILE_AT_LINE (593)) ;
  }
  GALGAS_uint var_registerAddress = callCategoryReader_getRegisterAddress ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inRegisterTable, inCompiler COMMA_SOURCE_FILE_AT_LINE (595)) ;
  GALGAS_uint var_newBank = var_registerAddress.right_shift_operation (GALGAS_uint ((PMUInt32) 8U) COMMA_SOURCE_FILE_AT_LINE (596)) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, ioArgument_ioCurrentBank.objectCompare (var_newBank)).boolEnum () ;
  if (kBoolTrue == test_1) {
    ioArgument_ioCurrentBank = var_newBank ;
    ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_luint::constructor_new (var_newBank, object->mAttribute_mRegisterExpression.reader_mRegisterName (SOURCE_FILE_AT_LINE (601)).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (601)) COMMA_SOURCE_FILE_AT_LINE (599)) COMMA_SOURCE_FILE_AT_LINE (599)) ;
  }else if (kBoolFalse == test_1) {
    const enumGalgasBool test_2 = object->mAttribute_mWarningOnUselessBanksel.boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mRegisterExpression.reader_mRegisterName (SOURCE_FILE_AT_LINE (604)).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticWarning (location_3, GALGAS_string ("useless instruction: the bank ").operator_concat (var_newBank.reader_string (SOURCE_FILE_AT_LINE (604)) COMMA_SOURCE_FILE_AT_LINE (604)).operator_concat (GALGAS_string (" is already selected") COMMA_SOURCE_FILE_AT_LINE (604)) COMMA_SOURCE_FILE_AT_LINE (604)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_banksel_5F_register_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_banksel_5F_register.mSlotID,
                               categoryMethod_instruction_5F_banksel_5F_register_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_banksel_5F_register_analyze (defineCategoryMethod_instruction_5F_banksel_5F_register_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@instruction_TBLRD analyzeSimpleInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_TBLRD_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                          const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                          const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                          const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                                          const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                          const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                          GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                                          const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                          GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                          C_Compiler * /* inCompiler */
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_TBLRD * object = (const cPtr_instruction_5F_TBLRD *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_TBLRD) ;
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLRD::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mOption COMMA_SOURCE_FILE_AT_LINE (620)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_TBLRD_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_TBLRD.mSlotID,
                                                categoryMethod_instruction_5F_TBLRD_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_TBLRD_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_TBLRD_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@instruction_TBLWT analyzeSimpleInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_TBLWT_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                          const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                          const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                          const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                                          const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                          const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                          GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                                          const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                          GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                          C_Compiler * /* inCompiler */
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_TBLWT * object = (const cPtr_instruction_5F_TBLWT *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_TBLWT) ;
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLWT::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mOption COMMA_SOURCE_FILE_AT_LINE (638)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_TBLWT_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_TBLWT.mSlotID,
                                                categoryMethod_instruction_5F_TBLWT_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_TBLWT_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_TBLWT_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category method '@instruction_MNOP analyze'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_MNOP_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                        const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                        GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                        const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                        const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                        const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                        const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                        GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                        GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                        GALGAS_string & /* ioArgument_ioListFileContents */,
                                                        GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                        const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                        GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                        const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                        C_Compiler * inCompiler
                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_MNOP * object = (const cPtr_instruction_5F_MNOP *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_MNOP) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mOccurrenceFactor.reader_uint (SOURCE_FILE_AT_LINE (662)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mOccurrenceFactor.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticWarning (location_1, GALGAS_string ("occurrence argument is zero: no generated code") COMMA_SOURCE_FILE_AT_LINE (663)) ;
  }
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MNOP::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mOccurrenceFactor COMMA_SOURCE_FILE_AT_LINE (666)) COMMA_SOURCE_FILE_AT_LINE (666)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_MNOP_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_MNOP.mSlotID,
                               categoryMethod_instruction_5F_MNOP_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_MNOP_analyze (defineCategoryMethod_instruction_5F_MNOP_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category method '@instruction_LTBLPTR analyze'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_LTBLPTR_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                           const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                           GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                           const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                           const GALGAS_registerTable constinArgument_inRegisterTable,
                                                           const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                           const GALGAS_constantMap constinArgument_inConstantMap,
                                                           GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                           GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                           GALGAS_string & /* ioArgument_ioListFileContents */,
                                                           GALGAS_uint & ioArgument_ioCurrentBank,
                                                           const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                           GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                           const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                           C_Compiler * inCompiler
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_LTBLPTR * object = (const cPtr_instruction_5F_LTBLPTR *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_LTBLPTR) ;
  GALGAS_sint var_result ;
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mImmediatExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_result, inCompiler COMMA_SOURCE_FILE_AT_LINE (689)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, var_result.objectCompare (GALGAS_sint ((PMSInt32) 16777215L))).operator_or (GALGAS_bool (kIsStrictInf, var_result.objectCompare (GALGAS_sint ((PMSInt32) 0L))) COMMA_SOURCE_FILE_AT_LINE (691)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("immediate value is evaluated as ").operator_concat (var_result.reader_string (SOURCE_FILE_AT_LINE (692)) COMMA_SOURCE_FILE_AT_LINE (692)).operator_concat (GALGAS_string (" (should be between 0 and 0xFF_FFFF)") COMMA_SOURCE_FILE_AT_LINE (692)) COMMA_SOURCE_FILE_AT_LINE (692)) ;
  }
  GALGAS_uint var_address = var_result.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (694)) ;
  GALGAS_registerExpression var_TBLPTRU = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("TBLPTRU"), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (696)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (696)) COMMA_SOURCE_FILE_AT_LINE (696)) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_outIPICregisterDescription ;
  GALGAS_bitSliceTable joker_23897_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) var_TBLPTRU.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_outIPICregisterDescription, joker_23897_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (697)) ;
  GALGAS_uint var_upper = var_address.right_shift_operation (GALGAS_uint ((PMUInt32) 16U) COMMA_SOURCE_FILE_AT_LINE (704)) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_upper.objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_CLRF (SOURCE_FILE_AT_LINE (708)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (706)) COMMA_SOURCE_FILE_AT_LINE (706)) ;
  }else if (kBoolFalse == test_1) {
    const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_upper.objectCompare (GALGAS_uint ((PMUInt32) 255U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_SETF (SOURCE_FILE_AT_LINE (714)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (712)) COMMA_SOURCE_FILE_AT_LINE (712)) ;
    }else if (kBoolFalse == test_2) {
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_literal_5F_instruction_5F_opcode::constructor_MOVLW (SOURCE_FILE_AT_LINE (720)), var_upper COMMA_SOURCE_FILE_AT_LINE (718)) COMMA_SOURCE_FILE_AT_LINE (718)) ;
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE_AT_LINE (725)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (723)) COMMA_SOURCE_FILE_AT_LINE (723)) ;
    }
  }
  GALGAS_registerExpression var_TBLPTRH = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("TBLPTRH"), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (730)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (730)) COMMA_SOURCE_FILE_AT_LINE (730)) ;
  GALGAS_bitSliceTable joker_25071_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) var_TBLPTRH.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_outIPICregisterDescription, joker_25071_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (731)) ;
  GALGAS_uint var_high = var_address.right_shift_operation (GALGAS_uint ((PMUInt32) 8U) COMMA_SOURCE_FILE_AT_LINE (738)).operator_and (GALGAS_uint ((PMUInt32) 255U) COMMA_SOURCE_FILE_AT_LINE (738)) ;
  const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, var_high.objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_3) {
    ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_CLRF (SOURCE_FILE_AT_LINE (742)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (740)) COMMA_SOURCE_FILE_AT_LINE (740)) ;
  }else if (kBoolFalse == test_3) {
    const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, var_high.objectCompare (GALGAS_uint ((PMUInt32) 255U))).boolEnum () ;
    if (kBoolTrue == test_4) {
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_SETF (SOURCE_FILE_AT_LINE (748)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (746)) COMMA_SOURCE_FILE_AT_LINE (746)) ;
    }else if (kBoolFalse == test_4) {
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_literal_5F_instruction_5F_opcode::constructor_MOVLW (SOURCE_FILE_AT_LINE (754)), var_high COMMA_SOURCE_FILE_AT_LINE (752)) COMMA_SOURCE_FILE_AT_LINE (752)) ;
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE_AT_LINE (759)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (757)) COMMA_SOURCE_FILE_AT_LINE (757)) ;
    }
  }
  GALGAS_registerExpression var_TBLPTRL = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("TBLPTRL"), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (764)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (764)) COMMA_SOURCE_FILE_AT_LINE (764)) ;
  GALGAS_bitSliceTable joker_26248_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) var_TBLPTRL.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_outIPICregisterDescription, joker_26248_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (765)) ;
  GALGAS_uint var_low = var_address.operator_and (GALGAS_uint ((PMUInt32) 255U) COMMA_SOURCE_FILE_AT_LINE (772)) ;
  const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, var_low.objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_5) {
    ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_CLRF (SOURCE_FILE_AT_LINE (776)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (774)) COMMA_SOURCE_FILE_AT_LINE (774)) ;
  }else if (kBoolFalse == test_5) {
    const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, var_low.objectCompare (GALGAS_uint ((PMUInt32) 255U))).boolEnum () ;
    if (kBoolTrue == test_6) {
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_SETF (SOURCE_FILE_AT_LINE (782)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (780)) COMMA_SOURCE_FILE_AT_LINE (780)) ;
    }else if (kBoolFalse == test_6) {
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_literal_5F_instruction_5F_opcode::constructor_MOVLW (SOURCE_FILE_AT_LINE (788)), var_low COMMA_SOURCE_FILE_AT_LINE (786)) COMMA_SOURCE_FILE_AT_LINE (786)) ;
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE_AT_LINE (793)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (791)) COMMA_SOURCE_FILE_AT_LINE (791)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_LTBLPTR_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_LTBLPTR.mSlotID,
                               categoryMethod_instruction_5F_LTBLPTR_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_LTBLPTR_analyze (defineCategoryMethod_instruction_5F_LTBLPTR_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category method '@instruction_LDATAPTR analyze'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_LDATAPTR_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                            const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                            GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                            const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                            const GALGAS_registerTable constinArgument_inRegisterTable,
                                                            const GALGAS_dataMap constinArgument_inDataMap,
                                                            const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                            GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                            GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                            GALGAS_string & /* ioArgument_ioListFileContents */,
                                                            GALGAS_uint & ioArgument_ioCurrentBank,
                                                            const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                            GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                            const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                            C_Compiler * inCompiler
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_LDATAPTR * object = (const cPtr_instruction_5F_LDATAPTR *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_LDATAPTR) ;
  GALGAS_uint var_dataSize ;
  constinArgument_inDataMap.method_searchKey (object->mAttribute_mDataName, var_dataSize, inCompiler COMMA_SOURCE_FILE_AT_LINE (816)) ;
  GALGAS_lstring var_labelName = GALGAS_lstring::constructor_new (GALGAS_string ("_data_").operator_concat (object->mAttribute_mDataName.reader_string (SOURCE_FILE_AT_LINE (817)) COMMA_SOURCE_FILE_AT_LINE (817)), object->mAttribute_mDataName.mAttribute_location COMMA_SOURCE_FILE_AT_LINE (817)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsSupOrEqual, object->mAttribute_mDataIndex.reader_uint (SOURCE_FILE_AT_LINE (819)).objectCompare (var_dataSize)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mDataIndex.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("index should be < ").operator_concat (var_dataSize.reader_string (SOURCE_FILE_AT_LINE (820)) COMMA_SOURCE_FILE_AT_LINE (820)) COMMA_SOURCE_FILE_AT_LINE (820)) ;
  }
  GALGAS_registerExpression var_TBLPTRU = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("TBLPTRU"), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (823)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (823)) COMMA_SOURCE_FILE_AT_LINE (823)) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_outIPICregisterDescription ;
  GALGAS_bitSliceTable joker_28287_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) var_TBLPTRU.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_outIPICregisterDescription, joker_28287_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (824)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W::constructor_new (object->mAttribute_mInstructionLocation, var_labelName, object->mAttribute_mDataIndex.reader_uint (SOURCE_FILE_AT_LINE (834)).multiply_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (834)), GALGAS_uint ((PMUInt32) 16U) COMMA_SOURCE_FILE_AT_LINE (831)) COMMA_SOURCE_FILE_AT_LINE (831)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE_AT_LINE (839)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (837)) COMMA_SOURCE_FILE_AT_LINE (837)) ;
  GALGAS_registerExpression var_TBLPTRH = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("TBLPTRH"), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (843)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (843)) COMMA_SOURCE_FILE_AT_LINE (843)) ;
  GALGAS_bitSliceTable joker_28929_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) var_TBLPTRH.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_outIPICregisterDescription, joker_28929_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (844)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W::constructor_new (object->mAttribute_mInstructionLocation, var_labelName, object->mAttribute_mDataIndex.reader_uint (SOURCE_FILE_AT_LINE (854)).multiply_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (854)), GALGAS_uint ((PMUInt32) 8U) COMMA_SOURCE_FILE_AT_LINE (851)) COMMA_SOURCE_FILE_AT_LINE (851)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE_AT_LINE (859)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (857)) COMMA_SOURCE_FILE_AT_LINE (857)) ;
  GALGAS_registerExpression var_TBLPTRL = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("TBLPTRL"), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (863)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (863)) COMMA_SOURCE_FILE_AT_LINE (863)) ;
  GALGAS_bitSliceTable joker_29569_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) var_TBLPTRL.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_outIPICregisterDescription, joker_29569_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (864)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W::constructor_new (object->mAttribute_mInstructionLocation, var_labelName, object->mAttribute_mDataIndex.reader_uint (SOURCE_FILE_AT_LINE (874)).multiply_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (874)), GALGAS_uint ((PMUInt32) 0U) COMMA_SOURCE_FILE_AT_LINE (871)) COMMA_SOURCE_FILE_AT_LINE (871)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE_AT_LINE (879)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (877)) COMMA_SOURCE_FILE_AT_LINE (877)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_LDATAPTR_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_LDATAPTR.mSlotID,
                               categoryMethod_instruction_5F_LDATAPTR_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_LDATAPTR_analyze (defineCategoryMethod_instruction_5F_LDATAPTR_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category method '@instruction_JUMP analyze'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_JUMP_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                        const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                        GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                        const GALGAS_routineMap constinArgument_inRoutineMap,
                                                        const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                        const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                        const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                        GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                        GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                        GALGAS_string & /* ioArgument_ioListFileContents */,
                                                        GALGAS_uint & ioArgument_ioCurrentBank,
                                                        const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                        GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                        const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                        C_Compiler * inCompiler
                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_JUMP * object = (const cPtr_instruction_5F_JUMP *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_JUMP) ;
  GALGAS_bool var_isNoReturn ;
  GALGAS_uint var_requiredBank ;
  GALGAS_uint joker_30603_0 ; // Joker input parameter
  GALGAS_bool joker_30606_0 ; // Joker input parameter
  constinArgument_inRoutineMap.method_searchKey (object->mAttribute_mTargetLabel, var_isNoReturn, var_requiredBank, joker_30603_0, joker_30606_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (902)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (903)))).operator_and (GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (ioArgument_ioCurrentBank)) COMMA_SOURCE_FILE_AT_LINE (903)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_string var_errorMessage = GALGAS_string ("the routine '").operator_concat (object->mAttribute_mTargetLabel.reader_string (SOURCE_FILE_AT_LINE (904)) COMMA_SOURCE_FILE_AT_LINE (904)).operator_concat (GALGAS_string ("' requires BSR to be set to ") COMMA_SOURCE_FILE_AT_LINE (904)).operator_concat (var_requiredBank.reader_string (SOURCE_FILE_AT_LINE (904)) COMMA_SOURCE_FILE_AT_LINE (904)) ;
    var_errorMessage.dotAssign_operation (GALGAS_string (", but BSR ") COMMA_SOURCE_FILE_AT_LINE (905)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, ioArgument_ioCurrentBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (906)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_errorMessage.dotAssign_operation (GALGAS_string ("does contain any reliable value") COMMA_SOURCE_FILE_AT_LINE (907)) ;
    }else if (kBoolFalse == test_1) {
      var_errorMessage.dotAssign_operation (GALGAS_string ("is set to ").operator_concat (ioArgument_ioCurrentBank.reader_string (SOURCE_FILE_AT_LINE (909)) COMMA_SOURCE_FILE_AT_LINE (909)) COMMA_SOURCE_FILE_AT_LINE (909)) ;
    }
    GALGAS_location location_2 (object->mAttribute_mTargetLabel.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (911)) ;
  }
  const enumGalgasBool test_3 = var_isNoReturn.operator_not (SOURCE_FILE_AT_LINE (913)).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_location location_4 (object->mAttribute_mTargetLabel.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_4, GALGAS_string ("a regular routine should be called with a RCALL, CALL or JSR instruction") COMMA_SOURCE_FILE_AT_LINE (914)) ;
  }
  ioArgument_ioContinuesInSequence = GALGAS_bool (false) ;
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = GALGAS_ipic_31__38_JumpTerminator::constructor_new (object->mAttribute_mTargetLabel COMMA_SOURCE_FILE_AT_LINE (918)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_JUMP_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_JUMP.mSlotID,
                               categoryMethod_instruction_5F_JUMP_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_JUMP_analyze (defineCategoryMethod_instruction_5F_JUMP_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@instruction_computed_rcall analyze'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_computed_5F_rcall_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                     const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                     GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                     const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                     const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                     const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                     const GALGAS_constantMap constinArgument_inConstantMap,
                                                                     GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                                     GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                     GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                     GALGAS_uint & ioArgument_ioCurrentBank,
                                                                     const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                     GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                                     const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_computed_5F_rcall * object = (const cPtr_instruction_5F_computed_5F_rcall *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_computed_5F_rcall) ;
  GALGAS_bool var_allPreserveBank = GALGAS_bool (true) ;
  GALGAS_bool var_someReturnsBank = GALGAS_bool (false) ;
  GALGAS_uint var_returnedBankSelection = ioArgument_ioCurrentBank ;
  cEnumerator_lstringlist enumerator_32064 (object->mAttribute_mTargetLabels, kEnumeration_up) ;
  while (enumerator_32064.hasCurrentObject ()) {
    GALGAS_bool var_isNoReturn ;
    GALGAS_uint var_requiredBank ;
    GALGAS_uint var_returnedBank ;
    GALGAS_bool var_preservesBank ;
    constinArgument_inRoutineMap.method_searchKey (enumerator_32064.current_mValue (HERE), var_isNoReturn, var_requiredBank, var_returnedBank, var_preservesBank, inCompiler COMMA_SOURCE_FILE_AT_LINE (943)) ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (944)))).operator_and (GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (ioArgument_ioCurrentBank)) COMMA_SOURCE_FILE_AT_LINE (944)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string var_errorMessage = GALGAS_string ("the routine '").operator_concat (enumerator_32064.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (945)) COMMA_SOURCE_FILE_AT_LINE (945)).operator_concat (GALGAS_string ("' requires BSR to be set to ") COMMA_SOURCE_FILE_AT_LINE (945)).operator_concat (var_requiredBank.reader_string (SOURCE_FILE_AT_LINE (945)) COMMA_SOURCE_FILE_AT_LINE (945)) ;
      var_errorMessage.dotAssign_operation (GALGAS_string (", but BSR ") COMMA_SOURCE_FILE_AT_LINE (946)) ;
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, ioArgument_ioCurrentBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (947)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_errorMessage.dotAssign_operation (GALGAS_string ("does contain any reliable value") COMMA_SOURCE_FILE_AT_LINE (948)) ;
      }else if (kBoolFalse == test_1) {
        var_errorMessage.dotAssign_operation (GALGAS_string ("is set to ").operator_concat (ioArgument_ioCurrentBank.reader_string (SOURCE_FILE_AT_LINE (950)) COMMA_SOURCE_FILE_AT_LINE (950)) COMMA_SOURCE_FILE_AT_LINE (950)) ;
      }
      GALGAS_location location_2 (enumerator_32064.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (952)) ;
    }
    const enumGalgasBool test_3 = var_isNoReturn.boolEnum () ;
    if (kBoolTrue == test_3) {
      GALGAS_location location_4 (enumerator_32064.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, GALGAS_string ("for being named in a computed rcall, the '").operator_concat (enumerator_32064.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (955)) COMMA_SOURCE_FILE_AT_LINE (955)).operator_concat (GALGAS_string ("' routine should be declared without the \"noreturn\" qualifier") COMMA_SOURCE_FILE_AT_LINE (955)) COMMA_SOURCE_FILE_AT_LINE (955)) ;
    }
    const enumGalgasBool test_5 = constinArgument_inShouldPreserveBSR.operator_and (var_preservesBank.operator_not (SOURCE_FILE_AT_LINE (957)) COMMA_SOURCE_FILE_AT_LINE (957)).boolEnum () ;
    if (kBoolTrue == test_5) {
      GALGAS_location location_6 (enumerator_32064.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_6, GALGAS_string ("the '").operator_concat (enumerator_32064.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (958)) COMMA_SOURCE_FILE_AT_LINE (958)).operator_concat (GALGAS_string ("' routine should preserved bank selection") COMMA_SOURCE_FILE_AT_LINE (958)) COMMA_SOURCE_FILE_AT_LINE (958)) ;
    }else if (kBoolFalse == test_5) {
      const enumGalgasBool test_7 = constinArgument_inShouldPreserveBSR.operator_not (SOURCE_FILE_AT_LINE (959)).operator_and (var_preservesBank.operator_not (SOURCE_FILE_AT_LINE (959)) COMMA_SOURCE_FILE_AT_LINE (959)).boolEnum () ;
      if (kBoolTrue == test_7) {
        const enumGalgasBool test_8 = var_someReturnsBank.operator_not (SOURCE_FILE_AT_LINE (960)).boolEnum () ;
        if (kBoolTrue == test_8) {
          var_returnedBankSelection = var_returnedBank ;
          var_someReturnsBank = GALGAS_bool (true) ;
        }else if (kBoolFalse == test_8) {
          const enumGalgasBool test_9 = GALGAS_bool (kIsNotEqual, var_returnedBankSelection.objectCompare (var_returnedBank)).boolEnum () ;
          if (kBoolTrue == test_9) {
            GALGAS_string var_errorMessage = GALGAS_string ("the '").operator_concat (enumerator_32064.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (964)) COMMA_SOURCE_FILE_AT_LINE (964)).operator_concat (GALGAS_string ("' routine returns ") COMMA_SOURCE_FILE_AT_LINE (964)) ;
            const enumGalgasBool test_10 = GALGAS_bool (kIsEqual, var_returnedBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (965)))).boolEnum () ;
            if (kBoolTrue == test_10) {
              var_errorMessage.dotAssign_operation (GALGAS_string ("no bank selection") COMMA_SOURCE_FILE_AT_LINE (966)) ;
            }else if (kBoolFalse == test_10) {
              var_errorMessage.dotAssign_operation (GALGAS_string ("bank selection set to  ").operator_concat (var_returnedBank.reader_string (SOURCE_FILE_AT_LINE (968)) COMMA_SOURCE_FILE_AT_LINE (968)) COMMA_SOURCE_FILE_AT_LINE (968)) ;
            }
            var_errorMessage.dotAssign_operation (GALGAS_string (", but previous routine(s) return(s) ") COMMA_SOURCE_FILE_AT_LINE (970)) ;
            const enumGalgasBool test_11 = GALGAS_bool (kIsEqual, var_returnedBankSelection.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (971)))).boolEnum () ;
            if (kBoolTrue == test_11) {
              var_errorMessage.dotAssign_operation (GALGAS_string ("no bank selection") COMMA_SOURCE_FILE_AT_LINE (972)) ;
            }else if (kBoolFalse == test_11) {
              var_errorMessage.dotAssign_operation (GALGAS_string ("bank selection set to  ").operator_concat (var_returnedBankSelection.reader_string (SOURCE_FILE_AT_LINE (974)) COMMA_SOURCE_FILE_AT_LINE (974)) COMMA_SOURCE_FILE_AT_LINE (974)) ;
            }
            GALGAS_location location_12 (enumerator_32064.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_12, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (976)) ;
          }
        }
      }else if (kBoolFalse == test_7) {
        const enumGalgasBool test_13 = constinArgument_inShouldPreserveBSR.operator_not (SOURCE_FILE_AT_LINE (978)).operator_and (var_preservesBank COMMA_SOURCE_FILE_AT_LINE (978)).boolEnum () ;
        if (kBoolTrue == test_13) {
        }
      }
    }
    enumerator_32064.gotoNextObject () ;
  }
  ioArgument_ioContinuesInSequence = GALGAS_bool (true) ;
  ioArgument_ioCurrentBank = var_returnedBankSelection ;
  GALGAS_sint var_size ;
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mSizeExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_size, inCompiler COMMA_SOURCE_FILE_AT_LINE (985)) ;
  const enumGalgasBool test_14 = GALGAS_bool (kIsStrictInf, var_size.objectCompare (GALGAS_sint ((PMSInt32) 2L))).boolEnum () ;
  if (kBoolTrue == test_14) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (987)) COMMA_SOURCE_FILE_AT_LINE (987)).operator_concat (GALGAS_string (") should be greater or equal to 2") COMMA_SOURCE_FILE_AT_LINE (987)) COMMA_SOURCE_FILE_AT_LINE (987)) ;
  }else if (kBoolFalse == test_14) {
    const enumGalgasBool test_15 = GALGAS_bool (kIsStrictSup, var_size.objectCompare (GALGAS_sint ((PMSInt32) 64L))).boolEnum () ;
    if (kBoolTrue == test_15) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (989)) COMMA_SOURCE_FILE_AT_LINE (989)).operator_concat (GALGAS_string (") should be lower or equal to 64") COMMA_SOURCE_FILE_AT_LINE (989)) COMMA_SOURCE_FILE_AT_LINE (989)) ;
    }else if (kBoolFalse == test_15) {
      const enumGalgasBool test_16 = GALGAS_bool (kIsNotEqual, var_size.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (990)).objectCompare (object->mAttribute_mTargetLabels.reader_length (SOURCE_FILE_AT_LINE (990)))).boolEnum () ;
      if (kBoolTrue == test_16) {
        inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the routine name list length (").operator_concat (object->mAttribute_mTargetLabels.reader_length (SOURCE_FILE_AT_LINE (991)).reader_string (SOURCE_FILE_AT_LINE (991)) COMMA_SOURCE_FILE_AT_LINE (991)).operator_concat (GALGAS_string (") should be equal to the computed range (") COMMA_SOURCE_FILE_AT_LINE (991)).operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (991)) COMMA_SOURCE_FILE_AT_LINE (991)).operator_concat (GALGAS_string (")") COMMA_SOURCE_FILE_AT_LINE (991)) COMMA_SOURCE_FILE_AT_LINE (991)) ;
      }
    }
  }
  GALGAS_string var_label_30_ = GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (994)) COMMA_SOURCE_FILE_AT_LINE (994)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (995)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mTargetLabels, var_label_30_, object->mAttribute_mUsesRelativeCall COMMA_SOURCE_FILE_AT_LINE (996)) COMMA_SOURCE_FILE_AT_LINE (996)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_computed_5F_rcall_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_computed_5F_rcall.mSlotID,
                               categoryMethod_instruction_5F_computed_5F_rcall_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_computed_5F_rcall_analyze (defineCategoryMethod_instruction_5F_computed_5F_rcall_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category method '@instruction_computed_goto analyze'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_computed_5F_goto_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                    const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                    GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                    const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                    const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                    const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                    const GALGAS_constantMap constinArgument_inConstantMap,
                                                                    GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                    GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                    GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                    GALGAS_uint & ioArgument_ioCurrentBank,
                                                                    const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                    GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                                    const GALGAS_routineKind constinArgument_inRoutineKind,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_computed_5F_goto * object = (const cPtr_instruction_5F_computed_5F_goto *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_computed_5F_goto) ;
  cEnumerator_lstringlist enumerator_35443 (object->mAttribute_mTargetLabels, kEnumeration_up) ;
  while (enumerator_35443.hasCurrentObject ()) {
    GALGAS_bool var_isNoReturn ;
    GALGAS_uint var_requiredBank ;
    GALGAS_uint joker_35522_0 ; // Joker input parameter
    GALGAS_bool joker_35525_0 ; // Joker input parameter
    constinArgument_inRoutineMap.method_searchKey (enumerator_35443.current_mValue (HERE), var_isNoReturn, var_requiredBank, joker_35522_0, joker_35525_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1023)) ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1024)))).operator_and (GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (ioArgument_ioCurrentBank)) COMMA_SOURCE_FILE_AT_LINE (1024)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string var_errorMessage = GALGAS_string ("the routine '").operator_concat (enumerator_35443.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1025)) COMMA_SOURCE_FILE_AT_LINE (1025)).operator_concat (GALGAS_string ("' requires BSR to be set to ") COMMA_SOURCE_FILE_AT_LINE (1025)).operator_concat (var_requiredBank.reader_string (SOURCE_FILE_AT_LINE (1025)) COMMA_SOURCE_FILE_AT_LINE (1025)) ;
      var_errorMessage.dotAssign_operation (GALGAS_string (", but BSR ") COMMA_SOURCE_FILE_AT_LINE (1026)) ;
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, ioArgument_ioCurrentBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1027)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_errorMessage.dotAssign_operation (GALGAS_string ("does contain any reliable value") COMMA_SOURCE_FILE_AT_LINE (1028)) ;
      }else if (kBoolFalse == test_1) {
        var_errorMessage.dotAssign_operation (GALGAS_string ("is set to ").operator_concat (ioArgument_ioCurrentBank.reader_string (SOURCE_FILE_AT_LINE (1030)) COMMA_SOURCE_FILE_AT_LINE (1030)) COMMA_SOURCE_FILE_AT_LINE (1030)) ;
      }
      GALGAS_location location_2 (enumerator_35443.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (1032)) ;
    }
    const enumGalgasBool test_3 = var_isNoReturn.operator_not (SOURCE_FILE_AT_LINE (1034)).boolEnum () ;
    if (kBoolTrue == test_3) {
      GALGAS_location location_4 (enumerator_35443.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, GALGAS_string ("for being named in a computed goto, the '").operator_concat (enumerator_35443.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1035)) COMMA_SOURCE_FILE_AT_LINE (1035)).operator_concat (GALGAS_string ("' routine should be declared with the \"noreturn\" qualifier") COMMA_SOURCE_FILE_AT_LINE (1035)) COMMA_SOURCE_FILE_AT_LINE (1035)) ;
    }
    enumerator_35443.gotoNextObject () ;
  }
  ioArgument_ioContinuesInSequence = GALGAS_bool (false) ;
  if (constinArgument_inRoutineKind.isValid ()) {
    switch (constinArgument_inRoutineKind.enumValue ()) {
    case GALGAS_routineKind::kNotBuilt:
      break ;
    case GALGAS_routineKind::kEnum_regularRoutine: {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("a regular routine does not accept computed goto instruction") COMMA_SOURCE_FILE_AT_LINE (1041)) ;
      } break ;
    case GALGAS_routineKind::kEnum_noReturnRoutine: {
      } break ;
    case GALGAS_routineKind::kEnum_interruptRoutine: {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("an interrupt routine does not accept computed goto instruction") COMMA_SOURCE_FILE_AT_LINE (1044)) ;
      } break ;
    }
  }
  GALGAS_sint var_size ;
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mSizeExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_size, inCompiler COMMA_SOURCE_FILE_AT_LINE (1047)) ;
  const enumGalgasBool test_5 = GALGAS_bool (kIsStrictInf, var_size.objectCompare (GALGAS_sint ((PMSInt32) 2L))).boolEnum () ;
  if (kBoolTrue == test_5) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1049)) COMMA_SOURCE_FILE_AT_LINE (1049)).operator_concat (GALGAS_string (") should be greater or equal to 2") COMMA_SOURCE_FILE_AT_LINE (1049)) COMMA_SOURCE_FILE_AT_LINE (1049)) ;
  }else if (kBoolFalse == test_5) {
    const enumGalgasBool test_6 = GALGAS_bool (kIsStrictSup, var_size.objectCompare (GALGAS_sint ((PMSInt32) 64L))).boolEnum () ;
    if (kBoolTrue == test_6) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1051)) COMMA_SOURCE_FILE_AT_LINE (1051)).operator_concat (GALGAS_string (") should be lower or equal to 64") COMMA_SOURCE_FILE_AT_LINE (1051)) COMMA_SOURCE_FILE_AT_LINE (1051)) ;
    }else if (kBoolFalse == test_6) {
      const enumGalgasBool test_7 = GALGAS_bool (kIsNotEqual, var_size.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (1052)).objectCompare (object->mAttribute_mTargetLabels.reader_length (SOURCE_FILE_AT_LINE (1052)))).boolEnum () ;
      if (kBoolTrue == test_7) {
        inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the routine name list length (").operator_concat (object->mAttribute_mTargetLabels.reader_length (SOURCE_FILE_AT_LINE (1053)).reader_string (SOURCE_FILE_AT_LINE (1053)) COMMA_SOURCE_FILE_AT_LINE (1053)).operator_concat (GALGAS_string (") should be equal to the computed range (") COMMA_SOURCE_FILE_AT_LINE (1053)).operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1053)) COMMA_SOURCE_FILE_AT_LINE (1053)).operator_concat (GALGAS_string (")") COMMA_SOURCE_FILE_AT_LINE (1053)) COMMA_SOURCE_FILE_AT_LINE (1053)) ;
      }
    }
  }
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = GALGAS_ipic_31__38_ComputedGotoTerminator::constructor_new (object->mAttribute_mTargetLabels, object->mAttribute_mUsesRelativeCall COMMA_SOURCE_FILE_AT_LINE (1056)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_computed_5F_goto_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_computed_5F_goto.mSlotID,
                               categoryMethod_instruction_5F_computed_5F_goto_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_computed_5F_goto_analyze (defineCategoryMethod_instruction_5F_computed_5F_goto_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@instruction_computed_retlw analyze'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_computed_5F_retlw_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                     const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                     GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                     const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                     const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                     const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                     const GALGAS_constantMap constinArgument_inConstantMap,
                                                                     GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                     GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                     GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                     GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                                     const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                     GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                                     const GALGAS_routineKind constinArgument_inRoutineKind,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_computed_5F_retlw * object = (const cPtr_instruction_5F_computed_5F_retlw *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_computed_5F_retlw) ;
  ioArgument_ioContinuesInSequence = GALGAS_bool (false) ;
  if (constinArgument_inRoutineKind.isValid ()) {
    switch (constinArgument_inRoutineKind.enumValue ()) {
    case GALGAS_routineKind::kNotBuilt:
      break ;
    case GALGAS_routineKind::kEnum_regularRoutine: {
      } break ;
    case GALGAS_routineKind::kEnum_noReturnRoutine: {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("a \"noreturn\" routine does not accept computed retlw instruction") COMMA_SOURCE_FILE_AT_LINE (1083)) ;
      } break ;
    case GALGAS_routineKind::kEnum_interruptRoutine: {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("an interrupt routine does not accept computed retlw instruction") COMMA_SOURCE_FILE_AT_LINE (1085)) ;
      } break ;
    }
  }
  GALGAS_sint var_size ;
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mSizeExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_size, inCompiler COMMA_SOURCE_FILE_AT_LINE (1088)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictInf, var_size.objectCompare (GALGAS_sint ((PMSInt32) 2L))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1090)) COMMA_SOURCE_FILE_AT_LINE (1090)).operator_concat (GALGAS_string (") should be greater or equal to 2") COMMA_SOURCE_FILE_AT_LINE (1090)) COMMA_SOURCE_FILE_AT_LINE (1090)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, var_size.objectCompare (GALGAS_sint ((PMSInt32) 128L))).boolEnum () ;
    if (kBoolTrue == test_1) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1092)) COMMA_SOURCE_FILE_AT_LINE (1092)).operator_concat (GALGAS_string (") should be lower or equal to 128") COMMA_SOURCE_FILE_AT_LINE (1092)) COMMA_SOURCE_FILE_AT_LINE (1092)) ;
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, var_size.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (1093)).objectCompare (object->mAttribute_mImmediateExpressionList.reader_length (SOURCE_FILE_AT_LINE (1093)))).boolEnum () ;
      if (kBoolTrue == test_2) {
        inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the constant list length (").operator_concat (object->mAttribute_mImmediateExpressionList.reader_length (SOURCE_FILE_AT_LINE (1094)).reader_string (SOURCE_FILE_AT_LINE (1094)) COMMA_SOURCE_FILE_AT_LINE (1094)).operator_concat (GALGAS_string (") should be equal to the computed range (") COMMA_SOURCE_FILE_AT_LINE (1094)).operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1094)) COMMA_SOURCE_FILE_AT_LINE (1094)).operator_concat (GALGAS_string (")") COMMA_SOURCE_FILE_AT_LINE (1094)) COMMA_SOURCE_FILE_AT_LINE (1094)) ;
      }
    }
  }
  GALGAS_uintlist var_literalValues = GALGAS_uintlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1097)) ;
  cEnumerator_immediatExpressionList enumerator_38882 (object->mAttribute_mImmediateExpressionList, kEnumeration_up) ;
  GALGAS_uint index_38876 ((PMUInt32) 0) ;
  while (enumerator_38882.hasCurrentObject ()) {
    GALGAS_sint var_v ;
    callCategoryMethod_eval ((const cPtr_immediatExpression *) enumerator_38882.current_mExpression (HERE).ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_v, inCompiler COMMA_SOURCE_FILE_AT_LINE (1099)) ;
    const enumGalgasBool test_3 = GALGAS_bool (kIsStrictSup, var_v.objectCompare (GALGAS_sint ((PMSInt32) 255L))).operator_or (GALGAS_bool (kIsStrictInf, var_v.objectCompare (GALGAS_sint ((PMSInt32) 128L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE_AT_LINE (1100)))) COMMA_SOURCE_FILE_AT_LINE (1100)).boolEnum () ;
    if (kBoolTrue == test_3) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("immediate value with idx ").operator_concat (index_38876.reader_string (SOURCE_FILE_AT_LINE (1101)) COMMA_SOURCE_FILE_AT_LINE (1101)).operator_concat (GALGAS_string (" is evaluated as ") COMMA_SOURCE_FILE_AT_LINE (1101)).operator_concat (var_v.reader_string (SOURCE_FILE_AT_LINE (1101)) COMMA_SOURCE_FILE_AT_LINE (1101)).operator_concat (GALGAS_string (" (should be <= 255)") COMMA_SOURCE_FILE_AT_LINE (1101)) COMMA_SOURCE_FILE_AT_LINE (1101)) ;
    }
    var_literalValues.addAssign_operation (var_v.operator_and (GALGAS_sint ((PMSInt32) 255L) COMMA_SOURCE_FILE_AT_LINE (1103)).reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (1103)) COMMA_SOURCE_FILE_AT_LINE (1103)) ;
    enumerator_38882.gotoNextObject () ;
    index_38876.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1098)) ;
  }
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = GALGAS_ipic_31__38_ComputedRETLWTerminator::constructor_new (var_literalValues, object->mAttribute_mUsesRelativeCall COMMA_SOURCE_FILE_AT_LINE (1106)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_computed_5F_retlw_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_computed_5F_retlw.mSlotID,
                               categoryMethod_instruction_5F_computed_5F_retlw_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_computed_5F_retlw_analyze (defineCategoryMethod_instruction_5F_computed_5F_retlw_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category method '@instruction_JUMPCC analyze'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_JUMPCC_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                          const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                          GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                          const GALGAS_routineMap constinArgument_inRoutineMap,
                                                          const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                          const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                          const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                          GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                          GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                          GALGAS_string & /* ioArgument_ioListFileContents */,
                                                          GALGAS_uint & ioArgument_ioCurrentBank,
                                                          const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                          GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                          const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                          C_Compiler * inCompiler
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_JUMPCC * object = (const cPtr_instruction_5F_JUMPCC *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_JUMPCC) ;
  GALGAS_bool var_isNoReturn ;
  GALGAS_uint var_requiredBank ;
  GALGAS_uint joker_40028_0 ; // Joker input parameter
  GALGAS_bool joker_40031_0 ; // Joker input parameter
  constinArgument_inRoutineMap.method_searchKey (object->mAttribute_mTargetLabel, var_isNoReturn, var_requiredBank, joker_40028_0, joker_40031_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1129)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1130)))).operator_and (GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (ioArgument_ioCurrentBank)) COMMA_SOURCE_FILE_AT_LINE (1130)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_string var_errorMessage = GALGAS_string ("the routine '").operator_concat (object->mAttribute_mTargetLabel.reader_string (SOURCE_FILE_AT_LINE (1131)) COMMA_SOURCE_FILE_AT_LINE (1131)).operator_concat (GALGAS_string ("' requires BSR to be set to ") COMMA_SOURCE_FILE_AT_LINE (1131)).operator_concat (var_requiredBank.reader_string (SOURCE_FILE_AT_LINE (1131)) COMMA_SOURCE_FILE_AT_LINE (1131)) ;
    var_errorMessage.dotAssign_operation (GALGAS_string (", but BSR ") COMMA_SOURCE_FILE_AT_LINE (1132)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, ioArgument_ioCurrentBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1133)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_errorMessage.dotAssign_operation (GALGAS_string ("does contain any reliable value") COMMA_SOURCE_FILE_AT_LINE (1134)) ;
    }else if (kBoolFalse == test_1) {
      var_errorMessage.dotAssign_operation (GALGAS_string ("is set to ").operator_concat (ioArgument_ioCurrentBank.reader_string (SOURCE_FILE_AT_LINE (1136)) COMMA_SOURCE_FILE_AT_LINE (1136)) COMMA_SOURCE_FILE_AT_LINE (1136)) ;
    }
    GALGAS_location location_2 (object->mAttribute_mTargetLabel.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (1138)) ;
  }
  const enumGalgasBool test_3 = var_isNoReturn.operator_not (SOURCE_FILE_AT_LINE (1140)).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_location location_4 (object->mAttribute_mTargetLabel.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_4, GALGAS_string ("a regular routine should be called with a RCALL, CALL or JSR instruction") COMMA_SOURCE_FILE_AT_LINE (1141)) ;
  }
  GALGAS_conditionalBranchMode var_mode ;
  const enumGalgasBool test_5 = object->mAttribute_mIsBcc.boolEnum () ;
  if (kBoolTrue == test_5) {
    var_mode = GALGAS_conditionalBranchMode::constructor_native (SOURCE_FILE_AT_LINE (1146)) ;
  }else if (kBoolFalse == test_5) {
    var_mode = GALGAS_conditionalBranchMode::constructor_native (SOURCE_FILE_AT_LINE (1148)) ;
  }
  GALGAS_lstring var_label_30_ = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1151)) COMMA_SOURCE_FILE_AT_LINE (1151)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1151)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1152)) ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_terminator = ioArgument_ioCurrentBlock.mAttribute_mTerminator ;
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = GALGAS_ipic_31__38_ConditionalJumpTerminator::constructor_new (var_mode, object->mAttribute_mConditionalBranch, GALGAS_ipic_31__38_JumpTerminator::constructor_new (object->mAttribute_mTargetLabel COMMA_SOURCE_FILE_AT_LINE (1159)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (var_label_30_ COMMA_SOURCE_FILE_AT_LINE (1160)) COMMA_SOURCE_FILE_AT_LINE (1156)) ;
  ioArgument_ioCurrentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1164)), var_label_30_, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1166)), var_terminator COMMA_SOURCE_FILE_AT_LINE (1163)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_JUMPCC_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_JUMPCC.mSlotID,
                               categoryMethod_instruction_5F_JUMPCC_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_JUMPCC_analyze (defineCategoryMethod_instruction_5F_JUMPCC_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category method '@instruction_computed_bra analyze'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_computed_5F_bra_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                   const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                   GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                   const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                   const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                   const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                   const GALGAS_constantMap constinArgument_inConstantMap,
                                                                   GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                   GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                   GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                   GALGAS_uint & ioArgument_ioCurrentBank,
                                                                   const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                   GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                                   const GALGAS_routineKind constinArgument_inRoutineKind,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_computed_5F_bra * object = (const cPtr_instruction_5F_computed_5F_bra *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_computed_5F_bra) ;
  GALGAS_bool var_allPreserveBankSetting = GALGAS_bool (true) ;
  GALGAS_bool var_allReturnBank = GALGAS_bool (true) ;
  GALGAS_uint var_returnedBankValue = GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1191)) ;
  cEnumerator_lstringlist enumerator_42202 (object->mAttribute_mTargetLabels, kEnumeration_up) ;
  while (enumerator_42202.hasCurrentObject ()) {
    GALGAS_bool var_isNoReturn ;
    GALGAS_uint var_requiredBank ;
    GALGAS_uint var_returnedBank ;
    GALGAS_bool var_preservesBank ;
    constinArgument_inRoutineMap.method_searchKey (enumerator_42202.current_mValue (HERE), var_isNoReturn, var_requiredBank, var_returnedBank, var_preservesBank, inCompiler COMMA_SOURCE_FILE_AT_LINE (1193)) ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1195)))).operator_and (GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (ioArgument_ioCurrentBank)) COMMA_SOURCE_FILE_AT_LINE (1195)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string var_errorMessage = GALGAS_string ("the routine '").operator_concat (enumerator_42202.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1196)) COMMA_SOURCE_FILE_AT_LINE (1196)).operator_concat (GALGAS_string ("' requires BSR to be set to ") COMMA_SOURCE_FILE_AT_LINE (1196)).operator_concat (var_requiredBank.reader_string (SOURCE_FILE_AT_LINE (1196)) COMMA_SOURCE_FILE_AT_LINE (1196)) ;
      var_errorMessage.dotAssign_operation (GALGAS_string (", but BSR ") COMMA_SOURCE_FILE_AT_LINE (1197)) ;
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, ioArgument_ioCurrentBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1198)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_errorMessage.dotAssign_operation (GALGAS_string ("does contain any reliable value") COMMA_SOURCE_FILE_AT_LINE (1199)) ;
      }else if (kBoolFalse == test_1) {
        var_errorMessage.dotAssign_operation (GALGAS_string ("is set to ").operator_concat (ioArgument_ioCurrentBank.reader_string (SOURCE_FILE_AT_LINE (1201)) COMMA_SOURCE_FILE_AT_LINE (1201)) COMMA_SOURCE_FILE_AT_LINE (1201)) ;
      }
      GALGAS_location location_2 (enumerator_42202.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (1203)) ;
    }
    const enumGalgasBool test_3 = var_preservesBank.boolEnum () ;
    if (kBoolTrue == test_3) {
      var_allReturnBank = GALGAS_bool (false) ;
    }else if (kBoolFalse == test_3) {
      const enumGalgasBool test_4 = GALGAS_bool (kIsNotEqual, var_returnedBankValue.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1208)))).operator_and (GALGAS_bool (kIsNotEqual, var_returnedBankValue.objectCompare (var_returnedBank)) COMMA_SOURCE_FILE_AT_LINE (1208)).boolEnum () ;
      if (kBoolTrue == test_4) {
        GALGAS_location location_5 (enumerator_42202.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_5, GALGAS_string ("this routine ensures setting of bank '").operator_concat (var_returnedBank.reader_string (SOURCE_FILE_AT_LINE (1209)) COMMA_SOURCE_FILE_AT_LINE (1209)).operator_concat (GALGAS_string ("', but ") COMMA_SOURCE_FILE_AT_LINE (1209)).operator_concat (GALGAS_string ("previous routine(s) ensure setting of bank '") COMMA_SOURCE_FILE_AT_LINE (1210)).operator_concat (var_returnedBankValue.reader_string (SOURCE_FILE_AT_LINE (1210)) COMMA_SOURCE_FILE_AT_LINE (1210)).operator_concat (GALGAS_string ("'.") COMMA_SOURCE_FILE_AT_LINE (1210)) COMMA_SOURCE_FILE_AT_LINE (1209)) ;
      }else if (kBoolFalse == test_4) {
        var_allPreserveBankSetting = GALGAS_bool (false) ;
        var_returnedBankValue = var_returnedBank ;
      }
    }
    const enumGalgasBool test_6 = GALGAS_bool (kIsNotEqual, GALGAS_routineKind::constructor_regularRoutine (SOURCE_FILE_AT_LINE (1215)).objectCompare (constinArgument_inRoutineKind)).operator_and (var_isNoReturn.operator_not (SOURCE_FILE_AT_LINE (1215)) COMMA_SOURCE_FILE_AT_LINE (1215)).boolEnum () ;
    if (kBoolTrue == test_6) {
      GALGAS_location location_7 (enumerator_42202.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_7, GALGAS_string ("for being named in a computed bra from a regular routine, the '").operator_concat (enumerator_42202.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1216)) COMMA_SOURCE_FILE_AT_LINE (1216)).operator_concat (GALGAS_string ("' routine should be declared without any \"noreturn\" qualifier") COMMA_SOURCE_FILE_AT_LINE (1216)) COMMA_SOURCE_FILE_AT_LINE (1216)) ;
    }
    enumerator_42202.gotoNextObject () ;
  }
  const enumGalgasBool test_8 = var_allReturnBank.operator_and (var_allPreserveBankSetting.operator_not (SOURCE_FILE_AT_LINE (1220)) COMMA_SOURCE_FILE_AT_LINE (1220)).boolEnum () ;
  if (kBoolTrue == test_8) {
    ioArgument_ioCurrentBank = var_returnedBankValue ;
  }else if (kBoolFalse == test_8) {
    const enumGalgasBool test_9 = var_allReturnBank.operator_not (SOURCE_FILE_AT_LINE (1222)).operator_and (var_allPreserveBankSetting.operator_not (SOURCE_FILE_AT_LINE (1222)) COMMA_SOURCE_FILE_AT_LINE (1222)).boolEnum () ;
    if (kBoolTrue == test_9) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("invoked routine should either all preserve bank, eihter return the same selected bank") COMMA_SOURCE_FILE_AT_LINE (1223)) ;
    }
  }
  const enumGalgasBool test_10 = constinArgument_inShouldPreserveBSR.operator_and (var_allPreserveBankSetting.operator_not (SOURCE_FILE_AT_LINE (1225)) COMMA_SOURCE_FILE_AT_LINE (1225)).boolEnum () ;
  if (kBoolTrue == test_10) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("invoked routine(s) do(es) not preserve bank selection") COMMA_SOURCE_FILE_AT_LINE (1226)) ;
  }
  ioArgument_ioContinuesInSequence = GALGAS_bool (false) ;
  if (constinArgument_inRoutineKind.isValid ()) {
    switch (constinArgument_inRoutineKind.enumValue ()) {
    case GALGAS_routineKind::kNotBuilt:
      break ;
    case GALGAS_routineKind::kEnum_regularRoutine: {
      } break ;
    case GALGAS_routineKind::kEnum_noReturnRoutine: {
      } break ;
    case GALGAS_routineKind::kEnum_interruptRoutine: {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("an interrupt routine does not accept computed bra instruction") COMMA_SOURCE_FILE_AT_LINE (1235)) ;
      } break ;
    }
  }
  GALGAS_sint var_size ;
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mSizeExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_size, inCompiler COMMA_SOURCE_FILE_AT_LINE (1238)) ;
  const enumGalgasBool test_11 = GALGAS_bool (kIsStrictInf, var_size.objectCompare (GALGAS_sint ((PMSInt32) 2L))).boolEnum () ;
  if (kBoolTrue == test_11) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1240)) COMMA_SOURCE_FILE_AT_LINE (1240)).operator_concat (GALGAS_string (") should be greater or equal to 2") COMMA_SOURCE_FILE_AT_LINE (1240)) COMMA_SOURCE_FILE_AT_LINE (1240)) ;
  }else if (kBoolFalse == test_11) {
    const enumGalgasBool test_12 = GALGAS_bool (kIsStrictSup, var_size.objectCompare (GALGAS_sint ((PMSInt32) 128L))).boolEnum () ;
    if (kBoolTrue == test_12) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1242)) COMMA_SOURCE_FILE_AT_LINE (1242)).operator_concat (GALGAS_string (") should be lower or equal to 128") COMMA_SOURCE_FILE_AT_LINE (1242)) COMMA_SOURCE_FILE_AT_LINE (1242)) ;
    }else if (kBoolFalse == test_12) {
      const enumGalgasBool test_13 = GALGAS_bool (kIsNotEqual, var_size.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (1243)).objectCompare (object->mAttribute_mTargetLabels.reader_length (SOURCE_FILE_AT_LINE (1243)))).boolEnum () ;
      if (kBoolTrue == test_13) {
        inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the routine name list length (").operator_concat (object->mAttribute_mTargetLabels.reader_length (SOURCE_FILE_AT_LINE (1244)).reader_string (SOURCE_FILE_AT_LINE (1244)) COMMA_SOURCE_FILE_AT_LINE (1244)).operator_concat (GALGAS_string (") should be equal to the computed range (") COMMA_SOURCE_FILE_AT_LINE (1244)).operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1244)) COMMA_SOURCE_FILE_AT_LINE (1244)).operator_concat (GALGAS_string (")") COMMA_SOURCE_FILE_AT_LINE (1244)) COMMA_SOURCE_FILE_AT_LINE (1244)) ;
      }
    }
  }
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = GALGAS_ipic_31__38_ComputedBraTerminator::constructor_new (object->mAttribute_mTargetLabels, object->mAttribute_mUsesRelativeCall COMMA_SOURCE_FILE_AT_LINE (1247)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_computed_5F_bra_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_computed_5F_bra.mSlotID,
                               categoryMethod_instruction_5F_computed_5F_bra_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_computed_5F_bra_analyze (defineCategoryMethod_instruction_5F_computed_5F_bra_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Overriding category method '@instruction_IF_BitTest analyze'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_IF_5F_BitTest_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                 const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                 GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                 const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                 const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                 const GALGAS_dataMap constinArgument_inDataMap,
                                                                 const GALGAS_constantMap constinArgument_inConstantMap,
                                                                 GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                 GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                 GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                 GALGAS_uint & ioArgument_ioCurrentBank,
                                                                 const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                 GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                                 const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_IF_5F_BitTest * object = (const cPtr_instruction_5F_IF_5F_BitTest *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_IF_5F_BitTest) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable var_bitSliceTable ;
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, var_bitSliceTable, inCompiler COMMA_SOURCE_FILE_AT_LINE (1271)) ;
  GALGAS_uint var_bitNumber ;
  callCategoryMethod_getBitNumber ((const cPtr_bitNumberExpression *) object->mAttribute_mBitNumber.ptr (), var_bitSliceTable, var_bitNumber, inCompiler COMMA_SOURCE_FILE_AT_LINE (1278)) ;
  GALGAS_uint var_currentBank = ioArgument_ioCurrentBank ;
  GALGAS_ipic_31__38_SequentialInstruction var_embeddedInstruction ;
  callCategoryMethod_analyzeSimpleInstruction ((const cPtr_pic_31__38_PiccoloSimpleInstruction *) object->mAttribute_mEmbeddedInstruction.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, var_currentBank, constinArgument_inShouldPreserveBSR, var_embeddedInstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1284)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_currentBank.objectCompare (var_currentBank)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mEmbeddedInstruction.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (1296)), GALGAS_string ("this instruction does not preserve bank setting") COMMA_SOURCE_FILE_AT_LINE (1296)) ;
  }
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_BitTestSkip::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mSkipIfSet, var_IPICregisterDescription, var_bitNumber, var_embeddedInstruction COMMA_SOURCE_FILE_AT_LINE (1299)) COMMA_SOURCE_FILE_AT_LINE (1299)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_IF_5F_BitTest_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_IF_5F_BitTest.mSlotID,
                               categoryMethod_instruction_5F_IF_5F_BitTest_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_IF_5F_BitTest_analyze (defineCategoryMethod_instruction_5F_IF_5F_BitTest_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category method '@instruction_IF_FA_SEMI_COLON analyze'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                             const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                             GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                             const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                             const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                             const GALGAS_dataMap constinArgument_inDataMap,
                                                                             const GALGAS_constantMap constinArgument_inConstantMap,
                                                                             GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                             GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                             GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                             GALGAS_uint & ioArgument_ioCurrentBank,
                                                                             const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                             GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                                             const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON * object = (const cPtr_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON) ;
  GALGAS_FA_5F_instruction_5F_base_5F_code var_baseCode ;
  if (object->mAttribute_mOpCode.isValid ()) {
    switch (object->mAttribute_mOpCode.enumValue ()) {
    case GALGAS_if_5F_semi_5F_colon_5F_op::kNotBuilt:
      break ;
    case GALGAS_if_5F_semi_5F_colon_5F_op::kEnum_CPFSEQ: {
      var_baseCode = GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_CPFSEQ (SOURCE_FILE_AT_LINE (1327)) ;
      } break ;
    case GALGAS_if_5F_semi_5F_colon_5F_op::kEnum_CPFSGT: {
      var_baseCode = GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_CPFSGT (SOURCE_FILE_AT_LINE (1328)) ;
      } break ;
    case GALGAS_if_5F_semi_5F_colon_5F_op::kEnum_CPFSLT: {
      var_baseCode = GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_CPFSLT (SOURCE_FILE_AT_LINE (1329)) ;
      } break ;
    case GALGAS_if_5F_semi_5F_colon_5F_op::kEnum_TSTFSZ: {
      var_baseCode = GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_TSTFSZ (SOURCE_FILE_AT_LINE (1330)) ;
      } break ;
    }
  }
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_47837_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, joker_47837_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1332)) ;
  GALGAS_uint var_currentBank = ioArgument_ioCurrentBank ;
  GALGAS_ipic_31__38_SequentialInstruction var_embeddedInstruction ;
  callCategoryMethod_analyzeSimpleInstruction ((const cPtr_pic_31__38_PiccoloSimpleInstruction *) object->mAttribute_mEmbeddedInstruction.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, var_currentBank, constinArgument_inShouldPreserveBSR, var_embeddedInstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1341)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_currentBank.objectCompare (var_currentBank)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mEmbeddedInstruction.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (1353)), GALGAS_string ("this instruction does not preserve bank setting") COMMA_SOURCE_FILE_AT_LINE (1353)) ;
  }
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_skip_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, var_baseCode, var_IPICregisterDescription, var_embeddedInstruction COMMA_SOURCE_FILE_AT_LINE (1356)) COMMA_SOURCE_FILE_AT_LINE (1356)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON.mSlotID,
                               categoryMethod_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON_analyze (defineCategoryMethod_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category method '@instruction_IF_IncDec analyze'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_IF_5F_IncDec_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                const GALGAS_dataMap constinArgument_inDataMap,
                                                                const GALGAS_constantMap constinArgument_inConstantMap,
                                                                GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                GALGAS_uint & ioArgument_ioCurrentBank,
                                                                const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                                const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                                C_Compiler * inCompiler
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_IF_5F_IncDec * object = (const cPtr_instruction_5F_IF_5F_IncDec *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_IF_5F_IncDec) ;
  GALGAS_instruction_5F_FDA_5F_base_5F_code var_baseCode ;
  const enumGalgasBool test_0 = object->mAttribute_mIncrement.operator_and (object->mAttribute_mSkipIfZero COMMA_SOURCE_FILE_AT_LINE (1383)).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_INCFSZ (SOURCE_FILE_AT_LINE (1384)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = object->mAttribute_mIncrement.operator_and (object->mAttribute_mSkipIfZero.operator_not (SOURCE_FILE_AT_LINE (1385)) COMMA_SOURCE_FILE_AT_LINE (1385)).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_INFSNZ (SOURCE_FILE_AT_LINE (1386)) ;
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_2 = object->mAttribute_mIncrement.operator_not (SOURCE_FILE_AT_LINE (1387)).operator_and (object->mAttribute_mSkipIfZero COMMA_SOURCE_FILE_AT_LINE (1387)).boolEnum () ;
      if (kBoolTrue == test_2) {
        var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_DECFSZ (SOURCE_FILE_AT_LINE (1388)) ;
      }else if (kBoolFalse == test_2) {
        var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_DCFSNZ (SOURCE_FILE_AT_LINE (1390)) ;
      }
    }
  }
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_49722_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, joker_49722_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1393)) ;
  GALGAS_uint var_currentBank = ioArgument_ioCurrentBank ;
  GALGAS_ipic_31__38_SequentialInstruction var_embeddedInstruction ;
  callCategoryMethod_analyzeSimpleInstruction ((const cPtr_pic_31__38_PiccoloSimpleInstruction *) object->mAttribute_mEmbeddedInstruction.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, var_currentBank, constinArgument_inShouldPreserveBSR, var_embeddedInstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1402)) ;
  const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, var_currentBank.objectCompare (var_currentBank)).boolEnum () ;
  if (kBoolTrue == test_3) {
    inCompiler->emitSemanticError (object->mAttribute_mEmbeddedInstruction.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (1414)), GALGAS_string ("this instruction does not preserve bank setting") COMMA_SOURCE_FILE_AT_LINE (1414)) ;
  }
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_skip_5F_instruction_5F_FDA::constructor_new (object->mAttribute_mInstructionLocation, var_baseCode, var_IPICregisterDescription, object->mAttribute_m_5F_W_5F_isDestination, var_embeddedInstruction COMMA_SOURCE_FILE_AT_LINE (1417)) COMMA_SOURCE_FILE_AT_LINE (1417)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_IF_5F_IncDec_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_IF_5F_IncDec.mSlotID,
                               categoryMethod_instruction_5F_IF_5F_IncDec_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_IF_5F_IncDec_analyze (defineCategoryMethod_instruction_5F_IF_5F_IncDec_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category method '@instruction_structured_if analyze'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_structured_5F_if_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                    const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                    GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                                                    const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                    const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                    const GALGAS_dataMap constinArgument_inDataMap,
                                                                    const GALGAS_constantMap constinArgument_inConstantMap,
                                                                    GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                                    GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                    GALGAS_string & ioArgument_ioListFileContents,
                                                                    GALGAS_uint & ioArgument_ioCurrentBank,
                                                                    const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                    GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                                    const GALGAS_routineKind constinArgument_inRoutineKind,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_structured_5F_if * object = (const cPtr_instruction_5F_structured_5F_if *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_structured_5F_if) ;
  GALGAS_lstring var_conditionTrueLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1444)) COMMA_SOURCE_FILE_AT_LINE (1444)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1444)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1445)) ;
  GALGAS_lstring var_conditionFalseLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1446)) COMMA_SOURCE_FILE_AT_LINE (1446)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1446)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1447)) ;
  GALGAS_lstring var_exitLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1448)) COMMA_SOURCE_FILE_AT_LINE (1448)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1448)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1449)) ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_testTerminator ;
  callCategoryMethod_analyzeCondition ((const cPtr_conditionExpression *) object->mAttribute_mIfCondition.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, ioArgument_ioLocalLabelIndex, GALGAS_bool (false), object->mAttribute_mInstructionLocation, ioArgument_ioGeneratedBlockList, var_conditionTrueLabel, var_conditionFalseLabel, var_testTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (1451)) ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_currentBlockTerminator = ioArgument_ioCurrentBlock.mAttribute_mTerminator ;
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = var_testTerminator ;
  ioArgument_ioGeneratedBlockList.addAssign_operation (ioArgument_ioCurrentBlock COMMA_SOURCE_FILE_AT_LINE (1467)) ;
  ioArgument_ioCurrentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1470)), var_exitLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1472)), var_currentBlockTerminator COMMA_SOURCE_FILE_AT_LINE (1469)) ;
  GALGAS_uint var_elseBranchFinalBank = ioArgument_ioCurrentBank ;
  GALGAS_uint var_thenBranchFinalBank = ioArgument_ioCurrentBank ;
  GALGAS_ipic_31__38_Block var_thenBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1479)), var_conditionTrueLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1481)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (var_exitLabel COMMA_SOURCE_FILE_AT_LINE (1482)) COMMA_SOURCE_FILE_AT_LINE (1478)) ;
  GALGAS_bool var_thenContinuesInSequence ;
  {
  routine_analyzeInstructionList (object->mAttribute_mThenInstructionList, ioArgument_ioGeneratedBlockList, constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioLocalLabelIndex, var_thenBlock, ioArgument_ioListFileContents, var_thenBranchFinalBank, constinArgument_inShouldPreserveBSR, var_thenContinuesInSequence, constinArgument_inRoutineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (1484)) ;
  }
  ioArgument_ioGeneratedBlockList.addAssign_operation (var_thenBlock COMMA_SOURCE_FILE_AT_LINE (1500)) ;
  GALGAS_ipic_31__38_Block var_elseBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1503)), var_conditionFalseLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1505)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (var_exitLabel COMMA_SOURCE_FILE_AT_LINE (1506)) COMMA_SOURCE_FILE_AT_LINE (1502)) ;
  GALGAS_bool var_elseContinuesInSequence ;
  {
  routine_analyzeInstructionList (object->mAttribute_mElseInstructionList, ioArgument_ioGeneratedBlockList, constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioLocalLabelIndex, var_elseBlock, ioArgument_ioListFileContents, var_elseBranchFinalBank, constinArgument_inShouldPreserveBSR, var_elseContinuesInSequence, constinArgument_inRoutineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (1508)) ;
  }
  ioArgument_ioGeneratedBlockList.addAssign_operation (var_elseBlock COMMA_SOURCE_FILE_AT_LINE (1524)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_elseBranchFinalBank.objectCompare (var_thenBranchFinalBank)).boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioCurrentBank = var_elseBranchFinalBank ;
  }else if (kBoolFalse == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mEndOfElsePartLocation, GALGAS_string ("This branch does not leave BSR value as the first one does") COMMA_SOURCE_FILE_AT_LINE (1529)) ;
    var_elseBranchFinalBank = GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1530)) ;
  }
  ioArgument_ioContinuesInSequence = var_thenContinuesInSequence.operator_or (var_elseContinuesInSequence COMMA_SOURCE_FILE_AT_LINE (1533)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_structured_5F_if_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_structured_5F_if.mSlotID,
                               categoryMethod_instruction_5F_structured_5F_if_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_structured_5F_if_analyze (defineCategoryMethod_instruction_5F_structured_5F_if_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category method '@instruction_do_while analyze'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_do_5F_while_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                               const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                               GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                                               const GALGAS_routineMap constinArgument_inRoutineMap,
                                                               const GALGAS_registerTable constinArgument_inRegisterTable,
                                                               const GALGAS_dataMap constinArgument_inDataMap,
                                                               const GALGAS_constantMap constinArgument_inConstantMap,
                                                               GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                               GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                               GALGAS_string & ioArgument_ioListFileContents,
                                                               GALGAS_uint & ioArgument_ioCurrentBank,
                                                               const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                               GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                               const GALGAS_routineKind constinArgument_inRoutineKind,
                                                               C_Compiler * inCompiler
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_do_5F_while * object = (const cPtr_instruction_5F_do_5F_while *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_do_5F_while) ;
  GALGAS_lstring var_startLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1558)) COMMA_SOURCE_FILE_AT_LINE (1558)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1558)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1559)) ;
  GALGAS_lstring var_exitLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1560)) COMMA_SOURCE_FILE_AT_LINE (1560)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1560)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1561)) ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_currentBlockTerminator = ioArgument_ioCurrentBlock.mAttribute_mTerminator ;
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = GALGAS_ipic_31__38_JumpTerminator::constructor_new (var_startLabel COMMA_SOURCE_FILE_AT_LINE (1565)) ;
  ioArgument_ioGeneratedBlockList.addAssign_operation (ioArgument_ioCurrentBlock COMMA_SOURCE_FILE_AT_LINE (1566)) ;
  GALGAS_ipic_31__38_Block var_repeatedInstructionBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1569)), var_startLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1571)), var_currentBlockTerminator COMMA_SOURCE_FILE_AT_LINE (1568)) ;
  GALGAS_uint var_repeatedBranchFinalBank = ioArgument_ioCurrentBank ;
  GALGAS_bool var_repeatedInstructionsContinuesInSequence ;
  {
  routine_analyzeInstructionList (object->mAttribute_mRepeatedInstructionList, ioArgument_ioGeneratedBlockList, constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioLocalLabelIndex, var_repeatedInstructionBlock, ioArgument_ioListFileContents, var_repeatedBranchFinalBank, constinArgument_inShouldPreserveBSR, var_repeatedInstructionsContinuesInSequence, constinArgument_inRoutineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (1575)) ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, ioArgument_ioCurrentBank.objectCompare (var_repeatedBranchFinalBank)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mEndOfRepeatedInstructionList, GALGAS_string ("This branch does not leave BSR value unchanged") COMMA_SOURCE_FILE_AT_LINE (1592)) ;
  }
  const enumGalgasBool test_1 = var_repeatedInstructionsContinuesInSequence.operator_not (SOURCE_FILE_AT_LINE (1594)).boolEnum () ;
  if (kBoolTrue == test_1) {
    inCompiler->emitSemanticError (object->mAttribute_mEndOfRepeatedInstructionList, GALGAS_string ("This branch makes the next code unreachable") COMMA_SOURCE_FILE_AT_LINE (1595)) ;
  }
  ioArgument_ioGeneratedBlockList.addAssign_operation (var_repeatedInstructionBlock COMMA_SOURCE_FILE_AT_LINE (1597)) ;
  cEnumerator_partList enumerator_56147 (object->mAttribute_mWhilePartList, kEnumeration_up) ;
  while (enumerator_56147.hasCurrentObject ()) {
    GALGAS_lstring var_conditionTrueLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1601)) COMMA_SOURCE_FILE_AT_LINE (1601)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1601)) ;
    ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1602)) ;
    GALGAS_lstring var_conditionFalseLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1603)) COMMA_SOURCE_FILE_AT_LINE (1603)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1603)) ;
    ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1604)) ;
    GALGAS_ipic_31__38_AbstractBlockTerminator var_testTerminator ;
    callCategoryMethod_analyzeCondition ((const cPtr_conditionExpression *) enumerator_56147.current_mCondition (HERE).ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, ioArgument_ioLocalLabelIndex, GALGAS_bool (false), object->mAttribute_mInstructionLocation, ioArgument_ioGeneratedBlockList, var_conditionTrueLabel, var_conditionFalseLabel, var_testTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (1606)) ;
    ioArgument_ioCurrentBlock.mAttribute_mTerminator = var_testTerminator ;
    ioArgument_ioGeneratedBlockList.addAssign_operation (ioArgument_ioCurrentBlock COMMA_SOURCE_FILE_AT_LINE (1619)) ;
    ioArgument_ioCurrentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1621)), var_conditionTrueLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1623)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (var_startLabel COMMA_SOURCE_FILE_AT_LINE (1624)) COMMA_SOURCE_FILE_AT_LINE (1620)) ;
    GALGAS_uint var_branchFinalBank = ioArgument_ioCurrentBank ;
    GALGAS_bool var_branchInstructionsContinuesInSequence ;
    {
    routine_analyzeInstructionList (object->mAttribute_mRepeatedInstructionList, ioArgument_ioGeneratedBlockList, constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioLocalLabelIndex, var_repeatedInstructionBlock, ioArgument_ioListFileContents, var_branchFinalBank, constinArgument_inShouldPreserveBSR, var_branchInstructionsContinuesInSequence, constinArgument_inRoutineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (1627)) ;
    }
    const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, ioArgument_ioCurrentBank.objectCompare (var_branchFinalBank)).boolEnum () ;
    if (kBoolTrue == test_2) {
      inCompiler->emitSemanticError (enumerator_56147.current_mEndOfPartLocation (HERE), GALGAS_string ("This branch does not leave BSR value unchanged") COMMA_SOURCE_FILE_AT_LINE (1644)) ;
    }
    const enumGalgasBool test_3 = var_branchInstructionsContinuesInSequence.operator_not (SOURCE_FILE_AT_LINE (1646)).boolEnum () ;
    if (kBoolTrue == test_3) {
      inCompiler->emitSemanticError (enumerator_56147.current_mEndOfPartLocation (HERE), GALGAS_string ("This branch makes the next code unreachable") COMMA_SOURCE_FILE_AT_LINE (1647)) ;
    }
    ioArgument_ioGeneratedBlockList.addAssign_operation (ioArgument_ioCurrentBlock COMMA_SOURCE_FILE_AT_LINE (1649)) ;
    ioArgument_ioCurrentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1651)), var_conditionFalseLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1653)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (var_exitLabel COMMA_SOURCE_FILE_AT_LINE (1654)) COMMA_SOURCE_FILE_AT_LINE (1650)) ;
    enumerator_56147.gotoNextObject () ;
  }
  ioArgument_ioCurrentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1659)), var_exitLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1661)), var_currentBlockTerminator COMMA_SOURCE_FILE_AT_LINE (1658)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_do_5F_while_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_do_5F_while.mSlotID,
                               categoryMethod_instruction_5F_do_5F_while_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_do_5F_while_analyze (defineCategoryMethod_instruction_5F_do_5F_while_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Abstract category method '@conditionExpression analyzeCondition'      *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_conditionExpression_analyzeCondition> gCategoryMethodTable_conditionExpression_analyzeCondition ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeCondition (const PMSInt32 inClassIndex,
                                           categoryMethodSignature_conditionExpression_analyzeCondition inMethod) {
  gCategoryMethodTable_conditionExpression_analyzeCondition.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_conditionExpression_analyzeCondition (void) {
  gCategoryMethodTable_conditionExpression_analyzeCondition.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_conditionExpression_analyzeCondition (NULL,
                                                                 freeCategoryMethod_conditionExpression_analyzeCondition) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeCondition (const cPtr_conditionExpression * inObject,
                                          const GALGAS_uint constin_inAccessBankSplitOffset,
                                          const GALGAS_uint constin_inCurrentBank,
                                          const GALGAS_registerTable constin_inRegisterTable,
                                          GALGAS_uint & io_ioLocalLabelIndex,
                                          const GALGAS_bool constin_inComplementaryBranch,
                                          const GALGAS_location constin_inInstructionLocation,
                                          GALGAS_ipic_31__38_BlockList & io_ioGeneratedBlockList,
                                          const GALGAS_lstring constin_inConditionTrueLabel,
                                          const GALGAS_lstring constin_inConditionFalseLabel,
                                          GALGAS_ipic_31__38_AbstractBlockTerminator & out_outCurrentBlockTerminator,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) {
//--- Drop output arguments
  out_outCurrentBlockTerminator.drop () ;
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_conditionExpression) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_conditionExpression_analyzeCondition f = NULL ;
    if (classIndex < gCategoryMethodTable_conditionExpression_analyzeCondition.count ()) {
      f = gCategoryMethodTable_conditionExpression_analyzeCondition (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_conditionExpression_analyzeCondition.count ()) {
           f = gCategoryMethodTable_conditionExpression_analyzeCondition (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_conditionExpression_analyzeCondition.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAccessBankSplitOffset, constin_inCurrentBank, constin_inRegisterTable, io_ioLocalLabelIndex, constin_inComplementaryBranch, constin_inInstructionLocation, io_ioGeneratedBlockList, constin_inConditionTrueLabel, constin_inConditionFalseLabel, out_outCurrentBlockTerminator, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@bcc_in_structured_if_condition analyzeCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition (const cPtr_conditionExpression * inObject,
                                                                                        const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                                        const GALGAS_uint /* constinArgument_inCurrentBank */,
                                                                                        const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                                                        GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                                        const GALGAS_bool constinArgument_inComplementaryBranch,
                                                                                        const GALGAS_location /* constinArgument_inInstructionLocation */,
                                                                                        GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                                        const GALGAS_lstring constinArgument_inConditionTrueLabel,
                                                                                        const GALGAS_lstring constinArgument_inConditionFalseLabel,
                                                                                        GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outCurrentBlockTerminator,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_bcc_5F_in_5F_structured_5F_if_5F_condition * object = (const cPtr_bcc_5F_in_5F_structured_5F_if_5F_condition *) inObject ;
  macroValidSharedObject (object, const cPtr_bcc_5F_in_5F_structured_5F_if_5F_condition) ;
  GALGAS_conditional_5F_branch var_condition ;
  const enumGalgasBool test_0 = constinArgument_inComplementaryBranch.boolEnum () ;
  if (kBoolTrue == test_0) {
    {
    routine_getComplementaryBcc (object->mAttribute_mCondition, var_condition, inCompiler COMMA_SOURCE_FILE_AT_LINE (1701)) ;
    }
  }else if (kBoolFalse == test_0) {
    var_condition = object->mAttribute_mCondition ;
  }
  outArgument_outCurrentBlockTerminator = GALGAS_pic_31__38_BraCCTerminator::constructor_new (GALGAS_conditionalBranchMode::constructor_native (SOURCE_FILE_AT_LINE (1707)), var_condition, GALGAS_bool (true), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inConditionTrueLabel COMMA_SOURCE_FILE_AT_LINE (1710)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inConditionFalseLabel COMMA_SOURCE_FILE_AT_LINE (1711)) COMMA_SOURCE_FILE_AT_LINE (1706)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition (void) {
  enterCategoryMethod_analyzeCondition (kTypeDescriptor_GALGAS_bcc_5F_in_5F_structured_5F_if_5F_condition.mSlotID,
                                        categoryMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition (defineCategoryMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@registerComparisonCondition analyzeCondition' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_registerComparisonCondition_analyzeCondition (const cPtr_conditionExpression * inObject,
                                                                         const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                         const GALGAS_uint constinArgument_inCurrentBank,
                                                                         const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                         GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                         const GALGAS_bool constinArgument_inComplementaryBranch,
                                                                         const GALGAS_location /* constinArgument_inInstructionLocation */,
                                                                         GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                         const GALGAS_lstring constinArgument_inConditionTrueLabel,
                                                                         const GALGAS_lstring constinArgument_inConditionFalseLabel,
                                                                         GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outCurrentBlockTerminator,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_registerComparisonCondition * object = (const cPtr_registerComparisonCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_registerComparisonCondition) ;
  GALGAS_pic_31__38_RegisterComparison var_comparison ;
  const enumGalgasBool test_0 = constinArgument_inComplementaryBranch.boolEnum () ;
  if (kBoolTrue == test_0) {
    {
    routine_registerComparisonComplementary (object->mAttribute_mComparison, var_comparison, inCompiler COMMA_SOURCE_FILE_AT_LINE (1731)) ;
    }
  }else if (kBoolFalse == test_0) {
    var_comparison = object->mAttribute_mComparison ;
  }
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_60809_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, joker_60809_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1736)) ;
  outArgument_outCurrentBlockTerminator = GALGAS_pic_31__38_RegisterComparisonTerminator::constructor_new (var_IPICregisterDescription, var_comparison, GALGAS_bool (true), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inConditionTrueLabel COMMA_SOURCE_FILE_AT_LINE (1748)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inConditionFalseLabel COMMA_SOURCE_FILE_AT_LINE (1749)) COMMA_SOURCE_FILE_AT_LINE (1744)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_registerComparisonCondition_analyzeCondition (void) {
  enterCategoryMethod_analyzeCondition (kTypeDescriptor_GALGAS_registerComparisonCondition.mSlotID,
                                        categoryMethod_registerComparisonCondition_analyzeCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_registerComparisonCondition_analyzeCondition (defineCategoryMethod_registerComparisonCondition_analyzeCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@incDecRegisterInCondition analyzeCondition'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_incDecRegisterInCondition_analyzeCondition (const cPtr_conditionExpression * inObject,
                                                                       const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                       const GALGAS_uint constinArgument_inCurrentBank,
                                                                       const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                       GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                       const GALGAS_bool constinArgument_inComplementaryBranch,
                                                                       const GALGAS_location /* constinArgument_inInstructionLocation */,
                                                                       GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                       const GALGAS_lstring constinArgument_inConditionTrueLabel,
                                                                       const GALGAS_lstring constinArgument_inConditionFalseLabel,
                                                                       GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outCurrentBlockTerminator,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_incDecRegisterInCondition * object = (const cPtr_incDecRegisterInCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_incDecRegisterInCondition) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_61827_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, joker_61827_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1767)) ;
  outArgument_outCurrentBlockTerminator = GALGAS_ipic_31__38_IncDecRegisterTerminator::constructor_new (var_IPICregisterDescription, object->mAttribute_mIncrement, object->mAttribute_m_5F_W_5F_isDestination, object->mAttribute_mBranchIfZero.operator_xor (constinArgument_inComplementaryBranch COMMA_SOURCE_FILE_AT_LINE (1779)), GALGAS_bool (true), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inConditionTrueLabel COMMA_SOURCE_FILE_AT_LINE (1781)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inConditionFalseLabel COMMA_SOURCE_FILE_AT_LINE (1782)) COMMA_SOURCE_FILE_AT_LINE (1775)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_incDecRegisterInCondition_analyzeCondition (void) {
  enterCategoryMethod_analyzeCondition (kTypeDescriptor_GALGAS_incDecRegisterInCondition.mSlotID,
                                        categoryMethod_incDecRegisterInCondition_analyzeCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_incDecRegisterInCondition_analyzeCondition (defineCategoryMethod_incDecRegisterInCondition_analyzeCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@registerTestCondition analyzeCondition'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_registerTestCondition_analyzeCondition (const cPtr_conditionExpression * inObject,
                                                                   const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                   const GALGAS_uint constinArgument_inCurrentBank,
                                                                   const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                   GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                   const GALGAS_bool constinArgument_inComplementaryBranch,
                                                                   const GALGAS_location /* constinArgument_inInstructionLocation */,
                                                                   GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                   const GALGAS_lstring constinArgument_inConditionTrueLabel,
                                                                   const GALGAS_lstring constinArgument_inConditionFalseLabel,
                                                                   GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outCurrentBlockTerminator,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_registerTestCondition * object = (const cPtr_registerTestCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_registerTestCondition) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_62904_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, joker_62904_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1800)) ;
  outArgument_outCurrentBlockTerminator = GALGAS_pic_31__38_TestRegisterTerminator::constructor_new (var_IPICregisterDescription, object->mAttribute_mBranchIfZero.operator_xor (constinArgument_inComplementaryBranch COMMA_SOURCE_FILE_AT_LINE (1810)), GALGAS_bool (true), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inConditionTrueLabel COMMA_SOURCE_FILE_AT_LINE (1812)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inConditionFalseLabel COMMA_SOURCE_FILE_AT_LINE (1813)) COMMA_SOURCE_FILE_AT_LINE (1808)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_registerTestCondition_analyzeCondition (void) {
  enterCategoryMethod_analyzeCondition (kTypeDescriptor_GALGAS_registerTestCondition.mSlotID,
                                        categoryMethod_registerTestCondition_analyzeCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_registerTestCondition_analyzeCondition (defineCategoryMethod_registerTestCondition_analyzeCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@bitTest_in_structured_if_condition analyzeCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition (const cPtr_conditionExpression * inObject,
                                                                                            const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                                            const GALGAS_uint constinArgument_inCurrentBank,
                                                                                            const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                                            GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                                            const GALGAS_bool constinArgument_inComplementaryBranch,
                                                                                            const GALGAS_location /* constinArgument_inInstructionLocation */,
                                                                                            GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                                            const GALGAS_lstring constinArgument_inConditionTrueLabel,
                                                                                            const GALGAS_lstring constinArgument_inConditionFalseLabel,
                                                                                            GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outCurrentBlockTerminator,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_bitTest_5F_in_5F_structured_5F_if_5F_condition * object = (const cPtr_bitTest_5F_in_5F_structured_5F_if_5F_condition *) inObject ;
  macroValidSharedObject (object, const cPtr_bitTest_5F_in_5F_structured_5F_if_5F_condition) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable var_bitSliceTable ;
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, var_bitSliceTable, inCompiler COMMA_SOURCE_FILE_AT_LINE (1831)) ;
  GALGAS_uint var_bitNumber ;
  callCategoryMethod_getBitNumber ((const cPtr_bitNumberExpression *) object->mAttribute_mBitNumber.ptr (), var_bitSliceTable, var_bitNumber, inCompiler COMMA_SOURCE_FILE_AT_LINE (1838)) ;
  outArgument_outCurrentBlockTerminator = GALGAS_pic_31__38_BitTestTerminator::constructor_new (object->mAttribute_mBTFSSinstruction.operator_xor (constinArgument_inComplementaryBranch COMMA_SOURCE_FILE_AT_LINE (1844)), var_IPICregisterDescription, var_bitNumber, GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inConditionTrueLabel COMMA_SOURCE_FILE_AT_LINE (1847)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inConditionFalseLabel COMMA_SOURCE_FILE_AT_LINE (1848)) COMMA_SOURCE_FILE_AT_LINE (1843)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition (void) {
  enterCategoryMethod_analyzeCondition (kTypeDescriptor_GALGAS_bitTest_5F_in_5F_structured_5F_if_5F_condition.mSlotID,
                                        categoryMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition (defineCategoryMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category method '@negateCondition analyzeCondition'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_negateCondition_analyzeCondition (const cPtr_conditionExpression * inObject,
                                                             const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                             const GALGAS_uint constinArgument_inCurrentBank,
                                                             const GALGAS_registerTable constinArgument_inRegisterTable,
                                                             GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                             const GALGAS_bool constinArgument_inComplementaryBranch,
                                                             const GALGAS_location constinArgument_inInstructionLocation,
                                                             GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                                             const GALGAS_lstring constinArgument_inConditionTrueLabel,
                                                             const GALGAS_lstring constinArgument_inConditionFalseLabel,
                                                             GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outCurrentBlockTerminator,
                                                             C_Compiler * inCompiler
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_negateCondition * object = (const cPtr_negateCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_negateCondition) ;
  callCategoryMethod_analyzeCondition ((const cPtr_conditionExpression *) object->mAttribute_mCondition.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inCurrentBank, constinArgument_inRegisterTable, ioArgument_ioLocalLabelIndex, constinArgument_inComplementaryBranch, constinArgument_inInstructionLocation, ioArgument_ioGeneratedBlockList, constinArgument_inConditionFalseLabel, constinArgument_inConditionTrueLabel, outArgument_outCurrentBlockTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (1873)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_negateCondition_analyzeCondition (void) {
  enterCategoryMethod_analyzeCondition (kTypeDescriptor_GALGAS_negateCondition.mSlotID,
                                        categoryMethod_negateCondition_analyzeCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_negateCondition_analyzeCondition (defineCategoryMethod_negateCondition_analyzeCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category method '@andCondition analyzeCondition'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_andCondition_analyzeCondition (const cPtr_conditionExpression * inObject,
                                                          const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                          const GALGAS_uint constinArgument_inCurrentBank,
                                                          const GALGAS_registerTable constinArgument_inRegisterTable,
                                                          GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                          const GALGAS_bool constinArgument_inComplementaryBranch,
                                                          const GALGAS_location constinArgument_inInstructionLocation,
                                                          GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                                          const GALGAS_lstring constinArgument_inConditionTrueLabel,
                                                          const GALGAS_lstring constinArgument_inConditionFalseLabel,
                                                          GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outCurrentBlockTerminator,
                                                          C_Compiler * inCompiler
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_andCondition * object = (const cPtr_andCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_andCondition) ;
  GALGAS_lstring var_conditionTrueLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1902)) COMMA_SOURCE_FILE_AT_LINE (1902)), constinArgument_inInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1902)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1903)) ;
  callCategoryMethod_analyzeCondition ((const cPtr_conditionExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inCurrentBank, constinArgument_inRegisterTable, ioArgument_ioLocalLabelIndex, constinArgument_inComplementaryBranch, constinArgument_inInstructionLocation, ioArgument_ioGeneratedBlockList, var_conditionTrueLabel, constinArgument_inConditionFalseLabel, outArgument_outCurrentBlockTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (1905)) ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_secondTestBlockTerminator ;
  callCategoryMethod_analyzeCondition ((const cPtr_conditionExpression *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inCurrentBank, constinArgument_inRegisterTable, ioArgument_ioLocalLabelIndex, constinArgument_inComplementaryBranch, constinArgument_inInstructionLocation, ioArgument_ioGeneratedBlockList, constinArgument_inConditionTrueLabel, constinArgument_inConditionFalseLabel, var_secondTestBlockTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (1918)) ;
  ioArgument_ioGeneratedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1932)), var_conditionTrueLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1934)), var_secondTestBlockTerminator COMMA_SOURCE_FILE_AT_LINE (1931)) COMMA_SOURCE_FILE_AT_LINE (1931)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_andCondition_analyzeCondition (void) {
  enterCategoryMethod_analyzeCondition (kTypeDescriptor_GALGAS_andCondition.mSlotID,
                                        categoryMethod_andCondition_analyzeCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_andCondition_analyzeCondition (defineCategoryMethod_andCondition_analyzeCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Abstract category method '@conditionExpression instructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_conditionExpression_instructionCountForCondition> gCategoryMethodTable_conditionExpression_instructionCountForCondition ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_instructionCountForCondition (const PMSInt32 inClassIndex,
                                                       categoryMethodSignature_conditionExpression_instructionCountForCondition inMethod) {
  gCategoryMethodTable_conditionExpression_instructionCountForCondition.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_conditionExpression_instructionCountForCondition (void) {
  gCategoryMethodTable_conditionExpression_instructionCountForCondition.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_conditionExpression_instructionCountForCondition (NULL,
                                                                             freeCategoryMethod_conditionExpression_instructionCountForCondition) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_instructionCountForCondition (const cPtr_conditionExpression * inObject,
                                                      const GALGAS_bool constin_inComplementaryBranch,
                                                      GALGAS_uint & out_outInstructionCount,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
//--- Drop output arguments
  out_outInstructionCount.drop () ;
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_conditionExpression) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_conditionExpression_instructionCountForCondition f = NULL ;
    if (classIndex < gCategoryMethodTable_conditionExpression_instructionCountForCondition.count ()) {
      f = gCategoryMethodTable_conditionExpression_instructionCountForCondition (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_conditionExpression_instructionCountForCondition.count ()) {
           f = gCategoryMethodTable_conditionExpression_instructionCountForCondition (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_conditionExpression_instructionCountForCondition.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inComplementaryBranch, out_outInstructionCount, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@bcc_in_structured_if_condition instructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_instructionCountForCondition (const cPtr_conditionExpression * /* inObject */,
                                                                                                    const GALGAS_bool /* constinArgument_inComplementaryBranch */,
                                                                                                    GALGAS_uint & outArgument_outInstructionCount,
                                                                                                    C_Compiler * /* inCompiler */
                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outInstructionCount = GALGAS_uint ((PMUInt32) 2U) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_instructionCountForCondition (void) {
  enterCategoryMethod_instructionCountForCondition (kTypeDescriptor_GALGAS_bcc_5F_in_5F_structured_5F_if_5F_condition.mSlotID,
                                                    categoryMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_instructionCountForCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_instructionCountForCondition (defineCategoryMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_instructionCountForCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@registerComparisonCondition instructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_registerComparisonCondition_instructionCountForCondition (const cPtr_conditionExpression * inObject,
                                                                                     const GALGAS_bool constinArgument_inComplementaryBranch,
                                                                                     GALGAS_uint & outArgument_outInstructionCount,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_registerComparisonCondition * object = (const cPtr_registerComparisonCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_registerComparisonCondition) ;
  GALGAS_pic_31__38_RegisterComparison var_comparison ;
  const enumGalgasBool test_0 = constinArgument_inComplementaryBranch.boolEnum () ;
  if (kBoolTrue == test_0) {
    {
    routine_registerComparisonComplementary (object->mAttribute_mComparison, var_comparison, inCompiler COMMA_SOURCE_FILE_AT_LINE (2048)) ;
    }
  }else if (kBoolFalse == test_0) {
    var_comparison = object->mAttribute_mComparison ;
  }
  {
  routine_registerComparisonInstructionCount (var_comparison, outArgument_outInstructionCount, inCompiler COMMA_SOURCE_FILE_AT_LINE (2052)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_registerComparisonCondition_instructionCountForCondition (void) {
  enterCategoryMethod_instructionCountForCondition (kTypeDescriptor_GALGAS_registerComparisonCondition.mSlotID,
                                                    categoryMethod_registerComparisonCondition_instructionCountForCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_registerComparisonCondition_instructionCountForCondition (defineCategoryMethod_registerComparisonCondition_instructionCountForCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@incDecRegisterInCondition instructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_incDecRegisterInCondition_instructionCountForCondition (const cPtr_conditionExpression * /* inObject */,
                                                                                   const GALGAS_bool /* constinArgument_inComplementaryBranch */,
                                                                                   GALGAS_uint & outArgument_outInstructionCount,
                                                                                   C_Compiler * /* inCompiler */
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outInstructionCount = GALGAS_uint ((PMUInt32) 2U) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_incDecRegisterInCondition_instructionCountForCondition (void) {
  enterCategoryMethod_instructionCountForCondition (kTypeDescriptor_GALGAS_incDecRegisterInCondition.mSlotID,
                                                    categoryMethod_incDecRegisterInCondition_instructionCountForCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_incDecRegisterInCondition_instructionCountForCondition (defineCategoryMethod_incDecRegisterInCondition_instructionCountForCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@registerTestCondition instructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_registerTestCondition_instructionCountForCondition (const cPtr_conditionExpression * inObject,
                                                                               const GALGAS_bool constinArgument_inComplementaryBranch,
                                                                               GALGAS_uint & outArgument_outInstructionCount,
                                                                               C_Compiler * /* inCompiler */
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_registerTestCondition * object = (const cPtr_registerTestCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_registerTestCondition) ;
  const enumGalgasBool test_0 = object->mAttribute_mBranchIfZero.operator_xor (constinArgument_inComplementaryBranch COMMA_SOURCE_FILE_AT_LINE (2070)).boolEnum () ;
  if (kBoolTrue == test_0) {
    outArgument_outInstructionCount = GALGAS_uint ((PMUInt32) 3U) ;
  }else if (kBoolFalse == test_0) {
    outArgument_outInstructionCount = GALGAS_uint ((PMUInt32) 2U) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_registerTestCondition_instructionCountForCondition (void) {
  enterCategoryMethod_instructionCountForCondition (kTypeDescriptor_GALGAS_registerTestCondition.mSlotID,
                                                    categoryMethod_registerTestCondition_instructionCountForCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_registerTestCondition_instructionCountForCondition (defineCategoryMethod_registerTestCondition_instructionCountForCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@negateCondition instructionCountForCondition' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_negateCondition_instructionCountForCondition (const cPtr_conditionExpression * inObject,
                                                                         const GALGAS_bool constinArgument_inComplementaryBranch,
                                                                         GALGAS_uint & outArgument_outInstructionCount,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_negateCondition * object = (const cPtr_negateCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_negateCondition) ;
  callCategoryMethod_instructionCountForCondition ((const cPtr_conditionExpression *) object->mAttribute_mCondition.ptr (), constinArgument_inComplementaryBranch.operator_not (SOURCE_FILE_AT_LINE (2084)), outArgument_outInstructionCount, inCompiler COMMA_SOURCE_FILE_AT_LINE (2083)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_negateCondition_instructionCountForCondition (void) {
  enterCategoryMethod_instructionCountForCondition (kTypeDescriptor_GALGAS_negateCondition.mSlotID,
                                                    categoryMethod_negateCondition_instructionCountForCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_negateCondition_instructionCountForCondition (defineCategoryMethod_negateCondition_instructionCountForCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@andCondition instructionCountForCondition'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_andCondition_instructionCountForCondition (const cPtr_conditionExpression * inObject,
                                                                      const GALGAS_bool constinArgument_inComplementaryBranch,
                                                                      GALGAS_uint & outArgument_outInstructionCount,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_andCondition * object = (const cPtr_andCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_andCondition) ;
  GALGAS_uint var_countLeft ;
  callCategoryMethod_instructionCountForCondition ((const cPtr_conditionExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inComplementaryBranch, var_countLeft, inCompiler COMMA_SOURCE_FILE_AT_LINE (2096)) ;
  GALGAS_uint var_countRight ;
  callCategoryMethod_instructionCountForCondition ((const cPtr_conditionExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inComplementaryBranch, var_countRight, inCompiler COMMA_SOURCE_FILE_AT_LINE (2101)) ;
  outArgument_outInstructionCount = var_countLeft.add_operation (var_countRight, inCompiler COMMA_SOURCE_FILE_AT_LINE (2105)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_andCondition_instructionCountForCondition (void) {
  enterCategoryMethod_instructionCountForCondition (kTypeDescriptor_GALGAS_andCondition.mSlotID,
                                                    categoryMethod_andCondition_instructionCountForCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_andCondition_instructionCountForCondition (defineCategoryMethod_andCondition_instructionCountForCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@bitTest_in_structured_if_condition instructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_instructionCountForCondition (const cPtr_conditionExpression * /* inObject */,
                                                                                                        const GALGAS_bool /* constinArgument_inComplementaryBranch */,
                                                                                                        GALGAS_uint & outArgument_outInstructionCount,
                                                                                                        C_Compiler * /* inCompiler */
                                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outInstructionCount = GALGAS_uint ((PMUInt32) 2U) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_instructionCountForCondition (void) {
  enterCategoryMethod_instructionCountForCondition (kTypeDescriptor_GALGAS_bitTest_5F_in_5F_structured_5F_if_5F_condition.mSlotID,
                                                    categoryMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_instructionCountForCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_instructionCountForCondition (defineCategoryMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_instructionCountForCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Abstract category method '@ipic18SequentialInstruction display'      *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_ipic_31__38_SequentialInstruction_display> gCategoryMethodTable_ipic_31__38_SequentialInstruction_display ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_display (const PMSInt32 inClassIndex,
                                  categoryMethodSignature_ipic_31__38_SequentialInstruction_display inMethod) {
  gCategoryMethodTable_ipic_31__38_SequentialInstruction_display.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_ipic_31__38_SequentialInstruction_display (void) {
  gCategoryMethodTable_ipic_31__38_SequentialInstruction_display.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_SequentialInstruction_display (NULL,
                                                                      freeCategoryMethod_ipic_31__38_SequentialInstruction_display) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                 GALGAS_string & io_ioListFileContents,
                                 C_Compiler * inCompiler
                                 COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_ipic_31__38_SequentialInstruction) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_ipic_31__38_SequentialInstruction_display f = NULL ;
    if (classIndex < gCategoryMethodTable_ipic_31__38_SequentialInstruction_display.count ()) {
      f = gCategoryMethodTable_ipic_31__38_SequentialInstruction_display (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_ipic_31__38_SequentialInstruction_display.count ()) {
           f = gCategoryMethodTable_ipic_31__38_SequentialInstruction_display (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_ipic_31__38_SequentialInstruction_display.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, io_ioListFileContents, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@ipic18InstructionWithNoOperand display'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_InstructionWithNoOperand_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                         GALGAS_string & ioArgument_ioListFileContents,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38_InstructionWithNoOperand * object = (const cPtr_ipic_31__38_InstructionWithNoOperand *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38_InstructionWithNoOperand) ;
  ioArgument_ioListFileContents.dotAssign_operation (categoryReader_assemblyCode (object->mAttribute_mKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (2132)) COMMA_SOURCE_FILE_AT_LINE (2132)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_InstructionWithNoOperand_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38_InstructionWithNoOperand.mSlotID,
                               categoryMethod_ipic_31__38_InstructionWithNoOperand_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_InstructionWithNoOperand_display (defineCategoryMethod_ipic_31__38_InstructionWithNoOperand_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@ipic18_intermediate_instruction_FDA display' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                       GALGAS_string & ioArgument_ioListFileContents,
                                                                                       C_Compiler * inCompiler
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA) ;
  ioArgument_ioListFileContents.dotAssign_operation (categoryReader_mnemonic (object->mAttribute_mInstruction_5F_FDA_5F_base_5F_code, inCompiler COMMA_SOURCE_FILE_AT_LINE (2140)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (2140)).operator_concat (object->mAttribute_mRegisterDescription.reader_mAssemblyString (SOURCE_FILE_AT_LINE (2140)) COMMA_SOURCE_FILE_AT_LINE (2140)) COMMA_SOURCE_FILE_AT_LINE (2140)) ;
  const enumGalgasBool test_0 = object->mAttribute_m_5F_W_5F_isDestination.operator_and (object->mAttribute_mRegisterDescription.reader_mNeedsBSR (SOURCE_FILE_AT_LINE (2141)) COMMA_SOURCE_FILE_AT_LINE (2141)).boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (", W, BSR_ACCESS") COMMA_SOURCE_FILE_AT_LINE (2142)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = object->mAttribute_mRegisterDescription.reader_mNeedsBSR (SOURCE_FILE_AT_LINE (2143)).boolEnum () ;
    if (kBoolTrue == test_1) {
      ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (", F, BSR_ACCESS") COMMA_SOURCE_FILE_AT_LINE (2144)) ;
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_2 = object->mAttribute_m_5F_W_5F_isDestination.boolEnum () ;
      if (kBoolTrue == test_2) {
        ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (", W") COMMA_SOURCE_FILE_AT_LINE (2146)) ;
      }else if (kBoolFalse == test_2) {
        ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (", F") COMMA_SOURCE_FILE_AT_LINE (2148)) ;
      }
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@ipic18_intermediate_instruction_FA display'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FA_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                      GALGAS_string & ioArgument_ioListFileContents,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_FA * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_FA *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_FA) ;
  ioArgument_ioListFileContents.dotAssign_operation (categoryReader_mnemonic (object->mAttribute_mFAinstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (2155)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (2155)).operator_concat (object->mAttribute_mRegisterDescription.reader_mAssemblyString (SOURCE_FILE_AT_LINE (2155)) COMMA_SOURCE_FILE_AT_LINE (2155)) COMMA_SOURCE_FILE_AT_LINE (2155)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FA_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FA_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FA_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FA_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18_intermediate_instruction_MOVFF display'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                         GALGAS_string & ioArgument_ioListFileContents,
                                                                                         C_Compiler * /* inCompiler */
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("MOVFF ").operator_concat (object->mAttribute_mSourceRegisterDescription.reader_mAssemblyString (SOURCE_FILE_AT_LINE (2161)) COMMA_SOURCE_FILE_AT_LINE (2161)).operator_concat (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (2162)).operator_concat (object->mAttribute_mDestinationRegisterDescription.reader_mAssemblyString (SOURCE_FILE_AT_LINE (2162)) COMMA_SOURCE_FILE_AT_LINE (2162)) COMMA_SOURCE_FILE_AT_LINE (2161)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18_intermediate_instruction_literalOperation display'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                                    GALGAS_string & ioArgument_ioListFileContents,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation) ;
  ioArgument_ioListFileContents.dotAssign_operation (categoryReader_mnemonic (object->mAttribute_mLiteralInstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (2168)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (2168)).operator_concat (object->mAttribute_mLiteralValue.reader_hexString (SOURCE_FILE_AT_LINE (2168)) COMMA_SOURCE_FILE_AT_LINE (2168)) COMMA_SOURCE_FILE_AT_LINE (2168)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18_intermediate_instruction_LFSR display' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_LFSR_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                        GALGAS_string & ioArgument_ioListFileContents,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_LFSR * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_LFSR *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_LFSR) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("LFSR ").operator_concat (object->mAttribute_mFSRindex.reader_uint (SOURCE_FILE_AT_LINE (2174)).reader_string (SOURCE_FILE_AT_LINE (2174)) COMMA_SOURCE_FILE_AT_LINE (2174)).operator_concat (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (2174)).operator_concat (object->mAttribute_mValue.reader_hexString (SOURCE_FILE_AT_LINE (2174)) COMMA_SOURCE_FILE_AT_LINE (2174)) COMMA_SOURCE_FILE_AT_LINE (2174)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_LFSR_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_LFSR.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_LFSR_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_LFSR_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_LFSR_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@ipic18_intermediate_instruction_FBA display' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FBA_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                       GALGAS_string & ioArgument_ioListFileContents,
                                                                                       C_Compiler * inCompiler
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_FBA * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_FBA *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_FBA) ;
  ioArgument_ioListFileContents.dotAssign_operation (categoryReader_mnemonic (object->mAttribute_mBitOrientedOp, inCompiler COMMA_SOURCE_FILE_AT_LINE (2180)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (2180)).operator_concat (object->mAttribute_mRegisterDescription.reader_mAssemblyString (SOURCE_FILE_AT_LINE (2180)) COMMA_SOURCE_FILE_AT_LINE (2180)).operator_concat (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (2180)).operator_concat (object->mAttribute_mBitNumber.reader_string (SOURCE_FILE_AT_LINE (2180)) COMMA_SOURCE_FILE_AT_LINE (2180)) COMMA_SOURCE_FILE_AT_LINE (2180)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FBA_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FBA.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FBA_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FBA_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_FBA_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Overriding category method '@ipic18_intermediate_JSR display'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_JSR_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                        GALGAS_string & ioArgument_ioListFileContents,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_JSR * object = (const cPtr_ipic_31__38__5F_intermediate_5F_JSR *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_JSR) ;
  if (object->mAttribute_mKind.isValid ()) {
    switch (object->mAttribute_mKind.enumValue ()) {
    case GALGAS_jumpInstructionKind::kNotBuilt:
      break ;
    case GALGAS_jumpInstructionKind::kEnum_ipicRelative: {
      ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("BSR ").operator_concat (object->mAttribute_mTargetLabel.reader_string (SOURCE_FILE_AT_LINE (2187)) COMMA_SOURCE_FILE_AT_LINE (2187)) COMMA_SOURCE_FILE_AT_LINE (2187)) ;
      } break ;
    case GALGAS_jumpInstructionKind::kEnum_ipicAbsolute: {
      ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("JSR ").operator_concat (object->mAttribute_mTargetLabel.reader_string (SOURCE_FILE_AT_LINE (2188)) COMMA_SOURCE_FILE_AT_LINE (2188)) COMMA_SOURCE_FILE_AT_LINE (2188)) ;
      } break ;
    case GALGAS_jumpInstructionKind::kEnum_relative: {
      ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("RCALL ").operator_concat (object->mAttribute_mTargetLabel.reader_string (SOURCE_FILE_AT_LINE (2189)) COMMA_SOURCE_FILE_AT_LINE (2189)) COMMA_SOURCE_FILE_AT_LINE (2189)) ;
      } break ;
    case GALGAS_jumpInstructionKind::kEnum_absolute: {
      ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("CALL ").operator_concat (object->mAttribute_mTargetLabel.reader_string (SOURCE_FILE_AT_LINE (2190)) COMMA_SOURCE_FILE_AT_LINE (2190)) COMMA_SOURCE_FILE_AT_LINE (2190)) ;
      } break ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_JSR_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_JSR.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_JSR_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_JSR_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_JSR_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18_intermediate_instruction_MOVLB display'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                         GALGAS_string & ioArgument_ioListFileContents,
                                                                                         C_Compiler * /* inCompiler */
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("MOVLB ").operator_concat (object->mAttribute_mBankIndex.reader_uint (SOURCE_FILE_AT_LINE (2197)).reader_string (SOURCE_FILE_AT_LINE (2197)) COMMA_SOURCE_FILE_AT_LINE (2197)) COMMA_SOURCE_FILE_AT_LINE (2197)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18_intermediate_instruction_TBLRD display'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLRD_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                         GALGAS_string & ioArgument_ioListFileContents,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLRD * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLRD *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLRD) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("TBLRD ").operator_concat (categoryReader_mnemonic (object->mAttribute_mOption, inCompiler COMMA_SOURCE_FILE_AT_LINE (2203)) COMMA_SOURCE_FILE_AT_LINE (2203)) COMMA_SOURCE_FILE_AT_LINE (2203)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLRD_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLRD.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLRD_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLRD_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLRD_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18_intermediate_instruction_TBLWT display'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLWT_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                         GALGAS_string & ioArgument_ioListFileContents,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLWT * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLWT *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLWT) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("TBLWT ").operator_concat (categoryReader_mnemonic (object->mAttribute_mOption, inCompiler COMMA_SOURCE_FILE_AT_LINE (2209)) COMMA_SOURCE_FILE_AT_LINE (2209)) COMMA_SOURCE_FILE_AT_LINE (2209)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLWT_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLWT.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLWT_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLWT_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLWT_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18_intermediate_instruction_MNOP display' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MNOP_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                        GALGAS_string & ioArgument_ioListFileContents,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_MNOP * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_MNOP *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_MNOP) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("MNOP ").operator_concat (object->mAttribute_mOccurrenceFactor.reader_uint (SOURCE_FILE_AT_LINE (2215)).reader_string (SOURCE_FILE_AT_LINE (2215)) COMMA_SOURCE_FILE_AT_LINE (2215)) COMMA_SOURCE_FILE_AT_LINE (2215)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MNOP_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MNOP.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MNOP_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MNOP_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_MNOP_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@ipic18_intermediate_MOV_LABEL_W display'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                      GALGAS_string & ioArgument_ioListFileContents,
                                                                                      C_Compiler * /* inCompiler */
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W * object = (const cPtr_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("MOVLW ((").operator_concat (object->mAttribute_mLabel.reader_string (SOURCE_FILE_AT_LINE (2221)) COMMA_SOURCE_FILE_AT_LINE (2221)).operator_concat (GALGAS_string (" + ") COMMA_SOURCE_FILE_AT_LINE (2221)).operator_concat (object->mAttribute_mOffset.reader_string (SOURCE_FILE_AT_LINE (2221)) COMMA_SOURCE_FILE_AT_LINE (2221)).operator_concat (GALGAS_string (") >> ") COMMA_SOURCE_FILE_AT_LINE (2221)).operator_concat (object->mAttribute_mRightShift.reader_string (SOURCE_FILE_AT_LINE (2221)) COMMA_SOURCE_FILE_AT_LINE (2221)).operator_concat (GALGAS_string (") & 0xFF") COMMA_SOURCE_FILE_AT_LINE (2221)) COMMA_SOURCE_FILE_AT_LINE (2221)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18_intermediate_instruction_computed_rcall display'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                                     GALGAS_string & ioArgument_ioListFileContents,
                                                                                                     C_Compiler * /* inCompiler */
                                                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("COMPUTED RCALL ") COMMA_SOURCE_FILE_AT_LINE (2227)) ;
  const enumGalgasBool test_0 = object->mAttribute_mUsesRCALL.boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("(uses RCALL)") COMMA_SOURCE_FILE_AT_LINE (2229)) ;
  }else if (kBoolFalse == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("(uses CALL)") COMMA_SOURCE_FILE_AT_LINE (2231)) ;
  }
  cEnumerator_lstringlist enumerator_77143 (object->mAttribute_mTargetLabels, kEnumeration_up) ;
  while (enumerator_77143.hasCurrentObject ()) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("\n"
      "    ").operator_concat (enumerator_77143.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (2234)) COMMA_SOURCE_FILE_AT_LINE (2234)) COMMA_SOURCE_FILE_AT_LINE (2234)) ;
    enumerator_77143.gotoNextObject () ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18_intermediate_instruction_BitTestSkip display'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_BitTestSkip_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                               GALGAS_string & ioArgument_ioListFileContents,
                                                                                               C_Compiler * inCompiler
                                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_BitTestSkip * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_BitTestSkip *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_BitTestSkip) ;
  const enumGalgasBool test_0 = object->mAttribute_mSkipIfSet.boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("!") COMMA_SOURCE_FILE_AT_LINE (2242)) ;
  }
  ioArgument_ioListFileContents.dotAssign_operation (object->mAttribute_mRegisterDescription.reader_mAssemblyString (SOURCE_FILE_AT_LINE (2244)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (2244)).operator_concat (object->mAttribute_mBitNumber.reader_string (SOURCE_FILE_AT_LINE (2244)) COMMA_SOURCE_FILE_AT_LINE (2244)).operator_concat (GALGAS_string (" \?\n"
    "    ") COMMA_SOURCE_FILE_AT_LINE (2245)) COMMA_SOURCE_FILE_AT_LINE (2244)) ;
  callCategoryMethod_display ((const cPtr_ipic_31__38_SequentialInstruction *) object->mAttribute_mEmbeddedInstruction.ptr (), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2246)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_BitTestSkip_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_BitTestSkip.mSlotID,
                               categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_BitTestSkip_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_BitTestSkip_display (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_BitTestSkip_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@ipic18_skip_instruction_FA display'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_skip_5F_instruction_5F_FA_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                              GALGAS_string & ioArgument_ioListFileContents,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_skip_5F_instruction_5F_FA * object = (const cPtr_ipic_31__38__5F_skip_5F_instruction_5F_FA *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_skip_5F_instruction_5F_FA) ;
  ioArgument_ioListFileContents.dotAssign_operation (categoryReader_mnemonic (object->mAttribute_mFAinstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (2252)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (2252)).operator_concat (object->mAttribute_mRegisterDescription.reader_mAssemblyString (SOURCE_FILE_AT_LINE (2252)) COMMA_SOURCE_FILE_AT_LINE (2252)).operator_concat (GALGAS_string (" \?\n"
    "    ") COMMA_SOURCE_FILE_AT_LINE (2253)) COMMA_SOURCE_FILE_AT_LINE (2252)) ;
  callCategoryMethod_display ((const cPtr_ipic_31__38_SequentialInstruction *) object->mAttribute_mEmbeddedInstruction.ptr (), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2254)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_skip_5F_instruction_5F_FA_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_skip_5F_instruction_5F_FA.mSlotID,
                               categoryMethod_ipic_31__38__5F_skip_5F_instruction_5F_FA_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_skip_5F_instruction_5F_FA_display (defineCategoryMethod_ipic_31__38__5F_skip_5F_instruction_5F_FA_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@ipic18_skip_instruction_FDA display'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_skip_5F_instruction_5F_FDA_display (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                               GALGAS_string & ioArgument_ioListFileContents,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_skip_5F_instruction_5F_FDA * object = (const cPtr_ipic_31__38__5F_skip_5F_instruction_5F_FDA *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_skip_5F_instruction_5F_FDA) ;
  ioArgument_ioListFileContents.dotAssign_operation (categoryReader_mnemonic (object->mAttribute_mInstruction_5F_FDA_5F_base_5F_code, inCompiler COMMA_SOURCE_FILE_AT_LINE (2260)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (2260)).operator_concat (object->mAttribute_mRegisterDescription.reader_mAssemblyString (SOURCE_FILE_AT_LINE (2260)) COMMA_SOURCE_FILE_AT_LINE (2260)) COMMA_SOURCE_FILE_AT_LINE (2260)) ;
  const enumGalgasBool test_0 = object->mAttribute_m_5F_W_5F_isDestination.boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (", W") COMMA_SOURCE_FILE_AT_LINE (2262)) ;
  }
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (" \?\n"
    "    ") COMMA_SOURCE_FILE_AT_LINE (2264)) ;
  callCategoryMethod_display ((const cPtr_ipic_31__38_SequentialInstruction *) object->mAttribute_mEmbeddedInstruction.ptr (), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2265)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_skip_5F_instruction_5F_FDA_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38__5F_skip_5F_instruction_5F_FDA.mSlotID,
                               categoryMethod_ipic_31__38__5F_skip_5F_instruction_5F_FDA_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_skip_5F_instruction_5F_FDA_display (defineCategoryMethod_ipic_31__38__5F_skip_5F_instruction_5F_FDA_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Abstract category method '@ipic18AbstractBlockTerminator display'     *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_ipic_31__38_AbstractBlockTerminator_display> gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_display ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_display (const PMSInt32 inClassIndex,
                                  categoryMethodSignature_ipic_31__38_AbstractBlockTerminator_display inMethod) {
  gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_display.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_ipic_31__38_AbstractBlockTerminator_display (void) {
  gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_display.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_AbstractBlockTerminator_display (NULL,
                                                                        freeCategoryMethod_ipic_31__38_AbstractBlockTerminator_display) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_display (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                 GALGAS_string & io_ioListFileContents,
                                 C_Compiler * inCompiler
                                 COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_ipic_31__38_AbstractBlockTerminator) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_ipic_31__38_AbstractBlockTerminator_display f = NULL ;
    if (classIndex < gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_display.count ()) {
      f = gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_display (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_display.count ()) {
           f = gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_display (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_display.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, io_ioListFileContents, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Overriding category method '@ipic18ReturnTerminator display'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_ReturnTerminator_display (const cPtr_ipic_31__38_AbstractBlockTerminator * /* inObject */,
                                                                 GALGAS_string & ioArgument_ioListFileContents,
                                                                 C_Compiler * /* inCompiler */
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("RETURN") COMMA_SOURCE_FILE_AT_LINE (2283)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_ReturnTerminator_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38_ReturnTerminator.mSlotID,
                               categoryMethod_ipic_31__38_ReturnTerminator_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_ReturnTerminator_display (defineCategoryMethod_ipic_31__38_ReturnTerminator_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Overriding category method '@ipic18RetfieTerminator display'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_RetfieTerminator_display (const cPtr_ipic_31__38_AbstractBlockTerminator * /* inObject */,
                                                                 GALGAS_string & ioArgument_ioListFileContents,
                                                                 C_Compiler * /* inCompiler */
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("RETFIE") COMMA_SOURCE_FILE_AT_LINE (2291)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_RetfieTerminator_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38_RetfieTerminator.mSlotID,
                               categoryMethod_ipic_31__38_RetfieTerminator_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_RetfieTerminator_display (defineCategoryMethod_ipic_31__38_RetfieTerminator_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category method '@ipic18JumpTerminator display'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_JumpTerminator_display (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                               GALGAS_string & ioArgument_ioListFileContents,
                                                               C_Compiler * /* inCompiler */
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38_JumpTerminator * object = (const cPtr_ipic_31__38_JumpTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38_JumpTerminator) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("JUMP ").operator_concat (object->mAttribute_mLabel.reader_string (SOURCE_FILE_AT_LINE (2299)) COMMA_SOURCE_FILE_AT_LINE (2299)) COMMA_SOURCE_FILE_AT_LINE (2299)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_JumpTerminator_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38_JumpTerminator.mSlotID,
                               categoryMethod_ipic_31__38_JumpTerminator_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_JumpTerminator_display (defineCategoryMethod_ipic_31__38_JumpTerminator_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category method '@ipic18ComputedGotoTerminator display'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_ComputedGotoTerminator_display (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                       GALGAS_string & ioArgument_ioListFileContents,
                                                                       C_Compiler * /* inCompiler */
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38_ComputedGotoTerminator * object = (const cPtr_ipic_31__38_ComputedGotoTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38_ComputedGotoTerminator) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("COMPUTED GOTO ") COMMA_SOURCE_FILE_AT_LINE (2305)) ;
  const enumGalgasBool test_0 = object->mAttribute_mUsesRCALL.boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (" (uses RCALL)") COMMA_SOURCE_FILE_AT_LINE (2307)) ;
  }else if (kBoolFalse == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (" (uses CALL)") COMMA_SOURCE_FILE_AT_LINE (2309)) ;
  }
  cEnumerator_lstringlist enumerator_79715 (object->mAttribute_mTargetLabels, kEnumeration_up) ;
  while (enumerator_79715.hasCurrentObject ()) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("\n"
      "    ").operator_concat (enumerator_79715.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (2312)) COMMA_SOURCE_FILE_AT_LINE (2312)) COMMA_SOURCE_FILE_AT_LINE (2312)) ;
    enumerator_79715.gotoNextObject () ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_ComputedGotoTerminator_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38_ComputedGotoTerminator.mSlotID,
                               categoryMethod_ipic_31__38_ComputedGotoTerminator_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_ComputedGotoTerminator_display (defineCategoryMethod_ipic_31__38_ComputedGotoTerminator_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category method '@ipic18ComputedRETLWTerminator display'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_ComputedRETLWTerminator_display (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                        GALGAS_string & ioArgument_ioListFileContents,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38_ComputedRETLWTerminator * object = (const cPtr_ipic_31__38_ComputedRETLWTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38_ComputedRETLWTerminator) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("COMPUTED RETLW ") COMMA_SOURCE_FILE_AT_LINE (2319)) ;
  const enumGalgasBool test_0 = object->mAttribute_mUsesRCALL.boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (" (uses RCALL)") COMMA_SOURCE_FILE_AT_LINE (2321)) ;
  }else if (kBoolFalse == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (" (uses CALL)") COMMA_SOURCE_FILE_AT_LINE (2323)) ;
  }
  cEnumerator_uintlist enumerator_80155 (object->mAttribute_mLiteralValues, kEnumeration_up) ;
  while (enumerator_80155.hasCurrentObject ()) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("\n"
      "    ").operator_concat (enumerator_80155.current_mValue (HERE).reader_hexString (SOURCE_FILE_AT_LINE (2326)) COMMA_SOURCE_FILE_AT_LINE (2326)) COMMA_SOURCE_FILE_AT_LINE (2326)) ;
    enumerator_80155.gotoNextObject () ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_ComputedRETLWTerminator_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38_ComputedRETLWTerminator.mSlotID,
                               categoryMethod_ipic_31__38_ComputedRETLWTerminator_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_ComputedRETLWTerminator_display (defineCategoryMethod_ipic_31__38_ComputedRETLWTerminator_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@ipic18ConditionalJumpTerminator display'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_ConditionalJumpTerminator_display (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                          GALGAS_string & ioArgument_ioListFileContents,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38_ConditionalJumpTerminator * object = (const cPtr_ipic_31__38_ConditionalJumpTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38_ConditionalJumpTerminator) ;
  ioArgument_ioListFileContents.dotAssign_operation (categoryReader_condition (object->mAttribute_mConditionalBranch, inCompiler COMMA_SOURCE_FILE_AT_LINE (2333)) COMMA_SOURCE_FILE_AT_LINE (2333)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (" \? ") COMMA_SOURCE_FILE_AT_LINE (2334)) ;
  callCategoryMethod_display ((const cPtr_ipic_31__38_SingleInstructionTerminator *) object->mAttribute_mInstructionIfConditionTrue.ptr (), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2335)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (" : ") COMMA_SOURCE_FILE_AT_LINE (2336)) ;
  callCategoryMethod_display ((const cPtr_ipic_31__38_SingleInstructionTerminator *) object->mAttribute_mInstructionIfConditionFalse.ptr (), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2337)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_ConditionalJumpTerminator_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38_ConditionalJumpTerminator.mSlotID,
                               categoryMethod_ipic_31__38_ConditionalJumpTerminator_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_ConditionalJumpTerminator_display (defineCategoryMethod_ipic_31__38_ConditionalJumpTerminator_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@ipic18ComputedBraTerminator display'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_ComputedBraTerminator_display (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                      GALGAS_string & ioArgument_ioListFileContents,
                                                                      C_Compiler * /* inCompiler */
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38_ComputedBraTerminator * object = (const cPtr_ipic_31__38_ComputedBraTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38_ComputedBraTerminator) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("COMPUTED BRA ") COMMA_SOURCE_FILE_AT_LINE (2343)) ;
  const enumGalgasBool test_0 = object->mAttribute_mUsesRCALL.boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (" (uses RCALL)") COMMA_SOURCE_FILE_AT_LINE (2345)) ;
  }else if (kBoolFalse == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (" (uses CALL)") COMMA_SOURCE_FILE_AT_LINE (2347)) ;
  }
  cEnumerator_lstringlist enumerator_81032 (object->mAttribute_mTargetLabels, kEnumeration_up) ;
  while (enumerator_81032.hasCurrentObject ()) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("\n"
      "    ").operator_concat (enumerator_81032.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (2350)) COMMA_SOURCE_FILE_AT_LINE (2350)) COMMA_SOURCE_FILE_AT_LINE (2350)) ;
    enumerator_81032.gotoNextObject () ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_ComputedBraTerminator_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38_ComputedBraTerminator.mSlotID,
                               categoryMethod_ipic_31__38_ComputedBraTerminator_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_ComputedBraTerminator_display (defineCategoryMethod_ipic_31__38_ComputedBraTerminator_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category method '@pic18BraCCTerminator display'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_pic_31__38_BraCCTerminator_display (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                               GALGAS_string & ioArgument_ioListFileContents,
                                                               C_Compiler * inCompiler
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_pic_31__38_BraCCTerminator * object = (const cPtr_pic_31__38_BraCCTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_pic_31__38_BraCCTerminator) ;
  ioArgument_ioListFileContents.dotAssign_operation (categoryReader_condition (object->mAttribute_mConditionalBranch, inCompiler COMMA_SOURCE_FILE_AT_LINE (2357)).operator_concat (GALGAS_string (" \? ") COMMA_SOURCE_FILE_AT_LINE (2357)) COMMA_SOURCE_FILE_AT_LINE (2357)) ;
  callCategoryMethod_display ((const cPtr_ipic_31__38_SingleInstructionTerminator *) object->mAttribute_mInstructionIfConditionTrue.ptr (), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2358)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (" : ") COMMA_SOURCE_FILE_AT_LINE (2359)) ;
  callCategoryMethod_display ((const cPtr_ipic_31__38_SingleInstructionTerminator *) object->mAttribute_mInstructionIfConditionFalse.ptr (), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2360)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_pic_31__38_BraCCTerminator_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_pic_31__38_BraCCTerminator.mSlotID,
                               categoryMethod_pic_31__38_BraCCTerminator_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_pic_31__38_BraCCTerminator_display (defineCategoryMethod_pic_31__38_BraCCTerminator_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@pic18RegisterComparisonTerminator display'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_pic_31__38_RegisterComparisonTerminator_display (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                            GALGAS_string & ioArgument_ioListFileContents,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_pic_31__38_RegisterComparisonTerminator * object = (const cPtr_pic_31__38_RegisterComparisonTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_pic_31__38_RegisterComparisonTerminator) ;
  ioArgument_ioListFileContents.dotAssign_operation (object->mAttribute_mRegisterDescription.reader_mAssemblyString (SOURCE_FILE_AT_LINE (2366)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (2366)).operator_concat (categoryReader_mnemonic (object->mAttribute_mComparison, inCompiler COMMA_SOURCE_FILE_AT_LINE (2366)) COMMA_SOURCE_FILE_AT_LINE (2366)).operator_concat (GALGAS_string (" \? ") COMMA_SOURCE_FILE_AT_LINE (2366)) COMMA_SOURCE_FILE_AT_LINE (2366)) ;
  callCategoryMethod_display ((const cPtr_ipic_31__38_SingleInstructionTerminator *) object->mAttribute_mInstructionIfConditionTrue.ptr (), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2367)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (" : ") COMMA_SOURCE_FILE_AT_LINE (2368)) ;
  callCategoryMethod_display ((const cPtr_ipic_31__38_SingleInstructionTerminator *) object->mAttribute_mInstructionIfConditionFalse.ptr (), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2369)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_pic_31__38_RegisterComparisonTerminator_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_pic_31__38_RegisterComparisonTerminator.mSlotID,
                               categoryMethod_pic_31__38_RegisterComparisonTerminator_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_pic_31__38_RegisterComparisonTerminator_display (defineCategoryMethod_pic_31__38_RegisterComparisonTerminator_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@ipic18IncDecRegisterTerminator display'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_IncDecRegisterTerminator_display (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                         GALGAS_string & ioArgument_ioListFileContents,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38_IncDecRegisterTerminator * object = (const cPtr_ipic_31__38_IncDecRegisterTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38_IncDecRegisterTerminator) ;
  const enumGalgasBool test_0 = object->mAttribute_mIncrement.boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("INCF ") COMMA_SOURCE_FILE_AT_LINE (2376)) ;
  }else if (kBoolFalse == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("DECF ") COMMA_SOURCE_FILE_AT_LINE (2378)) ;
  }
  ioArgument_ioListFileContents.dotAssign_operation (object->mAttribute_mRegisterDescription.reader_mAssemblyString (SOURCE_FILE_AT_LINE (2380)) COMMA_SOURCE_FILE_AT_LINE (2380)) ;
  const enumGalgasBool test_1 = object->mAttribute_m_5F_W_5F_isDestination.boolEnum () ;
  if (kBoolTrue == test_1) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (", W ") COMMA_SOURCE_FILE_AT_LINE (2382)) ;
  }
  const enumGalgasBool test_2 = object->mAttribute_mBranchIfZero.boolEnum () ;
  if (kBoolTrue == test_2) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("Z") COMMA_SOURCE_FILE_AT_LINE (2385)) ;
  }else if (kBoolFalse == test_2) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("NZ") COMMA_SOURCE_FILE_AT_LINE (2387)) ;
  }
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (" \? ") COMMA_SOURCE_FILE_AT_LINE (2389)) ;
  callCategoryMethod_display ((const cPtr_ipic_31__38_SingleInstructionTerminator *) object->mAttribute_mInstructionIfConditionTrue.ptr (), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2390)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (" : ") COMMA_SOURCE_FILE_AT_LINE (2391)) ;
  callCategoryMethod_display ((const cPtr_ipic_31__38_SingleInstructionTerminator *) object->mAttribute_mInstructionIfConditionFalse.ptr (), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2392)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_IncDecRegisterTerminator_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_ipic_31__38_IncDecRegisterTerminator.mSlotID,
                               categoryMethod_ipic_31__38_IncDecRegisterTerminator_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_IncDecRegisterTerminator_display (defineCategoryMethod_ipic_31__38_IncDecRegisterTerminator_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@pic18TestRegisterTerminator display'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_pic_31__38_TestRegisterTerminator_display (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                      GALGAS_string & ioArgument_ioListFileContents,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_pic_31__38_TestRegisterTerminator * object = (const cPtr_pic_31__38_TestRegisterTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_pic_31__38_TestRegisterTerminator) ;
  ioArgument_ioListFileContents.dotAssign_operation (object->mAttribute_mRegisterDescription.reader_mAssemblyString (SOURCE_FILE_AT_LINE (2398)) COMMA_SOURCE_FILE_AT_LINE (2398)) ;
  const enumGalgasBool test_0 = object->mAttribute_mBranchIfZero.boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (" Z") COMMA_SOURCE_FILE_AT_LINE (2400)) ;
  }else if (kBoolFalse == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (" NZ") COMMA_SOURCE_FILE_AT_LINE (2402)) ;
  }
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (" \? ") COMMA_SOURCE_FILE_AT_LINE (2404)) ;
  callCategoryMethod_display ((const cPtr_ipic_31__38_SingleInstructionTerminator *) object->mAttribute_mInstructionIfConditionTrue.ptr (), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2405)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (" : ") COMMA_SOURCE_FILE_AT_LINE (2406)) ;
  callCategoryMethod_display ((const cPtr_ipic_31__38_SingleInstructionTerminator *) object->mAttribute_mInstructionIfConditionFalse.ptr (), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2407)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_pic_31__38_TestRegisterTerminator_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_pic_31__38_TestRegisterTerminator.mSlotID,
                               categoryMethod_pic_31__38_TestRegisterTerminator_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_pic_31__38_TestRegisterTerminator_display (defineCategoryMethod_pic_31__38_TestRegisterTerminator_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Overriding category method '@pic18BitTestTerminator display'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_pic_31__38_BitTestTerminator_display (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                 GALGAS_string & ioArgument_ioListFileContents,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_pic_31__38_BitTestTerminator * object = (const cPtr_pic_31__38_BitTestTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_pic_31__38_BitTestTerminator) ;
  const enumGalgasBool test_0 = object->mAttribute_mSkipIfSet.boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("!") COMMA_SOURCE_FILE_AT_LINE (2414)) ;
  }
  ioArgument_ioListFileContents.dotAssign_operation (object->mAttribute_mRegisterDescription.reader_mAssemblyString (SOURCE_FILE_AT_LINE (2416)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (2416)).operator_concat (object->mAttribute_mBitNumber.reader_string (SOURCE_FILE_AT_LINE (2416)) COMMA_SOURCE_FILE_AT_LINE (2416)).operator_concat (GALGAS_string (" \? ") COMMA_SOURCE_FILE_AT_LINE (2416)) COMMA_SOURCE_FILE_AT_LINE (2416)) ;
  callCategoryMethod_display ((const cPtr_ipic_31__38_SingleInstructionTerminator *) object->mAttribute_mInstructionIfConditionTrue.ptr (), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2417)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (" : ") COMMA_SOURCE_FILE_AT_LINE (2418)) ;
  callCategoryMethod_display ((const cPtr_ipic_31__38_SingleInstructionTerminator *) object->mAttribute_mInstructionIfConditionFalse.ptr (), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2419)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_pic_31__38_BitTestTerminator_display (void) {
  enterCategoryMethod_display (kTypeDescriptor_GALGAS_pic_31__38_BitTestTerminator.mSlotID,
                               categoryMethod_pic_31__38_BitTestTerminator_display) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_pic_31__38_BitTestTerminator_display (defineCategoryMethod_pic_31__38_BitTestTerminator_display, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Category method '@ipic18Block display'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void categoryMethod_display (const GALGAS_ipic_31__38_Block inObject,
                             GALGAS_string & ioArgument_ioListFileContents,
                             C_Compiler * inCompiler
                             COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, inObject.mAttribute_mStartAddress.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2431)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("ORG ").operator_concat (inObject.mAttribute_mStartAddress.reader_hexString (SOURCE_FILE_AT_LINE (2432)) COMMA_SOURCE_FILE_AT_LINE (2432)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (2432)) COMMA_SOURCE_FILE_AT_LINE (2432)) ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, inObject.mAttribute_mLabel.mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_1) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("LABEL ").operator_concat (inObject.mAttribute_mLabel.reader_string (SOURCE_FILE_AT_LINE (2435)) COMMA_SOURCE_FILE_AT_LINE (2435)).operator_concat (GALGAS_string (":\n") COMMA_SOURCE_FILE_AT_LINE (2435)) COMMA_SOURCE_FILE_AT_LINE (2435)) ;
  }
  cEnumerator_ipic_31__38_SequentialInstructionList enumerator_84224 (inObject.mAttribute_mInstructionList, kEnumeration_up) ;
  while (enumerator_84224.hasCurrentObject ()) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ") COMMA_SOURCE_FILE_AT_LINE (2439)) ;
    callCategoryMethod_display ((const cPtr_ipic_31__38_SequentialInstruction *) enumerator_84224.current_mInstruction (HERE).ptr (), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2440)) ;
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (2441)) ;
    enumerator_84224.gotoNextObject () ;
  }
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ") COMMA_SOURCE_FILE_AT_LINE (2444)) ;
  callCategoryMethod_display ((const cPtr_ipic_31__38_AbstractBlockTerminator *) inObject.mAttribute_mTerminator.ptr (), ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2445)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("\n"
    "\n") COMMA_SOURCE_FILE_AT_LINE (2446)) ;
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


