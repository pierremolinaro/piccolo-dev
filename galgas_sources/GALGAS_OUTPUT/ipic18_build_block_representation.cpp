//---------------------------------------------------------------------------*
//                                                                           *
//               File 'ipic18_build_block_representation.cpp'                *
//                        Generated by version 2.5.0                         *
//                      august 5th, 2013, at 10h40'25"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "ipic18_build_block_representation.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "piccolo_options.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "ipic18_build_block_representation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'analyzeInstructionList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeInstructionList (const GALGAS_instructionList constinArgument0,
                                     GALGAS_ipic_31__38_BlockList & ioArgument1,
                                     const GALGAS_uint constinArgument2,
                                     const GALGAS_routineMap constinArgument3,
                                     const GALGAS_registerTable constinArgument4,
                                     const GALGAS_dataMap constinArgument5,
                                     const GALGAS_constantMap constinArgument6,
                                     GALGAS_uint & ioArgument7,
                                     GALGAS_ipic_31__38_Block & ioArgument8,
                                     GALGAS_string & ioArgument9,
                                     GALGAS_uint & ioArgument10,
                                     const GALGAS_bool constinArgument11,
                                     GALGAS_bool & outArgument12,
                                     const GALGAS_routineKind constinArgument13,
                                     C_Compiler * inCompiler
                                     COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'analyzeInstructionList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeInstructionList (const GALGAS_instructionList constinArgument_inInstructionList,
                                     GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                     const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                     const GALGAS_routineMap constinArgument_inRoutineMap,
                                     const GALGAS_registerTable constinArgument_inRegisterTable,
                                     const GALGAS_dataMap constinArgument_inDataMap,
                                     const GALGAS_constantMap constinArgument_inConstantMap,
                                     GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                     GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                     GALGAS_string & ioArgument_ioListFileContents,
                                     GALGAS_uint & ioArgument_ioCurrentBank,
                                     const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                     GALGAS_bool & outArgument_outContinuesInSequence,
                                     const GALGAS_routineKind constinArgument_inRoutineKind,
                                     C_Compiler * inCompiler
                                     COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outContinuesInSequence.drop () ; // Release 'out' argument
  outArgument_outContinuesInSequence = GALGAS_bool (true) ;
  cEnumerator_instructionList enumerator_72787 (constinArgument_inInstructionList, kEnumeration_up) ;
  while (enumerator_72787.hasCurrentObject ()) {
    const enumGalgasBool test_0 = outArgument_outContinuesInSequence.operator_not (SOURCE_FILE_AT_LINE (2046)).boolEnum () ;
    if (kBoolTrue == test_0) {
      inCompiler->emitSemanticError (enumerator_72787.current_mInstruction (HERE).reader_mInstructionLocation (SOURCE_FILE_AT_LINE (2047)), GALGAS_string ("Unreachable code") COMMA_SOURCE_FILE_AT_LINE (2047)) ;
      outArgument_outContinuesInSequence = GALGAS_bool (true) ;
    }
    callCategoryMethod_analyze ((const cPtr_pic_31__38_PiccoloInstruction *) enumerator_72787.current_mInstruction (HERE).ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioGeneratedBlockList, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioLocalLabelIndex, ioArgument_ioCurrentBlock, ioArgument_ioListFileContents, ioArgument_ioCurrentBank, constinArgument_inShouldPreserveBSR, outArgument_outContinuesInSequence, constinArgument_inRoutineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (2050)) ;
    enumerator_72787.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//             Routine 'build_ipic18_block_representation_list'              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_5F_ipic_31__38__5F_block_5F_representation_5F_list (const GALGAS_string constinArgument_inSourceFileName,
                                                                       const GALGAS_sint constinArgument_inROMSize,
                                                                       const GALGAS_sint constinArgument_inRAMSize,
                                                                       const GALGAS_routineDeclarationList constinArgument_inBootloaderRoutineDeclarationListForBootloaderImplementation,
                                                                       const GALGAS_routineDeclarationList constinArgument_inUserRoutineDeclarationListForBootloaderImplementation,
                                                                       const GALGAS_luint constinArgument_inBootloaderReservedROMsize,
                                                                       const GALGAS_routineDeclarationList constinArgument_inBootloaderRoutineDeclarationListForUserProgramImplementation,
                                                                       const GALGAS_routineDeclarationList constinArgument_inUserRoutineDeclarationListForUserProgramImplementation,
                                                                       const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                       const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                       const GALGAS_dataMap constinArgument_inDataMap,
                                                                       const GALGAS_piccoloModel constinArgument_inPiccoloModel,
                                                                       const GALGAS_bool constinArgument_inHasHighInterrupt,
                                                                       const GALGAS_bool constinArgument_inHasLowInterrupt,
                                                                       const GALGAS_constantMap constinArgument_inDataLengthConstantMap,
                                                                       GALGAS_string & ioArgument_ioListFileContents,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_routineMap var_routineMap = GALGAS_routineMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2089)) ;
  cEnumerator_routineDeclarationList enumerator_74332 (constinArgument_inUserRoutineDeclarationListForBootloaderImplementation, kEnumeration_up) ;
  while (enumerator_74332.hasCurrentObject ()) {
    {
    var_routineMap.modifier_insertKey (enumerator_74332.current_mRoutineName (HERE), enumerator_74332.current_mIsNoReturn (HERE), enumerator_74332.current_mRequiredBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2091)), enumerator_74332.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2091)), enumerator_74332.current_mPreservesBank (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (2091)) ;
    }
    enumerator_74332.gotoNextObject () ;
  }
  cEnumerator_routineDeclarationList enumerator_74542 (constinArgument_inBootloaderRoutineDeclarationListForUserProgramImplementation, kEnumeration_up) ;
  while (enumerator_74542.hasCurrentObject ()) {
    {
    var_routineMap.modifier_insertKey (enumerator_74542.current_mRoutineName (HERE), enumerator_74542.current_mIsNoReturn (HERE), enumerator_74542.current_mRequiredBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2094)), enumerator_74542.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2094)), enumerator_74542.current_mPreservesBank (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (2094)) ;
    }
    enumerator_74542.gotoNextObject () ;
  }
  cEnumerator_routineDefinitionList enumerator_74729 (constinArgument_inPiccoloModel.reader_mRoutineDefinitionList (SOURCE_FILE_AT_LINE (2096)), kEnumeration_up) ;
  while (enumerator_74729.hasCurrentObject ()) {
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, enumerator_74729.current_mRequiredBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2097)).objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2097)))).operator_and (GALGAS_bool (kIsStrictSup, enumerator_74729.current_mRequiredBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2097)).objectCompare (GALGAS_uint ((PMUInt32) 15U))) COMMA_SOURCE_FILE_AT_LINE (2097)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_location location_1 (enumerator_74729.current_mRequiredBank (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the required bank value should be lower or equal to 15") COMMA_SOURCE_FILE_AT_LINE (2098)) ;
    }
    const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, enumerator_74729.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2100)).objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2100)))).operator_and (GALGAS_bool (kIsStrictSup, enumerator_74729.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2100)).objectCompare (GALGAS_uint ((PMUInt32) 15U))) COMMA_SOURCE_FILE_AT_LINE (2100)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (enumerator_74729.current_mReturnedBank (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("the returned bank value should be lower or equal to 15") COMMA_SOURCE_FILE_AT_LINE (2101)) ;
    }
    {
    var_routineMap.modifier_insertKey (enumerator_74729.current_mRoutineName (HERE), enumerator_74729.current_mIsNoReturn (HERE), enumerator_74729.current_mRequiredBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2103)), enumerator_74729.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2103)), enumerator_74729.current_mPreservesBank (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (2103)) ;
    }
    enumerator_74729.gotoNextObject () ;
  }
  GALGAS_constantMap var_constantMap = constinArgument_inDataLengthConstantMap ;
  {
  var_constantMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("ROM_SIZE"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2108)), constinArgument_inROMSize, inCompiler COMMA_SOURCE_FILE_AT_LINE (2108)) ;
  }
  {
  var_constantMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("RAM_SIZE"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2109)), constinArgument_inRAMSize, inCompiler COMMA_SOURCE_FILE_AT_LINE (2109)) ;
  }
  const enumGalgasBool test_4 = GALGAS_bool (kIsNotEqual, constinArgument_inPiccoloModel.mAttribute_mProgramKind.objectCompare (GALGAS_programKind::constructor_regularProgram (SOURCE_FILE_AT_LINE (2111)))).boolEnum () ;
  if (kBoolTrue == test_4) {
    GALGAS_lstring var_bootloaderSizeString = GALGAS_lstring::constructor_new (GALGAS_string ("BOOTLOADER_RESERVED_SIZE"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2112)) ;
    {
    var_constantMap.modifier_insertKey (var_bootloaderSizeString, constinArgument_inBootloaderReservedROMsize.reader_uint (SOURCE_FILE_AT_LINE (2113)).reader_sint (inCompiler COMMA_SOURCE_FILE_AT_LINE (2113)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2113)) ;
    }
  }
  cEnumerator_constantDefinitionList enumerator_75906 (constinArgument_inPiccoloModel.reader_mConstantDefinitionList (SOURCE_FILE_AT_LINE (2116)), kEnumeration_up) ;
  while (enumerator_75906.hasCurrentObject ()) {
    GALGAS_sint var_result ;
    callCategoryMethod_eval ((const cPtr_immediatExpression *) enumerator_75906.current_mExpression (HERE).ptr (), constinArgument_inRegisterTable, var_constantMap, var_result, inCompiler COMMA_SOURCE_FILE_AT_LINE (2117)) ;
    const enumGalgasBool test_5 = constinArgument_inRegisterTable.reader_hasKey (enumerator_75906.current_mConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (2118)) COMMA_SOURCE_FILE_AT_LINE (2118)).boolEnum () ;
    if (kBoolTrue == test_5) {
      GALGAS_location location_6 (enumerator_75906.current_mConstantName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_6, GALGAS_string ("'").operator_concat (enumerator_75906.current_mConstantName (HERE).reader_string (SOURCE_FILE_AT_LINE (2119)) COMMA_SOURCE_FILE_AT_LINE (2119)).operator_concat (GALGAS_string ("' is already declared as ram register or special register") COMMA_SOURCE_FILE_AT_LINE (2119)) COMMA_SOURCE_FILE_AT_LINE (2119)) ;
    }else if (kBoolFalse == test_5) {
      {
      var_constantMap.modifier_insertKey (enumerator_75906.current_mConstantName (HERE), var_result, inCompiler COMMA_SOURCE_FILE_AT_LINE (2121)) ;
      }
    }
    enumerator_75906.gotoNextObject () ;
  }
  {
  routine_print_5F_constant_5F_definition (var_constantMap, ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (2125)) ;
  }
  const enumGalgasBool test_7 = GALGAS_bool (kIsNotEqual, constinArgument_inPiccoloModel.mAttribute_mProgramKind.objectCompare (GALGAS_programKind::constructor_userProgram (SOURCE_FILE_AT_LINE (2130)))).boolEnum () ;
  if (kBoolTrue == test_7) {
    const enumGalgasBool test_8 = var_routineMap.reader_hasKey (GALGAS_string ("main") COMMA_SOURCE_FILE_AT_LINE (2131)).boolEnum () ;
    if (kBoolTrue == test_8) {
      GALGAS_bool var_isNoReturn ;
      GALGAS_uint var_requiredBank ;
      GALGAS_uint joker_76697_0 ; // Joker input parameter
      GALGAS_bool joker_76700_0 ; // Joker input parameter
      var_routineMap.method_searchKey (GALGAS_lstring::constructor_new (GALGAS_string ("main"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2134)), var_isNoReturn, var_requiredBank, joker_76697_0, joker_76700_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2134)) ;
      const enumGalgasBool test_9 = var_isNoReturn.operator_not (SOURCE_FILE_AT_LINE (2135)).boolEnum () ;
      if (kBoolTrue == test_9) {
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("the \"main\" should be declared with \"noreturn\" qualifier: \"noreturn main requiresbank 0\"") COMMA_SOURCE_FILE_AT_LINE (2136)) ;
      }
      const enumGalgasBool test_10 = GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
      if (kBoolTrue == test_10) {
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("the \"main\" should be declared with \"requiresbank 0\" qualifier: \"noreturn main requiresbank 0\"") COMMA_SOURCE_FILE_AT_LINE (2139)) ;
      }
    }else if (kBoolFalse == test_8) {
      inCompiler->emitSemanticError (constinArgument_inPiccoloModel.reader_mEndOfProgram (SOURCE_FILE_AT_LINE (2142)), GALGAS_string ("the program should declare the \"main\" routine") COMMA_SOURCE_FILE_AT_LINE (2142)) ;
    }
  }
  GALGAS_ipic_31__38_BlockList var_generatedBlockList = GALGAS_ipic_31__38_BlockList::constructor_emptyList (SOURCE_FILE_AT_LINE (2146)) ;
  GALGAS_uint var_entryPoint = GALGAS_uint ((PMUInt32) 4U) ;
  cEnumerator_routineDeclarationList enumerator_77406 (constinArgument_inBootloaderRoutineDeclarationListForUserProgramImplementation, kEnumeration_up) ;
  while (enumerator_77406.hasCurrentObject ()) {
    var_generatedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (var_entryPoint, enumerator_77406.current_mRoutineName (HERE), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2152)), GALGAS_ipic_31__38_ReturnTerminator::constructor_new (GALGAS_location::constructor_nowhere (SOURCE_FILE_AT_LINE (2153)) COMMA_SOURCE_FILE_AT_LINE (2153)) COMMA_SOURCE_FILE_AT_LINE (2149)) COMMA_SOURCE_FILE_AT_LINE (2149)) ;
    var_entryPoint = var_entryPoint.add_operation (GALGAS_uint ((PMUInt32) 4U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2155)) ;
    const enumGalgasBool test_11 = GALGAS_bool (kIsEqual, var_entryPoint.objectCompare (GALGAS_uint ((PMUInt32) 8U))).boolEnum () ;
    if (kBoolTrue == test_11) {
      var_entryPoint = GALGAS_uint ((PMUInt32) 12U) ;
    }else if (kBoolFalse == test_11) {
      const enumGalgasBool test_12 = GALGAS_bool (kIsEqual, var_entryPoint.objectCompare (GALGAS_uint ((PMUInt32) 24U))).boolEnum () ;
      if (kBoolTrue == test_12) {
        var_entryPoint = GALGAS_uint ((PMUInt32) 28U) ;
      }
    }
    enumerator_77406.gotoNextObject () ;
  }
  var_entryPoint = constinArgument_inBootloaderReservedROMsize.reader_uint (SOURCE_FILE_AT_LINE (2163)) ;
  cEnumerator_routineDeclarationList enumerator_77999 (constinArgument_inUserRoutineDeclarationListForUserProgramImplementation, kEnumeration_up) ;
  while (enumerator_77999.hasCurrentObject ()) {
    var_generatedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (var_entryPoint, GALGAS_string ("_entry_user_").operator_concat (var_entryPoint.reader_xString (SOURCE_FILE_AT_LINE (2167)) COMMA_SOURCE_FILE_AT_LINE (2167)).reader_nowhere (SOURCE_FILE_AT_LINE (2167)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2168)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (enumerator_77999.current_mRoutineName (HERE).mAttribute_location, enumerator_77999.current_mRoutineName (HERE), GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (2169)) COMMA_SOURCE_FILE_AT_LINE (2169)) COMMA_SOURCE_FILE_AT_LINE (2165)) COMMA_SOURCE_FILE_AT_LINE (2165)) ;
    var_entryPoint = var_entryPoint.add_operation (GALGAS_uint ((PMUInt32) 4U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2171)) ;
    enumerator_77999.gotoNextObject () ;
  }
  const enumGalgasBool test_13 = GALGAS_bool (kIsNotEqual, constinArgument_inPiccoloModel.mAttribute_mProgramKind.objectCompare (GALGAS_programKind::constructor_userProgram (SOURCE_FILE_AT_LINE (2174)))).boolEnum () ;
  if (kBoolTrue == test_13) {
    var_generatedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint ((PMUInt32) 0U), GALGAS_string ("_entry_main").reader_nowhere (SOURCE_FILE_AT_LINE (2177)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2178)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (GALGAS_location::constructor_nowhere (SOURCE_FILE_AT_LINE (2179)), GALGAS_string ("main").reader_nowhere (SOURCE_FILE_AT_LINE (2179)), GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (2179)) COMMA_SOURCE_FILE_AT_LINE (2179)) COMMA_SOURCE_FILE_AT_LINE (2175)) COMMA_SOURCE_FILE_AT_LINE (2175)) ;
  }
  GALGAS_routineDeclarationList var_tempBootloaderRoutineDeclarationList = constinArgument_inBootloaderRoutineDeclarationListForBootloaderImplementation ;
  const enumGalgasBool test_14 = GALGAS_bool (kIsStrictSup, var_tempBootloaderRoutineDeclarationList.reader_length (SOURCE_FILE_AT_LINE (2184)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_14) {
    GALGAS_lstring var_routineName ;
    {
    GALGAS_luint joker_79106_0 ; // Joker input parameter
    GALGAS_luint joker_79109_0 ; // Joker input parameter
    GALGAS_bool joker_79112_0 ; // Joker input parameter
    GALGAS_bool joker_79115_0 ; // Joker input parameter
    var_tempBootloaderRoutineDeclarationList.modifier_popFirst (var_routineName, joker_79106_0, joker_79109_0, joker_79112_0, joker_79115_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2185)) ;
    }
    var_generatedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint ((PMUInt32) 4U), GALGAS_string ("_entry_bootloader_04").reader_nowhere (SOURCE_FILE_AT_LINE (2188)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2189)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (var_routineName.mAttribute_location, var_routineName, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (2190)) COMMA_SOURCE_FILE_AT_LINE (2190)) COMMA_SOURCE_FILE_AT_LINE (2186)) COMMA_SOURCE_FILE_AT_LINE (2186)) ;
  }
  const enumGalgasBool test_15 = constinArgument_inHasHighInterrupt.boolEnum () ;
  if (kBoolTrue == test_15) {
    var_generatedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint ((PMUInt32) 8U), GALGAS_string ("_entry_high_interrupt").reader_nowhere (SOURCE_FILE_AT_LINE (2197)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2198)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (GALGAS_location::constructor_nowhere (SOURCE_FILE_AT_LINE (2199)), GALGAS_string ("_high_interrupt").reader_nowhere (SOURCE_FILE_AT_LINE (2199)), GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (2199)) COMMA_SOURCE_FILE_AT_LINE (2199)) COMMA_SOURCE_FILE_AT_LINE (2195)) COMMA_SOURCE_FILE_AT_LINE (2195)) ;
  }
  var_entryPoint = GALGAS_uint ((PMUInt32) 12U) ;
  if (var_tempBootloaderRoutineDeclarationList.reader_length (SOURCE_FILE_AT_LINE (2204)).isValid ()) {
    PMUInt32 variant_79971 = var_tempBootloaderRoutineDeclarationList.reader_length (SOURCE_FILE_AT_LINE (2204)).uintValue () ;
    bool loop_79971 = true ;
    while (loop_79971) {
      loop_79971 = GALGAS_bool (kIsStrictSup, var_tempBootloaderRoutineDeclarationList.reader_length (SOURCE_FILE_AT_LINE (2205)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (kIsStrictInf, var_entryPoint.objectCompare (GALGAS_uint ((PMUInt32) 24U))) COMMA_SOURCE_FILE_AT_LINE (2205)).isValid () ;
      if (loop_79971) {
        loop_79971 = GALGAS_bool (kIsStrictSup, var_tempBootloaderRoutineDeclarationList.reader_length (SOURCE_FILE_AT_LINE (2205)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (kIsStrictInf, var_entryPoint.objectCompare (GALGAS_uint ((PMUInt32) 24U))) COMMA_SOURCE_FILE_AT_LINE (2205)).boolValue () ;
      }
      if (loop_79971 && (0 == variant_79971)) {
        loop_79971 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (2204)) ;
      }
      if (loop_79971) {
        variant_79971 -- ;
        GALGAS_lstring var_routineName ;
        {
        GALGAS_luint joker_80183_0 ; // Joker input parameter
        GALGAS_luint joker_80186_0 ; // Joker input parameter
        GALGAS_bool joker_80189_0 ; // Joker input parameter
        GALGAS_bool joker_80192_0 ; // Joker input parameter
        var_tempBootloaderRoutineDeclarationList.modifier_popFirst (var_routineName, joker_80183_0, joker_80186_0, joker_80189_0, joker_80192_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2207)) ;
        }
        var_generatedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (var_entryPoint, GALGAS_string ("_entry_bootloader_").operator_concat (var_entryPoint.reader_xString (SOURCE_FILE_AT_LINE (2210)) COMMA_SOURCE_FILE_AT_LINE (2210)).reader_nowhere (SOURCE_FILE_AT_LINE (2210)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2211)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (var_routineName.mAttribute_location, var_routineName, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (2212)) COMMA_SOURCE_FILE_AT_LINE (2212)) COMMA_SOURCE_FILE_AT_LINE (2208)) COMMA_SOURCE_FILE_AT_LINE (2208)) ;
        var_entryPoint = var_entryPoint.add_operation (GALGAS_uint ((PMUInt32) 4U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2214)) ;
      }
    }
  }
  const enumGalgasBool test_16 = constinArgument_inHasLowInterrupt.boolEnum () ;
  if (kBoolTrue == test_16) {
    var_generatedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint ((PMUInt32) 24U), GALGAS_string ("_entry_low_interrupt").reader_nowhere (SOURCE_FILE_AT_LINE (2220)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2221)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (GALGAS_location::constructor_nowhere (SOURCE_FILE_AT_LINE (2222)), GALGAS_string ("_low_interrupt").reader_nowhere (SOURCE_FILE_AT_LINE (2222)), GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (2222)) COMMA_SOURCE_FILE_AT_LINE (2222)) COMMA_SOURCE_FILE_AT_LINE (2218)) COMMA_SOURCE_FILE_AT_LINE (2218)) ;
  }
  var_entryPoint = GALGAS_uint ((PMUInt32) 28U) ;
  cEnumerator_routineDeclarationList enumerator_81091 (var_tempBootloaderRoutineDeclarationList, kEnumeration_up) ;
  while (enumerator_81091.hasCurrentObject ()) {
    var_generatedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (var_entryPoint, GALGAS_string ("_entry_bootloader_").operator_concat (var_entryPoint.reader_xString (SOURCE_FILE_AT_LINE (2230)) COMMA_SOURCE_FILE_AT_LINE (2230)).reader_nowhere (SOURCE_FILE_AT_LINE (2230)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2231)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (enumerator_81091.current_mRoutineName (HERE).mAttribute_location, enumerator_81091.current_mRoutineName (HERE), GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (2232)) COMMA_SOURCE_FILE_AT_LINE (2232)) COMMA_SOURCE_FILE_AT_LINE (2228)) COMMA_SOURCE_FILE_AT_LINE (2228)) ;
    var_entryPoint = var_entryPoint.add_operation (GALGAS_uint ((PMUInt32) 4U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2234)) ;
    enumerator_81091.gotoNextObject () ;
  }
  var_tempBootloaderRoutineDeclarationList.drop () ; // drop instruction
  GALGAS_uint var_localLabelIndex = GALGAS_uint ((PMUInt32) 0U) ;
  const enumGalgasBool test_17 = constinArgument_inHasLowInterrupt.boolEnum () ;
  if (kBoolTrue == test_17) {
    cEnumerator_interruptDefinitionList enumerator_81674 (constinArgument_inPiccoloModel.reader_mInterruptDefinitionList (SOURCE_FILE_AT_LINE (2240)), kEnumeration_up) ;
    while (enumerator_81674.hasCurrentObject ()) {
      const enumGalgasBool test_18 = GALGAS_bool (kIsEqual, enumerator_81674.current_mInterruptName (HERE).reader_string (SOURCE_FILE_AT_LINE (2241)).objectCompare (GALGAS_string ("low"))).boolEnum () ;
      if (kBoolTrue == test_18) {
        GALGAS_ipic_31__38_Block var_currentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2243)), GALGAS_lstring::constructor_new (GALGAS_string ("_low_interrupt"), enumerator_81674.current_mInterruptName (HERE).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (2244)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2245)), GALGAS_ipic_31__38_RetfieTerminator::constructor_new (enumerator_81674.current_mInterruptName (HERE).mAttribute_location, enumerator_81674.current_mFastReturn (HERE) COMMA_SOURCE_FILE_AT_LINE (2246)) COMMA_SOURCE_FILE_AT_LINE (2242)) ;
        GALGAS_uint var_currentBank = GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2248)) ;
        GALGAS_bool var_continuesInSequence ;
        {
        routine_analyzeInstructionList (enumerator_81674.current_mInstructionList (HERE), var_generatedBlockList, constinArgument_inAccessBankSplitOffset, var_routineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, var_constantMap, var_localLabelIndex, var_currentBlock, ioArgument_ioListFileContents, var_currentBank, enumerator_81674.current_mFastReturn (HERE).operator_not (SOURCE_FILE_AT_LINE (2261)), var_continuesInSequence, GALGAS_routineKind::constructor_interruptRoutine (SOURCE_FILE_AT_LINE (2263)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2249)) ;
        }
        const enumGalgasBool test_19 = var_continuesInSequence.operator_not (SOURCE_FILE_AT_LINE (2265)).boolEnum () ;
        if (kBoolTrue == test_19) {
          inCompiler->emitSemanticError (enumerator_81674.current_mEndOfInterruptLocation (HERE), GALGAS_string ("execution cannot reach the end of the interrupt routine") COMMA_SOURCE_FILE_AT_LINE (2266)) ;
        }
        var_generatedBlockList.addAssign_operation (var_currentBlock COMMA_SOURCE_FILE_AT_LINE (2269)) ;
      }
      enumerator_81674.gotoNextObject () ;
    }
  }
  const enumGalgasBool test_20 = constinArgument_inHasHighInterrupt.boolEnum () ;
  if (kBoolTrue == test_20) {
    cEnumerator_interruptDefinitionList enumerator_82968 (constinArgument_inPiccoloModel.reader_mInterruptDefinitionList (SOURCE_FILE_AT_LINE (2275)), kEnumeration_up) ;
    while (enumerator_82968.hasCurrentObject ()) {
      const enumGalgasBool test_21 = GALGAS_bool (kIsEqual, enumerator_82968.current_mInterruptName (HERE).reader_string (SOURCE_FILE_AT_LINE (2276)).objectCompare (GALGAS_string ("high"))).boolEnum () ;
      if (kBoolTrue == test_21) {
        GALGAS_ipic_31__38_Block var_currentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2278)), GALGAS_lstring::constructor_new (GALGAS_string ("_high_interrupt"), enumerator_82968.current_mInterruptName (HERE).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (2279)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2280)), GALGAS_ipic_31__38_RetfieTerminator::constructor_new (enumerator_82968.current_mInterruptName (HERE).mAttribute_location, GALGAS_bool (true) COMMA_SOURCE_FILE_AT_LINE (2281)) COMMA_SOURCE_FILE_AT_LINE (2277)) ;
        GALGAS_uint var_currentBank = GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2283)) ;
        GALGAS_bool var_continuesInSequence ;
        {
        routine_analyzeInstructionList (enumerator_82968.current_mInstructionList (HERE), var_generatedBlockList, constinArgument_inAccessBankSplitOffset, var_routineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, var_constantMap, var_localLabelIndex, var_currentBlock, ioArgument_ioListFileContents, var_currentBank, enumerator_82968.current_mFastReturn (HERE).operator_not (SOURCE_FILE_AT_LINE (2296)), var_continuesInSequence, GALGAS_routineKind::constructor_interruptRoutine (SOURCE_FILE_AT_LINE (2298)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2284)) ;
        }
        const enumGalgasBool test_22 = var_continuesInSequence.operator_not (SOURCE_FILE_AT_LINE (2300)).boolEnum () ;
        if (kBoolTrue == test_22) {
          inCompiler->emitSemanticError (enumerator_82968.current_mEndOfInterruptLocation (HERE), GALGAS_string ("execution cannot reach the end of the interrupt routine") COMMA_SOURCE_FILE_AT_LINE (2301)) ;
        }
        var_generatedBlockList.addAssign_operation (var_currentBlock COMMA_SOURCE_FILE_AT_LINE (2304)) ;
      }
      enumerator_82968.gotoNextObject () ;
    }
  }
  cEnumerator_routineDefinitionList enumerator_84200 (constinArgument_inPiccoloModel.mAttribute_mRoutineDefinitionList, kEnumeration_up) ;
  while (enumerator_84200.hasCurrentObject ()) {
    GALGAS_uint var_currentBank = enumerator_84200.current_mRequiredBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2310)) ;
    GALGAS_routineKind var_routineKind ;
    const enumGalgasBool test_23 = enumerator_84200.current_mIsNoReturn (HERE).boolEnum () ;
    if (kBoolTrue == test_23) {
      var_routineKind = GALGAS_routineKind::constructor_noReturnRoutine (SOURCE_FILE_AT_LINE (2313)) ;
    }else if (kBoolFalse == test_23) {
      var_routineKind = GALGAS_routineKind::constructor_regularRoutine (SOURCE_FILE_AT_LINE (2315)) ;
    }
    GALGAS_ipic_31__38_Block var_currentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2318)), enumerator_84200.current_mRoutineName (HERE), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2320)), GALGAS_ipic_31__38_ReturnTerminator::constructor_new (enumerator_84200.current_mRoutineName (HERE).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (2321)) COMMA_SOURCE_FILE_AT_LINE (2317)) ;
    GALGAS_bool var_continuesInSequence ;
    {
    routine_analyzeInstructionList (enumerator_84200.current_mInstructionList (HERE), var_generatedBlockList, constinArgument_inAccessBankSplitOffset, var_routineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, var_constantMap, var_localLabelIndex, var_currentBlock, ioArgument_ioListFileContents, var_currentBank, enumerator_84200.current_mPreservesBank (HERE), var_continuesInSequence, var_routineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (2323)) ;
    }
    var_generatedBlockList.addAssign_operation (var_currentBlock COMMA_SOURCE_FILE_AT_LINE (2340)) ;
    const enumGalgasBool test_24 = enumerator_84200.current_mIsNoReturn (HERE).operator_not (SOURCE_FILE_AT_LINE (2342)).operator_and (GALGAS_bool (kIsNotEqual, enumerator_84200.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2342)).objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2342)))) COMMA_SOURCE_FILE_AT_LINE (2342)).operator_and (GALGAS_bool (kIsNotEqual, var_currentBank.objectCompare (enumerator_84200.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2342)))) COMMA_SOURCE_FILE_AT_LINE (2342)).boolEnum () ;
    if (kBoolTrue == test_24) {
      GALGAS_location location_25 (enumerator_84200.current_mRoutineName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_25, GALGAS_string ("execution will not set BSR to ").operator_concat (enumerator_84200.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2343)).reader_string (SOURCE_FILE_AT_LINE (2343)) COMMA_SOURCE_FILE_AT_LINE (2343)) COMMA_SOURCE_FILE_AT_LINE (2343)) ;
    }
    const enumGalgasBool test_26 = enumerator_84200.current_mIsNoReturn (HERE).operator_and (var_continuesInSequence COMMA_SOURCE_FILE_AT_LINE (2345)).boolEnum () ;
    if (kBoolTrue == test_26) {
      GALGAS_location location_27 (enumerator_84200.current_mRoutineName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_27, GALGAS_string ("execution should not reach the end of a \"noreturn\" routine") COMMA_SOURCE_FILE_AT_LINE (2346)) ;
    }
    enumerator_84200.gotoNextObject () ;
  }
  GALGAS_registerExpression var_WREGregister = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("WREG"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2352)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2352)) COMMA_SOURCE_FILE_AT_LINE (2352)) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_WREG_5F_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_85917_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) var_WREGregister.ptr (), constinArgument_inAccessBankSplitOffset, GALGAS_uint ((PMUInt32) 0U), constinArgument_inRegisterTable, var_WREG_5F_IPICregisterDescription, joker_85917_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2353)) ;
  GALGAS_registerExpression var_TOSLregister = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("TOSL"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2361)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2361)) COMMA_SOURCE_FILE_AT_LINE (2361)) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_TOSL_5F_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_86249_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) var_TOSLregister.ptr (), constinArgument_inAccessBankSplitOffset, GALGAS_uint ((PMUInt32) 0U), constinArgument_inRegisterTable, var_TOSL_5F_IPICregisterDescription, joker_86249_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2362)) ;
  GALGAS_registerExpression var_TOSHregister = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("TOSH"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2370)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2370)) COMMA_SOURCE_FILE_AT_LINE (2370)) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_TOSH_5F_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_86581_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) var_TOSHregister.ptr (), constinArgument_inAccessBankSplitOffset, GALGAS_uint ((PMUInt32) 0U), constinArgument_inRegisterTable, var_TOSH_5F_IPICregisterDescription, joker_86581_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2371)) ;
  GALGAS_registerExpression var_TOSUregister = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("TOSU"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2379)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2379)) COMMA_SOURCE_FILE_AT_LINE (2379)) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_TOSU_5F_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_86913_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) var_TOSUregister.ptr (), constinArgument_inAccessBankSplitOffset, GALGAS_uint ((PMUInt32) 0U), constinArgument_inRegisterTable, var_TOSU_5F_IPICregisterDescription, joker_86913_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2380)) ;
  GALGAS_ipic_31__38_SequentialInstruction var_ADDWF_5F_WREG = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA::constructor_new (inCompiler->here (), GALGAS_instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_ADDWF (SOURCE_FILE_AT_LINE (2390)), var_WREG_5F_IPICregisterDescription, GALGAS_bool (true) COMMA_SOURCE_FILE_AT_LINE (2388)) ;
  GALGAS_ipic_31__38_Block var_goto_34_Block = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2397)), GALGAS_string ("_computed_goto_4").reader_nowhere (SOURCE_FILE_AT_LINE (2398)), GALGAS_ipic_31__38_SequentialInstructionList::constructor_listWithValue (var_ADDWF_5F_WREG COMMA_SOURCE_FILE_AT_LINE (2399)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (GALGAS_location::constructor_nowhere (SOURCE_FILE_AT_LINE (2400)), GALGAS_string ("_computed_goto_2").reader_nowhere (SOURCE_FILE_AT_LINE (2400)), GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (2400)) COMMA_SOURCE_FILE_AT_LINE (2400)) COMMA_SOURCE_FILE_AT_LINE (2396)) ;
  var_generatedBlockList.addAssign_operation (var_goto_34_Block COMMA_SOURCE_FILE_AT_LINE (2402)) ;
  GALGAS_ipic_31__38_SequentialInstructionList var_goto_32_InstructionList = GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2404)) ;
  var_goto_32_InstructionList.addAssign_operation (var_ADDWF_5F_WREG COMMA_SOURCE_FILE_AT_LINE (2405)) ;
  var_goto_32_InstructionList.addAssign_operation (var_ADDWF_5F_WREG COMMA_SOURCE_FILE_AT_LINE (2406)) ;
  var_goto_32_InstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA::constructor_new (inCompiler->here (), GALGAS_instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_ADDWF (SOURCE_FILE_AT_LINE (2409)), var_TOSL_5F_IPICregisterDescription, GALGAS_bool (false) COMMA_SOURCE_FILE_AT_LINE (2407)) COMMA_SOURCE_FILE_AT_LINE (2407)) ;
  var_goto_32_InstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation::constructor_new (inCompiler->here (), GALGAS_literal_5F_instruction_5F_opcode::constructor_MOVLW (SOURCE_FILE_AT_LINE (2415)), GALGAS_uint ((PMUInt32) 0U) COMMA_SOURCE_FILE_AT_LINE (2413)) COMMA_SOURCE_FILE_AT_LINE (2413)) ;
  var_goto_32_InstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA::constructor_new (inCompiler->here (), GALGAS_instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_ADDWFC (SOURCE_FILE_AT_LINE (2420)), var_TOSH_5F_IPICregisterDescription, GALGAS_bool (false) COMMA_SOURCE_FILE_AT_LINE (2418)) COMMA_SOURCE_FILE_AT_LINE (2418)) ;
  var_goto_32_InstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA::constructor_new (inCompiler->here (), GALGAS_instruction_5F_FDA_5F_base_5F_code_5F_AST::constructor_ADDWFC (SOURCE_FILE_AT_LINE (2426)), var_TOSU_5F_IPICregisterDescription, GALGAS_bool (false) COMMA_SOURCE_FILE_AT_LINE (2424)) COMMA_SOURCE_FILE_AT_LINE (2424)) ;
  GALGAS_ipic_31__38_Block var_goto_32_Block = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2432)), GALGAS_string ("_computed_goto_2").reader_nowhere (SOURCE_FILE_AT_LINE (2433)), var_goto_32_InstructionList, GALGAS_ipic_31__38_ReturnTerminator::constructor_new (GALGAS_location::constructor_nowhere (SOURCE_FILE_AT_LINE (2435)) COMMA_SOURCE_FILE_AT_LINE (2435)) COMMA_SOURCE_FILE_AT_LINE (2431)) ;
  var_generatedBlockList.addAssign_operation (var_goto_32_Block COMMA_SOURCE_FILE_AT_LINE (2437)) ;
  var_entryPoint = constinArgument_inBootloaderReservedROMsize.reader_uint (SOURCE_FILE_AT_LINE (2439)) ;
  cEnumerator_routineDeclarationList enumerator_88826 (constinArgument_inUserRoutineDeclarationListForBootloaderImplementation, kEnumeration_up) ;
  while (enumerator_88826.hasCurrentObject ()) {
    const enumGalgasBool test_28 = enumerator_88826.current_mIsNoReturn (HERE).boolEnum () ;
    if (kBoolTrue == test_28) {
      var_generatedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (var_entryPoint, enumerator_88826.current_mRoutineName (HERE), GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2445)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (enumerator_88826.current_mRoutineName (HERE).mAttribute_location, enumerator_88826.current_mRoutineName (HERE), GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (2446)) COMMA_SOURCE_FILE_AT_LINE (2446)) COMMA_SOURCE_FILE_AT_LINE (2442)) COMMA_SOURCE_FILE_AT_LINE (2442)) ;
    }else if (kBoolFalse == test_28) {
      GALGAS_ipic_31__38_SequentialInstructionList var_instructionList = GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2449)) ;
      const enumGalgasBool test_29 = GALGAS_bool (kIsNotEqual, enumerator_88826.current_mReturnedBank (HERE).reader_uint (SOURCE_FILE_AT_LINE (2450)).objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2450)))).boolEnum () ;
      if (kBoolTrue == test_29) {
        var_instructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB::constructor_new (inCompiler->here (), enumerator_88826.current_mReturnedBank (HERE) COMMA_SOURCE_FILE_AT_LINE (2451)) COMMA_SOURCE_FILE_AT_LINE (2451)) ;
      }
      var_generatedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (var_entryPoint, enumerator_88826.current_mRoutineName (HERE), var_instructionList, GALGAS_ipic_31__38_ReturnTerminator::constructor_new (GALGAS_location::constructor_nowhere (SOURCE_FILE_AT_LINE (2457)) COMMA_SOURCE_FILE_AT_LINE (2457)) COMMA_SOURCE_FILE_AT_LINE (2453)) COMMA_SOURCE_FILE_AT_LINE (2453)) ;
    }
    var_entryPoint = var_entryPoint.add_operation (GALGAS_uint ((PMUInt32) 4U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2460)) ;
    enumerator_88826.gotoNextObject () ;
  }
  {
  routine_displayBlockList (GALGAS_string ("INTERMEDIATE BLOCK REPRESENTATION"), ioArgument_ioListFileContents, var_generatedBlockList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2463)) ;
  }
  const enumGalgasBool test_30 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (2465)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (gOption_piccolo_5F_options_performOptimizations.reader_value ()) COMMA_SOURCE_FILE_AT_LINE (2465)).boolEnum () ;
  if (kBoolTrue == test_30) {
    {
    routine_ipic_31__38_OptimizeBlocks (ioArgument_ioListFileContents, var_generatedBlockList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2466)) ;
    }
    {
    routine_displayBlockList (GALGAS_string ("OPTIMIZED INTERMEDIATE BLOCK REPRESENTATION"), ioArgument_ioListFileContents, var_generatedBlockList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2467)) ;
    }
  }
  const enumGalgasBool test_31 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (2470)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (gOption_piccolo_5F_options_performOptimizations.reader_value ()) COMMA_SOURCE_FILE_AT_LINE (2470)).boolEnum () ;
  if (kBoolTrue == test_31) {
    {
    routine_ipic_31__38_OptimizeBlockOrdering (constinArgument_inSourceFileName, ioArgument_ioListFileContents, var_generatedBlockList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2471)) ;
    }
  }
  const enumGalgasBool test_32 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (2478)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_32) {
    {
    routine_ipic_31__38_RelativesResolution (ioArgument_ioListFileContents, var_generatedBlockList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2479)) ;
    }
  }
  const enumGalgasBool test_33 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (2485)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_33) {
    {
    routine_ipic_31__38_GenerateCode (constinArgument_inSourceFileName, ioArgument_ioListFileContents, var_generatedBlockList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2486)) ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@registerExpression analyzeRegisterExpression'      *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_registerExpression_analyzeRegisterExpression> gCategoryMethodTable_registerExpression_analyzeRegisterExpression ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeRegisterExpression (const PMSInt32 inClassIndex,
                                                    categoryMethodSignature_registerExpression_analyzeRegisterExpression inMethod) {
  gCategoryMethodTable_registerExpression_analyzeRegisterExpression.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeRegisterExpression (const cPtr_registerExpression * inObject,
                                                   const GALGAS_uint constin_inAccessBankSplitOffset,
                                                   const GALGAS_uint constin_inCurrentBank,
                                                   const GALGAS_registerTable constin_inRegisterTable,
                                                   GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression & out_outIPICregisterDescription,
                                                   GALGAS_bitSliceTable & out_outBitSliceTable,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  out_outIPICregisterDescription.drop () ;
  out_outBitSliceTable.drop () ;
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_registerExpression) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_registerExpression_analyzeRegisterExpression f = NULL ;
    if (classIndex < gCategoryMethodTable_registerExpression_analyzeRegisterExpression.count ()) {
      f = gCategoryMethodTable_registerExpression_analyzeRegisterExpression (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_registerExpression_analyzeRegisterExpression.count ()) {
           f = gCategoryMethodTable_registerExpression_analyzeRegisterExpression (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_registerExpression_analyzeRegisterExpression.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAccessBankSplitOffset, constin_inCurrentBank, constin_inRegisterTable, out_outIPICregisterDescription, out_outBitSliceTable, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*

static void categoryMethod_registerExpression_analyzeRegisterExpression (const cPtr_registerExpression * inObject,
                                                                         const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                         const GALGAS_uint constinArgument_inCurrentBank,
                                                                         const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                         GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression & outArgument_outIPICregisterDescription,
                                                                         GALGAS_bitSliceTable & outArgument_outBitSliceTable,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_registerExpression * object = inObject ;
  macroValidSharedObject (object, const cPtr_registerExpression) ;
  GALGAS_string var_assemblyString = object->mAttribute_mRegisterName.reader_string (SOURCE_FILE_AT_LINE (25)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (26)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_assemblyString.dotAssign_operation (GALGAS_string (" + ").operator_concat (object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (27)).reader_hexString (SOURCE_FILE_AT_LINE (27)) COMMA_SOURCE_FILE_AT_LINE (27)) COMMA_SOURCE_FILE_AT_LINE (27)) ;
  }
  GALGAS_uintlist var_registerAddressList ;
  GALGAS_uint var_size ;
  GALGAS_uint var_registerAddress = GALGAS_uint ((PMUInt32) 0U) ;
  GALGAS_string joker_1204_0 ; // Joker input parameter
  constinArgument_inRegisterTable.method_searchKey (object->mAttribute_mRegisterName, var_registerAddressList, var_size, outArgument_outBitSliceTable, joker_1204_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (33)) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (35)).objectCompare (var_size)).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_location location_2 (object->mAttribute_mOffset.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("this offset is too large: should be lower than ").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (36)) COMMA_SOURCE_FILE_AT_LINE (36)) COMMA_SOURCE_FILE_AT_LINE (36)) ;
  }
  GALGAS_bool var_found = GALGAS_bool (false) ;
  cEnumerator_uintlist enumerator_1408 (var_registerAddressList, kEnumeration_up) ;
  bool bool_3 = var_found.operator_not (SOURCE_FILE_AT_LINE (40)).isValidAndTrue () ;
  if (enumerator_1408.hasCurrentObject () && bool_3) {
    while (enumerator_1408.hasCurrentObject () && bool_3) {
      var_found = GALGAS_bool (kIsStrictInf, enumerator_1408.current_mValue (HERE).objectCompare (constinArgument_inAccessBankSplitOffset)).operator_or (GALGAS_bool (kIsSupOrEqual, enumerator_1408.current_mValue (HERE).objectCompare (GALGAS_uint ((PMUInt32) 3840U).add_operation (constinArgument_inAccessBankSplitOffset, inCompiler COMMA_SOURCE_FILE_AT_LINE (41)))) COMMA_SOURCE_FILE_AT_LINE (41)) ;
      var_registerAddress = enumerator_1408.current_mValue (HERE) ;
      enumerator_1408.gotoNextObject () ;
      if (enumerator_1408.hasCurrentObject ()) {
        bool_3 = var_found.operator_not (SOURCE_FILE_AT_LINE (40)).isValidAndTrue () ;
      }
    }
  }
  GALGAS_bool var_needsBSRaccess = GALGAS_bool (false) ;
  const enumGalgasBool test_4 = var_found.operator_not (SOURCE_FILE_AT_LINE (45)).boolEnum () ;
  if (kBoolTrue == test_4) {
    var_needsBSRaccess = GALGAS_bool (true) ;
    var_registerAddressList.method_first (var_registerAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (47)) ;
    GALGAS_uint var_neededBank = var_registerAddress.right_shift_operation (GALGAS_uint ((PMUInt32) 8U) COMMA_SOURCE_FILE_AT_LINE (48)) ;
    const enumGalgasBool test_5 = GALGAS_bool (kIsNotEqual, var_neededBank.objectCompare (constinArgument_inCurrentBank)).boolEnum () ;
    if (kBoolTrue == test_5) {
      GALGAS_string var_errorMessage = GALGAS_string ("Accessing the '").operator_concat (object->mAttribute_mRegisterName.reader_string (SOURCE_FILE_AT_LINE (50)) COMMA_SOURCE_FILE_AT_LINE (50)).operator_concat (GALGAS_string ("' needs the bank selection set to ") COMMA_SOURCE_FILE_AT_LINE (50)).operator_concat (var_neededBank.reader_string (SOURCE_FILE_AT_LINE (50)) COMMA_SOURCE_FILE_AT_LINE (50)) ;
      const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, constinArgument_inCurrentBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (51)))).boolEnum () ;
      if (kBoolTrue == test_6) {
        var_errorMessage.dotAssign_operation (GALGAS_string (", but current bank selection cannot be known") COMMA_SOURCE_FILE_AT_LINE (52)) ;
      }else if (kBoolFalse == test_6) {
        var_errorMessage.dotAssign_operation (GALGAS_string (", but current bank selection is set to ").operator_concat (constinArgument_inCurrentBank.reader_string (SOURCE_FILE_AT_LINE (54)) COMMA_SOURCE_FILE_AT_LINE (54)) COMMA_SOURCE_FILE_AT_LINE (54)) ;
      }
      GALGAS_location location_7 (object->mAttribute_mRegisterName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_7, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (56)) ;
    }
  }
  outArgument_outIPICregisterDescription = GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression::constructor_new (var_assemblyString, var_registerAddress.add_operation (object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (62)), inCompiler COMMA_SOURCE_FILE_AT_LINE (62)), var_needsBSRaccess COMMA_SOURCE_FILE_AT_LINE (60)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_registerExpression_analyzeRegisterExpression (void) {
  enterCategoryMethod_analyzeRegisterExpression (kTypeDescriptor_GALGAS_registerExpression.mSlotID,
                                                 categoryMethod_registerExpression_analyzeRegisterExpression) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_registerExpression_analyzeRegisterExpression (void) {
  gCategoryMethodTable_registerExpression_analyzeRegisterExpression.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_registerExpression_analyzeRegisterExpression (defineCategoryMethod_registerExpression_analyzeRegisterExpression,
                                                                         freeCategoryMethod_registerExpression_analyzeRegisterExpression) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@registerExpression analyzeRegisterExpressionWithoutCheckingBank'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_registerExpression_analyzeRegisterExpressionWithoutCheckingBank> gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeRegisterExpressionWithoutCheckingBank (const PMSInt32 inClassIndex,
                                                                       categoryMethodSignature_registerExpression_analyzeRegisterExpressionWithoutCheckingBank inMethod) {
  gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeRegisterExpressionWithoutCheckingBank (const cPtr_registerExpression * inObject,
                                                                      const GALGAS_registerTable constin_inRegisterTable,
                                                                      GALGAS_ipic_31__38__5F_intermediate_5F_registerExpressionWithoutBSRIndication & out_outIPICregisterDescription,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  out_outIPICregisterDescription.drop () ;
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_registerExpression) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_registerExpression_analyzeRegisterExpressionWithoutCheckingBank f = NULL ;
    if (classIndex < gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank.count ()) {
      f = gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank.count ()) {
           f = gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inRegisterTable, out_outIPICregisterDescription, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*

static void categoryMethod_registerExpression_analyzeRegisterExpressionWithoutCheckingBank (const cPtr_registerExpression * inObject,
                                                                                            const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                                            GALGAS_ipic_31__38__5F_intermediate_5F_registerExpressionWithoutBSRIndication & outArgument_outIPICregisterDescription,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_registerExpression * object = inObject ;
  macroValidSharedObject (object, const cPtr_registerExpression) ;
  GALGAS_string var_assemblyString = object->mAttribute_mRegisterName.reader_string (SOURCE_FILE_AT_LINE (74)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (75)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_assemblyString.dotAssign_operation (GALGAS_string (" + ").operator_concat (object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (76)).reader_hexString (SOURCE_FILE_AT_LINE (76)) COMMA_SOURCE_FILE_AT_LINE (76)) COMMA_SOURCE_FILE_AT_LINE (76)) ;
  }
  GALGAS_uintlist var_registerAddressList ;
  GALGAS_uint var_size ;
  GALGAS_bitSliceTable joker_2953_0 ; // Joker input parameter
  GALGAS_string joker_2956_0 ; // Joker input parameter
  constinArgument_inRegisterTable.method_searchKey (object->mAttribute_mRegisterName, var_registerAddressList, var_size, joker_2953_0, joker_2956_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (79)) ;
  GALGAS_uint var_registerAddress ;
  var_registerAddressList.method_first (var_registerAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (80)) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (82)).objectCompare (var_size)).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_location location_2 (object->mAttribute_mOffset.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("this offset is too large: should be lower than ").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (83)) COMMA_SOURCE_FILE_AT_LINE (83)) COMMA_SOURCE_FILE_AT_LINE (83)) ;
  }
  outArgument_outIPICregisterDescription = GALGAS_ipic_31__38__5F_intermediate_5F_registerExpressionWithoutBSRIndication::constructor_new (var_assemblyString, var_registerAddress.add_operation (object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (88)), inCompiler COMMA_SOURCE_FILE_AT_LINE (88)) COMMA_SOURCE_FILE_AT_LINE (86)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_registerExpression_analyzeRegisterExpressionWithoutCheckingBank (void) {
  enterCategoryMethod_analyzeRegisterExpressionWithoutCheckingBank (kTypeDescriptor_GALGAS_registerExpression.mSlotID,
                                                                    categoryMethod_registerExpression_analyzeRegisterExpressionWithoutCheckingBank) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_registerExpression_analyzeRegisterExpressionWithoutCheckingBank (void) {
  gCategoryMethodTable_registerExpression_analyzeRegisterExpressionWithoutCheckingBank.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_registerExpression_analyzeRegisterExpressionWithoutCheckingBank (defineCategoryMethod_registerExpression_analyzeRegisterExpressionWithoutCheckingBank,
                                                                                            freeCategoryMethod_registerExpression_analyzeRegisterExpressionWithoutCheckingBank) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Category reader '@registerExpression getRegisterAddress'          *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_registerExpression_getRegisterAddress> gCategoryReaderTable_registerExpression_getRegisterAddress ;

//---------------------------------------------------------------------------*

void enterCategoryReader_getRegisterAddress (const PMSInt32 inClassIndex,
                                             categoryReaderSignature_registerExpression_getRegisterAddress inReader) {
  gCategoryReaderTable_registerExpression_getRegisterAddress.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_uint callCategoryReader_getRegisterAddress (const cPtr_registerExpression * inObject,
                                                   const GALGAS_registerTable & in_inRegisterTable,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  GALGAS_uint result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_registerExpression) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_registerExpression_getRegisterAddress f = NULL ;
    if (classIndex < gCategoryReaderTable_registerExpression_getRegisterAddress.count ()) {
      f = gCategoryReaderTable_registerExpression_getRegisterAddress (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_registerExpression_getRegisterAddress.count ()) {
           f = gCategoryReaderTable_registerExpression_getRegisterAddress (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_registerExpression_getRegisterAddress.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, in_inRegisterTable, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_uint categoryReader_registerExpression_getRegisterAddress (const cPtr_registerExpression * inObject,
                                                                         const GALGAS_registerTable & constinArgument_inRegisterTable,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_uint result_outRegisterAddress ; // Returned variable
  const cPtr_registerExpression * object = inObject ;
  macroValidSharedObject (object, const cPtr_registerExpression) ;
  GALGAS_uintlist var_registerAddressList ;
  GALGAS_uint var_size ;
  GALGAS_bitSliceTable joker_3612_0 ; // Joker input parameter
  GALGAS_string joker_3615_0 ; // Joker input parameter
  constinArgument_inRegisterTable.method_searchKey (object->mAttribute_mRegisterName, var_registerAddressList, var_size, joker_3612_0, joker_3615_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (98)) ;
  var_registerAddressList.method_first (result_outRegisterAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (99)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, object->mAttribute_mOffset.reader_uint (SOURCE_FILE_AT_LINE (101)).objectCompare (var_size)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mOffset.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("this offset is too large: should be lower than ").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (102)) COMMA_SOURCE_FILE_AT_LINE (102)) COMMA_SOURCE_FILE_AT_LINE (102)) ;
  }
//---
  return result_outRegisterAddress ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_registerExpression_getRegisterAddress (void) {
  enterCategoryReader_getRegisterAddress (kTypeDescriptor_GALGAS_registerExpression.mSlotID,
                                          categoryReader_registerExpression_getRegisterAddress) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_registerExpression_getRegisterAddress (void) {
  gCategoryReaderTable_registerExpression_getRegisterAddress.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_registerExpression_getRegisterAddress (defineCategoryReader_registerExpression_getRegisterAddress,
                                                                  freeCategoryReader_registerExpression_getRegisterAddress) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Abstract category method '@pic18PiccoloSimpleInstruction analyzeSimpleInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction> gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeSimpleInstruction (const PMSInt32 inClassIndex,
                                                   categoryMethodSignature_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction inMethod) {
  gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction (void) {
  gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction (NULL,
                                                                                         freeCategoryMethod_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                  const GALGAS_uint constin_inAccessBankSplitOffset,
                                                  const GALGAS_routineMap constin_inRoutineMap,
                                                  const GALGAS_registerTable constin_inRegisterTable,
                                                  const GALGAS_dataMap constin_inDataMap,
                                                  const GALGAS_constantMap constin_inConstantMap,
                                                  GALGAS_uint & io_ioCurrentBank,
                                                  const GALGAS_bool constin_inShouldPreserveBSR,
                                                  GALGAS_ipic_31__38_SequentialInstruction & out_outInstruction,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
//--- Drop output arguments
  out_outInstruction.drop () ;
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_pic_31__38_PiccoloSimpleInstruction) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction f = NULL ;
    if (classIndex < gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction.count ()) {
      f = gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction.count ()) {
           f = gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_pic_31__38_PiccoloSimpleInstruction_analyzeSimpleInstruction.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAccessBankSplitOffset, constin_inRoutineMap, constin_inRegisterTable, constin_inDataMap, constin_inConstantMap, io_ioCurrentBank, constin_inShouldPreserveBSR, out_outInstruction, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@instruction_withNoOperand analyzeSimpleInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_withNoOperand_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                                  const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                                  const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                                  const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                                                  const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                                  const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                                  GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                                                  const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                                  GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                                  C_Compiler * /* inCompiler */
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_withNoOperand * object = (const cPtr_instruction_5F_withNoOperand *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_withNoOperand) ;
  outArgument_outInstruction = GALGAS_ipic_31__38_InstructionWithNoOperand::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mKind COMMA_SOURCE_FILE_AT_LINE (135)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_withNoOperand_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_withNoOperand.mSlotID,
                                                categoryMethod_instruction_5F_withNoOperand_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_withNoOperand_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_withNoOperand_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@instruction_FDA analyzeSimpleInstruction'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_FDA_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                        const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                        const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                        const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                        const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                        const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                        GALGAS_uint & ioArgument_ioCurrentBank,
                                                                        const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                        GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_FDA * object = (const cPtr_instruction_5F_FDA *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_FDA) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_5572_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, joker_5572_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (153)) ;
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FDA::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mInstruction_5F_FDA_5F_base_5F_code, var_IPICregisterDescription, object->mAttribute_m_5F_W_5F_isDestination COMMA_SOURCE_FILE_AT_LINE (160)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_FDA_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_FDA.mSlotID,
                                                categoryMethod_instruction_5F_FDA_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_FDA_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_FDA_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@instruction_FA analyzeSimpleInstruction'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_FA_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                       const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                       const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                       const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                       const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                       const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                       GALGAS_uint & ioArgument_ioCurrentBank,
                                                                       const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                       GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_FA * object = (const cPtr_instruction_5F_FA *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_FA) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_6384_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, joker_6384_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (180)) ;
  GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code var_code ;
  if (object->mAttribute_mFAinstruction.isValid ()) {
    switch (object->mAttribute_mFAinstruction.enumValue ()) {
    case GALGAS_FA_5F_instruction_5F_base_5F_code::kNotBuilt:
      break ;
    case GALGAS_FA_5F_instruction_5F_base_5F_code::kEnum_CLRF: {
      var_code = GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::constructor_CLRF (SOURCE_FILE_AT_LINE (189)) ;
      } break ;
    case GALGAS_FA_5F_instruction_5F_base_5F_code::kEnum_MOVWF: {
      var_code = GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE_AT_LINE (190)) ;
      } break ;
    case GALGAS_FA_5F_instruction_5F_base_5F_code::kEnum_MULWF: {
      var_code = GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::constructor_MULWF (SOURCE_FILE_AT_LINE (191)) ;
      } break ;
    case GALGAS_FA_5F_instruction_5F_base_5F_code::kEnum_NEGF: {
      var_code = GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::constructor_NEGF (SOURCE_FILE_AT_LINE (192)) ;
      } break ;
    case GALGAS_FA_5F_instruction_5F_base_5F_code::kEnum_SETF: {
      var_code = GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::constructor_SETF (SOURCE_FILE_AT_LINE (193)) ;
      } break ;
    case GALGAS_FA_5F_instruction_5F_base_5F_code::kEnum_CPFSEQ: case GALGAS_FA_5F_instruction_5F_base_5F_code::kEnum_CPFSGT: case GALGAS_FA_5F_instruction_5F_base_5F_code::kEnum_CPFSLT: case GALGAS_FA_5F_instruction_5F_base_5F_code::kEnum_TSTFSZ: {
      inCompiler->emitSemanticError (GALGAS_location::constructor_nowhere (SOURCE_FILE_AT_LINE (195)), GALGAS_string ("*** INTERNAL ERROR ***") COMMA_SOURCE_FILE_AT_LINE (195)) ;
      var_code.drop () ; // Release error dropped variable
      } break ;
    }
  }
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, var_code, var_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (201)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_FA_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_FA.mSlotID,
                                                categoryMethod_instruction_5F_FA_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_FA_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_FA_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@instruction_MOVFF analyzeSimpleInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_MOVFF_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                          const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                          const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                          const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                          const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                          const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                          GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                                          const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                          GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_MOVFF * object = (const cPtr_instruction_5F_MOVFF *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_MOVFF) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpressionWithoutBSRIndication var_sourceIPICregisterDescription ;
  callCategoryMethod_analyzeRegisterExpressionWithoutCheckingBank ((const cPtr_registerExpression *) object->mAttribute_mSourceRegisterName.ptr (), constinArgument_inRegisterTable, var_sourceIPICregisterDescription, inCompiler COMMA_SOURCE_FILE_AT_LINE (220)) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpressionWithoutBSRIndication var_destinationIPICregisterDescription ;
  callCategoryMethod_analyzeRegisterExpressionWithoutCheckingBank ((const cPtr_registerExpression *) object->mAttribute_mDestinationRegisterName.ptr (), constinArgument_inRegisterTable, var_destinationIPICregisterDescription, inCompiler COMMA_SOURCE_FILE_AT_LINE (224)) ;
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF::constructor_new (object->mAttribute_mInstructionLocation, var_sourceIPICregisterDescription, var_destinationIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (228)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_MOVFF_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_MOVFF.mSlotID,
                                                categoryMethod_instruction_5F_MOVFF_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_MOVFF_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_MOVFF_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@instruction_FBA analyzeSimpleInstruction'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_FBA_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                        const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                        const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                        const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                        const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                        const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                        GALGAS_uint & ioArgument_ioCurrentBank,
                                                                        const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                        GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_FBA * object = (const cPtr_instruction_5F_FBA *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_FBA) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable var_bitSliceTable ;
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, var_bitSliceTable, inCompiler COMMA_SOURCE_FILE_AT_LINE (247)) ;
  GALGAS_uint var_bitNumber ;
  callCategoryMethod_getBitNumber ((const cPtr_bitNumberExpression *) object->mAttribute_mBitNumber.ptr (), var_bitSliceTable, var_bitNumber, inCompiler COMMA_SOURCE_FILE_AT_LINE (254)) ;
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FBA::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mBitOrientedOp, var_IPICregisterDescription, var_bitNumber COMMA_SOURCE_FILE_AT_LINE (258)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_FBA_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_FBA.mSlotID,
                                                categoryMethod_instruction_5F_FBA_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_FBA_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_FBA_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@instruction_literalOperation analyzeSimpleInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_literalOperation_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                                     const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                                     const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                                     const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                                     const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                                     const GALGAS_constantMap constinArgument_inConstantMap,
                                                                                     GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                                                     const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                                     GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_literalOperation * object = (const cPtr_instruction_5F_literalOperation *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_literalOperation) ;
  GALGAS_sint var_result ;
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mImmediatExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_result, inCompiler COMMA_SOURCE_FILE_AT_LINE (278)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, var_result.objectCompare (GALGAS_sint ((PMSInt32) 255L))).operator_or (GALGAS_bool (kIsStrictInf, var_result.objectCompare (GALGAS_sint ((PMSInt32) 128L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE_AT_LINE (280)))) COMMA_SOURCE_FILE_AT_LINE (280)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("immediate value is evaluated as ").operator_concat (var_result.reader_string (SOURCE_FILE_AT_LINE (281)) COMMA_SOURCE_FILE_AT_LINE (281)).operator_concat (GALGAS_string (" (should be betwween -128 and 255)") COMMA_SOURCE_FILE_AT_LINE (281)) COMMA_SOURCE_FILE_AT_LINE (281)) ;
  }
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mLiteralInstruction, var_result.operator_and (GALGAS_sint ((PMSInt32) 255L) COMMA_SOURCE_FILE_AT_LINE (287)).reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (287)) COMMA_SOURCE_FILE_AT_LINE (284)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_literalOperation_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_literalOperation.mSlotID,
                                                categoryMethod_instruction_5F_literalOperation_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_literalOperation_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_literalOperation_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@instruction_LFSR analyzeSimpleInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_LFSR_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                         const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                         const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                         const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                         const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                         const GALGAS_constantMap constinArgument_inConstantMap,
                                                                         GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                                         const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                         GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_LFSR * object = (const cPtr_instruction_5F_LFSR *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_LFSR) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, object->mAttribute_mFSRindex.reader_uint (SOURCE_FILE_AT_LINE (303)).objectCompare (GALGAS_uint ((PMUInt32) 2U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mFSRindex.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the LFSR register idx (").operator_concat (object->mAttribute_mFSRindex.reader_uint (SOURCE_FILE_AT_LINE (304)).reader_string (SOURCE_FILE_AT_LINE (304)) COMMA_SOURCE_FILE_AT_LINE (304)).operator_concat (GALGAS_string (") should be lower or equal to 2") COMMA_SOURCE_FILE_AT_LINE (304)) COMMA_SOURCE_FILE_AT_LINE (304)) ;
  }
  GALGAS_sint var_result ;
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mImmediatExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_result, inCompiler COMMA_SOURCE_FILE_AT_LINE (307)) ;
  const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_result.objectCompare (GALGAS_sint ((PMSInt32) 4095L))).operator_or (GALGAS_bool (kIsStrictInf, var_result.objectCompare (GALGAS_sint ((PMSInt32) 0L))) COMMA_SOURCE_FILE_AT_LINE (309)).boolEnum () ;
  if (kBoolTrue == test_2) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("immediate value is evaluated as ").operator_concat (var_result.reader_string (SOURCE_FILE_AT_LINE (310)) COMMA_SOURCE_FILE_AT_LINE (310)).operator_concat (GALGAS_string (" (should be between 0 and 4095)") COMMA_SOURCE_FILE_AT_LINE (310)) COMMA_SOURCE_FILE_AT_LINE (310)) ;
  }
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_LFSR::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mFSRindex, var_result.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (315)) COMMA_SOURCE_FILE_AT_LINE (312)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_LFSR_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_LFSR.mSlotID,
                                                categoryMethod_instruction_5F_LFSR_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_LFSR_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_LFSR_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@instruction_JSR analyzeSimpleInstruction'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_JSR_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                        const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                        const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                        const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                                        const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                        const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                        GALGAS_uint & ioArgument_ioCurrentBank,
                                                                        const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                        GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_JSR * object = (const cPtr_instruction_5F_JSR *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_JSR) ;
  GALGAS_bool var_isNoReturn ;
  GALGAS_uint var_requiredBank ;
  GALGAS_uint var_returnedBank ;
  GALGAS_bool var_preservesBank ;
  constinArgument_inRoutineMap.method_searchKey (object->mAttribute_mTargetLabel, var_isNoReturn, var_requiredBank, var_returnedBank, var_preservesBank, inCompiler COMMA_SOURCE_FILE_AT_LINE (332)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (333)))).operator_and (GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (ioArgument_ioCurrentBank)) COMMA_SOURCE_FILE_AT_LINE (333)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_string var_errorMessage = GALGAS_string ("the routine '").operator_concat (object->mAttribute_mTargetLabel.reader_string (SOURCE_FILE_AT_LINE (334)) COMMA_SOURCE_FILE_AT_LINE (334)).operator_concat (GALGAS_string ("' requires BSR to be set to ") COMMA_SOURCE_FILE_AT_LINE (334)).operator_concat (var_requiredBank.reader_string (SOURCE_FILE_AT_LINE (334)) COMMA_SOURCE_FILE_AT_LINE (334)) ;
    var_errorMessage.dotAssign_operation (GALGAS_string (", but BSR ") COMMA_SOURCE_FILE_AT_LINE (335)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, ioArgument_ioCurrentBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (336)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_errorMessage.dotAssign_operation (GALGAS_string ("does contain any reliable value") COMMA_SOURCE_FILE_AT_LINE (337)) ;
    }else if (kBoolFalse == test_1) {
      var_errorMessage.dotAssign_operation (GALGAS_string ("is set to ").operator_concat (ioArgument_ioCurrentBank.reader_string (SOURCE_FILE_AT_LINE (339)) COMMA_SOURCE_FILE_AT_LINE (339)) COMMA_SOURCE_FILE_AT_LINE (339)) ;
    }
    GALGAS_location location_2 (object->mAttribute_mTargetLabel.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (341)) ;
  }
  const enumGalgasBool test_3 = var_isNoReturn.boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_location location_4 (object->mAttribute_mTargetLabel.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_4, GALGAS_string ("a \"noreturn\" routine should be called with a BRA, GOTO, Bcc or JUMP instruction") COMMA_SOURCE_FILE_AT_LINE (344)) ;
  }
  const enumGalgasBool test_5 = var_preservesBank.operator_not (SOURCE_FILE_AT_LINE (346)).boolEnum () ;
  if (kBoolTrue == test_5) {
    ioArgument_ioCurrentBank = var_returnedBank ;
    const enumGalgasBool test_6 = constinArgument_inShouldPreserveBSR.boolEnum () ;
    if (kBoolTrue == test_6) {
      GALGAS_location location_7 (object->mAttribute_mTargetLabel.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_7, GALGAS_string ("the routine call should preserve bank selection") COMMA_SOURCE_FILE_AT_LINE (349)) ;
    }
  }
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_JSR::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mTargetLabel, object->mAttribute_mKind COMMA_SOURCE_FILE_AT_LINE (353)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_JSR_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_JSR.mSlotID,
                                                categoryMethod_instruction_5F_JSR_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_JSR_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_JSR_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Abstract category method '@pic18PiccoloInstruction analyze'        *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_pic_31__38_PiccoloInstruction_analyze> gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyze (const PMSInt32 inClassIndex,
                                  categoryMethodSignature_pic_31__38_PiccoloInstruction_analyze inMethod) {
  gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_pic_31__38_PiccoloInstruction_analyze (void) {
  gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_pic_31__38_PiccoloInstruction_analyze (NULL,
                                                                  freeCategoryMethod_pic_31__38_PiccoloInstruction_analyze) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                 const GALGAS_uint constin_inAccessBankSplitOffset,
                                 GALGAS_ipic_31__38_BlockList & io_ioGeneratedBlockList,
                                 const GALGAS_routineMap constin_inRoutineMap,
                                 const GALGAS_registerTable constin_inRegisterTable,
                                 const GALGAS_dataMap constin_inDataMap,
                                 const GALGAS_constantMap constin_inConstantMap,
                                 GALGAS_uint & io_ioLocalLabelIndex,
                                 GALGAS_ipic_31__38_Block & io_ioCurrentBlock,
                                 GALGAS_string & io_ioListFileContents,
                                 GALGAS_uint & io_ioCurrentBank,
                                 const GALGAS_bool constin_inShouldPreserveBSR,
                                 GALGAS_bool & io_ioContinuesInSequence,
                                 const GALGAS_routineKind constin_inRoutineKind,
                                 C_Compiler * inCompiler
                                 COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_pic_31__38_PiccoloInstruction) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_pic_31__38_PiccoloInstruction_analyze f = NULL ;
    if (classIndex < gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze.count ()) {
      f = gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze.count ()) {
           f = gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_pic_31__38_PiccoloInstruction_analyze.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAccessBankSplitOffset, io_ioGeneratedBlockList, constin_inRoutineMap, constin_inRegisterTable, constin_inDataMap, constin_inConstantMap, io_ioLocalLabelIndex, io_ioCurrentBlock, io_ioListFileContents, io_ioCurrentBank, constin_inShouldPreserveBSR, io_ioContinuesInSequence, constin_inRoutineKind, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category method '@pic18PiccoloSimpleInstruction analyze'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_pic_31__38_PiccoloSimpleInstruction_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                        const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                        GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                        const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                        const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                        const GALGAS_dataMap constinArgument_inDataMap,
                                                                        const GALGAS_constantMap constinArgument_inConstantMap,
                                                                        GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                        GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                        GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                        GALGAS_uint & ioArgument_ioCurrentBank,
                                                                        const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                        GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                                        const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_pic_31__38_PiccoloSimpleInstruction * object = (const cPtr_pic_31__38_PiccoloSimpleInstruction *) inObject ;
  macroValidSharedObject (object, const cPtr_pic_31__38_PiccoloSimpleInstruction) ;
  GALGAS_ipic_31__38_SequentialInstruction var_instruction ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_pic_31__38_PiccoloSimpleInstruction temp_0 = object ;
  callCategoryMethod_analyzeSimpleInstruction ((const cPtr_pic_31__38_PiccoloSimpleInstruction *) temp_0.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioCurrentBank, constinArgument_inShouldPreserveBSR, var_instruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (399)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (var_instruction COMMA_SOURCE_FILE_AT_LINE (409)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_pic_31__38_PiccoloSimpleInstruction_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_pic_31__38_PiccoloSimpleInstruction.mSlotID,
                               categoryMethod_pic_31__38_PiccoloSimpleInstruction_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_pic_31__38_PiccoloSimpleInstruction_analyze (defineCategoryMethod_pic_31__38_PiccoloSimpleInstruction_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category method '@instruction_FOREVER analyze'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_FOREVER_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                           const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                           GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                                           const GALGAS_routineMap constinArgument_inRoutineMap,
                                                           const GALGAS_registerTable constinArgument_inRegisterTable,
                                                           const GALGAS_dataMap constinArgument_inDataMap,
                                                           const GALGAS_constantMap constinArgument_inConstantMap,
                                                           GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                           GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                           GALGAS_string & ioArgument_ioListFileContents,
                                                           GALGAS_uint & ioArgument_ioCurrentBank,
                                                           const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                           GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                           const GALGAS_routineKind constinArgument_inRoutineKind,
                                                           C_Compiler * inCompiler
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_FOREVER * object = (const cPtr_instruction_5F_FOREVER *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_FOREVER) ;
  if (constinArgument_inRoutineKind.isValid ()) {
    switch (constinArgument_inRoutineKind.enumValue ()) {
    case GALGAS_routineKind::kNotBuilt:
      break ;
    case GALGAS_routineKind::kEnum_regularRoutine: {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("a regular routine does not accept the \"forever\" instruction") COMMA_SOURCE_FILE_AT_LINE (431)) ;
      } break ;
    case GALGAS_routineKind::kEnum_noReturnRoutine: {
      } break ;
    case GALGAS_routineKind::kEnum_interruptRoutine: {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("an interrupt routine does not accept the \"forever\" instruction") COMMA_SOURCE_FILE_AT_LINE (434)) ;
      } break ;
    }
  }
  GALGAS_uint var_finalBank = ioArgument_ioCurrentBank ;
  GALGAS_lstring var_label_30_ = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (438)) COMMA_SOURCE_FILE_AT_LINE (438)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (438)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (439)) ;
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = GALGAS_ipic_31__38_JumpTerminator::constructor_new (object->mAttribute_mInstructionLocation, var_label_30_, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (441)) COMMA_SOURCE_FILE_AT_LINE (441)) ;
  ioArgument_ioGeneratedBlockList.addAssign_operation (ioArgument_ioCurrentBlock COMMA_SOURCE_FILE_AT_LINE (443)) ;
  ioArgument_ioCurrentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (446)), var_label_30_, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (448)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (object->mAttribute_mInstructionLocation, var_label_30_, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (449)) COMMA_SOURCE_FILE_AT_LINE (449)) COMMA_SOURCE_FILE_AT_LINE (445)) ;
  {
  routine_analyzeInstructionList (object->mAttribute_mInstructionList, ioArgument_ioGeneratedBlockList, constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioLocalLabelIndex, ioArgument_ioCurrentBlock, ioArgument_ioListFileContents, ioArgument_ioCurrentBank, constinArgument_inShouldPreserveBSR, ioArgument_ioContinuesInSequence, constinArgument_inRoutineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (451)) ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, ioArgument_ioCurrentBank.objectCompare (var_finalBank)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mEndOfInstructionList, GALGAS_string ("instruction list does not leave BSR value unchanged") COMMA_SOURCE_FILE_AT_LINE (469)) ;
  }
  ioArgument_ioContinuesInSequence = GALGAS_bool (false) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_FOREVER_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_FOREVER.mSlotID,
                               categoryMethod_instruction_5F_FOREVER_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_FOREVER_analyze (defineCategoryMethod_instruction_5F_FOREVER_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category method '@instruction_nobanksel analyze'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_nobanksel_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                             const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                             GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                             const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                             const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                             const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                             const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                             GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                             GALGAS_ipic_31__38_Block & /* ioArgument_ioCurrentBlock */,
                                                             GALGAS_string & /* ioArgument_ioListFileContents */,
                                                             GALGAS_uint & ioArgument_ioCurrentBank,
                                                             const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                             GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                             const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                             C_Compiler * inCompiler
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_nobanksel * object = (const cPtr_instruction_5F_nobanksel *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_nobanksel) ;
  const enumGalgasBool test_0 = constinArgument_inShouldPreserveBSR.boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("cannot use \"nobank\" here: BSR should be preserved (use it in a \"banksave\" construct)") COMMA_SOURCE_FILE_AT_LINE (492)) ;
  }
  ioArgument_ioCurrentBank = GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (494)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_nobanksel_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_nobanksel.mSlotID,
                               categoryMethod_instruction_5F_nobanksel_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_nobanksel_analyze (defineCategoryMethod_instruction_5F_nobanksel_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category method '@instruction_savebank analyze'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_savebank_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                            const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                            GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                                            const GALGAS_routineMap constinArgument_inRoutineMap,
                                                            const GALGAS_registerTable constinArgument_inRegisterTable,
                                                            const GALGAS_dataMap constinArgument_inDataMap,
                                                            const GALGAS_constantMap constinArgument_inConstantMap,
                                                            GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                            GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                            GALGAS_string & ioArgument_ioListFileContents,
                                                            GALGAS_uint & ioArgument_ioCurrentBank,
                                                            const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                            GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                            const GALGAS_routineKind constinArgument_inRoutineKind,
                                                            C_Compiler * inCompiler
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_savebank * object = (const cPtr_instruction_5F_savebank *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_savebank) ;
  GALGAS_registerExpression var_BSRregister = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("BSR"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (516)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (516)) COMMA_SOURCE_FILE_AT_LINE (516)) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpressionWithoutBSRIndication var_BSR_5F_IPICregisterDescription ;
  callCategoryMethod_analyzeRegisterExpressionWithoutCheckingBank ((const cPtr_registerExpression *) var_BSRregister.ptr (), constinArgument_inRegisterTable, var_BSR_5F_IPICregisterDescription, inCompiler COMMA_SOURCE_FILE_AT_LINE (517)) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpressionWithoutBSRIndication var_save_5F_IPICregisterDescription ;
  callCategoryMethod_analyzeRegisterExpressionWithoutCheckingBank ((const cPtr_registerExpression *) object->mAttribute_mRegister.ptr (), constinArgument_inRegisterTable, var_save_5F_IPICregisterDescription, inCompiler COMMA_SOURCE_FILE_AT_LINE (522)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF::constructor_new (object->mAttribute_mInstructionLocation, var_BSR_5F_IPICregisterDescription, var_save_5F_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (527)) COMMA_SOURCE_FILE_AT_LINE (527)) ;
  GALGAS_uint var_finalBank = ioArgument_ioCurrentBank ;
  {
  routine_analyzeInstructionList (object->mAttribute_mInstructionList, ioArgument_ioGeneratedBlockList, constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioLocalLabelIndex, ioArgument_ioCurrentBlock, ioArgument_ioListFileContents, var_finalBank, GALGAS_bool (false), ioArgument_ioContinuesInSequence, constinArgument_inRoutineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (534)) ;
  }
  const enumGalgasBool test_0 = ioArgument_ioContinuesInSequence.operator_not (SOURCE_FILE_AT_LINE (550)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mEndOfSaveBankInstruction, GALGAS_string ("useless saving: execution does reach the end of \"savebank\" instruction list") COMMA_SOURCE_FILE_AT_LINE (551)) ;
  }
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVFF::constructor_new (object->mAttribute_mInstructionLocation, var_save_5F_IPICregisterDescription, var_BSR_5F_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (554)) COMMA_SOURCE_FILE_AT_LINE (554)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_savebank_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_savebank.mSlotID,
                               categoryMethod_instruction_5F_savebank_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_savebank_analyze (defineCategoryMethod_instruction_5F_savebank_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category method '@instruction_banksel analyze'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_banksel_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                           const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                           GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                           const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                           const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                           const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                           const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                           GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                           GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                           GALGAS_string & /* ioArgument_ioListFileContents */,
                                                           GALGAS_uint & ioArgument_ioCurrentBank,
                                                           const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                           GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                           const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                           C_Compiler * inCompiler
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_banksel * object = (const cPtr_instruction_5F_banksel *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_banksel) ;
  const enumGalgasBool test_0 = constinArgument_inShouldPreserveBSR.boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("cannot use \"banksel\" here: bank selection should be preserved (use \"banksave\" instruction)") COMMA_SOURCE_FILE_AT_LINE (579)) ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, object->mAttribute_mBankIndex.reader_uint (SOURCE_FILE_AT_LINE (581)).objectCompare (GALGAS_uint ((PMUInt32) 15U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_location location_2 (object->mAttribute_mBankIndex.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("selected bank idx should be lower or equal to 15") COMMA_SOURCE_FILE_AT_LINE (582)) ;
    ioArgument_ioCurrentBank = GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (583)) ;
  }else if (kBoolFalse == test_1) {
    const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, object->mAttribute_mBankIndex.reader_uint (SOURCE_FILE_AT_LINE (584)).objectCompare (ioArgument_ioCurrentBank)).boolEnum () ;
    if (kBoolTrue == test_3) {
      ioArgument_ioCurrentBank = object->mAttribute_mBankIndex.reader_uint (SOURCE_FILE_AT_LINE (585)) ;
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mBankIndex COMMA_SOURCE_FILE_AT_LINE (586)) COMMA_SOURCE_FILE_AT_LINE (586)) ;
    }else if (kBoolFalse == test_3) {
      const enumGalgasBool test_4 = object->mAttribute_mWarningOnUselessBanksel.boolEnum () ;
      if (kBoolTrue == test_4) {
        GALGAS_location location_5 (object->mAttribute_mBankIndex.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticWarning (location_5, GALGAS_string ("useless instruction: the bank ").operator_concat (ioArgument_ioCurrentBank.reader_string (SOURCE_FILE_AT_LINE (588)) COMMA_SOURCE_FILE_AT_LINE (588)).operator_concat (GALGAS_string (" is already selected") COMMA_SOURCE_FILE_AT_LINE (588)) COMMA_SOURCE_FILE_AT_LINE (588)) ;
      }
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_banksel_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_banksel.mSlotID,
                               categoryMethod_instruction_5F_banksel_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_banksel_analyze (defineCategoryMethod_instruction_5F_banksel_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category method '@instruction_banksel_register analyze'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_banksel_5F_register_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                       const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                       GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                       const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                       const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                       const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                       const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                       GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                       GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                       GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                       GALGAS_uint & ioArgument_ioCurrentBank,
                                                                       const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                       GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                                       const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_banksel_5F_register * object = (const cPtr_instruction_5F_banksel_5F_register *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_banksel_5F_register) ;
  const enumGalgasBool test_0 = constinArgument_inShouldPreserveBSR.boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("cannot use \"banksel\" here: bank selection should be preserved (use \"banksave\" instruction)") COMMA_SOURCE_FILE_AT_LINE (610)) ;
  }
  GALGAS_uint var_registerAddress = callCategoryReader_getRegisterAddress ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inRegisterTable, inCompiler COMMA_SOURCE_FILE_AT_LINE (612)) ;
  GALGAS_uint var_newBank = var_registerAddress.right_shift_operation (GALGAS_uint ((PMUInt32) 8U) COMMA_SOURCE_FILE_AT_LINE (613)) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, ioArgument_ioCurrentBank.objectCompare (var_newBank)).boolEnum () ;
  if (kBoolTrue == test_1) {
    ioArgument_ioCurrentBank = var_newBank ;
    ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MOVLB::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_luint::constructor_new (var_newBank, object->mAttribute_mRegisterExpression.reader_mRegisterName (SOURCE_FILE_AT_LINE (618)).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (618)) COMMA_SOURCE_FILE_AT_LINE (616)) COMMA_SOURCE_FILE_AT_LINE (616)) ;
  }else if (kBoolFalse == test_1) {
    const enumGalgasBool test_2 = object->mAttribute_mWarningOnUselessBanksel.boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mRegisterExpression.reader_mRegisterName (SOURCE_FILE_AT_LINE (621)).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticWarning (location_3, GALGAS_string ("useless instruction: the bank ").operator_concat (var_newBank.reader_string (SOURCE_FILE_AT_LINE (621)) COMMA_SOURCE_FILE_AT_LINE (621)).operator_concat (GALGAS_string (" is already selected") COMMA_SOURCE_FILE_AT_LINE (621)) COMMA_SOURCE_FILE_AT_LINE (621)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_banksel_5F_register_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_banksel_5F_register.mSlotID,
                               categoryMethod_instruction_5F_banksel_5F_register_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_banksel_5F_register_analyze (defineCategoryMethod_instruction_5F_banksel_5F_register_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@instruction_TBLRD analyzeSimpleInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_TBLRD_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                          const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                          const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                          const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                                          const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                          const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                          GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                                          const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                          GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                          C_Compiler * /* inCompiler */
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_TBLRD * object = (const cPtr_instruction_5F_TBLRD *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_TBLRD) ;
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLRD::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mOption COMMA_SOURCE_FILE_AT_LINE (637)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_TBLRD_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_TBLRD.mSlotID,
                                                categoryMethod_instruction_5F_TBLRD_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_TBLRD_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_TBLRD_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@instruction_TBLWT analyzeSimpleInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_TBLWT_analyzeSimpleInstruction (const cPtr_pic_31__38_PiccoloSimpleInstruction * inObject,
                                                                          const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                          const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                          const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                                          const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                          const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                                          GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                                          const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                          GALGAS_ipic_31__38_SequentialInstruction & outArgument_outInstruction,
                                                                          C_Compiler * /* inCompiler */
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_TBLWT * object = (const cPtr_instruction_5F_TBLWT *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_TBLWT) ;
  outArgument_outInstruction = GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_TBLWT::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mOption COMMA_SOURCE_FILE_AT_LINE (655)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_TBLWT_analyzeSimpleInstruction (void) {
  enterCategoryMethod_analyzeSimpleInstruction (kTypeDescriptor_GALGAS_instruction_5F_TBLWT.mSlotID,
                                                categoryMethod_instruction_5F_TBLWT_analyzeSimpleInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_TBLWT_analyzeSimpleInstruction (defineCategoryMethod_instruction_5F_TBLWT_analyzeSimpleInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category method '@instruction_MNOP analyze'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_MNOP_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                        const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                        GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                        const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                        const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                        const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                        const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                        GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                        GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                        GALGAS_string & /* ioArgument_ioListFileContents */,
                                                        GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                        const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                        GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                        const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                        C_Compiler * inCompiler
                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_MNOP * object = (const cPtr_instruction_5F_MNOP *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_MNOP) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mOccurrenceFactor.reader_uint (SOURCE_FILE_AT_LINE (679)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mOccurrenceFactor.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticWarning (location_1, GALGAS_string ("occurrence argument is zero: no generated code") COMMA_SOURCE_FILE_AT_LINE (680)) ;
  }
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_MNOP::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mOccurrenceFactor COMMA_SOURCE_FILE_AT_LINE (683)) COMMA_SOURCE_FILE_AT_LINE (683)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_MNOP_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_MNOP.mSlotID,
                               categoryMethod_instruction_5F_MNOP_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_MNOP_analyze (defineCategoryMethod_instruction_5F_MNOP_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category method '@instruction_LTBLPTR analyze'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_LTBLPTR_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                           const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                           GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                           const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                           const GALGAS_registerTable constinArgument_inRegisterTable,
                                                           const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                           const GALGAS_constantMap constinArgument_inConstantMap,
                                                           GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                           GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                           GALGAS_string & /* ioArgument_ioListFileContents */,
                                                           GALGAS_uint & ioArgument_ioCurrentBank,
                                                           const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                           GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                           const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                           C_Compiler * inCompiler
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_LTBLPTR * object = (const cPtr_instruction_5F_LTBLPTR *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_LTBLPTR) ;
  GALGAS_sint var_result ;
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mImmediatExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_result, inCompiler COMMA_SOURCE_FILE_AT_LINE (706)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, var_result.objectCompare (GALGAS_sint ((PMSInt32) 16777215L))).operator_or (GALGAS_bool (kIsStrictInf, var_result.objectCompare (GALGAS_sint ((PMSInt32) 0L))) COMMA_SOURCE_FILE_AT_LINE (708)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("immediate value is evaluated as ").operator_concat (var_result.reader_string (SOURCE_FILE_AT_LINE (709)) COMMA_SOURCE_FILE_AT_LINE (709)).operator_concat (GALGAS_string (" (should be between 0 and 0xFF_FFFF)") COMMA_SOURCE_FILE_AT_LINE (709)) COMMA_SOURCE_FILE_AT_LINE (709)) ;
  }
  GALGAS_uint var_address = var_result.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (711)) ;
  GALGAS_registerExpression var_TBLPTRU = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("TBLPTRU"), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (713)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (713)) COMMA_SOURCE_FILE_AT_LINE (713)) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_outIPICregisterDescription ;
  GALGAS_bitSliceTable joker_24756_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) var_TBLPTRU.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_outIPICregisterDescription, joker_24756_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (714)) ;
  GALGAS_uint var_upper = var_address.right_shift_operation (GALGAS_uint ((PMUInt32) 16U) COMMA_SOURCE_FILE_AT_LINE (721)) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_upper.objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::constructor_CLRF (SOURCE_FILE_AT_LINE (725)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (723)) COMMA_SOURCE_FILE_AT_LINE (723)) ;
  }else if (kBoolFalse == test_1) {
    const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_upper.objectCompare (GALGAS_uint ((PMUInt32) 255U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::constructor_SETF (SOURCE_FILE_AT_LINE (731)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (729)) COMMA_SOURCE_FILE_AT_LINE (729)) ;
    }else if (kBoolFalse == test_2) {
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_literal_5F_instruction_5F_opcode::constructor_MOVLW (SOURCE_FILE_AT_LINE (737)), var_upper COMMA_SOURCE_FILE_AT_LINE (735)) COMMA_SOURCE_FILE_AT_LINE (735)) ;
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE_AT_LINE (742)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (740)) COMMA_SOURCE_FILE_AT_LINE (740)) ;
    }
  }
  GALGAS_registerExpression var_TBLPTRH = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("TBLPTRH"), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (747)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (747)) COMMA_SOURCE_FILE_AT_LINE (747)) ;
  GALGAS_bitSliceTable joker_25963_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) var_TBLPTRH.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_outIPICregisterDescription, joker_25963_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (748)) ;
  GALGAS_uint var_high = var_address.right_shift_operation (GALGAS_uint ((PMUInt32) 8U) COMMA_SOURCE_FILE_AT_LINE (755)).operator_and (GALGAS_uint ((PMUInt32) 255U) COMMA_SOURCE_FILE_AT_LINE (755)) ;
  const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, var_high.objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_3) {
    ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::constructor_CLRF (SOURCE_FILE_AT_LINE (759)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (757)) COMMA_SOURCE_FILE_AT_LINE (757)) ;
  }else if (kBoolFalse == test_3) {
    const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, var_high.objectCompare (GALGAS_uint ((PMUInt32) 255U))).boolEnum () ;
    if (kBoolTrue == test_4) {
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::constructor_SETF (SOURCE_FILE_AT_LINE (765)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (763)) COMMA_SOURCE_FILE_AT_LINE (763)) ;
    }else if (kBoolFalse == test_4) {
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_literal_5F_instruction_5F_opcode::constructor_MOVLW (SOURCE_FILE_AT_LINE (771)), var_high COMMA_SOURCE_FILE_AT_LINE (769)) COMMA_SOURCE_FILE_AT_LINE (769)) ;
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE_AT_LINE (776)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (774)) COMMA_SOURCE_FILE_AT_LINE (774)) ;
    }
  }
  GALGAS_registerExpression var_TBLPTRL = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("TBLPTRL"), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (781)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (781)) COMMA_SOURCE_FILE_AT_LINE (781)) ;
  GALGAS_bitSliceTable joker_27173_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) var_TBLPTRL.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_outIPICregisterDescription, joker_27173_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (782)) ;
  GALGAS_uint var_low = var_address.operator_and (GALGAS_uint ((PMUInt32) 255U) COMMA_SOURCE_FILE_AT_LINE (789)) ;
  const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, var_low.objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_5) {
    ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::constructor_CLRF (SOURCE_FILE_AT_LINE (793)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (791)) COMMA_SOURCE_FILE_AT_LINE (791)) ;
  }else if (kBoolFalse == test_5) {
    const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, var_low.objectCompare (GALGAS_uint ((PMUInt32) 255U))).boolEnum () ;
    if (kBoolTrue == test_6) {
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::constructor_SETF (SOURCE_FILE_AT_LINE (799)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (797)) COMMA_SOURCE_FILE_AT_LINE (797)) ;
    }else if (kBoolFalse == test_6) {
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_literalOperation::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_literal_5F_instruction_5F_opcode::constructor_MOVLW (SOURCE_FILE_AT_LINE (805)), var_low COMMA_SOURCE_FILE_AT_LINE (803)) COMMA_SOURCE_FILE_AT_LINE (803)) ;
      ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE_AT_LINE (810)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (808)) COMMA_SOURCE_FILE_AT_LINE (808)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_LTBLPTR_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_LTBLPTR.mSlotID,
                               categoryMethod_instruction_5F_LTBLPTR_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_LTBLPTR_analyze (defineCategoryMethod_instruction_5F_LTBLPTR_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category method '@instruction_LDATAPTR analyze'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_LDATAPTR_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                            const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                            GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                            const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                            const GALGAS_registerTable constinArgument_inRegisterTable,
                                                            const GALGAS_dataMap constinArgument_inDataMap,
                                                            const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                            GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                            GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                            GALGAS_string & /* ioArgument_ioListFileContents */,
                                                            GALGAS_uint & ioArgument_ioCurrentBank,
                                                            const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                            GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                            const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                            C_Compiler * inCompiler
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_LDATAPTR * object = (const cPtr_instruction_5F_LDATAPTR *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_LDATAPTR) ;
  GALGAS_uint var_dataSize ;
  constinArgument_inDataMap.method_searchKey (object->mAttribute_mDataName, var_dataSize, inCompiler COMMA_SOURCE_FILE_AT_LINE (833)) ;
  GALGAS_lstring var_labelName = GALGAS_lstring::constructor_new (GALGAS_string ("_data_").operator_concat (object->mAttribute_mDataName.reader_string (SOURCE_FILE_AT_LINE (834)) COMMA_SOURCE_FILE_AT_LINE (834)), object->mAttribute_mDataName.mAttribute_location COMMA_SOURCE_FILE_AT_LINE (834)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsSupOrEqual, object->mAttribute_mDataIndex.reader_uint (SOURCE_FILE_AT_LINE (836)).objectCompare (var_dataSize)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mDataIndex.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("index should be < ").operator_concat (var_dataSize.reader_string (SOURCE_FILE_AT_LINE (837)) COMMA_SOURCE_FILE_AT_LINE (837)) COMMA_SOURCE_FILE_AT_LINE (837)) ;
  }
  GALGAS_registerExpression var_TBLPTRU = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("TBLPTRU"), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (840)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (840)) COMMA_SOURCE_FILE_AT_LINE (840)) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_outIPICregisterDescription ;
  GALGAS_bitSliceTable joker_29245_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) var_TBLPTRU.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_outIPICregisterDescription, joker_29245_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (841)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W::constructor_new (object->mAttribute_mInstructionLocation, var_labelName, object->mAttribute_mDataIndex.reader_uint (SOURCE_FILE_AT_LINE (851)).multiply_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (851)), GALGAS_uint ((PMUInt32) 16U) COMMA_SOURCE_FILE_AT_LINE (848)) COMMA_SOURCE_FILE_AT_LINE (848)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE_AT_LINE (856)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (854)) COMMA_SOURCE_FILE_AT_LINE (854)) ;
  GALGAS_registerExpression var_TBLPTRH = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("TBLPTRH"), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (860)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (860)) COMMA_SOURCE_FILE_AT_LINE (860)) ;
  GALGAS_bitSliceTable joker_29898_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) var_TBLPTRH.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_outIPICregisterDescription, joker_29898_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (861)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W::constructor_new (object->mAttribute_mInstructionLocation, var_labelName, object->mAttribute_mDataIndex.reader_uint (SOURCE_FILE_AT_LINE (871)).multiply_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (871)), GALGAS_uint ((PMUInt32) 8U) COMMA_SOURCE_FILE_AT_LINE (868)) COMMA_SOURCE_FILE_AT_LINE (868)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE_AT_LINE (876)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (874)) COMMA_SOURCE_FILE_AT_LINE (874)) ;
  GALGAS_registerExpression var_TBLPTRL = GALGAS_registerExpression::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("TBLPTRL"), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (880)), GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (880)) COMMA_SOURCE_FILE_AT_LINE (880)) ;
  GALGAS_bitSliceTable joker_30549_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) var_TBLPTRL.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_outIPICregisterDescription, joker_30549_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (881)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_MOV_5F_LABEL_5F_W::constructor_new (object->mAttribute_mInstructionLocation, var_labelName, object->mAttribute_mDataIndex.reader_uint (SOURCE_FILE_AT_LINE (891)).multiply_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (891)), GALGAS_uint ((PMUInt32) 0U) COMMA_SOURCE_FILE_AT_LINE (888)) COMMA_SOURCE_FILE_AT_LINE (888)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_FA::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_FA_5F_sequential_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE_AT_LINE (896)), var_outIPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (894)) COMMA_SOURCE_FILE_AT_LINE (894)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_LDATAPTR_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_LDATAPTR.mSlotID,
                               categoryMethod_instruction_5F_LDATAPTR_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_LDATAPTR_analyze (defineCategoryMethod_instruction_5F_LDATAPTR_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category method '@instruction_JUMP analyze'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_JUMP_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                        const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                        GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                        const GALGAS_routineMap constinArgument_inRoutineMap,
                                                        const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                        const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                        const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                        GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                        GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                        GALGAS_string & /* ioArgument_ioListFileContents */,
                                                        GALGAS_uint & ioArgument_ioCurrentBank,
                                                        const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                        GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                        const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                        C_Compiler * inCompiler
                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_JUMP * object = (const cPtr_instruction_5F_JUMP *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_JUMP) ;
  GALGAS_bool var_isNoReturn ;
  GALGAS_uint var_requiredBank ;
  GALGAS_uint joker_31594_0 ; // Joker input parameter
  GALGAS_bool joker_31597_0 ; // Joker input parameter
  constinArgument_inRoutineMap.method_searchKey (object->mAttribute_mTargetLabel, var_isNoReturn, var_requiredBank, joker_31594_0, joker_31597_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (919)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (920)))).operator_and (GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (ioArgument_ioCurrentBank)) COMMA_SOURCE_FILE_AT_LINE (920)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_string var_errorMessage = GALGAS_string ("the routine '").operator_concat (object->mAttribute_mTargetLabel.reader_string (SOURCE_FILE_AT_LINE (921)) COMMA_SOURCE_FILE_AT_LINE (921)).operator_concat (GALGAS_string ("' requires BSR to be set to ") COMMA_SOURCE_FILE_AT_LINE (921)).operator_concat (var_requiredBank.reader_string (SOURCE_FILE_AT_LINE (921)) COMMA_SOURCE_FILE_AT_LINE (921)) ;
    var_errorMessage.dotAssign_operation (GALGAS_string (", but BSR ") COMMA_SOURCE_FILE_AT_LINE (922)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, ioArgument_ioCurrentBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (923)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_errorMessage.dotAssign_operation (GALGAS_string ("does contain any reliable value") COMMA_SOURCE_FILE_AT_LINE (924)) ;
    }else if (kBoolFalse == test_1) {
      var_errorMessage.dotAssign_operation (GALGAS_string ("is set to ").operator_concat (ioArgument_ioCurrentBank.reader_string (SOURCE_FILE_AT_LINE (926)) COMMA_SOURCE_FILE_AT_LINE (926)) COMMA_SOURCE_FILE_AT_LINE (926)) ;
    }
    GALGAS_location location_2 (object->mAttribute_mTargetLabel.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (928)) ;
  }
  const enumGalgasBool test_3 = var_isNoReturn.operator_not (SOURCE_FILE_AT_LINE (930)).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_location location_4 (object->mAttribute_mTargetLabel.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_4, GALGAS_string ("a regular routine should be called with a RCALL, CALL or JSR instruction") COMMA_SOURCE_FILE_AT_LINE (931)) ;
  }
  ioArgument_ioContinuesInSequence = GALGAS_bool (false) ;
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = GALGAS_ipic_31__38_JumpTerminator::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mTargetLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (935)) COMMA_SOURCE_FILE_AT_LINE (935)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_JUMP_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_JUMP.mSlotID,
                               categoryMethod_instruction_5F_JUMP_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_JUMP_analyze (defineCategoryMethod_instruction_5F_JUMP_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@instruction_computed_rcall analyze'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_computed_5F_rcall_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                     const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                     GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                     const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                     const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                     const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                     const GALGAS_constantMap constinArgument_inConstantMap,
                                                                     GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                                     GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                     GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                     GALGAS_uint & ioArgument_ioCurrentBank,
                                                                     const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                     GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                                     const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_computed_5F_rcall * object = (const cPtr_instruction_5F_computed_5F_rcall *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_computed_5F_rcall) ;
  GALGAS_bool var_allPreserveBank = GALGAS_bool (true) ;
  GALGAS_bool var_someReturnsBank = GALGAS_bool (false) ;
  GALGAS_uint var_returnedBankSelection = ioArgument_ioCurrentBank ;
  cEnumerator_lstringlist enumerator_33114 (object->mAttribute_mTargetLabels, kEnumeration_up) ;
  while (enumerator_33114.hasCurrentObject ()) {
    GALGAS_bool var_isNoReturn ;
    GALGAS_uint var_requiredBank ;
    GALGAS_uint var_returnedBank ;
    GALGAS_bool var_preservesBank ;
    constinArgument_inRoutineMap.method_searchKey (enumerator_33114.current_mValue (HERE), var_isNoReturn, var_requiredBank, var_returnedBank, var_preservesBank, inCompiler COMMA_SOURCE_FILE_AT_LINE (960)) ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (961)))).operator_and (GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (ioArgument_ioCurrentBank)) COMMA_SOURCE_FILE_AT_LINE (961)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string var_errorMessage = GALGAS_string ("the routine '").operator_concat (enumerator_33114.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (962)) COMMA_SOURCE_FILE_AT_LINE (962)).operator_concat (GALGAS_string ("' requires BSR to be set to ") COMMA_SOURCE_FILE_AT_LINE (962)).operator_concat (var_requiredBank.reader_string (SOURCE_FILE_AT_LINE (962)) COMMA_SOURCE_FILE_AT_LINE (962)) ;
      var_errorMessage.dotAssign_operation (GALGAS_string (", but BSR ") COMMA_SOURCE_FILE_AT_LINE (963)) ;
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, ioArgument_ioCurrentBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (964)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_errorMessage.dotAssign_operation (GALGAS_string ("does contain any reliable value") COMMA_SOURCE_FILE_AT_LINE (965)) ;
      }else if (kBoolFalse == test_1) {
        var_errorMessage.dotAssign_operation (GALGAS_string ("is set to ").operator_concat (ioArgument_ioCurrentBank.reader_string (SOURCE_FILE_AT_LINE (967)) COMMA_SOURCE_FILE_AT_LINE (967)) COMMA_SOURCE_FILE_AT_LINE (967)) ;
      }
      GALGAS_location location_2 (enumerator_33114.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (969)) ;
    }
    const enumGalgasBool test_3 = var_isNoReturn.boolEnum () ;
    if (kBoolTrue == test_3) {
      GALGAS_location location_4 (enumerator_33114.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, GALGAS_string ("for being named in a computed rcall, the '").operator_concat (enumerator_33114.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (972)) COMMA_SOURCE_FILE_AT_LINE (972)).operator_concat (GALGAS_string ("' routine should be declared without the \"noreturn\" qualifier") COMMA_SOURCE_FILE_AT_LINE (972)) COMMA_SOURCE_FILE_AT_LINE (972)) ;
    }
    const enumGalgasBool test_5 = constinArgument_inShouldPreserveBSR.operator_and (var_preservesBank.operator_not (SOURCE_FILE_AT_LINE (974)) COMMA_SOURCE_FILE_AT_LINE (974)).boolEnum () ;
    if (kBoolTrue == test_5) {
      GALGAS_location location_6 (enumerator_33114.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_6, GALGAS_string ("the '").operator_concat (enumerator_33114.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (975)) COMMA_SOURCE_FILE_AT_LINE (975)).operator_concat (GALGAS_string ("' routine should preserved bank selection") COMMA_SOURCE_FILE_AT_LINE (975)) COMMA_SOURCE_FILE_AT_LINE (975)) ;
    }else if (kBoolFalse == test_5) {
      const enumGalgasBool test_7 = constinArgument_inShouldPreserveBSR.operator_not (SOURCE_FILE_AT_LINE (976)).operator_and (var_preservesBank.operator_not (SOURCE_FILE_AT_LINE (976)) COMMA_SOURCE_FILE_AT_LINE (976)).boolEnum () ;
      if (kBoolTrue == test_7) {
        const enumGalgasBool test_8 = var_someReturnsBank.operator_not (SOURCE_FILE_AT_LINE (977)).boolEnum () ;
        if (kBoolTrue == test_8) {
          var_returnedBankSelection = var_returnedBank ;
          var_someReturnsBank = GALGAS_bool (true) ;
        }else if (kBoolFalse == test_8) {
          const enumGalgasBool test_9 = GALGAS_bool (kIsNotEqual, var_returnedBankSelection.objectCompare (var_returnedBank)).boolEnum () ;
          if (kBoolTrue == test_9) {
            GALGAS_string var_errorMessage = GALGAS_string ("the '").operator_concat (enumerator_33114.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (981)) COMMA_SOURCE_FILE_AT_LINE (981)).operator_concat (GALGAS_string ("' routine returns ") COMMA_SOURCE_FILE_AT_LINE (981)) ;
            const enumGalgasBool test_10 = GALGAS_bool (kIsEqual, var_returnedBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (982)))).boolEnum () ;
            if (kBoolTrue == test_10) {
              var_errorMessage.dotAssign_operation (GALGAS_string ("no bank selection") COMMA_SOURCE_FILE_AT_LINE (983)) ;
            }else if (kBoolFalse == test_10) {
              var_errorMessage.dotAssign_operation (GALGAS_string ("bank selection set to  ").operator_concat (var_returnedBank.reader_string (SOURCE_FILE_AT_LINE (985)) COMMA_SOURCE_FILE_AT_LINE (985)) COMMA_SOURCE_FILE_AT_LINE (985)) ;
            }
            var_errorMessage.dotAssign_operation (GALGAS_string (", but previous routine(s) return(s) ") COMMA_SOURCE_FILE_AT_LINE (987)) ;
            const enumGalgasBool test_11 = GALGAS_bool (kIsEqual, var_returnedBankSelection.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (988)))).boolEnum () ;
            if (kBoolTrue == test_11) {
              var_errorMessage.dotAssign_operation (GALGAS_string ("no bank selection") COMMA_SOURCE_FILE_AT_LINE (989)) ;
            }else if (kBoolFalse == test_11) {
              var_errorMessage.dotAssign_operation (GALGAS_string ("bank selection set to  ").operator_concat (var_returnedBankSelection.reader_string (SOURCE_FILE_AT_LINE (991)) COMMA_SOURCE_FILE_AT_LINE (991)) COMMA_SOURCE_FILE_AT_LINE (991)) ;
            }
            GALGAS_location location_12 (enumerator_33114.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_12, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (993)) ;
          }
        }
      }else if (kBoolFalse == test_7) {
        const enumGalgasBool test_13 = constinArgument_inShouldPreserveBSR.operator_not (SOURCE_FILE_AT_LINE (995)).operator_and (var_preservesBank COMMA_SOURCE_FILE_AT_LINE (995)).boolEnum () ;
        if (kBoolTrue == test_13) {
        }
      }
    }
    enumerator_33114.gotoNextObject () ;
  }
  ioArgument_ioContinuesInSequence = GALGAS_bool (true) ;
  ioArgument_ioCurrentBank = var_returnedBankSelection ;
  GALGAS_sint var_size ;
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mSizeExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_size, inCompiler COMMA_SOURCE_FILE_AT_LINE (1002)) ;
  const enumGalgasBool test_14 = GALGAS_bool (kIsStrictInf, var_size.objectCompare (GALGAS_sint ((PMSInt32) 2L))).boolEnum () ;
  if (kBoolTrue == test_14) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1004)) COMMA_SOURCE_FILE_AT_LINE (1004)).operator_concat (GALGAS_string (") should be greater or equal to 2") COMMA_SOURCE_FILE_AT_LINE (1004)) COMMA_SOURCE_FILE_AT_LINE (1004)) ;
  }else if (kBoolFalse == test_14) {
    const enumGalgasBool test_15 = GALGAS_bool (kIsStrictSup, var_size.objectCompare (GALGAS_sint ((PMSInt32) 64L))).boolEnum () ;
    if (kBoolTrue == test_15) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1006)) COMMA_SOURCE_FILE_AT_LINE (1006)).operator_concat (GALGAS_string (") should be lower or equal to 64") COMMA_SOURCE_FILE_AT_LINE (1006)) COMMA_SOURCE_FILE_AT_LINE (1006)) ;
    }else if (kBoolFalse == test_15) {
      const enumGalgasBool test_16 = GALGAS_bool (kIsNotEqual, var_size.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (1007)).objectCompare (object->mAttribute_mTargetLabels.reader_length (SOURCE_FILE_AT_LINE (1007)))).boolEnum () ;
      if (kBoolTrue == test_16) {
        inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the routine name list length (").operator_concat (object->mAttribute_mTargetLabels.reader_length (SOURCE_FILE_AT_LINE (1008)).reader_string (SOURCE_FILE_AT_LINE (1008)) COMMA_SOURCE_FILE_AT_LINE (1008)).operator_concat (GALGAS_string (") should be equal to the computed range (") COMMA_SOURCE_FILE_AT_LINE (1008)).operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1008)) COMMA_SOURCE_FILE_AT_LINE (1008)).operator_concat (GALGAS_string (")") COMMA_SOURCE_FILE_AT_LINE (1008)) COMMA_SOURCE_FILE_AT_LINE (1008)) ;
      }
    }
  }
  GALGAS_string var_label_30_ = GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1011)) COMMA_SOURCE_FILE_AT_LINE (1011)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1012)) ;
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mTargetLabels, var_label_30_, object->mAttribute_mUsesRelativeCall COMMA_SOURCE_FILE_AT_LINE (1013)) COMMA_SOURCE_FILE_AT_LINE (1013)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_computed_5F_rcall_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_computed_5F_rcall.mSlotID,
                               categoryMethod_instruction_5F_computed_5F_rcall_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_computed_5F_rcall_analyze (defineCategoryMethod_instruction_5F_computed_5F_rcall_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category method '@instruction_computed_goto analyze'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_computed_5F_goto_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                    const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                    GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                    const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                    const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                    const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                    const GALGAS_constantMap constinArgument_inConstantMap,
                                                                    GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                    GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                    GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                    GALGAS_uint & ioArgument_ioCurrentBank,
                                                                    const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                    GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                                    const GALGAS_routineKind constinArgument_inRoutineKind,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_computed_5F_goto * object = (const cPtr_instruction_5F_computed_5F_goto *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_computed_5F_goto) ;
  cEnumerator_lstringlist enumerator_36493 (object->mAttribute_mTargetLabels, kEnumeration_up) ;
  while (enumerator_36493.hasCurrentObject ()) {
    GALGAS_bool var_isNoReturn ;
    GALGAS_uint var_requiredBank ;
    GALGAS_uint joker_36572_0 ; // Joker input parameter
    GALGAS_bool joker_36575_0 ; // Joker input parameter
    constinArgument_inRoutineMap.method_searchKey (enumerator_36493.current_mValue (HERE), var_isNoReturn, var_requiredBank, joker_36572_0, joker_36575_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1040)) ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1041)))).operator_and (GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (ioArgument_ioCurrentBank)) COMMA_SOURCE_FILE_AT_LINE (1041)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string var_errorMessage = GALGAS_string ("the routine '").operator_concat (enumerator_36493.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1042)) COMMA_SOURCE_FILE_AT_LINE (1042)).operator_concat (GALGAS_string ("' requires BSR to be set to ") COMMA_SOURCE_FILE_AT_LINE (1042)).operator_concat (var_requiredBank.reader_string (SOURCE_FILE_AT_LINE (1042)) COMMA_SOURCE_FILE_AT_LINE (1042)) ;
      var_errorMessage.dotAssign_operation (GALGAS_string (", but BSR ") COMMA_SOURCE_FILE_AT_LINE (1043)) ;
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, ioArgument_ioCurrentBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1044)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_errorMessage.dotAssign_operation (GALGAS_string ("does contain any reliable value") COMMA_SOURCE_FILE_AT_LINE (1045)) ;
      }else if (kBoolFalse == test_1) {
        var_errorMessage.dotAssign_operation (GALGAS_string ("is set to ").operator_concat (ioArgument_ioCurrentBank.reader_string (SOURCE_FILE_AT_LINE (1047)) COMMA_SOURCE_FILE_AT_LINE (1047)) COMMA_SOURCE_FILE_AT_LINE (1047)) ;
      }
      GALGAS_location location_2 (enumerator_36493.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (1049)) ;
    }
    const enumGalgasBool test_3 = var_isNoReturn.operator_not (SOURCE_FILE_AT_LINE (1051)).boolEnum () ;
    if (kBoolTrue == test_3) {
      GALGAS_location location_4 (enumerator_36493.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, GALGAS_string ("for being named in a computed goto, the '").operator_concat (enumerator_36493.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1052)) COMMA_SOURCE_FILE_AT_LINE (1052)).operator_concat (GALGAS_string ("' routine should be declared with the \"noreturn\" qualifier") COMMA_SOURCE_FILE_AT_LINE (1052)) COMMA_SOURCE_FILE_AT_LINE (1052)) ;
    }
    enumerator_36493.gotoNextObject () ;
  }
  ioArgument_ioContinuesInSequence = GALGAS_bool (false) ;
  if (constinArgument_inRoutineKind.isValid ()) {
    switch (constinArgument_inRoutineKind.enumValue ()) {
    case GALGAS_routineKind::kNotBuilt:
      break ;
    case GALGAS_routineKind::kEnum_regularRoutine: {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("a regular routine does not accept computed goto instruction") COMMA_SOURCE_FILE_AT_LINE (1058)) ;
      } break ;
    case GALGAS_routineKind::kEnum_noReturnRoutine: {
      } break ;
    case GALGAS_routineKind::kEnum_interruptRoutine: {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("an interrupt routine does not accept computed goto instruction") COMMA_SOURCE_FILE_AT_LINE (1061)) ;
      } break ;
    }
  }
  GALGAS_sint var_size ;
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mSizeExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_size, inCompiler COMMA_SOURCE_FILE_AT_LINE (1064)) ;
  const enumGalgasBool test_5 = GALGAS_bool (kIsStrictInf, var_size.objectCompare (GALGAS_sint ((PMSInt32) 2L))).boolEnum () ;
  if (kBoolTrue == test_5) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1066)) COMMA_SOURCE_FILE_AT_LINE (1066)).operator_concat (GALGAS_string (") should be greater or equal to 2") COMMA_SOURCE_FILE_AT_LINE (1066)) COMMA_SOURCE_FILE_AT_LINE (1066)) ;
  }else if (kBoolFalse == test_5) {
    const enumGalgasBool test_6 = GALGAS_bool (kIsStrictSup, var_size.objectCompare (GALGAS_sint ((PMSInt32) 64L))).boolEnum () ;
    if (kBoolTrue == test_6) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1068)) COMMA_SOURCE_FILE_AT_LINE (1068)).operator_concat (GALGAS_string (") should be lower or equal to 64") COMMA_SOURCE_FILE_AT_LINE (1068)) COMMA_SOURCE_FILE_AT_LINE (1068)) ;
    }else if (kBoolFalse == test_6) {
      const enumGalgasBool test_7 = GALGAS_bool (kIsNotEqual, var_size.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (1069)).objectCompare (object->mAttribute_mTargetLabels.reader_length (SOURCE_FILE_AT_LINE (1069)))).boolEnum () ;
      if (kBoolTrue == test_7) {
        inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the routine name list length (").operator_concat (object->mAttribute_mTargetLabels.reader_length (SOURCE_FILE_AT_LINE (1070)).reader_string (SOURCE_FILE_AT_LINE (1070)) COMMA_SOURCE_FILE_AT_LINE (1070)).operator_concat (GALGAS_string (") should be equal to the computed range (") COMMA_SOURCE_FILE_AT_LINE (1070)).operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1070)) COMMA_SOURCE_FILE_AT_LINE (1070)).operator_concat (GALGAS_string (")") COMMA_SOURCE_FILE_AT_LINE (1070)) COMMA_SOURCE_FILE_AT_LINE (1070)) ;
      }
    }
  }
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = GALGAS_ipic_31__38_ComputedGotoTerminator::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mTargetLabels, object->mAttribute_mUsesRelativeCall COMMA_SOURCE_FILE_AT_LINE (1073)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_computed_5F_goto_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_computed_5F_goto.mSlotID,
                               categoryMethod_instruction_5F_computed_5F_goto_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_computed_5F_goto_analyze (defineCategoryMethod_instruction_5F_computed_5F_goto_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@instruction_computed_retlw analyze'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_computed_5F_retlw_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                     const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                     GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                     const GALGAS_routineMap /* constinArgument_inRoutineMap */,
                                                                     const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                     const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                     const GALGAS_constantMap constinArgument_inConstantMap,
                                                                     GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                     GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                     GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                     GALGAS_uint & /* ioArgument_ioCurrentBank */,
                                                                     const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                                     GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                                     const GALGAS_routineKind constinArgument_inRoutineKind,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_computed_5F_retlw * object = (const cPtr_instruction_5F_computed_5F_retlw *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_computed_5F_retlw) ;
  ioArgument_ioContinuesInSequence = GALGAS_bool (false) ;
  if (constinArgument_inRoutineKind.isValid ()) {
    switch (constinArgument_inRoutineKind.enumValue ()) {
    case GALGAS_routineKind::kNotBuilt:
      break ;
    case GALGAS_routineKind::kEnum_regularRoutine: {
      } break ;
    case GALGAS_routineKind::kEnum_noReturnRoutine: {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("a \"noreturn\" routine does not accept computed retlw instruction") COMMA_SOURCE_FILE_AT_LINE (1101)) ;
      } break ;
    case GALGAS_routineKind::kEnum_interruptRoutine: {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("an interrupt routine does not accept computed retlw instruction") COMMA_SOURCE_FILE_AT_LINE (1103)) ;
      } break ;
    }
  }
  GALGAS_sint var_size ;
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mSizeExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_size, inCompiler COMMA_SOURCE_FILE_AT_LINE (1106)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictInf, var_size.objectCompare (GALGAS_sint ((PMSInt32) 2L))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1108)) COMMA_SOURCE_FILE_AT_LINE (1108)).operator_concat (GALGAS_string (") should be greater or equal to 2") COMMA_SOURCE_FILE_AT_LINE (1108)) COMMA_SOURCE_FILE_AT_LINE (1108)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, var_size.objectCompare (GALGAS_sint ((PMSInt32) 128L))).boolEnum () ;
    if (kBoolTrue == test_1) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1110)) COMMA_SOURCE_FILE_AT_LINE (1110)).operator_concat (GALGAS_string (") should be lower or equal to 128") COMMA_SOURCE_FILE_AT_LINE (1110)) COMMA_SOURCE_FILE_AT_LINE (1110)) ;
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, var_size.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (1111)).objectCompare (object->mAttribute_mImmediateExpressionList.reader_length (SOURCE_FILE_AT_LINE (1111)))).boolEnum () ;
      if (kBoolTrue == test_2) {
        inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the constant list length (").operator_concat (object->mAttribute_mImmediateExpressionList.reader_length (SOURCE_FILE_AT_LINE (1112)).reader_string (SOURCE_FILE_AT_LINE (1112)) COMMA_SOURCE_FILE_AT_LINE (1112)).operator_concat (GALGAS_string (") should be equal to the computed range (") COMMA_SOURCE_FILE_AT_LINE (1112)).operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1112)) COMMA_SOURCE_FILE_AT_LINE (1112)).operator_concat (GALGAS_string (")") COMMA_SOURCE_FILE_AT_LINE (1112)) COMMA_SOURCE_FILE_AT_LINE (1112)) ;
      }
    }
  }
  GALGAS_uintlist var_literalValues = GALGAS_uintlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1115)) ;
  cEnumerator_immediatExpressionList enumerator_39958 (object->mAttribute_mImmediateExpressionList, kEnumeration_up) ;
  GALGAS_uint index_39952 ((PMUInt32) 0) ;
  while (enumerator_39958.hasCurrentObject ()) {
    GALGAS_sint var_v ;
    callCategoryMethod_eval ((const cPtr_immediatExpression *) enumerator_39958.current_mExpression (HERE).ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_v, inCompiler COMMA_SOURCE_FILE_AT_LINE (1117)) ;
    const enumGalgasBool test_3 = GALGAS_bool (kIsStrictSup, var_v.objectCompare (GALGAS_sint ((PMSInt32) 255L))).operator_or (GALGAS_bool (kIsStrictInf, var_v.objectCompare (GALGAS_sint ((PMSInt32) 128L).operator_unary_minus (inCompiler COMMA_SOURCE_FILE_AT_LINE (1118)))) COMMA_SOURCE_FILE_AT_LINE (1118)).boolEnum () ;
    if (kBoolTrue == test_3) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("immediate value with idx ").operator_concat (index_39952.reader_string (SOURCE_FILE_AT_LINE (1119)) COMMA_SOURCE_FILE_AT_LINE (1119)).operator_concat (GALGAS_string (" is evaluated as ") COMMA_SOURCE_FILE_AT_LINE (1119)).operator_concat (var_v.reader_string (SOURCE_FILE_AT_LINE (1119)) COMMA_SOURCE_FILE_AT_LINE (1119)).operator_concat (GALGAS_string (" (should be <= 255)") COMMA_SOURCE_FILE_AT_LINE (1119)) COMMA_SOURCE_FILE_AT_LINE (1119)) ;
    }
    var_literalValues.addAssign_operation (var_v.operator_and (GALGAS_sint ((PMSInt32) 255L) COMMA_SOURCE_FILE_AT_LINE (1121)).reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (1121)) COMMA_SOURCE_FILE_AT_LINE (1121)) ;
    enumerator_39958.gotoNextObject () ;
    index_39952.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1116)) ;
  }
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = GALGAS_ipic_31__38_ComputedRETLWTerminator::constructor_new (object->mAttribute_mInstructionLocation, var_literalValues, object->mAttribute_mUsesRelativeCall COMMA_SOURCE_FILE_AT_LINE (1124)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_computed_5F_retlw_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_computed_5F_retlw.mSlotID,
                               categoryMethod_instruction_5F_computed_5F_retlw_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_computed_5F_retlw_analyze (defineCategoryMethod_instruction_5F_computed_5F_retlw_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category method '@instruction_JUMPCC analyze'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_JUMPCC_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                          const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                          GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                          const GALGAS_routineMap constinArgument_inRoutineMap,
                                                          const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                          const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                          const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                          GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                          GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                          GALGAS_string & /* ioArgument_ioListFileContents */,
                                                          GALGAS_uint & ioArgument_ioCurrentBank,
                                                          const GALGAS_bool /* constinArgument_inShouldPreserveBSR */,
                                                          GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                          const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                          C_Compiler * inCompiler
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_JUMPCC * object = (const cPtr_instruction_5F_JUMPCC *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_JUMPCC) ;
  GALGAS_bool var_isNoReturn ;
  GALGAS_uint var_requiredBank ;
  GALGAS_uint joker_41130_0 ; // Joker input parameter
  GALGAS_bool joker_41133_0 ; // Joker input parameter
  constinArgument_inRoutineMap.method_searchKey (object->mAttribute_mTargetLabel, var_isNoReturn, var_requiredBank, joker_41130_0, joker_41133_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1148)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1149)))).operator_and (GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (ioArgument_ioCurrentBank)) COMMA_SOURCE_FILE_AT_LINE (1149)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_string var_errorMessage = GALGAS_string ("the routine '").operator_concat (object->mAttribute_mTargetLabel.reader_string (SOURCE_FILE_AT_LINE (1150)) COMMA_SOURCE_FILE_AT_LINE (1150)).operator_concat (GALGAS_string ("' requires BSR to be set to ") COMMA_SOURCE_FILE_AT_LINE (1150)).operator_concat (var_requiredBank.reader_string (SOURCE_FILE_AT_LINE (1150)) COMMA_SOURCE_FILE_AT_LINE (1150)) ;
    var_errorMessage.dotAssign_operation (GALGAS_string (", but BSR ") COMMA_SOURCE_FILE_AT_LINE (1151)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, ioArgument_ioCurrentBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1152)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_errorMessage.dotAssign_operation (GALGAS_string ("does contain any reliable value") COMMA_SOURCE_FILE_AT_LINE (1153)) ;
    }else if (kBoolFalse == test_1) {
      var_errorMessage.dotAssign_operation (GALGAS_string ("is set to ").operator_concat (ioArgument_ioCurrentBank.reader_string (SOURCE_FILE_AT_LINE (1155)) COMMA_SOURCE_FILE_AT_LINE (1155)) COMMA_SOURCE_FILE_AT_LINE (1155)) ;
    }
    GALGAS_location location_2 (object->mAttribute_mTargetLabel.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (1157)) ;
  }
  const enumGalgasBool test_3 = var_isNoReturn.operator_not (SOURCE_FILE_AT_LINE (1159)).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_location location_4 (object->mAttribute_mTargetLabel.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_4, GALGAS_string ("a regular routine should be called with a RCALL, CALL or JSR instruction") COMMA_SOURCE_FILE_AT_LINE (1160)) ;
  }
  GALGAS_conditionalBranchMode var_mode ;
  const enumGalgasBool test_5 = object->mAttribute_mIsBcc.boolEnum () ;
  if (kBoolTrue == test_5) {
    var_mode = GALGAS_conditionalBranchMode::constructor_native (SOURCE_FILE_AT_LINE (1165)) ;
  }else if (kBoolFalse == test_5) {
    var_mode = GALGAS_conditionalBranchMode::constructor_native (SOURCE_FILE_AT_LINE (1167)) ;
  }
  GALGAS_lstring var_label_30_ = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1170)) COMMA_SOURCE_FILE_AT_LINE (1170)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1170)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1171)) ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_terminator = ioArgument_ioCurrentBlock.mAttribute_mTerminator ;
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = GALGAS_ipic_31__38_ConditionalJumpTerminator::constructor_new (object->mAttribute_mInstructionLocation, GALGAS_ipic_31__38_JumpTerminator::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mTargetLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1177)) COMMA_SOURCE_FILE_AT_LINE (1177)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (object->mAttribute_mInstructionLocation, var_label_30_, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1178)) COMMA_SOURCE_FILE_AT_LINE (1178)), var_mode, object->mAttribute_mConditionalBranch COMMA_SOURCE_FILE_AT_LINE (1175)) ;
  ioArgument_ioCurrentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1184)), var_label_30_, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1186)), var_terminator COMMA_SOURCE_FILE_AT_LINE (1183)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_JUMPCC_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_JUMPCC.mSlotID,
                               categoryMethod_instruction_5F_JUMPCC_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_JUMPCC_analyze (defineCategoryMethod_instruction_5F_JUMPCC_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category method '@instruction_computed_bra analyze'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_computed_5F_bra_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                   const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                   GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                   const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                   const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                   const GALGAS_dataMap /* constinArgument_inDataMap */,
                                                                   const GALGAS_constantMap constinArgument_inConstantMap,
                                                                   GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                   GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                   GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                   GALGAS_uint & ioArgument_ioCurrentBank,
                                                                   const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                   GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                                   const GALGAS_routineKind constinArgument_inRoutineKind,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_computed_5F_bra * object = (const cPtr_instruction_5F_computed_5F_bra *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_computed_5F_bra) ;
  GALGAS_bool var_allPreserveBankSetting = GALGAS_bool (true) ;
  GALGAS_bool var_allReturnBank = GALGAS_bool (true) ;
  GALGAS_uint var_returnedBankValue = GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1211)) ;
  cEnumerator_lstringlist enumerator_43448 (object->mAttribute_mTargetLabels, kEnumeration_up) ;
  while (enumerator_43448.hasCurrentObject ()) {
    GALGAS_bool var_isNoReturn ;
    GALGAS_uint var_requiredBank ;
    GALGAS_uint var_returnedBank ;
    GALGAS_bool var_preservesBank ;
    constinArgument_inRoutineMap.method_searchKey (enumerator_43448.current_mValue (HERE), var_isNoReturn, var_requiredBank, var_returnedBank, var_preservesBank, inCompiler COMMA_SOURCE_FILE_AT_LINE (1213)) ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1215)))).operator_and (GALGAS_bool (kIsNotEqual, var_requiredBank.objectCompare (ioArgument_ioCurrentBank)) COMMA_SOURCE_FILE_AT_LINE (1215)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string var_errorMessage = GALGAS_string ("the routine '").operator_concat (enumerator_43448.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1216)) COMMA_SOURCE_FILE_AT_LINE (1216)).operator_concat (GALGAS_string ("' requires BSR to be set to ") COMMA_SOURCE_FILE_AT_LINE (1216)).operator_concat (var_requiredBank.reader_string (SOURCE_FILE_AT_LINE (1216)) COMMA_SOURCE_FILE_AT_LINE (1216)) ;
      var_errorMessage.dotAssign_operation (GALGAS_string (", but BSR ") COMMA_SOURCE_FILE_AT_LINE (1217)) ;
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, ioArgument_ioCurrentBank.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1218)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_errorMessage.dotAssign_operation (GALGAS_string ("does contain any reliable value") COMMA_SOURCE_FILE_AT_LINE (1219)) ;
      }else if (kBoolFalse == test_1) {
        var_errorMessage.dotAssign_operation (GALGAS_string ("is set to ").operator_concat (ioArgument_ioCurrentBank.reader_string (SOURCE_FILE_AT_LINE (1221)) COMMA_SOURCE_FILE_AT_LINE (1221)) COMMA_SOURCE_FILE_AT_LINE (1221)) ;
      }
      GALGAS_location location_2 (enumerator_43448.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (1223)) ;
    }
    const enumGalgasBool test_3 = var_preservesBank.boolEnum () ;
    if (kBoolTrue == test_3) {
      var_allReturnBank = GALGAS_bool (false) ;
    }else if (kBoolFalse == test_3) {
      const enumGalgasBool test_4 = GALGAS_bool (kIsNotEqual, var_returnedBankValue.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1228)))).operator_and (GALGAS_bool (kIsNotEqual, var_returnedBankValue.objectCompare (var_returnedBank)) COMMA_SOURCE_FILE_AT_LINE (1228)).boolEnum () ;
      if (kBoolTrue == test_4) {
        GALGAS_location location_5 (enumerator_43448.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_5, GALGAS_string ("this routine ensures setting of bank '").operator_concat (var_returnedBank.reader_string (SOURCE_FILE_AT_LINE (1229)) COMMA_SOURCE_FILE_AT_LINE (1229)).operator_concat (GALGAS_string ("', but ") COMMA_SOURCE_FILE_AT_LINE (1229)).operator_concat (GALGAS_string ("previous routine(s) ensure setting of bank '") COMMA_SOURCE_FILE_AT_LINE (1230)).operator_concat (var_returnedBankValue.reader_string (SOURCE_FILE_AT_LINE (1230)) COMMA_SOURCE_FILE_AT_LINE (1230)).operator_concat (GALGAS_string ("'.") COMMA_SOURCE_FILE_AT_LINE (1230)) COMMA_SOURCE_FILE_AT_LINE (1229)) ;
      }else if (kBoolFalse == test_4) {
        var_allPreserveBankSetting = GALGAS_bool (false) ;
        var_returnedBankValue = var_returnedBank ;
      }
    }
    const enumGalgasBool test_6 = GALGAS_bool (kIsNotEqual, GALGAS_routineKind::constructor_regularRoutine (SOURCE_FILE_AT_LINE (1235)).objectCompare (constinArgument_inRoutineKind)).operator_and (var_isNoReturn.operator_not (SOURCE_FILE_AT_LINE (1235)) COMMA_SOURCE_FILE_AT_LINE (1235)).boolEnum () ;
    if (kBoolTrue == test_6) {
      GALGAS_location location_7 (enumerator_43448.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_7, GALGAS_string ("for being named in a computed bra from a regular routine, the '").operator_concat (enumerator_43448.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1236)) COMMA_SOURCE_FILE_AT_LINE (1236)).operator_concat (GALGAS_string ("' routine should be declared without any \"noreturn\" qualifier") COMMA_SOURCE_FILE_AT_LINE (1236)) COMMA_SOURCE_FILE_AT_LINE (1236)) ;
    }
    enumerator_43448.gotoNextObject () ;
  }
  const enumGalgasBool test_8 = var_allReturnBank.operator_and (var_allPreserveBankSetting.operator_not (SOURCE_FILE_AT_LINE (1240)) COMMA_SOURCE_FILE_AT_LINE (1240)).boolEnum () ;
  if (kBoolTrue == test_8) {
    ioArgument_ioCurrentBank = var_returnedBankValue ;
  }else if (kBoolFalse == test_8) {
    const enumGalgasBool test_9 = var_allReturnBank.operator_not (SOURCE_FILE_AT_LINE (1242)).operator_and (var_allPreserveBankSetting.operator_not (SOURCE_FILE_AT_LINE (1242)) COMMA_SOURCE_FILE_AT_LINE (1242)).boolEnum () ;
    if (kBoolTrue == test_9) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("invoked routine should either all preserve bank, eihter return the same selected bank") COMMA_SOURCE_FILE_AT_LINE (1243)) ;
    }
  }
  const enumGalgasBool test_10 = constinArgument_inShouldPreserveBSR.operator_and (var_allPreserveBankSetting.operator_not (SOURCE_FILE_AT_LINE (1245)) COMMA_SOURCE_FILE_AT_LINE (1245)).boolEnum () ;
  if (kBoolTrue == test_10) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("invoked routine(s) do(es) not preserve bank selection") COMMA_SOURCE_FILE_AT_LINE (1246)) ;
  }
  ioArgument_ioContinuesInSequence = GALGAS_bool (false) ;
  if (constinArgument_inRoutineKind.isValid ()) {
    switch (constinArgument_inRoutineKind.enumValue ()) {
    case GALGAS_routineKind::kNotBuilt:
      break ;
    case GALGAS_routineKind::kEnum_regularRoutine: {
      } break ;
    case GALGAS_routineKind::kEnum_noReturnRoutine: {
      } break ;
    case GALGAS_routineKind::kEnum_interruptRoutine: {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("an interrupt routine does not accept computed bra instruction") COMMA_SOURCE_FILE_AT_LINE (1255)) ;
      } break ;
    }
  }
  GALGAS_sint var_size ;
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mSizeExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_size, inCompiler COMMA_SOURCE_FILE_AT_LINE (1258)) ;
  const enumGalgasBool test_11 = GALGAS_bool (kIsStrictInf, var_size.objectCompare (GALGAS_sint ((PMSInt32) 2L))).boolEnum () ;
  if (kBoolTrue == test_11) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1260)) COMMA_SOURCE_FILE_AT_LINE (1260)).operator_concat (GALGAS_string (") should be greater or equal to 2") COMMA_SOURCE_FILE_AT_LINE (1260)) COMMA_SOURCE_FILE_AT_LINE (1260)) ;
  }else if (kBoolFalse == test_11) {
    const enumGalgasBool test_12 = GALGAS_bool (kIsStrictSup, var_size.objectCompare (GALGAS_sint ((PMSInt32) 128L))).boolEnum () ;
    if (kBoolTrue == test_12) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the computed range (").operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1262)) COMMA_SOURCE_FILE_AT_LINE (1262)).operator_concat (GALGAS_string (") should be lower or equal to 128") COMMA_SOURCE_FILE_AT_LINE (1262)) COMMA_SOURCE_FILE_AT_LINE (1262)) ;
    }else if (kBoolFalse == test_12) {
      const enumGalgasBool test_13 = GALGAS_bool (kIsNotEqual, var_size.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (1263)).objectCompare (object->mAttribute_mTargetLabels.reader_length (SOURCE_FILE_AT_LINE (1263)))).boolEnum () ;
      if (kBoolTrue == test_13) {
        inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("the routine name list length (").operator_concat (object->mAttribute_mTargetLabels.reader_length (SOURCE_FILE_AT_LINE (1264)).reader_string (SOURCE_FILE_AT_LINE (1264)) COMMA_SOURCE_FILE_AT_LINE (1264)).operator_concat (GALGAS_string (") should be equal to the computed range (") COMMA_SOURCE_FILE_AT_LINE (1264)).operator_concat (var_size.reader_string (SOURCE_FILE_AT_LINE (1264)) COMMA_SOURCE_FILE_AT_LINE (1264)).operator_concat (GALGAS_string (")") COMMA_SOURCE_FILE_AT_LINE (1264)) COMMA_SOURCE_FILE_AT_LINE (1264)) ;
      }
    }
  }
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = GALGAS_ipic_31__38_ComputedBraTerminator::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mTargetLabels, object->mAttribute_mUsesRelativeCall COMMA_SOURCE_FILE_AT_LINE (1267)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_computed_5F_bra_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_computed_5F_bra.mSlotID,
                               categoryMethod_instruction_5F_computed_5F_bra_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_computed_5F_bra_analyze (defineCategoryMethod_instruction_5F_computed_5F_bra_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Overriding category method '@instruction_IF_BitTest analyze'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_IF_5F_BitTest_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                 const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                 GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                 const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                 const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                 const GALGAS_dataMap constinArgument_inDataMap,
                                                                 const GALGAS_constantMap constinArgument_inConstantMap,
                                                                 GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                 GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                 GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                 GALGAS_uint & ioArgument_ioCurrentBank,
                                                                 const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                 GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                                 const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_IF_5F_BitTest * object = (const cPtr_instruction_5F_IF_5F_BitTest *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_IF_5F_BitTest) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable var_bitSliceTable ;
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, var_bitSliceTable, inCompiler COMMA_SOURCE_FILE_AT_LINE (1292)) ;
  GALGAS_uint var_bitNumber ;
  callCategoryMethod_getBitNumber ((const cPtr_bitNumberExpression *) object->mAttribute_mBitNumber.ptr (), var_bitSliceTable, var_bitNumber, inCompiler COMMA_SOURCE_FILE_AT_LINE (1299)) ;
  GALGAS_uint var_currentBank = ioArgument_ioCurrentBank ;
  GALGAS_ipic_31__38_SequentialInstruction var_embeddedInstruction ;
  callCategoryMethod_analyzeSimpleInstruction ((const cPtr_pic_31__38_PiccoloSimpleInstruction *) object->mAttribute_mEmbeddedInstruction.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, var_currentBank, constinArgument_inShouldPreserveBSR, var_embeddedInstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1305)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_currentBank.objectCompare (var_currentBank)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mEmbeddedInstruction.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (1317)), GALGAS_string ("this instruction does not preserve bank setting") COMMA_SOURCE_FILE_AT_LINE (1317)) ;
  }
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_skip_5F_instruction_5F_BitTestSkip::constructor_new (object->mAttribute_mInstructionLocation, var_embeddedInstruction, object->mAttribute_mSkipIfSet, var_IPICregisterDescription, var_bitNumber COMMA_SOURCE_FILE_AT_LINE (1320)) COMMA_SOURCE_FILE_AT_LINE (1320)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_IF_5F_BitTest_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_IF_5F_BitTest.mSlotID,
                               categoryMethod_instruction_5F_IF_5F_BitTest_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_IF_5F_BitTest_analyze (defineCategoryMethod_instruction_5F_IF_5F_BitTest_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category method '@instruction_IF_FA_SEMI_COLON analyze'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                             const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                             GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                             const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                             const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                             const GALGAS_dataMap constinArgument_inDataMap,
                                                                             const GALGAS_constantMap constinArgument_inConstantMap,
                                                                             GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                             GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                             GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                             GALGAS_uint & ioArgument_ioCurrentBank,
                                                                             const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                             GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                                             const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON * object = (const cPtr_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON) ;
  GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code var_baseCode ;
  if (object->mAttribute_mOpCode.isValid ()) {
    switch (object->mAttribute_mOpCode.enumValue ()) {
    case GALGAS_if_5F_semi_5F_colon_5F_op::kNotBuilt:
      break ;
    case GALGAS_if_5F_semi_5F_colon_5F_op::kEnum_CPFSEQ: {
      var_baseCode = GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code::constructor_CPFSEQ (SOURCE_FILE_AT_LINE (1348)) ;
      } break ;
    case GALGAS_if_5F_semi_5F_colon_5F_op::kEnum_CPFSGT: {
      var_baseCode = GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code::constructor_CPFSGT (SOURCE_FILE_AT_LINE (1349)) ;
      } break ;
    case GALGAS_if_5F_semi_5F_colon_5F_op::kEnum_CPFSLT: {
      var_baseCode = GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code::constructor_CPFSLT (SOURCE_FILE_AT_LINE (1350)) ;
      } break ;
    case GALGAS_if_5F_semi_5F_colon_5F_op::kEnum_TSTFSZ: {
      var_baseCode = GALGAS_ipic_31__38__5F_compare_5F_register_5F_instruction_5F_base_5F_code::constructor_TSTFSZ (SOURCE_FILE_AT_LINE (1351)) ;
      } break ;
    }
  }
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_49206_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, joker_49206_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1353)) ;
  GALGAS_uint var_currentBank = ioArgument_ioCurrentBank ;
  GALGAS_ipic_31__38_SequentialInstruction var_embeddedInstruction ;
  callCategoryMethod_analyzeSimpleInstruction ((const cPtr_pic_31__38_PiccoloSimpleInstruction *) object->mAttribute_mEmbeddedInstruction.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, var_currentBank, constinArgument_inShouldPreserveBSR, var_embeddedInstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1362)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_currentBank.objectCompare (var_currentBank)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mEmbeddedInstruction.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (1374)), GALGAS_string ("this instruction does not preserve bank setting") COMMA_SOURCE_FILE_AT_LINE (1374)) ;
  }
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_skip_5F_instruction_5F_compare_5F_register::constructor_new (object->mAttribute_mInstructionLocation, var_embeddedInstruction, var_baseCode, var_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (1377)) COMMA_SOURCE_FILE_AT_LINE (1377)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON.mSlotID,
                               categoryMethod_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON_analyze (defineCategoryMethod_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category method '@instruction_IF_IncDec analyze'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_IF_5F_IncDec_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                const GALGAS_dataMap constinArgument_inDataMap,
                                                                const GALGAS_constantMap constinArgument_inConstantMap,
                                                                GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                GALGAS_uint & ioArgument_ioCurrentBank,
                                                                const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                                const GALGAS_routineKind /* constinArgument_inRoutineKind */,
                                                                C_Compiler * inCompiler
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_IF_5F_IncDec * object = (const cPtr_instruction_5F_IF_5F_IncDec *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_IF_5F_IncDec) ;
  GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code var_baseCode ;
  const enumGalgasBool test_0 = object->mAttribute_mIncrement.operator_and (object->mAttribute_mSkipIfZero COMMA_SOURCE_FILE_AT_LINE (1404)).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_baseCode = GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code::constructor_INCFSZ (SOURCE_FILE_AT_LINE (1405)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = object->mAttribute_mIncrement.operator_and (object->mAttribute_mSkipIfZero.operator_not (SOURCE_FILE_AT_LINE (1406)) COMMA_SOURCE_FILE_AT_LINE (1406)).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_baseCode = GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code::constructor_INFSNZ (SOURCE_FILE_AT_LINE (1407)) ;
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_2 = object->mAttribute_mIncrement.operator_not (SOURCE_FILE_AT_LINE (1408)).operator_and (object->mAttribute_mSkipIfZero COMMA_SOURCE_FILE_AT_LINE (1408)).boolEnum () ;
      if (kBoolTrue == test_2) {
        var_baseCode = GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code::constructor_DECFSZ (SOURCE_FILE_AT_LINE (1409)) ;
      }else if (kBoolFalse == test_2) {
        var_baseCode = GALGAS_skip_5F_instruction_5F_FDA_5F_base_5F_code::constructor_DCFSNZ (SOURCE_FILE_AT_LINE (1411)) ;
      }
    }
  }
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_51130_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, joker_51130_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1414)) ;
  GALGAS_uint var_currentBank = ioArgument_ioCurrentBank ;
  GALGAS_ipic_31__38_SequentialInstruction var_embeddedInstruction ;
  callCategoryMethod_analyzeSimpleInstruction ((const cPtr_pic_31__38_PiccoloSimpleInstruction *) object->mAttribute_mEmbeddedInstruction.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, var_currentBank, constinArgument_inShouldPreserveBSR, var_embeddedInstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (1423)) ;
  const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, var_currentBank.objectCompare (var_currentBank)).boolEnum () ;
  if (kBoolTrue == test_3) {
    inCompiler->emitSemanticError (object->mAttribute_mEmbeddedInstruction.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (1435)), GALGAS_string ("this instruction does not preserve bank setting") COMMA_SOURCE_FILE_AT_LINE (1435)) ;
  }
  ioArgument_ioCurrentBlock.mAttribute_mInstructionList.addAssign_operation (GALGAS_ipic_31__38__5F_skip_5F_instruction_5F_FDA::constructor_new (object->mAttribute_mInstructionLocation, var_embeddedInstruction, var_baseCode, var_IPICregisterDescription, object->mAttribute_m_5F_W_5F_isDestination COMMA_SOURCE_FILE_AT_LINE (1438)) COMMA_SOURCE_FILE_AT_LINE (1438)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_IF_5F_IncDec_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_IF_5F_IncDec.mSlotID,
                               categoryMethod_instruction_5F_IF_5F_IncDec_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_IF_5F_IncDec_analyze (defineCategoryMethod_instruction_5F_IF_5F_IncDec_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category method '@instruction_structured_if analyze'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_structured_5F_if_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                                    const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                    GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                                                    const GALGAS_routineMap constinArgument_inRoutineMap,
                                                                    const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                    const GALGAS_dataMap constinArgument_inDataMap,
                                                                    const GALGAS_constantMap constinArgument_inConstantMap,
                                                                    GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                                    GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                                    GALGAS_string & ioArgument_ioListFileContents,
                                                                    GALGAS_uint & ioArgument_ioCurrentBank,
                                                                    const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                                    GALGAS_bool & ioArgument_ioContinuesInSequence,
                                                                    const GALGAS_routineKind constinArgument_inRoutineKind,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_structured_5F_if * object = (const cPtr_instruction_5F_structured_5F_if *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_structured_5F_if) ;
  GALGAS_lstring var_conditionTrueLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1465)) COMMA_SOURCE_FILE_AT_LINE (1465)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1465)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1466)) ;
  GALGAS_lstring var_conditionFalseLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1467)) COMMA_SOURCE_FILE_AT_LINE (1467)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1467)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1468)) ;
  GALGAS_lstring var_exitLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1469)) COMMA_SOURCE_FILE_AT_LINE (1469)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1469)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1470)) ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_testTerminator ;
  callCategoryMethod_analyzeCondition ((const cPtr_conditionExpression *) object->mAttribute_mIfCondition.ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, ioArgument_ioLocalLabelIndex, object->mAttribute_mInstructionLocation, ioArgument_ioGeneratedBlockList, var_conditionTrueLabel, var_conditionFalseLabel, var_testTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (1472)) ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_currentBlockTerminator = ioArgument_ioCurrentBlock.mAttribute_mTerminator ;
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = var_testTerminator ;
  ioArgument_ioGeneratedBlockList.addAssign_operation (ioArgument_ioCurrentBlock COMMA_SOURCE_FILE_AT_LINE (1487)) ;
  ioArgument_ioCurrentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1490)), var_exitLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1492)), var_currentBlockTerminator COMMA_SOURCE_FILE_AT_LINE (1489)) ;
  GALGAS_uint var_elseBranchFinalBank = ioArgument_ioCurrentBank ;
  GALGAS_uint var_thenBranchFinalBank = ioArgument_ioCurrentBank ;
  GALGAS_ipic_31__38_Block var_thenBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1499)), var_conditionTrueLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1501)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (object->mAttribute_mInstructionLocation, var_exitLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1502)) COMMA_SOURCE_FILE_AT_LINE (1502)) COMMA_SOURCE_FILE_AT_LINE (1498)) ;
  GALGAS_bool var_thenContinuesInSequence ;
  {
  routine_analyzeInstructionList (object->mAttribute_mThenInstructionList, ioArgument_ioGeneratedBlockList, constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioLocalLabelIndex, var_thenBlock, ioArgument_ioListFileContents, var_thenBranchFinalBank, constinArgument_inShouldPreserveBSR, var_thenContinuesInSequence, constinArgument_inRoutineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (1504)) ;
  }
  ioArgument_ioGeneratedBlockList.addAssign_operation (var_thenBlock COMMA_SOURCE_FILE_AT_LINE (1520)) ;
  GALGAS_ipic_31__38_Block var_elseBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1523)), var_conditionFalseLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1525)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (object->mAttribute_mInstructionLocation, var_exitLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1526)) COMMA_SOURCE_FILE_AT_LINE (1526)) COMMA_SOURCE_FILE_AT_LINE (1522)) ;
  GALGAS_bool var_elseContinuesInSequence ;
  {
  routine_analyzeInstructionList (object->mAttribute_mElseInstructionList, ioArgument_ioGeneratedBlockList, constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioLocalLabelIndex, var_elseBlock, ioArgument_ioListFileContents, var_elseBranchFinalBank, constinArgument_inShouldPreserveBSR, var_elseContinuesInSequence, constinArgument_inRoutineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (1528)) ;
  }
  ioArgument_ioGeneratedBlockList.addAssign_operation (var_elseBlock COMMA_SOURCE_FILE_AT_LINE (1544)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_elseBranchFinalBank.objectCompare (var_thenBranchFinalBank)).boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioCurrentBank = var_elseBranchFinalBank ;
  }else if (kBoolFalse == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mEndOfElsePartLocation, GALGAS_string ("This branch does not leave BSR value as the first one does") COMMA_SOURCE_FILE_AT_LINE (1549)) ;
    var_elseBranchFinalBank = GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1550)) ;
  }
  ioArgument_ioContinuesInSequence = var_thenContinuesInSequence.operator_or (var_elseContinuesInSequence COMMA_SOURCE_FILE_AT_LINE (1553)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_structured_5F_if_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_structured_5F_if.mSlotID,
                               categoryMethod_instruction_5F_structured_5F_if_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_structured_5F_if_analyze (defineCategoryMethod_instruction_5F_structured_5F_if_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category method '@instruction_do_while analyze'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_instruction_5F_do_5F_while_analyze (const cPtr_pic_31__38_PiccoloInstruction * inObject,
                                                               const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                               GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                                               const GALGAS_routineMap constinArgument_inRoutineMap,
                                                               const GALGAS_registerTable constinArgument_inRegisterTable,
                                                               const GALGAS_dataMap constinArgument_inDataMap,
                                                               const GALGAS_constantMap constinArgument_inConstantMap,
                                                               GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                               GALGAS_ipic_31__38_Block & ioArgument_ioCurrentBlock,
                                                               GALGAS_string & ioArgument_ioListFileContents,
                                                               GALGAS_uint & ioArgument_ioCurrentBank,
                                                               const GALGAS_bool constinArgument_inShouldPreserveBSR,
                                                               GALGAS_bool & /* ioArgument_ioContinuesInSequence */,
                                                               const GALGAS_routineKind constinArgument_inRoutineKind,
                                                               C_Compiler * inCompiler
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_instruction_5F_do_5F_while * object = (const cPtr_instruction_5F_do_5F_while *) inObject ;
  macroValidSharedObject (object, const cPtr_instruction_5F_do_5F_while) ;
  GALGAS_lstring var_startLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1574)) COMMA_SOURCE_FILE_AT_LINE (1574)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1574)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1575)) ;
  GALGAS_lstring var_exitLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1576)) COMMA_SOURCE_FILE_AT_LINE (1576)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1576)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1577)) ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_currentBlockTerminator = ioArgument_ioCurrentBlock.mAttribute_mTerminator ;
  ioArgument_ioCurrentBlock.mAttribute_mTerminator = GALGAS_ipic_31__38_JumpTerminator::constructor_new (object->mAttribute_mInstructionLocation, var_startLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1581)) COMMA_SOURCE_FILE_AT_LINE (1581)) ;
  ioArgument_ioGeneratedBlockList.addAssign_operation (ioArgument_ioCurrentBlock COMMA_SOURCE_FILE_AT_LINE (1582)) ;
  ioArgument_ioCurrentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1585)), var_startLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1587)), var_currentBlockTerminator COMMA_SOURCE_FILE_AT_LINE (1584)) ;
  GALGAS_uint var_repeatedBranchFinalBank = ioArgument_ioCurrentBank ;
  GALGAS_bool var_repeatedInstructionsContinuesInSequence ;
  {
  routine_analyzeInstructionList (object->mAttribute_mRepeatedInstructionList, ioArgument_ioGeneratedBlockList, constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioLocalLabelIndex, ioArgument_ioCurrentBlock, ioArgument_ioListFileContents, var_repeatedBranchFinalBank, constinArgument_inShouldPreserveBSR, var_repeatedInstructionsContinuesInSequence, constinArgument_inRoutineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (1591)) ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, ioArgument_ioCurrentBank.objectCompare (var_repeatedBranchFinalBank)).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mEndOfRepeatedInstructionList, GALGAS_string ("This branch does not leave BSR value unchanged") COMMA_SOURCE_FILE_AT_LINE (1608)) ;
  }
  const enumGalgasBool test_1 = var_repeatedInstructionsContinuesInSequence.operator_not (SOURCE_FILE_AT_LINE (1610)).boolEnum () ;
  if (kBoolTrue == test_1) {
    inCompiler->emitSemanticError (object->mAttribute_mEndOfRepeatedInstructionList, GALGAS_string ("This branch makes the next code unreachable") COMMA_SOURCE_FILE_AT_LINE (1611)) ;
  }
  cEnumerator_partList enumerator_57527 (object->mAttribute_mWhilePartList, kEnumeration_up) ;
  while (enumerator_57527.hasCurrentObject ()) {
    GALGAS_lstring var_conditionTrueLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1616)) COMMA_SOURCE_FILE_AT_LINE (1616)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1616)) ;
    ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1617)) ;
    GALGAS_lstring var_conditionFalseLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1618)) COMMA_SOURCE_FILE_AT_LINE (1618)), object->mAttribute_mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1618)) ;
    ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1619)) ;
    GALGAS_ipic_31__38_AbstractBlockTerminator var_testTerminator ;
    callCategoryMethod_analyzeCondition ((const cPtr_conditionExpression *) enumerator_57527.current_mCondition (HERE).ptr (), constinArgument_inAccessBankSplitOffset, ioArgument_ioCurrentBank, constinArgument_inRegisterTable, ioArgument_ioLocalLabelIndex, object->mAttribute_mInstructionLocation, ioArgument_ioGeneratedBlockList, var_conditionTrueLabel, var_conditionFalseLabel, var_testTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (1621)) ;
    ioArgument_ioCurrentBlock.mAttribute_mTerminator = var_testTerminator ;
    ioArgument_ioGeneratedBlockList.addAssign_operation (ioArgument_ioCurrentBlock COMMA_SOURCE_FILE_AT_LINE (1633)) ;
    ioArgument_ioCurrentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1635)), var_conditionTrueLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1637)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (object->mAttribute_mInstructionLocation, var_startLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1638)) COMMA_SOURCE_FILE_AT_LINE (1638)) COMMA_SOURCE_FILE_AT_LINE (1634)) ;
    GALGAS_uint var_branchFinalBank = ioArgument_ioCurrentBank ;
    GALGAS_bool var_branchInstructionsContinuesInSequence ;
    {
    routine_analyzeInstructionList (enumerator_57527.current_mInstructionList (HERE), ioArgument_ioGeneratedBlockList, constinArgument_inAccessBankSplitOffset, constinArgument_inRoutineMap, constinArgument_inRegisterTable, constinArgument_inDataMap, constinArgument_inConstantMap, ioArgument_ioLocalLabelIndex, ioArgument_ioCurrentBlock, ioArgument_ioListFileContents, var_branchFinalBank, constinArgument_inShouldPreserveBSR, var_branchInstructionsContinuesInSequence, constinArgument_inRoutineKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (1641)) ;
    }
    const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, ioArgument_ioCurrentBank.objectCompare (var_branchFinalBank)).boolEnum () ;
    if (kBoolTrue == test_2) {
      inCompiler->emitSemanticError (enumerator_57527.current_mEndOfPartLocation (HERE), GALGAS_string ("This branch does not leave BSR value unchanged") COMMA_SOURCE_FILE_AT_LINE (1658)) ;
    }
    const enumGalgasBool test_3 = var_branchInstructionsContinuesInSequence.operator_not (SOURCE_FILE_AT_LINE (1660)).boolEnum () ;
    if (kBoolTrue == test_3) {
      inCompiler->emitSemanticError (enumerator_57527.current_mEndOfPartLocation (HERE), GALGAS_string ("This branch makes the next code unreachable") COMMA_SOURCE_FILE_AT_LINE (1661)) ;
    }
    ioArgument_ioGeneratedBlockList.addAssign_operation (ioArgument_ioCurrentBlock COMMA_SOURCE_FILE_AT_LINE (1663)) ;
    ioArgument_ioCurrentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1665)), var_conditionFalseLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1667)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (object->mAttribute_mInstructionLocation, var_exitLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1668)) COMMA_SOURCE_FILE_AT_LINE (1668)) COMMA_SOURCE_FILE_AT_LINE (1664)) ;
    enumerator_57527.gotoNextObject () ;
  }
  ioArgument_ioGeneratedBlockList.addAssign_operation (ioArgument_ioCurrentBlock COMMA_SOURCE_FILE_AT_LINE (1671)) ;
  ioArgument_ioCurrentBlock = GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (1674)), var_exitLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1676)), var_currentBlockTerminator COMMA_SOURCE_FILE_AT_LINE (1673)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_instruction_5F_do_5F_while_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_instruction_5F_do_5F_while.mSlotID,
                               categoryMethod_instruction_5F_do_5F_while_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_instruction_5F_do_5F_while_analyze (defineCategoryMethod_instruction_5F_do_5F_while_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Abstract category method '@conditionExpression analyzeCondition'      *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_conditionExpression_analyzeCondition> gCategoryMethodTable_conditionExpression_analyzeCondition ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeCondition (const PMSInt32 inClassIndex,
                                           categoryMethodSignature_conditionExpression_analyzeCondition inMethod) {
  gCategoryMethodTable_conditionExpression_analyzeCondition.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_conditionExpression_analyzeCondition (void) {
  gCategoryMethodTable_conditionExpression_analyzeCondition.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_conditionExpression_analyzeCondition (NULL,
                                                                 freeCategoryMethod_conditionExpression_analyzeCondition) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeCondition (const cPtr_conditionExpression * inObject,
                                          const GALGAS_uint constin_inAccessBankSplitOffset,
                                          const GALGAS_uint constin_inCurrentBank,
                                          const GALGAS_registerTable constin_inRegisterTable,
                                          GALGAS_uint & io_ioLocalLabelIndex,
                                          const GALGAS_location constin_inInstructionLocation,
                                          GALGAS_ipic_31__38_BlockList & io_ioGeneratedBlockList,
                                          const GALGAS_lstring constin_inConditionTrueLabel,
                                          const GALGAS_lstring constin_inConditionFalseLabel,
                                          GALGAS_ipic_31__38_AbstractBlockTerminator & out_outCurrentBlockTerminator,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) {
//--- Drop output arguments
  out_outCurrentBlockTerminator.drop () ;
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_conditionExpression) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_conditionExpression_analyzeCondition f = NULL ;
    if (classIndex < gCategoryMethodTable_conditionExpression_analyzeCondition.count ()) {
      f = gCategoryMethodTable_conditionExpression_analyzeCondition (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_conditionExpression_analyzeCondition.count ()) {
           f = gCategoryMethodTable_conditionExpression_analyzeCondition (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_conditionExpression_analyzeCondition.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAccessBankSplitOffset, constin_inCurrentBank, constin_inRegisterTable, io_ioLocalLabelIndex, constin_inInstructionLocation, io_ioGeneratedBlockList, constin_inConditionTrueLabel, constin_inConditionFalseLabel, out_outCurrentBlockTerminator, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@bcc_in_structured_if_condition analyzeCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition (const cPtr_conditionExpression * inObject,
                                                                                        const GALGAS_uint /* constinArgument_inAccessBankSplitOffset */,
                                                                                        const GALGAS_uint /* constinArgument_inCurrentBank */,
                                                                                        const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                                                        GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                                        const GALGAS_location constinArgument_inInstructionLocation,
                                                                                        GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                                        const GALGAS_lstring constinArgument_inConditionTrueLabel,
                                                                                        const GALGAS_lstring constinArgument_inConditionFalseLabel,
                                                                                        GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outCurrentBlockTerminator,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_bcc_5F_in_5F_structured_5F_if_5F_condition * object = (const cPtr_bcc_5F_in_5F_structured_5F_if_5F_condition *) inObject ;
  macroValidSharedObject (object, const cPtr_bcc_5F_in_5F_structured_5F_if_5F_condition) ;
  GALGAS_ipc_31__38_ConditionalBranch var_ipicCondition ;
  GALGAS_bool var_complementaryCondition ;
  if (object->mAttribute_mCondition.isValid ()) {
    switch (object->mAttribute_mCondition.enumValue ()) {
    case GALGAS_conditional_5F_branch::kNotBuilt:
      break ;
    case GALGAS_conditional_5F_branch::kEnum_bz: {
      var_ipicCondition = GALGAS_ipc_31__38_ConditionalBranch::constructor_bz (SOURCE_FILE_AT_LINE (1716)) ;
      var_complementaryCondition = GALGAS_bool (false) ;
      } break ;
    case GALGAS_conditional_5F_branch::kEnum_bnz: {
      var_ipicCondition = GALGAS_ipc_31__38_ConditionalBranch::constructor_bz (SOURCE_FILE_AT_LINE (1719)) ;
      var_complementaryCondition = GALGAS_bool (true) ;
      } break ;
    case GALGAS_conditional_5F_branch::kEnum_bn: {
      var_ipicCondition = GALGAS_ipc_31__38_ConditionalBranch::constructor_bn (SOURCE_FILE_AT_LINE (1722)) ;
      var_complementaryCondition = GALGAS_bool (false) ;
      } break ;
    case GALGAS_conditional_5F_branch::kEnum_bnn: {
      var_ipicCondition = GALGAS_ipc_31__38_ConditionalBranch::constructor_bn (SOURCE_FILE_AT_LINE (1725)) ;
      var_complementaryCondition = GALGAS_bool (true) ;
      } break ;
    case GALGAS_conditional_5F_branch::kEnum_bc: {
      var_ipicCondition = GALGAS_ipc_31__38_ConditionalBranch::constructor_bc (SOURCE_FILE_AT_LINE (1728)) ;
      var_complementaryCondition = GALGAS_bool (false) ;
      } break ;
    case GALGAS_conditional_5F_branch::kEnum_bnc: {
      var_ipicCondition = GALGAS_ipc_31__38_ConditionalBranch::constructor_bc (SOURCE_FILE_AT_LINE (1731)) ;
      var_complementaryCondition = GALGAS_bool (true) ;
      } break ;
    case GALGAS_conditional_5F_branch::kEnum_bov: {
      var_ipicCondition = GALGAS_ipc_31__38_ConditionalBranch::constructor_bov (SOURCE_FILE_AT_LINE (1734)) ;
      var_complementaryCondition = GALGAS_bool (false) ;
      } break ;
    case GALGAS_conditional_5F_branch::kEnum_bnov: {
      var_ipicCondition = GALGAS_ipc_31__38_ConditionalBranch::constructor_bov (SOURCE_FILE_AT_LINE (1737)) ;
      var_complementaryCondition = GALGAS_bool (true) ;
      } break ;
    }
  }
  const enumGalgasBool test_0 = var_complementaryCondition.boolEnum () ;
  if (kBoolTrue == test_0) {
    outArgument_outCurrentBlockTerminator = GALGAS_pic_31__38_BraCCTerminator::constructor_new (constinArgument_inInstructionLocation, GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inInstructionLocation, constinArgument_inConditionFalseLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1744)) COMMA_SOURCE_FILE_AT_LINE (1744)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inInstructionLocation, constinArgument_inConditionTrueLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1745)) COMMA_SOURCE_FILE_AT_LINE (1745)), GALGAS_conditionalBranchMode::constructor_native (SOURCE_FILE_AT_LINE (1746)), var_ipicCondition COMMA_SOURCE_FILE_AT_LINE (1742)) ;
  }else if (kBoolFalse == test_0) {
    outArgument_outCurrentBlockTerminator = GALGAS_pic_31__38_BraCCTerminator::constructor_new (constinArgument_inInstructionLocation, GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inInstructionLocation, constinArgument_inConditionTrueLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1752)) COMMA_SOURCE_FILE_AT_LINE (1752)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inInstructionLocation, constinArgument_inConditionFalseLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1753)) COMMA_SOURCE_FILE_AT_LINE (1753)), GALGAS_conditionalBranchMode::constructor_native (SOURCE_FILE_AT_LINE (1754)), var_ipicCondition COMMA_SOURCE_FILE_AT_LINE (1750)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition (void) {
  enterCategoryMethod_analyzeCondition (kTypeDescriptor_GALGAS_bcc_5F_in_5F_structured_5F_if_5F_condition.mSlotID,
                                        categoryMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition (defineCategoryMethod_bcc_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@registerComparisonCondition analyzeCondition' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_registerComparisonCondition_analyzeCondition (const cPtr_conditionExpression * inObject,
                                                                         const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                         const GALGAS_uint constinArgument_inCurrentBank,
                                                                         const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                         GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                         const GALGAS_location constinArgument_inInstructionLocation,
                                                                         GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                         const GALGAS_lstring constinArgument_inConditionTrueLabel,
                                                                         const GALGAS_lstring constinArgument_inConditionFalseLabel,
                                                                         GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outCurrentBlockTerminator,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_registerComparisonCondition * object = (const cPtr_registerComparisonCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_registerComparisonCondition) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_63362_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, joker_63362_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1773)) ;
  GALGAS_ipic_31__38_RegisterComparison var_ipicComparison ;
  GALGAS_bool var_complementaryBranch ;
  if (object->mAttribute_mComparison.isValid ()) {
    switch (object->mAttribute_mComparison.enumValue ()) {
    case GALGAS_pic_31__38_RegisterComparison::kNotBuilt:
      break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_equal: {
      var_ipicComparison = GALGAS_ipic_31__38_RegisterComparison::constructor_registerEqualsToW (SOURCE_FILE_AT_LINE (1785)) ;
      var_complementaryBranch = GALGAS_bool (false) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_greater: {
      var_ipicComparison = GALGAS_ipic_31__38_RegisterComparison::constructor_registerGreaterThanW (SOURCE_FILE_AT_LINE (1788)) ;
      var_complementaryBranch = GALGAS_bool (false) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_lower: {
      var_ipicComparison = GALGAS_ipic_31__38_RegisterComparison::constructor_registerLowerThanW (SOURCE_FILE_AT_LINE (1791)) ;
      var_complementaryBranch = GALGAS_bool (false) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_greaterOrEqual: {
      var_ipicComparison = GALGAS_ipic_31__38_RegisterComparison::constructor_registerLowerThanW (SOURCE_FILE_AT_LINE (1794)) ;
      var_complementaryBranch = GALGAS_bool (true) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_lowerOrEqual: {
      var_ipicComparison = GALGAS_ipic_31__38_RegisterComparison::constructor_registerGreaterThanW (SOURCE_FILE_AT_LINE (1797)) ;
      var_complementaryBranch = GALGAS_bool (true) ;
      } break ;
    case GALGAS_pic_31__38_RegisterComparison::kEnum_notEqual: {
      var_ipicComparison = GALGAS_ipic_31__38_RegisterComparison::constructor_registerEqualsToW (SOURCE_FILE_AT_LINE (1800)) ;
      var_complementaryBranch = GALGAS_bool (true) ;
      } break ;
    }
  }
  const enumGalgasBool test_0 = var_complementaryBranch.boolEnum () ;
  if (kBoolTrue == test_0) {
    outArgument_outCurrentBlockTerminator = GALGAS_pic_31__38_RegisterComparisonTerminator::constructor_new (constinArgument_inInstructionLocation, GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inInstructionLocation, constinArgument_inConditionFalseLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1807)) COMMA_SOURCE_FILE_AT_LINE (1807)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inInstructionLocation, constinArgument_inConditionTrueLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1808)) COMMA_SOURCE_FILE_AT_LINE (1808)), var_IPICregisterDescription, var_ipicComparison COMMA_SOURCE_FILE_AT_LINE (1805)) ;
  }else if (kBoolFalse == test_0) {
    outArgument_outCurrentBlockTerminator = GALGAS_pic_31__38_RegisterComparisonTerminator::constructor_new (constinArgument_inInstructionLocation, GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inInstructionLocation, constinArgument_inConditionTrueLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1815)) COMMA_SOURCE_FILE_AT_LINE (1815)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inInstructionLocation, constinArgument_inConditionFalseLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1816)) COMMA_SOURCE_FILE_AT_LINE (1816)), var_IPICregisterDescription, var_ipicComparison COMMA_SOURCE_FILE_AT_LINE (1813)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_registerComparisonCondition_analyzeCondition (void) {
  enterCategoryMethod_analyzeCondition (kTypeDescriptor_GALGAS_registerComparisonCondition.mSlotID,
                                        categoryMethod_registerComparisonCondition_analyzeCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_registerComparisonCondition_analyzeCondition (defineCategoryMethod_registerComparisonCondition_analyzeCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@incDecRegisterInCondition analyzeCondition'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_incDecRegisterInCondition_analyzeCondition (const cPtr_conditionExpression * inObject,
                                                                       const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                       const GALGAS_uint constinArgument_inCurrentBank,
                                                                       const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                       GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                       const GALGAS_location constinArgument_inInstructionLocation,
                                                                       GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                       const GALGAS_lstring constinArgument_inConditionTrueLabel,
                                                                       const GALGAS_lstring constinArgument_inConditionFalseLabel,
                                                                       GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outCurrentBlockTerminator,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_incDecRegisterInCondition * object = (const cPtr_incDecRegisterInCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_incDecRegisterInCondition) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_65799_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, joker_65799_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1836)) ;
  const enumGalgasBool test_0 = object->mAttribute_mBranchIfZero.boolEnum () ;
  if (kBoolTrue == test_0) {
    outArgument_outCurrentBlockTerminator = GALGAS_ipic_31__38_IncDecRegisterTerminator::constructor_new (constinArgument_inInstructionLocation, GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inInstructionLocation, constinArgument_inConditionTrueLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1847)) COMMA_SOURCE_FILE_AT_LINE (1847)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inInstructionLocation, constinArgument_inConditionFalseLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1848)) COMMA_SOURCE_FILE_AT_LINE (1848)), var_IPICregisterDescription, object->mAttribute_mIncrement, object->mAttribute_m_5F_W_5F_isDestination COMMA_SOURCE_FILE_AT_LINE (1845)) ;
  }else if (kBoolFalse == test_0) {
    outArgument_outCurrentBlockTerminator = GALGAS_ipic_31__38_IncDecRegisterTerminator::constructor_new (constinArgument_inInstructionLocation, GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inInstructionLocation, constinArgument_inConditionFalseLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1856)) COMMA_SOURCE_FILE_AT_LINE (1856)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inInstructionLocation, constinArgument_inConditionTrueLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1857)) COMMA_SOURCE_FILE_AT_LINE (1857)), var_IPICregisterDescription, object->mAttribute_mIncrement, object->mAttribute_m_5F_W_5F_isDestination COMMA_SOURCE_FILE_AT_LINE (1854)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_incDecRegisterInCondition_analyzeCondition (void) {
  enterCategoryMethod_analyzeCondition (kTypeDescriptor_GALGAS_incDecRegisterInCondition.mSlotID,
                                        categoryMethod_incDecRegisterInCondition_analyzeCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_incDecRegisterInCondition_analyzeCondition (defineCategoryMethod_incDecRegisterInCondition_analyzeCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@registerTestCondition analyzeCondition'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_registerTestCondition_analyzeCondition (const cPtr_conditionExpression * inObject,
                                                                   const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                   const GALGAS_uint constinArgument_inCurrentBank,
                                                                   const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                   GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                   const GALGAS_location constinArgument_inInstructionLocation,
                                                                   GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                   const GALGAS_lstring constinArgument_inConditionTrueLabel,
                                                                   const GALGAS_lstring constinArgument_inConditionFalseLabel,
                                                                   GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outCurrentBlockTerminator,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_registerTestCondition * object = (const cPtr_registerTestCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_registerTestCondition) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable joker_67382_0 ; // Joker input parameter
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, joker_67382_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1878)) ;
  const enumGalgasBool test_0 = object->mAttribute_mBranchIfZero.boolEnum () ;
  if (kBoolTrue == test_0) {
    outArgument_outCurrentBlockTerminator = GALGAS_pic_31__38_TestRegisterTerminator::constructor_new (constinArgument_inInstructionLocation, GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inInstructionLocation, constinArgument_inConditionTrueLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1889)) COMMA_SOURCE_FILE_AT_LINE (1889)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inInstructionLocation, constinArgument_inConditionFalseLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1890)) COMMA_SOURCE_FILE_AT_LINE (1890)), var_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (1887)) ;
  }else if (kBoolFalse == test_0) {
    outArgument_outCurrentBlockTerminator = GALGAS_pic_31__38_TestRegisterTerminator::constructor_new (constinArgument_inInstructionLocation, GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inInstructionLocation, constinArgument_inConditionFalseLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1896)) COMMA_SOURCE_FILE_AT_LINE (1896)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inInstructionLocation, constinArgument_inConditionTrueLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1897)) COMMA_SOURCE_FILE_AT_LINE (1897)), var_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (1894)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_registerTestCondition_analyzeCondition (void) {
  enterCategoryMethod_analyzeCondition (kTypeDescriptor_GALGAS_registerTestCondition.mSlotID,
                                        categoryMethod_registerTestCondition_analyzeCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_registerTestCondition_analyzeCondition (defineCategoryMethod_registerTestCondition_analyzeCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@bitTest_in_structured_if_condition analyzeCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition (const cPtr_conditionExpression * inObject,
                                                                                            const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                                                            const GALGAS_uint constinArgument_inCurrentBank,
                                                                                            const GALGAS_registerTable constinArgument_inRegisterTable,
                                                                                            GALGAS_uint & /* ioArgument_ioLocalLabelIndex */,
                                                                                            const GALGAS_location constinArgument_inInstructionLocation,
                                                                                            GALGAS_ipic_31__38_BlockList & /* ioArgument_ioGeneratedBlockList */,
                                                                                            const GALGAS_lstring constinArgument_inConditionTrueLabel,
                                                                                            const GALGAS_lstring constinArgument_inConditionFalseLabel,
                                                                                            GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outCurrentBlockTerminator,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_bitTest_5F_in_5F_structured_5F_if_5F_condition * object = (const cPtr_bitTest_5F_in_5F_structured_5F_if_5F_condition *) inObject ;
  macroValidSharedObject (object, const cPtr_bitTest_5F_in_5F_structured_5F_if_5F_condition) ;
  GALGAS_ipic_31__38__5F_intermediate_5F_registerExpression var_IPICregisterDescription ;
  GALGAS_bitSliceTable var_bitSliceTable ;
  callCategoryMethod_analyzeRegisterExpression ((const cPtr_registerExpression *) object->mAttribute_mRegisterExpression.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inCurrentBank, constinArgument_inRegisterTable, var_IPICregisterDescription, var_bitSliceTable, inCompiler COMMA_SOURCE_FILE_AT_LINE (1916)) ;
  GALGAS_uint var_bitNumber ;
  callCategoryMethod_getBitNumber ((const cPtr_bitNumberExpression *) object->mAttribute_mBitNumber.ptr (), var_bitSliceTable, var_bitNumber, inCompiler COMMA_SOURCE_FILE_AT_LINE (1923)) ;
  const enumGalgasBool test_0 = object->mAttribute_mBTFSSinstruction.boolEnum () ;
  if (kBoolTrue == test_0) {
    outArgument_outCurrentBlockTerminator = GALGAS_pic_31__38_BitTestTerminator::constructor_new (constinArgument_inInstructionLocation, GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inInstructionLocation, constinArgument_inConditionTrueLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1931)) COMMA_SOURCE_FILE_AT_LINE (1931)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inInstructionLocation, constinArgument_inConditionFalseLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1932)) COMMA_SOURCE_FILE_AT_LINE (1932)), var_IPICregisterDescription, var_bitNumber COMMA_SOURCE_FILE_AT_LINE (1929)) ;
  }else if (kBoolFalse == test_0) {
    outArgument_outCurrentBlockTerminator = GALGAS_pic_31__38_BitTestTerminator::constructor_new (constinArgument_inInstructionLocation, GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inInstructionLocation, constinArgument_inConditionFalseLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1939)) COMMA_SOURCE_FILE_AT_LINE (1939)), GALGAS_ipic_31__38_JumpTerminator::constructor_new (constinArgument_inInstructionLocation, constinArgument_inConditionTrueLabel, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1940)) COMMA_SOURCE_FILE_AT_LINE (1940)), var_IPICregisterDescription, var_bitNumber COMMA_SOURCE_FILE_AT_LINE (1937)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition (void) {
  enterCategoryMethod_analyzeCondition (kTypeDescriptor_GALGAS_bitTest_5F_in_5F_structured_5F_if_5F_condition.mSlotID,
                                        categoryMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition (defineCategoryMethod_bitTest_5F_in_5F_structured_5F_if_5F_condition_analyzeCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category method '@negateCondition analyzeCondition'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_negateCondition_analyzeCondition (const cPtr_conditionExpression * inObject,
                                                             const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                             const GALGAS_uint constinArgument_inCurrentBank,
                                                             const GALGAS_registerTable constinArgument_inRegisterTable,
                                                             GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                             const GALGAS_location constinArgument_inInstructionLocation,
                                                             GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                                             const GALGAS_lstring constinArgument_inConditionTrueLabel,
                                                             const GALGAS_lstring constinArgument_inConditionFalseLabel,
                                                             GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outCurrentBlockTerminator,
                                                             C_Compiler * inCompiler
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_negateCondition * object = (const cPtr_negateCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_negateCondition) ;
  callCategoryMethod_analyzeCondition ((const cPtr_conditionExpression *) object->mAttribute_mCondition.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inCurrentBank, constinArgument_inRegisterTable, ioArgument_ioLocalLabelIndex, constinArgument_inInstructionLocation, ioArgument_ioGeneratedBlockList, constinArgument_inConditionFalseLabel, constinArgument_inConditionTrueLabel, outArgument_outCurrentBlockTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (1960)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_negateCondition_analyzeCondition (void) {
  enterCategoryMethod_analyzeCondition (kTypeDescriptor_GALGAS_negateCondition.mSlotID,
                                        categoryMethod_negateCondition_analyzeCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_negateCondition_analyzeCondition (defineCategoryMethod_negateCondition_analyzeCondition, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category method '@andCondition analyzeCondition'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_andCondition_analyzeCondition (const cPtr_conditionExpression * inObject,
                                                          const GALGAS_uint constinArgument_inAccessBankSplitOffset,
                                                          const GALGAS_uint constinArgument_inCurrentBank,
                                                          const GALGAS_registerTable constinArgument_inRegisterTable,
                                                          GALGAS_uint & ioArgument_ioLocalLabelIndex,
                                                          const GALGAS_location constinArgument_inInstructionLocation,
                                                          GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                                          const GALGAS_lstring constinArgument_inConditionTrueLabel,
                                                          const GALGAS_lstring constinArgument_inConditionFalseLabel,
                                                          GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outCurrentBlockTerminator,
                                                          C_Compiler * inCompiler
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_andCondition * object = (const cPtr_andCondition *) inObject ;
  macroValidSharedObject (object, const cPtr_andCondition) ;
  GALGAS_lstring var_conditionTrueLabel = GALGAS_lstring::constructor_new (GALGAS_string ("_label_").operator_concat (ioArgument_ioLocalLabelIndex.reader_string (SOURCE_FILE_AT_LINE (1987)) COMMA_SOURCE_FILE_AT_LINE (1987)), constinArgument_inInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1987)) ;
  ioArgument_ioLocalLabelIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1988)) ;
  callCategoryMethod_analyzeCondition ((const cPtr_conditionExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inCurrentBank, constinArgument_inRegisterTable, ioArgument_ioLocalLabelIndex, constinArgument_inInstructionLocation, ioArgument_ioGeneratedBlockList, var_conditionTrueLabel, constinArgument_inConditionFalseLabel, outArgument_outCurrentBlockTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (1990)) ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_secondTestBlockTerminator ;
  callCategoryMethod_analyzeCondition ((const cPtr_conditionExpression *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAccessBankSplitOffset, constinArgument_inCurrentBank, constinArgument_inRegisterTable, ioArgument_ioLocalLabelIndex, constinArgument_inInstructionLocation, ioArgument_ioGeneratedBlockList, constinArgument_inConditionTrueLabel, constinArgument_inConditionFalseLabel, var_secondTestBlockTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (2002)) ;
  ioArgument_ioGeneratedBlockList.addAssign_operation (GALGAS_ipic_31__38_Block::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (2015)), var_conditionTrueLabel, GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (2017)), var_secondTestBlockTerminator COMMA_SOURCE_FILE_AT_LINE (2014)) COMMA_SOURCE_FILE_AT_LINE (2014)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_andCondition_analyzeCondition (void) {
  enterCategoryMethod_analyzeCondition (kTypeDescriptor_GALGAS_andCondition.mSlotID,
                                        categoryMethod_andCondition_analyzeCondition) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_andCondition_analyzeCondition (defineCategoryMethod_andCondition_analyzeCondition, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


