//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'ipic18_cluster_ordering.cpp'                     *
//                        Generated by version 2.5.0                         *
//                     august 22th, 2013, at 16h52'46"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "ipic18_cluster_ordering.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "piccolo_options.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "ipic18_cluster_ordering.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                 Class for element of '@clusterList' list                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_clusterList : public cCollectionElement {
  public : GALGAS_clusterList_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_clusterList (const GALGAS_ipic_31__38_BlockList & in_mBlockList
                                           COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_clusterList::cCollectionElement_clusterList (const GALGAS_ipic_31__38_BlockList & in_mBlockList
                                                                COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mBlockList) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_clusterList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_clusterList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_clusterList (mObject.mAttribute_mBlockList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_clusterList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBlockList" ":" ;
  mObject.mAttribute_mBlockList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_clusterList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_clusterList * operand = (cCollectionElement_clusterList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_clusterList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------*

GALGAS_clusterList::GALGAS_clusterList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_clusterList::GALGAS_clusterList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_clusterList GALGAS_clusterList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_clusterList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_clusterList GALGAS_clusterList::constructor_listWithValue (const GALGAS_ipic_31__38_BlockList & inOperand0
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_clusterList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_clusterList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_clusterList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                    const GALGAS_ipic_31__38_BlockList & in_mBlockList
                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement_clusterList * p = NULL ;
  macroMyNew (p, cCollectionElement_clusterList (in_mBlockList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_clusterList::addAssign_operation (const GALGAS_ipic_31__38_BlockList & inOperand0
                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_clusterList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_clusterList::modifier_insertAtIndex (const GALGAS_ipic_31__38_BlockList inOperand0,
                                                 const GALGAS_uint inInsertionIndex,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_clusterList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_clusterList::modifier_removeAtIndex (GALGAS_ipic_31__38_BlockList & outOperand0,
                                                 const GALGAS_uint inRemoveIndex,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_clusterList * p = (cCollectionElement_clusterList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_clusterList) ;
      outOperand0 = p->mObject.mAttribute_mBlockList ;
    }
  }
}

//---------------------------------------------------------------------------*

void GALGAS_clusterList::modifier_popFirst (GALGAS_ipic_31__38_BlockList & outOperand0,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_clusterList * p = (cCollectionElement_clusterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_clusterList) ;
    outOperand0 = p->mObject.mAttribute_mBlockList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_clusterList::modifier_popLast (GALGAS_ipic_31__38_BlockList & outOperand0,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_clusterList * p = (cCollectionElement_clusterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_clusterList) ;
    outOperand0 = p->mObject.mAttribute_mBlockList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_clusterList::method_first (GALGAS_ipic_31__38_BlockList & outOperand0,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_clusterList * p = (cCollectionElement_clusterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_clusterList) ;
    outOperand0 = p->mObject.mAttribute_mBlockList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_clusterList::method_last (GALGAS_ipic_31__38_BlockList & outOperand0,
                                      C_Compiler * inCompiler
                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_clusterList * p = (cCollectionElement_clusterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_clusterList) ;
    outOperand0 = p->mObject.mAttribute_mBlockList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_clusterList GALGAS_clusterList::operator_concat (const GALGAS_clusterList & inOperand
                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_clusterList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_clusterList GALGAS_clusterList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_clusterList result = GALGAS_clusterList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_clusterList GALGAS_clusterList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_clusterList result = GALGAS_clusterList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_clusterList::dotAssign_operation (const GALGAS_clusterList inOperand
                                              COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_ipic_31__38_BlockList GALGAS_clusterList::reader_mBlockListAtIndex (const GALGAS_uint & inIndex,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_clusterList * p = (cCollectionElement_clusterList *) attributes.ptr () ;
  GALGAS_ipic_31__38_BlockList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_clusterList) ;
    result = p->mObject.mAttribute_mBlockList ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_clusterList::cEnumerator_clusterList (const GALGAS_clusterList & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_clusterList_2E_element cEnumerator_clusterList::current (LOCATION_ARGS) const {
  const cCollectionElement_clusterList * p = (const cCollectionElement_clusterList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_clusterList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------*

GALGAS_ipic_31__38_BlockList cEnumerator_clusterList::current_mBlockList (LOCATION_ARGS) const {
  const cCollectionElement_clusterList * p = (const cCollectionElement_clusterList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_clusterList) ;
  return p->mObject.mAttribute_mBlockList ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                             @clusterList type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_clusterList ("clusterList",
                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_clusterList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_clusterList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_clusterList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_clusterList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_clusterList GALGAS_clusterList::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_clusterList result ;
  const GALGAS_clusterList * p = (const GALGAS_clusterList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_clusterList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("clusterList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'perform_cluster_ordering'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_perform_5F_cluster_5F_ordering (const GALGAS_clusterList constinArgument_inInitialClusterList,
                                             GALGAS_ipic_31__38_BlockList & ioArgument_ioBlockList,
                                             GALGAS_string & ioArgument_ioListFileContents,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool var_optimize = GALGAS_bool (gOption_piccolo_5F_options_performOptimizations.reader_value ()).operator_or (GALGAS_string (gOption_piccolo_5F_options_optimizationFlags.reader_value ()).reader_containsCharacter (GALGAS_char (TO_UNICODE (67)) COMMA_SOURCE_FILE_AT_LINE (19)) COMMA_SOURCE_FILE_AT_LINE (19)) ;
  const enumGalgasBool test_0 = var_optimize.boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_uint var_clusterCount = constinArgument_inInitialClusterList.reader_length (SOURCE_FILE_AT_LINE (21)) ;
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string::makeEmptyString ().reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (22)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (22)) COMMA_SOURCE_FILE_AT_LINE (22)) ;
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*").operator_concat (GALGAS_string ("CLUSTER ORDERING OPTIMIZATION").reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 77U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (23)) COMMA_SOURCE_FILE_AT_LINE (23)).operator_concat (GALGAS_string ("*\n") COMMA_SOURCE_FILE_AT_LINE (23)) COMMA_SOURCE_FILE_AT_LINE (23)) ;
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string::makeEmptyString ().reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (24)).operator_concat (GALGAS_string ("\n"
      "\n") COMMA_SOURCE_FILE_AT_LINE (24)) COMMA_SOURCE_FILE_AT_LINE (24)) ;
    //--- @ifExpressionForGeneration
    GALGAS_string temp_1 ;
    const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_clusterCount.objectCompare (GALGAS_uint ((PMUInt32) 1U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      temp_1 = GALGAS_string ("s") ;
    }else if (kBoolFalse == test_2) {
      temp_1 = GALGAS_string::makeEmptyString () ;
    }
    GALGAS_string var_s = GALGAS_string ("Cluster ordering optimization (").operator_concat (var_clusterCount.reader_string (SOURCE_FILE_AT_LINE (25)) COMMA_SOURCE_FILE_AT_LINE (25)).operator_concat (GALGAS_string (" cluster") COMMA_SOURCE_FILE_AT_LINE (25)).operator_concat (temp_1 COMMA_SOURCE_FILE_AT_LINE (25)).operator_concat (GALGAS_string ("):\n") COMMA_SOURCE_FILE_AT_LINE (25)) ;
    ioArgument_ioListFileContents.dotAssign_operation (var_s.operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (26)) COMMA_SOURCE_FILE_AT_LINE (26)) ;
    const enumGalgasBool test_3 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
    if (kBoolTrue == test_3) {
      inCompiler->printMessage (var_s COMMA_SOURCE_FILE_AT_LINE (29)) ;
    }
    GALGAS_clusterList var_clusterList = constinArgument_inInitialClusterList ;
    GALGAS_bool var_continue = GALGAS_bool (true) ;
    GALGAS_uint var_pass = GALGAS_uint ((PMUInt32) 0U) ;
    if (var_clusterList.reader_length (SOURCE_FILE_AT_LINE (35)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (35)).isValid ()) {
      PMUInt32 variant_1392 = var_clusterList.reader_length (SOURCE_FILE_AT_LINE (35)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (35)).uintValue () ;
      bool loop_1392 = true ;
      while (loop_1392) {
        loop_1392 = var_continue.isValid () ;
        if (loop_1392) {
          loop_1392 = var_continue.boolValue () ;
        }
        if (loop_1392 && (0 == variant_1392)) {
          loop_1392 = false ;
          inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (35)) ;
        }
        if (loop_1392) {
          variant_1392 -- ;
          var_pass.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (37)) ;
          ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("Pass ").operator_concat (var_pass.reader_string (SOURCE_FILE_AT_LINE (38)) COMMA_SOURCE_FILE_AT_LINE (38)).operator_concat (GALGAS_string (":\n") COMMA_SOURCE_FILE_AT_LINE (38)) COMMA_SOURCE_FILE_AT_LINE (38)) ;
          GALGAS_ipic_31__38_BlockList var_workingBlockList = GALGAS_ipic_31__38_BlockList::constructor_emptyList (SOURCE_FILE_AT_LINE (40)) ;
          GALGAS_symbolTableForClusterOrdering var_symbolTable = GALGAS_symbolTableForClusterOrdering::constructor_emptyMap (SOURCE_FILE_AT_LINE (41)) ;
          cEnumerator_clusterList enumerator_1707 (var_clusterList, kEnumeration_up) ;
          GALGAS_uint index_1701 ((PMUInt32) 0) ;
          while (enumerator_1707.hasCurrentObject ()) {
            var_workingBlockList.dotAssign_operation (enumerator_1707.current_mBlockList (HERE) COMMA_SOURCE_FILE_AT_LINE (43)) ;
            cEnumerator_ipic_31__38_BlockList enumerator_1794 (enumerator_1707.current_mBlockList (HERE), kEnumeration_up) ;
            while (enumerator_1794.hasCurrentObject ()) {
              {
              var_symbolTable.modifier_insertKey (enumerator_1794.current_mBlock (HERE).mAttribute_mLabel, index_1701, inCompiler COMMA_SOURCE_FILE_AT_LINE (45)) ;
              }
              enumerator_1794.gotoNextObject () ;
            }
            enumerator_1707.gotoNextObject () ;
            index_1701.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (42)) ;
          }
          GALGAS_uint var_insertionIdx = var_workingBlockList.reader_length (SOURCE_FILE_AT_LINE (49)) ;
          cEnumerator_ipic_31__38_BlockList enumerator_2054 (ioArgument_ioBlockList, kEnumeration_down) ;
          bool bool_4 = var_continue.isValidAndTrue () ;
          if (enumerator_2054.hasCurrentObject () && bool_4) {
            while (enumerator_2054.hasCurrentObject () && bool_4) {
              var_continue = GALGAS_bool (kIsNotEqual, enumerator_2054.current_mBlock (HERE).mAttribute_mStartAddress.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (51)))) ;
              const enumGalgasBool test_5 = var_continue.boolEnum () ;
              if (kBoolTrue == test_5) {
                {
                var_symbolTable.modifier_insertKey (enumerator_2054.current_mBlock (HERE).mAttribute_mLabel, GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (53)), inCompiler COMMA_SOURCE_FILE_AT_LINE (53)) ;
                }
                {
                var_workingBlockList.modifier_insertAtIndex (enumerator_2054.current_mBlock (HERE), var_insertionIdx, inCompiler COMMA_SOURCE_FILE_AT_LINE (54)) ;
                }
              }
              enumerator_2054.gotoNextObject () ;
              if (enumerator_2054.hasCurrentObject ()) {
                bool_4 = var_continue.isValidAndTrue () ;
              }
            }
          }
          GALGAS_branchOverflowMap var_overflowMap ;
          {
          routine_ipic_31__38_RelativeBranchOverflow (var_workingBlockList, var_overflowMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (58)) ;
          }
          GALGAS_uint var_overflowCount = GALGAS_uint ((PMUInt32) 0U) ;
          cEnumerator_branchOverflowMap enumerator_2525 (var_overflowMap, kEnumeration_up) ;
          while (enumerator_2525.hasCurrentObject ()) {
            cEnumerator_stringlist enumerator_2550 (enumerator_2525.current_mList (HERE), kEnumeration_up) ;
            while (enumerator_2550.hasCurrentObject ()) {
              var_overflowCount.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (65)) ;
              GALGAS_uint var_sourceCluster ;
              var_symbolTable.method_searchKey (enumerator_2525.current_key (HERE).reader_nowhere (SOURCE_FILE_AT_LINE (66)), var_sourceCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (66)) ;
              GALGAS_uint var_targetCluster ;
              var_symbolTable.method_searchKey (enumerator_2550.current_mValue (HERE).reader_nowhere (SOURCE_FILE_AT_LINE (67)), var_targetCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (67)) ;
              ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ").operator_concat (enumerator_2525.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (68)).operator_concat (GALGAS_string (" (cluster #") COMMA_SOURCE_FILE_AT_LINE (68)).operator_concat (var_sourceCluster.reader_string (SOURCE_FILE_AT_LINE (68)) COMMA_SOURCE_FILE_AT_LINE (68)).operator_concat (GALGAS_string (") --> ") COMMA_SOURCE_FILE_AT_LINE (68)).operator_concat (enumerator_2550.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (68)).operator_concat (GALGAS_string (" (cluster #") COMMA_SOURCE_FILE_AT_LINE (68)).operator_concat (var_targetCluster.reader_string (SOURCE_FILE_AT_LINE (68)) COMMA_SOURCE_FILE_AT_LINE (68)).operator_concat (GALGAS_string (")\n") COMMA_SOURCE_FILE_AT_LINE (68)) COMMA_SOURCE_FILE_AT_LINE (68)) ;
              enumerator_2550.gotoNextObject () ;
            }
            enumerator_2525.gotoNextObject () ;
          }
          const enumGalgasBool test_6 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_6) {
            GALGAS_string var_s = GALGAS_string ("  Pass ").operator_concat (var_pass.reader_string (SOURCE_FILE_AT_LINE (72)) COMMA_SOURCE_FILE_AT_LINE (72)).operator_concat (GALGAS_string (": ") COMMA_SOURCE_FILE_AT_LINE (72)) ;
            const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, var_overflowCount.objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
            if (kBoolTrue == test_7) {
              var_s.dotAssign_operation (GALGAS_string ("no branch overflow") COMMA_SOURCE_FILE_AT_LINE (74)) ;
            }else if (kBoolFalse == test_7) {
              const enumGalgasBool test_8 = GALGAS_bool (kIsEqual, var_overflowCount.objectCompare (GALGAS_uint ((PMUInt32) 1U))).boolEnum () ;
              if (kBoolTrue == test_8) {
                var_s.dotAssign_operation (GALGAS_string ("1 branch overflow") COMMA_SOURCE_FILE_AT_LINE (76)) ;
              }else if (kBoolFalse == test_8) {
                var_s.dotAssign_operation (var_overflowCount.reader_string (SOURCE_FILE_AT_LINE (78)).operator_concat (GALGAS_string (" branch overflows") COMMA_SOURCE_FILE_AT_LINE (78)) COMMA_SOURCE_FILE_AT_LINE (78)) ;
              }
            }
            inCompiler->printMessage (var_s COMMA_SOURCE_FILE_AT_LINE (80)) ;
          }
          GALGAS_bool var_correctionLoop = GALGAS_bool (true) ;
          cEnumerator_branchOverflowMap enumerator_3362 (var_overflowMap, kEnumeration_up) ;
          bool bool_9 = var_correctionLoop.isValidAndTrue () ;
          if (enumerator_3362.hasCurrentObject () && bool_9) {
            while (enumerator_3362.hasCurrentObject () && bool_9) {
              cEnumerator_stringlist enumerator_3408 (enumerator_3362.current_mList (HERE), kEnumeration_up) ;
              bool bool_10 = var_correctionLoop.isValidAndTrue () ;
              if (enumerator_3408.hasCurrentObject () && bool_10) {
                while (enumerator_3408.hasCurrentObject () && bool_10) {
                  GALGAS_uint var_targetCluster ;
                  var_symbolTable.method_searchKey (enumerator_3408.current_mValue (HERE).reader_nowhere (SOURCE_FILE_AT_LINE (86)), var_targetCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (86)) ;
                  const enumGalgasBool test_11 = GALGAS_bool (kIsNotEqual, var_targetCluster.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (87)))).boolEnum () ;
                  if (kBoolTrue == test_11) {
                    GALGAS_uint var_sourceCluster ;
                    var_symbolTable.method_searchKey (enumerator_3362.current_key (HERE).reader_nowhere (SOURCE_FILE_AT_LINE (88)), var_sourceCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (88)) ;
                    const enumGalgasBool test_12 = GALGAS_bool (kIsEqual, var_sourceCluster.add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (89)).objectCompare (var_targetCluster)).boolEnum () ;
                    if (kBoolTrue == test_12) {
                      var_correctionLoop = GALGAS_bool (false) ;
                      var_continue = GALGAS_bool (true) ;
                      GALGAS_ipic_31__38_BlockList var_last ;
                      {
                      var_clusterList.modifier_removeAtIndex (var_last, var_targetCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (92)) ;
                      }
                      GALGAS_ipic_31__38_BlockList var_first ;
                      {
                      var_clusterList.modifier_removeAtIndex (var_first, var_sourceCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (93)) ;
                      }
                      {
                      var_clusterList.modifier_insertAtIndex (var_first.operator_concat (var_last COMMA_SOURCE_FILE_AT_LINE (94)), var_sourceCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (94)) ;
                      }
                      GALGAS_string var_m = GALGAS_string ("merge #").operator_concat (var_targetCluster.reader_string (SOURCE_FILE_AT_LINE (95)) COMMA_SOURCE_FILE_AT_LINE (95)).operator_concat (GALGAS_string (" into #") COMMA_SOURCE_FILE_AT_LINE (95)).operator_concat (var_sourceCluster.reader_string (SOURCE_FILE_AT_LINE (95)) COMMA_SOURCE_FILE_AT_LINE (95)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (95)) ;
                      ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  --> ").operator_concat (var_m COMMA_SOURCE_FILE_AT_LINE (96)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (96)) COMMA_SOURCE_FILE_AT_LINE (96)) ;
                      const enumGalgasBool test_13 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
                      if (kBoolTrue == test_13) {
                        inCompiler->printMessage (GALGAS_string (" -> ").operator_concat (var_m COMMA_SOURCE_FILE_AT_LINE (98)) COMMA_SOURCE_FILE_AT_LINE (98)) ;
                      }
                    }else if (kBoolFalse == test_12) {
                      const enumGalgasBool test_14 = GALGAS_bool (kIsEqual, var_sourceCluster.objectCompare (var_targetCluster.add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (100)))).boolEnum () ;
                      if (kBoolTrue == test_14) {
                        var_correctionLoop = GALGAS_bool (false) ;
                        var_continue = GALGAS_bool (true) ;
                        GALGAS_ipic_31__38_BlockList var_last ;
                        {
                        var_clusterList.modifier_removeAtIndex (var_last, var_sourceCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (103)) ;
                        }
                        GALGAS_ipic_31__38_BlockList var_first ;
                        {
                        var_clusterList.modifier_removeAtIndex (var_first, var_targetCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (104)) ;
                        }
                        {
                        var_clusterList.modifier_insertAtIndex (var_first.operator_concat (var_last COMMA_SOURCE_FILE_AT_LINE (105)), var_targetCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (105)) ;
                        }
                        GALGAS_string var_m = GALGAS_string ("merge #").operator_concat (var_sourceCluster.reader_string (SOURCE_FILE_AT_LINE (106)) COMMA_SOURCE_FILE_AT_LINE (106)).operator_concat (GALGAS_string (" into #") COMMA_SOURCE_FILE_AT_LINE (106)).operator_concat (var_targetCluster.reader_string (SOURCE_FILE_AT_LINE (106)) COMMA_SOURCE_FILE_AT_LINE (106)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (106)) ;
                        ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  --> ").operator_concat (var_m COMMA_SOURCE_FILE_AT_LINE (107)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (107)) COMMA_SOURCE_FILE_AT_LINE (107)) ;
                        const enumGalgasBool test_15 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
                        if (kBoolTrue == test_15) {
                          inCompiler->printMessage (GALGAS_string (" -> ").operator_concat (var_m COMMA_SOURCE_FILE_AT_LINE (109)) COMMA_SOURCE_FILE_AT_LINE (109)) ;
                        }
                      }else if (kBoolFalse == test_14) {
                        const enumGalgasBool test_16 = GALGAS_bool (kIsStrictInf, var_sourceCluster.objectCompare (var_targetCluster)).boolEnum () ;
                        if (kBoolTrue == test_16) {
                          var_correctionLoop = GALGAS_bool (false) ;
                          var_continue = GALGAS_bool (true) ;
                          GALGAS_ipic_31__38_BlockList var_b ;
                          {
                          var_clusterList.modifier_removeAtIndex (var_b, var_targetCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (114)) ;
                          }
                          {
                          var_clusterList.modifier_insertAtIndex (var_b, var_targetCluster.add_operation (var_sourceCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (115)).divide_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (115)), inCompiler COMMA_SOURCE_FILE_AT_LINE (115)) ;
                          }
                          GALGAS_string var_m = GALGAS_string ("roll up [#").operator_concat (var_targetCluster.add_operation (var_sourceCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (116)).divide_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (116)).reader_string (SOURCE_FILE_AT_LINE (116)) COMMA_SOURCE_FILE_AT_LINE (116)).operator_concat (GALGAS_string (", #") COMMA_SOURCE_FILE_AT_LINE (116)).operator_concat (var_targetCluster.reader_string (SOURCE_FILE_AT_LINE (116)) COMMA_SOURCE_FILE_AT_LINE (116)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (116)) ;
                          ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  --> ").operator_concat (var_m COMMA_SOURCE_FILE_AT_LINE (117)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (117)) COMMA_SOURCE_FILE_AT_LINE (117)) ;
                          const enumGalgasBool test_17 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
                          if (kBoolTrue == test_17) {
                            inCompiler->printMessage (GALGAS_string (" -> ").operator_concat (var_m COMMA_SOURCE_FILE_AT_LINE (119)) COMMA_SOURCE_FILE_AT_LINE (119)) ;
                          }
                        }else if (kBoolFalse == test_16) {
                          const enumGalgasBool test_18 = GALGAS_bool (kIsStrictSup, var_sourceCluster.objectCompare (var_targetCluster)).boolEnum () ;
                          if (kBoolTrue == test_18) {
                            var_correctionLoop = GALGAS_bool (false) ;
                            var_continue = GALGAS_bool (true) ;
                            GALGAS_ipic_31__38_BlockList var_b ;
                            {
                            var_clusterList.modifier_removeAtIndex (var_b, var_sourceCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (124)) ;
                            }
                            {
                            var_clusterList.modifier_insertAtIndex (var_b, var_targetCluster.add_operation (var_sourceCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (125)).divide_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (125)), inCompiler COMMA_SOURCE_FILE_AT_LINE (125)) ;
                            }
                            GALGAS_string var_m = GALGAS_string ("roll up [#").operator_concat (var_targetCluster.reader_string (SOURCE_FILE_AT_LINE (126)) COMMA_SOURCE_FILE_AT_LINE (126)).operator_concat (GALGAS_string (", #") COMMA_SOURCE_FILE_AT_LINE (126)).operator_concat (var_targetCluster.add_operation (var_sourceCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (126)).divide_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (126)).reader_string (SOURCE_FILE_AT_LINE (126)) COMMA_SOURCE_FILE_AT_LINE (126)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (126)) ;
                            ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  --> ").operator_concat (var_m COMMA_SOURCE_FILE_AT_LINE (127)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (127)) COMMA_SOURCE_FILE_AT_LINE (127)) ;
                            const enumGalgasBool test_19 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
                            if (kBoolTrue == test_19) {
                              inCompiler->printMessage (GALGAS_string (" -> ").operator_concat (var_m COMMA_SOURCE_FILE_AT_LINE (129)) COMMA_SOURCE_FILE_AT_LINE (129)) ;
                            }
                          }
                        }
                      }
                    }
                  }
                  enumerator_3408.gotoNextObject () ;
                  if (enumerator_3408.hasCurrentObject ()) {
                    bool_10 = var_correctionLoop.isValidAndTrue () ;
                  }
                }
              }
              enumerator_3362.gotoNextObject () ;
              if (enumerator_3362.hasCurrentObject ()) {
                bool_9 = var_correctionLoop.isValidAndTrue () ;
              }
            }
          }
          const enumGalgasBool test_20 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
          if (kBoolTrue == test_20) {
            inCompiler->printMessage (GALGAS_string (".\n") COMMA_SOURCE_FILE_AT_LINE (136)) ;
          }
        }
      }
    }
    const enumGalgasBool test_21 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
    if (kBoolTrue == test_21) {
      inCompiler->printMessage (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (140)) ;
    }
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (142)) ;
    GALGAS_ipic_31__38_BlockList var_newBlockList = GALGAS_ipic_31__38_BlockList::constructor_emptyList (SOURCE_FILE_AT_LINE (144)) ;
    var_continue = GALGAS_bool (true) ;
    cEnumerator_ipic_31__38_BlockList enumerator_6584 (ioArgument_ioBlockList, kEnumeration_up) ;
    bool bool_22 = var_continue.isValidAndTrue () ;
    if (enumerator_6584.hasCurrentObject () && bool_22) {
      while (enumerator_6584.hasCurrentObject () && bool_22) {
        var_continue = GALGAS_bool (kIsNotEqual, enumerator_6584.current_mBlock (HERE).mAttribute_mStartAddress.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (148)))) ;
        const enumGalgasBool test_23 = var_continue.boolEnum () ;
        if (kBoolTrue == test_23) {
          var_newBlockList.addAssign_operation (enumerator_6584.current_mBlock (HERE) COMMA_SOURCE_FILE_AT_LINE (150)) ;
        }
        enumerator_6584.gotoNextObject () ;
        if (enumerator_6584.hasCurrentObject ()) {
          bool_22 = var_continue.isValidAndTrue () ;
        }
      }
    }
    cEnumerator_clusterList enumerator_6800 (var_clusterList, kEnumeration_up) ;
    while (enumerator_6800.hasCurrentObject ()) {
      var_newBlockList.dotAssign_operation (enumerator_6800.current_mBlockList (HERE) COMMA_SOURCE_FILE_AT_LINE (155)) ;
      enumerator_6800.gotoNextObject () ;
    }
    GALGAS_uint var_insertionIndex = var_newBlockList.reader_length (SOURCE_FILE_AT_LINE (158)) ;
    var_continue = GALGAS_bool (true) ;
    cEnumerator_ipic_31__38_BlockList enumerator_7013 (ioArgument_ioBlockList, kEnumeration_down) ;
    bool bool_24 = var_continue.isValidAndTrue () ;
    if (enumerator_7013.hasCurrentObject () && bool_24) {
      while (enumerator_7013.hasCurrentObject () && bool_24) {
        var_continue = GALGAS_bool (kIsNotEqual, enumerator_7013.current_mBlock (HERE).mAttribute_mStartAddress.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (161)))) ;
        const enumGalgasBool test_25 = var_continue.boolEnum () ;
        if (kBoolTrue == test_25) {
          {
          var_newBlockList.modifier_insertAtIndex (enumerator_7013.current_mBlock (HERE), var_insertionIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (163)) ;
          }
        }
        enumerator_7013.gotoNextObject () ;
        if (enumerator_7013.hasCurrentObject ()) {
          bool_24 = var_continue.isValidAndTrue () ;
        }
      }
    }
    ioArgument_ioBlockList = var_newBlockList ;
  }
}


//---------------------------------------------------------------------------*

GALGAS_clusterList_2E_element::GALGAS_clusterList_2E_element (void) :
mAttribute_mBlockList () {
}

//---------------------------------------------------------------------------*

GALGAS_clusterList_2E_element::~ GALGAS_clusterList_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_clusterList_2E_element::GALGAS_clusterList_2E_element (const GALGAS_ipic_31__38_BlockList & inOperand0) :
mAttribute_mBlockList (inOperand0) {
}

//---------------------------------------------------------------------------*

GALGAS_clusterList_2E_element GALGAS_clusterList_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_clusterList_2E_element (GALGAS_ipic_31__38_BlockList::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_clusterList_2E_element GALGAS_clusterList_2E_element::constructor_new (const GALGAS_ipic_31__38_BlockList & inOperand0 
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_clusterList_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_clusterList_2E_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_clusterList_2E_element::objectCompare (const GALGAS_clusterList_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mBlockList.objectCompare (inOperand.mAttribute_mBlockList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_clusterList_2E_element::isValid (void) const {
  return mAttribute_mBlockList.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_clusterList_2E_element::drop (void) {
  mAttribute_mBlockList.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_clusterList_2E_element::description (C_String & ioString,
                                                 const PMSInt32 inIndentation) const {
  ioString << "<struct @clusterList.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mBlockList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_ipic_31__38_BlockList GALGAS_clusterList_2E_element::reader_mBlockList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBlockList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @clusterList.element type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_clusterList_2E_element ("clusterList.element",
                                               NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_clusterList_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_clusterList_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_clusterList_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_clusterList_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_clusterList_2E_element GALGAS_clusterList_2E_element::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_clusterList_2E_element result ;
  const GALGAS_clusterList_2E_element * p = (const GALGAS_clusterList_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_clusterList_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("clusterList.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


