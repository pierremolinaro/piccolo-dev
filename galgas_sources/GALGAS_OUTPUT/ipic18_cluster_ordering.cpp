//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'ipic18_cluster_ordering.cpp'                     *
//                        Generated by version 2.5.0                         *
//                     august 10th, 2013, at 18h13'46"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "ipic18_cluster_ordering.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "ipic18_cluster_ordering.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                 Class for element of '@clusterList' list                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_clusterList : public cCollectionElement {
  public : GALGAS_clusterList_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_clusterList (const GALGAS_ipic_31__38_BlockList & in_mBlockList
                                           COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_clusterList::cCollectionElement_clusterList (const GALGAS_ipic_31__38_BlockList & in_mBlockList
                                                                COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mBlockList) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_clusterList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_clusterList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_clusterList (mObject.mAttribute_mBlockList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_clusterList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBlockList" ":" ;
  mObject.mAttribute_mBlockList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_clusterList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_clusterList * operand = (cCollectionElement_clusterList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_clusterList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------*

GALGAS_clusterList::GALGAS_clusterList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_clusterList::GALGAS_clusterList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_clusterList GALGAS_clusterList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_clusterList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_clusterList GALGAS_clusterList::constructor_listWithValue (const GALGAS_ipic_31__38_BlockList & inOperand0
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_clusterList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_clusterList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_clusterList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                    const GALGAS_ipic_31__38_BlockList & in_mBlockList
                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement_clusterList * p = NULL ;
  macroMyNew (p, cCollectionElement_clusterList (in_mBlockList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_clusterList::addAssign_operation (const GALGAS_ipic_31__38_BlockList & inOperand0
                                              COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_clusterList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_clusterList::modifier_insertAtIndex (const GALGAS_ipic_31__38_BlockList inOperand0,
                                                 const GALGAS_uint inInsertionIndex,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_clusterList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_clusterList::modifier_removeAtIndex (GALGAS_ipic_31__38_BlockList & outOperand0,
                                                 const GALGAS_uint inRemoveIndex,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_clusterList * p = (cCollectionElement_clusterList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_clusterList) ;
      outOperand0 = p->mObject.mAttribute_mBlockList ;
    }
  }
}

//---------------------------------------------------------------------------*

void GALGAS_clusterList::modifier_popFirst (GALGAS_ipic_31__38_BlockList & outOperand0,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_clusterList * p = (cCollectionElement_clusterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_clusterList) ;
    outOperand0 = p->mObject.mAttribute_mBlockList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_clusterList::modifier_popLast (GALGAS_ipic_31__38_BlockList & outOperand0,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_clusterList * p = (cCollectionElement_clusterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_clusterList) ;
    outOperand0 = p->mObject.mAttribute_mBlockList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_clusterList::method_first (GALGAS_ipic_31__38_BlockList & outOperand0,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_clusterList * p = (cCollectionElement_clusterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_clusterList) ;
    outOperand0 = p->mObject.mAttribute_mBlockList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_clusterList::method_last (GALGAS_ipic_31__38_BlockList & outOperand0,
                                      C_Compiler * inCompiler
                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_clusterList * p = (cCollectionElement_clusterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_clusterList) ;
    outOperand0 = p->mObject.mAttribute_mBlockList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_clusterList GALGAS_clusterList::operator_concat (const GALGAS_clusterList & inOperand
                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_clusterList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_clusterList GALGAS_clusterList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_clusterList result = GALGAS_clusterList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_clusterList GALGAS_clusterList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_clusterList result = GALGAS_clusterList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_clusterList::dotAssign_operation (const GALGAS_clusterList inOperand
                                              COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_ipic_31__38_BlockList GALGAS_clusterList::reader_mBlockListAtIndex (const GALGAS_uint & inIndex,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_clusterList * p = (cCollectionElement_clusterList *) attributes.ptr () ;
  GALGAS_ipic_31__38_BlockList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_clusterList) ;
    result = p->mObject.mAttribute_mBlockList ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_clusterList::cEnumerator_clusterList (const GALGAS_clusterList & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_clusterList_2E_element cEnumerator_clusterList::current (LOCATION_ARGS) const {
  const cCollectionElement_clusterList * p = (const cCollectionElement_clusterList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_clusterList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------*

GALGAS_ipic_31__38_BlockList cEnumerator_clusterList::current_mBlockList (LOCATION_ARGS) const {
  const cCollectionElement_clusterList * p = (const cCollectionElement_clusterList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_clusterList) ;
  return p->mObject.mAttribute_mBlockList ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                             @clusterList type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_clusterList ("clusterList",
                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_clusterList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_clusterList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_clusterList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_clusterList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_clusterList GALGAS_clusterList::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_clusterList result ;
  const GALGAS_clusterList * p = (const GALGAS_clusterList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_clusterList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("clusterList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'perform_cluster_ordering'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_perform_5F_cluster_5F_ordering (const GALGAS_clusterList constinArgument_inInitialClusterList,
                                             GALGAS_ipic_31__38_BlockList & ioArgument_ioBlockList,
                                             GALGAS_string & ioArgument_ioListFileContents,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_uint var_clusterCount = constinArgument_inInitialClusterList.reader_length (SOURCE_FILE_AT_LINE (18)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string::makeEmptyString ().reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (19)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (19)) COMMA_SOURCE_FILE_AT_LINE (19)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*").operator_concat (GALGAS_string ("CLUSTER ORDERING OPTIMIZATION").reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 77U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (20)) COMMA_SOURCE_FILE_AT_LINE (20)).operator_concat (GALGAS_string ("*\n") COMMA_SOURCE_FILE_AT_LINE (20)) COMMA_SOURCE_FILE_AT_LINE (20)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string::makeEmptyString ().reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (21)).operator_concat (GALGAS_string ("\n"
    "\n") COMMA_SOURCE_FILE_AT_LINE (21)) COMMA_SOURCE_FILE_AT_LINE (21)) ;
  //--- @ifExpressionForGeneration
  GALGAS_string temp_0 ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, var_clusterCount.objectCompare (GALGAS_uint ((PMUInt32) 1U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    temp_0 = GALGAS_string ("s") ;
  }else if (kBoolFalse == test_1) {
    temp_0 = GALGAS_string::makeEmptyString () ;
  }
  GALGAS_string var_s = GALGAS_string ("Cluster ordering optimization (").operator_concat (var_clusterCount.reader_string (SOURCE_FILE_AT_LINE (22)) COMMA_SOURCE_FILE_AT_LINE (22)).operator_concat (GALGAS_string (" cluster") COMMA_SOURCE_FILE_AT_LINE (22)).operator_concat (temp_0 COMMA_SOURCE_FILE_AT_LINE (22)).operator_concat (GALGAS_string ("):\n") COMMA_SOURCE_FILE_AT_LINE (22)) ;
  ioArgument_ioListFileContents.dotAssign_operation (var_s.operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (23)) COMMA_SOURCE_FILE_AT_LINE (23)) ;
  const enumGalgasBool test_2 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_2) {
    inCompiler->printMessage (var_s COMMA_SOURCE_FILE_AT_LINE (26)) ;
  }
  GALGAS_clusterList var_clusterList = constinArgument_inInitialClusterList ;
  GALGAS_bool var_continue = GALGAS_bool (true) ;
  GALGAS_uint var_pass = GALGAS_uint ((PMUInt32) 0U) ;
  if (var_clusterList.reader_length (SOURCE_FILE_AT_LINE (32)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (32)).isValid ()) {
    PMUInt32 variant_1166 = var_clusterList.reader_length (SOURCE_FILE_AT_LINE (32)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (32)).uintValue () ;
    bool loop_1166 = true ;
    while (loop_1166) {
      loop_1166 = var_continue.isValid () ;
      if (loop_1166) {
        loop_1166 = var_continue.boolValue () ;
      }
      if (loop_1166 && (0 == variant_1166)) {
        loop_1166 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (32)) ;
      }
      if (loop_1166) {
        variant_1166 -- ;
        var_pass.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (34)) ;
        var_continue = GALGAS_bool (false) ;
        ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("Pass ").operator_concat (var_pass.reader_string (SOURCE_FILE_AT_LINE (36)) COMMA_SOURCE_FILE_AT_LINE (36)).operator_concat (GALGAS_string (":\n") COMMA_SOURCE_FILE_AT_LINE (36)) COMMA_SOURCE_FILE_AT_LINE (36)) ;
        GALGAS_ipic_31__38_BlockList var_workingBlockList = GALGAS_ipic_31__38_BlockList::constructor_emptyList (SOURCE_FILE_AT_LINE (38)) ;
        GALGAS_symbolTableForClusterOrdering var_symbolTable = GALGAS_symbolTableForClusterOrdering::constructor_emptyMap (SOURCE_FILE_AT_LINE (39)) ;
        cEnumerator_clusterList enumerator_1491 (var_clusterList, kEnumeration_up) ;
        GALGAS_uint index_1485 ((PMUInt32) 0) ;
        while (enumerator_1491.hasCurrentObject ()) {
          var_workingBlockList.dotAssign_operation (enumerator_1491.current_mBlockList (HERE) COMMA_SOURCE_FILE_AT_LINE (41)) ;
          cEnumerator_ipic_31__38_BlockList enumerator_1574 (enumerator_1491.current_mBlockList (HERE), kEnumeration_up) ;
          while (enumerator_1574.hasCurrentObject ()) {
            {
            var_symbolTable.modifier_insertKey (enumerator_1574.current_mBlock (HERE).mAttribute_mLabel, index_1485, inCompiler COMMA_SOURCE_FILE_AT_LINE (44)) ;
            }
            enumerator_1574.gotoNextObject () ;
          }
          enumerator_1491.gotoNextObject () ;
          index_1485.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (40)) ;
        }
        GALGAS_branchOverflowMap var_overflowMap ;
        {
        routine_ipic_31__38_RelativeBranchOverflow (var_workingBlockList, var_overflowMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (48)) ;
        }
        GALGAS_uint var_overflowCount = GALGAS_uint ((PMUInt32) 0U) ;
        cEnumerator_branchOverflowMap enumerator_1941 (var_overflowMap, kEnumeration_up) ;
        while (enumerator_1941.hasCurrentObject ()) {
          cEnumerator_stringlist enumerator_1964 (enumerator_1941.current_mList (HERE), kEnumeration_up) ;
          while (enumerator_1964.hasCurrentObject ()) {
            var_overflowCount.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (55)) ;
            GALGAS_uint var_sourceCluster ;
            var_symbolTable.method_searchKey (enumerator_1941.current_key (HERE).reader_nowhere (SOURCE_FILE_AT_LINE (56)), var_sourceCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (56)) ;
            GALGAS_uint var_targetCluster ;
            var_symbolTable.method_searchKey (enumerator_1964.current_mValue (HERE).reader_nowhere (SOURCE_FILE_AT_LINE (57)), var_targetCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (57)) ;
            ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ").operator_concat (enumerator_1941.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (58)).operator_concat (GALGAS_string (" (cluster #") COMMA_SOURCE_FILE_AT_LINE (58)).operator_concat (var_sourceCluster.reader_string (SOURCE_FILE_AT_LINE (58)) COMMA_SOURCE_FILE_AT_LINE (58)).operator_concat (GALGAS_string (") --> ") COMMA_SOURCE_FILE_AT_LINE (58)).operator_concat (enumerator_1964.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (58)).operator_concat (GALGAS_string (" (cluster #") COMMA_SOURCE_FILE_AT_LINE (58)).operator_concat (var_targetCluster.reader_string (SOURCE_FILE_AT_LINE (58)) COMMA_SOURCE_FILE_AT_LINE (58)).operator_concat (GALGAS_string (")\n") COMMA_SOURCE_FILE_AT_LINE (58)) COMMA_SOURCE_FILE_AT_LINE (58)) ;
            enumerator_1964.gotoNextObject () ;
          }
          enumerator_1941.gotoNextObject () ;
        }
        const enumGalgasBool test_3 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
        if (kBoolTrue == test_3) {
          GALGAS_string var_s = GALGAS_string ("  Pass ").operator_concat (var_pass.reader_string (SOURCE_FILE_AT_LINE (62)) COMMA_SOURCE_FILE_AT_LINE (62)).operator_concat (GALGAS_string (": ") COMMA_SOURCE_FILE_AT_LINE (62)) ;
          const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, var_overflowCount.objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
          if (kBoolTrue == test_4) {
            var_s.dotAssign_operation (GALGAS_string ("no branch overflow") COMMA_SOURCE_FILE_AT_LINE (64)) ;
          }else if (kBoolFalse == test_4) {
            const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, var_overflowCount.objectCompare (GALGAS_uint ((PMUInt32) 1U))).boolEnum () ;
            if (kBoolTrue == test_5) {
              var_s.dotAssign_operation (GALGAS_string ("1 branch overflow") COMMA_SOURCE_FILE_AT_LINE (66)) ;
            }else if (kBoolFalse == test_5) {
              var_s.dotAssign_operation (var_overflowCount.reader_string (SOURCE_FILE_AT_LINE (68)).operator_concat (GALGAS_string (" branch overflow") COMMA_SOURCE_FILE_AT_LINE (68)) COMMA_SOURCE_FILE_AT_LINE (68)) ;
            }
          }
          inCompiler->printMessage (var_s COMMA_SOURCE_FILE_AT_LINE (70)) ;
        }
        GALGAS_bool var_correctionLoop = GALGAS_bool (true) ;
        cEnumerator_branchOverflowMap enumerator_2735 (var_overflowMap, kEnumeration_up) ;
        bool bool_6 = var_correctionLoop.isValidAndTrue () ;
        if (enumerator_2735.hasCurrentObject () && bool_6) {
          while (enumerator_2735.hasCurrentObject () && bool_6) {
            cEnumerator_stringlist enumerator_2779 (enumerator_2735.current_mList (HERE), kEnumeration_up) ;
            bool bool_7 = var_correctionLoop.isValidAndTrue () ;
            if (enumerator_2779.hasCurrentObject () && bool_7) {
              while (enumerator_2779.hasCurrentObject () && bool_7) {
                GALGAS_uint var_sourceCluster ;
                var_symbolTable.method_searchKey (enumerator_2735.current_key (HERE).reader_nowhere (SOURCE_FILE_AT_LINE (76)), var_sourceCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (76)) ;
                GALGAS_uint var_targetCluster ;
                var_symbolTable.method_searchKey (enumerator_2779.current_mValue (HERE).reader_nowhere (SOURCE_FILE_AT_LINE (77)), var_targetCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (77)) ;
                const enumGalgasBool test_8 = GALGAS_bool (kIsStrictInf, var_sourceCluster.objectCompare (var_targetCluster)).boolEnum () ;
                if (kBoolTrue == test_8) {
                  var_correctionLoop = GALGAS_bool (false) ;
                  var_continue = GALGAS_bool (true) ;
                  GALGAS_ipic_31__38_BlockList var_b ;
                  {
                  var_clusterList.modifier_removeAtIndex (var_b, var_targetCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (81)) ;
                  }
                  {
                  var_clusterList.modifier_insertAtIndex (var_b, var_targetCluster.add_operation (var_sourceCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (82)).divide_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (82)), inCompiler COMMA_SOURCE_FILE_AT_LINE (82)) ;
                  }
                  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  --> cluster #").operator_concat (var_targetCluster.reader_string (SOURCE_FILE_AT_LINE (83)) COMMA_SOURCE_FILE_AT_LINE (83)).operator_concat (GALGAS_string (" rolls downs to #") COMMA_SOURCE_FILE_AT_LINE (83)).operator_concat (var_targetCluster.add_operation (var_sourceCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (83)).divide_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (83)).reader_string (SOURCE_FILE_AT_LINE (83)) COMMA_SOURCE_FILE_AT_LINE (83)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (83)) COMMA_SOURCE_FILE_AT_LINE (83)) ;
                  const enumGalgasBool test_9 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
                  if (kBoolTrue == test_9) {
                    inCompiler->printMessage (GALGAS_string (" -> #").operator_concat (var_targetCluster.reader_string (SOURCE_FILE_AT_LINE (85)) COMMA_SOURCE_FILE_AT_LINE (85)).operator_concat (GALGAS_string (" rolls down to #") COMMA_SOURCE_FILE_AT_LINE (85)).operator_concat (var_targetCluster.add_operation (var_sourceCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (85)).divide_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (85)).reader_string (SOURCE_FILE_AT_LINE (85)) COMMA_SOURCE_FILE_AT_LINE (85)) COMMA_SOURCE_FILE_AT_LINE (85)) ;
                  }
                }else if (kBoolFalse == test_8) {
                  const enumGalgasBool test_10 = GALGAS_bool (kIsStrictSup, var_sourceCluster.objectCompare (var_targetCluster)).boolEnum () ;
                  if (kBoolTrue == test_10) {
                    var_correctionLoop = GALGAS_bool (false) ;
                    var_continue = GALGAS_bool (true) ;
                    GALGAS_ipic_31__38_BlockList var_b ;
                    {
                    var_clusterList.modifier_removeAtIndex (var_b, var_sourceCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (90)) ;
                    }
                    {
                    var_clusterList.modifier_insertAtIndex (var_b, var_targetCluster.add_operation (var_sourceCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (91)).divide_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (91)), inCompiler COMMA_SOURCE_FILE_AT_LINE (91)) ;
                    }
                    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  --> cluster #").operator_concat (var_sourceCluster.reader_string (SOURCE_FILE_AT_LINE (92)) COMMA_SOURCE_FILE_AT_LINE (92)).operator_concat (GALGAS_string (" rolls downs to #") COMMA_SOURCE_FILE_AT_LINE (92)).operator_concat (var_targetCluster.add_operation (var_sourceCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (92)).divide_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (92)).reader_string (SOURCE_FILE_AT_LINE (92)) COMMA_SOURCE_FILE_AT_LINE (92)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (92)) COMMA_SOURCE_FILE_AT_LINE (92)) ;
                    const enumGalgasBool test_11 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
                    if (kBoolTrue == test_11) {
                      inCompiler->printMessage (GALGAS_string (" -> #").operator_concat (var_sourceCluster.reader_string (SOURCE_FILE_AT_LINE (94)) COMMA_SOURCE_FILE_AT_LINE (94)).operator_concat (GALGAS_string (" rolls downs to #") COMMA_SOURCE_FILE_AT_LINE (94)).operator_concat (var_targetCluster.add_operation (var_sourceCluster, inCompiler COMMA_SOURCE_FILE_AT_LINE (94)).divide_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (94)).reader_string (SOURCE_FILE_AT_LINE (94)) COMMA_SOURCE_FILE_AT_LINE (94)) COMMA_SOURCE_FILE_AT_LINE (94)) ;
                    }
                  }
                }
                enumerator_2779.gotoNextObject () ;
                if (enumerator_2779.hasCurrentObject ()) {
                  bool_7 = var_correctionLoop.isValidAndTrue () ;
                }
              }
            }
            enumerator_2735.gotoNextObject () ;
            if (enumerator_2735.hasCurrentObject ()) {
              bool_6 = var_correctionLoop.isValidAndTrue () ;
            }
          }
        }
        const enumGalgasBool test_12 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
        if (kBoolTrue == test_12) {
          inCompiler->printMessage (GALGAS_string (".\n") COMMA_SOURCE_FILE_AT_LINE (100)) ;
        }
      }
    }
  }
  const enumGalgasBool test_13 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_13) {
    inCompiler->printMessage (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (104)) ;
  }
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (106)) ;
  GALGAS_ipic_31__38_BlockList var_newBlockList = GALGAS_ipic_31__38_BlockList::constructor_emptyList (SOURCE_FILE_AT_LINE (108)) ;
  var_continue = GALGAS_bool (true) ;
  cEnumerator_ipic_31__38_BlockList enumerator_4565 (ioArgument_ioBlockList, kEnumeration_up) ;
  bool bool_14 = var_continue.isValidAndTrue () ;
  if (enumerator_4565.hasCurrentObject () && bool_14) {
    while (enumerator_4565.hasCurrentObject () && bool_14) {
      var_continue = GALGAS_bool (kIsNotEqual, enumerator_4565.current_mBlock (HERE).mAttribute_mStartAddress.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (112)))) ;
      const enumGalgasBool test_15 = var_continue.boolEnum () ;
      if (kBoolTrue == test_15) {
        var_newBlockList.addAssign_operation (enumerator_4565.current_mBlock (HERE) COMMA_SOURCE_FILE_AT_LINE (114)) ;
      }
      enumerator_4565.gotoNextObject () ;
      if (enumerator_4565.hasCurrentObject ()) {
        bool_14 = var_continue.isValidAndTrue () ;
      }
    }
  }
  cEnumerator_clusterList enumerator_4767 (var_clusterList, kEnumeration_up) ;
  while (enumerator_4767.hasCurrentObject ()) {
    var_newBlockList.dotAssign_operation (enumerator_4767.current_mBlockList (HERE) COMMA_SOURCE_FILE_AT_LINE (119)) ;
    enumerator_4767.gotoNextObject () ;
  }
  GALGAS_uint var_insertionIndex = var_newBlockList.reader_length (SOURCE_FILE_AT_LINE (122)) ;
  var_continue = GALGAS_bool (true) ;
  cEnumerator_ipic_31__38_BlockList enumerator_4974 (ioArgument_ioBlockList, kEnumeration_down) ;
  bool bool_16 = var_continue.isValidAndTrue () ;
  if (enumerator_4974.hasCurrentObject () && bool_16) {
    while (enumerator_4974.hasCurrentObject () && bool_16) {
      var_continue = GALGAS_bool (kIsNotEqual, enumerator_4974.current_mBlock (HERE).mAttribute_mStartAddress.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (125)))) ;
      const enumGalgasBool test_17 = var_continue.boolEnum () ;
      if (kBoolTrue == test_17) {
        {
        var_newBlockList.modifier_insertAtIndex (enumerator_4974.current_mBlock (HERE), var_insertionIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (127)) ;
        }
      }
      enumerator_4974.gotoNextObject () ;
      if (enumerator_4974.hasCurrentObject ()) {
        bool_16 = var_continue.isValidAndTrue () ;
      }
    }
  }
  ioArgument_ioBlockList = var_newBlockList ;
}


//---------------------------------------------------------------------------*

GALGAS_clusterList_2E_element::GALGAS_clusterList_2E_element (void) :
mAttribute_mBlockList () {
}

//---------------------------------------------------------------------------*

GALGAS_clusterList_2E_element::~ GALGAS_clusterList_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_clusterList_2E_element::GALGAS_clusterList_2E_element (const GALGAS_ipic_31__38_BlockList & inOperand0) :
mAttribute_mBlockList (inOperand0) {
}

//---------------------------------------------------------------------------*

GALGAS_clusterList_2E_element GALGAS_clusterList_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_clusterList_2E_element (GALGAS_ipic_31__38_BlockList::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_clusterList_2E_element GALGAS_clusterList_2E_element::constructor_new (const GALGAS_ipic_31__38_BlockList & inOperand0 
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_clusterList_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_clusterList_2E_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_clusterList_2E_element::objectCompare (const GALGAS_clusterList_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mBlockList.objectCompare (inOperand.mAttribute_mBlockList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_clusterList_2E_element::isValid (void) const {
  return mAttribute_mBlockList.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_clusterList_2E_element::drop (void) {
  mAttribute_mBlockList.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_clusterList_2E_element::description (C_String & ioString,
                                                 const PMSInt32 inIndentation) const {
  ioString << "<struct @clusterList.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mBlockList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_ipic_31__38_BlockList GALGAS_clusterList_2E_element::reader_mBlockList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBlockList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @clusterList.element type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_clusterList_2E_element ("clusterList.element",
                                               NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_clusterList_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_clusterList_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_clusterList_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_clusterList_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_clusterList_2E_element GALGAS_clusterList_2E_element::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_clusterList_2E_element result ;
  const GALGAS_clusterList_2E_element * p = (const GALGAS_clusterList_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_clusterList_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("clusterList.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


