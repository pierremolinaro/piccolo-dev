//---------------------------------------------------------------------------*
//                                                                           *
//                   File 'ipic18_display_block_list.cpp'                    *
//                        Generated by version 2.5.0                         *
//                     august 22th, 2013, at 18h47'46"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "ipic18_display_block_list.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "ipic18_display_block_list.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'displayBlockList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_displayBlockList (const GALGAS_string constinArgument_inTitle,
                               GALGAS_string & ioArgument_ioListFileContents,
                               const GALGAS_ipic_31__38_BlockList constinArgument_inGeneratedBlockList,
                               C_Compiler * inCompiler
                               COMMA_UNUSED_LOCATION_ARGS) {
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string::makeEmptyString ().reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (45)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (45)) COMMA_SOURCE_FILE_AT_LINE (45)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*").operator_concat (constinArgument_inTitle.reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 77U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (46)) COMMA_SOURCE_FILE_AT_LINE (46)).operator_concat (GALGAS_string ("*\n") COMMA_SOURCE_FILE_AT_LINE (46)) COMMA_SOURCE_FILE_AT_LINE (46)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string::makeEmptyString ().reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (47)).operator_concat (GALGAS_string ("\n"
    "\n") COMMA_SOURCE_FILE_AT_LINE (47)) COMMA_SOURCE_FILE_AT_LINE (47)) ;
  cEnumerator_ipic_31__38_BlockList enumerator_1594 (constinArgument_inGeneratedBlockList, kEnumeration_up) ;
  GALGAS_uint index_1588 ((PMUInt32) 0) ;
  while (enumerator_1594.hasCurrentObject ()) {
    GALGAS_string var_nextBlockLabel ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsStrictInf, index_1588.add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (50)).objectCompare (constinArgument_inGeneratedBlockList.reader_length (SOURCE_FILE_AT_LINE (50)))).boolEnum () ;
    if (kBoolTrue == test_0) {
      var_nextBlockLabel = constinArgument_inGeneratedBlockList.reader_mBlockAtIndex (index_1588.add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (51)), inCompiler COMMA_SOURCE_FILE_AT_LINE (51)).mAttribute_mLabel.mAttribute_string ;
    }else if (kBoolFalse == test_0) {
      var_nextBlockLabel = GALGAS_string::makeEmptyString () ;
    }
    categoryMethod_display (enumerator_1594.current_mBlock (HERE), var_nextBlockLabel, ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (55)) ;
    enumerator_1594.gotoNextObject () ;
    index_1588.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (48)) ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                  Category method '@ipic18Block display'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void categoryMethod_display (const GALGAS_ipic_31__38_Block inObject,
                             const GALGAS_string constinArgument_inNextBlockLabel,
                             GALGAS_string & ioArgument_ioListFileContents,
                             C_Compiler * inCompiler
                             COMMA_UNUSED_LOCATION_ARGS) {
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("LABEL ").operator_concat (inObject.mAttribute_mLabel.reader_string (SOURCE_FILE_AT_LINE (16)) COMMA_SOURCE_FILE_AT_LINE (16)) COMMA_SOURCE_FILE_AT_LINE (16)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, inObject.mAttribute_mAddress.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (17)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (", ORG ").operator_concat (inObject.mAttribute_mAddress.reader_hexString (SOURCE_FILE_AT_LINE (18)) COMMA_SOURCE_FILE_AT_LINE (18)) COMMA_SOURCE_FILE_AT_LINE (18)) ;
  }
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (":\n") COMMA_SOURCE_FILE_AT_LINE (20)) ;
  cEnumerator_ipic_31__38_SequentialInstructionList enumerator_679 (inObject.mAttribute_mInstructionList, kEnumeration_up) ;
  while (enumerator_679.hasCurrentObject ()) {
    GALGAS_stringlist var_d = callCategoryReader_instructionDisplay ((const cPtr_ipic_31__38_SequentialInstruction *) enumerator_679.current_mInstruction (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (23)) ;
    cEnumerator_stringlist enumerator_759 (var_d, kEnumeration_up) ;
    while (enumerator_759.hasCurrentObject ()) {
      ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ").operator_concat (enumerator_759.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (25)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (25)) COMMA_SOURCE_FILE_AT_LINE (25)) ;
      enumerator_759.gotoNextObject () ;
    }
    enumerator_679.gotoNextObject () ;
  }
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ") COMMA_SOURCE_FILE_AT_LINE (29)) ;
  ioArgument_ioListFileContents.dotAssign_operation (callCategoryReader_terminatorDisplay ((const cPtr_ipic_31__38_AbstractBlockTerminator *) inObject.mAttribute_mTerminator.ptr (), constinArgument_inNextBlockLabel, inCompiler COMMA_SOURCE_FILE_AT_LINE (30)) COMMA_SOURCE_FILE_AT_LINE (30)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("\n"
    "\n") COMMA_SOURCE_FILE_AT_LINE (31)) ;
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


