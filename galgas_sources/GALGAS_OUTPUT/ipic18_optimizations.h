//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'ipic18_optimizations.h'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     august 22th, 2008, at 18h30'37"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef ipic18_optimizations_DEFINED
#define ipic18_optimizations_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/C_GGS_Object.h"
#include "galgas/GGS_location.h"
#include "galgas/GGS_lbool.h"
#include "galgas/GGS_lchar.h"
#include "galgas/GGS_lstring.h"
#include "galgas/GGS_ldouble.h"
#include "galgas/GGS_luint.h"
#include "galgas/GGS_lsint.h"
#include "galgas/GGS_luint64.h"
#include "galgas/GGS_lsint64.h"
#include "galgas/GGS_stringset.h"
#include "galgas/GGS_binaryset.h"
#include "galgas/GGS_filewrapper.h"
#include "galgas/predefined_types.h"
#include "galgas/AC_galgas_class.h"
#include "galgas/AC_galgas_domain.h"
#include "galgas/AC_galgas_mapindex.h"
#include "galgas/AC_galgas_map.h"
#include "galgas/AC_galgas_listmap.h"
#include "galgas/AC_galgas_list.h"
#include "galgas/AC_galgas_sortedlist.h"

//---------------------------------------------------------------------------*

#include "galgas/C_Lexique.h"

// Include imported semantics
#include "ipic18_metamodel.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_symbolTableForOptimizations ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map '@symbolTableForOptimizations'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_symbolTableForOptimizations ;

class GGS_symbolTableForOptimizations : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_symbolTableForOptimizations cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_symbolTableForOptimizations & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_symbolTableForOptimizations & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_symbolTableForOptimizations * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_symbolTableForOptimizations * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_symbolTableForOptimizations constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMDefinitionLineIndexForKey (C_Compiler & inLexique,
                        const GGS_uint & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'removeKey' Remove Modifier
  public : void modifier_removeKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint & outParameter0 COMMA_LOCATION_ARGS) ;
//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_uint &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for removing an element
  protected : void _removeElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_uint & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_uint & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_uint & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_symbolTableForOptimizations constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_symbolTableForOptimizations & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_symbolTableForOptimizations reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_symbolTableForOptimizations & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_symbolTableForOptimizations & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mDefinitionLineIndex (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@ipic18_instruction.defineLabel'              *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__ipic18_instruction__defineLabel)  (C_Compiler & _inLexique,
                                const cPtr_ipic18_instruction * inObjectPtr,
                                GGS_symbolTableForOptimizations  & var_cas_ioRoutineSymbolTable,
                                const GGS_uint   var_cas_inLineIndex
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__ipic18_instruction__defineLabel (typeCategoryMethod__ipic18_instruction__defineLabel inRoutine,
                     const sint32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__ipic18_instruction__defineLabel
findCategoryMethod__ipic18_instruction__defineLabel (AC_galgasClassRunTimeInformation * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Routine 'findFirstInstructionFromAddress'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_findFirstInstructionFromAddress (C_Compiler &,
                                const GGS_uint  ,
                                const GGS_ipic18_instructionList  ,
                                GGS_ipic18_instruction  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Routine 'findFirstInstructionOrLabelFromAddress'              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_findFirstInstructionOrLabelFromAddress (C_Compiler &,
                                const GGS_uint  ,
                                const GGS_ipic18_instructionList  ,
                                GGS_ipic18_instruction  &,
                                GGS_stringset  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Category method '@ipic_JUMP.optimizeJUMP'                  *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__ipic_JUMP__optimizeJUMP)  (C_Compiler & _inLexique,
                                const cPtr_ipic_JUMP * inObjectPtr,
                                const GGS_symbolTableForOptimizations   var_cas_inSymbolTable,
                                const GGS_uint   var_cas_inLineIndex,
                                GGS_ipic18_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                GGS_bool & var_cas_ioOptimizationsDone
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__ipic_JUMP__optimizeJUMP (typeCategoryMethod__ipic_JUMP__optimizeJUMP inRoutine,
                     const sint32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__ipic_JUMP__optimizeJUMP
findCategoryMethod__ipic_JUMP__optimizeJUMP (AC_galgasClassRunTimeInformation * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Category method '@ipic_JSR.optimizeJSR'                   *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__ipic_JSR__optimizeJSR)  (C_Compiler & _inLexique,
                                const cPtr_ipic_JSR * inObjectPtr,
                                const GGS_uint   var_cas_inLineIndex,
                                GGS_ipic18_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                GGS_bool & var_cas_ioOptimizationsDone
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__ipic_JSR__optimizeJSR (typeCategoryMethod__ipic_JSR__optimizeJSR inRoutine,
                     const sint32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__ipic_JSR__optimizeJSR
findCategoryMethod__ipic_JSR__optimizeJSR (AC_galgasClassRunTimeInformation * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@ipic18_instruction_literalOperation.optimizeMOVLW'    *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__ipic18_instruction_literalOperation__optimizeMOVLW)  (C_Compiler & _inLexique,
                                const cPtr_ipic18_instruction_literalOperation * inObjectPtr,
                                const GGS_uint   var_cas_inLineIndex,
                                GGS_ipic18_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                GGS_bool & var_cas_ioOptimizationsDone
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__ipic18_instruction_literalOperation__optimizeMOVLW (typeCategoryMethod__ipic18_instruction_literalOperation__optimizeMOVLW inRoutine,
                     const sint32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__ipic18_instruction_literalOperation__optimizeMOVLW
findCategoryMethod__ipic18_instruction_literalOperation__optimizeMOVLW (AC_galgasClassRunTimeInformation * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@ipic18_instruction_conditionalBranch.optimizeBCC'     *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__ipic18_instruction_conditionalBranch__optimizeBCC)  (C_Compiler & _inLexique,
                                const cPtr_ipic18_instruction_conditionalBranch * inObjectPtr,
                                const GGS_symbolTableForOptimizations   var_cas_inSymbolTable,
                                const GGS_uint   var_cas_inLineIndex,
                                GGS_ipic18_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                GGS_bool & var_cas_ioOptimizationsDone
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__ipic18_instruction_conditionalBranch__optimizeBCC (typeCategoryMethod__ipic18_instruction_conditionalBranch__optimizeBCC inRoutine,
                     const sint32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__ipic18_instruction_conditionalBranch__optimizeBCC
findCategoryMethod__ipic18_instruction_conditionalBranch__optimizeBCC (AC_galgasClassRunTimeInformation * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@ipic_jump_test_register.optimizeTestReg'         *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__ipic_jump_test_register__optimizeTestReg)  (C_Compiler & _inLexique,
                                const cPtr_ipic_jump_test_register * inObjectPtr,
                                const GGS_symbolTableForOptimizations   var_cas_inSymbolTable,
                                const GGS_uint   var_cas_inLineIndex,
                                GGS_ipic18_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                GGS_bool & var_cas_ioOptimizationsDone
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__ipic_jump_test_register__optimizeTestReg (typeCategoryMethod__ipic_jump_test_register__optimizeTestReg inRoutine,
                     const sint32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__ipic_jump_test_register__optimizeTestReg
findCategoryMethod__ipic_jump_test_register__optimizeTestReg (AC_galgasClassRunTimeInformation * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@ipic_incDecRegisterInCondition.optimizeTestDecInc'    *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__ipic_incDecRegisterInCondition__optimizeTestDecInc)  (C_Compiler & _inLexique,
                                const cPtr_ipic_incDecRegisterInCondition * inObjectPtr,
                                const GGS_symbolTableForOptimizations   var_cas_inSymbolTable,
                                const GGS_uint   var_cas_inLineIndex,
                                GGS_ipic18_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                GGS_bool & var_cas_ioOptimizationsDone
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__ipic_incDecRegisterInCondition__optimizeTestDecInc (typeCategoryMethod__ipic_incDecRegisterInCondition__optimizeTestDecInc inRoutine,
                     const sint32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__ipic_incDecRegisterInCondition__optimizeTestDecInc
findCategoryMethod__ipic_incDecRegisterInCondition__optimizeTestDecInc (AC_galgasClassRunTimeInformation * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@ipic_registerComparisonCondition.optimizeCMP'       *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__ipic_registerComparisonCondition__optimizeCMP)  (C_Compiler & _inLexique,
                                const cPtr_ipic_registerComparisonCondition * inObjectPtr,
                                const GGS_symbolTableForOptimizations   var_cas_inSymbolTable,
                                const GGS_uint   var_cas_inLineIndex,
                                GGS_ipic18_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                GGS_bool & var_cas_ioOptimizationsDone
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__ipic_registerComparisonCondition__optimizeCMP (typeCategoryMethod__ipic_registerComparisonCondition__optimizeCMP inRoutine,
                     const sint32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__ipic_registerComparisonCondition__optimizeCMP
findCategoryMethod__ipic_registerComparisonCondition__optimizeCMP (AC_galgasClassRunTimeInformation * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@ipic18_instruction_BitTestSkip.optimizeBitTestSkip'    *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__ipic18_instruction_BitTestSkip__optimizeBitTestSkip)  (C_Compiler & _inLexique,
                                const cPtr_ipic18_instruction_BitTestSkip * inObjectPtr,
                                const GGS_uint   var_cas_inLineIndex,
                                GGS_ipic18_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                GGS_bool & var_cas_ioOptimizationsDone
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__ipic18_instruction_BitTestSkip__optimizeBitTestSkip (typeCategoryMethod__ipic18_instruction_BitTestSkip__optimizeBitTestSkip inRoutine,
                     const sint32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__ipic18_instruction_BitTestSkip__optimizeBitTestSkip
findCategoryMethod__ipic18_instruction_BitTestSkip__optimizeBitTestSkip (AC_galgasClassRunTimeInformation * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'performOptimizations'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_performOptimizations (C_Compiler &,
                                GGS_ipic18_instructionList  &,
                                GGS_string & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of map '@symbolTableForOptimizations'                *
//                                                                           *
//---------------------------------------------------------------------------*

class e_symbolTableForOptimizations {
  public : GGS_uint  mDefinitionLineIndex ;

  public : e_symbolTableForOptimizations (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_symbolTableForOptimizations : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_symbolTableForOptimizations (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_symbolTableForOptimizations & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_symbolTableForOptimizations * nextObject (void) const { return (elementOf_GGS_symbolTableForOptimizations *) mNextItem ; }
  public : inline elementOf_GGS_symbolTableForOptimizations * infObject (void) const { return (elementOf_GGS_symbolTableForOptimizations *) mInfPtr ; }
  public : inline elementOf_GGS_symbolTableForOptimizations * supObject (void) const { return (elementOf_GGS_symbolTableForOptimizations *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_symbolTableForOptimizations mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#endif
