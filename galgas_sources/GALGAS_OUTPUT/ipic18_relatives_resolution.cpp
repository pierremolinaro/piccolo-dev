//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       File 'ipic18_relatives_resolution.cpp'                                        *
//                                             Generated by version 3.0.0                                              *
//                                          october 4th, 2014, at 11h42'28"                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------------------------------------------------*

#include "piccolo_options.h"
#include "ipic18_relatives_resolution.h"


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Routine 'performRelativesResolution'                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_performRelativesResolution (const GALGAS_symbolTableForRelativesResolution constinArgument_inSymbolTable,
                                         GALGAS_ipic_31__38_BlockList & ioArgument_ioBlockList,
                                         GALGAS_uint & ioArgument_ioConversionCount,
                                         GALGAS_string & ioArgument_ioListFileContents,
                                         C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_ipic_31__38_BlockList var_modifiedBlockList = GALGAS_ipic_31__38_BlockList::constructor_emptyList (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 58)) ;
  GALGAS_uint var_blockStartAddress = GALGAS_uint ((uint32_t) 0U) ;
  cEnumerator_ipic_31__38_BlockList enumerator_1794 (ioArgument_ioBlockList, kEnumeration_up) ;
  GALGAS_uint index_1782 ((uint32_t) 0) ;
  while (enumerator_1794.hasCurrentObject ()) {
    GALGAS_string var_nextBlockLabel ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsStrictInf, index_1782.add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 62)).objectCompare (ioArgument_ioBlockList.reader_length (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 62)))).boolEnum () ;
    if (kBoolTrue == test_0) {
      var_nextBlockLabel = ioArgument_ioBlockList.reader_mBlockAtIndex (index_1782.add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 63)), inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 63)).mAttribute_mLabel.mAttribute_string ;
    }else if (kBoolFalse == test_0) {
      var_nextBlockLabel = GALGAS_string::makeEmptyString () ;
    }
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, enumerator_1794.current_mBlock (HERE).mAttribute_mAddress.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 67)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_blockStartAddress = enumerator_1794.current_mBlock (HERE).mAttribute_mAddress ;
    }
    GALGAS_ipic_31__38_Block var_modifiedBlock ;
    categoryMethod_performRelativesResolution (enumerator_1794.current_mBlock (HERE), constinArgument_inSymbolTable, var_nextBlockLabel, var_blockStartAddress, ioArgument_ioConversionCount, ioArgument_ioListFileContents, var_modifiedBlock, inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 70)) ;
    var_modifiedBlockList.addAssign_operation (var_modifiedBlock  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 78)) ;
    GALGAS_uint var_blockSize = categoryReader_blockSize (enumerator_1794.current_mBlock (HERE), var_nextBlockLabel, inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 79)) ;
    var_blockStartAddress = var_blockStartAddress.add_operation (var_blockSize, inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 80)) ;
    enumerator_1794.gotoNextObject () ;
    index_1782.increment_operation (inCompiler  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 60)) ;
  }
  ioArgument_ioBlockList = var_modifiedBlockList ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      Routine 'computeLabelAbsoluteAddressMap'                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_computeLabelAbsoluteAddressMap (const GALGAS_ipic_31__38_BlockList constinArgument_inGeneratedBlockList,
                                             const GALGAS_ipic_31__38_BlockList constinArgument_inInitialBlockList,
                                             GALGAS_symbolTableForRelativesResolution & outArgument_outSymbolTable,
                                             GALGAS_uint & outArgument_outFreeAddress,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSymbolTable.drop () ; // Release 'out' argument
  outArgument_outFreeAddress.drop () ; // Release 'out' argument
  outArgument_outSymbolTable = GALGAS_symbolTableForRelativesResolution::constructor_emptyMap (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 109)) ;
  outArgument_outFreeAddress = GALGAS_uint::constructor_max (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 110)) ;
  GALGAS_uint var_blockStartAddress = GALGAS_uint ((uint32_t) 0U) ;
  cEnumerator_ipic_31__38_BlockList enumerator_3552 (constinArgument_inGeneratedBlockList, kEnumeration_up) ;
  GALGAS_uint index_3531 ((uint32_t) 0) ;
  while (enumerator_3552.hasCurrentObject ()) {
    GALGAS_string var_nextBlockLabel ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsStrictInf, index_3531.add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 115)).objectCompare (constinArgument_inGeneratedBlockList.reader_length (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 115)))).boolEnum () ;
    if (kBoolTrue == test_0) {
      var_nextBlockLabel = constinArgument_inGeneratedBlockList.reader_mBlockAtIndex (index_3531.add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 116)), inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 116)).mAttribute_mLabel.mAttribute_string ;
    }else if (kBoolFalse == test_0) {
      var_nextBlockLabel = GALGAS_string::makeEmptyString () ;
    }
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, enumerator_3552.current_mBlock (HERE).mAttribute_mAddress.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 120)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_blockStartAddress = enumerator_3552.current_mBlock (HERE).mAttribute_mAddress ;
    }
    {
    outArgument_outSymbolTable.modifier_insertKey (enumerator_3552.current_mBlock (HERE).mAttribute_mLabel, var_blockStartAddress, inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 123)) ;
    }
    GALGAS_uint var_blockSize = categoryReader_blockSize (enumerator_3552.current_mBlock (HERE), var_nextBlockLabel, inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 124)) ;
    var_blockStartAddress = var_blockStartAddress.add_operation (var_blockSize, inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 125)) ;
    const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, enumerator_3552.current_mBlock (HERE).mAttribute_mAddress.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 126)))).boolEnum () ;
    if (kBoolTrue == test_2) {
      outArgument_outFreeAddress = var_blockStartAddress ;
    }
    enumerator_3552.gotoNextObject () ;
    index_3531.increment_operation (inCompiler  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 113)) ;
  }
  cEnumerator_ipic_31__38_BlockList enumerator_4288 (constinArgument_inInitialBlockList, kEnumeration_up) ;
  while (enumerator_4288.hasCurrentObject ()) {
    const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, enumerator_4288.current_mBlock (HERE).mAttribute_mAddress.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 132)))).boolEnum () ;
    if (kBoolTrue == test_3) {
      const enumGalgasBool test_4 = outArgument_outSymbolTable.reader_hasKey (enumerator_4288.current_mBlock (HERE).mAttribute_mLabel.mAttribute_string COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 133)).operator_not (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 133)).boolEnum () ;
      if (kBoolTrue == test_4) {
        {
        outArgument_outSymbolTable.modifier_insertKey (enumerator_4288.current_mBlock (HERE).mAttribute_mLabel, enumerator_4288.current_mBlock (HERE).mAttribute_mAddress, inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 134)) ;
        }
      }
    }
    enumerator_4288.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         Routine 'ipic18RelativesResolution'                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_ipic_31__38_RelativesResolution (GALGAS_string & ioArgument_ioListFileContents,
                                              GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                              C_Compiler * inCompiler
                                              COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->printMessage (GALGAS_string ("Relative branch conversion to absolute:\n")  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 148)) ;
  }
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string::makeEmptyString ().reader_stringByLeftAndRightPadding (GALGAS_uint ((uint32_t) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 150)).operator_concat (GALGAS_string ("\n")  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 150))  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 150)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*").operator_concat (GALGAS_string ("RELATIVES RESOLUTION").reader_stringByLeftAndRightPadding (GALGAS_uint ((uint32_t) 77U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 151))  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 151)).operator_concat (GALGAS_string ("*\n")  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 151))  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 151)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string::makeEmptyString ().reader_stringByLeftAndRightPadding (GALGAS_uint ((uint32_t) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 152)).operator_concat (GALGAS_string ("\n")  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 152))  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 152)) ;
  GALGAS_bool var_resolutionDone = GALGAS_bool (false) ;
  GALGAS_uint var_pass = GALGAS_uint ((uint32_t) 0U) ;
  if (ioArgument_ioGeneratedBlockList.reader_length (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 156)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 156)).isValid ()) {
    uint32_t variant_5173 = ioArgument_ioGeneratedBlockList.reader_length (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 156)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 156)).uintValue () ;
    bool loop_5173 = true ;
    while (loop_5173) {
      loop_5173 = var_resolutionDone.operator_not (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 157)).operator_and (GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 157)).objectCompare (GALGAS_uint ((uint32_t) 0U))) COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 157)).isValid () ;
      if (loop_5173) {
        loop_5173 = var_resolutionDone.operator_not (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 157)).operator_and (GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 157)).objectCompare (GALGAS_uint ((uint32_t) 0U))) COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 157)).boolValue () ;
      }
      if (loop_5173 && (0 == variant_5173)) {
        loop_5173 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 156)) ;
      }
      if (loop_5173) {
        variant_5173 -- ;
        var_pass.increment_operation (inCompiler  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 158)) ;
        GALGAS_symbolTableForRelativesResolution var_symbolTable ;
        {
        GALGAS_uint joker_5445_0 ; // Joker input parameter
        routine_computeLabelAbsoluteAddressMap (ioArgument_ioGeneratedBlockList, GALGAS_ipic_31__38_BlockList::constructor_emptyList (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 161)), var_symbolTable, joker_5445_0, inCompiler  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 159)) ;
        }
        ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("\n"
          "Pass ").operator_concat (var_pass.reader_string (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 165))  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 165)).operator_concat (GALGAS_string (":\n")  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 165))  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 165)) ;
        GALGAS_uint var_conversionCount = GALGAS_uint ((uint32_t) 0U) ;
        {
        routine_performRelativesResolution (var_symbolTable, ioArgument_ioGeneratedBlockList, var_conversionCount, ioArgument_ioListFileContents, inCompiler  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 167)) ;
        }
        var_resolutionDone = GALGAS_bool (kIsEqual, var_conversionCount.objectCompare (GALGAS_uint ((uint32_t) 0U))) ;
        const enumGalgasBool test_1 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
        if (kBoolTrue == test_1) {
          GALGAS_string var_s = GALGAS_string ("  Pass ").operator_concat (var_pass.reader_string (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 175))  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 175)).operator_concat (GALGAS_string (": ")  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 175)) ;
          const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_conversionCount.objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
          if (kBoolTrue == test_2) {
            var_s.dotAssign_operation (GALGAS_string ("none.")  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 177)) ;
          }else if (kBoolFalse == test_2) {
            const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, var_conversionCount.objectCompare (GALGAS_uint ((uint32_t) 1U))).boolEnum () ;
            if (kBoolTrue == test_3) {
              var_s.dotAssign_operation (GALGAS_string ("1 conversion")  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 179)) ;
            }else if (kBoolFalse == test_3) {
              var_s.dotAssign_operation (var_conversionCount.reader_string (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 181)).operator_concat (GALGAS_string (" conversions")  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 181))  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 181)) ;
            }
          }
          inCompiler->printMessage (var_s.operator_concat (GALGAS_string ("\n")  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 183))  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 183)) ;
        }
      }
    }
  }
  const enumGalgasBool test_4 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_4) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  No conversion.\n"
      "\n")  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 187)) ;
    inCompiler->printMessage (GALGAS_string ("\n")  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 188)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       Routine 'ipic18RelativeBranchOverflow'                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_ipic_31__38_RelativeBranchOverflow (const GALGAS_ipic_31__38_BlockList constinArgument_inBlockList,
                                                 const GALGAS_ipic_31__38_BlockList constinArgument_inInitialBlockList,
                                                 GALGAS_branchOverflowMap & outArgument_outOverflowMap,
                                                 C_Compiler * inCompiler
                                                 COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outOverflowMap.drop () ; // Release 'out' argument
  GALGAS_symbolTableForRelativesResolution var_symbolTable ;
  {
  GALGAS_uint joker_7512_0 ; // Joker input parameter
  routine_computeLabelAbsoluteAddressMap (constinArgument_inBlockList, constinArgument_inInitialBlockList, var_symbolTable, joker_7512_0, inCompiler  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 233)) ;
  }
  outArgument_outOverflowMap = GALGAS_branchOverflowMap::constructor_emptyMap (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 240)) ;
  GALGAS_uint var_blockStartAddress = GALGAS_uint ((uint32_t) 0U) ;
  cEnumerator_ipic_31__38_BlockList enumerator_7629 (constinArgument_inBlockList, kEnumeration_up) ;
  GALGAS_uint index_7617 ((uint32_t) 0) ;
  while (enumerator_7629.hasCurrentObject ()) {
    GALGAS_string var_nextBlockLabel ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsStrictInf, index_7617.add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 244)).objectCompare (constinArgument_inBlockList.reader_length (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 244)))).boolEnum () ;
    if (kBoolTrue == test_0) {
      var_nextBlockLabel = constinArgument_inBlockList.reader_mBlockAtIndex (index_7617.add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 245)), inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 245)).mAttribute_mLabel.mAttribute_string ;
    }else if (kBoolFalse == test_0) {
      var_nextBlockLabel = GALGAS_string::makeEmptyString () ;
    }
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, enumerator_7629.current_mBlock (HERE).mAttribute_mAddress.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 249)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_blockStartAddress = enumerator_7629.current_mBlock (HERE).mAttribute_mAddress ;
    }
    categoryMethod_relativeBranchOverflow (enumerator_7629.current_mBlock (HERE), var_symbolTable, var_nextBlockLabel, var_blockStartAddress, outArgument_outOverflowMap, inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 252)) ;
    GALGAS_uint var_blockSize = categoryReader_blockSize (enumerator_7629.current_mBlock (HERE), var_nextBlockLabel, inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 258)) ;
    var_blockStartAddress = var_blockStartAddress.add_operation (var_blockSize, inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 259)) ;
    enumerator_7629.gotoNextObject () ;
    index_7617.increment_operation (inCompiler  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 242)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              Category method '@ipic18Block performRelativesResolution'                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void categoryMethod_performRelativesResolution (const GALGAS_ipic_31__38_Block inObject,
                                                const GALGAS_symbolTableForRelativesResolution constinArgument_inSymbolTable,
                                                const GALGAS_string constinArgument_inNextBlockLabel,
                                                const GALGAS_uint constinArgument_inBlockStartAddress,
                                                GALGAS_uint & ioArgument_ioConversionCount,
                                                GALGAS_string & ioArgument_ioListFileContents,
                                                GALGAS_ipic_31__38_Block & outArgument_outModifiedBlock,
                                                C_Compiler * inCompiler
                                                COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outModifiedBlock.drop () ; // Release 'out' argument
  GALGAS_ipic_31__38_SequentialInstructionList var_modifiedInstructionList = GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 17)) ;
  GALGAS_uint var_address = constinArgument_inBlockStartAddress ;
  cEnumerator_ipic_31__38_SequentialInstructionList enumerator_656 (inObject.mAttribute_mInstructionList, kEnumeration_up) ;
  while (enumerator_656.hasCurrentObject ()) {
    GALGAS_ipic_31__38_SequentialInstruction var_modifiedInstruction ;
    callCategoryMethod_performInstructionRelativeBranchResolution ((const cPtr_ipic_31__38_SequentialInstruction *) enumerator_656.current_mInstruction (HERE).ptr (), var_address, inObject.mAttribute_mLabel.mAttribute_string, constinArgument_inSymbolTable, ioArgument_ioConversionCount, ioArgument_ioListFileContents, var_modifiedInstruction, inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 20)) ;
    var_modifiedInstructionList.addAssign_operation (var_modifiedInstruction  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 28)) ;
    var_address = var_address.add_operation (callCategoryReader_instructionSize ((const cPtr_ipic_31__38_SequentialInstruction *) enumerator_656.current_mInstruction (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 29)), inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 29)) ;
    enumerator_656.gotoNextObject () ;
  }
  GALGAS_ipic_31__38_AbstractBlockTerminator var_modifiedTerminator ;
  callCategoryMethod_performTerminatorRelativeBranchResolution ((const cPtr_ipic_31__38_AbstractBlockTerminator *) inObject.mAttribute_mTerminator.ptr (), var_address, inObject.mAttribute_mLabel.mAttribute_string, constinArgument_inSymbolTable, constinArgument_inNextBlockLabel, ioArgument_ioConversionCount, ioArgument_ioListFileContents, var_modifiedTerminator, inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 32)) ;
  outArgument_outModifiedBlock = GALGAS_ipic_31__38_Block::constructor_new (inObject.mAttribute_mAddress, inObject.mAttribute_mLabel, var_modifiedInstructionList, var_modifiedTerminator  COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 42)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      Category Reader '@ipic18Block blockSize'                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint categoryReader_blockSize (const GALGAS_ipic_31__38_Block & inObject,
                                      const GALGAS_string & constinArgument_inNextBlockLabel,
                                      C_Compiler * inCompiler
                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_uint result_outResult ; // Returned variable
  result_outResult = callCategoryReader_terminatorSize ((const cPtr_ipic_31__38_AbstractBlockTerminator *) inObject.mAttribute_mTerminator.ptr (), constinArgument_inNextBlockLabel, inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 95)) ;
  cEnumerator_ipic_31__38_SequentialInstructionList enumerator_2946 (inObject.mAttribute_mInstructionList, kEnumeration_up) ;
  while (enumerator_2946.hasCurrentObject ()) {
    result_outResult = result_outResult.add_operation (callCategoryReader_instructionSize ((const cPtr_ipic_31__38_SequentialInstruction *) enumerator_2946.current_mInstruction (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 97)), inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 97)) ;
    enumerator_2946.gotoNextObject () ;
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                Category method '@ipic18Block relativeBranchOverflow'                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void categoryMethod_relativeBranchOverflow (const GALGAS_ipic_31__38_Block inObject,
                                            const GALGAS_symbolTableForRelativesResolution constinArgument_inSymbolTable,
                                            const GALGAS_string constinArgument_inNextBlockLabel,
                                            const GALGAS_uint constinArgument_inBlockStartAddress,
                                            GALGAS_branchOverflowMap & ioArgument_ioOverflowMap,
                                            C_Compiler * inCompiler
                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_uint var_address = constinArgument_inBlockStartAddress ;
  cEnumerator_ipic_31__38_SequentialInstructionList enumerator_6670 (inObject.mAttribute_mInstructionList, kEnumeration_up) ;
  while (enumerator_6670.hasCurrentObject ()) {
    callCategoryMethod_instructionRelativeBranchOverflow ((const cPtr_ipic_31__38_SequentialInstruction *) enumerator_6670.current_mInstruction (HERE).ptr (), var_address, inObject.mAttribute_mLabel.mAttribute_string, constinArgument_inSymbolTable, ioArgument_ioOverflowMap, inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 207)) ;
    var_address = var_address.add_operation (callCategoryReader_instructionSize ((const cPtr_ipic_31__38_SequentialInstruction *) enumerator_6670.current_mInstruction (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 213)), inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 213)) ;
    enumerator_6670.gotoNextObject () ;
  }
  callCategoryMethod_terminatorRelativeBranchOverflow ((const cPtr_ipic_31__38_AbstractBlockTerminator *) inObject.mAttribute_mTerminator.ptr (), var_address, inObject.mAttribute_mLabel.mAttribute_string, constinArgument_inSymbolTable, constinArgument_inNextBlockLabel, ioArgument_ioOverflowMap, inCompiler COMMA_SOURCE_FILE ("ipic18_relatives_resolution.gSemantics", 216)) ;
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


