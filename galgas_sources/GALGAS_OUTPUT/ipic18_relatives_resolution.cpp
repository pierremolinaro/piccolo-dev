//---------------------------------------------------------------------------*
//                                                                           *
//                  File 'ipic18_relatives_resolution.cpp'                   *
//                        Generated by version 2.5.0                         *
//                      august 9th, 2013, at 14h17'0"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "ipic18_relatives_resolution.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "ipic18_relatives_resolution.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'checkRelativeResolution'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkRelativeResolution (const GALGAS_symbolTableForRelativesResolution constinArgument0,
                                      GALGAS_ipic_31__38_BlockList & ioArgument1,
                                      GALGAS_uint & ioArgument2,
                                      GALGAS_string & ioArgument3,
                                      C_Compiler * inCompiler
                                      COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'checkRelativeResolution'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkRelativeResolution (const GALGAS_symbolTableForRelativesResolution constinArgument_inSymbolTable,
                                      GALGAS_ipic_31__38_BlockList & ioArgument_ioBlockList,
                                      GALGAS_uint & ioArgument_ioConversionCount,
                                      GALGAS_string & ioArgument_ioListFileContents,
                                      C_Compiler * inCompiler
                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_ipic_31__38_BlockList var_modifiedBlockList = GALGAS_ipic_31__38_BlockList::constructor_emptyList (SOURCE_FILE_AT_LINE (465)) ;
  GALGAS_uint var_blockStartAddress = GALGAS_uint ((PMUInt32) 0U) ;
  cEnumerator_ipic_31__38_BlockList enumerator_17818 (ioArgument_ioBlockList, kEnumeration_up) ;
  GALGAS_uint index_17812 ((PMUInt32) 0) ;
  while (enumerator_17818.hasCurrentObject ()) {
    GALGAS_string var_nextBlockLabel ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsStrictInf, index_17812.add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (469)).objectCompare (ioArgument_ioBlockList.reader_length (SOURCE_FILE_AT_LINE (469)))).boolEnum () ;
    if (kBoolTrue == test_0) {
      var_nextBlockLabel = ioArgument_ioBlockList.reader_mBlockAtIndex (index_17812.add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (470)), inCompiler COMMA_SOURCE_FILE_AT_LINE (470)).mAttribute_mLabel.mAttribute_string ;
    }else if (kBoolFalse == test_0) {
      var_nextBlockLabel = GALGAS_string::makeEmptyString () ;
    }
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, enumerator_17818.current_mBlock (HERE).mAttribute_mStartAddress.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (474)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_blockStartAddress = enumerator_17818.current_mBlock (HERE).mAttribute_mStartAddress ;
    }
    GALGAS_ipic_31__38_Block var_modifiedBlock ;
    categoryMethod_checkRelativesResolution (enumerator_17818.current_mBlock (HERE), constinArgument_inSymbolTable, var_nextBlockLabel, var_blockStartAddress, ioArgument_ioConversionCount, ioArgument_ioListFileContents, var_modifiedBlock, inCompiler COMMA_SOURCE_FILE_AT_LINE (477)) ;
    var_modifiedBlockList.addAssign_operation (var_modifiedBlock COMMA_SOURCE_FILE_AT_LINE (485)) ;
    GALGAS_uint var_blockSize = categoryReader_blockSize (enumerator_17818.current_mBlock (HERE), var_nextBlockLabel, inCompiler COMMA_SOURCE_FILE_AT_LINE (486)) ;
    var_blockStartAddress = var_blockStartAddress.add_operation (var_blockSize, inCompiler COMMA_SOURCE_FILE_AT_LINE (487)) ;
    enumerator_17818.gotoNextObject () ;
    index_17812.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (467)) ;
  }
  ioArgument_ioBlockList = var_modifiedBlockList ;
}


//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'computeLabelAbsoluteAddressMap'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_computeLabelAbsoluteAddressMap (const GALGAS_ipic_31__38_BlockList constinArgument_inGeneratedBlockList,
                                             GALGAS_symbolTableForRelativesResolution & outArgument_outSymbolTable,
                                             GALGAS_uint & outArgument_outFreeAddress,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSymbolTable.drop () ; // Release 'out' argument
  outArgument_outFreeAddress.drop () ; // Release 'out' argument
  outArgument_outSymbolTable = GALGAS_symbolTableForRelativesResolution::constructor_emptyMap (SOURCE_FILE_AT_LINE (515)) ;
  GALGAS_uint var_blockStartAddress = GALGAS_uint ((PMUInt32) 0U) ;
  cEnumerator_ipic_31__38_BlockList enumerator_19447 (constinArgument_inGeneratedBlockList, kEnumeration_up) ;
  GALGAS_uint index_19441 ((PMUInt32) 0) ;
  while (enumerator_19447.hasCurrentObject ()) {
    GALGAS_string var_nextBlockLabel ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsStrictInf, index_19441.add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (519)).objectCompare (constinArgument_inGeneratedBlockList.reader_length (SOURCE_FILE_AT_LINE (519)))).boolEnum () ;
    if (kBoolTrue == test_0) {
      var_nextBlockLabel = constinArgument_inGeneratedBlockList.reader_mBlockAtIndex (index_19441.add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (520)), inCompiler COMMA_SOURCE_FILE_AT_LINE (520)).mAttribute_mLabel.mAttribute_string ;
    }else if (kBoolFalse == test_0) {
      var_nextBlockLabel = GALGAS_string::makeEmptyString () ;
    }
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, enumerator_19447.current_mBlock (HERE).mAttribute_mStartAddress.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (524)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_blockStartAddress = enumerator_19447.current_mBlock (HERE).mAttribute_mStartAddress ;
    }
    {
    outArgument_outSymbolTable.modifier_insertKey (enumerator_19447.current_mBlock (HERE).mAttribute_mLabel, var_blockStartAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (527)) ;
    }
    GALGAS_uint var_blockSize = categoryReader_blockSize (enumerator_19447.current_mBlock (HERE), var_nextBlockLabel, inCompiler COMMA_SOURCE_FILE_AT_LINE (528)) ;
    var_blockStartAddress = var_blockStartAddress.add_operation (var_blockSize, inCompiler COMMA_SOURCE_FILE_AT_LINE (529)) ;
    enumerator_19447.gotoNextObject () ;
    index_19441.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (517)) ;
  }
  outArgument_outFreeAddress = var_blockStartAddress ;
}


//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'ipic18RelativesResolution'                    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_ipic_31__38_RelativesResolution (GALGAS_string & ioArgument_ioListFileContents,
                                              GALGAS_ipic_31__38_BlockList & ioArgument_ioGeneratedBlockList,
                                              C_Compiler * inCompiler
                                              COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->printMessage (GALGAS_string ("Relative branch conversion to absolute:\n") COMMA_SOURCE_FILE_AT_LINE (542)) ;
  }
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string::makeEmptyString ().reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (544)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (544)) COMMA_SOURCE_FILE_AT_LINE (544)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*").operator_concat (GALGAS_string ("RELATIVES RESOLUTION").reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 77U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (545)) COMMA_SOURCE_FILE_AT_LINE (545)).operator_concat (GALGAS_string ("*\n") COMMA_SOURCE_FILE_AT_LINE (545)) COMMA_SOURCE_FILE_AT_LINE (545)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string::makeEmptyString ().reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (546)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (546)) COMMA_SOURCE_FILE_AT_LINE (546)) ;
  GALGAS_bool var_resolutionDone = GALGAS_bool (false) ;
  GALGAS_uint var_pass = GALGAS_uint ((PMUInt32) 0U) ;
  if (ioArgument_ioGeneratedBlockList.reader_length (SOURCE_FILE_AT_LINE (550)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (550)).isValid ()) {
    PMUInt32 variant_20710 = ioArgument_ioGeneratedBlockList.reader_length (SOURCE_FILE_AT_LINE (550)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (550)).uintValue () ;
    bool loop_20710 = true ;
    while (loop_20710) {
      loop_20710 = var_resolutionDone.operator_not (SOURCE_FILE_AT_LINE (551)).operator_and (GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (551)).objectCompare (GALGAS_uint ((PMUInt32) 0U))) COMMA_SOURCE_FILE_AT_LINE (551)).isValid () ;
      if (loop_20710) {
        loop_20710 = var_resolutionDone.operator_not (SOURCE_FILE_AT_LINE (551)).operator_and (GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (551)).objectCompare (GALGAS_uint ((PMUInt32) 0U))) COMMA_SOURCE_FILE_AT_LINE (551)).boolValue () ;
      }
      if (loop_20710 && (0 == variant_20710)) {
        loop_20710 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (550)) ;
      }
      if (loop_20710) {
        variant_20710 -- ;
        var_pass.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (552)) ;
        GALGAS_symbolTableForRelativesResolution var_symbolTable ;
        {
        GALGAS_uint joker_20945_0 ; // Joker input parameter
        routine_computeLabelAbsoluteAddressMap (ioArgument_ioGeneratedBlockList, var_symbolTable, joker_20945_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (553)) ;
        }
        ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("\n"
          "Pass ").operator_concat (var_pass.reader_string (SOURCE_FILE_AT_LINE (558)) COMMA_SOURCE_FILE_AT_LINE (558)).operator_concat (GALGAS_string (":\n") COMMA_SOURCE_FILE_AT_LINE (558)) COMMA_SOURCE_FILE_AT_LINE (558)) ;
        GALGAS_uint var_conversionCount = GALGAS_uint ((PMUInt32) 0U) ;
        {
        routine_checkRelativeResolution (var_symbolTable, ioArgument_ioGeneratedBlockList, var_conversionCount, ioArgument_ioListFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (560)) ;
        }
        var_resolutionDone = GALGAS_bool (kIsEqual, var_conversionCount.objectCompare (GALGAS_uint ((PMUInt32) 0U))) ;
        const enumGalgasBool test_1 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
        if (kBoolTrue == test_1) {
          GALGAS_string var_s = GALGAS_string ("--- Pass ").operator_concat (var_pass.reader_string (SOURCE_FILE_AT_LINE (568)) COMMA_SOURCE_FILE_AT_LINE (568)).operator_concat (GALGAS_string (": ") COMMA_SOURCE_FILE_AT_LINE (568)) ;
          const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_conversionCount.objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
          if (kBoolTrue == test_2) {
            var_s.dotAssign_operation (GALGAS_string ("none.") COMMA_SOURCE_FILE_AT_LINE (570)) ;
          }else if (kBoolFalse == test_2) {
            const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, var_conversionCount.objectCompare (GALGAS_uint ((PMUInt32) 1U))).boolEnum () ;
            if (kBoolTrue == test_3) {
              var_s.dotAssign_operation (GALGAS_string ("1 conversion") COMMA_SOURCE_FILE_AT_LINE (572)) ;
            }else if (kBoolFalse == test_3) {
              var_s.dotAssign_operation (var_conversionCount.reader_string (SOURCE_FILE_AT_LINE (574)).operator_concat (GALGAS_string (" conversions") COMMA_SOURCE_FILE_AT_LINE (574)) COMMA_SOURCE_FILE_AT_LINE (574)) ;
            }
          }
          inCompiler->printMessage (var_s.operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (576)) COMMA_SOURCE_FILE_AT_LINE (576)) ;
        }
      }
    }
  }
  const enumGalgasBool test_4 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_4) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  No conversion.\n"
      "\n") COMMA_SOURCE_FILE_AT_LINE (580)) ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@ipic18AbstractBlockTerminator checkRelativesResolution' *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_ipic_31__38_AbstractBlockTerminator_checkRelativesResolution> gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_checkRelativesResolution ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_checkRelativesResolution (const PMSInt32 inClassIndex,
                                                   categoryMethodSignature_ipic_31__38_AbstractBlockTerminator_checkRelativesResolution inMethod) {
  gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_checkRelativesResolution.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void callCategoryMethod_checkRelativesResolution (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                  const GALGAS_uint constin_inAddress,
                                                  const GALGAS_string constin_inBlockLabel,
                                                  const GALGAS_symbolTableForRelativesResolution constin_inSymbolTable,
                                                  const GALGAS_string constin_inNextBlockLabel,
                                                  GALGAS_uint & io_ioConversionCount,
                                                  GALGAS_string & io_ioListFileContents,
                                                  GALGAS_ipic_31__38_AbstractBlockTerminator & out_outModifiedTerminator,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  out_outModifiedTerminator.drop () ;
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_ipic_31__38_AbstractBlockTerminator) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_ipic_31__38_AbstractBlockTerminator_checkRelativesResolution f = NULL ;
    if (classIndex < gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_checkRelativesResolution.count ()) {
      f = gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_checkRelativesResolution (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_checkRelativesResolution.count ()) {
           f = gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_checkRelativesResolution (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_checkRelativesResolution.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAddress, constin_inBlockLabel, constin_inSymbolTable, constin_inNextBlockLabel, io_ioConversionCount, io_ioListFileContents, out_outModifiedTerminator, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_AbstractBlockTerminator_checkRelativesResolution (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                                         const GALGAS_uint /* constinArgument_inAddress */,
                                                                                         const GALGAS_string /* constinArgument_inBlockLabel */,
                                                                                         const GALGAS_symbolTableForRelativesResolution /* constinArgument_inSymbolTable */,
                                                                                         const GALGAS_string /* constinArgument_inNextBlockLabel */,
                                                                                         GALGAS_uint & /* ioArgument_ioConversionCount */,
                                                                                         GALGAS_string & /* ioArgument_ioListFileContents */,
                                                                                         GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outModifiedTerminator,
                                                                                         C_Compiler * /* inCompiler */
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38_AbstractBlockTerminator * object = inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38_AbstractBlockTerminator) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_ipic_31__38_AbstractBlockTerminator temp_0 = object ;
  outArgument_outModifiedTerminator = temp_0 ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_AbstractBlockTerminator_checkRelativesResolution (void) {
  enterCategoryMethod_checkRelativesResolution (kTypeDescriptor_GALGAS_ipic_31__38_AbstractBlockTerminator.mSlotID,
                                                categoryMethod_ipic_31__38_AbstractBlockTerminator_checkRelativesResolution) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_ipic_31__38_AbstractBlockTerminator_checkRelativesResolution (void) {
  gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_checkRelativesResolution.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_AbstractBlockTerminator_checkRelativesResolution (defineCategoryMethod_ipic_31__38_AbstractBlockTerminator_checkRelativesResolution,
                                                                                         freeCategoryMethod_ipic_31__38_AbstractBlockTerminator_checkRelativesResolution) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18JumpTerminator checkRelativesResolution'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_JumpTerminator_checkRelativesResolution (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                                const GALGAS_uint constinArgument_inAddress,
                                                                                const GALGAS_string constinArgument_inBlockLabel,
                                                                                const GALGAS_symbolTableForRelativesResolution constinArgument_inSymbolTable,
                                                                                const GALGAS_string constinArgument_inNextBlockLabel,
                                                                                GALGAS_uint & ioArgument_ioConversionCount,
                                                                                GALGAS_string & ioArgument_ioListFileContents,
                                                                                GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outModifiedTerminator,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38_JumpTerminator * object = (const cPtr_ipic_31__38_JumpTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38_JumpTerminator) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_ipic_31__38_JumpTerminator temp_0 = object ;
  outArgument_outModifiedTerminator = temp_0 ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, constinArgument_inNextBlockLabel.objectCompare (object->mAttribute_mLabel.mAttribute_string)).boolEnum () ;
  if (kBoolTrue == test_1) {
    if (object->mAttribute_mKind.isValid ()) {
      switch (object->mAttribute_mKind.enumValue ()) {
      case GALGAS_jumpInstructionKind::kNotBuilt:
        break ;
      case GALGAS_jumpInstructionKind::kEnum_ipicRelative: {
        const enumGalgasBool test_2 = function_pic_31__38__5F_checkBRA_5F_RCALL (constinArgument_inSymbolTable, object->mAttribute_mLabel, constinArgument_inAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (38)).operator_not (SOURCE_FILE_AT_LINE (38)).boolEnum () ;
        if (kBoolTrue == test_2) {
          ioArgument_ioConversionCount.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (39)) ;
          ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ").operator_concat (constinArgument_inBlockLabel COMMA_SOURCE_FILE_AT_LINE (40)).operator_concat (GALGAS_string (": JUMP ") COMMA_SOURCE_FILE_AT_LINE (40)).operator_concat (object->mAttribute_mLabel.reader_string (SOURCE_FILE_AT_LINE (40)) COMMA_SOURCE_FILE_AT_LINE (40)).operator_concat (GALGAS_string (" --> GOTO ") COMMA_SOURCE_FILE_AT_LINE (40)).operator_concat (object->mAttribute_mLabel.reader_string (SOURCE_FILE_AT_LINE (40)) COMMA_SOURCE_FILE_AT_LINE (40)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (40)) COMMA_SOURCE_FILE_AT_LINE (40)) ;
          outArgument_outModifiedTerminator = GALGAS_ipic_31__38_JumpTerminator::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mLabel, GALGAS_jumpInstructionKind::constructor_absolute (SOURCE_FILE_AT_LINE (41)) COMMA_SOURCE_FILE_AT_LINE (41)) ;
        }
        } break ;
      case GALGAS_jumpInstructionKind::kEnum_relative: {
        const enumGalgasBool test_3 = function_pic_31__38__5F_checkBRA_5F_RCALL (constinArgument_inSymbolTable, object->mAttribute_mLabel, constinArgument_inAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (44)).operator_not (SOURCE_FILE_AT_LINE (44)).boolEnum () ;
        if (kBoolTrue == test_3) {
          inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("displacement (").operator_concat (function_pic_31__38__5F_BRA_5F_RCALL_5F_displacement (constinArgument_inSymbolTable, object->mAttribute_mLabel, constinArgument_inAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (46)).reader_string (SOURCE_FILE_AT_LINE (46)) COMMA_SOURCE_FILE_AT_LINE (46)).operator_concat (GALGAS_string (") too large for BRA ") COMMA_SOURCE_FILE_AT_LINE (46)).operator_concat (object->mAttribute_mLabel.reader_string (SOURCE_FILE_AT_LINE (47)) COMMA_SOURCE_FILE_AT_LINE (47)).operator_concat (GALGAS_string (" instruction (limited to [-1024, 1023])") COMMA_SOURCE_FILE_AT_LINE (47)) COMMA_SOURCE_FILE_AT_LINE (45)) ;
        }
        } break ;
      case GALGAS_jumpInstructionKind::kEnum_absolute: {
        } break ;
      }
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_JumpTerminator_checkRelativesResolution (void) {
  enterCategoryMethod_checkRelativesResolution (kTypeDescriptor_GALGAS_ipic_31__38_JumpTerminator.mSlotID,
                                                categoryMethod_ipic_31__38_JumpTerminator_checkRelativesResolution) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_JumpTerminator_checkRelativesResolution (defineCategoryMethod_ipic_31__38_JumpTerminator_checkRelativesResolution, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18ConditionalJumpTerminator checkRelativesResolution'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_ConditionalJumpTerminator_checkRelativesResolution (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                                           const GALGAS_uint constinArgument_inAddress,
                                                                                           const GALGAS_string constinArgument_inBlockLabel,
                                                                                           const GALGAS_symbolTableForRelativesResolution constinArgument_inSymbolTable,
                                                                                           const GALGAS_string constinArgument_inNextBlockLabel,
                                                                                           GALGAS_uint & ioArgument_ioConversionCount,
                                                                                           GALGAS_string & ioArgument_ioListFileContents,
                                                                                           GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outModifiedTerminator,
                                                                                           C_Compiler * inCompiler
                                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38_ConditionalJumpTerminator * object = (const cPtr_ipic_31__38_ConditionalJumpTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38_ConditionalJumpTerminator) ;
  GALGAS_conditionalBranchMode var_branchModeOnFalseLabel = object->mAttribute_mBranchModeOnFalseLabel ;
  GALGAS_conditionalBranchMode var_branchModeOnTrueLabel = object->mAttribute_mBranchModeOnTrueLabel ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mTargetLabelWhenTrue.mAttribute_string.objectCompare (constinArgument_inNextBlockLabel)).boolEnum () ;
  if (kBoolTrue == test_0) {
    if (object->mAttribute_mBranchModeOnFalseLabel.isValid ()) {
      switch (object->mAttribute_mBranchModeOnFalseLabel.enumValue ()) {
      case GALGAS_conditionalBranchMode::kNotBuilt:
        break ;
      case GALGAS_conditionalBranchMode::kEnum_native: {
        const enumGalgasBool test_1 = function_pic_31__38__5F_checkBCC (constinArgument_inSymbolTable, object->mAttribute_mTargetLabelWhenFalse, constinArgument_inAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (70)).operator_not (SOURCE_FILE_AT_LINE (70)).boolEnum () ;
        if (kBoolTrue == test_1) {
          var_branchModeOnFalseLabel = GALGAS_conditionalBranchMode::constructor_ipicBRA (SOURCE_FILE_AT_LINE (71)) ;
          ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ").operator_concat (constinArgument_inBlockLabel COMMA_SOURCE_FILE_AT_LINE (72)).operator_concat (GALGAS_string (", terminator will use BRA ") COMMA_SOURCE_FILE_AT_LINE (72)).operator_concat (object->mAttribute_mTargetLabelWhenFalse.reader_string (SOURCE_FILE_AT_LINE (72)) COMMA_SOURCE_FILE_AT_LINE (72)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (72)) COMMA_SOURCE_FILE_AT_LINE (72)) ;
        }
        } break ;
      case GALGAS_conditionalBranchMode::kEnum_ipicBRA: {
        const enumGalgasBool test_2 = function_pic_31__38__5F_checkBRA_5F_RCALL (constinArgument_inSymbolTable, object->mAttribute_mTargetLabelWhenFalse, constinArgument_inAddress.add_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (75)), inCompiler COMMA_SOURCE_FILE_AT_LINE (75)).operator_not (SOURCE_FILE_AT_LINE (75)).boolEnum () ;
        if (kBoolTrue == test_2) {
          var_branchModeOnFalseLabel = GALGAS_conditionalBranchMode::constructor_ipicGOTO (SOURCE_FILE_AT_LINE (76)) ;
          ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ").operator_concat (constinArgument_inBlockLabel COMMA_SOURCE_FILE_AT_LINE (77)).operator_concat (GALGAS_string (", terminator will use GOTO ") COMMA_SOURCE_FILE_AT_LINE (77)).operator_concat (object->mAttribute_mTargetLabelWhenFalse.reader_string (SOURCE_FILE_AT_LINE (77)) COMMA_SOURCE_FILE_AT_LINE (77)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (77)) COMMA_SOURCE_FILE_AT_LINE (77)) ;
        }
        } break ;
      case GALGAS_conditionalBranchMode::kEnum_ipicGOTO: {
        } break ;
      }
    }
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, object->mAttribute_mTargetLabelWhenFalse.mAttribute_string.objectCompare (constinArgument_inNextBlockLabel)).boolEnum () ;
    if (kBoolTrue == test_3) {
      if (object->mAttribute_mBranchModeOnTrueLabel.isValid ()) {
        switch (object->mAttribute_mBranchModeOnTrueLabel.enumValue ()) {
        case GALGAS_conditionalBranchMode::kNotBuilt:
          break ;
        case GALGAS_conditionalBranchMode::kEnum_native: {
          const enumGalgasBool test_4 = function_pic_31__38__5F_checkBCC (constinArgument_inSymbolTable, object->mAttribute_mTargetLabelWhenTrue, constinArgument_inAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (84)).operator_not (SOURCE_FILE_AT_LINE (84)).boolEnum () ;
          if (kBoolTrue == test_4) {
            var_branchModeOnTrueLabel = GALGAS_conditionalBranchMode::constructor_ipicBRA (SOURCE_FILE_AT_LINE (85)) ;
            ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ").operator_concat (constinArgument_inBlockLabel COMMA_SOURCE_FILE_AT_LINE (86)).operator_concat (GALGAS_string (", terminator will use BRA ") COMMA_SOURCE_FILE_AT_LINE (86)).operator_concat (object->mAttribute_mTargetLabelWhenFalse.reader_string (SOURCE_FILE_AT_LINE (86)) COMMA_SOURCE_FILE_AT_LINE (86)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (86)) COMMA_SOURCE_FILE_AT_LINE (86)) ;
          }
          } break ;
        case GALGAS_conditionalBranchMode::kEnum_ipicBRA: {
          const enumGalgasBool test_5 = function_pic_31__38__5F_checkBRA_5F_RCALL (constinArgument_inSymbolTable, object->mAttribute_mTargetLabelWhenTrue, constinArgument_inAddress.add_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (89)), inCompiler COMMA_SOURCE_FILE_AT_LINE (89)).operator_not (SOURCE_FILE_AT_LINE (89)).boolEnum () ;
          if (kBoolTrue == test_5) {
            var_branchModeOnTrueLabel = GALGAS_conditionalBranchMode::constructor_ipicGOTO (SOURCE_FILE_AT_LINE (90)) ;
            ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ").operator_concat (constinArgument_inBlockLabel COMMA_SOURCE_FILE_AT_LINE (91)).operator_concat (GALGAS_string (", terminator will use GOTO ") COMMA_SOURCE_FILE_AT_LINE (91)).operator_concat (object->mAttribute_mTargetLabelWhenTrue.reader_string (SOURCE_FILE_AT_LINE (91)) COMMA_SOURCE_FILE_AT_LINE (91)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (91)) COMMA_SOURCE_FILE_AT_LINE (91)) ;
          }
          } break ;
        case GALGAS_conditionalBranchMode::kEnum_ipicGOTO: {
          } break ;
        }
      }
    }else if (kBoolFalse == test_3) {
      if (object->mAttribute_mBranchModeOnFalseLabel.isValid ()) {
        switch (object->mAttribute_mBranchModeOnFalseLabel.enumValue ()) {
        case GALGAS_conditionalBranchMode::kNotBuilt:
          break ;
        case GALGAS_conditionalBranchMode::kEnum_native: {
          if (object->mAttribute_mBranchModeOnTrueLabel.isValid ()) {
            switch (object->mAttribute_mBranchModeOnTrueLabel.enumValue ()) {
            case GALGAS_conditionalBranchMode::kNotBuilt:
              break ;
            case GALGAS_conditionalBranchMode::kEnum_native: case GALGAS_conditionalBranchMode::kEnum_ipicBRA: {
              const enumGalgasBool test_6 = function_pic_31__38__5F_checkBCC (constinArgument_inSymbolTable, object->mAttribute_mTargetLabelWhenFalse, constinArgument_inAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (100)).operator_not (SOURCE_FILE_AT_LINE (100)).boolEnum () ;
              if (kBoolTrue == test_6) {
                var_branchModeOnFalseLabel = GALGAS_conditionalBranchMode::constructor_ipicBRA (SOURCE_FILE_AT_LINE (101)) ;
                ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ").operator_concat (constinArgument_inBlockLabel COMMA_SOURCE_FILE_AT_LINE (102)).operator_concat (GALGAS_string (", terminator will use BRA ") COMMA_SOURCE_FILE_AT_LINE (102)).operator_concat (object->mAttribute_mTargetLabelWhenFalse.reader_string (SOURCE_FILE_AT_LINE (102)) COMMA_SOURCE_FILE_AT_LINE (102)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (102)) COMMA_SOURCE_FILE_AT_LINE (102)) ;
              }
              const enumGalgasBool test_7 = function_pic_31__38__5F_checkBRA_5F_RCALL (constinArgument_inSymbolTable, object->mAttribute_mTargetLabelWhenTrue, constinArgument_inAddress.add_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (104)), inCompiler COMMA_SOURCE_FILE_AT_LINE (104)).operator_not (SOURCE_FILE_AT_LINE (104)).boolEnum () ;
              if (kBoolTrue == test_7) {
                var_branchModeOnTrueLabel = GALGAS_conditionalBranchMode::constructor_ipicBRA (SOURCE_FILE_AT_LINE (105)) ;
                ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ").operator_concat (constinArgument_inBlockLabel COMMA_SOURCE_FILE_AT_LINE (106)).operator_concat (GALGAS_string (", terminator will use BRA ") COMMA_SOURCE_FILE_AT_LINE (106)).operator_concat (object->mAttribute_mTargetLabelWhenTrue.reader_string (SOURCE_FILE_AT_LINE (106)) COMMA_SOURCE_FILE_AT_LINE (106)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (106)) COMMA_SOURCE_FILE_AT_LINE (106)) ;
              }
              } break ;
            case GALGAS_conditionalBranchMode::kEnum_ipicGOTO: {
              } break ;
            }
          }
          } break ;
        case GALGAS_conditionalBranchMode::kEnum_ipicBRA: {
          if (object->mAttribute_mBranchModeOnTrueLabel.isValid ()) {
            switch (object->mAttribute_mBranchModeOnTrueLabel.enumValue ()) {
            case GALGAS_conditionalBranchMode::kNotBuilt:
              break ;
            case GALGAS_conditionalBranchMode::kEnum_native: {
              const enumGalgasBool test_8 = function_pic_31__38__5F_checkBCC (constinArgument_inSymbolTable, object->mAttribute_mTargetLabelWhenTrue, constinArgument_inAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (113)).operator_not (SOURCE_FILE_AT_LINE (113)).boolEnum () ;
              if (kBoolTrue == test_8) {
                var_branchModeOnTrueLabel = GALGAS_conditionalBranchMode::constructor_ipicBRA (SOURCE_FILE_AT_LINE (114)) ;
                ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ").operator_concat (constinArgument_inBlockLabel COMMA_SOURCE_FILE_AT_LINE (115)).operator_concat (GALGAS_string (", terminator will use BRA ") COMMA_SOURCE_FILE_AT_LINE (115)).operator_concat (object->mAttribute_mTargetLabelWhenTrue.reader_string (SOURCE_FILE_AT_LINE (115)) COMMA_SOURCE_FILE_AT_LINE (115)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (115)) COMMA_SOURCE_FILE_AT_LINE (115)) ;
              }
              const enumGalgasBool test_9 = function_pic_31__38__5F_checkBRA_5F_RCALL (constinArgument_inSymbolTable, object->mAttribute_mTargetLabelWhenFalse, constinArgument_inAddress.add_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (117)), inCompiler COMMA_SOURCE_FILE_AT_LINE (117)).operator_not (SOURCE_FILE_AT_LINE (117)).boolEnum () ;
              if (kBoolTrue == test_9) {
                var_branchModeOnFalseLabel = GALGAS_conditionalBranchMode::constructor_ipicBRA (SOURCE_FILE_AT_LINE (118)) ;
                ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ").operator_concat (constinArgument_inBlockLabel COMMA_SOURCE_FILE_AT_LINE (119)).operator_concat (GALGAS_string (", terminator will use BRA ") COMMA_SOURCE_FILE_AT_LINE (119)).operator_concat (object->mAttribute_mTargetLabelWhenFalse.reader_string (SOURCE_FILE_AT_LINE (119)) COMMA_SOURCE_FILE_AT_LINE (119)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (119)) COMMA_SOURCE_FILE_AT_LINE (119)) ;
              }
              } break ;
            case GALGAS_conditionalBranchMode::kEnum_ipicBRA: {
              const enumGalgasBool test_10 = function_pic_31__38__5F_checkBRA_5F_RCALL (constinArgument_inSymbolTable, object->mAttribute_mTargetLabelWhenFalse, constinArgument_inAddress.add_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (122)), inCompiler COMMA_SOURCE_FILE_AT_LINE (122)).operator_not (SOURCE_FILE_AT_LINE (122)).boolEnum () ;
              if (kBoolTrue == test_10) {
                var_branchModeOnFalseLabel = GALGAS_conditionalBranchMode::constructor_ipicBRA (SOURCE_FILE_AT_LINE (123)) ;
                ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ").operator_concat (constinArgument_inBlockLabel COMMA_SOURCE_FILE_AT_LINE (124)).operator_concat (GALGAS_string (", terminator will use BRA ") COMMA_SOURCE_FILE_AT_LINE (124)).operator_concat (object->mAttribute_mTargetLabelWhenFalse.reader_string (SOURCE_FILE_AT_LINE (124)) COMMA_SOURCE_FILE_AT_LINE (124)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (124)) COMMA_SOURCE_FILE_AT_LINE (124)) ;
              }
              const enumGalgasBool test_11 = function_pic_31__38__5F_checkBRA_5F_RCALL (constinArgument_inSymbolTable, object->mAttribute_mTargetLabelWhenTrue, constinArgument_inAddress.add_operation (GALGAS_uint ((PMUInt32) 4U), inCompiler COMMA_SOURCE_FILE_AT_LINE (126)), inCompiler COMMA_SOURCE_FILE_AT_LINE (126)).operator_not (SOURCE_FILE_AT_LINE (126)).boolEnum () ;
              if (kBoolTrue == test_11) {
                var_branchModeOnTrueLabel = GALGAS_conditionalBranchMode::constructor_ipicBRA (SOURCE_FILE_AT_LINE (127)) ;
                ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ").operator_concat (constinArgument_inBlockLabel COMMA_SOURCE_FILE_AT_LINE (128)).operator_concat (GALGAS_string (", terminator will use BRA ") COMMA_SOURCE_FILE_AT_LINE (128)).operator_concat (object->mAttribute_mTargetLabelWhenTrue.reader_string (SOURCE_FILE_AT_LINE (128)) COMMA_SOURCE_FILE_AT_LINE (128)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (128)) COMMA_SOURCE_FILE_AT_LINE (128)) ;
              }
              } break ;
            case GALGAS_conditionalBranchMode::kEnum_ipicGOTO: {
              const enumGalgasBool test_12 = function_pic_31__38__5F_checkBRA_5F_RCALL (constinArgument_inSymbolTable, object->mAttribute_mTargetLabelWhenFalse, constinArgument_inAddress.add_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (131)), inCompiler COMMA_SOURCE_FILE_AT_LINE (131)).operator_not (SOURCE_FILE_AT_LINE (131)).boolEnum () ;
              if (kBoolTrue == test_12) {
                var_branchModeOnFalseLabel = GALGAS_conditionalBranchMode::constructor_ipicBRA (SOURCE_FILE_AT_LINE (132)) ;
                ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ").operator_concat (constinArgument_inBlockLabel COMMA_SOURCE_FILE_AT_LINE (133)).operator_concat (GALGAS_string (", terminator will use BRA ") COMMA_SOURCE_FILE_AT_LINE (133)).operator_concat (object->mAttribute_mTargetLabelWhenFalse.reader_string (SOURCE_FILE_AT_LINE (133)) COMMA_SOURCE_FILE_AT_LINE (133)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (133)) COMMA_SOURCE_FILE_AT_LINE (133)) ;
              }
              } break ;
            }
          }
          } break ;
        case GALGAS_conditionalBranchMode::kEnum_ipicGOTO: {
          if (object->mAttribute_mBranchModeOnTrueLabel.isValid ()) {
            switch (object->mAttribute_mBranchModeOnTrueLabel.enumValue ()) {
            case GALGAS_conditionalBranchMode::kNotBuilt:
              break ;
            case GALGAS_conditionalBranchMode::kEnum_native: {
              const enumGalgasBool test_13 = function_pic_31__38__5F_checkBCC (constinArgument_inSymbolTable, object->mAttribute_mTargetLabelWhenTrue, constinArgument_inAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (139)).operator_not (SOURCE_FILE_AT_LINE (139)).boolEnum () ;
              if (kBoolTrue == test_13) {
                var_branchModeOnTrueLabel = GALGAS_conditionalBranchMode::constructor_ipicBRA (SOURCE_FILE_AT_LINE (140)) ;
                ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ").operator_concat (constinArgument_inBlockLabel COMMA_SOURCE_FILE_AT_LINE (141)).operator_concat (GALGAS_string (", terminator will use BRA ") COMMA_SOURCE_FILE_AT_LINE (141)).operator_concat (object->mAttribute_mTargetLabelWhenTrue.reader_string (SOURCE_FILE_AT_LINE (141)) COMMA_SOURCE_FILE_AT_LINE (141)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (141)) COMMA_SOURCE_FILE_AT_LINE (141)) ;
              }
              } break ;
            case GALGAS_conditionalBranchMode::kEnum_ipicBRA: {
              const enumGalgasBool test_14 = function_pic_31__38__5F_checkBRA_5F_RCALL (constinArgument_inSymbolTable, object->mAttribute_mTargetLabelWhenTrue, constinArgument_inAddress.add_operation (GALGAS_uint ((PMUInt32) 6U), inCompiler COMMA_SOURCE_FILE_AT_LINE (144)), inCompiler COMMA_SOURCE_FILE_AT_LINE (144)).operator_not (SOURCE_FILE_AT_LINE (144)).boolEnum () ;
              if (kBoolTrue == test_14) {
                var_branchModeOnTrueLabel = GALGAS_conditionalBranchMode::constructor_ipicBRA (SOURCE_FILE_AT_LINE (145)) ;
                ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ").operator_concat (constinArgument_inBlockLabel COMMA_SOURCE_FILE_AT_LINE (146)).operator_concat (GALGAS_string (", terminator will use BRA ") COMMA_SOURCE_FILE_AT_LINE (146)).operator_concat (object->mAttribute_mTargetLabelWhenTrue.reader_string (SOURCE_FILE_AT_LINE (146)) COMMA_SOURCE_FILE_AT_LINE (146)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (146)) COMMA_SOURCE_FILE_AT_LINE (146)) ;
              }
              } break ;
            case GALGAS_conditionalBranchMode::kEnum_ipicGOTO: {
              } break ;
            }
          }
          } break ;
        }
      }
    }
  }
  const enumGalgasBool test_15 = GALGAS_bool (kIsEqual, var_branchModeOnFalseLabel.objectCompare (object->mAttribute_mBranchModeOnFalseLabel)).operator_and (GALGAS_bool (kIsEqual, var_branchModeOnTrueLabel.objectCompare (object->mAttribute_mBranchModeOnTrueLabel)) COMMA_SOURCE_FILE_AT_LINE (152)).boolEnum () ;
  if (kBoolTrue == test_15) {
    //--- @selfCopyInExpressionForGeneration
    const GALGAS_ipic_31__38_ConditionalJumpTerminator temp_16 = object ;
    outArgument_outModifiedTerminator = temp_16 ;
  }else if (kBoolFalse == test_15) {
    outArgument_outModifiedTerminator = GALGAS_ipic_31__38_ConditionalJumpTerminator::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mConditionalBranch, object->mAttribute_mTargetLabelWhenTrue, var_branchModeOnTrueLabel, object->mAttribute_mTargetLabelWhenFalse, var_branchModeOnFalseLabel COMMA_SOURCE_FILE_AT_LINE (155)) ;
    ioArgument_ioConversionCount.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (163)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_ConditionalJumpTerminator_checkRelativesResolution (void) {
  enterCategoryMethod_checkRelativesResolution (kTypeDescriptor_GALGAS_ipic_31__38_ConditionalJumpTerminator.mSlotID,
                                                categoryMethod_ipic_31__38_ConditionalJumpTerminator_checkRelativesResolution) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_ConditionalJumpTerminator_checkRelativesResolution (defineCategoryMethod_ipic_31__38_ConditionalJumpTerminator_checkRelativesResolution, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18ComputedRETLWTerminator checkRelativesResolution'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_ComputedRETLWTerminator_checkRelativesResolution (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                                         const GALGAS_uint constinArgument_inAddress,
                                                                                         const GALGAS_string constinArgument_inBlockLabel,
                                                                                         const GALGAS_symbolTableForRelativesResolution constinArgument_inSymbolTable,
                                                                                         const GALGAS_string /* constinArgument_inNextBlockLabel */,
                                                                                         GALGAS_uint & ioArgument_ioConversionCount,
                                                                                         GALGAS_string & ioArgument_ioListFileContents,
                                                                                         GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outModifiedTerminator,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38_ComputedRETLWTerminator * object = (const cPtr_ipic_31__38_ComputedRETLWTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38_ComputedRETLWTerminator) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_ipic_31__38_ComputedRETLWTerminator temp_0 = object ;
  outArgument_outModifiedTerminator = temp_0 ;
  const enumGalgasBool test_1 = object->mAttribute_mUsesRCALL.boolEnum () ;
  if (kBoolTrue == test_1) {
    const enumGalgasBool test_2 = function_pic_31__38__5F_checkBRA_5F_RCALL (constinArgument_inSymbolTable, GALGAS_string ("_computed_goto_2").reader_nowhere (SOURCE_FILE_AT_LINE (180)), constinArgument_inAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (180)).operator_not (SOURCE_FILE_AT_LINE (180)).boolEnum () ;
    if (kBoolTrue == test_2) {
      ioArgument_ioConversionCount.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (181)) ;
      ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ").operator_concat (constinArgument_inBlockLabel COMMA_SOURCE_FILE_AT_LINE (182)).operator_concat (GALGAS_string (": computed RETLW needs CALL _computed_goto_2\n") COMMA_SOURCE_FILE_AT_LINE (182)) COMMA_SOURCE_FILE_AT_LINE (182)) ;
      outArgument_outModifiedTerminator = GALGAS_ipic_31__38_ComputedRETLWTerminator::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mLiteralValues, GALGAS_bool (false) COMMA_SOURCE_FILE_AT_LINE (183)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_ComputedRETLWTerminator_checkRelativesResolution (void) {
  enterCategoryMethod_checkRelativesResolution (kTypeDescriptor_GALGAS_ipic_31__38_ComputedRETLWTerminator.mSlotID,
                                                categoryMethod_ipic_31__38_ComputedRETLWTerminator_checkRelativesResolution) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_ComputedRETLWTerminator_checkRelativesResolution (defineCategoryMethod_ipic_31__38_ComputedRETLWTerminator_checkRelativesResolution, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18ComputedBraTerminator checkRelativesResolution'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_ComputedBraTerminator_checkRelativesResolution (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                                       const GALGAS_uint constinArgument_inAddress,
                                                                                       const GALGAS_string constinArgument_inBlockLabel,
                                                                                       const GALGAS_symbolTableForRelativesResolution constinArgument_inSymbolTable,
                                                                                       const GALGAS_string /* constinArgument_inNextBlockLabel */,
                                                                                       GALGAS_uint & ioArgument_ioConversionCount,
                                                                                       GALGAS_string & ioArgument_ioListFileContents,
                                                                                       GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outModifiedTerminator,
                                                                                       C_Compiler * inCompiler
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38_ComputedBraTerminator * object = (const cPtr_ipic_31__38_ComputedBraTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38_ComputedBraTerminator) ;
  cEnumerator_lstringlist enumerator_9162 (object->mAttribute_mTargetLabels, kEnumeration_up) ;
  while (enumerator_9162.hasCurrentObject ()) {
    const enumGalgasBool test_0 = function_pic_31__38__5F_checkBRA_5F_RCALL (constinArgument_inSymbolTable, enumerator_9162.current_mValue (HERE), constinArgument_inAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (200)).operator_not (SOURCE_FILE_AT_LINE (200)).boolEnum () ;
    if (kBoolTrue == test_0) {
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("displacement (").operator_concat (function_pic_31__38__5F_BRA_5F_RCALL_5F_displacement (constinArgument_inSymbolTable, enumerator_9162.current_mValue (HERE), constinArgument_inAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (202)).reader_string (SOURCE_FILE_AT_LINE (202)) COMMA_SOURCE_FILE_AT_LINE (202)).operator_concat (GALGAS_string (") too large for rcall ") COMMA_SOURCE_FILE_AT_LINE (202)).operator_concat (enumerator_9162.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (203)) COMMA_SOURCE_FILE_AT_LINE (203)).operator_concat (GALGAS_string (" instruction (limited to [-1024, 1023])") COMMA_SOURCE_FILE_AT_LINE (203)) COMMA_SOURCE_FILE_AT_LINE (201)) ;
    }
    enumerator_9162.gotoNextObject () ;
  }
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_ipic_31__38_ComputedBraTerminator temp_1 = object ;
  outArgument_outModifiedTerminator = temp_1 ;
  const enumGalgasBool test_2 = object->mAttribute_mUsesRCALL.boolEnum () ;
  if (kBoolTrue == test_2) {
    const enumGalgasBool test_3 = function_pic_31__38__5F_checkBRA_5F_RCALL (constinArgument_inSymbolTable, GALGAS_string ("_computed_goto_2").reader_nowhere (SOURCE_FILE_AT_LINE (208)), constinArgument_inAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (208)).operator_not (SOURCE_FILE_AT_LINE (208)).boolEnum () ;
    if (kBoolTrue == test_3) {
      ioArgument_ioConversionCount.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (209)) ;
      ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ").operator_concat (constinArgument_inBlockLabel COMMA_SOURCE_FILE_AT_LINE (210)).operator_concat (GALGAS_string (": computed RETLW needs CALL _computed_goto_2\n") COMMA_SOURCE_FILE_AT_LINE (210)) COMMA_SOURCE_FILE_AT_LINE (210)) ;
      outArgument_outModifiedTerminator = GALGAS_ipic_31__38_ComputedBraTerminator::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mTargetLabels, GALGAS_bool (false) COMMA_SOURCE_FILE_AT_LINE (211)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_ComputedBraTerminator_checkRelativesResolution (void) {
  enterCategoryMethod_checkRelativesResolution (kTypeDescriptor_GALGAS_ipic_31__38_ComputedBraTerminator.mSlotID,
                                                categoryMethod_ipic_31__38_ComputedBraTerminator_checkRelativesResolution) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_ComputedBraTerminator_checkRelativesResolution (defineCategoryMethod_ipic_31__38_ComputedBraTerminator_checkRelativesResolution, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18ComputedGotoTerminator checkRelativesResolution'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_ComputedGotoTerminator_checkRelativesResolution (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                                        const GALGAS_uint constinArgument_inAddress,
                                                                                        const GALGAS_string constinArgument_inBlockLabel,
                                                                                        const GALGAS_symbolTableForRelativesResolution constinArgument_inSymbolTable,
                                                                                        const GALGAS_string /* constinArgument_inNextBlockLabel */,
                                                                                        GALGAS_uint & ioArgument_ioConversionCount,
                                                                                        GALGAS_string & ioArgument_ioListFileContents,
                                                                                        GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outModifiedTerminator,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38_ComputedGotoTerminator * object = (const cPtr_ipic_31__38_ComputedGotoTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38_ComputedGotoTerminator) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_ipic_31__38_ComputedGotoTerminator temp_0 = object ;
  outArgument_outModifiedTerminator = temp_0 ;
  const enumGalgasBool test_1 = object->mAttribute_mUsesRCALL.boolEnum () ;
  if (kBoolTrue == test_1) {
    const enumGalgasBool test_2 = function_pic_31__38__5F_checkBRA_5F_RCALL (constinArgument_inSymbolTable, GALGAS_string ("_computed_goto_2").reader_nowhere (SOURCE_FILE_AT_LINE (229)), constinArgument_inAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (229)).operator_not (SOURCE_FILE_AT_LINE (229)).boolEnum () ;
    if (kBoolTrue == test_2) {
      ioArgument_ioConversionCount.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (230)) ;
      ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  ").operator_concat (constinArgument_inBlockLabel COMMA_SOURCE_FILE_AT_LINE (231)).operator_concat (GALGAS_string (": computed GOTO needs CALL _computed_goto_4\n") COMMA_SOURCE_FILE_AT_LINE (231)) COMMA_SOURCE_FILE_AT_LINE (231)) ;
      outArgument_outModifiedTerminator = GALGAS_ipic_31__38_ComputedGotoTerminator::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mTargetLabels, GALGAS_bool (false) COMMA_SOURCE_FILE_AT_LINE (232)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_ComputedGotoTerminator_checkRelativesResolution (void) {
  enterCategoryMethod_checkRelativesResolution (kTypeDescriptor_GALGAS_ipic_31__38_ComputedGotoTerminator.mSlotID,
                                                categoryMethod_ipic_31__38_ComputedGotoTerminator_checkRelativesResolution) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_ComputedGotoTerminator_checkRelativesResolution (defineCategoryMethod_ipic_31__38_ComputedGotoTerminator_checkRelativesResolution, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@pic18RegisterComparisonTerminator checkRelativesResolution'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_pic_31__38_RegisterComparisonTerminator_checkRelativesResolution (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                                             const GALGAS_uint constinArgument_inAddress,
                                                                                             const GALGAS_string constinArgument_inBlockLabel,
                                                                                             const GALGAS_symbolTableForRelativesResolution constinArgument_inSymbolTable,
                                                                                             const GALGAS_string constinArgument_inNextBlockLabel,
                                                                                             GALGAS_uint & ioArgument_ioConversionCount,
                                                                                             GALGAS_string & ioArgument_ioListFileContents,
                                                                                             GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outModifiedTerminator,
                                                                                             C_Compiler * inCompiler
                                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_pic_31__38_RegisterComparisonTerminator * object = (const cPtr_pic_31__38_RegisterComparisonTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_pic_31__38_RegisterComparisonTerminator) ;
  GALGAS_uint var_n = ioArgument_ioConversionCount ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_outModifiedTrueTerminator ;
  callCategoryMethod_checkRelativesResolution ((const cPtr_ipic_31__38_SingleInstructionTerminator *) object->mAttribute_mInstructionIfConditionTrue.ptr (), constinArgument_inAddress, constinArgument_inBlockLabel, constinArgument_inSymbolTable, constinArgument_inNextBlockLabel, ioArgument_ioConversionCount, ioArgument_ioListFileContents, var_outModifiedTrueTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (249)) ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_outModifiedFalseTerminator ;
  callCategoryMethod_checkRelativesResolution ((const cPtr_ipic_31__38_SingleInstructionTerminator *) object->mAttribute_mInstructionIfConditionFalse.ptr (), constinArgument_inAddress, constinArgument_inBlockLabel, constinArgument_inSymbolTable, constinArgument_inNextBlockLabel, ioArgument_ioConversionCount, ioArgument_ioListFileContents, var_outModifiedFalseTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (258)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, ioArgument_ioConversionCount.objectCompare (var_n)).boolEnum () ;
  if (kBoolTrue == test_0) {
    //--- @selfCopyInExpressionForGeneration
    const GALGAS_pic_31__38_RegisterComparisonTerminator temp_1 = object ;
    outArgument_outModifiedTerminator = temp_1 ;
  }else if (kBoolFalse == test_0) {
    GALGAS_ipic_31__38_SingleInstructionTerminator temp_2 ;
    if (var_outModifiedTrueTerminator.isValid ()) {
      if (NULL != dynamic_cast <const cPtr_ipic_31__38_SingleInstructionTerminator *> (var_outModifiedTrueTerminator.ptr ())) {
        temp_2 = (cPtr_ipic_31__38_SingleInstructionTerminator *) var_outModifiedTrueTerminator.ptr () ;
      }else{
        inCompiler->castError ("ipic_31__38_SingleInstructionTerminator", var_outModifiedTrueTerminator.ptr ()->classDescriptor () COMMA_SOURCE_FILE_AT_LINE (272)) ;
      }
    }
    GALGAS_ipic_31__38_SingleInstructionTerminator temp_3 ;
    if (var_outModifiedFalseTerminator.isValid ()) {
      if (NULL != dynamic_cast <const cPtr_ipic_31__38_SingleInstructionTerminator *> (var_outModifiedFalseTerminator.ptr ())) {
        temp_3 = (cPtr_ipic_31__38_SingleInstructionTerminator *) var_outModifiedFalseTerminator.ptr () ;
      }else{
        inCompiler->castError ("ipic_31__38_SingleInstructionTerminator", var_outModifiedFalseTerminator.ptr ()->classDescriptor () COMMA_SOURCE_FILE_AT_LINE (273)) ;
      }
    }
    outArgument_outModifiedTerminator = GALGAS_pic_31__38_RegisterComparisonTerminator::constructor_new (object->mAttribute_mInstructionLocation, temp_2, temp_3, object->mAttribute_mRegisterDescription, object->mAttribute_mComparison COMMA_SOURCE_FILE_AT_LINE (270)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_pic_31__38_RegisterComparisonTerminator_checkRelativesResolution (void) {
  enterCategoryMethod_checkRelativesResolution (kTypeDescriptor_GALGAS_pic_31__38_RegisterComparisonTerminator.mSlotID,
                                                categoryMethod_pic_31__38_RegisterComparisonTerminator_checkRelativesResolution) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_pic_31__38_RegisterComparisonTerminator_checkRelativesResolution (defineCategoryMethod_pic_31__38_RegisterComparisonTerminator_checkRelativesResolution, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@ipic18IncDecRegisterTerminator checkRelativesResolution'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_IncDecRegisterTerminator_checkRelativesResolution (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                                          const GALGAS_uint constinArgument_inAddress,
                                                                                          const GALGAS_string constinArgument_inBlockLabel,
                                                                                          const GALGAS_symbolTableForRelativesResolution constinArgument_inSymbolTable,
                                                                                          const GALGAS_string constinArgument_inNextBlockLabel,
                                                                                          GALGAS_uint & ioArgument_ioConversionCount,
                                                                                          GALGAS_string & ioArgument_ioListFileContents,
                                                                                          GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outModifiedTerminator,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38_IncDecRegisterTerminator * object = (const cPtr_ipic_31__38_IncDecRegisterTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38_IncDecRegisterTerminator) ;
  GALGAS_uint var_n = ioArgument_ioConversionCount ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_outModifiedTrueTerminator ;
  callCategoryMethod_checkRelativesResolution ((const cPtr_ipic_31__38_SingleInstructionTerminator *) object->mAttribute_mInstructionIfConditionTrue.ptr (), constinArgument_inAddress, constinArgument_inBlockLabel, constinArgument_inSymbolTable, constinArgument_inNextBlockLabel, ioArgument_ioConversionCount, ioArgument_ioListFileContents, var_outModifiedTrueTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (292)) ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_outModifiedFalseTerminator ;
  callCategoryMethod_checkRelativesResolution ((const cPtr_ipic_31__38_SingleInstructionTerminator *) object->mAttribute_mInstructionIfConditionFalse.ptr (), constinArgument_inAddress, constinArgument_inBlockLabel, constinArgument_inSymbolTable, constinArgument_inNextBlockLabel, ioArgument_ioConversionCount, ioArgument_ioListFileContents, var_outModifiedFalseTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (301)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, ioArgument_ioConversionCount.objectCompare (var_n)).boolEnum () ;
  if (kBoolTrue == test_0) {
    //--- @selfCopyInExpressionForGeneration
    const GALGAS_ipic_31__38_IncDecRegisterTerminator temp_1 = object ;
    outArgument_outModifiedTerminator = temp_1 ;
  }else if (kBoolFalse == test_0) {
    GALGAS_ipic_31__38_SingleInstructionTerminator temp_2 ;
    if (var_outModifiedTrueTerminator.isValid ()) {
      if (NULL != dynamic_cast <const cPtr_ipic_31__38_SingleInstructionTerminator *> (var_outModifiedTrueTerminator.ptr ())) {
        temp_2 = (cPtr_ipic_31__38_SingleInstructionTerminator *) var_outModifiedTrueTerminator.ptr () ;
      }else{
        inCompiler->castError ("ipic_31__38_SingleInstructionTerminator", var_outModifiedTrueTerminator.ptr ()->classDescriptor () COMMA_SOURCE_FILE_AT_LINE (315)) ;
      }
    }
    GALGAS_ipic_31__38_SingleInstructionTerminator temp_3 ;
    if (var_outModifiedFalseTerminator.isValid ()) {
      if (NULL != dynamic_cast <const cPtr_ipic_31__38_SingleInstructionTerminator *> (var_outModifiedFalseTerminator.ptr ())) {
        temp_3 = (cPtr_ipic_31__38_SingleInstructionTerminator *) var_outModifiedFalseTerminator.ptr () ;
      }else{
        inCompiler->castError ("ipic_31__38_SingleInstructionTerminator", var_outModifiedFalseTerminator.ptr ()->classDescriptor () COMMA_SOURCE_FILE_AT_LINE (316)) ;
      }
    }
    outArgument_outModifiedTerminator = GALGAS_ipic_31__38_IncDecRegisterTerminator::constructor_new (object->mAttribute_mInstructionLocation, temp_2, temp_3, object->mAttribute_mRegisterDescription, object->mAttribute_mIncrement, object->mAttribute_m_5F_W_5F_isDestination COMMA_SOURCE_FILE_AT_LINE (313)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_IncDecRegisterTerminator_checkRelativesResolution (void) {
  enterCategoryMethod_checkRelativesResolution (kTypeDescriptor_GALGAS_ipic_31__38_IncDecRegisterTerminator.mSlotID,
                                                categoryMethod_ipic_31__38_IncDecRegisterTerminator_checkRelativesResolution) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_IncDecRegisterTerminator_checkRelativesResolution (defineCategoryMethod_ipic_31__38_IncDecRegisterTerminator_checkRelativesResolution, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@pic18TestRegisterTerminator checkRelativesResolution'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_pic_31__38_TestRegisterTerminator_checkRelativesResolution (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                                       const GALGAS_uint constinArgument_inAddress,
                                                                                       const GALGAS_string constinArgument_inBlockLabel,
                                                                                       const GALGAS_symbolTableForRelativesResolution constinArgument_inSymbolTable,
                                                                                       const GALGAS_string constinArgument_inNextBlockLabel,
                                                                                       GALGAS_uint & ioArgument_ioConversionCount,
                                                                                       GALGAS_string & ioArgument_ioListFileContents,
                                                                                       GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outModifiedTerminator,
                                                                                       C_Compiler * inCompiler
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_pic_31__38_TestRegisterTerminator * object = (const cPtr_pic_31__38_TestRegisterTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_pic_31__38_TestRegisterTerminator) ;
  GALGAS_uint var_n = ioArgument_ioConversionCount ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_outModifiedTrueTerminator ;
  callCategoryMethod_checkRelativesResolution ((const cPtr_ipic_31__38_SingleInstructionTerminator *) object->mAttribute_mInstructionIfConditionTrue.ptr (), constinArgument_inAddress, constinArgument_inBlockLabel, constinArgument_inSymbolTable, constinArgument_inNextBlockLabel, ioArgument_ioConversionCount, ioArgument_ioListFileContents, var_outModifiedTrueTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (336)) ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_outModifiedFalseTerminator ;
  callCategoryMethod_checkRelativesResolution ((const cPtr_ipic_31__38_SingleInstructionTerminator *) object->mAttribute_mInstructionIfConditionFalse.ptr (), constinArgument_inAddress, constinArgument_inBlockLabel, constinArgument_inSymbolTable, constinArgument_inNextBlockLabel, ioArgument_ioConversionCount, ioArgument_ioListFileContents, var_outModifiedFalseTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (345)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, ioArgument_ioConversionCount.objectCompare (var_n)).boolEnum () ;
  if (kBoolTrue == test_0) {
    //--- @selfCopyInExpressionForGeneration
    const GALGAS_pic_31__38_TestRegisterTerminator temp_1 = object ;
    outArgument_outModifiedTerminator = temp_1 ;
  }else if (kBoolFalse == test_0) {
    GALGAS_ipic_31__38_SingleInstructionTerminator temp_2 ;
    if (var_outModifiedTrueTerminator.isValid ()) {
      if (NULL != dynamic_cast <const cPtr_ipic_31__38_SingleInstructionTerminator *> (var_outModifiedTrueTerminator.ptr ())) {
        temp_2 = (cPtr_ipic_31__38_SingleInstructionTerminator *) var_outModifiedTrueTerminator.ptr () ;
      }else{
        inCompiler->castError ("ipic_31__38_SingleInstructionTerminator", var_outModifiedTrueTerminator.ptr ()->classDescriptor () COMMA_SOURCE_FILE_AT_LINE (359)) ;
      }
    }
    GALGAS_ipic_31__38_SingleInstructionTerminator temp_3 ;
    if (var_outModifiedFalseTerminator.isValid ()) {
      if (NULL != dynamic_cast <const cPtr_ipic_31__38_SingleInstructionTerminator *> (var_outModifiedFalseTerminator.ptr ())) {
        temp_3 = (cPtr_ipic_31__38_SingleInstructionTerminator *) var_outModifiedFalseTerminator.ptr () ;
      }else{
        inCompiler->castError ("ipic_31__38_SingleInstructionTerminator", var_outModifiedFalseTerminator.ptr ()->classDescriptor () COMMA_SOURCE_FILE_AT_LINE (360)) ;
      }
    }
    outArgument_outModifiedTerminator = GALGAS_pic_31__38_TestRegisterTerminator::constructor_new (object->mAttribute_mInstructionLocation, temp_2, temp_3, object->mAttribute_mRegisterDescription COMMA_SOURCE_FILE_AT_LINE (357)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_pic_31__38_TestRegisterTerminator_checkRelativesResolution (void) {
  enterCategoryMethod_checkRelativesResolution (kTypeDescriptor_GALGAS_pic_31__38_TestRegisterTerminator.mSlotID,
                                                categoryMethod_pic_31__38_TestRegisterTerminator_checkRelativesResolution) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_pic_31__38_TestRegisterTerminator_checkRelativesResolution (defineCategoryMethod_pic_31__38_TestRegisterTerminator_checkRelativesResolution, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@pic18BitTestTerminator checkRelativesResolution'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_pic_31__38_BitTestTerminator_checkRelativesResolution (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                                  const GALGAS_uint constinArgument_inAddress,
                                                                                  const GALGAS_string constinArgument_inBlockLabel,
                                                                                  const GALGAS_symbolTableForRelativesResolution constinArgument_inSymbolTable,
                                                                                  const GALGAS_string constinArgument_inNextBlockLabel,
                                                                                  GALGAS_uint & ioArgument_ioConversionCount,
                                                                                  GALGAS_string & ioArgument_ioListFileContents,
                                                                                  GALGAS_ipic_31__38_AbstractBlockTerminator & outArgument_outModifiedTerminator,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_pic_31__38_BitTestTerminator * object = (const cPtr_pic_31__38_BitTestTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_pic_31__38_BitTestTerminator) ;
  GALGAS_uint var_n = ioArgument_ioConversionCount ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_outModifiedTrueTerminator ;
  callCategoryMethod_checkRelativesResolution ((const cPtr_ipic_31__38_SingleInstructionTerminator *) object->mAttribute_mInstructionIfConditionTrue.ptr (), constinArgument_inAddress, constinArgument_inBlockLabel, constinArgument_inSymbolTable, constinArgument_inNextBlockLabel, ioArgument_ioConversionCount, ioArgument_ioListFileContents, var_outModifiedTrueTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (378)) ;
  GALGAS_ipic_31__38_AbstractBlockTerminator var_outModifiedFalseTerminator ;
  callCategoryMethod_checkRelativesResolution ((const cPtr_ipic_31__38_SingleInstructionTerminator *) object->mAttribute_mInstructionIfConditionFalse.ptr (), constinArgument_inAddress, constinArgument_inBlockLabel, constinArgument_inSymbolTable, constinArgument_inNextBlockLabel, ioArgument_ioConversionCount, ioArgument_ioListFileContents, var_outModifiedFalseTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (387)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, ioArgument_ioConversionCount.objectCompare (var_n)).boolEnum () ;
  if (kBoolTrue == test_0) {
    //--- @selfCopyInExpressionForGeneration
    const GALGAS_pic_31__38_BitTestTerminator temp_1 = object ;
    outArgument_outModifiedTerminator = temp_1 ;
  }else if (kBoolFalse == test_0) {
    GALGAS_ipic_31__38_SingleInstructionTerminator temp_2 ;
    if (var_outModifiedTrueTerminator.isValid ()) {
      if (NULL != dynamic_cast <const cPtr_ipic_31__38_SingleInstructionTerminator *> (var_outModifiedTrueTerminator.ptr ())) {
        temp_2 = (cPtr_ipic_31__38_SingleInstructionTerminator *) var_outModifiedTrueTerminator.ptr () ;
      }else{
        inCompiler->castError ("ipic_31__38_SingleInstructionTerminator", var_outModifiedTrueTerminator.ptr ()->classDescriptor () COMMA_SOURCE_FILE_AT_LINE (401)) ;
      }
    }
    GALGAS_ipic_31__38_SingleInstructionTerminator temp_3 ;
    if (var_outModifiedFalseTerminator.isValid ()) {
      if (NULL != dynamic_cast <const cPtr_ipic_31__38_SingleInstructionTerminator *> (var_outModifiedFalseTerminator.ptr ())) {
        temp_3 = (cPtr_ipic_31__38_SingleInstructionTerminator *) var_outModifiedFalseTerminator.ptr () ;
      }else{
        inCompiler->castError ("ipic_31__38_SingleInstructionTerminator", var_outModifiedFalseTerminator.ptr ()->classDescriptor () COMMA_SOURCE_FILE_AT_LINE (402)) ;
      }
    }
    outArgument_outModifiedTerminator = GALGAS_pic_31__38_BitTestTerminator::constructor_new (object->mAttribute_mInstructionLocation, temp_2, temp_3, object->mAttribute_mRegisterDescription, object->mAttribute_mBitNumber COMMA_SOURCE_FILE_AT_LINE (399)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_pic_31__38_BitTestTerminator_checkRelativesResolution (void) {
  enterCategoryMethod_checkRelativesResolution (kTypeDescriptor_GALGAS_pic_31__38_BitTestTerminator.mSlotID,
                                                categoryMethod_pic_31__38_BitTestTerminator_checkRelativesResolution) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_pic_31__38_BitTestTerminator_checkRelativesResolution (defineCategoryMethod_pic_31__38_BitTestTerminator_checkRelativesResolution, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@ipic18Block checkRelativesResolution'          *
//                                                                           *
//---------------------------------------------------------------------------*

void categoryMethod_checkRelativesResolution (const GALGAS_ipic_31__38_Block inObject,
                                              const GALGAS_symbolTableForRelativesResolution constinArgument_inSymbolTable,
                                              const GALGAS_string constinArgument_inNextBlockLabel,
                                              const GALGAS_uint constinArgument_inBlockStartAddress,
                                              GALGAS_uint & ioArgument_ioConversionCount,
                                              GALGAS_string & ioArgument_ioListFileContents,
                                              GALGAS_ipic_31__38_Block & outArgument_outModifiedBlock,
                                              C_Compiler * inCompiler
                                              COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outModifiedBlock.drop () ; // Release 'out' argument
  GALGAS_ipic_31__38_SequentialInstructionList var_modifiedInstructionList = GALGAS_ipic_31__38_SequentialInstructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (424)) ;
  GALGAS_uint var_address = constinArgument_inBlockStartAddress ;
  cEnumerator_ipic_31__38_SequentialInstructionList enumerator_16704 (inObject.mAttribute_mInstructionList, kEnumeration_up) ;
  while (enumerator_16704.hasCurrentObject ()) {
    GALGAS_ipic_31__38_SequentialInstruction var_modifiedInstruction ;
    callCategoryMethod_checkRelativesResolution ((const cPtr_ipic_31__38_SequentialInstruction *) enumerator_16704.current_mInstruction (HERE).ptr (), var_address, inObject.mAttribute_mLabel.mAttribute_string, constinArgument_inSymbolTable, ioArgument_ioConversionCount, ioArgument_ioListFileContents, var_modifiedInstruction, inCompiler COMMA_SOURCE_FILE_AT_LINE (427)) ;
    var_modifiedInstructionList.addAssign_operation (var_modifiedInstruction COMMA_SOURCE_FILE_AT_LINE (435)) ;
    var_address = var_address.add_operation (callCategoryReader_instructionSize ((const cPtr_ipic_31__38_SequentialInstruction *) enumerator_16704.current_mInstruction (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (436)), inCompiler COMMA_SOURCE_FILE_AT_LINE (436)) ;
    enumerator_16704.gotoNextObject () ;
  }
  GALGAS_ipic_31__38_AbstractBlockTerminator var_modifiedTerminator ;
  callCategoryMethod_checkRelativesResolution ((const cPtr_ipic_31__38_AbstractBlockTerminator *) inObject.mAttribute_mTerminator.ptr (), var_address, inObject.mAttribute_mLabel.mAttribute_string, constinArgument_inSymbolTable, constinArgument_inNextBlockLabel, ioArgument_ioConversionCount, ioArgument_ioListFileContents, var_modifiedTerminator, inCompiler COMMA_SOURCE_FILE_AT_LINE (439)) ;
  outArgument_outModifiedBlock = GALGAS_ipic_31__38_Block::constructor_new (inObject.mAttribute_mStartAddress, inObject.mAttribute_mLabel, var_modifiedInstructionList, var_modifiedTerminator COMMA_SOURCE_FILE_AT_LINE (449)) ;
}


//---------------------------------------------------------------------------*
//                                                                           *
//                 Category Reader '@ipic18Block blockSize'                  *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_uint categoryReader_blockSize (const GALGAS_ipic_31__38_Block & inObject,
                                      const GALGAS_string & constinArgument_inNextBlockLabel,
                                      C_Compiler * inCompiler
                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_uint result_outResult ; // Returned variable
  result_outResult = callCategoryReader_terminatorSize ((const cPtr_ipic_31__38_AbstractBlockTerminator *) inObject.mAttribute_mTerminator.ptr (), constinArgument_inNextBlockLabel, inCompiler COMMA_SOURCE_FILE_AT_LINE (502)) ;
  cEnumerator_ipic_31__38_SequentialInstructionList enumerator_18975 (inObject.mAttribute_mInstructionList, kEnumeration_up) ;
  while (enumerator_18975.hasCurrentObject ()) {
    result_outResult = result_outResult.add_operation (callCategoryReader_instructionSize ((const cPtr_ipic_31__38_SequentialInstruction *) enumerator_18975.current_mInstruction (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (504)), inCompiler COMMA_SOURCE_FILE_AT_LINE (504)) ;
    enumerator_18975.gotoNextObject () ;
  }
//---
  return result_outResult ;
}




//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


