//-----------------------------------------------------------------------------*
//                                                                             *
//                    File 'ipic18_stack_computations.cpp'                     *
//                         Generated by version 2.5.8                          *
//                        may 19th, 2014, at 19h44'40"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "ipic18_stack_computations.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "piccolo_options.h"

//-----------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "ipic18_stack_computations.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//-----------------------------------------------------------------------------*

cMapElement_blockMapForStackComputation::cMapElement_blockMapForStackComputation (const GALGAS_lstring & inKey,
                                                                                  const GALGAS_ipic_31__38_Block & in_mBlock
                                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mBlock (in_mBlock) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_blockMapForStackComputation::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mBlock.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_blockMapForStackComputation::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_blockMapForStackComputation (mAttribute_lkey, mAttribute_mBlock COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_blockMapForStackComputation::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBlock" ":" ;
  mAttribute_mBlock.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_blockMapForStackComputation::compare (const cCollectionElement * inOperand) const {
  cMapElement_blockMapForStackComputation * operand = (cMapElement_blockMapForStackComputation *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mBlock.objectCompare (operand->mAttribute_mBlock) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_blockMapForStackComputation::GALGAS_blockMapForStackComputation (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_blockMapForStackComputation::GALGAS_blockMapForStackComputation (const GALGAS_blockMapForStackComputation & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_blockMapForStackComputation & GALGAS_blockMapForStackComputation::operator = (const GALGAS_blockMapForStackComputation & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_blockMapForStackComputation GALGAS_blockMapForStackComputation::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_blockMapForStackComputation result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_blockMapForStackComputation GALGAS_blockMapForStackComputation::constructor_mapWithMapToOverride (const GALGAS_blockMapForStackComputation & inMapToOverride
                                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_blockMapForStackComputation result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_blockMapForStackComputation GALGAS_blockMapForStackComputation::reader_overriddenMap (C_Compiler * inCompiler
                                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_blockMapForStackComputation result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_blockMapForStackComputation::modifier_insertKey (GALGAS_lstring inKey,
                                                             GALGAS_ipic_31__38_Block inArgument0,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cMapElement_blockMapForStackComputation * p = NULL ;
  macroMyNew (p, cMapElement_blockMapForStackComputation (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' block is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_blockMapForStackComputation_searchKey = "the '%K' block is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_blockMapForStackComputation::method_searchKey (GALGAS_lstring inKey,
                                                           GALGAS_ipic_31__38_Block & outArgument0,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  const cMapElement_blockMapForStackComputation * p = (const cMapElement_blockMapForStackComputation *) performSearch (inKey,
                                                                                                                         inCompiler,
                                                                                                                         kSearchErrorMessage_blockMapForStackComputation_searchKey
                                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_blockMapForStackComputation) ;
    outArgument0 = p->mAttribute_mBlock ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_ipic_31__38_Block GALGAS_blockMapForStackComputation::reader_mBlockForKey (const GALGAS_string & inKey,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_blockMapForStackComputation * p = (const cMapElement_blockMapForStackComputation *) attributes ;
  GALGAS_ipic_31__38_Block result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_blockMapForStackComputation) ;
    result = p->mAttribute_mBlock ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_blockMapForStackComputation::modifier_setMBlockForKey (GALGAS_ipic_31__38_Block inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_blockMapForStackComputation * p = (cMapElement_blockMapForStackComputation *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_blockMapForStackComputation) ;
    p->mAttribute_mBlock = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_blockMapForStackComputation * GALGAS_blockMapForStackComputation::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                        const GALGAS_string & inKey
                                                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_blockMapForStackComputation * result = (cMapElement_blockMapForStackComputation *) p ;
  macroNullOrValidSharedObject (result, cMapElement_blockMapForStackComputation) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_blockMapForStackComputation * GALGAS_blockMapForStackComputation::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                           const GALGAS_lstring & inKey
                                                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_blockMapForStackComputation_searchKey COMMA_THERE) ;
  cMapElement_blockMapForStackComputation * result = (cMapElement_blockMapForStackComputation *) p ;
  macroNullOrValidSharedObject (result, cMapElement_blockMapForStackComputation) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_blockMapForStackComputation::cEnumerator_blockMapForStackComputation (const GALGAS_blockMapForStackComputation & inEnumeratedObject,
                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_blockMapForStackComputation_2E_element cEnumerator_blockMapForStackComputation::current (LOCATION_ARGS) const {
  const cMapElement_blockMapForStackComputation * p = (const cMapElement_blockMapForStackComputation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_blockMapForStackComputation) ;
  return GALGAS_blockMapForStackComputation_2E_element (p->mAttribute_lkey, p->mAttribute_mBlock) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_blockMapForStackComputation::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_ipic_31__38_Block cEnumerator_blockMapForStackComputation::current_mBlock (LOCATION_ARGS) const {
  const cMapElement_blockMapForStackComputation * p = (const cMapElement_blockMapForStackComputation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_blockMapForStackComputation) ;
  return p->mAttribute_mBlock ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                      @blockMapForStackComputation type                      *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_blockMapForStackComputation ("blockMapForStackComputation",
                                                    NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_blockMapForStackComputation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_blockMapForStackComputation ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_blockMapForStackComputation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_blockMapForStackComputation (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_blockMapForStackComputation GALGAS_blockMapForStackComputation::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_blockMapForStackComputation result ;
  const GALGAS_blockMapForStackComputation * p = (const GALGAS_blockMapForStackComputation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_blockMapForStackComputation *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("blockMapForStackComputation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_routineCallMap::cMapElement_routineCallMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_stringset & in_mCalledRoutineSet
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mCalledRoutineSet (in_mCalledRoutineSet) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_routineCallMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mCalledRoutineSet.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_routineCallMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_routineCallMap (mAttribute_lkey, mAttribute_mCalledRoutineSet COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_routineCallMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCalledRoutineSet" ":" ;
  mAttribute_mCalledRoutineSet.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_routineCallMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_routineCallMap * operand = (cMapElement_routineCallMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mCalledRoutineSet.objectCompare (operand->mAttribute_mCalledRoutineSet) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineCallMap::GALGAS_routineCallMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_routineCallMap::GALGAS_routineCallMap (const GALGAS_routineCallMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_routineCallMap & GALGAS_routineCallMap::operator = (const GALGAS_routineCallMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineCallMap GALGAS_routineCallMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_routineCallMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineCallMap GALGAS_routineCallMap::constructor_mapWithMapToOverride (const GALGAS_routineCallMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_routineCallMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineCallMap GALGAS_routineCallMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_routineCallMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_routineCallMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_stringset inArgument0,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_routineCallMap * p = NULL ;
  macroMyNew (p, cMapElement_routineCallMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' entry is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_stringset GALGAS_routineCallMap::reader_mCalledRoutineSetForKey (const GALGAS_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineCallMap * p = (const cMapElement_routineCallMap *) attributes ;
  GALGAS_stringset result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_routineCallMap) ;
    result = p->mAttribute_mCalledRoutineSet ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_routineCallMap::modifier_setMCalledRoutineSetForKey (GALGAS_stringset inAttributeValue,
                                                                 GALGAS_string inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineCallMap * p = (cMapElement_routineCallMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineCallMap) ;
    p->mAttribute_mCalledRoutineSet = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_routineCallMap * GALGAS_routineCallMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                              const GALGAS_string & inKey
                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineCallMap * result = (cMapElement_routineCallMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_routineCallMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_routineCallMap::cEnumerator_routineCallMap (const GALGAS_routineCallMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineCallMap_2E_element cEnumerator_routineCallMap::current (LOCATION_ARGS) const {
  const cMapElement_routineCallMap * p = (const cMapElement_routineCallMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_routineCallMap) ;
  return GALGAS_routineCallMap_2E_element (p->mAttribute_lkey, p->mAttribute_mCalledRoutineSet) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_routineCallMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_stringset cEnumerator_routineCallMap::current_mCalledRoutineSet (LOCATION_ARGS) const {
  const cMapElement_routineCallMap * p = (const cMapElement_routineCallMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_routineCallMap) ;
  return p->mAttribute_mCalledRoutineSet ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                            @routineCallMap type                             *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_routineCallMap ("routineCallMap",
                                       NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_routineCallMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_routineCallMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_routineCallMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_routineCallMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineCallMap GALGAS_routineCallMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_routineCallMap result ;
  const GALGAS_routineCallMap * p = (const GALGAS_routineCallMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_routineCallMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("routineCallMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_routineStackRequirementMap::cMapElement_routineStackRequirementMap (const GALGAS_lstring & inKey,
                                                                                const GALGAS_uint & in_mLevels
                                                                                COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mLevels (in_mLevels) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_routineStackRequirementMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mLevels.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_routineStackRequirementMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_routineStackRequirementMap (mAttribute_lkey, mAttribute_mLevels COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_routineStackRequirementMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mLevels" ":" ;
  mAttribute_mLevels.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_routineStackRequirementMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_routineStackRequirementMap * operand = (cMapElement_routineStackRequirementMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mLevels.objectCompare (operand->mAttribute_mLevels) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineStackRequirementMap::GALGAS_routineStackRequirementMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_routineStackRequirementMap::GALGAS_routineStackRequirementMap (const GALGAS_routineStackRequirementMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_routineStackRequirementMap & GALGAS_routineStackRequirementMap::operator = (const GALGAS_routineStackRequirementMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineStackRequirementMap GALGAS_routineStackRequirementMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_routineStackRequirementMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineStackRequirementMap GALGAS_routineStackRequirementMap::constructor_mapWithMapToOverride (const GALGAS_routineStackRequirementMap & inMapToOverride
                                                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_routineStackRequirementMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineStackRequirementMap GALGAS_routineStackRequirementMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                           COMMA_LOCATION_ARGS) const {
  GALGAS_routineStackRequirementMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_routineStackRequirementMap::modifier_insertKey (GALGAS_lstring inKey,
                                                            GALGAS_uint inArgument0,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cMapElement_routineStackRequirementMap * p = NULL ;
  macroMyNew (p, cMapElement_routineStackRequirementMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' entry is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_routineStackRequirementMap_searchKey = "the '%K' entry is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_routineStackRequirementMap::method_searchKey (GALGAS_lstring inKey,
                                                          GALGAS_uint & outArgument0,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  const cMapElement_routineStackRequirementMap * p = (const cMapElement_routineStackRequirementMap *) performSearch (inKey,
                                                                                                                       inCompiler,
                                                                                                                       kSearchErrorMessage_routineStackRequirementMap_searchKey
                                                                                                                       COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_routineStackRequirementMap) ;
    outArgument0 = p->mAttribute_mLevels ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_uint GALGAS_routineStackRequirementMap::reader_mLevelsForKey (const GALGAS_string & inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineStackRequirementMap * p = (const cMapElement_routineStackRequirementMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_routineStackRequirementMap) ;
    result = p->mAttribute_mLevels ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_routineStackRequirementMap::modifier_setMLevelsForKey (GALGAS_uint inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineStackRequirementMap * p = (cMapElement_routineStackRequirementMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineStackRequirementMap) ;
    p->mAttribute_mLevels = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_routineStackRequirementMap * GALGAS_routineStackRequirementMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                      const GALGAS_string & inKey
                                                                                                                      COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineStackRequirementMap * result = (cMapElement_routineStackRequirementMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_routineStackRequirementMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_routineStackRequirementMap * GALGAS_routineStackRequirementMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                         const GALGAS_lstring & inKey
                                                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_routineStackRequirementMap_searchKey COMMA_THERE) ;
  cMapElement_routineStackRequirementMap * result = (cMapElement_routineStackRequirementMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_routineStackRequirementMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_routineStackRequirementMap::cEnumerator_routineStackRequirementMap (const GALGAS_routineStackRequirementMap & inEnumeratedObject,
                                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineStackRequirementMap_2E_element cEnumerator_routineStackRequirementMap::current (LOCATION_ARGS) const {
  const cMapElement_routineStackRequirementMap * p = (const cMapElement_routineStackRequirementMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_routineStackRequirementMap) ;
  return GALGAS_routineStackRequirementMap_2E_element (p->mAttribute_lkey, p->mAttribute_mLevels) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_routineStackRequirementMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_uint cEnumerator_routineStackRequirementMap::current_mLevels (LOCATION_ARGS) const {
  const cMapElement_routineStackRequirementMap * p = (const cMapElement_routineStackRequirementMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_routineStackRequirementMap) ;
  return p->mAttribute_mLevels ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                      @routineStackRequirementMap type                       *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_routineStackRequirementMap ("routineStackRequirementMap",
                                                   NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_routineStackRequirementMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_routineStackRequirementMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_routineStackRequirementMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_routineStackRequirementMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineStackRequirementMap GALGAS_routineStackRequirementMap::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_routineStackRequirementMap result ;
  const GALGAS_routineStackRequirementMap * p = (const GALGAS_routineStackRequirementMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_routineStackRequirementMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("routineStackRequirementMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                     Routine 'ipic18StackComputations'                     *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_ipic_31__38_StackComputations (GALGAS_string & ioArgument_ioListFileContents,
                                            const GALGAS_ipic_31__38_BlockList constinArgument_inBlockList,
                                            C_Compiler * inCompiler
                                            COMMA_UNUSED_LOCATION_ARGS) {
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string::makeEmptyString ().reader_stringByLeftAndRightPadding (GALGAS_uint ((uint32_t) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (179)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (179)) COMMA_SOURCE_FILE_AT_LINE (179)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*").operator_concat (GALGAS_string ("STACK COMPUTATIONS").reader_stringByLeftAndRightPadding (GALGAS_uint ((uint32_t) 77U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (180)) COMMA_SOURCE_FILE_AT_LINE (180)).operator_concat (GALGAS_string ("*\n") COMMA_SOURCE_FILE_AT_LINE (180)) COMMA_SOURCE_FILE_AT_LINE (180)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string::makeEmptyString ().reader_stringByLeftAndRightPadding (GALGAS_uint ((uint32_t) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (181)).operator_concat (GALGAS_string ("\n"
    "\n") COMMA_SOURCE_FILE_AT_LINE (181)) COMMA_SOURCE_FILE_AT_LINE (181)) ;
  GALGAS_stringset var_startLabelsToExplore = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (183)) ;
  GALGAS_blockMapForStackComputation var_blockMapForStackComputation = GALGAS_blockMapForStackComputation::constructor_emptyMap (SOURCE_FILE_AT_LINE (184)) ;
  cEnumerator_ipic_31__38_BlockList enumerator_6241 (constinArgument_inBlockList, kEnumeration_up) ;
  while (enumerator_6241.hasCurrentObject ()) {
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, enumerator_6241.current_mBlock (HERE).mAttribute_mAddress.objectCompare (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (186)))).boolEnum () ;
    if (kBoolTrue == test_0) {
      var_startLabelsToExplore.addAssign_operation (enumerator_6241.current_mBlock (HERE).mAttribute_mLabel.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (187)) ;
    }
    {
    var_blockMapForStackComputation.modifier_insertKey (enumerator_6241.current_mBlock (HERE).mAttribute_mLabel, enumerator_6241.current_mBlock (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (189)) ;
    }
    enumerator_6241.gotoNextObject () ;
  }
  GALGAS_routineCallMap var_routineCallMap = GALGAS_routineCallMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (192)) ;
  if (constinArgument_inBlockList.reader_length (SOURCE_FILE_AT_LINE (193)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (193)).isValid ()) {
    uint32_t variant_6569 = constinArgument_inBlockList.reader_length (SOURCE_FILE_AT_LINE (193)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (193)).uintValue () ;
    bool loop_6569 = true ;
    while (loop_6569) {
      loop_6569 = GALGAS_bool (kIsStrictSup, var_startLabelsToExplore.reader_count (SOURCE_FILE_AT_LINE (194)).objectCompare (GALGAS_uint ((uint32_t) 0U))).isValid () ;
      if (loop_6569) {
        loop_6569 = GALGAS_bool (kIsStrictSup, var_startLabelsToExplore.reader_count (SOURCE_FILE_AT_LINE (194)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolValue () ;
      }
      if (loop_6569 && (0 == variant_6569)) {
        loop_6569 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (193)) ;
      }
      if (loop_6569) {
        variant_6569 -- ;
        GALGAS_string var_startLabel = var_startLabelsToExplore.reader_anyString (inCompiler COMMA_SOURCE_FILE_AT_LINE (196)) ;
        {
        var_startLabelsToExplore.modifier_removeKey (var_startLabel COMMA_SOURCE_FILE_AT_LINE (197)) ;
        }
        GALGAS_stringset var_blockToExploreSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (199)) ;
        var_blockToExploreSet.addAssign_operation (var_startLabel COMMA_SOURCE_FILE_AT_LINE (200)) ;
        GALGAS_stringset var_exploredBlockSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (201)) ;
        GALGAS_stringset var_calledRoutineSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (202)) ;
        if (constinArgument_inBlockList.reader_length (SOURCE_FILE_AT_LINE (203)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (203)).isValid ()) {
          uint32_t variant_6979 = constinArgument_inBlockList.reader_length (SOURCE_FILE_AT_LINE (203)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (203)).uintValue () ;
          bool loop_6979 = true ;
          while (loop_6979) {
            loop_6979 = GALGAS_bool (kIsStrictSup, var_blockToExploreSet.reader_count (SOURCE_FILE_AT_LINE (204)).objectCompare (GALGAS_uint ((uint32_t) 0U))).isValid () ;
            if (loop_6979) {
              loop_6979 = GALGAS_bool (kIsStrictSup, var_blockToExploreSet.reader_count (SOURCE_FILE_AT_LINE (204)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolValue () ;
            }
            if (loop_6979 && (0 == variant_6979)) {
              loop_6979 = false ;
              inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (203)) ;
            }
            if (loop_6979) {
              variant_6979 -- ;
              GALGAS_string var_b = var_blockToExploreSet.reader_anyString (inCompiler COMMA_SOURCE_FILE_AT_LINE (206)) ;
              {
              var_blockToExploreSet.modifier_removeKey (var_b COMMA_SOURCE_FILE_AT_LINE (207)) ;
              }
              var_exploredBlockSet.addAssign_operation (var_b COMMA_SOURCE_FILE_AT_LINE (208)) ;
              GALGAS_ipic_31__38_Block var_aBlock ;
              var_blockMapForStackComputation.method_searchKey (var_b.reader_nowhere (SOURCE_FILE_AT_LINE (209)), var_aBlock, inCompiler COMMA_SOURCE_FILE_AT_LINE (209)) ;
              callCategoryMethod_exploreAccessibleBlocks ((const cPtr_ipic_31__38_AbstractBlockTerminator *) var_aBlock.mAttribute_mTerminator.ptr (), var_blockToExploreSet, var_exploredBlockSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (210)) ;
              cEnumerator_ipic_31__38_SequentialInstructionList enumerator_7399 (var_aBlock.mAttribute_mInstructionList, kEnumeration_up) ;
              while (enumerator_7399.hasCurrentObject ()) {
                callCategoryMethod_buildCalledRoutineSet ((const cPtr_ipic_31__38_SequentialInstruction *) enumerator_7399.current_mInstruction (HERE).ptr (), var_calledRoutineSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (212)) ;
                enumerator_7399.gotoNextObject () ;
              }
            }
          }
        }
        {
        var_routineCallMap.modifier_insertKey (var_startLabel.reader_nowhere (SOURCE_FILE_AT_LINE (215)), var_calledRoutineSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (215)) ;
        }
        cEnumerator_stringset enumerator_7607 (var_calledRoutineSet, kEnumeration_up) ;
        while (enumerator_7607.hasCurrentObject ()) {
          const enumGalgasBool test_1 = var_routineCallMap.reader_hasKey (enumerator_7607.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (217)).operator_not (SOURCE_FILE_AT_LINE (217)).boolEnum () ;
          if (kBoolTrue == test_1) {
            var_startLabelsToExplore.addAssign_operation (enumerator_7607.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (218)) ;
          }
          enumerator_7607.gotoNextObject () ;
        }
      }
    }
  }
  GALGAS_routineStackRequirementMap var_routineStackRequirementMap = GALGAS_routineStackRequirementMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (224)) ;
  GALGAS_bool var_progress = GALGAS_bool (true) ;
  if (var_routineCallMap.reader_count (SOURCE_FILE_AT_LINE (226)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (226)).isValid ()) {
    uint32_t variant_7918 = var_routineCallMap.reader_count (SOURCE_FILE_AT_LINE (226)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (226)).uintValue () ;
    bool loop_7918 = true ;
    while (loop_7918) {
      loop_7918 = var_progress.isValid () ;
      if (loop_7918) {
        loop_7918 = var_progress.boolValue () ;
      }
      if (loop_7918 && (0 == variant_7918)) {
        loop_7918 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (226)) ;
      }
      if (loop_7918) {
        variant_7918 -- ;
        var_progress = GALGAS_bool (false) ;
        GALGAS_routineCallMap var_tempRoutineCallMap = var_routineCallMap ;
        var_routineCallMap = GALGAS_routineCallMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (231)) ;
        cEnumerator_routineCallMap enumerator_8134 (var_tempRoutineCallMap, kEnumeration_up) ;
        while (enumerator_8134.hasCurrentObject ()) {
          GALGAS_uint var_levels = GALGAS_uint ((uint32_t) 0U) ;
          GALGAS_bool var_solved = GALGAS_bool (true) ;
          cEnumerator_stringset enumerator_8224 (enumerator_8134.current_mCalledRoutineSet (HERE), kEnumeration_up) ;
          bool bool_2 = var_solved.isValidAndTrue () ;
          if (enumerator_8224.hasCurrentObject () && bool_2) {
            while (enumerator_8224.hasCurrentObject () && bool_2) {
              var_solved = var_routineStackRequirementMap.reader_hasKey (enumerator_8224.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (236)) ;
              const enumGalgasBool test_3 = var_solved.boolEnum () ;
              if (kBoolTrue == test_3) {
                GALGAS_uint var_rLevel ;
                var_routineStackRequirementMap.method_searchKey (enumerator_8224.current_key (HERE).reader_nowhere (SOURCE_FILE_AT_LINE (238)), var_rLevel, inCompiler COMMA_SOURCE_FILE_AT_LINE (238)) ;
                const enumGalgasBool test_4 = GALGAS_bool (kIsInfOrEqual, var_levels.objectCompare (var_rLevel)).boolEnum () ;
                if (kBoolTrue == test_4) {
                  var_levels = var_rLevel.add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (240)) ;
                }
              }
              enumerator_8224.gotoNextObject () ;
              if (enumerator_8224.hasCurrentObject ()) {
                bool_2 = var_solved.isValidAndTrue () ;
              }
            }
          }
          const enumGalgasBool test_5 = var_solved.boolEnum () ;
          if (kBoolTrue == test_5) {
            {
            var_routineStackRequirementMap.modifier_insertKey (enumerator_8134.current_lkey (HERE), var_levels, inCompiler COMMA_SOURCE_FILE_AT_LINE (245)) ;
            }
            var_progress = GALGAS_bool (true) ;
          }else if (kBoolFalse == test_5) {
            {
            var_routineCallMap.modifier_insertKey (enumerator_8134.current_lkey (HERE), enumerator_8134.current_mCalledRoutineSet (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (248)) ;
            }
          }
          enumerator_8134.gotoNextObject () ;
        }
      }
    }
  }
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("Levels Routine\n") COMMA_SOURCE_FILE_AT_LINE (252)) ;
  cEnumerator_routineStackRequirementMap enumerator_8847 (var_routineStackRequirementMap, kEnumeration_up) ;
  while (enumerator_8847.hasCurrentObject ()) {
    ioArgument_ioListFileContents.dotAssign_operation (enumerator_8847.current_mLevels (HERE).reader_string (SOURCE_FILE_AT_LINE (254)).reader_stringByLeftPadding (GALGAS_uint ((uint32_t) 6U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (254)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (254)).operator_concat (enumerator_8847.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (254)) COMMA_SOURCE_FILE_AT_LINE (254)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (254)) COMMA_SOURCE_FILE_AT_LINE (254)) ;
    enumerator_8847.gotoNextObject () ;
  }
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (256)) ;
  GALGAS_bool var_noRecursiveRoutine = GALGAS_bool (kIsEqual, var_routineCallMap.reader_count (SOURCE_FILE_AT_LINE (258)).objectCompare (GALGAS_uint ((uint32_t) 0U))) ;
  const enumGalgasBool test_6 = var_noRecursiveRoutine.operator_not (SOURCE_FILE_AT_LINE (259)).boolEnum () ;
  if (kBoolTrue == test_6) {
    const enumGalgasBool test_7 = GALGAS_bool (gOption_piccolo_5F_options_doNotWarnRecursive.reader_value ()).operator_not (SOURCE_FILE_AT_LINE (260)).boolEnum () ;
    if (kBoolTrue == test_7) {
      inCompiler->emitSemanticWarning (GALGAS_location::constructor_nowhere (SOURCE_FILE_AT_LINE (261)), GALGAS_string ("There are recursive routines") COMMA_SOURCE_FILE_AT_LINE (261)) ;
    }
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("The following routines are recursive:\n") COMMA_SOURCE_FILE_AT_LINE (263)) ;
    cEnumerator_routineCallMap enumerator_9358 (var_routineCallMap, kEnumeration_up) ;
    while (enumerator_9358.hasCurrentObject ()) {
      ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  - ").operator_concat (enumerator_9358.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (265)) COMMA_SOURCE_FILE_AT_LINE (265)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (265)) COMMA_SOURCE_FILE_AT_LINE (265)) ;
      enumerator_9358.gotoNextObject () ;
    }
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (267)) ;
  }
  const enumGalgasBool test_8 = var_noRecursiveRoutine.boolEnum () ;
  if (kBoolTrue == test_8) {
    GALGAS_uint var_mainLevels ;
    var_routineStackRequirementMap.method_searchKey (GALGAS_string (".START").reader_nowhere (SOURCE_FILE_AT_LINE (271)), var_mainLevels, inCompiler COMMA_SOURCE_FILE_AT_LINE (271)) ;
    GALGAS_uint var_totalLevels = var_mainLevels ;
    const enumGalgasBool test_9 = var_routineStackRequirementMap.reader_hasKey (GALGAS_string (".HIGH_INTERRUPT") COMMA_SOURCE_FILE_AT_LINE (273)).boolEnum () ;
    if (kBoolTrue == test_9) {
      GALGAS_uint var_highIntLevels ;
      var_routineStackRequirementMap.method_searchKey (GALGAS_string (".HIGH_INTERRUPT").reader_nowhere (SOURCE_FILE_AT_LINE (274)), var_highIntLevels, inCompiler COMMA_SOURCE_FILE_AT_LINE (274)) ;
      var_totalLevels = var_totalLevels.add_operation (var_highIntLevels, inCompiler COMMA_SOURCE_FILE_AT_LINE (275)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (275)) ;
    }
    const enumGalgasBool test_10 = var_routineStackRequirementMap.reader_hasKey (GALGAS_string (".LOW_INTERRUPT") COMMA_SOURCE_FILE_AT_LINE (277)).boolEnum () ;
    if (kBoolTrue == test_10) {
      GALGAS_uint var_lowIntLevels ;
      var_routineStackRequirementMap.method_searchKey (GALGAS_string (".LOW_INTERRUPT").reader_nowhere (SOURCE_FILE_AT_LINE (278)), var_lowIntLevels, inCompiler COMMA_SOURCE_FILE_AT_LINE (278)) ;
      var_totalLevels = var_totalLevels.add_operation (var_lowIntLevels, inCompiler COMMA_SOURCE_FILE_AT_LINE (279)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (279)) ;
    }
    inCompiler->printMessage (GALGAS_string ("Max stack depth: ").operator_concat (var_totalLevels.reader_string (SOURCE_FILE_AT_LINE (281)) COMMA_SOURCE_FILE_AT_LINE (281)).operator_concat (GALGAS_string ("\n"
      "\n") COMMA_SOURCE_FILE_AT_LINE (281)) COMMA_SOURCE_FILE_AT_LINE (281)) ;
    const enumGalgasBool test_11 = GALGAS_bool (kIsStrictSup, var_totalLevels.objectCompare (GALGAS_uint ((uint32_t) 31U))).boolEnum () ;
    if (kBoolTrue == test_11) {
      inCompiler->emitSemanticError (GALGAS_location::constructor_nowhere (SOURCE_FILE_AT_LINE (283)), GALGAS_string ("Max stack depth is greater than 31") COMMA_SOURCE_FILE_AT_LINE (283)) ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//Abstract category method '@ipic18AbstractBlockTerminator exploreAccessibleBlocks'*
//                                                                             *
//-----------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_ipic_31__38_AbstractBlockTerminator_exploreAccessibleBlocks> gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_exploreAccessibleBlocks ;

//-----------------------------------------------------------------------------*

void enterCategoryMethod_exploreAccessibleBlocks (const int32_t inClassIndex,
                                                  categoryMethodSignature_ipic_31__38_AbstractBlockTerminator_exploreAccessibleBlocks inMethod) {
  gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_exploreAccessibleBlocks.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//-----------------------------------------------------------------------------*

static void freeCategoryMethod_ipic_31__38_AbstractBlockTerminator_exploreAccessibleBlocks (void) {
  gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_exploreAccessibleBlocks.free () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_AbstractBlockTerminator_exploreAccessibleBlocks (NULL,
                                                                                        freeCategoryMethod_ipic_31__38_AbstractBlockTerminator_exploreAccessibleBlocks) ;

//-----------------------------------------------------------------------------*

void callCategoryMethod_exploreAccessibleBlocks (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                 GALGAS_stringset & io_ioBlockToExploreSet,
                                                 GALGAS_stringset & io_ioExploredBlockSet,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_ipic_31__38_AbstractBlockTerminator) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_ipic_31__38_AbstractBlockTerminator_exploreAccessibleBlocks f = NULL ;
    if (classIndex < gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_exploreAccessibleBlocks.count ()) {
      f = gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_exploreAccessibleBlocks (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_exploreAccessibleBlocks.count ()) {
           f = gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_exploreAccessibleBlocks (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_ipic_31__38_AbstractBlockTerminator_exploreAccessibleBlocks.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, io_ioBlockToExploreSet, io_ioExploredBlockSet, inCompiler COMMA_THERE) ;
    }
  }
}

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@ipic18AbstractConditionTerminator exploreAccessibleBlocks'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_AbstractConditionTerminator_exploreAccessibleBlocks (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                                            GALGAS_stringset & ioArgument_ioBlockToExploreSet,
                                                                                            GALGAS_stringset & ioArgument_ioExploredBlockSet,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38_AbstractConditionTerminator * object = (const cPtr_ipic_31__38_AbstractConditionTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38_AbstractConditionTerminator) ;
  callCategoryMethod_exploreAccessibleBlocks ((const cPtr_ipic_31__38_SingleInstructionTerminator *) object->mAttribute_mSingleInstructionTerminatorIfConditionTrue.ptr (), ioArgument_ioBlockToExploreSet, ioArgument_ioExploredBlockSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (45)) ;
  callCategoryMethod_exploreAccessibleBlocks ((const cPtr_ipic_31__38_SingleInstructionTerminator *) object->mAttribute_mSingleInstructionTerminatorIfConditionFalse.ptr (), ioArgument_ioBlockToExploreSet, ioArgument_ioExploredBlockSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (46)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_AbstractConditionTerminator_exploreAccessibleBlocks (void) {
  enterCategoryMethod_exploreAccessibleBlocks (kTypeDescriptor_GALGAS_ipic_31__38_AbstractConditionTerminator.mSlotID,
                                               categoryMethod_ipic_31__38_AbstractConditionTerminator_exploreAccessibleBlocks) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_AbstractConditionTerminator_exploreAccessibleBlocks (defineCategoryMethod_ipic_31__38_AbstractConditionTerminator_exploreAccessibleBlocks, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@ipic18ComputedBraTerminator exploreAccessibleBlocks'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_ComputedBraTerminator_exploreAccessibleBlocks (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                                      GALGAS_stringset & ioArgument_ioBlockToExploreSet,
                                                                                      GALGAS_stringset & ioArgument_ioExploredBlockSet,
                                                                                      C_Compiler * /* inCompiler */
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38_ComputedBraTerminator * object = (const cPtr_ipic_31__38_ComputedBraTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38_ComputedBraTerminator) ;
  cEnumerator_lstringlist enumerator_1980 (object->mAttribute_mTargetLabels, kEnumeration_up) ;
  while (enumerator_1980.hasCurrentObject ()) {
    const enumGalgasBool test_0 = ioArgument_ioExploredBlockSet.reader_hasKey (enumerator_1980.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (56)).operator_not (SOURCE_FILE_AT_LINE (56)).boolEnum () ;
    if (kBoolTrue == test_0) {
      ioArgument_ioBlockToExploreSet.addAssign_operation (enumerator_1980.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (57)) ;
    }
    enumerator_1980.gotoNextObject () ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_ComputedBraTerminator_exploreAccessibleBlocks (void) {
  enterCategoryMethod_exploreAccessibleBlocks (kTypeDescriptor_GALGAS_ipic_31__38_ComputedBraTerminator.mSlotID,
                                               categoryMethod_ipic_31__38_ComputedBraTerminator_exploreAccessibleBlocks) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_ComputedBraTerminator_exploreAccessibleBlocks (defineCategoryMethod_ipic_31__38_ComputedBraTerminator_exploreAccessibleBlocks, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@ipic18ComputedGotoTerminator exploreAccessibleBlocks'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_ComputedGotoTerminator_exploreAccessibleBlocks (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                                       GALGAS_stringset & ioArgument_ioBlockToExploreSet,
                                                                                       GALGAS_stringset & ioArgument_ioExploredBlockSet,
                                                                                       C_Compiler * /* inCompiler */
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38_ComputedGotoTerminator * object = (const cPtr_ipic_31__38_ComputedGotoTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38_ComputedGotoTerminator) ;
  cEnumerator_lstringlist enumerator_2378 (object->mAttribute_mTargetLabels, kEnumeration_up) ;
  while (enumerator_2378.hasCurrentObject ()) {
    const enumGalgasBool test_0 = ioArgument_ioExploredBlockSet.reader_hasKey (enumerator_2378.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (69)).operator_not (SOURCE_FILE_AT_LINE (69)).boolEnum () ;
    if (kBoolTrue == test_0) {
      ioArgument_ioBlockToExploreSet.addAssign_operation (enumerator_2378.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (70)) ;
    }
    enumerator_2378.gotoNextObject () ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_ComputedGotoTerminator_exploreAccessibleBlocks (void) {
  enterCategoryMethod_exploreAccessibleBlocks (kTypeDescriptor_GALGAS_ipic_31__38_ComputedGotoTerminator.mSlotID,
                                               categoryMethod_ipic_31__38_ComputedGotoTerminator_exploreAccessibleBlocks) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_ComputedGotoTerminator_exploreAccessibleBlocks (defineCategoryMethod_ipic_31__38_ComputedGotoTerminator_exploreAccessibleBlocks, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@ipic18JumpTerminator exploreAccessibleBlocks' *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_JumpTerminator_exploreAccessibleBlocks (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                               GALGAS_stringset & ioArgument_ioBlockToExploreSet,
                                                                               GALGAS_stringset & ioArgument_ioExploredBlockSet,
                                                                               C_Compiler * /* inCompiler */
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38_JumpTerminator * object = (const cPtr_ipic_31__38_JumpTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38_JumpTerminator) ;
  const enumGalgasBool test_0 = ioArgument_ioExploredBlockSet.reader_hasKey (object->mAttribute_mLabel.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (81)).operator_not (SOURCE_FILE_AT_LINE (81)).boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioBlockToExploreSet.addAssign_operation (object->mAttribute_mLabel.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (82)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_JumpTerminator_exploreAccessibleBlocks (void) {
  enterCategoryMethod_exploreAccessibleBlocks (kTypeDescriptor_GALGAS_ipic_31__38_JumpTerminator.mSlotID,
                                               categoryMethod_ipic_31__38_JumpTerminator_exploreAccessibleBlocks) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_JumpTerminator_exploreAccessibleBlocks (defineCategoryMethod_ipic_31__38_JumpTerminator_exploreAccessibleBlocks, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@ipic18ConditionalJumpTerminator exploreAccessibleBlocks'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_ConditionalJumpTerminator_exploreAccessibleBlocks (const cPtr_ipic_31__38_AbstractBlockTerminator * inObject,
                                                                                          GALGAS_stringset & ioArgument_ioBlockToExploreSet,
                                                                                          GALGAS_stringset & ioArgument_ioExploredBlockSet,
                                                                                          C_Compiler * /* inCompiler */
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38_ConditionalJumpTerminator * object = (const cPtr_ipic_31__38_ConditionalJumpTerminator *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38_ConditionalJumpTerminator) ;
  const enumGalgasBool test_0 = ioArgument_ioExploredBlockSet.reader_hasKey (object->mAttribute_mTargetLabelWhenTrue.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (92)).operator_not (SOURCE_FILE_AT_LINE (92)).boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioBlockToExploreSet.addAssign_operation (object->mAttribute_mTargetLabelWhenTrue.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (93)) ;
  }
  const enumGalgasBool test_1 = ioArgument_ioExploredBlockSet.reader_hasKey (object->mAttribute_mTargetLabelWhenFalse.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (95)).operator_not (SOURCE_FILE_AT_LINE (95)).boolEnum () ;
  if (kBoolTrue == test_1) {
    ioArgument_ioBlockToExploreSet.addAssign_operation (object->mAttribute_mTargetLabelWhenFalse.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (96)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_ConditionalJumpTerminator_exploreAccessibleBlocks (void) {
  enterCategoryMethod_exploreAccessibleBlocks (kTypeDescriptor_GALGAS_ipic_31__38_ConditionalJumpTerminator.mSlotID,
                                               categoryMethod_ipic_31__38_ConditionalJumpTerminator_exploreAccessibleBlocks) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_ConditionalJumpTerminator_exploreAccessibleBlocks (defineCategoryMethod_ipic_31__38_ConditionalJumpTerminator_exploreAccessibleBlocks, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@ipic18ComputedRETLWTerminator exploreAccessibleBlocks'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_ComputedRETLWTerminator_exploreAccessibleBlocks (const cPtr_ipic_31__38_AbstractBlockTerminator * /* inObject */,
                                                                                        GALGAS_stringset & /* ioArgument_ioBlockToExploreSet */,
                                                                                        GALGAS_stringset & /* ioArgument_ioExploredBlockSet */,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_ComputedRETLWTerminator_exploreAccessibleBlocks (void) {
  enterCategoryMethod_exploreAccessibleBlocks (kTypeDescriptor_GALGAS_ipic_31__38_ComputedRETLWTerminator.mSlotID,
                                               categoryMethod_ipic_31__38_ComputedRETLWTerminator_exploreAccessibleBlocks) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_ComputedRETLWTerminator_exploreAccessibleBlocks (defineCategoryMethod_ipic_31__38_ComputedRETLWTerminator_exploreAccessibleBlocks, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@ipic18ReturnTerminator exploreAccessibleBlocks'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_ReturnTerminator_exploreAccessibleBlocks (const cPtr_ipic_31__38_AbstractBlockTerminator * /* inObject */,
                                                                                 GALGAS_stringset & /* ioArgument_ioBlockToExploreSet */,
                                                                                 GALGAS_stringset & /* ioArgument_ioExploredBlockSet */,
                                                                                 C_Compiler * /* inCompiler */
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_ReturnTerminator_exploreAccessibleBlocks (void) {
  enterCategoryMethod_exploreAccessibleBlocks (kTypeDescriptor_GALGAS_ipic_31__38_ReturnTerminator.mSlotID,
                                               categoryMethod_ipic_31__38_ReturnTerminator_exploreAccessibleBlocks) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_ReturnTerminator_exploreAccessibleBlocks (defineCategoryMethod_ipic_31__38_ReturnTerminator_exploreAccessibleBlocks, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@ipic18RetlwTerminator exploreAccessibleBlocks'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_RetlwTerminator_exploreAccessibleBlocks (const cPtr_ipic_31__38_AbstractBlockTerminator * /* inObject */,
                                                                                GALGAS_stringset & /* ioArgument_ioBlockToExploreSet */,
                                                                                GALGAS_stringset & /* ioArgument_ioExploredBlockSet */,
                                                                                C_Compiler * /* inCompiler */
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_RetlwTerminator_exploreAccessibleBlocks (void) {
  enterCategoryMethod_exploreAccessibleBlocks (kTypeDescriptor_GALGAS_ipic_31__38_RetlwTerminator.mSlotID,
                                               categoryMethod_ipic_31__38_RetlwTerminator_exploreAccessibleBlocks) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_RetlwTerminator_exploreAccessibleBlocks (defineCategoryMethod_ipic_31__38_RetlwTerminator_exploreAccessibleBlocks, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@ipic18RetfieTerminator exploreAccessibleBlocks'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_RetfieTerminator_exploreAccessibleBlocks (const cPtr_ipic_31__38_AbstractBlockTerminator * /* inObject */,
                                                                                 GALGAS_stringset & /* ioArgument_ioBlockToExploreSet */,
                                                                                 GALGAS_stringset & /* ioArgument_ioExploredBlockSet */,
                                                                                 C_Compiler * /* inCompiler */
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_RetfieTerminator_exploreAccessibleBlocks (void) {
  enterCategoryMethod_exploreAccessibleBlocks (kTypeDescriptor_GALGAS_ipic_31__38_RetfieTerminator.mSlotID,
                                               categoryMethod_ipic_31__38_RetfieTerminator_exploreAccessibleBlocks) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_RetfieTerminator_exploreAccessibleBlocks (defineCategoryMethod_ipic_31__38_RetfieTerminator_exploreAccessibleBlocks, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//   Category method '@ipic18SequentialInstruction buildCalledRoutineSet'    *
//                                                                             *
//-----------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_ipic_31__38_SequentialInstruction_buildCalledRoutineSet> gCategoryMethodTable_ipic_31__38_SequentialInstruction_buildCalledRoutineSet ;

//-----------------------------------------------------------------------------*

void enterCategoryMethod_buildCalledRoutineSet (const int32_t inClassIndex,
                                                categoryMethodSignature_ipic_31__38_SequentialInstruction_buildCalledRoutineSet inMethod) {
  gCategoryMethodTable_ipic_31__38_SequentialInstruction_buildCalledRoutineSet.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//-----------------------------------------------------------------------------*

void callCategoryMethod_buildCalledRoutineSet (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                               GALGAS_stringset & io_ioRoutineCalledSet,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_ipic_31__38_SequentialInstruction) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_ipic_31__38_SequentialInstruction_buildCalledRoutineSet f = NULL ;
    if (classIndex < gCategoryMethodTable_ipic_31__38_SequentialInstruction_buildCalledRoutineSet.count ()) {
      f = gCategoryMethodTable_ipic_31__38_SequentialInstruction_buildCalledRoutineSet (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_ipic_31__38_SequentialInstruction_buildCalledRoutineSet.count ()) {
           f = gCategoryMethodTable_ipic_31__38_SequentialInstruction_buildCalledRoutineSet (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_ipic_31__38_SequentialInstruction_buildCalledRoutineSet.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, io_ioRoutineCalledSet, inCompiler COMMA_THERE) ;
    }
  }
}

//-----------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38_SequentialInstruction_buildCalledRoutineSet (const cPtr_ipic_31__38_SequentialInstruction * /* inObject */,
                                                                                    GALGAS_stringset & /* ioArgument_ioRoutineCalledSet */,
                                                                                    C_Compiler * /* inCompiler */
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38_SequentialInstruction_buildCalledRoutineSet (void) {
  enterCategoryMethod_buildCalledRoutineSet (kTypeDescriptor_GALGAS_ipic_31__38_SequentialInstruction.mSlotID,
                                             categoryMethod_ipic_31__38_SequentialInstruction_buildCalledRoutineSet) ;
}

//-----------------------------------------------------------------------------*

static void freeCategoryMethod_ipic_31__38_SequentialInstruction_buildCalledRoutineSet (void) {
  gCategoryMethodTable_ipic_31__38_SequentialInstruction_buildCalledRoutineSet.free () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38_SequentialInstruction_buildCalledRoutineSet (defineCategoryMethod_ipic_31__38_SequentialInstruction_buildCalledRoutineSet,
                                                                                    freeCategoryMethod_ipic_31__38_SequentialInstruction_buildCalledRoutineSet) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@ipic18_intermediate_JSR buildCalledRoutineSet'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_JSR_buildCalledRoutineSet (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                      GALGAS_stringset & ioArgument_ioRoutineCalledSet,
                                                                                      C_Compiler * /* inCompiler */
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_JSR * object = (const cPtr_ipic_31__38__5F_intermediate_5F_JSR *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_JSR) ;
  ioArgument_ioRoutineCalledSet.addAssign_operation (object->mAttribute_mTargetLabel.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (148)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_JSR_buildCalledRoutineSet (void) {
  enterCategoryMethod_buildCalledRoutineSet (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_JSR.mSlotID,
                                             categoryMethod_ipic_31__38__5F_intermediate_5F_JSR_buildCalledRoutineSet) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_JSR_buildCalledRoutineSet (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_JSR_buildCalledRoutineSet, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@ipic18_intermediate_instruction_computed_rcall buildCalledRoutineSet'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall_buildCalledRoutineSet (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                                                   GALGAS_stringset & ioArgument_ioRoutineCalledSet,
                                                                                                                   C_Compiler * inCompiler
                                                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall * object = (const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall) ;
  cEnumerator_ipic_31__38_SequentialInstructionList enumerator_5151 (object->mAttribute_mTargetInstructions, kEnumeration_up) ;
  while (enumerator_5151.hasCurrentObject ()) {
    callCategoryMethod_buildCalledRoutineSet ((const cPtr_ipic_31__38_SequentialInstruction *) enumerator_5151.current_mInstruction (HERE).ptr (), ioArgument_ioRoutineCalledSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (157)) ;
    enumerator_5151.gotoNextObject () ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall_buildCalledRoutineSet (void) {
  enterCategoryMethod_buildCalledRoutineSet (kTypeDescriptor_GALGAS_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall.mSlotID,
                                             categoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall_buildCalledRoutineSet) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall_buildCalledRoutineSet (defineCategoryMethod_ipic_31__38__5F_intermediate_5F_instruction_5F_computed_5F_rcall_buildCalledRoutineSet, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@ipic18_condition_skip_instruction buildCalledRoutineSet'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_ipic_31__38__5F_condition_5F_skip_5F_instruction_buildCalledRoutineSet (const cPtr_ipic_31__38_SequentialInstruction * inObject,
                                                                                                   GALGAS_stringset & ioArgument_ioRoutineCalledSet,
                                                                                                   C_Compiler * inCompiler
                                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_ipic_31__38__5F_condition_5F_skip_5F_instruction * object = (const cPtr_ipic_31__38__5F_condition_5F_skip_5F_instruction *) inObject ;
  macroValidSharedObject (object, const cPtr_ipic_31__38__5F_condition_5F_skip_5F_instruction) ;
  callCategoryMethod_buildCalledRoutineSet ((const cPtr_ipic_31__38_SequentialInstruction *) object->mAttribute_mEmbeddedInstruction.ptr (), ioArgument_ioRoutineCalledSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (166)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_ipic_31__38__5F_condition_5F_skip_5F_instruction_buildCalledRoutineSet (void) {
  enterCategoryMethod_buildCalledRoutineSet (kTypeDescriptor_GALGAS_ipic_31__38__5F_condition_5F_skip_5F_instruction.mSlotID,
                                             categoryMethod_ipic_31__38__5F_condition_5F_skip_5F_instruction_buildCalledRoutineSet) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_ipic_31__38__5F_condition_5F_skip_5F_instruction_buildCalledRoutineSet (defineCategoryMethod_ipic_31__38__5F_condition_5F_skip_5F_instruction_buildCalledRoutineSet, NULL) ;

//-----------------------------------------------------------------------------*

GALGAS_blockMapForStackComputation_2E_element::GALGAS_blockMapForStackComputation_2E_element (void) :
mAttribute_lkey (),
mAttribute_mBlock () {
}

//-----------------------------------------------------------------------------*

GALGAS_blockMapForStackComputation_2E_element::~ GALGAS_blockMapForStackComputation_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_blockMapForStackComputation_2E_element::GALGAS_blockMapForStackComputation_2E_element (const GALGAS_lstring & inOperand0,
                                                                                              const GALGAS_ipic_31__38_Block & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mBlock (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_blockMapForStackComputation_2E_element GALGAS_blockMapForStackComputation_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                              const GALGAS_ipic_31__38_Block & inOperand1 
                                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_blockMapForStackComputation_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_blockMapForStackComputation_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_blockMapForStackComputation_2E_element::objectCompare (const GALGAS_blockMapForStackComputation_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mBlock.objectCompare (inOperand.mAttribute_mBlock) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_blockMapForStackComputation_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mBlock.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_blockMapForStackComputation_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mBlock.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_blockMapForStackComputation_2E_element::description (C_String & ioString,
                                                                 const int32_t inIndentation) const {
  ioString << "<struct @blockMapForStackComputation.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mBlock.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_blockMapForStackComputation_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_ipic_31__38_Block GALGAS_blockMapForStackComputation_2E_element::reader_mBlock (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBlock ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                  @blockMapForStackComputation.element type                  *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_blockMapForStackComputation_2E_element ("blockMapForStackComputation.element",
                                                               NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_blockMapForStackComputation_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_blockMapForStackComputation_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_blockMapForStackComputation_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_blockMapForStackComputation_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_blockMapForStackComputation_2E_element GALGAS_blockMapForStackComputation_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_blockMapForStackComputation_2E_element result ;
  const GALGAS_blockMapForStackComputation_2E_element * p = (const GALGAS_blockMapForStackComputation_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_blockMapForStackComputation_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("blockMapForStackComputation.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineCallMap_2E_element::GALGAS_routineCallMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mCalledRoutineSet () {
}

//-----------------------------------------------------------------------------*

GALGAS_routineCallMap_2E_element::~ GALGAS_routineCallMap_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_routineCallMap_2E_element::GALGAS_routineCallMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                    const GALGAS_stringset & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mCalledRoutineSet (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_routineCallMap_2E_element GALGAS_routineCallMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_routineCallMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                           GALGAS_stringset::constructor_emptySet (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineCallMap_2E_element GALGAS_routineCallMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                    const GALGAS_stringset & inOperand1 
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_routineCallMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_routineCallMap_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_routineCallMap_2E_element::objectCompare (const GALGAS_routineCallMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCalledRoutineSet.objectCompare (inOperand.mAttribute_mCalledRoutineSet) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_routineCallMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mCalledRoutineSet.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_routineCallMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mCalledRoutineSet.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_routineCallMap_2E_element::description (C_String & ioString,
                                                    const int32_t inIndentation) const {
  ioString << "<struct @routineCallMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCalledRoutineSet.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_routineCallMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_stringset GALGAS_routineCallMap_2E_element::reader_mCalledRoutineSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCalledRoutineSet ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                        @routineCallMap.element type                         *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_routineCallMap_2E_element ("routineCallMap.element",
                                                  NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_routineCallMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_routineCallMap_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_routineCallMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_routineCallMap_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineCallMap_2E_element GALGAS_routineCallMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_routineCallMap_2E_element result ;
  const GALGAS_routineCallMap_2E_element * p = (const GALGAS_routineCallMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_routineCallMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("routineCallMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineStackRequirementMap_2E_element::GALGAS_routineStackRequirementMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mLevels () {
}

//-----------------------------------------------------------------------------*

GALGAS_routineStackRequirementMap_2E_element::~ GALGAS_routineStackRequirementMap_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_routineStackRequirementMap_2E_element::GALGAS_routineStackRequirementMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                                            const GALGAS_uint & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mLevels (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_routineStackRequirementMap_2E_element GALGAS_routineStackRequirementMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_routineStackRequirementMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                       GALGAS_uint::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineStackRequirementMap_2E_element GALGAS_routineStackRequirementMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                            const GALGAS_uint & inOperand1 
                                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_routineStackRequirementMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_routineStackRequirementMap_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_routineStackRequirementMap_2E_element::objectCompare (const GALGAS_routineStackRequirementMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLevels.objectCompare (inOperand.mAttribute_mLevels) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_routineStackRequirementMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mLevels.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_routineStackRequirementMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mLevels.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_routineStackRequirementMap_2E_element::description (C_String & ioString,
                                                                const int32_t inIndentation) const {
  ioString << "<struct @routineStackRequirementMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLevels.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_routineStackRequirementMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_uint GALGAS_routineStackRequirementMap_2E_element::reader_mLevels (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLevels ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                  @routineStackRequirementMap.element type                   *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_routineStackRequirementMap_2E_element ("routineStackRequirementMap.element",
                                                              NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_routineStackRequirementMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_routineStackRequirementMap_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_routineStackRequirementMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_routineStackRequirementMap_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineStackRequirementMap_2E_element GALGAS_routineStackRequirementMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                          C_Compiler * inCompiler
                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_routineStackRequirementMap_2E_element result ;
  const GALGAS_routineStackRequirementMap_2E_element * p = (const GALGAS_routineStackRequirementMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_routineStackRequirementMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("routineStackRequirementMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


