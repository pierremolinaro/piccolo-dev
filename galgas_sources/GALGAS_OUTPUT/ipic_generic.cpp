//---------------------------------------------------------------------------*
//                                                                           *
//                         File 'ipic_generic.cpp'                           *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     november 1st, 2010, at 14h59'36"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "ipic_generic.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "ipic_generic.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'checkCurrentEmitAddress'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkCurrentEmitAddress (const GALGAS_uint constinArgument_inCurrentAddress,
                                      C_Compiler * inCompiler
                                      COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableDeclarationForGeneration
  GALGAS_uint var_addr ;
  { //-------- @routineCallInstructionForGeneration
  routine_currentEmitAddress (var_addr, inCompiler COMMA_SOURCE_FILE_AT_LINE (30)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  //--- @andExpressionForGeneration
  //--- @equalExpressionForGeneration
  GALGAS_uint temp_0 (GALGAS_uint::constructor_errorCount (inCompiler COMMA_SOURCE_FILE_AT_LINE (31))) ;
  //--- @literalUIntExpressionForGeneration
  GALGAS_uint temp_1 ((PMUInt32) 0U) ;
  GALGAS_bool temp_2 (kIsEqual, temp_0.objectCompare (temp_1)) ;
  //--- @notEqualExpressionForGeneration
  GALGAS_bool temp_3 (kIsNotEqual, var_addr.objectCompare (constinArgument_inCurrentAddress)) ;
  GALGAS_bool temp_4 (temp_2.operator_and (temp_3 COMMA_SOURCE_FILE_AT_LINE (31))) ;
  if (temp_4.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    GALGAS_location temp_5 (inCompiler->here ()) ;
    //--- @concatExpressionForGeneration
    //--- @concatExpressionForGeneration
    //--- @concatExpressionForGeneration
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_6 ("internal error: current emit address is ") ;
    //--- @readerCallExpressionForGeneration
    GALGAS_string temp_7 (var_addr.reader_hexString (SOURCE_FILE_AT_LINE (32))) ;
    GALGAS_string temp_8 (temp_6.operator_concat (temp_7 COMMA_SOURCE_FILE_AT_LINE (32))) ;
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_9 ("; it should be ") ;
    GALGAS_string temp_10 (temp_8.operator_concat (temp_9 COMMA_SOURCE_FILE_AT_LINE (33))) ;
    //--- @readerCallExpressionForGeneration
    GALGAS_string temp_11 (constinArgument_inCurrentAddress.reader_hexString (SOURCE_FILE_AT_LINE (33))) ;
    GALGAS_string temp_12 (temp_10.operator_concat (temp_11 COMMA_SOURCE_FILE_AT_LINE (33))) ;
    inCompiler->emitSemanticError (temp_5, temp_12 COMMA_SOURCE_FILE_AT_LINE (32)) ;
  }
}


//---------------------------------------------------------------------------*

cMapElement_constantMap::cMapElement_constantMap (const GALGAS_lstring & inKey,
                                                  const GALGAS_sint & in_mValue
                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mValue (in_mValue) {
}

//---------------------------------------------------------------------------*

bool cMapElement_constantMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mValue.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_constantMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_constantMap (mAttribute_lkey, mAttribute_mValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_constantMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
// mAttribute_mValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

enumComparisonResult cMapElement_constantMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_constantMap * operand = (cMapElement_constantMap *) inOperand ;
  enumComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mValue.objectCompare (operand->mAttribute_mValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_constantMap::GALGAS_constantMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_constantMap::GALGAS_constantMap (const GALGAS_constantMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_constantMap & GALGAS_constantMap::operator = (const GALGAS_constantMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_constantMap GALGAS_constantMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_constantMap result ;
  result.createNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_constantMap GALGAS_constantMap::constructor_mapWithMapToOverride (const GALGAS_constantMap & inMapToOverride
                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_constantMap result ;
  result.createNewEmptyMap (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_constantMap GALGAS_constantMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_constantMap result ;
  overridenMap (result) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_constantMap::modifier_insertKey (GALGAS_lstring inKey,
                                             GALGAS_sint inArgument0,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  cMapElement_constantMap * p = NULL ;
  macroMyNew (p, cMapElement_constantMap (inKey, inArgument0 COMMA_HERE)) ;
    capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroReleaseObject (p) ;
  const utf32 kInsertErrorMessage [44] = {
    TO_UNICODE ('t'),
    TO_UNICODE ('h'),
    TO_UNICODE ('e'),
    TO_UNICODE (' '),
    TO_UNICODE ('\''),
    TO_UNICODE ('%'),
    TO_UNICODE ('K'),
    TO_UNICODE ('\''),
    TO_UNICODE (' '),
    TO_UNICODE ('c'),
    TO_UNICODE ('o'),
    TO_UNICODE ('n'),
    TO_UNICODE ('s'),
    TO_UNICODE ('t'),
    TO_UNICODE ('a'),
    TO_UNICODE ('n'),
    TO_UNICODE ('t'),
    TO_UNICODE (' '),
    TO_UNICODE ('i'),
    TO_UNICODE ('s'),
    TO_UNICODE (' '),
    TO_UNICODE ('a'),
    TO_UNICODE ('l'),
    TO_UNICODE ('r'),
    TO_UNICODE ('e'),
    TO_UNICODE ('a'),
    TO_UNICODE ('d'),
    TO_UNICODE ('y'),
    TO_UNICODE (' '),
    TO_UNICODE ('d'),
    TO_UNICODE ('e'),
    TO_UNICODE ('c'),
    TO_UNICODE ('l'),
    TO_UNICODE ('a'),
    TO_UNICODE ('r'),
    TO_UNICODE ('e'),
    TO_UNICODE ('d'),
    TO_UNICODE (' '),
    TO_UNICODE ('i'),
    TO_UNICODE ('n'),
    TO_UNICODE (' '),
    TO_UNICODE ('%'),
    TO_UNICODE ('L'),
    TO_UNICODE (0)
  } ;
  const utf32 kShadowErrorMessage [1] = {
    TO_UNICODE (0)
  } ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

static const utf32 kSearchErrorMessage_constantMap_searchKey [34] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('%'),
  TO_UNICODE ('K'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE ('s'),
  TO_UNICODE ('t'),
  TO_UNICODE ('a'),
  TO_UNICODE ('n'),
  TO_UNICODE ('t'),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('s'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('t'),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('l'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------*

void GALGAS_constantMap::method_searchKey (GALGAS_lstring inKey,
                                           GALGAS_sint & outArgument0,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = performSearch (inKey, inCompiler, kSearchErrorMessage_constantMap_searchKey COMMA_THERE) ;
  const cMapElement_constantMap * p = (const cMapElement_constantMap *) attributes ;
  if (NULL != p) {
    macroValidObject (p, const cMapElement_constantMap) ;
    outArgument0 = p->mAttribute_mValue ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_sint GALGAS_constantMap::reader_mValueForKey (const GALGAS_string & inKey,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_constantMap * p = (const cMapElement_constantMap *) attributes ;
  GALGAS_sint result ;
  if (NULL != p) {
    macroValidObject (p, const cMapElement_constantMap) ;
    result = p->mAttribute_mValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_constantMap::modifier_setMValueForKey (GALGAS_sint inAttributeValue,
                                                   GALGAS_string inKey,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_constantMap * p = (cMapElement_constantMap *) attributes ;
  if (NULL != p) {
    macroValidObject (p, cMapElement_constantMap) ;
    p->mAttribute_mValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_constantMap * GALGAS_constantMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                        const GALGAS_string & inKey
                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_constantMap * result = (cMapElement_constantMap *) p ;
  macroNullOrValidObject (result, cMapElement_constantMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_constantMap * GALGAS_constantMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                           const GALGAS_lstring & inKey
                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_constantMap_searchKey COMMA_THERE) ;
  cMapElement_constantMap * result = (cMapElement_constantMap *) p ;
  macroNullOrValidObject (result, cMapElement_constantMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_constantMap::cEnumerator_constantMap (const GALGAS_constantMap & inEnumeratedObject,
                                                  const bool inAscending) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inAscending) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_constantMap::current_lkey (void) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr () ;
  macroValidObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_sint cEnumerator_constantMap::current_mValue (void) const {
  const cMapElement_constantMap * p = (const cMapElement_constantMap *) currentObjectPtr () ;
  macroValidObject (p, const cMapElement_constantMap) ;
  return p->mAttribute_mValue ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @constantMap type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_constantMap ("constantMap",
                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_constantMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_constantMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_constantMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_constantMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_constantMap GALGAS_constantMap::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler,
                                                      const GALGAS_location & inErrorLocation
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_constantMap result ;
  const GALGAS_constantMap * p = (const GALGAS_constantMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_constantMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "constantMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_routineMap::cMapElement_routineMap (const GALGAS_lstring & inKey,
                                                const GALGAS_bool & in_mIsNoReturn,
                                                const GALGAS_uint & in_mRequiredBank,
                                                const GALGAS_uint & in_mReturnedBank,
                                                const GALGAS_bool & in_mPreservesBank
                                                COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mIsNoReturn (in_mIsNoReturn),
mAttribute_mRequiredBank (in_mRequiredBank),
mAttribute_mReturnedBank (in_mReturnedBank),
mAttribute_mPreservesBank (in_mPreservesBank) {
}

//---------------------------------------------------------------------------*

bool cMapElement_routineMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIsNoReturn.isValid () && mAttribute_mRequiredBank.isValid () && mAttribute_mReturnedBank.isValid () && mAttribute_mPreservesBank.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_routineMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_routineMap (mAttribute_lkey, mAttribute_mIsNoReturn, mAttribute_mRequiredBank, mAttribute_mReturnedBank, mAttribute_mPreservesBank COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_routineMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
// mAttribute_mIsNoReturn.description (ioString, inIndentation) ;
// mAttribute_mRequiredBank.description (ioString, inIndentation) ;
// mAttribute_mReturnedBank.description (ioString, inIndentation) ;
// mAttribute_mPreservesBank.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

enumComparisonResult cMapElement_routineMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_routineMap * operand = (cMapElement_routineMap *) inOperand ;
  enumComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mIsNoReturn.objectCompare (operand->mAttribute_mIsNoReturn) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRequiredBank.objectCompare (operand->mAttribute_mRequiredBank) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mReturnedBank.objectCompare (operand->mAttribute_mReturnedBank) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mPreservesBank.objectCompare (operand->mAttribute_mPreservesBank) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_routineMap::GALGAS_routineMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_routineMap::GALGAS_routineMap (const GALGAS_routineMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_routineMap & GALGAS_routineMap::operator = (const GALGAS_routineMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_routineMap GALGAS_routineMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_routineMap result ;
  result.createNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_routineMap GALGAS_routineMap::constructor_mapWithMapToOverride (const GALGAS_routineMap & inMapToOverride
                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_routineMap result ;
  result.createNewEmptyMap (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_routineMap GALGAS_routineMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_routineMap result ;
  overridenMap (result) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_routineMap::modifier_insertKey (GALGAS_lstring inKey,
                                            GALGAS_bool inArgument0,
                                            GALGAS_uint inArgument1,
                                            GALGAS_uint inArgument2,
                                            GALGAS_bool inArgument3,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  cMapElement_routineMap * p = NULL ;
  macroMyNew (p, cMapElement_routineMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
    capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroReleaseObject (p) ;
  const utf32 kInsertErrorMessage [43] = {
    TO_UNICODE ('t'),
    TO_UNICODE ('h'),
    TO_UNICODE ('e'),
    TO_UNICODE (' '),
    TO_UNICODE ('\''),
    TO_UNICODE ('%'),
    TO_UNICODE ('K'),
    TO_UNICODE ('\''),
    TO_UNICODE (' '),
    TO_UNICODE ('r'),
    TO_UNICODE ('o'),
    TO_UNICODE ('u'),
    TO_UNICODE ('t'),
    TO_UNICODE ('i'),
    TO_UNICODE ('n'),
    TO_UNICODE ('e'),
    TO_UNICODE (' '),
    TO_UNICODE ('i'),
    TO_UNICODE ('s'),
    TO_UNICODE (' '),
    TO_UNICODE ('a'),
    TO_UNICODE ('l'),
    TO_UNICODE ('r'),
    TO_UNICODE ('e'),
    TO_UNICODE ('a'),
    TO_UNICODE ('d'),
    TO_UNICODE ('y'),
    TO_UNICODE (' '),
    TO_UNICODE ('d'),
    TO_UNICODE ('e'),
    TO_UNICODE ('c'),
    TO_UNICODE ('l'),
    TO_UNICODE ('a'),
    TO_UNICODE ('r'),
    TO_UNICODE ('e'),
    TO_UNICODE ('d'),
    TO_UNICODE (' '),
    TO_UNICODE ('i'),
    TO_UNICODE ('n'),
    TO_UNICODE (' '),
    TO_UNICODE ('%'),
    TO_UNICODE ('L'),
    TO_UNICODE (0)
  } ;
  const utf32 kShadowErrorMessage [1] = {
    TO_UNICODE (0)
  } ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

static const utf32 kSearchErrorMessage_routineMap_searchKey [33] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('%'),
  TO_UNICODE ('K'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('r'),
  TO_UNICODE ('o'),
  TO_UNICODE ('u'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('s'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('t'),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('l'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------*

void GALGAS_routineMap::method_searchKey (GALGAS_lstring inKey,
                                          GALGAS_bool & outArgument0,
                                          GALGAS_uint & outArgument1,
                                          GALGAS_uint & outArgument2,
                                          GALGAS_bool & outArgument3,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = performSearch (inKey, inCompiler, kSearchErrorMessage_routineMap_searchKey COMMA_THERE) ;
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) attributes ;
  if (NULL != p) {
    macroValidObject (p, const cMapElement_routineMap) ;
    outArgument0 = p->mAttribute_mIsNoReturn ;
    outArgument1 = p->mAttribute_mRequiredBank ;
    outArgument2 = p->mAttribute_mReturnedBank ;
    outArgument3 = p->mAttribute_mPreservesBank ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineMap::reader_mIsNoReturnForKey (const GALGAS_string & inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidObject (p, const cMapElement_routineMap) ;
    result = p->mAttribute_mIsNoReturn ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_routineMap::reader_mRequiredBankForKey (const GALGAS_string & inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidObject (p, const cMapElement_routineMap) ;
    result = p->mAttribute_mRequiredBank ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_routineMap::reader_mReturnedBankForKey (const GALGAS_string & inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidObject (p, const cMapElement_routineMap) ;
    result = p->mAttribute_mReturnedBank ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_routineMap::reader_mPreservesBankForKey (const GALGAS_string & inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidObject (p, const cMapElement_routineMap) ;
    result = p->mAttribute_mPreservesBank ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_routineMap::modifier_setMIsNoReturnForKey (GALGAS_bool inAttributeValue,
                                                       GALGAS_string inKey,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMap * p = (cMapElement_routineMap *) attributes ;
  if (NULL != p) {
    macroValidObject (p, cMapElement_routineMap) ;
    p->mAttribute_mIsNoReturn = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_routineMap::modifier_setMRequiredBankForKey (GALGAS_uint inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMap * p = (cMapElement_routineMap *) attributes ;
  if (NULL != p) {
    macroValidObject (p, cMapElement_routineMap) ;
    p->mAttribute_mRequiredBank = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_routineMap::modifier_setMReturnedBankForKey (GALGAS_uint inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMap * p = (cMapElement_routineMap *) attributes ;
  if (NULL != p) {
    macroValidObject (p, cMapElement_routineMap) ;
    p->mAttribute_mReturnedBank = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_routineMap::modifier_setMPreservesBankForKey (GALGAS_bool inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMap * p = (cMapElement_routineMap *) attributes ;
  if (NULL != p) {
    macroValidObject (p, cMapElement_routineMap) ;
    p->mAttribute_mPreservesBank = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_routineMap * GALGAS_routineMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                      const GALGAS_string & inKey
                                                                                      COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMap * result = (cMapElement_routineMap *) p ;
  macroNullOrValidObject (result, cMapElement_routineMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_routineMap * GALGAS_routineMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                         const GALGAS_lstring & inKey
                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_routineMap_searchKey COMMA_THERE) ;
  cMapElement_routineMap * result = (cMapElement_routineMap *) p ;
  macroNullOrValidObject (result, cMapElement_routineMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_routineMap::cEnumerator_routineMap (const GALGAS_routineMap & inEnumeratedObject,
                                                const bool inAscending) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inAscending) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_routineMap::current_lkey (void) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr () ;
  macroValidObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_routineMap::current_mIsNoReturn (void) const {
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) currentObjectPtr () ;
  macroValidObject (p, const cMapElement_routineMap) ;
  return p->mAttribute_mIsNoReturn ;
}

//---------------------------------------------------------------------------*

GALGAS_uint cEnumerator_routineMap::current_mRequiredBank (void) const {
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) currentObjectPtr () ;
  macroValidObject (p, const cMapElement_routineMap) ;
  return p->mAttribute_mRequiredBank ;
}

//---------------------------------------------------------------------------*

GALGAS_uint cEnumerator_routineMap::current_mReturnedBank (void) const {
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) currentObjectPtr () ;
  macroValidObject (p, const cMapElement_routineMap) ;
  return p->mAttribute_mReturnedBank ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_routineMap::current_mPreservesBank (void) const {
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) currentObjectPtr () ;
  macroValidObject (p, const cMapElement_routineMap) ;
  return p->mAttribute_mPreservesBank ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @routineMap type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_routineMap ("routineMap",
                                   NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_routineMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_routineMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_routineMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_routineMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_routineMap GALGAS_routineMap::extractObject (const GALGAS_object & inObject,
                                                    C_Compiler * inCompiler,
                                                    const GALGAS_location & inErrorLocation
                                                    COMMA_LOCATION_ARGS) {
  GALGAS_routineMap result ;
  const GALGAS_routineMap * p = (const GALGAS_routineMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_routineMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "routineMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_routineKind::GALGAS_routineKind (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------*

GALGAS_routineKind GALGAS_routineKind::constructor_regularRoutine (UNUSED_LOCATION_ARGS) {
  GALGAS_routineKind result ;
  result.mEnum = kEnum_regularRoutine ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_routineKind GALGAS_routineKind::constructor_noReturnRoutine (UNUSED_LOCATION_ARGS) {
  GALGAS_routineKind result ;
  result.mEnum = kEnum_noReturnRoutine ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_routineKind GALGAS_routineKind::constructor_interruptRoutine (UNUSED_LOCATION_ARGS) {
  GALGAS_routineKind result ;
  result.mEnum = kEnum_interruptRoutine ;
  return result ;
}

//---------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_routineKind [4] = {
  "(not built)",
  "regularRoutine",
  "noReturnRoutine",
  "interruptRoutine"
} ;

//---------------------------------------------------------------------------*

void GALGAS_routineKind::description (C_String & ioString,
                                      const PMSInt32 /* inIndentation */) const {
  ioString << "<enum @routineKind: " << gEnumNameArrayFor_routineKind [mEnum] << ">" ;
}

//---------------------------------------------------------------------------*

enumComparisonResult GALGAS_routineKind::objectCompare (const GALGAS_routineKind & inOperand) const {
  enumComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                             @routineKind type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_routineKind ("routineKind",
                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_routineKind::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_routineKind ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_routineKind::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_routineKind (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_routineKind GALGAS_routineKind::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler,
                                                      const GALGAS_location & inErrorLocation
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_routineKind result ;
  const GALGAS_routineKind * p = (const GALGAS_routineKind *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_routineKind *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "routineKind", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_symbolTableForOptimizations::cMapElement_symbolTableForOptimizations (const GALGAS_lstring & inKey,
                                                                                  const GALGAS_uint & in_mDefinitionLineIndex
                                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mDefinitionLineIndex (in_mDefinitionLineIndex) {
}

//---------------------------------------------------------------------------*

bool cMapElement_symbolTableForOptimizations::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mDefinitionLineIndex.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_symbolTableForOptimizations::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_symbolTableForOptimizations (mAttribute_lkey, mAttribute_mDefinitionLineIndex COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_symbolTableForOptimizations::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
// mAttribute_mDefinitionLineIndex.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

enumComparisonResult cMapElement_symbolTableForOptimizations::compare (const cCollectionElement * inOperand) const {
  cMapElement_symbolTableForOptimizations * operand = (cMapElement_symbolTableForOptimizations *) inOperand ;
  enumComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mDefinitionLineIndex.objectCompare (operand->mAttribute_mDefinitionLineIndex) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_symbolTableForOptimizations::GALGAS_symbolTableForOptimizations (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_symbolTableForOptimizations::GALGAS_symbolTableForOptimizations (const GALGAS_symbolTableForOptimizations & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_symbolTableForOptimizations & GALGAS_symbolTableForOptimizations::operator = (const GALGAS_symbolTableForOptimizations & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_symbolTableForOptimizations GALGAS_symbolTableForOptimizations::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_symbolTableForOptimizations result ;
  result.createNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_symbolTableForOptimizations GALGAS_symbolTableForOptimizations::constructor_mapWithMapToOverride (const GALGAS_symbolTableForOptimizations & inMapToOverride
                                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_symbolTableForOptimizations result ;
  result.createNewEmptyMap (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_symbolTableForOptimizations GALGAS_symbolTableForOptimizations::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_symbolTableForOptimizations result ;
  overridenMap (result) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_symbolTableForOptimizations::modifier_insertKey (GALGAS_lstring inKey,
                                                             GALGAS_uint inArgument0,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cMapElement_symbolTableForOptimizations * p = NULL ;
  macroMyNew (p, cMapElement_symbolTableForOptimizations (inKey, inArgument0 COMMA_HERE)) ;
    capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroReleaseObject (p) ;
  const utf32 kInsertErrorMessage [41] = {
    TO_UNICODE ('t'),
    TO_UNICODE ('h'),
    TO_UNICODE ('e'),
    TO_UNICODE (' '),
    TO_UNICODE ('\''),
    TO_UNICODE ('%'),
    TO_UNICODE ('K'),
    TO_UNICODE ('\''),
    TO_UNICODE (' '),
    TO_UNICODE ('l'),
    TO_UNICODE ('a'),
    TO_UNICODE ('b'),
    TO_UNICODE ('e'),
    TO_UNICODE ('l'),
    TO_UNICODE (' '),
    TO_UNICODE ('i'),
    TO_UNICODE ('s'),
    TO_UNICODE (' '),
    TO_UNICODE ('a'),
    TO_UNICODE ('l'),
    TO_UNICODE ('r'),
    TO_UNICODE ('e'),
    TO_UNICODE ('a'),
    TO_UNICODE ('d'),
    TO_UNICODE ('y'),
    TO_UNICODE (' '),
    TO_UNICODE ('d'),
    TO_UNICODE ('e'),
    TO_UNICODE ('c'),
    TO_UNICODE ('l'),
    TO_UNICODE ('a'),
    TO_UNICODE ('r'),
    TO_UNICODE ('e'),
    TO_UNICODE ('d'),
    TO_UNICODE (' '),
    TO_UNICODE ('i'),
    TO_UNICODE ('n'),
    TO_UNICODE (' '),
    TO_UNICODE ('%'),
    TO_UNICODE ('L'),
    TO_UNICODE (0)
  } ;
  const utf32 kShadowErrorMessage [1] = {
    TO_UNICODE (0)
  } ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

static const utf32 kSearchErrorMessage_symbolTableForOptimizations_searchKey [31] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('%'),
  TO_UNICODE ('K'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('l'),
  TO_UNICODE ('a'),
  TO_UNICODE ('b'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('s'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('t'),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('l'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------*

void GALGAS_symbolTableForOptimizations::method_searchKey (GALGAS_lstring inKey,
                                                           GALGAS_uint & outArgument0,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = performSearch (inKey, inCompiler, kSearchErrorMessage_symbolTableForOptimizations_searchKey COMMA_THERE) ;
  const cMapElement_symbolTableForOptimizations * p = (const cMapElement_symbolTableForOptimizations *) attributes ;
  if (NULL != p) {
    macroValidObject (p, const cMapElement_symbolTableForOptimizations) ;
    outArgument0 = p->mAttribute_mDefinitionLineIndex ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_symbolTableForOptimizations::modifier_removeKey (GALGAS_lstring inKey,
                                                             GALGAS_uint & outArgument0,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  const utf32 kRemoveErrorMessage [31] = {
    TO_UNICODE ('t'),
    TO_UNICODE ('h'),
    TO_UNICODE ('e'),
    TO_UNICODE (' '),
    TO_UNICODE ('\''),
    TO_UNICODE ('%'),
    TO_UNICODE ('K'),
    TO_UNICODE ('\''),
    TO_UNICODE (' '),
    TO_UNICODE ('l'),
    TO_UNICODE ('a'),
    TO_UNICODE ('b'),
    TO_UNICODE ('e'),
    TO_UNICODE ('l'),
    TO_UNICODE (' '),
    TO_UNICODE ('i'),
    TO_UNICODE ('s'),
    TO_UNICODE (' '),
    TO_UNICODE ('n'),
    TO_UNICODE ('o'),
    TO_UNICODE ('t'),
    TO_UNICODE (' '),
    TO_UNICODE ('d'),
    TO_UNICODE ('e'),
    TO_UNICODE ('c'),
    TO_UNICODE ('l'),
    TO_UNICODE ('a'),
    TO_UNICODE ('r'),
    TO_UNICODE ('e'),
    TO_UNICODE ('d'),
    TO_UNICODE (0)
  } ;
  capCollectionElement attributes ;
  performRemove (inKey, attributes, inCompiler, kRemoveErrorMessage COMMA_THERE) ;
  cMapElement_symbolTableForOptimizations * p = (cMapElement_symbolTableForOptimizations *) attributes.ptrNoVerif () ;
  if (NULL != p) {
    macroValidObject (p, cMapElement_symbolTableForOptimizations) ;
    outArgument0 = p->mAttribute_mDefinitionLineIndex ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_symbolTableForOptimizations::reader_mDefinitionLineIndexForKey (const GALGAS_string & inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_symbolTableForOptimizations * p = (const cMapElement_symbolTableForOptimizations *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidObject (p, const cMapElement_symbolTableForOptimizations) ;
    result = p->mAttribute_mDefinitionLineIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_symbolTableForOptimizations::modifier_setMDefinitionLineIndexForKey (GALGAS_uint inAttributeValue,
                                                                                 GALGAS_string inKey,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_symbolTableForOptimizations * p = (cMapElement_symbolTableForOptimizations *) attributes ;
  if (NULL != p) {
    macroValidObject (p, cMapElement_symbolTableForOptimizations) ;
    p->mAttribute_mDefinitionLineIndex = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_symbolTableForOptimizations * GALGAS_symbolTableForOptimizations::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                        const GALGAS_string & inKey
                                                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_symbolTableForOptimizations * result = (cMapElement_symbolTableForOptimizations *) p ;
  macroNullOrValidObject (result, cMapElement_symbolTableForOptimizations) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_symbolTableForOptimizations * GALGAS_symbolTableForOptimizations::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                           const GALGAS_lstring & inKey
                                                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_symbolTableForOptimizations_searchKey COMMA_THERE) ;
  cMapElement_symbolTableForOptimizations * result = (cMapElement_symbolTableForOptimizations *) p ;
  macroNullOrValidObject (result, cMapElement_symbolTableForOptimizations) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_symbolTableForOptimizations::cEnumerator_symbolTableForOptimizations (const GALGAS_symbolTableForOptimizations & inEnumeratedObject,
                                                                                  const bool inAscending) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inAscending) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_symbolTableForOptimizations::current_lkey (void) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr () ;
  macroValidObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_uint cEnumerator_symbolTableForOptimizations::current_mDefinitionLineIndex (void) const {
  const cMapElement_symbolTableForOptimizations * p = (const cMapElement_symbolTableForOptimizations *) currentObjectPtr () ;
  macroValidObject (p, const cMapElement_symbolTableForOptimizations) ;
  return p->mAttribute_mDefinitionLineIndex ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @symbolTableForOptimizations type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_symbolTableForOptimizations ("symbolTableForOptimizations",
                                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_symbolTableForOptimizations::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_symbolTableForOptimizations ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_symbolTableForOptimizations::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_symbolTableForOptimizations (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_symbolTableForOptimizations GALGAS_symbolTableForOptimizations::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler,
                                                                                      const GALGAS_location & inErrorLocation
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_symbolTableForOptimizations result ;
  const GALGAS_symbolTableForOptimizations * p = (const GALGAS_symbolTableForOptimizations *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_symbolTableForOptimizations *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "symbolTableForOptimizations", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'print_constant_definition'                    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_print_5F_constant_5F_definition (const GALGAS_constantMap constinArgument_inConstantMap,
                                              GALGAS_string & ioArgument_ioListFileContents,
                                              C_Compiler * /* inCompiler */
                                              COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @ifInstructionForGeneration
  //--- @strictGreaterExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGAS_uint temp_0 (constinArgument_inConstantMap.reader_count (SOURCE_FILE_AT_LINE (440))) ;
  //--- @literalUIntExpressionForGeneration
  GALGAS_uint temp_1 ((PMUInt32) 0U) ;
  GALGAS_bool temp_2 (kIsStrictSup, temp_0.objectCompare (temp_1)) ;
  if (temp_2.isValidAndTrue ()) {
    //-------- @appendInstructionForGeneration
    //--- @concatExpressionForGeneration
    //--- @readerCallExpressionForGeneration
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_3 ("") ;
    //--- @literalUIntExpressionForGeneration
    GALGAS_uint temp_4 ((PMUInt32) 79U) ;
    //--- @literalCharExpressionForGeneration
    GALGAS_char temp_5 (TO_UNICODE (42)) ;
    GALGAS_string temp_6 (temp_3.reader_stringByLeftAndRightPadding (temp_4, temp_5 COMMA_SOURCE_FILE_AT_LINE (441))) ;
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_7 ("\n") ;
    GALGAS_string temp_8 (temp_6.operator_concat (temp_7 COMMA_SOURCE_FILE_AT_LINE (441))) ;
    ioArgument_ioListFileContents.dotAssign_operation (temp_8 COMMA_SOURCE_FILE_AT_LINE (441)) ;
    //-------- @appendInstructionForGeneration
    //--- @concatExpressionForGeneration
    //--- @concatExpressionForGeneration
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_9 ("*") ;
    //--- @readerCallExpressionForGeneration
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_10 ("CONSTANTS") ;
    //--- @literalUIntExpressionForGeneration
    GALGAS_uint temp_11 ((PMUInt32) 77U) ;
    //--- @literalCharExpressionForGeneration
    GALGAS_char temp_12 (TO_UNICODE (32)) ;
    GALGAS_string temp_13 (temp_10.reader_stringByLeftAndRightPadding (temp_11, temp_12 COMMA_SOURCE_FILE_AT_LINE (442))) ;
    GALGAS_string temp_14 (temp_9.operator_concat (temp_13 COMMA_SOURCE_FILE_AT_LINE (442))) ;
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_15 ("*\n") ;
    GALGAS_string temp_16 (temp_14.operator_concat (temp_15 COMMA_SOURCE_FILE_AT_LINE (442))) ;
    ioArgument_ioListFileContents.dotAssign_operation (temp_16 COMMA_SOURCE_FILE_AT_LINE (442)) ;
    //-------- @appendInstructionForGeneration
    //--- @concatExpressionForGeneration
    //--- @readerCallExpressionForGeneration
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_17 ("") ;
    //--- @literalUIntExpressionForGeneration
    GALGAS_uint temp_18 ((PMUInt32) 79U) ;
    //--- @literalCharExpressionForGeneration
    GALGAS_char temp_19 (TO_UNICODE (42)) ;
    GALGAS_string temp_20 (temp_17.reader_stringByLeftAndRightPadding (temp_18, temp_19 COMMA_SOURCE_FILE_AT_LINE (443))) ;
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_21 ("\n"
      "\n") ;
    GALGAS_string temp_22 (temp_20.operator_concat (temp_21 COMMA_SOURCE_FILE_AT_LINE (443))) ;
    ioArgument_ioListFileContents.dotAssign_operation (temp_22 COMMA_SOURCE_FILE_AT_LINE (443)) ;
    //-------- @appendInstructionForGeneration
    //--- @concatExpressionForGeneration
    //--- @readerCallExpressionForGeneration
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_23 ("Constant") ;
    //--- @literalUIntExpressionForGeneration
    GALGAS_uint temp_24 ((PMUInt32) 40U) ;
    //--- @literalCharExpressionForGeneration
    GALGAS_char temp_25 (TO_UNICODE (32)) ;
    GALGAS_string temp_26 (temp_23.reader_stringByLeftPadding (temp_24, temp_25 COMMA_SOURCE_FILE_AT_LINE (444))) ;
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_27 (" Value\n") ;
    GALGAS_string temp_28 (temp_26.operator_concat (temp_27 COMMA_SOURCE_FILE_AT_LINE (444))) ;
    ioArgument_ioListFileContents.dotAssign_operation (temp_28 COMMA_SOURCE_FILE_AT_LINE (444)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_constantMap enumerator_16746 (constinArgument_inConstantMap, true) ;
    //--- simple foreach instruction
    while (enumerator_16746.hasCurrentObject ()) {
      //-------- @appendInstructionForGeneration
      //--- @concatExpressionForGeneration
      //--- @concatExpressionForGeneration
      //--- @concatExpressionForGeneration
      //--- @readerCallExpressionForGeneration
      //--- @readerCallExpressionForGeneration
      GALGAS_string temp_29 (enumerator_16746.current_lkey ().reader_string (SOURCE_FILE_AT_LINE (446))) ;
      //--- @literalUIntExpressionForGeneration
      GALGAS_uint temp_30 ((PMUInt32) 40U) ;
      //--- @literalCharExpressionForGeneration
      GALGAS_char temp_31 (TO_UNICODE (32)) ;
      GALGAS_string temp_32 (temp_29.reader_stringByLeftPadding (temp_30, temp_31 COMMA_SOURCE_FILE_AT_LINE (446))) ;
      //--- @literalStringExpressionForGeneration
      GALGAS_string temp_33 (" ") ;
      GALGAS_string temp_34 (temp_32.operator_concat (temp_33 COMMA_SOURCE_FILE_AT_LINE (446))) ;
      //--- @readerCallExpressionForGeneration
      GALGAS_string temp_35 (enumerator_16746.current_mValue ().reader_string (SOURCE_FILE_AT_LINE (446))) ;
      GALGAS_string temp_36 (temp_34.operator_concat (temp_35 COMMA_SOURCE_FILE_AT_LINE (446))) ;
      //--- @literalStringExpressionForGeneration
      GALGAS_string temp_37 ("\n") ;
      GALGAS_string temp_38 (temp_36.operator_concat (temp_37 COMMA_SOURCE_FILE_AT_LINE (446))) ;
      ioArgument_ioListFileContents.dotAssign_operation (temp_38 COMMA_SOURCE_FILE_AT_LINE (446)) ;
      enumerator_16746.gotoNextObject () ;
    }
    //-------- @appendInstructionForGeneration
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_39 ("\n") ;
    ioArgument_ioListFileContents.dotAssign_operation (temp_39 COMMA_SOURCE_FILE_AT_LINE (448)) ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//            Abstract category method '@immediatExpression eval'            *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_immediatExpression_eval> gCategoryMethodTable_immediatExpression_eval ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_eval (const PMSInt32 inClassIndex,
                               categoryMethodSignature_immediatExpression_eval inMethod) {
  gCategoryMethodTable_immediatExpression_eval.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_immediatExpression_eval (void) {
  gCategoryMethodTable_immediatExpression_eval.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_immediatExpression_eval (NULL,
                                                    freeCategoryMethod_immediatExpression_eval) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_eval (const cPtr_immediatExpression * inObject,
                              const GALGAS_registerTable constin_inRegisterTable,
                              const GALGAS_constantMap constin_inConstantMap,
                              GALGAS_sint & out_outResult,
                              C_Compiler * inCompiler
                              COMMA_LOCATION_ARGS) {
//--- Drop output arguments
  out_outResult.drop () ;
//--- Find method
  if (NULL != inObject) {
    macroValidObject (inObject, const cPtr_immediatExpression) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_immediatExpression_eval f = NULL ;
    if (classIndex < gCategoryMethodTable_immediatExpression_eval.count ()) {
      f = gCategoryMethodTable_immediatExpression_eval (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_immediatExpression_eval.count ()) {
           f = gCategoryMethodTable_immediatExpression_eval (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_immediatExpression_eval.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    f (inObject, constin_inRegisterTable, constin_inConstantMap, out_outResult, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category method '@immediatInteger eval'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_immediatInteger_eval (const cPtr_immediatExpression * inObject,
                                                 const GALGAS_registerTable /* constinArgument_inRegisterTable */,
                                                 const GALGAS_constantMap /* constinArgument_inConstantMap */,
                                                 GALGAS_sint & outArgument_outResult,
                                                 C_Compiler * inCompiler
                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_immediatInteger * object = (const cPtr_immediatInteger *) inObject ;
  macroValidObject (object, const cPtr_immediatInteger) ;
  //-------- @assignmentInstructionForGeneration
  //--- @readerCallExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGAS_uint temp_0 (object->mAttribute_mValue.reader_uint (SOURCE_FILE_AT_LINE (86))) ;
  GALGAS_sint temp_1 (temp_0.reader_sint (inCompiler COMMA_SOURCE_FILE_AT_LINE (86))) ;
  outArgument_outResult = temp_1 ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_immediatInteger_eval (void) {
  enterCategoryMethod_eval (kTypeDescriptor_GALGAS_immediatInteger.mSlotID,
                            categoryMethod_immediatInteger_eval) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_immediatInteger_eval (defineCategoryMethod_immediatInteger_eval, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category method '@immediatRegister eval'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_immediatRegister_eval (const cPtr_immediatExpression * inObject,
                                                  const GALGAS_registerTable constinArgument_inRegisterTable,
                                                  const GALGAS_constantMap constinArgument_inConstantMap,
                                                  GALGAS_sint & outArgument_outResult,
                                                  C_Compiler * inCompiler
                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_immediatRegister * object = (const cPtr_immediatRegister *) inObject ;
  macroValidObject (object, const cPtr_immediatRegister) ;
  //-------- @ifInstructionForGeneration
  //--- @readerCallExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGAS_lstring temp_0 (object->mAttribute_mRegister.reader_mRegisterName (SOURCE_FILE_AT_LINE (96))) ;
  GALGAS_string temp_1 (temp_0.reader_string (SOURCE_FILE_AT_LINE (96))) ;
  GALGAS_bool temp_2 (constinArgument_inRegisterTable.reader_hasKey (temp_1 COMMA_SOURCE_FILE_AT_LINE (96))) ;
  if (temp_2.isValidAndTrue ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_uintlist var_registerAddressList ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_uint var_size ;
    //-------- @methodCallInstructionForGeneration
    //--- @readerCallExpressionForGeneration
    GALGAS_lstring temp_3 (object->mAttribute_mRegister.reader_mRegisterName (SOURCE_FILE_AT_LINE (99))) ;
    GALGAS_bitSliceTable joker_3811_0 ; // Joker input parameter
    GALGAS_string joker_3814_0 ; // Joker input parameter
    constinArgument_inRegisterTable.method_searchKey (temp_3, var_registerAddressList, var_size, joker_3811_0, joker_3814_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (99)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @localVariableDeclarationForGeneration
    GALGAS_uint var_registerAddress ;
    //-------- @methodCallInstructionForGeneration
    var_registerAddressList.method_first (var_registerAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (100)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @ifInstructionForGeneration
    //--- @greaterOrEqualExpressionForGeneration
    //--- @readerCallExpressionForGeneration
    //--- @readerCallExpressionForGeneration
    GALGAS_luint temp_4 (object->mAttribute_mRegister.reader_mOffset (SOURCE_FILE_AT_LINE (101))) ;
    GALGAS_uint temp_5 (temp_4.reader_uint (SOURCE_FILE_AT_LINE (101))) ;
    GALGAS_bool temp_6 (kIsSupOrEqual, temp_5.objectCompare (var_size)) ;
    if (temp_6.isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      //--- @readerCallExpressionForGeneration
      GALGAS_luint temp_7 (object->mAttribute_mRegister.reader_mOffset (SOURCE_FILE_AT_LINE (102))) ;
      //--- @concatExpressionForGeneration
      //--- @concatExpressionForGeneration
      //--- @concatExpressionForGeneration
      //--- @concatExpressionForGeneration
      //--- @literalStringExpressionForGeneration
      GALGAS_string temp_8 ("index (") ;
      //--- @readerCallExpressionForGeneration
      //--- @readerCallExpressionForGeneration
      //--- @readerCallExpressionForGeneration
      GALGAS_luint temp_9 (object->mAttribute_mRegister.reader_mOffset (SOURCE_FILE_AT_LINE (102))) ;
      GALGAS_uint temp_10 (temp_9.reader_uint (SOURCE_FILE_AT_LINE (102))) ;
      GALGAS_string temp_11 (temp_10.reader_string (SOURCE_FILE_AT_LINE (102))) ;
      GALGAS_string temp_12 (temp_8.operator_concat (temp_11 COMMA_SOURCE_FILE_AT_LINE (102))) ;
      //--- @literalStringExpressionForGeneration
      GALGAS_string temp_13 (") should be lower than size (") ;
      GALGAS_string temp_14 (temp_12.operator_concat (temp_13 COMMA_SOURCE_FILE_AT_LINE (102))) ;
      //--- @readerCallExpressionForGeneration
      GALGAS_string temp_15 (var_size.reader_string (SOURCE_FILE_AT_LINE (102))) ;
      GALGAS_string temp_16 (temp_14.operator_concat (temp_15 COMMA_SOURCE_FILE_AT_LINE (102))) ;
      //--- @literalStringExpressionForGeneration
      GALGAS_string temp_17 (")") ;
      GALGAS_string temp_18 (temp_16.operator_concat (temp_17 COMMA_SOURCE_FILE_AT_LINE (102))) ;
      GALGAS_location location_19 (temp_7.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_19, temp_18 COMMA_SOURCE_FILE_AT_LINE (102)) ;
    }
    //-------- @assignmentInstructionForGeneration
    //--- @readerCallExpressionForGeneration
    //--- @addExpressionForGeneration
    //--- @readerCallExpressionForGeneration
    //--- @readerCallExpressionForGeneration
    GALGAS_luint temp_20 (object->mAttribute_mRegister.reader_mOffset (SOURCE_FILE_AT_LINE (104))) ;
    GALGAS_uint temp_21 (temp_20.reader_uint (SOURCE_FILE_AT_LINE (104))) ;
    GALGAS_uint temp_22 (var_registerAddress.add_operation (temp_21, inCompiler COMMA_SOURCE_FILE_AT_LINE (104))) ;
    GALGAS_sint temp_23 (temp_22.reader_sint (inCompiler COMMA_SOURCE_FILE_AT_LINE (104))) ;
    outArgument_outResult = temp_23 ;
  }else{
    //-------- @ifInstructionForGeneration
    //--- @readerCallExpressionForGeneration
    //--- @readerCallExpressionForGeneration
    //--- @readerCallExpressionForGeneration
    GALGAS_lstring temp_24 (object->mAttribute_mRegister.reader_mRegisterName (SOURCE_FILE_AT_LINE (105))) ;
    GALGAS_string temp_25 (temp_24.reader_string (SOURCE_FILE_AT_LINE (105))) ;
    GALGAS_bool temp_26 (constinArgument_inConstantMap.reader_hasKey (temp_25 COMMA_SOURCE_FILE_AT_LINE (105))) ;
    if (temp_26.isValidAndTrue ()) {
      //-------- @methodCallInstructionForGeneration
      //--- @readerCallExpressionForGeneration
      GALGAS_lstring temp_27 (object->mAttribute_mRegister.reader_mRegisterName (SOURCE_FILE_AT_LINE (106))) ;
      constinArgument_inConstantMap.method_searchKey (temp_27, outArgument_outResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (106)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @ifInstructionForGeneration
      //--- @strictGreaterExpressionForGeneration
      //--- @readerCallExpressionForGeneration
      //--- @readerCallExpressionForGeneration
      GALGAS_luint temp_28 (object->mAttribute_mRegister.reader_mOffset (SOURCE_FILE_AT_LINE (107))) ;
      GALGAS_uint temp_29 (temp_28.reader_uint (SOURCE_FILE_AT_LINE (107))) ;
      //--- @literalUIntExpressionForGeneration
      GALGAS_uint temp_30 ((PMUInt32) 0U) ;
      GALGAS_bool temp_31 (kIsStrictSup, temp_29.objectCompare (temp_30)) ;
      if (temp_31.isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        //--- @readerCallExpressionForGeneration
        GALGAS_luint temp_32 (object->mAttribute_mRegister.reader_mOffset (SOURCE_FILE_AT_LINE (108))) ;
        //--- @concatExpressionForGeneration
        //--- @concatExpressionForGeneration
        //--- @literalStringExpressionForGeneration
        GALGAS_string temp_33 ("index notation (") ;
        //--- @readerCallExpressionForGeneration
        //--- @readerCallExpressionForGeneration
        //--- @readerCallExpressionForGeneration
        GALGAS_luint temp_34 (object->mAttribute_mRegister.reader_mOffset (SOURCE_FILE_AT_LINE (108))) ;
        GALGAS_uint temp_35 (temp_34.reader_uint (SOURCE_FILE_AT_LINE (108))) ;
        GALGAS_string temp_36 (temp_35.reader_string (SOURCE_FILE_AT_LINE (108))) ;
        GALGAS_string temp_37 (temp_33.operator_concat (temp_36 COMMA_SOURCE_FILE_AT_LINE (108))) ;
        //--- @literalStringExpressionForGeneration
        GALGAS_string temp_38 (") cannot be used with a constant") ;
        GALGAS_string temp_39 (temp_37.operator_concat (temp_38 COMMA_SOURCE_FILE_AT_LINE (108))) ;
        GALGAS_location location_40 (temp_32.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_40, temp_39 COMMA_SOURCE_FILE_AT_LINE (108)) ;
      }
    }else{
      //-------- @errorInstructionForGeneration
      //--- @readerCallExpressionForGeneration
      GALGAS_lstring temp_41 (object->mAttribute_mRegister.reader_mRegisterName (SOURCE_FILE_AT_LINE (111))) ;
      //--- @concatExpressionForGeneration
      //--- @concatExpressionForGeneration
      //--- @literalStringExpressionForGeneration
      GALGAS_string temp_42 ("'") ;
      //--- @readerCallExpressionForGeneration
      //--- @readerCallExpressionForGeneration
      GALGAS_lstring temp_43 (object->mAttribute_mRegister.reader_mRegisterName (SOURCE_FILE_AT_LINE (111))) ;
      GALGAS_string temp_44 (temp_43.reader_string (SOURCE_FILE_AT_LINE (111))) ;
      GALGAS_string temp_45 (temp_42.operator_concat (temp_44 COMMA_SOURCE_FILE_AT_LINE (111))) ;
      //--- @literalStringExpressionForGeneration
      GALGAS_string temp_46 ("' should be declared as ram register or as constant") ;
      GALGAS_string temp_47 (temp_45.operator_concat (temp_46 COMMA_SOURCE_FILE_AT_LINE (111))) ;
      GALGAS_location location_48 (temp_41.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_48, temp_47 COMMA_SOURCE_FILE_AT_LINE (111)) ;
      outArgument_outResult.drop () ; // Release error dropped variable
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_immediatRegister_eval (void) {
  enterCategoryMethod_eval (kTypeDescriptor_GALGAS_immediatRegister.mSlotID,
                            categoryMethod_immediatRegister_eval) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_immediatRegister_eval (defineCategoryMethod_immediatRegister_eval, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Overriding category method '@immediatAdd eval'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_immediatAdd_eval (const cPtr_immediatExpression * inObject,
                                             const GALGAS_registerTable constinArgument_inRegisterTable,
                                             const GALGAS_constantMap constinArgument_inConstantMap,
                                             GALGAS_sint & outArgument_outResult,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_immediatAdd * object = (const cPtr_immediatAdd *) inObject ;
  macroValidObject (object, const cPtr_immediatAdd) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_leftResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_leftResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (122)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_rightResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mRightExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_rightResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (123)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  //--- @addExpressionForGeneration
  GALGAS_sint temp_0 (var_leftResult.add_operation (var_rightResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (124))) ;
  outArgument_outResult = temp_0 ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_immediatAdd_eval (void) {
  enterCategoryMethod_eval (kTypeDescriptor_GALGAS_immediatAdd.mSlotID,
                            categoryMethod_immediatAdd_eval) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_immediatAdd_eval (defineCategoryMethod_immediatAdd_eval, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Overriding category method '@immediatSub eval'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_immediatSub_eval (const cPtr_immediatExpression * inObject,
                                             const GALGAS_registerTable constinArgument_inRegisterTable,
                                             const GALGAS_constantMap constinArgument_inConstantMap,
                                             GALGAS_sint & outArgument_outResult,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_immediatSub * object = (const cPtr_immediatSub *) inObject ;
  macroValidObject (object, const cPtr_immediatSub) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_leftResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_leftResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (134)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_rightResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mRightExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_rightResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (135)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  //--- @subExpressionForGeneration
  GALGAS_sint temp_0 (var_leftResult.substract_operation (var_rightResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (136))) ;
  outArgument_outResult = temp_0 ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_immediatSub_eval (void) {
  enterCategoryMethod_eval (kTypeDescriptor_GALGAS_immediatSub.mSlotID,
                            categoryMethod_immediatSub_eval) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_immediatSub_eval (defineCategoryMethod_immediatSub_eval, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Overriding category method '@immediatMul eval'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_immediatMul_eval (const cPtr_immediatExpression * inObject,
                                             const GALGAS_registerTable constinArgument_inRegisterTable,
                                             const GALGAS_constantMap constinArgument_inConstantMap,
                                             GALGAS_sint & outArgument_outResult,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_immediatMul * object = (const cPtr_immediatMul *) inObject ;
  macroValidObject (object, const cPtr_immediatMul) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_leftResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_leftResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (146)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_rightResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mRightExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_rightResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (147)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  //--- @multiplicationExpressionForGeneration
  GALGAS_sint temp_0 (var_leftResult .multiply_operation (var_rightResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (148))) ;
  outArgument_outResult = temp_0 ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_immediatMul_eval (void) {
  enterCategoryMethod_eval (kTypeDescriptor_GALGAS_immediatMul.mSlotID,
                            categoryMethod_immediatMul_eval) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_immediatMul_eval (defineCategoryMethod_immediatMul_eval, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Overriding category method '@immediatDiv eval'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_immediatDiv_eval (const cPtr_immediatExpression * inObject,
                                             const GALGAS_registerTable constinArgument_inRegisterTable,
                                             const GALGAS_constantMap constinArgument_inConstantMap,
                                             GALGAS_sint & outArgument_outResult,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_immediatDiv * object = (const cPtr_immediatDiv *) inObject ;
  macroValidObject (object, const cPtr_immediatDiv) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_leftResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_leftResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (158)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_rightResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mRightExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_rightResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (159)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  //--- @divisionExpressionForGeneration
  GALGAS_sint temp_0 (var_leftResult.divide_operation (var_rightResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (160))) ;
  outArgument_outResult = temp_0 ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_immediatDiv_eval (void) {
  enterCategoryMethod_eval (kTypeDescriptor_GALGAS_immediatDiv.mSlotID,
                            categoryMethod_immediatDiv_eval) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_immediatDiv_eval (defineCategoryMethod_immediatDiv_eval, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Overriding category method '@immediatMod eval'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_immediatMod_eval (const cPtr_immediatExpression * inObject,
                                             const GALGAS_registerTable constinArgument_inRegisterTable,
                                             const GALGAS_constantMap constinArgument_inConstantMap,
                                             GALGAS_sint & outArgument_outResult,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_immediatMod * object = (const cPtr_immediatMod *) inObject ;
  macroValidObject (object, const cPtr_immediatMod) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_leftResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_leftResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (170)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_rightResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mRightExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_rightResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (171)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  //--- @moduloExpressionForGeneration
  GALGAS_sint temp_0 (var_leftResult.modulo_operation (var_rightResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (172))) ;
  outArgument_outResult = temp_0 ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_immediatMod_eval (void) {
  enterCategoryMethod_eval (kTypeDescriptor_GALGAS_immediatMod.mSlotID,
                            categoryMethod_immediatMod_eval) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_immediatMod_eval (defineCategoryMethod_immediatMod_eval, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Overriding category method '@immediatAnd eval'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_immediatAnd_eval (const cPtr_immediatExpression * inObject,
                                             const GALGAS_registerTable constinArgument_inRegisterTable,
                                             const GALGAS_constantMap constinArgument_inConstantMap,
                                             GALGAS_sint & outArgument_outResult,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_immediatAnd * object = (const cPtr_immediatAnd *) inObject ;
  macroValidObject (object, const cPtr_immediatAnd) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_leftResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_leftResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (182)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_rightResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mRightExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_rightResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (183)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  //--- @andExpressionForGeneration
  GALGAS_sint temp_0 (var_leftResult.operator_and (var_rightResult COMMA_SOURCE_FILE_AT_LINE (184))) ;
  outArgument_outResult = temp_0 ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_immediatAnd_eval (void) {
  enterCategoryMethod_eval (kTypeDescriptor_GALGAS_immediatAnd.mSlotID,
                            categoryMethod_immediatAnd_eval) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_immediatAnd_eval (defineCategoryMethod_immediatAnd_eval, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Overriding category method '@immediatOr eval'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_immediatOr_eval (const cPtr_immediatExpression * inObject,
                                            const GALGAS_registerTable constinArgument_inRegisterTable,
                                            const GALGAS_constantMap constinArgument_inConstantMap,
                                            GALGAS_sint & outArgument_outResult,
                                            C_Compiler * inCompiler
                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_immediatOr * object = (const cPtr_immediatOr *) inObject ;
  macroValidObject (object, const cPtr_immediatOr) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_leftResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_leftResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (194)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_rightResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mRightExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_rightResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (195)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  //--- @orExpressionForGeneration
  GALGAS_sint temp_0 (var_leftResult.operator_or (var_rightResult COMMA_SOURCE_FILE_AT_LINE (196))) ;
  outArgument_outResult = temp_0 ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_immediatOr_eval (void) {
  enterCategoryMethod_eval (kTypeDescriptor_GALGAS_immediatOr.mSlotID,
                            categoryMethod_immediatOr_eval) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_immediatOr_eval (defineCategoryMethod_immediatOr_eval, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Overriding category method '@immediatXor eval'               *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_immediatXor_eval (const cPtr_immediatExpression * inObject,
                                             const GALGAS_registerTable constinArgument_inRegisterTable,
                                             const GALGAS_constantMap constinArgument_inConstantMap,
                                             GALGAS_sint & outArgument_outResult,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_immediatXor * object = (const cPtr_immediatXor *) inObject ;
  macroValidObject (object, const cPtr_immediatXor) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_leftResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_leftResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (206)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_rightResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mRightExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_rightResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (207)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  //--- @xorExpressionForGeneration
  GALGAS_sint temp_0 (var_leftResult.operator_xor (var_rightResult COMMA_SOURCE_FILE_AT_LINE (208))) ;
  outArgument_outResult = temp_0 ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_immediatXor_eval (void) {
  enterCategoryMethod_eval (kTypeDescriptor_GALGAS_immediatXor.mSlotID,
                            categoryMethod_immediatXor_eval) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_immediatXor_eval (defineCategoryMethod_immediatXor_eval, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category method '@immediatLeftShift eval'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_immediatLeftShift_eval (const cPtr_immediatExpression * inObject,
                                                   const GALGAS_registerTable constinArgument_inRegisterTable,
                                                   const GALGAS_constantMap constinArgument_inConstantMap,
                                                   GALGAS_sint & outArgument_outResult,
                                                   C_Compiler * inCompiler
                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_immediatLeftShift * object = (const cPtr_immediatLeftShift *) inObject ;
  macroValidObject (object, const cPtr_immediatLeftShift) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_leftResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_leftResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (218)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_rightResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mRightExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_rightResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (219)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGAS_uint temp_0 (var_rightResult.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (220))) ;
  GALGAS_sint temp_1 (var_leftResult.left_shift_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (220))) ;
  outArgument_outResult = temp_1 ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_immediatLeftShift_eval (void) {
  enterCategoryMethod_eval (kTypeDescriptor_GALGAS_immediatLeftShift.mSlotID,
                            categoryMethod_immediatLeftShift_eval) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_immediatLeftShift_eval (defineCategoryMethod_immediatLeftShift_eval, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category method '@immediatRightShift eval'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_immediatRightShift_eval (const cPtr_immediatExpression * inObject,
                                                    const GALGAS_registerTable constinArgument_inRegisterTable,
                                                    const GALGAS_constantMap constinArgument_inConstantMap,
                                                    GALGAS_sint & outArgument_outResult,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_immediatRightShift * object = (const cPtr_immediatRightShift *) inObject ;
  macroValidObject (object, const cPtr_immediatRightShift) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_leftResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_leftResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (230)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_rightResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mRightExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_rightResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (231)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGAS_uint temp_0 (var_rightResult.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (232))) ;
  GALGAS_sint temp_1 (var_leftResult.right_shift_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (232))) ;
  outArgument_outResult = temp_1 ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_immediatRightShift_eval (void) {
  enterCategoryMethod_eval (kTypeDescriptor_GALGAS_immediatRightShift.mSlotID,
                            categoryMethod_immediatRightShift_eval) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_immediatRightShift_eval (defineCategoryMethod_immediatRightShift_eval, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category method '@immediatEqualTest eval'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_immediatEqualTest_eval (const cPtr_immediatExpression * inObject,
                                                   const GALGAS_registerTable constinArgument_inRegisterTable,
                                                   const GALGAS_constantMap constinArgument_inConstantMap,
                                                   GALGAS_sint & outArgument_outResult,
                                                   C_Compiler * inCompiler
                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_immediatEqualTest * object = (const cPtr_immediatEqualTest *) inObject ;
  macroValidObject (object, const cPtr_immediatEqualTest) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_leftResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_leftResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (242)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_rightResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mRightExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_rightResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (243)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  //--- @equalExpressionForGeneration
  GALGAS_bool temp_0 (kIsEqual, var_leftResult.objectCompare (var_rightResult)) ;
  if (temp_0.isValidAndTrue ()) {
    //-------- @assignmentInstructionForGeneration
    //--- @literalSIntExpressionForGeneration
    GALGAS_sint temp_1 ((PMSInt32) 1L) ;
    outArgument_outResult = temp_1 ;
  }else{
    //-------- @assignmentInstructionForGeneration
    //--- @literalSIntExpressionForGeneration
    GALGAS_sint temp_2 ((PMSInt32) 0L) ;
    outArgument_outResult = temp_2 ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_immediatEqualTest_eval (void) {
  enterCategoryMethod_eval (kTypeDescriptor_GALGAS_immediatEqualTest.mSlotID,
                            categoryMethod_immediatEqualTest_eval) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_immediatEqualTest_eval (defineCategoryMethod_immediatEqualTest_eval, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category method '@immediatNotEqualTest eval'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_immediatNotEqualTest_eval (const cPtr_immediatExpression * inObject,
                                                      const GALGAS_registerTable constinArgument_inRegisterTable,
                                                      const GALGAS_constantMap constinArgument_inConstantMap,
                                                      GALGAS_sint & outArgument_outResult,
                                                      C_Compiler * inCompiler
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_immediatNotEqualTest * object = (const cPtr_immediatNotEqualTest *) inObject ;
  macroValidObject (object, const cPtr_immediatNotEqualTest) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_leftResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_leftResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (258)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_rightResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mRightExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_rightResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (259)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  //--- @notEqualExpressionForGeneration
  GALGAS_bool temp_0 (kIsNotEqual, var_leftResult.objectCompare (var_rightResult)) ;
  if (temp_0.isValidAndTrue ()) {
    //-------- @assignmentInstructionForGeneration
    //--- @literalSIntExpressionForGeneration
    GALGAS_sint temp_1 ((PMSInt32) 1L) ;
    outArgument_outResult = temp_1 ;
  }else{
    //-------- @assignmentInstructionForGeneration
    //--- @literalSIntExpressionForGeneration
    GALGAS_sint temp_2 ((PMSInt32) 0L) ;
    outArgument_outResult = temp_2 ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_immediatNotEqualTest_eval (void) {
  enterCategoryMethod_eval (kTypeDescriptor_GALGAS_immediatNotEqualTest.mSlotID,
                            categoryMethod_immediatNotEqualTest_eval) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_immediatNotEqualTest_eval (defineCategoryMethod_immediatNotEqualTest_eval, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Overriding category method '@immediatGreaterOrEqualTest eval'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_immediatGreaterOrEqualTest_eval (const cPtr_immediatExpression * inObject,
                                                            const GALGAS_registerTable constinArgument_inRegisterTable,
                                                            const GALGAS_constantMap constinArgument_inConstantMap,
                                                            GALGAS_sint & outArgument_outResult,
                                                            C_Compiler * inCompiler
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_immediatGreaterOrEqualTest * object = (const cPtr_immediatGreaterOrEqualTest *) inObject ;
  macroValidObject (object, const cPtr_immediatGreaterOrEqualTest) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_leftResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_leftResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (274)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_rightResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mRightExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_rightResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (275)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  //--- @greaterOrEqualExpressionForGeneration
  GALGAS_bool temp_0 (kIsSupOrEqual, var_leftResult.objectCompare (var_rightResult)) ;
  if (temp_0.isValidAndTrue ()) {
    //-------- @assignmentInstructionForGeneration
    //--- @literalSIntExpressionForGeneration
    GALGAS_sint temp_1 ((PMSInt32) 1L) ;
    outArgument_outResult = temp_1 ;
  }else{
    //-------- @assignmentInstructionForGeneration
    //--- @literalSIntExpressionForGeneration
    GALGAS_sint temp_2 ((PMSInt32) 0L) ;
    outArgument_outResult = temp_2 ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_immediatGreaterOrEqualTest_eval (void) {
  enterCategoryMethod_eval (kTypeDescriptor_GALGAS_immediatGreaterOrEqualTest.mSlotID,
                            categoryMethod_immediatGreaterOrEqualTest_eval) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_immediatGreaterOrEqualTest_eval (defineCategoryMethod_immediatGreaterOrEqualTest_eval, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category method '@immediatLowerOrEqualTest eval'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_immediatLowerOrEqualTest_eval (const cPtr_immediatExpression * inObject,
                                                          const GALGAS_registerTable constinArgument_inRegisterTable,
                                                          const GALGAS_constantMap constinArgument_inConstantMap,
                                                          GALGAS_sint & outArgument_outResult,
                                                          C_Compiler * inCompiler
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_immediatLowerOrEqualTest * object = (const cPtr_immediatLowerOrEqualTest *) inObject ;
  macroValidObject (object, const cPtr_immediatLowerOrEqualTest) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_leftResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_leftResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (290)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_rightResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mRightExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_rightResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (291)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  //--- @lowerOrEqualExpressionForGeneration
  GALGAS_bool temp_0 (kIsInfOrEqual, var_leftResult.objectCompare (var_rightResult)) ;
  if (temp_0.isValidAndTrue ()) {
    //-------- @assignmentInstructionForGeneration
    //--- @literalSIntExpressionForGeneration
    GALGAS_sint temp_1 ((PMSInt32) 1L) ;
    outArgument_outResult = temp_1 ;
  }else{
    //-------- @assignmentInstructionForGeneration
    //--- @literalSIntExpressionForGeneration
    GALGAS_sint temp_2 ((PMSInt32) 0L) ;
    outArgument_outResult = temp_2 ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_immediatLowerOrEqualTest_eval (void) {
  enterCategoryMethod_eval (kTypeDescriptor_GALGAS_immediatLowerOrEqualTest.mSlotID,
                            categoryMethod_immediatLowerOrEqualTest_eval) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_immediatLowerOrEqualTest_eval (defineCategoryMethod_immediatLowerOrEqualTest_eval, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category method '@immediatGreaterTest eval'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_immediatGreaterTest_eval (const cPtr_immediatExpression * inObject,
                                                     const GALGAS_registerTable constinArgument_inRegisterTable,
                                                     const GALGAS_constantMap constinArgument_inConstantMap,
                                                     GALGAS_sint & outArgument_outResult,
                                                     C_Compiler * inCompiler
                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_immediatGreaterTest * object = (const cPtr_immediatGreaterTest *) inObject ;
  macroValidObject (object, const cPtr_immediatGreaterTest) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_leftResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_leftResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (306)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_rightResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mRightExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_rightResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (307)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  //--- @strictGreaterExpressionForGeneration
  GALGAS_bool temp_0 (kIsStrictSup, var_leftResult.objectCompare (var_rightResult)) ;
  if (temp_0.isValidAndTrue ()) {
    //-------- @assignmentInstructionForGeneration
    //--- @literalSIntExpressionForGeneration
    GALGAS_sint temp_1 ((PMSInt32) 1L) ;
    outArgument_outResult = temp_1 ;
  }else{
    //-------- @assignmentInstructionForGeneration
    //--- @literalSIntExpressionForGeneration
    GALGAS_sint temp_2 ((PMSInt32) 0L) ;
    outArgument_outResult = temp_2 ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_immediatGreaterTest_eval (void) {
  enterCategoryMethod_eval (kTypeDescriptor_GALGAS_immediatGreaterTest.mSlotID,
                            categoryMethod_immediatGreaterTest_eval) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_immediatGreaterTest_eval (defineCategoryMethod_immediatGreaterTest_eval, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category method '@immediatLowerTest eval'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_immediatLowerTest_eval (const cPtr_immediatExpression * inObject,
                                                   const GALGAS_registerTable constinArgument_inRegisterTable,
                                                   const GALGAS_constantMap constinArgument_inConstantMap,
                                                   GALGAS_sint & outArgument_outResult,
                                                   C_Compiler * inCompiler
                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_immediatLowerTest * object = (const cPtr_immediatLowerTest *) inObject ;
  macroValidObject (object, const cPtr_immediatLowerTest) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_leftResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_leftResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (322)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_rightResult ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mRightExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_rightResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (323)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  //--- @strictLowerExpressionForGeneration
  GALGAS_bool temp_0 (kIsStrictInf, var_leftResult.objectCompare (var_rightResult)) ;
  if (temp_0.isValidAndTrue ()) {
    //-------- @assignmentInstructionForGeneration
    //--- @literalSIntExpressionForGeneration
    GALGAS_sint temp_1 ((PMSInt32) 1L) ;
    outArgument_outResult = temp_1 ;
  }else{
    //-------- @assignmentInstructionForGeneration
    //--- @literalSIntExpressionForGeneration
    GALGAS_sint temp_2 ((PMSInt32) 0L) ;
    outArgument_outResult = temp_2 ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_immediatLowerTest_eval (void) {
  enterCategoryMethod_eval (kTypeDescriptor_GALGAS_immediatLowerTest.mSlotID,
                            categoryMethod_immediatLowerTest_eval) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_immediatLowerTest_eval (defineCategoryMethod_immediatLowerTest_eval, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category method '@immediatNegate eval'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_immediatNegate_eval (const cPtr_immediatExpression * inObject,
                                                const GALGAS_registerTable constinArgument_inRegisterTable,
                                                const GALGAS_constantMap constinArgument_inConstantMap,
                                                GALGAS_sint & outArgument_outResult,
                                                C_Compiler * inCompiler
                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_immediatNegate * object = (const cPtr_immediatNegate *) inObject ;
  macroValidObject (object, const cPtr_immediatNegate) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_result ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_result, inCompiler COMMA_SOURCE_FILE_AT_LINE (338)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  //--- @unaryMinusExpressionForGeneration
  GALGAS_sint temp_0 (var_result.operator_unary_minus (inCompiler COMMA_SOURCE_FILE_AT_LINE (339))) ;
  outArgument_outResult = temp_0 ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_immediatNegate_eval (void) {
  enterCategoryMethod_eval (kTypeDescriptor_GALGAS_immediatNegate.mSlotID,
                            categoryMethod_immediatNegate_eval) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_immediatNegate_eval (defineCategoryMethod_immediatNegate_eval, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category method '@immediatComplement eval'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_immediatComplement_eval (const cPtr_immediatExpression * inObject,
                                                    const GALGAS_registerTable constinArgument_inRegisterTable,
                                                    const GALGAS_constantMap constinArgument_inConstantMap,
                                                    GALGAS_sint & outArgument_outResult,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_immediatComplement * object = (const cPtr_immediatComplement *) inObject ;
  macroValidObject (object, const cPtr_immediatComplement) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_sint var_result ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_eval ((const cPtr_immediatExpression *) object->mAttribute_mExpression.ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_result, inCompiler COMMA_SOURCE_FILE_AT_LINE (349)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  //--- @complementExpressionForGeneration
  GALGAS_sint temp_0 (var_result.operator_tilde (SOURCE_FILE_AT_LINE (350))) ;
  outArgument_outResult = temp_0 ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_immediatComplement_eval (void) {
  enterCategoryMethod_eval (kTypeDescriptor_GALGAS_immediatComplement.mSlotID,
                            categoryMethod_immediatComplement_eval) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_immediatComplement_eval (defineCategoryMethod_immediatComplement_eval, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category method '@immediatSlice eval'              *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_immediatSlice_eval (const cPtr_immediatExpression * inObject,
                                               const GALGAS_registerTable constinArgument_inRegisterTable,
                                               const GALGAS_constantMap constinArgument_inConstantMap,
                                               GALGAS_sint & outArgument_outResult,
                                               C_Compiler * inCompiler
                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_immediatSlice * object = (const cPtr_immediatSlice *) inObject ;
  macroValidObject (object, const cPtr_immediatSlice) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_bitSliceTable var_bitSliceTable ;
  //-------- @assignmentInstructionForGeneration
  //--- @literalSIntExpressionForGeneration
  GALGAS_sint temp_0 ((PMSInt32) 0L) ;
  outArgument_outResult = temp_0 ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_uintlist joker_13070_0 ; // Joker input parameter
  GALGAS_uint joker_13073_0 ; // Joker input parameter
  GALGAS_string joker_13092_0 ; // Joker input parameter
  constinArgument_inRegisterTable.method_searchKey (object->mAttribute_mRegisterName, joker_13070_0, joker_13073_0, var_bitSliceTable, joker_13092_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (362)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_stringset var_sliceNameSet (GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (363))) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_immediatSliceExpressionList enumerator_13168 (object->mAttribute_mSliceExpressionList, true) ;
  //--- simple foreach instruction
  while (enumerator_13168.hasCurrentObject ()) {
    //-------- @ifInstructionForGeneration
    //--- @readerCallExpressionForGeneration
    //--- @readerCallExpressionForGeneration
    GALGAS_string temp_1 (enumerator_13168.current_mSliceName ().reader_string (SOURCE_FILE_AT_LINE (365))) ;
    GALGAS_bool temp_2 (var_sliceNameSet.reader_hasKey (temp_1 COMMA_SOURCE_FILE_AT_LINE (365))) ;
    if (temp_2.isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      //--- @concatExpressionForGeneration
      //--- @concatExpressionForGeneration
      //--- @literalStringExpressionForGeneration
      GALGAS_string temp_3 ("the '") ;
      //--- @readerCallExpressionForGeneration
      GALGAS_string temp_4 (enumerator_13168.current_mSliceName ().reader_string (SOURCE_FILE_AT_LINE (366))) ;
      GALGAS_string temp_5 (temp_3.operator_concat (temp_4 COMMA_SOURCE_FILE_AT_LINE (366))) ;
      //--- @literalStringExpressionForGeneration
      GALGAS_string temp_6 ("' bit field has been already defined") ;
      GALGAS_string temp_7 (temp_5.operator_concat (temp_6 COMMA_SOURCE_FILE_AT_LINE (366))) ;
      GALGAS_location location_8 (enumerator_13168.current_mSliceName ().reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_8, temp_7 COMMA_SOURCE_FILE_AT_LINE (366)) ;
    }else{
      //-------- @addAssignInstructionForGeneration
      //--- @readerCallExpressionForGeneration
      GALGAS_string temp_9 (enumerator_13168.current_mSliceName ().reader_string (SOURCE_FILE_AT_LINE (368))) ;
      var_sliceNameSet.addAssign_operation (temp_9 COMMA_SOURCE_FILE_AT_LINE (368)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_uint var_sliceIndex ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_uint var_sliceSize ;
      //-------- @methodCallInstructionForGeneration
      var_bitSliceTable.method_searchKey (enumerator_13168.current_mSliceName (), var_sliceIndex, var_sliceSize, inCompiler COMMA_SOURCE_FILE_AT_LINE (371)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @localVariableDeclarationForGeneration
      GALGAS_sint var_result ;
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_eval ((const cPtr_immediatExpression *) enumerator_13168.current_mExpression ().ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_result, inCompiler COMMA_SOURCE_FILE_AT_LINE (372)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @ifInstructionForGeneration
      //--- @orExpressionForGeneration
      //--- @strictLowerExpressionForGeneration
      //--- @literalSIntExpressionForGeneration
      GALGAS_sint temp_10 ((PMSInt32) 0L) ;
      GALGAS_bool temp_11 (kIsStrictInf, var_result.objectCompare (temp_10)) ;
      //--- @strictGreaterExpressionForGeneration
      //--- @subExpressionForGeneration
      //--- @literalSIntExpressionForGeneration
      GALGAS_sint temp_12 ((PMSInt32) 1L) ;
      GALGAS_sint temp_13 (temp_12.left_shift_operation (var_sliceSize COMMA_SOURCE_FILE_AT_LINE (373))) ;
      //--- @literalSIntExpressionForGeneration
      GALGAS_sint temp_14 ((PMSInt32) 1L) ;
      GALGAS_sint temp_15 (temp_13.substract_operation (temp_14, inCompiler COMMA_SOURCE_FILE_AT_LINE (373))) ;
      GALGAS_bool temp_16 (kIsStrictSup, var_result.objectCompare (temp_15)) ;
      GALGAS_bool temp_17 (temp_11.operator_or (temp_16 COMMA_SOURCE_FILE_AT_LINE (373))) ;
      if (temp_17.isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        //--- @concatExpressionForGeneration
        //--- @concatExpressionForGeneration
        //--- @concatExpressionForGeneration
        //--- @concatExpressionForGeneration
        //--- @concatExpressionForGeneration
        //--- @concatExpressionForGeneration
        //--- @literalStringExpressionForGeneration
        GALGAS_string temp_18 ("invalid immediat value associated to the '") ;
        //--- @readerCallExpressionForGeneration
        GALGAS_string temp_19 (enumerator_13168.current_mSliceName ().reader_string (SOURCE_FILE_AT_LINE (374))) ;
        GALGAS_string temp_20 (temp_18.operator_concat (temp_19 COMMA_SOURCE_FILE_AT_LINE (374))) ;
        //--- @literalStringExpressionForGeneration
        GALGAS_string temp_21 ("' bit field, evaluated as ") ;
        GALGAS_string temp_22 (temp_20.operator_concat (temp_21 COMMA_SOURCE_FILE_AT_LINE (374))) ;
        //--- @readerCallExpressionForGeneration
        GALGAS_string temp_23 (var_result.reader_string (SOURCE_FILE_AT_LINE (374))) ;
        GALGAS_string temp_24 (temp_22.operator_concat (temp_23 COMMA_SOURCE_FILE_AT_LINE (374))) ;
        //--- @literalStringExpressionForGeneration
        GALGAS_string temp_25 (" (should be between 0 and ") ;
        GALGAS_string temp_26 (temp_24.operator_concat (temp_25 COMMA_SOURCE_FILE_AT_LINE (375))) ;
        //--- @readerCallExpressionForGeneration
        //--- @subExpressionForGeneration
        //--- @literalUIntExpressionForGeneration
        GALGAS_uint temp_27 ((PMUInt32) 1U) ;
        GALGAS_uint temp_28 (temp_27.left_shift_operation (var_sliceSize COMMA_SOURCE_FILE_AT_LINE (375))) ;
        //--- @literalUIntExpressionForGeneration
        GALGAS_uint temp_29 ((PMUInt32) 1U) ;
        GALGAS_uint temp_30 (temp_28.substract_operation (temp_29, inCompiler COMMA_SOURCE_FILE_AT_LINE (375))) ;
        GALGAS_string temp_31 (temp_30.reader_string (SOURCE_FILE_AT_LINE (375))) ;
        GALGAS_string temp_32 (temp_26.operator_concat (temp_31 COMMA_SOURCE_FILE_AT_LINE (375))) ;
        //--- @literalStringExpressionForGeneration
        GALGAS_string temp_33 (")") ;
        GALGAS_string temp_34 (temp_32.operator_concat (temp_33 COMMA_SOURCE_FILE_AT_LINE (375))) ;
        GALGAS_location location_35 (enumerator_13168.current_mSliceName ().reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_35, temp_34 COMMA_SOURCE_FILE_AT_LINE (374)) ;
      }
      //-------- @assignmentInstructionForGeneration
      //--- @orExpressionForGeneration
      GALGAS_sint temp_36 (var_result.left_shift_operation (var_sliceIndex COMMA_SOURCE_FILE_AT_LINE (377))) ;
      GALGAS_sint temp_37 (outArgument_outResult.operator_or (temp_36 COMMA_SOURCE_FILE_AT_LINE (377))) ;
      outArgument_outResult = temp_37 ;
    }
    enumerator_13168.gotoNextObject () ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_immediatSlice_eval (void) {
  enterCategoryMethod_eval (kTypeDescriptor_GALGAS_immediatSlice.mSlotID,
                            categoryMethod_immediatSlice_eval) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_immediatSlice_eval (defineCategoryMethod_immediatSlice_eval, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Abstract category method '@bitNumberExpression getBitNumber'        *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_bitNumberExpression_getBitNumber> gCategoryMethodTable_bitNumberExpression_getBitNumber ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_getBitNumber (const PMSInt32 inClassIndex,
                                       categoryMethodSignature_bitNumberExpression_getBitNumber inMethod) {
  gCategoryMethodTable_bitNumberExpression_getBitNumber.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_bitNumberExpression_getBitNumber (void) {
  gCategoryMethodTable_bitNumberExpression_getBitNumber.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_bitNumberExpression_getBitNumber (NULL,
                                                             freeCategoryMethod_bitNumberExpression_getBitNumber) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_getBitNumber (const cPtr_bitNumberExpression * inObject,
                                      const GALGAS_bitSliceTable constin_inBitSliceTable,
                                      GALGAS_uint & out_outBitNumber,
                                      C_Compiler * inCompiler
                                      COMMA_LOCATION_ARGS) {
//--- Drop output arguments
  out_outBitNumber.drop () ;
//--- Find method
  if (NULL != inObject) {
    macroValidObject (inObject, const cPtr_bitNumberExpression) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_bitNumberExpression_getBitNumber f = NULL ;
    if (classIndex < gCategoryMethodTable_bitNumberExpression_getBitNumber.count ()) {
      f = gCategoryMethodTable_bitNumberExpression_getBitNumber (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_bitNumberExpression_getBitNumber.count ()) {
           f = gCategoryMethodTable_bitNumberExpression_getBitNumber (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_bitNumberExpression_getBitNumber.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    f (inObject, constin_inBitSliceTable, out_outBitNumber, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@bitNumberLiteralValue getBitNumber'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_bitNumberLiteralValue_getBitNumber (const cPtr_bitNumberExpression * inObject,
                                                               const GALGAS_bitSliceTable /* constinArgument_inBitSliceTable */,
                                                               GALGAS_uint & outArgument_outBitNumber,
                                                               C_Compiler * inCompiler
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_bitNumberLiteralValue * object = (const cPtr_bitNumberLiteralValue *) inObject ;
  macroValidObject (object, const cPtr_bitNumberLiteralValue) ;
  //-------- @ifInstructionForGeneration
  //--- @strictGreaterExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGAS_uint temp_0 (object->mAttribute_mBitNumberLiteralValue.reader_uint (SOURCE_FILE_AT_LINE (399))) ;
  //--- @literalUIntExpressionForGeneration
  GALGAS_uint temp_1 ((PMUInt32) 7U) ;
  GALGAS_bool temp_2 (kIsStrictSup, temp_0.objectCompare (temp_1)) ;
  if (temp_2.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    //--- @concatExpressionForGeneration
    //--- @concatExpressionForGeneration
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_3 ("The bit number is ") ;
    //--- @readerCallExpressionForGeneration
    //--- @readerCallExpressionForGeneration
    GALGAS_uint temp_4 (object->mAttribute_mBitNumberLiteralValue.reader_uint (SOURCE_FILE_AT_LINE (400))) ;
    GALGAS_string temp_5 (temp_4.reader_string (SOURCE_FILE_AT_LINE (400))) ;
    GALGAS_string temp_6 (temp_3.operator_concat (temp_5 COMMA_SOURCE_FILE_AT_LINE (400))) ;
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_7 (" (should be <= 7)") ;
    GALGAS_string temp_8 (temp_6.operator_concat (temp_7 COMMA_SOURCE_FILE_AT_LINE (400))) ;
    GALGAS_location location_9 (object->mAttribute_mBitNumberLiteralValue.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_9, temp_8 COMMA_SOURCE_FILE_AT_LINE (400)) ;
  }
  //-------- @assignmentInstructionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGAS_uint temp_10 (object->mAttribute_mBitNumberLiteralValue.reader_uint (SOURCE_FILE_AT_LINE (402))) ;
  outArgument_outBitNumber = temp_10 ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_bitNumberLiteralValue_getBitNumber (void) {
  enterCategoryMethod_getBitNumber (kTypeDescriptor_GALGAS_bitNumberLiteralValue.mSlotID,
                                    categoryMethod_bitNumberLiteralValue_getBitNumber) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_bitNumberLiteralValue_getBitNumber (defineCategoryMethod_bitNumberLiteralValue_getBitNumber, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category method '@bitNumberLabelValue getBitNumber'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_bitNumberLabelValue_getBitNumber (const cPtr_bitNumberExpression * inObject,
                                                             const GALGAS_bitSliceTable constinArgument_inBitSliceTable,
                                                             GALGAS_uint & outArgument_outBitNumber,
                                                             C_Compiler * inCompiler
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_bitNumberLabelValue * object = (const cPtr_bitNumberLabelValue *) inObject ;
  macroValidObject (object, const cPtr_bitNumberLabelValue) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_uint var_sliceIndex ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_uint var_sliceSize ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inBitSliceTable.method_searchKey (object->mAttribute_mBitNumberLabelValue, var_sliceIndex, var_sliceSize, inCompiler COMMA_SOURCE_FILE_AT_LINE (413)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  //--- @strictGreaterExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGAS_uint temp_0 (object->mAttribute_mBitNumberIndexValue.reader_uint (SOURCE_FILE_AT_LINE (414))) ;
  GALGAS_bool temp_1 (kIsStrictSup, temp_0.objectCompare (var_sliceSize)) ;
  if (temp_1.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    //--- @concatExpressionForGeneration
    //--- @concatExpressionForGeneration
    //--- @concatExpressionForGeneration
    //--- @concatExpressionForGeneration
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_2 ("The ") ;
    //--- @readerCallExpressionForGeneration
    //--- @readerCallExpressionForGeneration
    GALGAS_uint temp_3 (object->mAttribute_mBitNumberIndexValue.reader_uint (SOURCE_FILE_AT_LINE (415))) ;
    GALGAS_string temp_4 (temp_3.reader_string (SOURCE_FILE_AT_LINE (415))) ;
    GALGAS_string temp_5 (temp_2.operator_concat (temp_4 COMMA_SOURCE_FILE_AT_LINE (415))) ;
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_6 (" index is too large (should be < ") ;
    GALGAS_string temp_7 (temp_5.operator_concat (temp_6 COMMA_SOURCE_FILE_AT_LINE (416))) ;
    //--- @readerCallExpressionForGeneration
    GALGAS_string temp_8 (var_sliceSize.reader_string (SOURCE_FILE_AT_LINE (416))) ;
    GALGAS_string temp_9 (temp_7.operator_concat (temp_8 COMMA_SOURCE_FILE_AT_LINE (416))) ;
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_10 (")") ;
    GALGAS_string temp_11 (temp_9.operator_concat (temp_10 COMMA_SOURCE_FILE_AT_LINE (416))) ;
    GALGAS_location location_12 (object->mAttribute_mBitNumberIndexValue.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_12, temp_11 COMMA_SOURCE_FILE_AT_LINE (415)) ;
  }
  //-------- @assignmentInstructionForGeneration
  //--- @addExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGAS_uint temp_13 (object->mAttribute_mBitNumberIndexValue.reader_uint (SOURCE_FILE_AT_LINE (418))) ;
  GALGAS_uint temp_14 (var_sliceIndex.add_operation (temp_13, inCompiler COMMA_SOURCE_FILE_AT_LINE (418))) ;
  outArgument_outBitNumber = temp_14 ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_bitNumberLabelValue_getBitNumber (void) {
  enterCategoryMethod_getBitNumber (kTypeDescriptor_GALGAS_bitNumberLabelValue.mSlotID,
                                    categoryMethod_bitNumberLabelValue_getBitNumber) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_bitNumberLabelValue_getBitNumber (defineCategoryMethod_bitNumberLabelValue_getBitNumber, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


