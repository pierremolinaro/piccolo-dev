//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'ipic_generic.h'                            *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     october 26th, 2010, at 16h58'7"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef ipic_generic_ENTITIES_DEFINED
#define ipic_generic_ENTITIES_DEFINED

//---------------------------------------------------------------------------*

#include "galgas2/predefined-types.h"

//---------------------------------------------------------------------------*

#include "piccoloDevice_semantics.h"
#include "generic_metamodel.h"

//---------------------------------------------------------------------------*

class GALGAS_uint ;
class GALGAS_string ;
class GALGAS_lstring ;
class GALGAS_constantMap ;
class GALGAS_stringset ;
class GALGAS_lstringlist ;
class GALGAS_bool ;
class GALGAS_location ;
class GALGAS_stringlist ;
class GALGAS_sint ;
class GALGAS_routineMap ;
class GALGAS_routineKind ;
class GALGAS_type ;
class GALGAS_object ;
class GALGAS_symbolTableForOptimizations ;
class GALGAS_registerTable ;
class GALGAS_uintlist ;
class GALGAS_bitSliceTable ;
class GALGAS_ramBankTable ;
class GALGAS_processorType ;
class GALGAS_luint ;
class GALGAS_illegalMaskList ;
class GALGAS_fieldSettingMap ;
class GALGAS_configRegisterMaskMap ;
class GALGAS_configRegisterMap ;
class GALGAS_piccoloDeviceModel ;
class GALGAS_registerExpression ;
class GALGAS_declarationInRam ;
class GALGAS_declarationInRamList ;
class GALGAS_commonBranchList ;
class GALGAS_ramDefinitionList ;
class GALGAS_configSettingList ;
class GALGAS_configDefinitionList ;
class GALGAS_immediatExpression ;
class GALGAS_immediatExpressionList ;
class GALGAS_immediatSliceExpressionList ;
class GALGAS_constantDefinitionList ;
class GALGAS_actualConfigurationMap ;
class GALGAS_bitNumberExpression ;
class GALGAS_filewrapper ;
class GALGAS_uint_36__34_ ;
class GALGAS_sint_36__34_ ;
class GALGAS_double ;
class GALGAS_char ;
class GALGAS_functionlist ;
class GALGAS_function ;
class GALGAS_typelist ;
class GALGAS_objectlist ;
class GALGAS_binaryset ;
class GALGAS_uint_36__34_list ;
class GALGAS_data ;
class GALGAS_luintlist ;
class GALGAS_lbool ;
class GALGAS_luint_36__34_ ;
class GALGAS_lsint ;
class GALGAS_lsint_36__34_ ;
class GALGAS_lchar ;
class GALGAS_ldouble ;
class GALGAS_bitNumberLiteralValue ;
class GALGAS_bitNumberLabelValue ;
class GALGAS_byteDeclarationInRam ;
class GALGAS_commonDeclarationInRam ;
class GALGAS_immediatInteger ;
class GALGAS_immediatRegister ;
class GALGAS_immediatAdd ;
class GALGAS_immediatSub ;
class GALGAS_immediatMul ;
class GALGAS_immediatDiv ;
class GALGAS_immediatMod ;
class GALGAS_immediatOr ;
class GALGAS_immediatAnd ;
class GALGAS_immediatXor ;
class GALGAS_immediatLeftShift ;
class GALGAS_immediatRightShift ;
class GALGAS_immediatEqualTest ;
class GALGAS_immediatNotEqualTest ;
class GALGAS_immediatGreaterTest ;
class GALGAS_immediatGreaterOrEqualTest ;
class GALGAS_immediatLowerTest ;
class GALGAS_immediatLowerOrEqualTest ;
class GALGAS_immediatNegate ;
class GALGAS_immediatComplement ;
class GALGAS_immediatSlice ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'setEmitAddress'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setEmitAddress (const GALGAS_uint constinArgument0,
                             C_Compiler * inCompiler
                             COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'currentEmitAddress'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_currentEmitAddress (GALGAS_uint & outArgument0,
                                 C_Compiler * inCompiler
                                 COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Routine 'emitCode'                             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_emitCode (const GALGAS_uint constinArgument0,
                       C_Compiler * inCompiler
                       COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Routine 'emitByte'                             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_emitByte (const GALGAS_uint constinArgument0,
                       C_Compiler * inCompiler
                       COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'getGeneratedContents'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_getGeneratedContents (GALGAS_string & outArgument0,
                                   C_Compiler * inCompiler
                                   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'get_C_ArrayImplementation'                    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_get_5F_C_5F_ArrayImplementation (const GALGAS_string constinArgument0,
                                              GALGAS_string & outArgument1,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'get_C_ArrayHeader'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_get_5F_C_5F_ArrayHeader (const GALGAS_string constinArgument0,
                                      GALGAS_string & outArgument1,
                                      C_Compiler * inCompiler
                                      COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'checkCurrentEmitAddress'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkCurrentEmitAddress (const GALGAS_uint constinArgument0,
                                      C_Compiler * inCompiler
                                      COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             @constantMap map                              *
//                                                                           *
//---------------------------------------------------------------------------*

class cMapElement_constantMap ;

//---------------------------------------------------------------------------*

class GALGAS_constantMap : public AC_GALGAS_map {
//--------------------------------- Default constructor
  public : GALGAS_constantMap (void) ;

//--------------------------------- Handle copy
  public : GALGAS_constantMap (const GALGAS_constantMap & inSource) ;
  public : GALGAS_constantMap & operator = (const GALGAS_constantMap & inSource) ;

//-- Start of generic part --*

//--------------------------------- Object cloning
  protected : virtual AC_GALGAS_root * clonedObject (void) const ;

//--------------------------------- Object extraction
  public : static GALGAS_constantMap extractObject (const GALGAS_object & inObject,
                                                    C_Compiler * inCompiler,
                                                    const GALGAS_location & inErrorLocation
                                                    COMMA_LOCATION_ARGS) ;

//--------------------------------- GALGAS constructors
  public : static GALGAS_constantMap constructor_emptyMap (LOCATION_ARGS) ;

  public : static GALGAS_constantMap constructor_mapWithMapToOverride (const GALGAS_constantMap & inOperand0
                                                                       COMMA_LOCATION_ARGS) ;


//--------------------------------- Modifiers
  public : VIRTUAL_IN_DEBUG void modifier_insertKey (GALGAS_lstring constinArgument0,
                                                     GALGAS_sint constinArgument1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMValueForKey (GALGAS_sint constinArgument0,
                                                           GALGAS_string constinArgument1,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) ;


//--------------------------------- Instance Methods
  public : VIRTUAL_IN_DEBUG void method_searchKey (GALGAS_lstring constinArgument0,
                                                   GALGAS_sint & outArgument1,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const ;

//--------------------------------- Class Methods

//--------------------------------- Readers
  public : VIRTUAL_IN_DEBUG GALGAS_sint reader_mValueForKey (const GALGAS_string & constinOperand0,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_constantMap reader_overriddenMap (LOCATION_ARGS) const ;


//--------------------------------- Introspection
  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;
//--------------------------------- 'with' accessors
  public : VIRTUAL_IN_DEBUG cMapElement_constantMap * readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                const GALGAS_string & inKey
                                                                                                COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG cMapElement_constantMap * readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                   const GALGAS_lstring & inKey
                                                                                                   COMMA_LOCATION_ARGS) ;

//--------------------------------- Friend

  friend class cEnumerator_constantMap ;
 
} ; // End of GALGAS_constantMap class

//---------------------------------------------------------------------------*
//   Enumerator declaration                                                  *
//---------------------------------------------------------------------------*

class cEnumerator_constantMap : public cGenericAbstractEnumerator {
  public : cEnumerator_constantMap (const GALGAS_constantMap & inEnumeratedObject,
                                    const bool inAscending) ;

//--- Current element access
  public : GALGAS_lstring current_lkey (void) const ;
  public : GALGAS_sint current_mValue (void) const ;
} ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_constantMap ;

//--------------------------------- 'with' accessors
cCollectionElement * readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                               GALGAS_constantMap & ioMap,
                                                               GALGAS_string & inKey
                                                               COMMA_LOCATION_ARGS) ;

cCollectionElement * readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                  GALGAS_constantMap & ioMap,
                                                                  GALGAS_lstring & inKey
                                                                  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                              @routineMap map                              *
//                                                                           *
//---------------------------------------------------------------------------*

class cMapElement_routineMap ;

//---------------------------------------------------------------------------*

class GALGAS_routineMap : public AC_GALGAS_map {
//--------------------------------- Default constructor
  public : GALGAS_routineMap (void) ;

//--------------------------------- Handle copy
  public : GALGAS_routineMap (const GALGAS_routineMap & inSource) ;
  public : GALGAS_routineMap & operator = (const GALGAS_routineMap & inSource) ;

//-- Start of generic part --*

//--------------------------------- Object cloning
  protected : virtual AC_GALGAS_root * clonedObject (void) const ;

//--------------------------------- Object extraction
  public : static GALGAS_routineMap extractObject (const GALGAS_object & inObject,
                                                   C_Compiler * inCompiler,
                                                   const GALGAS_location & inErrorLocation
                                                   COMMA_LOCATION_ARGS) ;

//--------------------------------- GALGAS constructors
  public : static GALGAS_routineMap constructor_emptyMap (LOCATION_ARGS) ;

  public : static GALGAS_routineMap constructor_mapWithMapToOverride (const GALGAS_routineMap & inOperand0
                                                                      COMMA_LOCATION_ARGS) ;


//--------------------------------- Modifiers
  public : VIRTUAL_IN_DEBUG void modifier_insertKey (GALGAS_lstring constinArgument0,
                                                     GALGAS_bool constinArgument1,
                                                     GALGAS_uint constinArgument2,
                                                     GALGAS_uint constinArgument3,
                                                     GALGAS_bool constinArgument4,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMIsNoReturnForKey (GALGAS_bool constinArgument0,
                                                                GALGAS_string constinArgument1,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMPreservesBankForKey (GALGAS_bool constinArgument0,
                                                                   GALGAS_string constinArgument1,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMRequiredBankForKey (GALGAS_uint constinArgument0,
                                                                  GALGAS_string constinArgument1,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMReturnedBankForKey (GALGAS_uint constinArgument0,
                                                                  GALGAS_string constinArgument1,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) ;


//--------------------------------- Instance Methods
  public : VIRTUAL_IN_DEBUG void method_searchKey (GALGAS_lstring constinArgument0,
                                                   GALGAS_bool & outArgument1,
                                                   GALGAS_uint & outArgument2,
                                                   GALGAS_uint & outArgument3,
                                                   GALGAS_bool & outArgument4,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const ;

//--------------------------------- Class Methods

//--------------------------------- Readers
  public : VIRTUAL_IN_DEBUG GALGAS_bool reader_mIsNoReturnForKey (const GALGAS_string & constinOperand0,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_bool reader_mPreservesBankForKey (const GALGAS_string & constinOperand0,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_uint reader_mRequiredBankForKey (const GALGAS_string & constinOperand0,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_uint reader_mReturnedBankForKey (const GALGAS_string & constinOperand0,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_routineMap reader_overriddenMap (LOCATION_ARGS) const ;


//--------------------------------- Introspection
  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;
//--------------------------------- 'with' accessors
  public : VIRTUAL_IN_DEBUG cMapElement_routineMap * readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                               const GALGAS_string & inKey
                                                                                               COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG cMapElement_routineMap * readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                  const GALGAS_lstring & inKey
                                                                                                  COMMA_LOCATION_ARGS) ;

//--------------------------------- Friend

  friend class cEnumerator_routineMap ;
 
} ; // End of GALGAS_routineMap class

//---------------------------------------------------------------------------*
//   Enumerator declaration                                                  *
//---------------------------------------------------------------------------*

class cEnumerator_routineMap : public cGenericAbstractEnumerator {
  public : cEnumerator_routineMap (const GALGAS_routineMap & inEnumeratedObject,
                                   const bool inAscending) ;

//--- Current element access
  public : GALGAS_lstring current_lkey (void) const ;
  public : GALGAS_bool current_mIsNoReturn (void) const ;
  public : GALGAS_uint current_mRequiredBank (void) const ;
  public : GALGAS_uint current_mReturnedBank (void) const ;
  public : GALGAS_bool current_mPreservesBank (void) const ;
} ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_routineMap ;

//--------------------------------- 'with' accessors
cCollectionElement * readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                               GALGAS_routineMap & ioMap,
                                                               GALGAS_string & inKey
                                                               COMMA_LOCATION_ARGS) ;

cCollectionElement * readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                  GALGAS_routineMap & ioMap,
                                                                  GALGAS_lstring & inKey
                                                                  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             @routineKind enum                             *
//                                                                           *
//---------------------------------------------------------------------------*

class GALGAS_routineKind : public AC_GALGAS_root {
//--------------------------------- Default constructor
  public : GALGAS_routineKind (void) ;

//--------------------------------- Enumeration
  public : typedef enum {
    kNotBuilt,
    kEnum_regularRoutine,
    kEnum_noReturnRoutine,
    kEnum_interruptRoutine
  } enumeration ;
  
//--------------------------------- Private data member
  private : enumeration mEnum ;

//--------------------------------- Accessors
  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return kNotBuilt != mEnum ; }
  public : VIRTUAL_IN_DEBUG inline void drop (void) { mEnum = kNotBuilt ; }
  public : inline enumeration enumValue (void) const { return mEnum ; }

//-- Start of generic part --*

//--------------------------------- Object cloning
  protected : virtual AC_GALGAS_root * clonedObject (void) const ;

//--------------------------------- Object extraction
  public : static GALGAS_routineKind extractObject (const GALGAS_object & inObject,
                                                    C_Compiler * inCompiler,
                                                    const GALGAS_location & inErrorLocation
                                                    COMMA_LOCATION_ARGS) ;

//--------------------------------- GALGAS constructors
  public : static GALGAS_routineKind constructor_interruptRoutine (LOCATION_ARGS) ;

  public : static GALGAS_routineKind constructor_noReturnRoutine (LOCATION_ARGS) ;

  public : static GALGAS_routineKind constructor_regularRoutine (LOCATION_ARGS) ;

//--------------------------------- Implementation of reader 'description'
  public : VIRTUAL_IN_DEBUG void description (C_String & ioString,
                                              const PMSInt32 inIndentation) const ;
//--------------------------------- Comparison
  public : enumComparisonResult objectCompare (const GALGAS_routineKind & inOperand) const ;

//--------------------------------- Modifiers

//--------------------------------- Instance Methods
//--------------------------------- Class Methods

//--------------------------------- Readers

//--------------------------------- Introspection
  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;
 
} ; // End of GALGAS_routineKind class


//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_routineKind ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     @symbolTableForOptimizations map                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cMapElement_symbolTableForOptimizations ;

//---------------------------------------------------------------------------*

class GALGAS_symbolTableForOptimizations : public AC_GALGAS_map {
//--------------------------------- Default constructor
  public : GALGAS_symbolTableForOptimizations (void) ;

//--------------------------------- Handle copy
  public : GALGAS_symbolTableForOptimizations (const GALGAS_symbolTableForOptimizations & inSource) ;
  public : GALGAS_symbolTableForOptimizations & operator = (const GALGAS_symbolTableForOptimizations & inSource) ;

//-- Start of generic part --*

//--------------------------------- Object cloning
  protected : virtual AC_GALGAS_root * clonedObject (void) const ;

//--------------------------------- Object extraction
  public : static GALGAS_symbolTableForOptimizations extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler,
                                                                    const GALGAS_location & inErrorLocation
                                                                    COMMA_LOCATION_ARGS) ;

//--------------------------------- GALGAS constructors
  public : static GALGAS_symbolTableForOptimizations constructor_emptyMap (LOCATION_ARGS) ;

  public : static GALGAS_symbolTableForOptimizations constructor_mapWithMapToOverride (const GALGAS_symbolTableForOptimizations & inOperand0
                                                                                       COMMA_LOCATION_ARGS) ;


//--------------------------------- Modifiers
  public : VIRTUAL_IN_DEBUG void modifier_insertKey (GALGAS_lstring constinArgument0,
                                                     GALGAS_uint constinArgument1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_removeKey (GALGAS_lstring constinArgument0,
                                                     GALGAS_uint & outArgument1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMDefinitionLineIndexForKey (GALGAS_uint constinArgument0,
                                                                         GALGAS_string constinArgument1,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) ;


//--------------------------------- Instance Methods
  public : VIRTUAL_IN_DEBUG void method_searchKey (GALGAS_lstring constinArgument0,
                                                   GALGAS_uint & outArgument1,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const ;

//--------------------------------- Class Methods

//--------------------------------- Readers
  public : VIRTUAL_IN_DEBUG GALGAS_uint reader_mDefinitionLineIndexForKey (const GALGAS_string & constinOperand0,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_symbolTableForOptimizations reader_overriddenMap (LOCATION_ARGS) const ;


//--------------------------------- Introspection
  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;
//--------------------------------- 'with' accessors
  public : VIRTUAL_IN_DEBUG cMapElement_symbolTableForOptimizations * readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                const GALGAS_string & inKey
                                                                                                                COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG cMapElement_symbolTableForOptimizations * readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                   const GALGAS_lstring & inKey
                                                                                                                   COMMA_LOCATION_ARGS) ;

//--------------------------------- Friend

  friend class cEnumerator_symbolTableForOptimizations ;
 
} ; // End of GALGAS_symbolTableForOptimizations class

//---------------------------------------------------------------------------*
//   Enumerator declaration                                                  *
//---------------------------------------------------------------------------*

class cEnumerator_symbolTableForOptimizations : public cGenericAbstractEnumerator {
  public : cEnumerator_symbolTableForOptimizations (const GALGAS_symbolTableForOptimizations & inEnumeratedObject,
                                                    const bool inAscending) ;

//--- Current element access
  public : GALGAS_lstring current_lkey (void) const ;
  public : GALGAS_uint current_mDefinitionLineIndex (void) const ;
} ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_symbolTableForOptimizations ;

//--------------------------------- 'with' accessors
cCollectionElement * readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                               GALGAS_symbolTableForOptimizations & ioMap,
                                                               GALGAS_string & inKey
                                                               COMMA_LOCATION_ARGS) ;

cCollectionElement * readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                  GALGAS_symbolTableForOptimizations & ioMap,
                                                                  GALGAS_lstring & inKey
                                                                  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'print_constant_definition'                    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_print_5F_constant_5F_definition (const GALGAS_constantMap constinArgument0,
                                              GALGAS_string & ioArgument1,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Abstract category method '@bitNumberExpression getBitNumber'        *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*categoryMethodSignature_bitNumberExpression_getBitNumber) (const cPtr_bitNumberExpression * inObject,
                                                                          const GALGAS_bitSliceTable constinArgument0,
                                                                          GALGAS_uint & outArgument1,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_getBitNumber (const PMSInt32 inClassIndex,
                                       categoryMethodSignature_bitNumberExpression_getBitNumber inMethod) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_getBitNumber (const cPtr_bitNumberExpression * inObject,
                                      const GALGAS_bitSliceTable constin_inBitSliceTable,
                                      GALGAS_uint & out_outBitNumber,
                                      C_Compiler * inCompiler
                                      COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Abstract category method '@immediatExpression eval'            *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*categoryMethodSignature_immediatExpression_eval) (const cPtr_immediatExpression * inObject,
                                                                 const GALGAS_registerTable constinArgument0,
                                                                 const GALGAS_constantMap constinArgument1,
                                                                 GALGAS_sint & outArgument2,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_eval (const PMSInt32 inClassIndex,
                               categoryMethodSignature_immediatExpression_eval inMethod) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_eval (const cPtr_immediatExpression * inObject,
                              const GALGAS_registerTable constin_inRegisterTable,
                              const GALGAS_constantMap constin_inConstantMap,
                              GALGAS_sint & out_outResult,
                              C_Compiler * inCompiler
                              COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Class for element of '@constantMap' map                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cMapElement_constantMap : public cMapElement {
//--- Map attributes
  public : GALGAS_sint mAttribute_mValue ;

//--- Constructor
  public : cMapElement_constantMap (const GALGAS_lstring & inKey,
                                    const GALGAS_sint & in_mValue
                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cMapElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Class for element of '@routineMap' map                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cMapElement_routineMap : public cMapElement {
//--- Map attributes
  public : GALGAS_bool mAttribute_mIsNoReturn ;
  public : GALGAS_uint mAttribute_mRequiredBank ;
  public : GALGAS_uint mAttribute_mReturnedBank ;
  public : GALGAS_bool mAttribute_mPreservesBank ;

//--- Constructor
  public : cMapElement_routineMap (const GALGAS_lstring & inKey,
                                   const GALGAS_bool & in_mIsNoReturn,
                                   const GALGAS_uint & in_mRequiredBank,
                                   const GALGAS_uint & in_mReturnedBank,
                                   const GALGAS_bool & in_mPreservesBank
                                   COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cMapElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Class for element of '@symbolTableForOptimizations' map          *
//                                                                           *
//---------------------------------------------------------------------------*

class cMapElement_symbolTableForOptimizations : public cMapElement {
//--- Map attributes
  public : GALGAS_uint mAttribute_mDefinitionLineIndex ;

//--- Constructor
  public : cMapElement_symbolTableForOptimizations (const GALGAS_lstring & inKey,
                                                    const GALGAS_uint & in_mDefinitionLineIndex
                                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cMapElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

#endif
