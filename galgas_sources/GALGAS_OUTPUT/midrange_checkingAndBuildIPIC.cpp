//---------------------------------------------------------------------------*
//                                                                           *
//                 File 'midrange_checkingAndBuildIPIC.cpp'                  *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       june 5th, 2009, at 22h15'12"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "midrange_checkingAndBuildIPIC.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "midrange_checkingAndBuildIPIC.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@midrange_instruction.instructionUsesGOTOorCALL'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction * operand_731,
                                GGS_bool & /* var_cas_ioUsesGOTOorCALL */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_731 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_instruction.instructionUsesGOTOorCALL'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL> gDispatchTableFor__midrange_instruction__instructionUsesGOTOorCALL ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL (typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__midrange_instruction__instructionUsesGOTOorCALL.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL
findCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__midrange_instruction__instructionUsesGOTOorCALL.count ()) {
    result = gDispatchTableFor__midrange_instruction__instructionUsesGOTOorCALL (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL (superClassPtr) ;
      gDispatchTableFor__midrange_instruction__instructionUsesGOTOorCALL.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_FOREVER.instructionUsesGOTOorCALL'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_FOREVER__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_FOREVER * operand_909,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_909 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_structured_if.instructionUsesGOTOorCALL'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_structured_if__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_structured_if * operand_1115,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1115 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@midrange_instruction_CALL.instructionUsesGOTOorCALL'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_CALL__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_CALL * operand_1312,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1312 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@midrange_instruction_JSR.instructionUsesGOTOorCALL'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_JSR__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_JSR * operand_1508,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1508 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@midrange_instruction_GOTO.instructionUsesGOTOorCALL'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_GOTO__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_GOTO * operand_1705,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1705 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@midrange_instruction_JUMP.instructionUsesGOTOorCALL'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_JUMP__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_JUMP * operand_1902,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1902 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_instruction.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList> gDispatchTableFor__midrange_instruction__build_midrange_ipic_instructionList ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__midrange_instruction__build_midrange_ipic_instructionList.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList
findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__midrange_instruction__build_midrange_ipic_instructionList.count ()) {
    result = gDispatchTableFor__midrange_instruction__build_midrange_ipic_instructionList (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (superClassPtr) ;
      gDispatchTableFor__midrange_instruction__build_midrange_ipic_instructionList.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "handleMidrangeInstructionList"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_handleMidrangeInstructionList (C_Compiler & inLexique,
                                const GGS_midrange_instructionList   var_cas_inInstructionList,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & var_cas_outContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_handleMidrangeInstructionList at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outContinuesInSequence = GGS_bool (true) ;
  {
    GGS_midrange_instructionList::cEnumerator enumerator_3177 (var_cas_inInstructionList, true) ;
    const GGS_midrange_instructionList::cElement * operand_3177 = NULL ;
    while (((operand_3177 = enumerator_3177.nextObject ()))) {
      macroValidPointer (operand_3177) ;
      if (((var_cas_outContinuesInSequence).operator_not ()).isBuiltAndTrue ()) {
        operand_3177->mInstruction.reader_mInstructionLocation (inLexique COMMA_SOURCE_FILE_AT_LINE (106)).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("Unreachable code") COMMA_SOURCE_FILE_AT_LINE (107)) ;
        var_cas_outContinuesInSequence = GGS_bool (true) ;
      }
      const GGS_midrange_instruction  _temp_3396 = operand_3177->mInstruction ;
      if (_temp_3396.isBuilt ()) {
        typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList _method = findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (_temp_3396._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (inLexique, _temp_3396 (HERE), var_cas_inRoutineMap, var_cas_inRegisterTable, var_cas_inConstantMap, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inShouldPreserveBank, var_cas_outContinuesInSequence, var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (109)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_handleMidrangeInstructionList\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_nobanksel.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_nobanksel__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_nobanksel * operand_3853,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & /* var_cas_ioGeneratedInstructionList */,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3853 != NULL) {
    if ((var_cas_inShouldPreserveBank).isBuiltAndTrue ()) {
      operand_3853->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("cannot use \"nobank\" here: bank selection should be preserved (use it in a \"banksave\" construct)") COMMA_SOURCE_FILE_AT_LINE (142)) ;
    }
    var_cas_ioCurrentBank = GGS_uint ::constructor_max (inLexique COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_savebank.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_savebank__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_savebank * operand_4666,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4666 != NULL) {
    GGS_registerExpression  var_cas_STATUS_register ;
    var_cas_STATUS_register = GGS_registerExpression ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("STATUS"), GGS_location (inLexique) COMMA_HERE), GGS_luint ::constructor_new (inLexique, GGS_uint (0U), GGS_location (inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_STATUS_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_0 ;
    const GGS_registerExpression  _temp_5283 = var_cas_STATUS_register ;
    if (_temp_5283.isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_5283._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_5283 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_STATUS_IPICregisterDescription, automatic_var_0 COMMA_SOURCE_FILE_AT_LINE (165)) ;
      }
    }
    GGS_midrange_ipic_registerExpression var_cas_save_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_1 ;
    const GGS_registerExpression  _temp_5558 = operand_4666->mRegister ;
    if (_temp_5558.isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_5558._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_5558 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_save_IPICregisterDescription, automatic_var_1 COMMA_SOURCE_FILE_AT_LINE (174)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, operand_4666->mInstructionLocation, GGS_midrange_instruction_FD_base_code::constructor_SWAPF (inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription, GGS_bool (true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, operand_4666->mInstructionLocation, GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_HERE), var_cas_save_IPICregisterDescription COMMA_HERE)) ;
    GGS_uint  var_cas_finalBank ;
    var_cas_finalBank = var_cas_ioCurrentBank ;
    ::routine_handleMidrangeInstructionList (inLexique,  operand_4666->mInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_finalBank,  GGS_bool (false),  var_cas_ioContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (196)) ;
    if (((var_cas_ioContinuesInSequence).operator_not ()).isBuiltAndTrue ()) {
      operand_4666->mEndOfSaveBankInstruction.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("useless saving: execution does reach the end of \"savebank\" instruction list") COMMA_SOURCE_FILE_AT_LINE (212)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, operand_4666->mInstructionLocation, GGS_midrange_instruction_FD_base_code::constructor_SWAPF (inLexique COMMA_HERE), var_cas_save_IPICregisterDescription, GGS_bool (true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, operand_4666->mInstructionLocation, GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_banksel.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_banksel__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_banksel * operand_7349,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7349 != NULL) {
    if ((var_cas_inShouldPreserveBank).isBuiltAndTrue ()) {
      operand_7349->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("cannot use \"banksel\" here: bank selection should be preserved (save it with \"banksave\" construct)") COMMA_SOURCE_FILE_AT_LINE (245)) ;
    }
    GGS_registerExpression  var_cas_STATUS_register ;
    var_cas_STATUS_register = GGS_registerExpression ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("STATUS"), GGS_location (inLexique) COMMA_HERE), GGS_luint ::constructor_new (inLexique, GGS_uint (0U), GGS_location (inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_STATUS_IPICregisterDescription ;
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    const GGS_registerExpression  _temp_8176 = var_cas_STATUS_register ;
    if (_temp_8176.isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_8176._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_8176 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_STATUS_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (250)) ;
      }
    }
    GGS_lstring  var_cas_RP ;
    var_cas_RP = GGS_lstring ::constructor_new (inLexique, GGS_string ("RP"), operand_7349->mInstructionLocation COMMA_HERE) ;
    GGS_uint  var_cas_rpIndex ;
    GGS_uint  var_cas_sliceSize ;
    const GGS_bitSliceTable  _temp_8414 = var_cas_bitSliceTable ;
    if (_temp_8414.isBuilt ()) {
      _temp_8414 (HERE)->method_searchKey (inLexique, var_cas_RP, var_cas_rpIndex, var_cas_sliceSize COMMA_SOURCE_FILE_AT_LINE (260)) ;
    }
    if (((var_cas_sliceSize).operator_isNotEqual (var_cas_inTotalBankCount.substract_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (261)).reader_significantBitCount (inLexique COMMA_SOURCE_FILE_AT_LINE (261)))).isBuiltAndTrue ()) {
      operand_7349->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, (((GGS_string ("internal error: sliceSize == ")).operator_concat (var_cas_sliceSize.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (262)))).operator_concat (GGS_string (", significant bit count == "))).operator_concat (var_cas_inTotalBankCount.substract_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (262)).reader_significantBitCount (inLexique COMMA_SOURCE_FILE_AT_LINE (262)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (262))) COMMA_SOURCE_FILE_AT_LINE (263)) ;
    }
    if (((operand_7349->mBankIndex.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (265))).operator_isEqual (var_cas_ioCurrentBank)).isBuiltAndTrue ()) {
      operand_7349->mBankIndex.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, ((GGS_string ("useless instruction: the bank ")).operator_concat (var_cas_ioCurrentBank.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (266)))).operator_concat (GGS_string (" is already selected")) COMMA_SOURCE_FILE_AT_LINE (266)) ;
    }else if (((operand_7349->mBankIndex.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (267))).operator_supOrEqual (var_cas_inTotalBankCount)).isBuiltAndTrue ()) {
      operand_7349->mBankIndex.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the bank ")).operator_concat (operand_7349->mBankIndex.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (268)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (268)))).operator_concat (GGS_string (" does not exist (the device has "))).operator_concat (var_cas_inTotalBankCount.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (268)))).operator_concat (GGS_string (" bank(s))")) COMMA_SOURCE_FILE_AT_LINE (269)) ;
    }else if (((var_cas_ioCurrentBank).operator_isEqual (GGS_uint ::constructor_max (inLexique COMMA_HERE))).isBuiltAndTrue ()) {
      GGS_uint  var_cas_n ;
      var_cas_n = var_cas_inTotalBankCount.substract_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (270)).reader_significantBitCount (inLexique COMMA_SOURCE_FILE_AT_LINE (270)) ;
      GGS_uint  var_cas_shiftedBank ;
      var_cas_shiftedBank = operand_7349->mBankIndex.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (271)) ;
      GGS_uint  var_cas_index ;
      var_cas_index = GGS_uint (0U) ;
      GGS_uint _variant_9762 = var_cas_sliceSize ;
      GGS_bool _condition_9762 (_variant_9762.isBuilt (), true) ;
      while (_condition_9762.isBuiltAndTrue ()) {
        _condition_9762 = (var_cas_index).operator_strictInf (var_cas_sliceSize) ;
        if (_condition_9762.isBuiltAndTrue ()) {
          if (_variant_9762.uintValue () == 0) {
            inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (288)) ;
            _condition_9762 = GGS_bool (false) ;
          }else{
            _variant_9762.decrement_operation (inLexique COMMA_HERE) ;
            GGS_midrange_bit_oriented_op var_cas_op ;
            if ((((var_cas_shiftedBank).operator_and (GGS_uint (1U))).operator_isEqual (GGS_uint (0U))).isBuiltAndTrue ()) {
              var_cas_op = GGS_midrange_bit_oriented_op::constructor_BCF (inLexique COMMA_HERE) ;
            }else{
              var_cas_op = GGS_midrange_bit_oriented_op::constructor_BSF (inLexique COMMA_HERE) ;
            }
            var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FB ::constructor_new (inLexique, operand_7349->mInstructionLocation, var_cas_op, var_cas_STATUS_IPICregisterDescription, var_cas_rpIndex.add_operation (inLexique, var_cas_index COMMA_SOURCE_FILE_AT_LINE (284)) COMMA_HERE)) ;
            var_cas_index.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (286)) ;
            var_cas_shiftedBank = var_cas_shiftedBank.right_shift_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (287)) ;
          }
        }
      }
      var_cas_ioCurrentBank = operand_7349->mBankIndex.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (289)) ;
    }else{
      GGS_bool var_cas_optimize ;
      var_cas_optimize = GGS_bool (inLexique.boolOptionValueFromKeys ("piccolo_options", "performOptimizations" COMMA_SOURCE_FILE_AT_LINE (291))) ;
      GGS_uint  var_cas_shiftedBank ;
      var_cas_shiftedBank = operand_7349->mBankIndex.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (292)) ;
      GGS_uint  var_cas_shiftedXorBank ;
      var_cas_shiftedXorBank = (operand_7349->mBankIndex.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (293))).operator_xor (var_cas_ioCurrentBank) ;
      GGS_uint  var_cas_index ;
      var_cas_index = GGS_uint (0U) ;
      GGS_uint _variant_10910 = var_cas_sliceSize ;
      GGS_bool _condition_10910 (_variant_10910.isBuilt (), true) ;
      while (_condition_10910.isBuiltAndTrue ()) {
        _condition_10910 = (var_cas_index).operator_strictInf (var_cas_sliceSize) ;
        if (_condition_10910.isBuiltAndTrue ()) {
          if (_variant_10910.uintValue () == 0) {
            inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (317)) ;
            _condition_10910 = GGS_bool (false) ;
          }else{
            _variant_10910.decrement_operation (inLexique COMMA_HERE) ;
            GGS_midrange_bit_oriented_op var_cas_op ;
            if ((((var_cas_shiftedBank).operator_and (GGS_uint (1U))).operator_isEqual (GGS_uint (0U))).isBuiltAndTrue ()) {
              var_cas_op = GGS_midrange_bit_oriented_op::constructor_BCF (inLexique COMMA_HERE) ;
            }else{
              var_cas_op = GGS_midrange_bit_oriented_op::constructor_BSF (inLexique COMMA_HERE) ;
            }
            if (((((var_cas_shiftedXorBank).operator_and (GGS_uint (1U))).operator_isNotEqual (GGS_uint (0U))).operator_or ((var_cas_optimize).operator_not ())).isBuiltAndTrue ()) {
              var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FB ::constructor_new (inLexique, operand_7349->mInstructionLocation, var_cas_op, var_cas_STATUS_IPICregisterDescription, var_cas_rpIndex.add_operation (inLexique, var_cas_index COMMA_SOURCE_FILE_AT_LINE (307)) COMMA_HERE)) ;
            }else{
              var_cas_ioListFileContents.appendCString ("  line ") ;
              var_cas_ioListFileContents.dotAssign_operation (var_cas_ioGeneratedInstructionList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (310)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (310))) ;
              var_cas_ioListFileContents.appendCString (": useless '") ;
              var_cas_ioListFileContents.dotAssign_operation (var_cas_op.reader_mnemonic (inLexique COMMA_SOURCE_FILE_AT_LINE (311))) ;
              var_cas_ioListFileContents.appendCString (" STATUS, ") ;
              var_cas_ioListFileContents.dotAssign_operation (var_cas_rpIndex.add_operation (inLexique, var_cas_index COMMA_SOURCE_FILE_AT_LINE (312)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (312))) ;
              var_cas_ioListFileContents.appendCString ("' not generated\n") ;
            }
            var_cas_index.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (314)) ;
            var_cas_shiftedBank = var_cas_shiftedBank.right_shift_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (315)) ;
            var_cas_shiftedXorBank = var_cas_shiftedXorBank.right_shift_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (316)) ;
          }
        }
      }
      var_cas_ioCurrentBank = operand_7349->mBankIndex.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (318)) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_FD.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_FD__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_FD * operand_11116,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11116 != NULL) {
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_2 ;
    const GGS_registerExpression  _temp_11635 = operand_11116->mRegisterExpression ;
    if (_temp_11635.isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_11635._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_11635 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_2 COMMA_SOURCE_FILE_AT_LINE (338)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, operand_11116->mInstructionLocation, operand_11116->mInstruction_FD_base_code, var_cas_IPICregisterDescription, operand_11116->m_W_isDestination COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_F.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_F__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_F * operand_12068,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12068 != NULL) {
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_3 ;
    const GGS_registerExpression  _temp_12587 = operand_12068->mRegisterExpression ;
    if (_temp_12587.isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_12587._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_12587 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_3 COMMA_SOURCE_FILE_AT_LINE (369)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, operand_12068->mInstructionLocation, operand_12068->mFAinstruction, var_cas_IPICregisterDescription COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_FB.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_FB__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_FB * operand_12986,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12986 != NULL) {
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    const GGS_registerExpression  _temp_13538 = operand_12986->mRegisterExpression ;
    if (_temp_13538.isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_13538._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_13538 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (400)) ;
      }
    }
    GGS_uint  var_cas_bitNumber ;
    const GGS_bitNumberExpression  _temp_13701 = operand_12986->mBitNumber ;
    if (_temp_13701.isBuilt ()) {
      typeCategoryMethod__bitNumberExpression__getBitNumber _method = findCategoryMethod__bitNumberExpression__getBitNumber (_temp_13701._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_13701 (HERE), var_cas_bitSliceTable, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (408)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FB ::constructor_new (inLexique, operand_12986->mInstructionLocation, operand_12986->mBitOrientedOp, var_cas_IPICregisterDescription, var_cas_bitNumber COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_JSR.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_JSR__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_JSR * operand_14053,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_14053 != NULL) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  var_cas_returnedBank ;
    GGS_bool var_cas_preservesBank ;
    const GGS_routineMap  _temp_14612 = var_cas_inRoutineMap ;
    if (_temp_14612.isBuilt ()) {
      _temp_14612 (HERE)->method_searchKey (inLexique, operand_14053->mTargetLabel, var_cas_isNoReturn, var_cas_requiredBank, var_cas_returnedBank, var_cas_preservesBank COMMA_SOURCE_FILE_AT_LINE (440)) ;
    }
    if ((((var_cas_requiredBank).operator_isNotEqual (GGS_uint ::constructor_max (inLexique COMMA_HERE))).operator_and ((var_cas_requiredBank).operator_isNotEqual (var_cas_ioCurrentBank))).isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage ;
      var_cas_errorMessage = (((GGS_string ("the routine '")).operator_concat (operand_14053->mTargetLabel)).operator_concat (GGS_string ("' requires bank selection to be set to "))).operator_concat (var_cas_requiredBank.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (442))) ;
      var_cas_errorMessage.appendCString (", but bank selection ") ;
      if (((var_cas_ioCurrentBank).operator_isEqual (GGS_uint ::constructor_max (inLexique COMMA_HERE))).isBuiltAndTrue ()) {
        var_cas_errorMessage.appendCString ("does contain any reliable value") ;
      }else{
        var_cas_errorMessage.appendCString ("is set to ") ;
        var_cas_errorMessage.dotAssign_operation (var_cas_ioCurrentBank.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (447))) ;
      }
      operand_14053->mTargetLabel.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (450)) ;
    }
    if ((var_cas_isNoReturn).isBuiltAndTrue ()) {
      operand_14053->mTargetLabel.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("a \"noreturn\" routine should be called with a GOTO or JUMP instruction") COMMA_SOURCE_FILE_AT_LINE (453)) ;
    }
    if (((var_cas_preservesBank).operator_not ()).isBuiltAndTrue ()) {
      var_cas_ioCurrentBank = var_cas_returnedBank ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_JSR ::constructor_new (inLexique, operand_14053->mInstructionLocation, operand_14053->mTargetLabel, GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_CALL.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_CALL__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_CALL * operand_15712,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_15712 != NULL) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  var_cas_returnedBank ;
    GGS_bool var_cas_preservesBank ;
    const GGS_routineMap  _temp_16271 = var_cas_inRoutineMap ;
    if (_temp_16271.isBuilt ()) {
      _temp_16271 (HERE)->method_searchKey (inLexique, operand_15712->mTargetLabel, var_cas_isNoReturn, var_cas_requiredBank, var_cas_returnedBank, var_cas_preservesBank COMMA_SOURCE_FILE_AT_LINE (486)) ;
    }
    if ((((var_cas_requiredBank).operator_isNotEqual (GGS_uint ::constructor_max (inLexique COMMA_HERE))).operator_and ((var_cas_requiredBank).operator_isNotEqual (var_cas_ioCurrentBank))).isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage ;
      var_cas_errorMessage = (((GGS_string ("the routine '")).operator_concat (operand_15712->mTargetLabel)).operator_concat (GGS_string ("' requires bank selection to be set to "))).operator_concat (var_cas_requiredBank.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (488))) ;
      var_cas_errorMessage.appendCString (", but bank selection ") ;
      if (((var_cas_ioCurrentBank).operator_isEqual (GGS_uint ::constructor_max (inLexique COMMA_HERE))).isBuiltAndTrue ()) {
        var_cas_errorMessage.appendCString ("does contain any reliable value") ;
      }else{
        var_cas_errorMessage.appendCString ("is set to ") ;
        var_cas_errorMessage.dotAssign_operation (var_cas_ioCurrentBank.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (493))) ;
      }
      operand_15712->mTargetLabel.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (496)) ;
    }
    if ((var_cas_isNoReturn).isBuiltAndTrue ()) {
      operand_15712->mTargetLabel.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("a \"noreturn\" routine should be called with a GOTO or JUMP instruction") COMMA_SOURCE_FILE_AT_LINE (499)) ;
    }
    if (((var_cas_preservesBank).operator_not ()).isBuiltAndTrue ()) {
      var_cas_ioCurrentBank = var_cas_returnedBank ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_CALL ::constructor_new (inLexique, operand_15712->mInstructionLocation, operand_15712->mTargetLabel COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_JUMP.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_JUMP__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_JUMP * operand_17292,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17292 != NULL) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  automatic_var_4 ;
    GGS_bool automatic_var_5 ;
    const GGS_routineMap  _temp_17797 = var_cas_inRoutineMap ;
    if (_temp_17797.isBuilt ()) {
      _temp_17797 (HERE)->method_searchKey (inLexique, operand_17292->mTargetLabel, var_cas_isNoReturn, var_cas_requiredBank, automatic_var_4, automatic_var_5 COMMA_SOURCE_FILE_AT_LINE (528)) ;
    }
    if ((((var_cas_requiredBank).operator_isNotEqual (GGS_uint ::constructor_max (inLexique COMMA_HERE))).operator_and ((var_cas_requiredBank).operator_isNotEqual (var_cas_ioCurrentBank))).isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage ;
      var_cas_errorMessage = (((GGS_string ("the routine '")).operator_concat (operand_17292->mTargetLabel)).operator_concat (GGS_string ("' requires bank selection to be set to "))).operator_concat (var_cas_requiredBank.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (530))) ;
      var_cas_errorMessage.appendCString (", but bank selection ") ;
      if (((var_cas_ioCurrentBank).operator_isEqual (GGS_uint ::constructor_max (inLexique COMMA_HERE))).isBuiltAndTrue ()) {
        var_cas_errorMessage.appendCString ("does contain any reliable value") ;
      }else{
        var_cas_errorMessage.appendCString ("is set to ") ;
        var_cas_errorMessage.dotAssign_operation (var_cas_ioCurrentBank.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (535))) ;
      }
      operand_17292->mTargetLabel.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (538)) ;
    }
    if (((var_cas_isNoReturn).operator_not ()).isBuiltAndTrue ()) {
      operand_17292->mTargetLabel.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("a regular routine should be called with a CALL or JSR instruction") COMMA_SOURCE_FILE_AT_LINE (541)) ;
    }
    var_cas_ioContinuesInSequence = GGS_bool (false) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_JUMP ::constructor_new (inLexique, operand_17292->mInstructionLocation, operand_17292->mTargetLabel, GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_GOTO.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_GOTO__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_GOTO * operand_18833,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18833 != NULL) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  automatic_var_6 ;
    GGS_bool automatic_var_7 ;
    const GGS_routineMap  _temp_19338 = var_cas_inRoutineMap ;
    if (_temp_19338.isBuilt ()) {
      _temp_19338 (HERE)->method_searchKey (inLexique, operand_18833->mTargetLabel, var_cas_isNoReturn, var_cas_requiredBank, automatic_var_6, automatic_var_7 COMMA_SOURCE_FILE_AT_LINE (570)) ;
    }
    if ((((var_cas_requiredBank).operator_isNotEqual (GGS_uint ::constructor_max (inLexique COMMA_HERE))).operator_and ((var_cas_requiredBank).operator_isNotEqual (var_cas_ioCurrentBank))).isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage ;
      var_cas_errorMessage = (((GGS_string ("the routine '")).operator_concat (operand_18833->mTargetLabel)).operator_concat (GGS_string ("' requires bank selection to be set to "))).operator_concat (var_cas_requiredBank.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (572))) ;
      var_cas_errorMessage.appendCString (", but bank selection ") ;
      if (((var_cas_ioCurrentBank).operator_isEqual (GGS_uint ::constructor_max (inLexique COMMA_HERE))).isBuiltAndTrue ()) {
        var_cas_errorMessage.appendCString ("does contain any reliable value") ;
      }else{
        var_cas_errorMessage.appendCString ("is set to ") ;
        var_cas_errorMessage.dotAssign_operation (var_cas_ioCurrentBank.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (577))) ;
      }
      operand_18833->mTargetLabel.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (580)) ;
    }
    if (((var_cas_isNoReturn).operator_not ()).isBuiltAndTrue ()) {
      operand_18833->mTargetLabel.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("a regular routine should be called with a CALL or JSR instruction") COMMA_SOURCE_FILE_AT_LINE (583)) ;
    }
    var_cas_ioContinuesInSequence = GGS_bool (false) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (inLexique, operand_18833->mInstructionLocation, operand_18833->mTargetLabel COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_CLRWDT.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_CLRWDT__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_CLRWDT * operand_20296,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20296 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_CLRWDT ::constructor_new (inLexique, operand_20296->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_CLRW.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_CLRW__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_CLRW * operand_20982,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20982 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_CLRW ::constructor_new (inLexique, operand_20982->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_NOP.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_NOP__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_NOP * operand_21665,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21665 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_NOP ::constructor_new (inLexique, operand_21665->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_SLEEP.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_SLEEP__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_SLEEP * operand_22349,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22349 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_SLEEP ::constructor_new (inLexique, operand_22349->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_literalOperation.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_literalOperation__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_literalOperation * operand_23046,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23046 != NULL) {
    GGS_sint  var_cas_result ;
    const GGS_immediatExpression  _temp_23508 = operand_23046->mImmediatExpression ;
    if (_temp_23508.isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_23508._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_23508 (HERE), var_cas_inRegisterTable, var_cas_inConstantMap, var_cas_result COMMA_SOURCE_FILE_AT_LINE (687)) ;
      }
    }
    if ((((var_cas_result).operator_strictSup (GGS_sint (255L))).operator_or ((var_cas_result).operator_strictInf (GGS_sint (128L).operator_unary_minus (inLexique COMMA_HERE)))).isBuiltAndTrue ()) {
      operand_23046->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("immediate value is evaluated as ")).operator_concat (var_cas_result.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (690)))).operator_concat (GGS_string (" (should be betwween -128 and 255)")) COMMA_SOURCE_FILE_AT_LINE (691)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_literalOperation ::constructor_new (inLexique, operand_23046->mInstructionLocation, operand_23046->mLiteralInstruction, (var_cas_result).operator_and (GGS_sint (255L)).reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (696)) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_MNOP.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_MNOP__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_MNOP * operand_26181,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26181 != NULL) {
    if (((operand_26181->mOccurrenceFactor.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (765))).operator_isEqual (GGS_uint (0U))).isBuiltAndTrue ()) {
      operand_26181->mOccurrenceFactor.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("occurrence argument is zero: no generated code") COMMA_SOURCE_FILE_AT_LINE (766)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_MNOP ::constructor_new (inLexique, operand_26181->mInstructionLocation, operand_26181->mOccurrenceFactor COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_FOREVER.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_FOREVER__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_FOREVER * operand_32036,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_32036 != NULL) {
    switch (var_cas_inRoutineKind.enumValue ()) {
    case GGS_routineKind::enum_regularRoutine:
      {
      operand_32036->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("a regular routine does not accept the \"forever\" instruction") COMMA_SOURCE_FILE_AT_LINE (911)) ;
      }
      break ;
    case GGS_routineKind::enum_noReturnRoutine:
      {
      }
      break ;
    case GGS_routineKind::enum_interruptRoutine:
      {
      operand_32036->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("an interrupt routine does not accept the \"forever\" instruction") COMMA_SOURCE_FILE_AT_LINE (914)) ;
      }
      break ;
    case GGS_routineKind::kNotBuilt:
      break ;
    }
    GGS_uint  var_cas_finalBank ;
    var_cas_finalBank = var_cas_ioCurrentBank ;
    GGS_string var_cas_label0 ;
    var_cas_label0 = (GGS_string ("_label_")).operator_concat (var_cas_ioLocalLabelIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (917))) ;
    var_cas_ioLocalLabelIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (918)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_label0, operand_32036->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    ::routine_handleMidrangeInstructionList (inLexique,  operand_32036->mInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_finalBank,  var_cas_inShouldPreserveBank,  var_cas_ioContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (920)) ;
    if (((var_cas_ioCurrentBank).operator_isNotEqual (var_cas_finalBank)).isBuiltAndTrue ()) {
      operand_32036->mEndOfInstructionList.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("instruction list does not leave bank selection unchanged") COMMA_SOURCE_FILE_AT_LINE (936)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (inLexique, operand_32036->mInstructionLocation, GGS_lstring ::constructor_new (inLexique, var_cas_label0, operand_32036->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    var_cas_ioContinuesInSequence = GGS_bool (false) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_IF_BitTest.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_IF_BitTest__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_IF_BitTest * operand_33819,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_33819 != NULL) {
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    const GGS_registerExpression  _temp_34329 = operand_33819->mRegisterExpression ;
    if (_temp_34329.isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_34329._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_34329 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (963)) ;
      }
    }
    GGS_uint  var_cas_bitNumber ;
    const GGS_bitNumberExpression  _temp_34492 = operand_33819->mBitNumber ;
    if (_temp_34492.isBuilt ()) {
      typeCategoryMethod__bitNumberExpression__getBitNumber _method = findCategoryMethod__bitNumberExpression__getBitNumber (_temp_34492._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_34492 (HERE), var_cas_bitSliceTable, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (971)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_BitTestSkip ::constructor_new (inLexique, operand_33819->mInstructionLocation, operand_33819->mSkipIfSet, var_cas_IPICregisterDescription, var_cas_bitNumber COMMA_HERE)) ;
    GGS_bool var_cas_unusedContinuesInSequence ;
    var_cas_unusedContinuesInSequence = GGS_bool (true) ;
    const GGS_midrange_instruction  _temp_34821 = operand_33819->mInstruction ;
    if (_temp_34821.isBuilt ()) {
      typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList _method = findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (_temp_34821._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_34821 (HERE), var_cas_inRoutineMap, var_cas_inRegisterTable, var_cas_inConstantMap, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inShouldPreserveBank, var_cas_unusedContinuesInSequence, var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (983)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_conditionExpression.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition> gDispatchTableFor__midrange_conditionExpression__buildIPICinstructionForCondition ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__midrange_conditionExpression__buildIPICinstructionForCondition.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition
findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__midrange_conditionExpression__buildIPICinstructionForCondition.count ()) {
    result = gDispatchTableFor__midrange_conditionExpression__buildIPICinstructionForCondition (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (superClassPtr) ;
      gDispatchTableFor__midrange_conditionExpression__buildIPICinstructionForCondition.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_conditionExpression.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition> gDispatchTableFor__midrange_conditionExpression__computeInstructionCountForCondition ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__midrange_conditionExpression__computeInstructionCountForCondition.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition
findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__midrange_conditionExpression__computeInstructionCountForCondition.count ()) {
    result = gDispatchTableFor__midrange_conditionExpression__computeInstructionCountForCondition (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (superClassPtr) ;
      gDispatchTableFor__midrange_conditionExpression__computeInstructionCountForCondition.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_incDecRegisterInCondition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_incDecRegisterInCondition__buildIPICinstructionForCondition (C_Compiler & inLexique,
                                const cPtr_midrange_incDecRegisterInCondition * operand_35889,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_uint   var_cas_inCurrentBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_35889 != NULL) {
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_8 ;
    const GGS_registerExpression  _temp_36313 = operand_35889->mRegisterExpression ;
    if (_temp_36313.isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_36313._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_36313 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_8 COMMA_SOURCE_FILE_AT_LINE (1033)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_incDecRegisterInCondition ::constructor_new (inLexique, var_cas_inInstructionLocation, var_cas_IPICregisterDescription, var_cas_inTargetLabel, operand_35889->mIncrement, operand_35889->m_W_isDestination, (operand_35889->mBranchIfZero).operator_xor (var_cas_inComplementaryBranch) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_incDecRegisterInCondition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_incDecRegisterInCondition__computeInstructionCountForCondition (C_Compiler &,
                                const cPtr_midrange_incDecRegisterInCondition * operand_36822,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_36822 != NULL) {
    if (((operand_36822->mBranchIfZero).operator_xor (var_cas_inComplementaryBranch)).isBuiltAndTrue ()) {
      var_cas_outInstructionCount = GGS_uint (3U) ;
    }else{
      var_cas_outInstructionCount = GGS_uint (2U) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_negateCondition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_negateCondition__buildIPICinstructionForCondition (C_Compiler & inLexique,
                                const cPtr_midrange_negateCondition * operand_37158,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_uint   var_cas_inCurrentBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_37158 != NULL) {
    const GGS_midrange_conditionExpression  _temp_37508 = operand_37158->mCondition ;
    if (_temp_37508.isBuilt ()) {
      typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_37508._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_37508 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, (var_cas_inComplementaryBranch).operator_not (), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1077)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_negateCondition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_negateCondition__computeInstructionCountForCondition (C_Compiler & inLexique,
                                const cPtr_midrange_negateCondition * operand_37883,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_37883 != NULL) {
    const GGS_midrange_conditionExpression  _temp_37996 = operand_37883->mCondition ;
    if (_temp_37996.isBuilt ()) {
      typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (_temp_37996._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_37996 (HERE), (var_cas_inComplementaryBranch).operator_not (), var_cas_outInstructionCount COMMA_SOURCE_FILE_AT_LINE (1096)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_andCondition.buildIPICinstructionForCondition'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_andCondition__buildIPICinstructionForCondition (C_Compiler & inLexique,
                                const cPtr_midrange_andCondition * operand_38200,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_uint   var_cas_inCurrentBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_38200 != NULL) {
    if ((var_cas_inComplementaryBranch).isBuiltAndTrue ()) {
      const GGS_midrange_conditionExpression  _temp_38589 = operand_38200->mLeftExpression ;
      if (_temp_38589.isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_38589._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (inLexique, _temp_38589 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1116)) ;
        }
      }
      const GGS_midrange_conditionExpression  _temp_38870 = operand_38200->mRightExpression ;
      if (_temp_38870.isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_38870._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (inLexique, _temp_38870 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1127)) ;
        }
      }
    }else{
      GGS_string var_cas_label0 ;
      var_cas_label0 = (GGS_string ("_label_")).operator_concat (var_cas_ioLocalLabelIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1139))) ;
      var_cas_ioLocalLabelIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (1139)) ;
      const GGS_midrange_conditionExpression  _temp_39243 = operand_38200->mLeftExpression ;
      if (_temp_39243.isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_39243._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (inLexique, _temp_39243 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true), var_cas_inInstructionLocation, var_cas_label0, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1140)) ;
        }
      }
      const GGS_midrange_conditionExpression  _temp_39517 = operand_38200->mRightExpression ;
      if (_temp_39517.isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_39517._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (inLexique, _temp_39517 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (false), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1151)) ;
        }
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_label0, var_cas_inInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_andCondition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_andCondition__computeInstructionCountForCondition (C_Compiler & inLexique,
                                const cPtr_midrange_andCondition * operand_40018,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_40018 != NULL) {
    GGS_uint  var_cas_countLeft ;
    const GGS_midrange_conditionExpression  _temp_40156 = operand_40018->mLeftExpression ;
    if (_temp_40156.isBuilt ()) {
      typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (_temp_40156._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_40156 (HERE), var_cas_inComplementaryBranch, var_cas_countLeft COMMA_SOURCE_FILE_AT_LINE (1173)) ;
      }
    }
    GGS_uint  var_cas_countRight ;
    const GGS_midrange_conditionExpression  _temp_40280 = operand_40018->mLeftExpression ;
    if (_temp_40280.isBuilt ()) {
      typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (_temp_40280._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_40280 (HERE), var_cas_inComplementaryBranch, var_cas_countRight COMMA_SOURCE_FILE_AT_LINE (1178)) ;
      }
    }
    var_cas_outInstructionCount = var_cas_countLeft.add_operation (inLexique, var_cas_countRight COMMA_SOURCE_FILE_AT_LINE (1182)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_bitTest_in_structured_if_condition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_bitTest_in_structured_if_condition__buildIPICinstructionForCondition (C_Compiler & inLexique,
                                const cPtr_midrange_bitTest_in_structured_if_condition * operand_40543,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_uint   var_cas_inCurrentBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_40543 != NULL) {
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    const GGS_registerExpression  _temp_41000 = operand_40543->mRegisterExpression ;
    if (_temp_41000.isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_41000._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_41000 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (1200)) ;
      }
    }
    GGS_uint  var_cas_bitNumber ;
    const GGS_bitNumberExpression  _temp_41163 = operand_40543->mBitNumber ;
    if (_temp_41163.isBuilt ()) {
      typeCategoryMethod__bitNumberExpression__getBitNumber _method = findCategoryMethod__bitNumberExpression__getBitNumber (_temp_41163._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_41163 (HERE), var_cas_bitSliceTable, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (1208)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_BitTestSkip ::constructor_new (inLexique, var_cas_inInstructionLocation, (operand_40543->mBTFSSinstruction).operator_xor (var_cas_inComplementaryBranch), var_cas_IPICregisterDescription, var_cas_bitNumber COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_JUMP ::constructor_new (inLexique, var_cas_inInstructionLocation, GGS_lstring ::constructor_new (inLexique, var_cas_inTargetLabel, var_cas_inInstructionLocation COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_bitTest_in_structured_if_condition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_bitTest_in_structured_if_condition__computeInstructionCountForCondition (C_Compiler &,
                                const cPtr_midrange_bitTest_in_structured_if_condition * operand_41805,
                                const GGS_bool  /* var_cas_inComplementaryBranch */,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_41805 != NULL) {
    var_cas_outInstructionCount = GGS_uint (2U) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_structured_if.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_structured_if__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_structured_if * operand_42062,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_42062 != NULL) {
    GGS_bool var_cas_generateComplementaryCondition ;
    var_cas_generateComplementaryCondition = GGS_bool (false) ;
    if ((GGS_bool (inLexique.boolOptionValueFromKeys ("piccolo_options", "performOptimizations" COMMA_SOURCE_FILE_AT_LINE (1253)))).isBuiltAndTrue ()) {
      GGS_uint  var_cas_directCount ;
      const GGS_midrange_conditionExpression  _temp_42640 = operand_42062->mIfCondition ;
      if (_temp_42640.isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (_temp_42640._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (inLexique, _temp_42640 (HERE), GGS_bool (true), var_cas_directCount COMMA_SOURCE_FILE_AT_LINE (1254)) ;
        }
      }
      if (((operand_42062->mElseInstructionList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (1255))).operator_strictSup (GGS_uint (0U))).isBuiltAndTrue ()) {
        var_cas_directCount.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (1256)) ;
      }
      GGS_uint  var_cas_complementaryCount ;
      const GGS_midrange_conditionExpression  _temp_42825 = operand_42062->mIfCondition ;
      if (_temp_42825.isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (_temp_42825._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (inLexique, _temp_42825 (HERE), GGS_bool (false), var_cas_complementaryCount COMMA_SOURCE_FILE_AT_LINE (1258)) ;
        }
      }
      if (((operand_42062->mThenInstructionList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (1259))).operator_strictSup (GGS_uint (0U))).isBuiltAndTrue ()) {
        var_cas_complementaryCount.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (1260)) ;
      }
      if (((var_cas_complementaryCount).operator_strictInf (var_cas_directCount)).isBuiltAndTrue ()) {
        var_cas_generateComplementaryCondition = GGS_bool (true) ;
        var_cas_ioListFileContents.appendCString ("  line ") ;
        var_cas_ioListFileContents.dotAssign_operation (var_cas_ioGeneratedInstructionList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (1264)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1264))) ;
        var_cas_ioListFileContents.appendCString (": generates complementary test (saves ") ;
        var_cas_ioListFileContents.dotAssign_operation (var_cas_directCount.substract_operation (inLexique, var_cas_complementaryCount COMMA_SOURCE_FILE_AT_LINE (1265)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1265))) ;
        var_cas_ioListFileContents.appendCString (" instruction") ;
        if (((var_cas_directCount.substract_operation (inLexique, var_cas_complementaryCount COMMA_SOURCE_FILE_AT_LINE (1266))).operator_strictSup (GGS_uint (1U))).isBuiltAndTrue ()) {
          var_cas_ioListFileContents.appendCString ("s") ;
        }
        var_cas_ioListFileContents.appendCString (")\n") ;
      }
    }
    GGS_uint  var_cas_elseBranchFinalBank ;
    var_cas_elseBranchFinalBank = var_cas_ioCurrentBank ;
    GGS_uint  var_cas_thenBranchFinalBank ;
    var_cas_thenBranchFinalBank = var_cas_ioCurrentBank ;
    GGS_bool var_cas_elseContinuesInSequence ;
    GGS_bool var_cas_thenContinuesInSequence ;
    if ((var_cas_generateComplementaryCondition).isBuiltAndTrue ()) {
      GGS_string var_cas_label_nextCondition ;
      var_cas_label_nextCondition = (GGS_string ("_label_")).operator_concat (var_cas_ioLocalLabelIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1278))) ;
      var_cas_ioLocalLabelIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (1278)) ;
      GGS_string var_cas_label_endOfIfinstruction ;
      var_cas_label_endOfIfinstruction = (GGS_string ("_label_")).operator_concat (var_cas_ioLocalLabelIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1279))) ;
      var_cas_ioLocalLabelIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (1279)) ;
      const GGS_midrange_conditionExpression  _temp_43890 = operand_42062->mIfCondition ;
      if (_temp_43890.isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_43890._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (inLexique, _temp_43890 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (false), operand_42062->mInstructionLocation, var_cas_label_nextCondition, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1281)) ;
        }
      }
      ::routine_handleMidrangeInstructionList (inLexique,  operand_42062->mElseInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_elseBranchFinalBank,  var_cas_inShouldPreserveBank,  var_cas_elseContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1293)) ;
      if (((operand_42062->mThenInstructionList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (1308))).operator_strictSup (GGS_uint (0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (inLexique, operand_42062->mInstructionLocation, GGS_lstring ::constructor_new (inLexique, var_cas_label_endOfIfinstruction, operand_42062->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_label_nextCondition, operand_42062->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      ::routine_handleMidrangeInstructionList (inLexique,  operand_42062->mThenInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_thenBranchFinalBank,  var_cas_inShouldPreserveBank,  var_cas_thenContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1312)) ;
      if (((operand_42062->mThenInstructionList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (1326))).operator_strictSup (GGS_uint (0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_label_endOfIfinstruction, operand_42062->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      }
    }else{
      GGS_string var_cas_label_nextCondition ;
      var_cas_label_nextCondition = (GGS_string ("_label_")).operator_concat (var_cas_ioLocalLabelIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1331))) ;
      var_cas_ioLocalLabelIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (1331)) ;
      GGS_string var_cas_label_endOfIfinstruction ;
      var_cas_label_endOfIfinstruction = (GGS_string ("_label_")).operator_concat (var_cas_ioLocalLabelIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1332))) ;
      var_cas_ioLocalLabelIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (1332)) ;
      const GGS_midrange_conditionExpression  _temp_45713 = operand_42062->mIfCondition ;
      if (_temp_45713.isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_45713._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (inLexique, _temp_45713 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true), operand_42062->mInstructionLocation, var_cas_label_nextCondition, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1334)) ;
        }
      }
      ::routine_handleMidrangeInstructionList (inLexique,  operand_42062->mThenInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_thenBranchFinalBank,  var_cas_inShouldPreserveBank,  var_cas_thenContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1346)) ;
      if (((operand_42062->mElseInstructionList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (1361))).operator_strictSup (GGS_uint (0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (inLexique, operand_42062->mInstructionLocation, GGS_lstring ::constructor_new (inLexique, var_cas_label_endOfIfinstruction, operand_42062->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_label_nextCondition, operand_42062->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      ::routine_handleMidrangeInstructionList (inLexique,  operand_42062->mElseInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_elseBranchFinalBank,  var_cas_inShouldPreserveBank,  var_cas_elseContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1365)) ;
      if (((operand_42062->mElseInstructionList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (1379))).operator_strictSup (GGS_uint (0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_label_endOfIfinstruction, operand_42062->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      }
    }
    if (((var_cas_elseBranchFinalBank).operator_isEqual (var_cas_thenBranchFinalBank)).isBuiltAndTrue ()) {
      var_cas_ioCurrentBank = var_cas_elseBranchFinalBank ;
    }else{
      operand_42062->mEndOfElsePartLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("This branch does not leave bank selection value as the first one does") COMMA_SOURCE_FILE_AT_LINE (1387)) ;
      var_cas_elseBranchFinalBank = GGS_uint ::constructor_max (inLexique COMMA_HERE) ;
    }
    var_cas_ioContinuesInSequence = (var_cas_thenContinuesInSequence).operator_or (var_cas_elseContinuesInSequence) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_do_while.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_do_while__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_do_while * operand_47787,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_47787 != NULL) {
    GGS_string var_cas_labelInstructionBegin ;
    var_cas_labelInstructionBegin = (GGS_string ("_label_")).operator_concat (var_cas_ioLocalLabelIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1409))) ;
    var_cas_ioLocalLabelIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (1409)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_labelInstructionBegin, operand_47787->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    GGS_uint  var_cas_finalBank ;
    var_cas_finalBank = var_cas_ioCurrentBank ;
    ::routine_handleMidrangeInstructionList (inLexique,  operand_47787->mRepeatedInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_finalBank,  var_cas_inShouldPreserveBank,  var_cas_ioContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1414)) ;
    if (((var_cas_ioCurrentBank).operator_isNotEqual (var_cas_finalBank)).isBuiltAndTrue ()) {
      operand_47787->mEndOfRepeatedInstructionList.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("This branch does not leave bank selection value unchanged") COMMA_SOURCE_FILE_AT_LINE (1430)) ;
    }
    {
      GGS_midrange_partList::cEnumerator enumerator_48990 (operand_47787->mWhilePartList, true) ;
      const GGS_midrange_partList::cElement * operand_48990 = NULL ;
      while (((operand_48990 = enumerator_48990.nextObject ()))) {
        macroValidPointer (operand_48990) ;
        if (((operand_48990->mInstructionList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (1433))).operator_isEqual (GGS_uint (0U))).isBuiltAndTrue ()) {
          const GGS_midrange_conditionExpression  _temp_49087 = operand_48990->mCondition ;
          if (_temp_49087.isBuilt ()) {
            typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_49087._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (inLexique, _temp_49087 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (false), operand_47787->mInstructionLocation, var_cas_labelInstructionBegin, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1434)) ;
            }
          }
        }else{
          GGS_string var_cas_nextBranchLabel ;
          var_cas_nextBranchLabel = (GGS_string ("_label_")).operator_concat (var_cas_ioLocalLabelIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1446))) ;
          var_cas_ioLocalLabelIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (1446)) ;
          const GGS_midrange_conditionExpression  _temp_49498 = operand_48990->mCondition ;
          if (_temp_49498.isBuilt ()) {
            typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_49498._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (inLexique, _temp_49498 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true), operand_47787->mInstructionLocation, var_cas_nextBranchLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1447)) ;
            }
          }
          GGS_uint  var_cas_bank ;
          var_cas_bank = var_cas_ioCurrentBank ;
          ::routine_handleMidrangeInstructionList (inLexique,  operand_48990->mInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_bank,  var_cas_inShouldPreserveBank,  var_cas_ioContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1459)) ;
          if (((var_cas_ioCurrentBank).operator_isNotEqual (var_cas_bank)).isBuiltAndTrue ()) {
            operand_48990->mEndOfPartLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("This branch does not leave bank selection value unchanged") COMMA_SOURCE_FILE_AT_LINE (1475)) ;
          }
          var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (inLexique, operand_47787->mInstructionLocation, GGS_lstring ::constructor_new (inLexique, var_cas_labelInstructionBegin, operand_47787->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
          var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_nextBranchLabel, operand_47787->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_IF_IncDec.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_IF_IncDec__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_IF_IncDec * operand_50744,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_50744 != NULL) {
    GGS_midrange_instruction_FD_base_code var_cas_baseCode ;
    if ((operand_50744->mIncrement).isBuiltAndTrue ()) {
      var_cas_baseCode = GGS_midrange_instruction_FD_base_code::constructor_INCFSZ (inLexique COMMA_HERE) ;
    }else{
      var_cas_baseCode = GGS_midrange_instruction_FD_base_code::constructor_DECFSZ (inLexique COMMA_HERE) ;
    }
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_9 ;
    const GGS_registerExpression  _temp_51442 = operand_50744->mRegisterExpression ;
    if (_temp_51442.isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_51442._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_51442 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_9 COMMA_SOURCE_FILE_AT_LINE (1506)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, operand_50744->mInstructionLocation, var_cas_baseCode, var_cas_IPICregisterDescription, operand_50744->m_W_isDestination COMMA_HERE)) ;
    GGS_bool var_cas_unusedContinuesInSequence ;
    var_cas_unusedContinuesInSequence = GGS_bool (true) ;
    const GGS_midrange_instruction  _temp_51818 = operand_50744->mInstruction ;
    if (_temp_51818.isBuilt ()) {
      typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList _method = findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (_temp_51818._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_51818 (HERE), var_cas_inRoutineMap, var_cas_inRegisterTable, var_cas_inConstantMap, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inShouldPreserveBank, var_cas_unusedContinuesInSequence, var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1522)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "generateInterruptRoutineForControllerWithSharedRAM"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateInterruptRoutineForControllerWithSharedRAM (C_Compiler & inLexique,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_lstring   var_cas_inFirstSaveRegister,
                                const GGS_lstring   var_cas_inSecondSaveRegister,
                                const GGS_bool  var_cas_inNeedsToSavePCLATH,
                                const GGS_midrange_instructionList   var_cas_inInterruptRoutineInstructionList,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_constantMap   var_cas_inConstantMap,
                                const GGS_location   var_cas_inEndOfInterruptLocation,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_string & var_cas_ioGenerationOptimizationMessages COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateInterruptRoutineForControllerWithSharedRAM at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_uintlist  var_cas_registerAddressList ;
  GGS_uint  var_cas_size ;
  GGS_bitSliceTable  automatic_var_10 ;
  GGS_string automatic_var_11 ;
  const GGS_registerTable  _temp_52853 = var_cas_inRegisterTable ;
  if (_temp_52853.isBuilt ()) {
    _temp_52853 (HERE)->method_searchKey (inLexique, var_cas_inFirstSaveRegister, var_cas_registerAddressList, var_cas_size, automatic_var_10, automatic_var_11 COMMA_SOURCE_FILE_AT_LINE (1556)) ;
  }
  GGS_bool var_cas_accessibleFromBank0 ;
  var_cas_accessibleFromBank0 = GGS_bool (false) ;
  {
    GGS_uintlist::cEnumerator enumerator_52980 (var_cas_registerAddressList, true) ;
    const GGS_uintlist::cElement * operand_52980 = NULL ;
    while (((operand_52980 = enumerator_52980.nextObject ()))
        && ((var_cas_accessibleFromBank0).operator_not ().isBuiltAndTrue ())) {
      macroValidPointer (operand_52980) ;
      var_cas_accessibleFromBank0 = ((operand_52980->mValue).operator_and (GGS_uint (3968U))).operator_isEqual (GGS_uint (0U)) ;
    }
  }
  if (((var_cas_accessibleFromBank0).operator_not ()).isBuiltAndTrue ()) {
    var_cas_inFirstSaveRegister.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (var_cas_inFirstSaveRegister)).operator_concat (GGS_string ("' variable cannot be accessed from bank 0")) COMMA_SOURCE_FILE_AT_LINE (1563)) ;
  }
  if (((var_cas_inNeedsToSavePCLATH).operator_and ((var_cas_size).operator_isNotEqual (GGS_uint (2U)))).isBuiltAndTrue ()) {
    var_cas_inFirstSaveRegister.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_inFirstSaveRegister)).operator_concat (GGS_string ("' variable size is "))).operator_concat (var_cas_size.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1565)))).operator_concat (GGS_string (" (it should be 2)")) COMMA_SOURCE_FILE_AT_LINE (1566)) ;
  }else if ((((var_cas_inNeedsToSavePCLATH).operator_not ()).operator_and ((var_cas_size).operator_isNotEqual (GGS_uint (1U)))).isBuiltAndTrue ()) {
    var_cas_inFirstSaveRegister.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_inFirstSaveRegister)).operator_concat (GGS_string ("' variable size is "))).operator_concat (var_cas_size.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1567)))).operator_concat (GGS_string (" (it should be 1)")) COMMA_SOURCE_FILE_AT_LINE (1568)) ;
  }
  GGS_bitSliceTable  automatic_var_12 ;
  GGS_string automatic_var_13 ;
  const GGS_registerTable  _temp_53728 = var_cas_inRegisterTable ;
  if (_temp_53728.isBuilt ()) {
    _temp_53728 (HERE)->method_searchKey (inLexique, var_cas_inSecondSaveRegister, var_cas_registerAddressList, var_cas_size, automatic_var_12, automatic_var_13 COMMA_SOURCE_FILE_AT_LINE (1570)) ;
  }
  GGS_uint  var_cas_bankAccessibility ;
  var_cas_bankAccessibility = GGS_uint (0U) ;
  {
    GGS_uintlist::cEnumerator enumerator_53850 (var_cas_registerAddressList, true) ;
    const GGS_uintlist::cElement * operand_53850 = NULL ;
    while (((operand_53850 = enumerator_53850.nextObject ()))) {
      macroValidPointer (operand_53850) ;
      var_cas_bankAccessibility = (var_cas_bankAccessibility).operator_or (GGS_uint (1U).left_shift_operation (inLexique, operand_53850->mValue.right_shift_operation (inLexique, GGS_uint (7U) COMMA_SOURCE_FILE_AT_LINE (1573)) COMMA_SOURCE_FILE_AT_LINE (1573))) ;
    }
  }
  if (((var_cas_bankAccessibility.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (1575))).operator_isNotEqual (GGS_uint (1U).left_shift_operation (inLexique, var_cas_inTotalBankCount COMMA_SOURCE_FILE_AT_LINE (1575)))).isBuiltAndTrue ()) {
    var_cas_inSecondSaveRegister.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (var_cas_inSecondSaveRegister)).operator_concat (GGS_string ("' variable cannot be accessed from any bank")) COMMA_SOURCE_FILE_AT_LINE (1577)) ;
  }
  if (((var_cas_size).operator_isNotEqual (GGS_uint (1U))).isBuiltAndTrue ()) {
    var_cas_inSecondSaveRegister.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_inSecondSaveRegister)).operator_concat (GGS_string ("' variable size is "))).operator_concat (var_cas_size.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1579)))).operator_concat (GGS_string (" (it should be 1)")) COMMA_SOURCE_FILE_AT_LINE (1580)) ;
  }
  if (((GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U))).isBuiltAndTrue ()) {
    GGS_registerExpression  var_cas_first_register ;
    var_cas_first_register = GGS_registerExpression ::constructor_new (inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (inLexique, GGS_uint (0U), GGS_location (inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_first_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_14 ;
    const GGS_registerExpression  _temp_54558 = var_cas_first_register ;
    if (_temp_54558.isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_54558._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_54558 (HERE), var_cas_inTotalBankCount, GGS_uint (0U), var_cas_inRegisterTable, var_cas_first_IPICregisterDescription, automatic_var_14 COMMA_SOURCE_FILE_AT_LINE (1585)) ;
      }
    }
    GGS_registerExpression  var_cas_second_register ;
    var_cas_second_register = GGS_registerExpression ::constructor_new (inLexique, var_cas_inSecondSaveRegister, GGS_luint ::constructor_new (inLexique, GGS_uint (0U), GGS_location (inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_second_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_15 ;
    const GGS_registerExpression  _temp_54876 = var_cas_second_register ;
    if (_temp_54876.isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_54876._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_54876 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_second_IPICregisterDescription, automatic_var_15 COMMA_SOURCE_FILE_AT_LINE (1594)) ;
      }
    }
    GGS_registerExpression  var_cas_STATUS_register ;
    var_cas_STATUS_register = GGS_registerExpression ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("STATUS"), GGS_location (inLexique) COMMA_HERE), GGS_luint ::constructor_new (inLexique, GGS_uint (0U), GGS_location (inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_STATUS_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_16 ;
    const GGS_registerExpression  _temp_55252 = var_cas_STATUS_register ;
    if (_temp_55252.isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_55252._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_55252 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_STATUS_IPICregisterDescription, automatic_var_16 COMMA_SOURCE_FILE_AT_LINE (1604)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_HERE), var_cas_second_IPICregisterDescription COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription, GGS_bool (true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_CLRF (inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_HERE), var_cas_first_IPICregisterDescription COMMA_HERE)) ;
    if ((var_cas_inNeedsToSavePCLATH).isBuiltAndTrue ()) {
      GGS_registerExpression  var_cas_first_register_second_byte ;
      var_cas_first_register_second_byte = GGS_registerExpression ::constructor_new (inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (inLexique, GGS_uint (1U), GGS_location (inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_first_var_second_byte_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_17 ;
      const GGS_registerExpression  _temp_56273 = var_cas_first_register_second_byte ;
      if (_temp_56273.isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_56273._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (inLexique, _temp_56273 (HERE), var_cas_inTotalBankCount, GGS_uint (0U), var_cas_inRegisterTable, var_cas_first_var_second_byte_IPICregisterDescription, automatic_var_17 COMMA_SOURCE_FILE_AT_LINE (1618)) ;
        }
      }
      GGS_registerExpression  var_cas_PCLATH_register ;
      var_cas_PCLATH_register = GGS_registerExpression ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("PCLATH"), GGS_location (inLexique) COMMA_HERE), GGS_luint ::constructor_new (inLexique, GGS_uint (0U), GGS_location (inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_PCLATH_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_18 ;
      const GGS_registerExpression  _temp_56674 = var_cas_PCLATH_register ;
      if (_temp_56674.isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_56674._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (inLexique, _temp_56674 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_PCLATH_IPICregisterDescription, automatic_var_18 COMMA_SOURCE_FILE_AT_LINE (1628)) ;
        }
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_MOVF (inLexique COMMA_HERE), var_cas_PCLATH_IPICregisterDescription, GGS_bool (true) COMMA_HERE)) ;
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_HERE), var_cas_first_var_second_byte_IPICregisterDescription COMMA_HERE)) ;
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_CLRF (inLexique COMMA_HERE), var_cas_PCLATH_IPICregisterDescription COMMA_HERE)) ;
    }
    GGS_bool var_cas_continuesInSequence ;
    GGS_uint  var_cas_currentBank ;
    var_cas_currentBank = GGS_uint (0U) ;
    ::routine_handleMidrangeInstructionList (inLexique,  var_cas_inInterruptRoutineInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioGenerationOptimizationMessages,  var_cas_inTotalBankCount,  var_cas_currentBank,  GGS_bool (true),  var_cas_continuesInSequence,  GGS_routineKind::constructor_interruptRoutine (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (1642)) ;
    if (((var_cas_continuesInSequence).operator_not ()).isBuiltAndTrue ()) {
      var_cas_inEndOfInterruptLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("execution cannot reach the end of the interrupt routine") COMMA_SOURCE_FILE_AT_LINE (1658)) ;
    }
    if ((var_cas_inNeedsToSavePCLATH).isBuiltAndTrue ()) {
      GGS_registerExpression  var_cas_first_register_second_byte ;
      var_cas_first_register_second_byte = GGS_registerExpression ::constructor_new (inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (inLexique, GGS_uint (1U), GGS_location (inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_first_var_second_byte_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_19 ;
      const GGS_registerExpression  _temp_58231 = var_cas_first_register_second_byte ;
      if (_temp_58231.isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_58231._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (inLexique, _temp_58231 (HERE), var_cas_inTotalBankCount, GGS_uint (0U), var_cas_inRegisterTable, var_cas_first_var_second_byte_IPICregisterDescription, automatic_var_19 COMMA_SOURCE_FILE_AT_LINE (1662)) ;
        }
      }
      GGS_registerExpression  var_cas_PCLATH_register ;
      var_cas_PCLATH_register = GGS_registerExpression ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("PCLATH"), GGS_location (inLexique) COMMA_HERE), GGS_luint ::constructor_new (inLexique, GGS_uint (0U), GGS_location (inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_PCLATH_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_20 ;
      const GGS_registerExpression  _temp_58632 = var_cas_PCLATH_register ;
      if (_temp_58632.isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_58632._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (inLexique, _temp_58632 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_PCLATH_IPICregisterDescription, automatic_var_20 COMMA_SOURCE_FILE_AT_LINE (1672)) ;
        }
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_MOVF (inLexique COMMA_HERE), var_cas_first_var_second_byte_IPICregisterDescription, GGS_bool (true) COMMA_HERE)) ;
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_HERE), var_cas_PCLATH_IPICregisterDescription COMMA_HERE)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (inLexique COMMA_HERE), var_cas_first_IPICregisterDescription, GGS_bool (true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (inLexique COMMA_HERE), var_cas_second_IPICregisterDescription, GGS_bool (false) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (inLexique COMMA_HERE), var_cas_second_IPICregisterDescription, GGS_bool (true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_RETFIE ::constructor_new (inLexique, GGS_location (inLexique) COMMA_HERE)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateInterruptRoutineForControllerWithSharedRAM\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "generateInterruptRoutineForControllerWithoutSharedRAM"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateInterruptRoutineForControllerWithoutSharedRAM (C_Compiler & inLexique,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_lstring   var_cas_inFirstSaveRegister,
                                const GGS_lstring   var_cas_inSecondSaveRegister,
                                const GGS_bool  var_cas_inNeedsToSavePCLATH,
                                const GGS_midrange_instructionList   var_cas_inInterruptRoutineInstructionList,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_constantMap   var_cas_inConstantMap,
                                const GGS_location   var_cas_inEndOfInterruptLocation,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_string & var_cas_ioGenerationOptimizationMessages COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateInterruptRoutineForControllerWithoutSharedRAM at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_uintlist  var_cas_registerAddressList ;
  GGS_uint  var_cas_size ;
  GGS_bitSliceTable  automatic_var_21 ;
  GGS_string automatic_var_22 ;
  const GGS_registerTable  _temp_60656 = var_cas_inRegisterTable ;
  if (_temp_60656.isBuilt ()) {
    _temp_60656 (HERE)->method_searchKey (inLexique, var_cas_inFirstSaveRegister, var_cas_registerAddressList, var_cas_size, automatic_var_21, automatic_var_22 COMMA_SOURCE_FILE_AT_LINE (1711)) ;
  }
  GGS_bool var_cas_accessibleFromBank0 ;
  var_cas_accessibleFromBank0 = GGS_bool (false) ;
  GGS_uint  var_cas_offset ;
  var_cas_offset = GGS_uint (0U) ;
  {
    GGS_uintlist::cEnumerator enumerator_60816 (var_cas_registerAddressList, true) ;
    const GGS_uintlist::cElement * operand_60816 = NULL ;
    while (((operand_60816 = enumerator_60816.nextObject ()))
        && ((var_cas_accessibleFromBank0).operator_not ().isBuiltAndTrue ())) {
      macroValidPointer (operand_60816) ;
      var_cas_offset = (operand_60816->mValue).operator_and (GGS_uint (127U)) ;
      var_cas_accessibleFromBank0 = ((operand_60816->mValue).operator_and (GGS_uint (3968U))).operator_isEqual (GGS_uint (0U)) ;
    }
  }
  if (((var_cas_accessibleFromBank0).operator_not ()).isBuiltAndTrue ()) {
    var_cas_inFirstSaveRegister.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (var_cas_inFirstSaveRegister)).operator_concat (GGS_string ("' variable cannot be accessed from bank 0")) COMMA_SOURCE_FILE_AT_LINE (1720)) ;
  }
  if (((var_cas_inNeedsToSavePCLATH).operator_and ((var_cas_size).operator_isNotEqual (GGS_uint (3U)))).isBuiltAndTrue ()) {
    var_cas_inFirstSaveRegister.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_inFirstSaveRegister)).operator_concat (GGS_string ("' variable size is "))).operator_concat (var_cas_size.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1722)))).operator_concat (GGS_string (" (it should be 3)")) COMMA_SOURCE_FILE_AT_LINE (1723)) ;
  }else if ((((var_cas_inNeedsToSavePCLATH).operator_not ()).operator_and ((var_cas_size).operator_isNotEqual (GGS_uint (2U)))).isBuiltAndTrue ()) {
    var_cas_inFirstSaveRegister.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_inFirstSaveRegister)).operator_concat (GGS_string ("' variable size is "))).operator_concat (var_cas_size.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1724)))).operator_concat (GGS_string (" (it should be 2)")) COMMA_SOURCE_FILE_AT_LINE (1725)) ;
  }
  GGS_uintlist  var_cas_saveStatusRegisterAddressList ;
  var_cas_saveStatusRegisterAddressList = var_cas_registerAddressList ;
  GGS_bitSliceTable  automatic_var_23 ;
  GGS_string automatic_var_24 ;
  const GGS_registerTable  _temp_61659 = var_cas_inRegisterTable ;
  if (_temp_61659.isBuilt ()) {
    _temp_61659 (HERE)->method_searchKey (inLexique, var_cas_inSecondSaveRegister, var_cas_registerAddressList, var_cas_size, automatic_var_23, automatic_var_24 COMMA_SOURCE_FILE_AT_LINE (1728)) ;
  }
  var_cas_saveStatusRegisterAddressList = (var_cas_saveStatusRegisterAddressList).operator_concat (var_cas_registerAddressList) ;
  if (((var_cas_size).operator_isNotEqual (GGS_uint (1U))).isBuiltAndTrue ()) {
    var_cas_inSecondSaveRegister.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_inSecondSaveRegister)).operator_concat (GGS_string ("' variable size is "))).operator_concat (var_cas_size.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1731)))).operator_concat (GGS_string (" (it should be 1)")) COMMA_SOURCE_FILE_AT_LINE (1732)) ;
  }
  GGS_bool var_cas_accessibleFromBank1 ;
  var_cas_accessibleFromBank1 = GGS_bool (false) ;
  {
    GGS_uintlist::cEnumerator enumerator_62084 (var_cas_registerAddressList, true) ;
    const GGS_uintlist::cElement * operand_62084 = NULL ;
    while (((operand_62084 = enumerator_62084.nextObject ()))
        && ((var_cas_accessibleFromBank1).operator_not ().isBuiltAndTrue ())) {
      macroValidPointer (operand_62084) ;
      var_cas_accessibleFromBank1 = ((operand_62084->mValue).operator_and (GGS_uint (3968U))).operator_isEqual (GGS_uint (128U)) ;
    }
  }
  if (((var_cas_accessibleFromBank1).operator_not ()).isBuiltAndTrue ()) {
    var_cas_inSecondSaveRegister.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (var_cas_inSecondSaveRegister)).operator_concat (GGS_string ("' variable cannot be accessed from bank 1")) COMMA_SOURCE_FILE_AT_LINE (1740)) ;
  }
  GGS_bool var_cas_offsetOk ;
  var_cas_offsetOk = GGS_bool (true) ;
  {
    GGS_uintlist::cEnumerator enumerator_62495 (var_cas_registerAddressList, true) ;
    const GGS_uintlist::cElement * operand_62495 = NULL ;
    while (((operand_62495 = enumerator_62495.nextObject ()))
        && (var_cas_offsetOk.isBuiltAndTrue ())) {
      macroValidPointer (operand_62495) ;
      var_cas_offsetOk = (var_cas_offset).operator_isEqual ((operand_62495->mValue).operator_and (GGS_uint (127U))) ;
      if (((var_cas_offsetOk).operator_not ()).isBuiltAndTrue ()) {
        var_cas_inSecondSaveRegister.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((((((GGS_string ("the '")).operator_concat (var_cas_inSecondSaveRegister)).operator_concat (GGS_string ("' variable has an offset equal to "))).operator_concat ((operand_62495->mValue).operator_and (GGS_uint (127U)).reader_hexString (inLexique COMMA_SOURCE_FILE_AT_LINE (1747)))).operator_concat (GGS_string (", while '"))).operator_concat (var_cas_inFirstSaveRegister)).operator_concat (GGS_string ("' has an offset equal to "))).operator_concat (var_cas_offset.reader_hexString (inLexique COMMA_SOURCE_FILE_AT_LINE (1748)))).operator_concat (GGS_string (" (tthe two offsets should be equal)")) COMMA_SOURCE_FILE_AT_LINE (1749)) ;
      }
    }
  }
  if (((GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U))).isBuiltAndTrue ()) {
    GGS_registerExpression  var_cas_first_register ;
    var_cas_first_register = GGS_registerExpression ::constructor_new (inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (inLexique, GGS_uint (0U), GGS_location (inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_first_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_25 ;
    const GGS_registerExpression  _temp_63162 = var_cas_first_register ;
    if (_temp_63162.isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_63162._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_63162 (HERE), var_cas_inTotalBankCount, GGS_uint (0U), var_cas_inRegisterTable, var_cas_first_IPICregisterDescription, automatic_var_25 COMMA_SOURCE_FILE_AT_LINE (1755)) ;
      }
    }
    GGS_registerExpression  var_cas_first_register_second_byte ;
    var_cas_first_register_second_byte = GGS_registerExpression ::constructor_new (inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (inLexique, GGS_uint (1U), GGS_location (inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_first_reg_second_byte_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_26 ;
    const GGS_registerExpression  _temp_63515 = var_cas_first_register_second_byte ;
    if (_temp_63515.isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_63515._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_63515 (HERE), var_cas_inTotalBankCount, GGS_uint (0U), var_cas_inRegisterTable, var_cas_first_reg_second_byte_IPICregisterDescription, automatic_var_26 COMMA_SOURCE_FILE_AT_LINE (1764)) ;
      }
    }
    GGS_registerExpression  var_cas_STATUS_register ;
    var_cas_STATUS_register = GGS_registerExpression ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("STATUS"), GGS_location (inLexique) COMMA_HERE), GGS_luint ::constructor_new (inLexique, GGS_uint (0U), GGS_location (inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_STATUS_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_27 ;
    const GGS_registerExpression  _temp_63897 = var_cas_STATUS_register ;
    if (_temp_63897.isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_63897._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (inLexique, _temp_63897 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_STATUS_IPICregisterDescription, automatic_var_27 COMMA_SOURCE_FILE_AT_LINE (1774)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_HERE), var_cas_first_IPICregisterDescription COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription, GGS_bool (true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_CLRF (inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_HERE), var_cas_first_reg_second_byte_IPICregisterDescription COMMA_HERE)) ;
    if ((var_cas_inNeedsToSavePCLATH).isBuiltAndTrue ()) {
      GGS_registerExpression  var_cas_first_register_third_byte ;
      var_cas_first_register_third_byte = GGS_registerExpression ::constructor_new (inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (inLexique, GGS_uint (2U), GGS_location (inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_first_var_third_byte_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_28 ;
      const GGS_registerExpression  _temp_64931 = var_cas_first_register_third_byte ;
      if (_temp_64931.isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_64931._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (inLexique, _temp_64931 (HERE), var_cas_inTotalBankCount, GGS_uint (0U), var_cas_inRegisterTable, var_cas_first_var_third_byte_IPICregisterDescription, automatic_var_28 COMMA_SOURCE_FILE_AT_LINE (1788)) ;
        }
      }
      GGS_registerExpression  var_cas_PCLATH_register ;
      var_cas_PCLATH_register = GGS_registerExpression ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("PCLATH"), GGS_location (inLexique) COMMA_HERE), GGS_luint ::constructor_new (inLexique, GGS_uint (0U), GGS_location (inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_PCLATH_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_29 ;
      const GGS_registerExpression  _temp_65331 = var_cas_PCLATH_register ;
      if (_temp_65331.isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_65331._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (inLexique, _temp_65331 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_PCLATH_IPICregisterDescription, automatic_var_29 COMMA_SOURCE_FILE_AT_LINE (1798)) ;
        }
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_MOVF (inLexique COMMA_HERE), var_cas_PCLATH_IPICregisterDescription, GGS_bool (true) COMMA_HERE)) ;
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_HERE), var_cas_first_var_third_byte_IPICregisterDescription COMMA_HERE)) ;
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_CLRF (inLexique COMMA_HERE), var_cas_PCLATH_IPICregisterDescription COMMA_HERE)) ;
    }
    GGS_bool var_cas_continuesInSequence ;
    GGS_uint  var_cas_currentBank ;
    var_cas_currentBank = GGS_uint (0U) ;
    ::routine_handleMidrangeInstructionList (inLexique,  var_cas_inInterruptRoutineInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioGenerationOptimizationMessages,  var_cas_inTotalBankCount,  var_cas_currentBank,  GGS_bool (true),  var_cas_continuesInSequence,  GGS_routineKind::constructor_interruptRoutine (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (1812)) ;
    if (((var_cas_continuesInSequence).operator_not ()).isBuiltAndTrue ()) {
      var_cas_inEndOfInterruptLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("execution cannot reach the end of the interrupt routine") COMMA_SOURCE_FILE_AT_LINE (1828)) ;
    }
    if ((var_cas_inNeedsToSavePCLATH).isBuiltAndTrue ()) {
      GGS_registerExpression  var_cas_first_register_third_byte ;
      var_cas_first_register_third_byte = GGS_registerExpression ::constructor_new (inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (inLexique, GGS_uint (2U), GGS_location (inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_first_var_second_byte_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_30 ;
      const GGS_registerExpression  _temp_66884 = var_cas_first_register_third_byte ;
      if (_temp_66884.isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_66884._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (inLexique, _temp_66884 (HERE), var_cas_inTotalBankCount, GGS_uint (0U), var_cas_inRegisterTable, var_cas_first_var_second_byte_IPICregisterDescription, automatic_var_30 COMMA_SOURCE_FILE_AT_LINE (1832)) ;
        }
      }
      GGS_registerExpression  var_cas_PCLATH_register ;
      var_cas_PCLATH_register = GGS_registerExpression ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("PCLATH"), GGS_location (inLexique) COMMA_HERE), GGS_luint ::constructor_new (inLexique, GGS_uint (0U), GGS_location (inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_PCLATH_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_31 ;
      const GGS_registerExpression  _temp_67285 = var_cas_PCLATH_register ;
      if (_temp_67285.isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_67285._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (inLexique, _temp_67285 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_PCLATH_IPICregisterDescription, automatic_var_31 COMMA_SOURCE_FILE_AT_LINE (1842)) ;
        }
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_MOVF (inLexique COMMA_HERE), var_cas_first_var_second_byte_IPICregisterDescription, GGS_bool (true) COMMA_HERE)) ;
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_HERE), var_cas_PCLATH_IPICregisterDescription COMMA_HERE)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (inLexique COMMA_HERE), var_cas_first_reg_second_byte_IPICregisterDescription, GGS_bool (true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (inLexique COMMA_HERE), var_cas_first_IPICregisterDescription, GGS_bool (false) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (inLexique COMMA_HERE), var_cas_first_IPICregisterDescription, GGS_bool (true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_RETFIE ::constructor_new (inLexique, GGS_location (inLexique) COMMA_HERE)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateInterruptRoutineForControllerWithoutSharedRAM\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of routine "build_midrange_assembly_instruction_list"    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_midrange_assembly_instruction_list (C_Compiler & inLexique,
                                const GGS_uint   var_cas_inTotalPageCount,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_sint   var_cas_inROMSize,
                                const GGS_bool  var_cas_inHasSharedRAMBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_midrange_model  var_cas_inPiccoloModel,
                                const GGS_bool  var_cas_inHasInterrupt,
                                GGS_midrange_ipic_instructionList  & var_cas_outGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_midrange_assembly_instruction_list at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_generationOptimizationMessages ;
  var_cas_generationOptimizationMessages = GGS_string ("") ;
  GGS_routineMap  var_cas_routineMap ;
  var_cas_routineMap = GGS_routineMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  {
    GGS_midrange_routineDefinitionList::cEnumerator enumerator_69112 (var_cas_inPiccoloModel.reader_mRoutineDefinitionList (inLexique COMMA_SOURCE_FILE_AT_LINE (1878)), true) ;
    const GGS_midrange_routineDefinitionList::cElement * operand_69112 = NULL ;
    while (((operand_69112 = enumerator_69112.nextObject ()))) {
      macroValidPointer (operand_69112) ;
      if ((((operand_69112->mRequiredBank.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (1879))).operator_isNotEqual (GGS_uint ::constructor_max (inLexique COMMA_HERE))).operator_and ((operand_69112->mRequiredBank.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (1879))).operator_strictSup (GGS_uint (15U)))).isBuiltAndTrue ()) {
        operand_69112->mRequiredBank.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the required bank value should be lower or equal to 15") COMMA_SOURCE_FILE_AT_LINE (1881)) ;
      }
      if ((((operand_69112->mReturnedBank.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (1882))).operator_isNotEqual (GGS_uint ::constructor_max (inLexique COMMA_HERE))).operator_and ((operand_69112->mReturnedBank.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (1882))).operator_strictSup (GGS_uint (15U)))).isBuiltAndTrue ()) {
        operand_69112->mReturnedBank.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the returned bank value should be lower or equal to 15") COMMA_SOURCE_FILE_AT_LINE (1884)) ;
      }
      var_cas_routineMap.modifier_insertKey (inLexique, operand_69112->mRoutineName, operand_69112->mIsNoReturn, operand_69112->mRequiredBank.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (1885)), operand_69112->mReturnedBank.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (1885)), operand_69112->mPreservesBank COMMA_SOURCE_FILE_AT_LINE (1885)) ;
    }
  }
  GGS_constantMap  var_cas_constantMap ;
  var_cas_constantMap = GGS_constantMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  GGS_lstring  var_cas_romSizeString ;
  var_cas_romSizeString = GGS_lstring ::constructor_new (inLexique, GGS_string ("ROM_SIZE"), GGS_location (inLexique) COMMA_HERE) ;
  var_cas_constantMap.modifier_insertKey (inLexique, var_cas_romSizeString, var_cas_inROMSize COMMA_SOURCE_FILE_AT_LINE (1891)) ;
  {
    GGS_constantDefinitionList::cEnumerator enumerator_69912 (var_cas_inPiccoloModel.reader_mConstantDefinitionList (inLexique COMMA_SOURCE_FILE_AT_LINE (1893)), true) ;
    const GGS_constantDefinitionList::cElement * operand_69912 = NULL ;
    while (((operand_69912 = enumerator_69912.nextObject ()))) {
      macroValidPointer (operand_69912) ;
      GGS_sint  var_cas_result ;
      const GGS_immediatExpression  _temp_69991 = operand_69912->mExpression ;
      if (_temp_69991.isBuilt ()) {
        typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_69991._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (inLexique, _temp_69991 (HERE), var_cas_inRegisterTable, var_cas_constantMap, var_cas_result COMMA_SOURCE_FILE_AT_LINE (1894)) ;
        }
      }
      if ((var_cas_inRegisterTable.reader_hasKey (inLexique, operand_69912->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1895)) COMMA_SOURCE_FILE_AT_LINE (1895))).isBuiltAndTrue ()) {
        operand_69912->mConstantName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("'")).operator_concat (operand_69912->mConstantName)).operator_concat (GGS_string ("' is already declared as ram register or special register")) COMMA_SOURCE_FILE_AT_LINE (1897)) ;
      }else{
        var_cas_constantMap.modifier_insertKey (inLexique, operand_69912->mConstantName, var_cas_result COMMA_SOURCE_FILE_AT_LINE (1898)) ;
      }
    }
  }
  if ((GGS_bool (inLexique.boolOptionValueFromKeys ("piccolo_options", "ouputListingFile" COMMA_SOURCE_FILE_AT_LINE (1902)))).isBuiltAndTrue ()) {
    ::routine_print_constant_definition (inLexique,  var_cas_constantMap,  var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1903)) ;
  }
  if ((var_cas_routineMap.reader_hasKey (inLexique, GGS_string ("main") COMMA_SOURCE_FILE_AT_LINE (1909))).isBuiltAndTrue ()) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  automatic_var_32 ;
    GGS_bool automatic_var_33 ;
    const GGS_routineMap  _temp_70680 = var_cas_routineMap ;
    if (_temp_70680.isBuilt ()) {
      _temp_70680 (HERE)->method_searchKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("main"), GGS_location (inLexique) COMMA_HERE), var_cas_isNoReturn, var_cas_requiredBank, automatic_var_32, automatic_var_33 COMMA_SOURCE_FILE_AT_LINE (1912)) ;
    }
    if (((var_cas_isNoReturn).operator_not ()).isBuiltAndTrue ()) {
      GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the \"main\" should be declared with \"noreturn\" qualifier: \"noreturn main bank:requires 0\"") COMMA_SOURCE_FILE_AT_LINE (1915)) ;
    }
    if (((var_cas_requiredBank).operator_isNotEqual (GGS_uint (0U))).isBuiltAndTrue ()) {
      GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the \"main\" should be declared with \"requiresbank 0\" qualifier: \"noreturn main bank:requires 0\"") COMMA_SOURCE_FILE_AT_LINE (1918)) ;
    }
  }else{
    var_cas_inPiccoloModel.reader_mEndOfProgram (inLexique COMMA_SOURCE_FILE_AT_LINE (1920)).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the program should declare the \"main\" routine") COMMA_SOURCE_FILE_AT_LINE (1921)) ;
  }
  GGS_bool var_cas_needsToSavePCLATH ;
  var_cas_needsToSavePCLATH = GGS_bool (false) ;
  {
    GGS_midrange_routineDefinitionList::cEnumerator enumerator_71322 (var_cas_inPiccoloModel.reader_mRoutineDefinitionList (inLexique COMMA_SOURCE_FILE_AT_LINE (1924)), true) ;
    const GGS_midrange_routineDefinitionList::cElement * operand_71322 = NULL ;
    while (((operand_71322 = enumerator_71322.nextObject ()))) {
      macroValidPointer (operand_71322) ;
      if (((operand_71322->mPage.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (1925))).operator_strictSup (GGS_uint (0U))).isBuiltAndTrue ()) {
        var_cas_needsToSavePCLATH = GGS_bool (true) ;
      }
      if (((operand_71322->mPage.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (1928))).operator_supOrEqual (var_cas_inTotalPageCount)).isBuiltAndTrue ()) {
        operand_71322->mPage.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("invalid value (")).operator_concat (operand_71322->mPage.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (1929)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1929)))).operator_concat (GGS_string ("); the device has "))).operator_concat (var_cas_inTotalPageCount.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1929)))).operator_concat (GGS_string (" 2k page(s) on rom")) COMMA_SOURCE_FILE_AT_LINE (1930)) ;
      }
    }
  }
  if ((var_cas_needsToSavePCLATH).isBuiltAndTrue ()) {
    var_cas_needsToSavePCLATH = GGS_bool (false) ;
    {
      GGS_midrange_interruptDefinitionList::cEnumerator enumerator_71829 (var_cas_inPiccoloModel.reader_mInterruptDefinitionList (inLexique COMMA_SOURCE_FILE_AT_LINE (1935)), true) ;
      const GGS_midrange_interruptDefinitionList::cElement * operand_71829 = NULL ;
      while (((operand_71829 = enumerator_71829.nextObject ()))
          && ((var_cas_needsToSavePCLATH).operator_not ().isBuiltAndTrue ())) {
        macroValidPointer (operand_71829) ;
        {
          GGS_midrange_instructionList::cEnumerator enumerator_71931 (operand_71829->mInstructionList, true) ;
          const GGS_midrange_instructionList::cElement * operand_71931 = NULL ;
          while (((operand_71931 = enumerator_71931.nextObject ()))
              && ((var_cas_needsToSavePCLATH).operator_not ().isBuiltAndTrue ())) {
            macroValidPointer (operand_71931) ;
            const GGS_midrange_instruction  _temp_72010 = operand_71931->mInstruction ;
            if (_temp_72010.isBuilt ()) {
              typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL _method = findCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL (_temp_72010._galgasObjectRunTimeInfo ()) ;
              if (_method != NULL) {
                _method (inLexique, _temp_72010 (HERE), var_cas_needsToSavePCLATH COMMA_SOURCE_FILE_AT_LINE (1937)) ;
              }
            }
          }
        }
      }
    }
  }
  var_cas_outGeneratedInstructionList = GGS_midrange_ipic_instructionList ::constructor_emptyList () ;
  GGS_uint  var_cas_localLabelIndex ;
  var_cas_localLabelIndex = GGS_uint (0U) ;
  var_cas_outGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_JUMP ::constructor_new (inLexique, GGS_location (inLexique), GGS_lstring ::constructor_new (inLexique, GGS_string ("main"), GGS_location (inLexique) COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_HERE) COMMA_HERE)) ;
  if ((var_cas_inHasInterrupt).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_ORG ::constructor_new (inLexique, GGS_uint (4U) COMMA_HERE)) ;
    {
      GGS_midrange_interruptDefinitionList::cEnumerator enumerator_72618 (var_cas_inPiccoloModel.reader_mInterruptDefinitionList (inLexique COMMA_SOURCE_FILE_AT_LINE (1954)), true) ;
      const GGS_midrange_interruptDefinitionList::cElement * operand_72618 = NULL ;
      while (((operand_72618 = enumerator_72618.nextObject ()))) {
        macroValidPointer (operand_72618) ;
        if ((var_cas_inHasSharedRAMBank).isBuiltAndTrue ()) {
          ::routine_generateInterruptRoutineForControllerWithSharedRAM (inLexique,  var_cas_inTotalBankCount,  var_cas_inRegisterTable,  operand_72618->mFirstSaveRegister,  operand_72618->mSecondSaveRegister,  var_cas_needsToSavePCLATH,  operand_72618->mInstructionList,  var_cas_routineMap,  var_cas_constantMap,  operand_72618->mEndOfInterruptLocation,  var_cas_outGeneratedInstructionList,  var_cas_localLabelIndex,  var_cas_generationOptimizationMessages COMMA_SOURCE_FILE_AT_LINE (1956)) ;
        }else{
          ::routine_generateInterruptRoutineForControllerWithoutSharedRAM (inLexique,  var_cas_inTotalBankCount,  var_cas_inRegisterTable,  operand_72618->mFirstSaveRegister,  operand_72618->mSecondSaveRegister,  var_cas_needsToSavePCLATH,  operand_72618->mInstructionList,  var_cas_routineMap,  var_cas_constantMap,  operand_72618->mEndOfInterruptLocation,  var_cas_outGeneratedInstructionList,  var_cas_localLabelIndex,  var_cas_generationOptimizationMessages COMMA_SOURCE_FILE_AT_LINE (1971)) ;
        }
      }
    }
  }
  GGS_uint  var_cas_currentPage ;
  var_cas_currentPage = GGS_uint (0U) ;
  GGS_uint _variant_75578 = var_cas_inTotalPageCount ;
  GGS_bool _condition_75578 (_variant_75578.isBuilt (), true) ;
  while (_condition_75578.isBuiltAndTrue ()) {
    _condition_75578 = (var_cas_currentPage).operator_strictInf (var_cas_inTotalPageCount) ;
    if (_condition_75578.isBuiltAndTrue ()) {
      if (_variant_75578.uintValue () == 0) {
        inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (2034)) ;
        _condition_75578 = GGS_bool (false) ;
      }else{
        _variant_75578.decrement_operation (inLexique COMMA_HERE) ;
        GGS_bool var_cas_orgGenerated ;
        var_cas_orgGenerated = (var_cas_currentPage).operator_isEqual (GGS_uint (0U)) ;
        {
          GGS_midrange_routineDefinitionList::cEnumerator enumerator_73857 (var_cas_inPiccoloModel.reader_mRoutineDefinitionList (inLexique COMMA_SOURCE_FILE_AT_LINE (1992)), true) ;
          const GGS_midrange_routineDefinitionList::cElement * operand_73857 = NULL ;
          while (((operand_73857 = enumerator_73857.nextObject ()))) {
            macroValidPointer (operand_73857) ;
            if (((operand_73857->mPage.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (1993))).operator_isEqual (var_cas_currentPage)).isBuiltAndTrue ()) {
              if (((var_cas_orgGenerated).operator_not ()).isBuiltAndTrue ()) {
                var_cas_outGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_ORG ::constructor_new (inLexique, var_cas_currentPage.multiply_operation (inLexique, GGS_uint (2048U) COMMA_SOURCE_FILE_AT_LINE (1995)) COMMA_HERE)) ;
                var_cas_orgGenerated = GGS_bool (true) ;
              }
              GGS_bool var_cas_continuesInSequence ;
              GGS_uint  var_cas_currentBank ;
              var_cas_currentBank = operand_73857->mRequiredBank.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (1999)) ;
              GGS_routineKind var_cas_routineKind ;
              if ((operand_73857->mIsNoReturn).isBuiltAndTrue ()) {
                var_cas_routineKind = GGS_routineKind::constructor_noReturnRoutine (inLexique COMMA_HERE) ;
              }else{
                var_cas_routineKind = GGS_routineKind::constructor_regularRoutine (inLexique COMMA_HERE) ;
              }
              var_cas_outGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (inLexique, operand_73857->mRoutineName COMMA_HERE)) ;
              ::routine_handleMidrangeInstructionList (inLexique,  operand_73857->mInstructionList,  var_cas_routineMap,  var_cas_inRegisterTable,  var_cas_constantMap,  var_cas_localLabelIndex,  var_cas_outGeneratedInstructionList,  var_cas_generationOptimizationMessages,  var_cas_inTotalBankCount,  var_cas_currentBank,  operand_73857->mPreservesBank,  var_cas_continuesInSequence,  var_cas_routineKind COMMA_SOURCE_FILE_AT_LINE (2007)) ;
              if (((((operand_73857->mIsNoReturn).operator_not ()).operator_and ((operand_73857->mReturnedBank.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (2021))).operator_isNotEqual (GGS_uint ::constructor_max (inLexique COMMA_HERE)))).operator_and ((var_cas_currentBank).operator_isNotEqual (operand_73857->mReturnedBank.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (2021))))).isBuiltAndTrue ()) {
                operand_73857->mRoutineName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, (GGS_string ("execution will not set bank selection to ")).operator_concat (operand_73857->mReturnedBank.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (2022)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2022))) COMMA_SOURCE_FILE_AT_LINE (2023)) ;
              }
              if (((operand_73857->mIsNoReturn).operator_and (var_cas_continuesInSequence)).isBuiltAndTrue ()) {
                operand_73857->mRoutineName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("execution should not reach the end of a \"noreturn\" routine") COMMA_SOURCE_FILE_AT_LINE (2026)) ;
              }
              if (((operand_73857->mIsNoReturn).operator_not ()).isBuiltAndTrue ()) {
                var_cas_outGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_RETURN ::constructor_new (inLexique, operand_73857->mRoutineName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2029)) COMMA_HERE)) ;
              }
            }
          }
        }
        var_cas_currentPage.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (2033)) ;
      }
    }
  }
  if ((GGS_bool (inLexique.boolOptionValueFromKeys ("piccolo_options", "ouputListingFile" COMMA_SOURCE_FILE_AT_LINE (2036)))).isBuiltAndTrue ()) {
    var_cas_ioListFileContents.dotAssign_operation (GGS_string ("").reader_stringByLeftAndRightPadding (inLexique, GGS_uint (79U), GGS_char (TO_UNICODE ('*')) COMMA_SOURCE_FILE_AT_LINE (2037))) ;
    var_cas_ioListFileContents.appendCString ("\n") ;
    var_cas_ioListFileContents.appendCString ("*") ;
    var_cas_ioListFileContents.dotAssign_operation (GGS_string ("IPIC INSTRUCTION LIST").reader_stringByLeftAndRightPadding (inLexique, GGS_uint (77U), GGS_char (TO_UNICODE (' ')) COMMA_SOURCE_FILE_AT_LINE (2038))) ;
    var_cas_ioListFileContents.appendCString ("*\n") ;
    var_cas_ioListFileContents.dotAssign_operation (GGS_string ("").reader_stringByLeftAndRightPadding (inLexique, GGS_uint (79U), GGS_char (TO_UNICODE ('*')) COMMA_SOURCE_FILE_AT_LINE (2039))) ;
    var_cas_ioListFileContents.appendCString ("\n"
      "\n") ;
    if (((var_cas_generationOptimizationMessages.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (2040))).operator_strictSup (GGS_uint (0U))).isBuiltAndTrue ()) {
      var_cas_ioListFileContents.appendCString ("Optimizations during generation:\n") ;
      var_cas_ioListFileContents.dotAssign_operation (var_cas_generationOptimizationMessages) ;
      var_cas_ioListFileContents.appendCString ("\n") ;
    }
    var_cas_ioListFileContents.appendCString ("Generated intermediate code:\n") ;
    GGS_uint  var_cas_index ;
    var_cas_index = GGS_uint (0U) ;
    GGS_uint  var_cas_currentAddress ;
    var_cas_currentAddress = GGS_uint (0U) ;
    {
      GGS_midrange_ipic_instructionList::cEnumerator enumerator_76310 (var_cas_outGeneratedInstructionList, true) ;
      const GGS_midrange_ipic_instructionList::cElement * operand_76310 = NULL ;
      while (((operand_76310 = enumerator_76310.nextObject ()))) {
        macroValidPointer (operand_76310) ;
        const GGS_midrange_ipic_instruction  _temp_76351 = operand_76310->mInstruction ;
        if (_temp_76351.isBuilt ()) {
          _temp_76351 (HERE)->method_setCurrentAddress (inLexique, var_cas_currentAddress COMMA_SOURCE_FILE_AT_LINE (2049)) ;
        }
        var_cas_ioListFileContents.dotAssign_operation (var_cas_index.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2050)).reader_stringByLeftPadding (inLexique, GGS_uint (5U), GGS_char (TO_UNICODE (' ')) COMMA_SOURCE_FILE_AT_LINE (2050))) ;
        var_cas_ioListFileContents.appendCString (": ") ;
        const GGS_midrange_ipic_instruction  _temp_76496 = operand_76310->mInstruction ;
        if (_temp_76496.isBuilt ()) {
          _temp_76496 (HERE)->method_displayIPICinstruction (inLexique, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (2051)) ;
        }
        var_cas_ioListFileContents.appendCString ("\n") ;
        var_cas_index.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (2053)) ;
      }
    }
    var_cas_ioListFileContents.appendCString ("\n") ;
    var_cas_ioListFileContents.appendCString ("Minimum code size without optimization: ") ;
    var_cas_ioListFileContents.dotAssign_operation (var_cas_currentAddress.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2056))) ;
    var_cas_ioListFileContents.appendCString (" instructions.\n"
      "\n") ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_midrange_assembly_instruction_list\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_midrange_checkingAndBuildIPIC (void) {
 enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL (category_method__midrange_instruction__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction.slotID ()) ;
 enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_FOREVER__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_FOREVER.slotID ()) ;
 enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_structured_if__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_structured_if.slotID ()) ;
 enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_CALL__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_CALL.slotID ()) ;
 enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_JSR__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_JSR.slotID ()) ;
 enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_GOTO__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_GOTO.slotID ()) ;
 enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_JUMP__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_JUMP.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_nobanksel__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_nobanksel.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_savebank__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_savebank.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_banksel__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_banksel.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_FD__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_FD.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_F__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_F.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_FB__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_FB.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_JSR__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_JSR.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_CALL__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_CALL.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_JUMP__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_JUMP.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_GOTO__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_GOTO.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_CLRWDT__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_CLRWDT.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_CLRW__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_CLRW.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_NOP__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_NOP.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_SLEEP__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_SLEEP.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_literalOperation__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_literalOperation.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_MNOP__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_MNOP.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_FOREVER__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_FOREVER.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_IF_BitTest__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_IF_BitTest.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition) category_method__midrange_incDecRegisterInCondition__buildIPICinstructionForCondition, gClassInfoFor__midrange_incDecRegisterInCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition) category_method__midrange_incDecRegisterInCondition__computeInstructionCountForCondition, gClassInfoFor__midrange_incDecRegisterInCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition) category_method__midrange_negateCondition__buildIPICinstructionForCondition, gClassInfoFor__midrange_negateCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition) category_method__midrange_negateCondition__computeInstructionCountForCondition, gClassInfoFor__midrange_negateCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition) category_method__midrange_andCondition__buildIPICinstructionForCondition, gClassInfoFor__midrange_andCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition) category_method__midrange_andCondition__computeInstructionCountForCondition, gClassInfoFor__midrange_andCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition) category_method__midrange_bitTest_in_structured_if_condition__buildIPICinstructionForCondition, gClassInfoFor__midrange_bitTest_in_structured_if_condition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition) category_method__midrange_bitTest_in_structured_if_condition__computeInstructionCountForCondition, gClassInfoFor__midrange_bitTest_in_structured_if_condition.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_structured_if__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_structured_if.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_do_while__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_do_while.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_IF_IncDec__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_IF_IncDec.slotID ()) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogueAction prologueEpilogueObjectFor_midrange_checkingAndBuildIPIC (prologueRoutineFor_midrange_checkingAndBuildIPIC,
                                   NULL) ;

//---------------------------------------------------------------------------*

