//---------------------------------------------------------------------------*
//                                                                           *
//                 File 'midrange_checkingAndBuildIPIC.cpp'                  *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     august 24th, 2008, at 18h43'12"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "midrange_checkingAndBuildIPIC.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "midrange_checkingAndBuildIPIC.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_instruction.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList> gDispatchTableFor__midrange_instruction__build_midrange_ipic_instructionList ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__midrange_instruction__build_midrange_ipic_instructionList.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList
findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__midrange_instruction__build_midrange_ipic_instructionList.count ()) {
    result = gDispatchTableFor__midrange_instruction__build_midrange_ipic_instructionList (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (superClassPtr) ;
      gDispatchTableFor__midrange_instruction__build_midrange_ipic_instructionList.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "handleMidrangeInstructionList"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_handleMidrangeInstructionList (C_Compiler & _inLexique,
                                const GGS_midrange_instructionList   var_cas_inInstructionList,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & var_cas_outContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_handleMidrangeInstructionList at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outContinuesInSequence = GGS_bool (true, true) ;
  {
    GGS_midrange_instructionList::cEnumerator enumerator_1582 (var_cas_inInstructionList, true) ;
    const GGS_midrange_instructionList::cElement * operand_1582 = NULL ;
    while (((operand_1582 = enumerator_1582.nextObject ()))) {
      macroValidPointer (operand_1582) ;
      if (((var_cas_outContinuesInSequence)._operator_not ()).isBuiltAndTrue ()) {
        operand_1582->mInstruction.reader_mInstructionLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (46)).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "Unreachable code") COMMA_SOURCE_FILE_AT_LINE (47)) ;
        var_cas_outContinuesInSequence = GGS_bool (true, true) ;
      }
      const GGS_midrange_instruction  _temp_1801 = operand_1582->mInstruction ;
      if (_temp_1801._isBuilt ()) {
        typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList _method = findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (_temp_1801._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_1801 (HERE), var_cas_inRoutineMap, var_cas_inRegisterTable, var_cas_inConstantMap, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inShouldPreserveBank, var_cas_outContinuesInSequence, var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (49)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_handleMidrangeInstructionList\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_nobanksel.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_nobanksel__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_nobanksel * operand_2258,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & /* var_cas_ioGeneratedInstructionList */,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2258 != NULL) {
    if ((var_cas_inShouldPreserveBank).isBuiltAndTrue ()) {
      operand_2258->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "cannot use \"nobank\" here: bank selection should be preserved (use it in a \"banksave\" construct)") COMMA_SOURCE_FILE_AT_LINE (82)) ;
    }
    var_cas_ioCurrentBank = GGS_uint ::constructor_max (_inLexique COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_savebank.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_savebank__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_savebank * operand_3071,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3071 != NULL) {
    GGS_registerExpression  var_cas_STATUS_register ;
    var_cas_STATUS_register = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "STATUS"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_STATUS_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_0 ;
    const GGS_registerExpression  _temp_3688 = var_cas_STATUS_register ;
    if (_temp_3688._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_3688._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_3688 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_STATUS_IPICregisterDescription, automatic_var_0 COMMA_SOURCE_FILE_AT_LINE (105)) ;
      }
    }
    GGS_midrange_ipic_registerExpression var_cas_save_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_1 ;
    const GGS_registerExpression  _temp_3946 = operand_3071->mRegister ;
    if (_temp_3946._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_3946._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_3946 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_save_IPICregisterDescription, automatic_var_1 COMMA_SOURCE_FILE_AT_LINE (114)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, operand_3071->mInstructionLocation, GGS_midrange_instruction_FD_base_code::constructor_SWAPF (_inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, operand_3071->mInstructionLocation, GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_save_IPICregisterDescription COMMA_HERE)) ;
    GGS_uint  var_cas_finalBank ;
    var_cas_finalBank = var_cas_ioCurrentBank ;
    ::routine_handleMidrangeInstructionList (_inLexique,  operand_3071->mInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_finalBank,  GGS_bool (true, false),  var_cas_ioContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (136)) ;
    if (((var_cas_ioContinuesInSequence)._operator_not ()).isBuiltAndTrue ()) {
      operand_3071->mEndOfSaveBankInstruction.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "useless saving: execution does reach the end of \"savebank\" instruction list") COMMA_SOURCE_FILE_AT_LINE (152)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, operand_3071->mInstructionLocation, GGS_midrange_instruction_FD_base_code::constructor_SWAPF (_inLexique COMMA_HERE), var_cas_save_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, operand_3071->mInstructionLocation, GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_banksel.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_banksel__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_banksel * operand_5720,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5720 != NULL) {
    if ((var_cas_inShouldPreserveBank).isBuiltAndTrue ()) {
      operand_5720->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "cannot use \"banksel\" here: bank selection should be preserved (save it in \"banksave\" construct)") COMMA_SOURCE_FILE_AT_LINE (185)) ;
    }
    GGS_registerExpression  var_cas_STATUS_register ;
    var_cas_STATUS_register = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "STATUS"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_STATUS_IPICregisterDescription ;
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    const GGS_registerExpression  _temp_6545 = var_cas_STATUS_register ;
    if (_temp_6545._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_6545._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_6545 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_STATUS_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (190)) ;
      }
    }
    GGS_lstring  var_cas_RP ;
    var_cas_RP = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "RP"), operand_5720->mInstructionLocation COMMA_HERE) ;
    GGS_uint  var_cas_rpIndex ;
    GGS_uint  var_cas_sliceSize ;
    const GGS_bitSliceTable  _temp_6783 = var_cas_bitSliceTable ;
    if (_temp_6783._isBuilt ()) {
      _temp_6783 (HERE)->method_searchKey (_inLexique, var_cas_RP, var_cas_rpIndex, var_cas_sliceSize COMMA_SOURCE_FILE_AT_LINE (200)) ;
    }
    if (((var_cas_sliceSize)._operator_isNotEqual (var_cas_inTotalBankCount._substract_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (201)).reader_significantBitCount (_inLexique COMMA_SOURCE_FILE_AT_LINE (201)))).isBuiltAndTrue ()) {
      operand_5720->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, (((GGS_string (true, "internal error: sliceSize == "))._operator_concat (var_cas_sliceSize.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (202))))._operator_concat (GGS_string (true, ", significant bit count == ")))._operator_concat (var_cas_inTotalBankCount._substract_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (202)).reader_significantBitCount (_inLexique COMMA_SOURCE_FILE_AT_LINE (202)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (202))) COMMA_SOURCE_FILE_AT_LINE (203)) ;
    }
    if (((operand_5720->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (205)))._operator_isEqual (var_cas_ioCurrentBank)).isBuiltAndTrue ()) {
      operand_5720->mBankIndex.reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, ((GGS_string (true, "useless instruction: the bank "))._operator_concat (var_cas_ioCurrentBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (206))))._operator_concat (GGS_string (true, " is already selected")) COMMA_SOURCE_FILE_AT_LINE (206)) ;
    }else if (((operand_5720->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (207)))._operator_supOrEqual (var_cas_inTotalBankCount)).isBuiltAndTrue ()) {
      operand_5720->mBankIndex.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the bank "))._operator_concat (operand_5720->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (208)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (208))))._operator_concat (GGS_string (true, " does not exist (the device has ")))._operator_concat (var_cas_inTotalBankCount.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (208))))._operator_concat (GGS_string (true, " bank(s))")) COMMA_SOURCE_FILE_AT_LINE (209)) ;
    }else if (((var_cas_ioCurrentBank)._operator_isEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE))).isBuiltAndTrue ()) {
      GGS_uint  var_cas_n ;
      var_cas_n = var_cas_inTotalBankCount._substract_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (210)).reader_significantBitCount (_inLexique COMMA_SOURCE_FILE_AT_LINE (210)) ;
      GGS_uint  var_cas_shiftedBank ;
      var_cas_shiftedBank = operand_5720->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (211)) ;
      GGS_uint  var_cas_index ;
      var_cas_index = GGS_uint (true, 0U) ;
      GGS_uint _variant_8131 = var_cas_sliceSize ;
      GGS_bool _condition_8131 (_variant_8131._isBuilt (), true) ;
      while (_condition_8131.isBuiltAndTrue ()) {
        _condition_8131 = (var_cas_index)._operator_strictInf (var_cas_sliceSize) ;
        if (_condition_8131.isBuiltAndTrue ()) {
          if (_variant_8131.uintValue () == 0) {
            _inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (228)) ;
            _condition_8131 = GGS_bool (true, false) ;
          }else{
            _variant_8131._decrement_operation (_inLexique COMMA_HERE) ;
            GGS_midrange_bit_oriented_op var_cas_op ;
            if ((((var_cas_shiftedBank)._operator_and (GGS_uint (true, 1U)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
              var_cas_op = GGS_midrange_bit_oriented_op::constructor_BCF (_inLexique COMMA_HERE) ;
            }else{
              var_cas_op = GGS_midrange_bit_oriented_op::constructor_BSF (_inLexique COMMA_HERE) ;
            }
            var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FB ::constructor_new (_inLexique, operand_5720->mInstructionLocation, var_cas_op, var_cas_STATUS_IPICregisterDescription, var_cas_rpIndex._add_operation (_inLexique, var_cas_index COMMA_SOURCE_FILE_AT_LINE (224)) COMMA_HERE)) ;
            var_cas_index._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (226)) ;
            var_cas_shiftedBank = var_cas_shiftedBank._right_shift_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (227)) ;
          }
        }
      }
      var_cas_ioCurrentBank = operand_5720->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (229)) ;
    }else{
      GGS_bool var_cas_optimize ;
      var_cas_optimize = GGS_bool (true, _inLexique.boolOptionValueFromKeys ("piccolo_options", "performOptimizations" COMMA_SOURCE_FILE_AT_LINE (231))) ;
      GGS_uint  var_cas_shiftedBank ;
      var_cas_shiftedBank = operand_5720->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (232)) ;
      GGS_uint  var_cas_shiftedXorBank ;
      var_cas_shiftedXorBank = (operand_5720->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (233)))._operator_xor (var_cas_ioCurrentBank) ;
      GGS_uint  var_cas_index ;
      var_cas_index = GGS_uint (true, 0U) ;
      GGS_uint _variant_9279 = var_cas_sliceSize ;
      GGS_bool _condition_9279 (_variant_9279._isBuilt (), true) ;
      while (_condition_9279.isBuiltAndTrue ()) {
        _condition_9279 = (var_cas_index)._operator_strictInf (var_cas_sliceSize) ;
        if (_condition_9279.isBuiltAndTrue ()) {
          if (_variant_9279.uintValue () == 0) {
            _inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (257)) ;
            _condition_9279 = GGS_bool (true, false) ;
          }else{
            _variant_9279._decrement_operation (_inLexique COMMA_HERE) ;
            GGS_midrange_bit_oriented_op var_cas_op ;
            if ((((var_cas_shiftedBank)._operator_and (GGS_uint (true, 1U)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
              var_cas_op = GGS_midrange_bit_oriented_op::constructor_BCF (_inLexique COMMA_HERE) ;
            }else{
              var_cas_op = GGS_midrange_bit_oriented_op::constructor_BSF (_inLexique COMMA_HERE) ;
            }
            if (((((var_cas_shiftedXorBank)._operator_and (GGS_uint (true, 1U)))._operator_isNotEqual (GGS_uint (true, 0U)))._operator_or ((var_cas_optimize)._operator_not ())).isBuiltAndTrue ()) {
              var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FB ::constructor_new (_inLexique, operand_5720->mInstructionLocation, var_cas_op, var_cas_STATUS_IPICregisterDescription, var_cas_rpIndex._add_operation (_inLexique, var_cas_index COMMA_SOURCE_FILE_AT_LINE (247)) COMMA_HERE)) ;
            }else{
              var_cas_ioListFileContents.writeString ("  line ") ;
              var_cas_ioListFileContents._dotAssign_operation (var_cas_ioGeneratedInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (250)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (250))) ;
              var_cas_ioListFileContents.writeString (": useless '") ;
              var_cas_ioListFileContents._dotAssign_operation (var_cas_op.reader_mnemonic (_inLexique COMMA_SOURCE_FILE_AT_LINE (251))) ;
              var_cas_ioListFileContents.writeString (" STATUS, ") ;
              var_cas_ioListFileContents._dotAssign_operation (var_cas_rpIndex._add_operation (_inLexique, var_cas_index COMMA_SOURCE_FILE_AT_LINE (252)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (252))) ;
              var_cas_ioListFileContents.writeString ("' not generated\n") ;
            }
            var_cas_index._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (254)) ;
            var_cas_shiftedBank = var_cas_shiftedBank._right_shift_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (255)) ;
            var_cas_shiftedXorBank = var_cas_shiftedXorBank._right_shift_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (256)) ;
          }
        }
      }
      var_cas_ioCurrentBank = operand_5720->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (258)) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_FD.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_FD__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_FD * operand_9485,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9485 != NULL) {
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_2 ;
    const GGS_registerExpression  _temp_10004 = operand_9485->mRegisterExpression ;
    if (_temp_10004._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_10004._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_10004 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_2 COMMA_SOURCE_FILE_AT_LINE (278)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, operand_9485->mInstructionLocation, operand_9485->mInstruction_FD_base_code, var_cas_IPICregisterDescription, operand_9485->m_W_isDestination COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_F.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_F__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_F * operand_10437,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10437 != NULL) {
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_3 ;
    const GGS_registerExpression  _temp_10956 = operand_10437->mRegisterExpression ;
    if (_temp_10956._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_10956._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_10956 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_3 COMMA_SOURCE_FILE_AT_LINE (309)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, operand_10437->mInstructionLocation, operand_10437->mFAinstruction, var_cas_IPICregisterDescription COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_FB.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_FB__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_FB * operand_11355,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11355 != NULL) {
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    const GGS_registerExpression  _temp_11907 = operand_11355->mRegisterExpression ;
    if (_temp_11907._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_11907._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_11907 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (340)) ;
      }
    }
    GGS_uint  var_cas_bitNumber ;
    const GGS_bitNumberExpression  _temp_12070 = operand_11355->mBitNumber ;
    if (_temp_12070._isBuilt ()) {
      typeCategoryMethod__bitNumberExpression__getBitNumber _method = findCategoryMethod__bitNumberExpression__getBitNumber (_temp_12070._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_12070 (HERE), var_cas_bitSliceTable, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (348)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FB ::constructor_new (_inLexique, operand_11355->mInstructionLocation, operand_11355->mBitOrientedOp, var_cas_IPICregisterDescription, var_cas_bitNumber COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_JSR.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_JSR__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_JSR * operand_12422,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12422 != NULL) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  var_cas_returnedBank ;
    GGS_bool var_cas_preservesBank ;
    const GGS_routineMap  _temp_12981 = var_cas_inRoutineMap ;
    if (_temp_12981._isBuilt ()) {
      _temp_12981 (HERE)->method_searchKey (_inLexique, operand_12422->mTargetLabel, var_cas_isNoReturn, var_cas_requiredBank, var_cas_returnedBank, var_cas_preservesBank COMMA_SOURCE_FILE_AT_LINE (380)) ;
    }
    if ((((var_cas_requiredBank)._operator_isNotEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE)))._operator_and ((var_cas_requiredBank)._operator_isNotEqual (var_cas_ioCurrentBank))).isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage ;
      var_cas_errorMessage = (((GGS_string (true, "the routine '"))._operator_concat (operand_12422->mTargetLabel))._operator_concat (GGS_string (true, "' requires bank selection to be set to ")))._operator_concat (var_cas_requiredBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (382))) ;
      var_cas_errorMessage.writeString (", but bank selection ") ;
      if (((var_cas_ioCurrentBank)._operator_isEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE))).isBuiltAndTrue ()) {
        var_cas_errorMessage.writeString ("does contain any reliable value") ;
      }else{
        var_cas_errorMessage.writeString ("is set to ") ;
        var_cas_errorMessage._dotAssign_operation (var_cas_ioCurrentBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (387))) ;
      }
      operand_12422->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (390)) ;
    }
    if ((var_cas_isNoReturn).isBuiltAndTrue ()) {
      operand_12422->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a \"noreturn\" routine should be called with a GOTO or JUMP instruction") COMMA_SOURCE_FILE_AT_LINE (393)) ;
    }
    if (((var_cas_preservesBank)._operator_not ()).isBuiltAndTrue ()) {
      var_cas_ioCurrentBank = var_cas_returnedBank ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_JSR ::constructor_new (_inLexique, operand_12422->mInstructionLocation, operand_12422->mTargetLabel, GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_CALL.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_CALL__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_CALL * operand_14081,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_14081 != NULL) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  var_cas_returnedBank ;
    GGS_bool var_cas_preservesBank ;
    const GGS_routineMap  _temp_14640 = var_cas_inRoutineMap ;
    if (_temp_14640._isBuilt ()) {
      _temp_14640 (HERE)->method_searchKey (_inLexique, operand_14081->mTargetLabel, var_cas_isNoReturn, var_cas_requiredBank, var_cas_returnedBank, var_cas_preservesBank COMMA_SOURCE_FILE_AT_LINE (426)) ;
    }
    if ((((var_cas_requiredBank)._operator_isNotEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE)))._operator_and ((var_cas_requiredBank)._operator_isNotEqual (var_cas_ioCurrentBank))).isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage ;
      var_cas_errorMessage = (((GGS_string (true, "the routine '"))._operator_concat (operand_14081->mTargetLabel))._operator_concat (GGS_string (true, "' requires bank selection to be set to ")))._operator_concat (var_cas_requiredBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (428))) ;
      var_cas_errorMessage.writeString (", but bank selection ") ;
      if (((var_cas_ioCurrentBank)._operator_isEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE))).isBuiltAndTrue ()) {
        var_cas_errorMessage.writeString ("does contain any reliable value") ;
      }else{
        var_cas_errorMessage.writeString ("is set to ") ;
        var_cas_errorMessage._dotAssign_operation (var_cas_ioCurrentBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (433))) ;
      }
      operand_14081->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (436)) ;
    }
    if ((var_cas_isNoReturn).isBuiltAndTrue ()) {
      operand_14081->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a \"noreturn\" routine should be called with a GOTO or JUMP instruction") COMMA_SOURCE_FILE_AT_LINE (439)) ;
    }
    if (((var_cas_preservesBank)._operator_not ()).isBuiltAndTrue ()) {
      var_cas_ioCurrentBank = var_cas_returnedBank ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_CALL ::constructor_new (_inLexique, operand_14081->mInstructionLocation, operand_14081->mTargetLabel COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_JUMP.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_JUMP__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_JUMP * operand_15661,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_15661 != NULL) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  automatic_var_4 ;
    GGS_bool automatic_var_5 ;
    const GGS_routineMap  _temp_16166 = var_cas_inRoutineMap ;
    if (_temp_16166._isBuilt ()) {
      _temp_16166 (HERE)->method_searchKey (_inLexique, operand_15661->mTargetLabel, var_cas_isNoReturn, var_cas_requiredBank, automatic_var_4, automatic_var_5 COMMA_SOURCE_FILE_AT_LINE (468)) ;
    }
    if ((((var_cas_requiredBank)._operator_isNotEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE)))._operator_and ((var_cas_requiredBank)._operator_isNotEqual (var_cas_ioCurrentBank))).isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage ;
      var_cas_errorMessage = (((GGS_string (true, "the routine '"))._operator_concat (operand_15661->mTargetLabel))._operator_concat (GGS_string (true, "' requires bank selection to be set to ")))._operator_concat (var_cas_requiredBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (470))) ;
      var_cas_errorMessage.writeString (", but bank selection ") ;
      if (((var_cas_ioCurrentBank)._operator_isEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE))).isBuiltAndTrue ()) {
        var_cas_errorMessage.writeString ("does contain any reliable value") ;
      }else{
        var_cas_errorMessage.writeString ("is set to ") ;
        var_cas_errorMessage._dotAssign_operation (var_cas_ioCurrentBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (475))) ;
      }
      operand_15661->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (478)) ;
    }
    if (((var_cas_isNoReturn)._operator_not ()).isBuiltAndTrue ()) {
      operand_15661->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a regular routine should be called with a CALL or JSR instruction") COMMA_SOURCE_FILE_AT_LINE (481)) ;
    }
    var_cas_ioContinuesInSequence = GGS_bool (true, false) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_JUMP ::constructor_new (_inLexique, operand_15661->mInstructionLocation, operand_15661->mTargetLabel, GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_GOTO.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_GOTO__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_GOTO * operand_17202,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17202 != NULL) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  automatic_var_6 ;
    GGS_bool automatic_var_7 ;
    const GGS_routineMap  _temp_17707 = var_cas_inRoutineMap ;
    if (_temp_17707._isBuilt ()) {
      _temp_17707 (HERE)->method_searchKey (_inLexique, operand_17202->mTargetLabel, var_cas_isNoReturn, var_cas_requiredBank, automatic_var_6, automatic_var_7 COMMA_SOURCE_FILE_AT_LINE (510)) ;
    }
    if ((((var_cas_requiredBank)._operator_isNotEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE)))._operator_and ((var_cas_requiredBank)._operator_isNotEqual (var_cas_ioCurrentBank))).isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage ;
      var_cas_errorMessage = (((GGS_string (true, "the routine '"))._operator_concat (operand_17202->mTargetLabel))._operator_concat (GGS_string (true, "' requires bank selection to be set to ")))._operator_concat (var_cas_requiredBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (512))) ;
      var_cas_errorMessage.writeString (", but bank selection ") ;
      if (((var_cas_ioCurrentBank)._operator_isEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE))).isBuiltAndTrue ()) {
        var_cas_errorMessage.writeString ("does contain any reliable value") ;
      }else{
        var_cas_errorMessage.writeString ("is set to ") ;
        var_cas_errorMessage._dotAssign_operation (var_cas_ioCurrentBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (517))) ;
      }
      operand_17202->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (520)) ;
    }
    if (((var_cas_isNoReturn)._operator_not ()).isBuiltAndTrue ()) {
      operand_17202->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a regular routine should be called with a CALL or JSR instruction") COMMA_SOURCE_FILE_AT_LINE (523)) ;
    }
    var_cas_ioContinuesInSequence = GGS_bool (true, false) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (_inLexique, operand_17202->mInstructionLocation, operand_17202->mTargetLabel COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_CLRWDT.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_CLRWDT__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_CLRWDT * operand_18665,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18665 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_CLRWDT ::constructor_new (_inLexique, operand_18665->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_CLRW.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_CLRW__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_CLRW * operand_19351,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19351 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_CLRW ::constructor_new (_inLexique, operand_19351->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_NOP.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_NOP__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_NOP * operand_20034,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20034 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_NOP ::constructor_new (_inLexique, operand_20034->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_SLEEP.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_SLEEP__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_SLEEP * operand_20718,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20718 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_SLEEP ::constructor_new (_inLexique, operand_20718->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_literalOperation.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_literalOperation__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_literalOperation * operand_21415,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21415 != NULL) {
    GGS_sint  var_cas_result ;
    const GGS_immediatExpression  _temp_21877 = operand_21415->mImmediatExpression ;
    if (_temp_21877._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_21877._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_21877 (HERE), var_cas_inRegisterTable, var_cas_inConstantMap, var_cas_result COMMA_SOURCE_FILE_AT_LINE (627)) ;
      }
    }
    if ((((var_cas_result)._operator_strictSup (GGS_sint (true, 255L)))._operator_or ((var_cas_result)._operator_strictInf (GGS_sint (true, 128L)._operator_unary_minus (_inLexique COMMA_HERE)))).isBuiltAndTrue ()) {
      operand_21415->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "immediate value is evaluated as "))._operator_concat (var_cas_result.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (630))))._operator_concat (GGS_string (true, " (should be betwween -128 and 255)")) COMMA_SOURCE_FILE_AT_LINE (631)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_literalOperation ::constructor_new (_inLexique, operand_21415->mInstructionLocation, operand_21415->mLiteralInstruction, (var_cas_result)._operator_and (GGS_sint (true, 255L)).reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (636)) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_MNOP.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_MNOP__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_MNOP * operand_24550,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24550 != NULL) {
    if (((operand_24550->mOccurrenceFactor.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (705)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
      operand_24550->mOccurrenceFactor.reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "occurrence argument is zero: no generated code") COMMA_SOURCE_FILE_AT_LINE (706)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_MNOP ::constructor_new (_inLexique, operand_24550->mInstructionLocation, operand_24550->mOccurrenceFactor COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_FOREVER.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_FOREVER__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_FOREVER * operand_30405,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_30405 != NULL) {
    switch (var_cas_inRoutineKind.enumValue ()) {
    case GGS_routineKind::enum_regularRoutine:
      {
      operand_30405->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a regular routine does not accept the \"forever\" instruction") COMMA_SOURCE_FILE_AT_LINE (851)) ;
      }
      break ;
    case GGS_routineKind::enum_noReturnRoutine:
      {
      }
      break ;
    case GGS_routineKind::enum_interruptRoutine:
      {
      operand_30405->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "an interrupt routine does not accept the \"forever\" instruction") COMMA_SOURCE_FILE_AT_LINE (854)) ;
      }
      break ;
    case GGS_routineKind::kNotBuilt:
      break ;
    }
    GGS_uint  var_cas_finalBank ;
    var_cas_finalBank = var_cas_ioCurrentBank ;
    GGS_string var_cas_label0 ;
    var_cas_label0 = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (857))) ;
    var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (858)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, operand_30405->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    ::routine_handleMidrangeInstructionList (_inLexique,  operand_30405->mInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_finalBank,  var_cas_inShouldPreserveBank,  var_cas_ioContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (860)) ;
    if (((var_cas_ioCurrentBank)._operator_isNotEqual (var_cas_finalBank)).isBuiltAndTrue ()) {
      operand_30405->mEndOfInstructionList.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "instruction list does not leave bank selection unchanged") COMMA_SOURCE_FILE_AT_LINE (876)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (_inLexique, operand_30405->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, operand_30405->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    var_cas_ioContinuesInSequence = GGS_bool (true, false) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_IF_BitTest.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_IF_BitTest__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_IF_BitTest * operand_32188,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_32188 != NULL) {
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    const GGS_registerExpression  _temp_32698 = operand_32188->mRegisterExpression ;
    if (_temp_32698._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_32698._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_32698 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (903)) ;
      }
    }
    GGS_uint  var_cas_bitNumber ;
    const GGS_bitNumberExpression  _temp_32861 = operand_32188->mBitNumber ;
    if (_temp_32861._isBuilt ()) {
      typeCategoryMethod__bitNumberExpression__getBitNumber _method = findCategoryMethod__bitNumberExpression__getBitNumber (_temp_32861._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_32861 (HERE), var_cas_bitSliceTable, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (911)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_BitTestSkip ::constructor_new (_inLexique, operand_32188->mInstructionLocation, operand_32188->mSkipIfSet, var_cas_IPICregisterDescription, var_cas_bitNumber COMMA_HERE)) ;
    GGS_bool var_cas_unusedContinuesInSequence ;
    var_cas_unusedContinuesInSequence = GGS_bool (true, true) ;
    const GGS_midrange_instruction  _temp_33190 = operand_32188->mInstruction ;
    if (_temp_33190._isBuilt ()) {
      typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList _method = findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (_temp_33190._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_33190 (HERE), var_cas_inRoutineMap, var_cas_inRegisterTable, var_cas_inConstantMap, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inShouldPreserveBank, var_cas_unusedContinuesInSequence, var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (923)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_conditionExpression.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition> gDispatchTableFor__midrange_conditionExpression__buildIPICinstructionForCondition ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__midrange_conditionExpression__buildIPICinstructionForCondition.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition
findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__midrange_conditionExpression__buildIPICinstructionForCondition.count ()) {
    result = gDispatchTableFor__midrange_conditionExpression__buildIPICinstructionForCondition (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (superClassPtr) ;
      gDispatchTableFor__midrange_conditionExpression__buildIPICinstructionForCondition.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_conditionExpression.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition> gDispatchTableFor__midrange_conditionExpression__computeInstructionCountForCondition ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__midrange_conditionExpression__computeInstructionCountForCondition.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition
findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__midrange_conditionExpression__computeInstructionCountForCondition.count ()) {
    result = gDispatchTableFor__midrange_conditionExpression__computeInstructionCountForCondition (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (superClassPtr) ;
      gDispatchTableFor__midrange_conditionExpression__computeInstructionCountForCondition.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_incDecRegisterInCondition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_incDecRegisterInCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_midrange_incDecRegisterInCondition * operand_34258,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_uint   var_cas_inCurrentBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_34258 != NULL) {
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_8 ;
    const GGS_registerExpression  _temp_34682 = operand_34258->mRegisterExpression ;
    if (_temp_34682._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_34682._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_34682 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_8 COMMA_SOURCE_FILE_AT_LINE (973)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_incDecRegisterInCondition ::constructor_new (_inLexique, var_cas_inInstructionLocation, var_cas_IPICregisterDescription, var_cas_inTargetLabel, operand_34258->mIncrement, operand_34258->m_W_isDestination, (operand_34258->mBranchIfZero)._operator_xor (var_cas_inComplementaryBranch) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_incDecRegisterInCondition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_incDecRegisterInCondition__computeInstructionCountForCondition (C_Compiler &,
                                const cPtr_midrange_incDecRegisterInCondition * operand_35191,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_35191 != NULL) {
    if (((operand_35191->mBranchIfZero)._operator_xor (var_cas_inComplementaryBranch)).isBuiltAndTrue ()) {
      var_cas_outInstructionCount = GGS_uint (true, 3U) ;
    }else{
      var_cas_outInstructionCount = GGS_uint (true, 2U) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_negateCondition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_negateCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_midrange_negateCondition * operand_35527,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_uint   var_cas_inCurrentBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_35527 != NULL) {
    const GGS_midrange_conditionExpression  _temp_35877 = operand_35527->mCondition ;
    if (_temp_35877._isBuilt ()) {
      typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_35877._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_35877 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, (var_cas_inComplementaryBranch)._operator_not (), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1017)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_negateCondition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_negateCondition__computeInstructionCountForCondition (C_Compiler & _inLexique,
                                const cPtr_midrange_negateCondition * operand_36252,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_36252 != NULL) {
    const GGS_midrange_conditionExpression  _temp_36365 = operand_36252->mCondition ;
    if (_temp_36365._isBuilt ()) {
      typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (_temp_36365._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_36365 (HERE), (var_cas_inComplementaryBranch)._operator_not (), var_cas_outInstructionCount COMMA_SOURCE_FILE_AT_LINE (1036)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_andCondition.buildIPICinstructionForCondition'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_andCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_midrange_andCondition * operand_36569,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_uint   var_cas_inCurrentBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_36569 != NULL) {
    if ((var_cas_inComplementaryBranch).isBuiltAndTrue ()) {
      const GGS_midrange_conditionExpression  _temp_36958 = operand_36569->mLeftExpression ;
      if (_temp_36958._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_36958._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_36958 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1056)) ;
        }
      }
      const GGS_midrange_conditionExpression  _temp_37239 = operand_36569->mRightExpression ;
      if (_temp_37239._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_37239._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_37239 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1067)) ;
        }
      }
    }else{
      GGS_string var_cas_label0 ;
      var_cas_label0 = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1079))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1079)) ;
      const GGS_midrange_conditionExpression  _temp_37612 = operand_36569->mLeftExpression ;
      if (_temp_37612._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_37612._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_37612 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), var_cas_inInstructionLocation, var_cas_label0, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1080)) ;
        }
      }
      const GGS_midrange_conditionExpression  _temp_37886 = operand_36569->mRightExpression ;
      if (_temp_37886._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_37886._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_37886 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, false), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1091)) ;
        }
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, var_cas_inInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_andCondition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_andCondition__computeInstructionCountForCondition (C_Compiler & _inLexique,
                                const cPtr_midrange_andCondition * operand_38387,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_38387 != NULL) {
    GGS_uint  var_cas_countLeft ;
    const GGS_midrange_conditionExpression  _temp_38525 = operand_38387->mLeftExpression ;
    if (_temp_38525._isBuilt ()) {
      typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (_temp_38525._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_38525 (HERE), var_cas_inComplementaryBranch, var_cas_countLeft COMMA_SOURCE_FILE_AT_LINE (1113)) ;
      }
    }
    GGS_uint  var_cas_countRight ;
    const GGS_midrange_conditionExpression  _temp_38649 = operand_38387->mLeftExpression ;
    if (_temp_38649._isBuilt ()) {
      typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (_temp_38649._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_38649 (HERE), var_cas_inComplementaryBranch, var_cas_countRight COMMA_SOURCE_FILE_AT_LINE (1118)) ;
      }
    }
    var_cas_outInstructionCount = var_cas_countLeft._add_operation (_inLexique, var_cas_countRight COMMA_SOURCE_FILE_AT_LINE (1122)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_bitTest_in_structured_if_condition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_bitTest_in_structured_if_condition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_midrange_bitTest_in_structured_if_condition * operand_38912,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_uint   var_cas_inCurrentBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_38912 != NULL) {
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    const GGS_registerExpression  _temp_39369 = operand_38912->mRegisterExpression ;
    if (_temp_39369._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_39369._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_39369 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (1140)) ;
      }
    }
    GGS_uint  var_cas_bitNumber ;
    const GGS_bitNumberExpression  _temp_39532 = operand_38912->mBitNumber ;
    if (_temp_39532._isBuilt ()) {
      typeCategoryMethod__bitNumberExpression__getBitNumber _method = findCategoryMethod__bitNumberExpression__getBitNumber (_temp_39532._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_39532 (HERE), var_cas_bitSliceTable, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (1148)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_BitTestSkip ::constructor_new (_inLexique, var_cas_inInstructionLocation, (operand_38912->mBTFSSinstruction)._operator_xor (var_cas_inComplementaryBranch), var_cas_IPICregisterDescription, var_cas_bitNumber COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_JUMP ::constructor_new (_inLexique, var_cas_inInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_inTargetLabel, var_cas_inInstructionLocation COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_bitTest_in_structured_if_condition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_bitTest_in_structured_if_condition__computeInstructionCountForCondition (C_Compiler &,
                                const cPtr_midrange_bitTest_in_structured_if_condition * operand_40174,
                                const GGS_bool  /* var_cas_inComplementaryBranch */,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_40174 != NULL) {
    var_cas_outInstructionCount = GGS_uint (true, 2U) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_structured_if.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_structured_if__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_structured_if * operand_40431,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_40431 != NULL) {
    GGS_bool var_cas_generateComplementaryCondition ;
    var_cas_generateComplementaryCondition = GGS_bool (true, false) ;
    if ((GGS_bool (true, _inLexique.boolOptionValueFromKeys ("piccolo_options", "performOptimizations" COMMA_SOURCE_FILE_AT_LINE (1193)))).isBuiltAndTrue ()) {
      GGS_uint  var_cas_directCount ;
      const GGS_midrange_conditionExpression  _temp_41009 = operand_40431->mIfCondition ;
      if (_temp_41009._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (_temp_41009._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_41009 (HERE), GGS_bool (true, true), var_cas_directCount COMMA_SOURCE_FILE_AT_LINE (1194)) ;
        }
      }
      if (((operand_40431->mElseInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1195)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_directCount._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1196)) ;
      }
      GGS_uint  var_cas_complementaryCount ;
      const GGS_midrange_conditionExpression  _temp_41194 = operand_40431->mIfCondition ;
      if (_temp_41194._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (_temp_41194._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_41194 (HERE), GGS_bool (true, false), var_cas_complementaryCount COMMA_SOURCE_FILE_AT_LINE (1198)) ;
        }
      }
      if (((operand_40431->mThenInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1199)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_complementaryCount._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1200)) ;
      }
      if (((var_cas_complementaryCount)._operator_strictInf (var_cas_directCount)).isBuiltAndTrue ()) {
        var_cas_generateComplementaryCondition = GGS_bool (true, true) ;
        var_cas_ioListFileContents.writeString ("  line ") ;
        var_cas_ioListFileContents._dotAssign_operation (var_cas_ioGeneratedInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1204)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1204))) ;
        var_cas_ioListFileContents.writeString (": generates complementary test (saves ") ;
        var_cas_ioListFileContents._dotAssign_operation (var_cas_directCount._substract_operation (_inLexique, var_cas_complementaryCount COMMA_SOURCE_FILE_AT_LINE (1205)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1205))) ;
        var_cas_ioListFileContents.writeString (" instruction") ;
        if (((var_cas_directCount._substract_operation (_inLexique, var_cas_complementaryCount COMMA_SOURCE_FILE_AT_LINE (1206)))._operator_strictSup (GGS_uint (true, 1U))).isBuiltAndTrue ()) {
          var_cas_ioListFileContents.writeString ("s") ;
        }
        var_cas_ioListFileContents.writeString (")\n") ;
      }
    }
    GGS_uint  var_cas_elseBranchFinalBank ;
    var_cas_elseBranchFinalBank = var_cas_ioCurrentBank ;
    GGS_uint  var_cas_thenBranchFinalBank ;
    var_cas_thenBranchFinalBank = var_cas_ioCurrentBank ;
    GGS_bool var_cas_elseContinuesInSequence ;
    GGS_bool var_cas_thenContinuesInSequence ;
    if ((var_cas_generateComplementaryCondition).isBuiltAndTrue ()) {
      GGS_string var_cas_label_nextCondition ;
      var_cas_label_nextCondition = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1218))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1218)) ;
      GGS_string var_cas_label_endOfIfinstruction ;
      var_cas_label_endOfIfinstruction = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1219))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1219)) ;
      const GGS_midrange_conditionExpression  _temp_42259 = operand_40431->mIfCondition ;
      if (_temp_42259._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_42259._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_42259 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, false), operand_40431->mInstructionLocation, var_cas_label_nextCondition, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1221)) ;
        }
      }
      ::routine_handleMidrangeInstructionList (_inLexique,  operand_40431->mElseInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_elseBranchFinalBank,  var_cas_inShouldPreserveBank,  var_cas_elseContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1233)) ;
      if (((operand_40431->mThenInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1248)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (_inLexique, operand_40431->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_40431->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_nextCondition, operand_40431->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      ::routine_handleMidrangeInstructionList (_inLexique,  operand_40431->mThenInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_thenBranchFinalBank,  var_cas_inShouldPreserveBank,  var_cas_thenContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1252)) ;
      if (((operand_40431->mThenInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1266)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_40431->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      }
    }else{
      GGS_string var_cas_label_nextCondition ;
      var_cas_label_nextCondition = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1271))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1271)) ;
      GGS_string var_cas_label_endOfIfinstruction ;
      var_cas_label_endOfIfinstruction = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1272))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1272)) ;
      const GGS_midrange_conditionExpression  _temp_44082 = operand_40431->mIfCondition ;
      if (_temp_44082._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_44082._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_44082 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), operand_40431->mInstructionLocation, var_cas_label_nextCondition, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1274)) ;
        }
      }
      ::routine_handleMidrangeInstructionList (_inLexique,  operand_40431->mThenInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_thenBranchFinalBank,  var_cas_inShouldPreserveBank,  var_cas_thenContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1286)) ;
      if (((operand_40431->mElseInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1301)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (_inLexique, operand_40431->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_40431->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_nextCondition, operand_40431->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      ::routine_handleMidrangeInstructionList (_inLexique,  operand_40431->mElseInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_elseBranchFinalBank,  var_cas_inShouldPreserveBank,  var_cas_elseContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1305)) ;
      if (((operand_40431->mElseInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1319)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_40431->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      }
    }
    if (((var_cas_elseBranchFinalBank)._operator_isEqual (var_cas_thenBranchFinalBank)).isBuiltAndTrue ()) {
      var_cas_ioCurrentBank = var_cas_elseBranchFinalBank ;
    }else{
      operand_40431->mEndOfElsePartLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "This branch does not leave bank selection value as the first one does") COMMA_SOURCE_FILE_AT_LINE (1327)) ;
      var_cas_elseBranchFinalBank = GGS_uint ::constructor_max (_inLexique COMMA_HERE) ;
    }
    var_cas_ioContinuesInSequence = (var_cas_thenContinuesInSequence)._operator_or (var_cas_elseContinuesInSequence) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_do_while.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_do_while__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_do_while * operand_46156,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_46156 != NULL) {
    GGS_string var_cas_labelInstructionBegin ;
    var_cas_labelInstructionBegin = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1349))) ;
    var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1349)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_labelInstructionBegin, operand_46156->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    GGS_uint  var_cas_finalBank ;
    var_cas_finalBank = var_cas_ioCurrentBank ;
    ::routine_handleMidrangeInstructionList (_inLexique,  operand_46156->mRepeatedInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_finalBank,  var_cas_inShouldPreserveBank,  var_cas_ioContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1354)) ;
    if (((var_cas_ioCurrentBank)._operator_isNotEqual (var_cas_finalBank)).isBuiltAndTrue ()) {
      operand_46156->mEndOfRepeatedInstructionList.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "This branch does not leave bank selection value unchanged") COMMA_SOURCE_FILE_AT_LINE (1370)) ;
    }
    {
      GGS_midrange_partList::cEnumerator enumerator_47359 (operand_46156->mWhilePartList, true) ;
      const GGS_midrange_partList::cElement * operand_47359 = NULL ;
      while (((operand_47359 = enumerator_47359.nextObject ()))) {
        macroValidPointer (operand_47359) ;
        if (((operand_47359->mInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1373)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
          const GGS_midrange_conditionExpression  _temp_47456 = operand_47359->mCondition ;
          if (_temp_47456._isBuilt ()) {
            typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_47456._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_47456 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, false), operand_46156->mInstructionLocation, var_cas_labelInstructionBegin, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1374)) ;
            }
          }
        }else{
          GGS_string var_cas_nextBranchLabel ;
          var_cas_nextBranchLabel = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1386))) ;
          var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1386)) ;
          const GGS_midrange_conditionExpression  _temp_47867 = operand_47359->mCondition ;
          if (_temp_47867._isBuilt ()) {
            typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_47867._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_47867 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), operand_46156->mInstructionLocation, var_cas_nextBranchLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1387)) ;
            }
          }
          GGS_uint  var_cas_bank ;
          var_cas_bank = var_cas_ioCurrentBank ;
          ::routine_handleMidrangeInstructionList (_inLexique,  operand_47359->mInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_bank,  var_cas_inShouldPreserveBank,  var_cas_ioContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1399)) ;
          if (((var_cas_ioCurrentBank)._operator_isNotEqual (var_cas_bank)).isBuiltAndTrue ()) {
            operand_47359->mEndOfPartLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "This branch does not leave bank selection value unchanged") COMMA_SOURCE_FILE_AT_LINE (1415)) ;
          }
          var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (_inLexique, operand_46156->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_labelInstructionBegin, operand_46156->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
          var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_nextBranchLabel, operand_46156->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_IF_IncDec.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_IF_IncDec__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_IF_IncDec * operand_49113,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_49113 != NULL) {
    GGS_midrange_instruction_FD_base_code var_cas_baseCode ;
    if ((operand_49113->mIncrement).isBuiltAndTrue ()) {
      var_cas_baseCode = GGS_midrange_instruction_FD_base_code::constructor_INCFSZ (_inLexique COMMA_HERE) ;
    }else{
      var_cas_baseCode = GGS_midrange_instruction_FD_base_code::constructor_DECFSZ (_inLexique COMMA_HERE) ;
    }
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_9 ;
    const GGS_registerExpression  _temp_49811 = operand_49113->mRegisterExpression ;
    if (_temp_49811._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_49811._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_49811 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_9 COMMA_SOURCE_FILE_AT_LINE (1446)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, operand_49113->mInstructionLocation, var_cas_baseCode, var_cas_IPICregisterDescription, operand_49113->m_W_isDestination COMMA_HERE)) ;
    GGS_bool var_cas_unusedContinuesInSequence ;
    var_cas_unusedContinuesInSequence = GGS_bool (true, true) ;
    const GGS_midrange_instruction  _temp_50187 = operand_49113->mInstruction ;
    if (_temp_50187._isBuilt ()) {
      typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList _method = findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (_temp_50187._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_50187 (HERE), var_cas_inRoutineMap, var_cas_inRegisterTable, var_cas_inConstantMap, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inShouldPreserveBank, var_cas_unusedContinuesInSequence, var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1462)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of routine "build_midrange_assembly_instruction_list"    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_midrange_assembly_instruction_list (C_Compiler & _inLexique,
                                const GGS_uint   var_cas_inTotalPageCount,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_midrange_model  var_cas_inPiccoloModel,
                                const GGS_bool  var_cas_inHasInterrupt,
                                GGS_midrange_ipic_instructionList  & var_cas_outGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_midrange_assembly_instruction_list at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_generationOptimizationMessages ;
  var_cas_generationOptimizationMessages = GGS_string (true, "") ;
  GGS_routineMap  var_cas_routineMap ;
  var_cas_routineMap = GGS_routineMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  {
    GGS_midrange_routineDefinitionList::cEnumerator enumerator_50966 (var_cas_inPiccoloModel.reader_mRoutineDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1491)), true) ;
    const GGS_midrange_routineDefinitionList::cElement * operand_50966 = NULL ;
    while (((operand_50966 = enumerator_50966.nextObject ()))) {
      macroValidPointer (operand_50966) ;
      if ((((operand_50966->mRequiredBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1492)))._operator_isNotEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE)))._operator_and ((operand_50966->mRequiredBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1492)))._operator_strictSup (GGS_uint (true, 15U)))).isBuiltAndTrue ()) {
        operand_50966->mRequiredBank.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the required bank value should be lower or equal to 15") COMMA_SOURCE_FILE_AT_LINE (1494)) ;
      }
      if ((((operand_50966->mReturnedBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1495)))._operator_isNotEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE)))._operator_and ((operand_50966->mReturnedBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1495)))._operator_strictSup (GGS_uint (true, 15U)))).isBuiltAndTrue ()) {
        operand_50966->mReturnedBank.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the returned bank value should be lower or equal to 15") COMMA_SOURCE_FILE_AT_LINE (1497)) ;
      }
      var_cas_routineMap.modifier_insertKey (_inLexique, operand_50966->mRoutineName, operand_50966->mIsNoReturn, operand_50966->mRequiredBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1498)), operand_50966->mReturnedBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1498)), operand_50966->mPreservesBank COMMA_SOURCE_FILE_AT_LINE (1498)) ;
    }
  }
  GGS_constantMap  var_cas_constantMap ;
  var_cas_constantMap = GGS_constantMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  {
    GGS_constantDefinitionList::cEnumerator enumerator_51601 (var_cas_inPiccoloModel.reader_mConstantDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1502)), true) ;
    const GGS_constantDefinitionList::cElement * operand_51601 = NULL ;
    while (((operand_51601 = enumerator_51601.nextObject ()))) {
      macroValidPointer (operand_51601) ;
      GGS_sint  var_cas_result ;
      const GGS_immediatExpression  _temp_51680 = operand_51601->mExpression ;
      if (_temp_51680._isBuilt ()) {
        typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_51680._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_51680 (HERE), var_cas_inRegisterTable, var_cas_constantMap, var_cas_result COMMA_SOURCE_FILE_AT_LINE (1503)) ;
        }
      }
      if ((var_cas_inRegisterTable.reader_hasKey (_inLexique, operand_51601->mConstantName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1504)) COMMA_SOURCE_FILE_AT_LINE (1504))).isBuiltAndTrue ()) {
        operand_51601->mConstantName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "'"))._operator_concat (operand_51601->mConstantName))._operator_concat (GGS_string (true, "' is alreday declared as ram register or special register")) COMMA_SOURCE_FILE_AT_LINE (1506)) ;
      }else{
        var_cas_constantMap.modifier_insertKey (_inLexique, operand_51601->mConstantName, var_cas_result COMMA_SOURCE_FILE_AT_LINE (1507)) ;
      }
    }
  }
  if ((var_cas_routineMap.reader_hasKey (_inLexique, GGS_string (true, "main") COMMA_SOURCE_FILE_AT_LINE (1511))).isBuiltAndTrue ()) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  automatic_var_10 ;
    GGS_bool automatic_var_11 ;
    const GGS_routineMap  _temp_52171 = var_cas_routineMap ;
    if (_temp_52171._isBuilt ()) {
      _temp_52171 (HERE)->method_searchKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "main"), GGS_location (_inLexique) COMMA_HERE), var_cas_isNoReturn, var_cas_requiredBank, automatic_var_10, automatic_var_11 COMMA_SOURCE_FILE_AT_LINE (1514)) ;
    }
    if (((var_cas_isNoReturn)._operator_not ()).isBuiltAndTrue ()) {
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the \"main\" should be declared with \"noreturn\" qualifier: \"noreturn main requiresbank 0\"") COMMA_SOURCE_FILE_AT_LINE (1517)) ;
    }
    if (((var_cas_requiredBank)._operator_isNotEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the \"main\" should be declared with \"requiresbank 0\" qualifier: \"noreturn main requiresbank 0\"") COMMA_SOURCE_FILE_AT_LINE (1520)) ;
    }
  }else{
    var_cas_inPiccoloModel.reader_mEndOfProgram (_inLexique COMMA_SOURCE_FILE_AT_LINE (1522)).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the program should declare the \"main\" routine") COMMA_SOURCE_FILE_AT_LINE (1523)) ;
  }
  var_cas_outGeneratedInstructionList = GGS_midrange_ipic_instructionList ::constructor_emptyList () ;
  GGS_uint  var_cas_localLabelIndex ;
  var_cas_localLabelIndex = GGS_uint (true, 0U) ;
  var_cas_outGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_JUMP ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "main"), GGS_location (_inLexique) COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE) COMMA_HERE)) ;
  if ((var_cas_inHasInterrupt).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_ORG ::constructor_new (_inLexique, GGS_uint (true, 4U) COMMA_HERE)) ;
    {
      GGS_midrange_interruptDefinitionList::cEnumerator enumerator_53243 (var_cas_inPiccoloModel.reader_mInterruptDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1537)), true) ;
      const GGS_midrange_interruptDefinitionList::cElement * operand_53243 = NULL ;
      while (((operand_53243 = enumerator_53243.nextObject ()))) {
        macroValidPointer (operand_53243) ;
        GGS_bool var_cas_continuesInSequence ;
        GGS_uint  var_cas_currentBank ;
        var_cas_currentBank = GGS_uint ::constructor_max (_inLexique COMMA_HERE) ;
        ::routine_handleMidrangeInstructionList (_inLexique,  operand_53243->mInstructionList,  var_cas_routineMap,  var_cas_inRegisterTable,  var_cas_constantMap,  var_cas_localLabelIndex,  var_cas_outGeneratedInstructionList,  var_cas_generationOptimizationMessages,  var_cas_inTotalBankCount,  var_cas_currentBank,  GGS_bool (true, true),  var_cas_continuesInSequence,  GGS_routineKind::constructor_interruptRoutine (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (1540)) ;
        if (((var_cas_continuesInSequence)._operator_not ()).isBuiltAndTrue ()) {
          operand_53243->mEndOfInterruptLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "execution cannot reach the end of the interrupt routine") COMMA_SOURCE_FILE_AT_LINE (1556)) ;
        }
        var_cas_outGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_RETFIE ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE)) ;
      }
    }
  }
  {
    GGS_midrange_routineDefinitionList::cEnumerator enumerator_54160 (var_cas_inPiccoloModel.reader_mRoutineDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1562)), true) ;
    const GGS_midrange_routineDefinitionList::cElement * operand_54160 = NULL ;
    while (((operand_54160 = enumerator_54160.nextObject ()))) {
      macroValidPointer (operand_54160) ;
      if (((operand_54160->mPage.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1563)))._operator_supOrEqual (var_cas_inTotalPageCount)).isBuiltAndTrue ()) {
        operand_54160->mPage.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "invalid value ("))._operator_concat (operand_54160->mPage.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1564)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1564))))._operator_concat (GGS_string (true, "); the device has ")))._operator_concat (var_cas_inTotalPageCount.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1564))))._operator_concat (GGS_string (true, " 2k page(s) on rom")) COMMA_SOURCE_FILE_AT_LINE (1565)) ;
      }
    }
  }
  GGS_uint  var_cas_currentPage ;
  var_cas_currentPage = GGS_uint (true, 0U) ;
  GGS_uint _variant_56370 = var_cas_inTotalPageCount ;
  GGS_bool _condition_56370 (_variant_56370._isBuilt (), true) ;
  while (_condition_56370.isBuiltAndTrue ()) {
    _condition_56370 = (var_cas_currentPage)._operator_strictInf (var_cas_inTotalPageCount) ;
    if (_condition_56370.isBuiltAndTrue ()) {
      if (_variant_56370.uintValue () == 0) {
        _inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (1613)) ;
        _condition_56370 = GGS_bool (true, false) ;
      }else{
        _variant_56370._decrement_operation (_inLexique COMMA_HERE) ;
        GGS_bool var_cas_orgGenerated ;
        var_cas_orgGenerated = (var_cas_currentPage)._operator_isEqual (GGS_uint (true, 0U)) ;
        {
          GGS_midrange_routineDefinitionList::cEnumerator enumerator_54649 (var_cas_inPiccoloModel.reader_mRoutineDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1571)), true) ;
          const GGS_midrange_routineDefinitionList::cElement * operand_54649 = NULL ;
          while (((operand_54649 = enumerator_54649.nextObject ()))) {
            macroValidPointer (operand_54649) ;
            if (((operand_54649->mPage.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1572)))._operator_isEqual (var_cas_currentPage)).isBuiltAndTrue ()) {
              if (((var_cas_orgGenerated)._operator_not ()).isBuiltAndTrue ()) {
                var_cas_outGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_ORG ::constructor_new (_inLexique, var_cas_currentPage._multiply_operation (_inLexique, GGS_uint (true, 2048U) COMMA_SOURCE_FILE_AT_LINE (1574)) COMMA_HERE)) ;
                var_cas_orgGenerated = GGS_bool (true, true) ;
              }
              GGS_bool var_cas_continuesInSequence ;
              GGS_uint  var_cas_currentBank ;
              var_cas_currentBank = operand_54649->mRequiredBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1578)) ;
              GGS_routineKind var_cas_routineKind ;
              if ((operand_54649->mIsNoReturn).isBuiltAndTrue ()) {
                var_cas_routineKind = GGS_routineKind::constructor_noReturnRoutine (_inLexique COMMA_HERE) ;
              }else{
                var_cas_routineKind = GGS_routineKind::constructor_regularRoutine (_inLexique COMMA_HERE) ;
              }
              var_cas_outGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, operand_54649->mRoutineName COMMA_HERE)) ;
              ::routine_handleMidrangeInstructionList (_inLexique,  operand_54649->mInstructionList,  var_cas_routineMap,  var_cas_inRegisterTable,  var_cas_constantMap,  var_cas_localLabelIndex,  var_cas_outGeneratedInstructionList,  var_cas_generationOptimizationMessages,  var_cas_inTotalBankCount,  var_cas_currentBank,  operand_54649->mPreservesBank,  var_cas_continuesInSequence,  var_cas_routineKind COMMA_SOURCE_FILE_AT_LINE (1586)) ;
              if (((((operand_54649->mIsNoReturn)._operator_not ())._operator_and ((operand_54649->mReturnedBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1600)))._operator_isNotEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE))))._operator_and ((var_cas_currentBank)._operator_isNotEqual (operand_54649->mReturnedBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1600))))).isBuiltAndTrue ()) {
                operand_54649->mRoutineName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, (GGS_string (true, "execution will not set bank selection to "))._operator_concat (operand_54649->mReturnedBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1601)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1601))) COMMA_SOURCE_FILE_AT_LINE (1602)) ;
              }
              if (((operand_54649->mIsNoReturn)._operator_and (var_cas_continuesInSequence)).isBuiltAndTrue ()) {
                operand_54649->mRoutineName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "execution should not reach the end of a \"noreturn\" routine") COMMA_SOURCE_FILE_AT_LINE (1605)) ;
              }
              if (((operand_54649->mIsNoReturn)._operator_not ()).isBuiltAndTrue ()) {
                var_cas_outGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_RETURN ::constructor_new (_inLexique, operand_54649->mRoutineName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (1608)) COMMA_HERE)) ;
              }
            }
          }
        }
        var_cas_currentPage._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1612)) ;
      }
    }
  }
  if ((GGS_bool (true, _inLexique.boolOptionValueFromKeys ("piccolo_options", "ouputListingFile" COMMA_SOURCE_FILE_AT_LINE (1702)))).isBuiltAndTrue ()) {
    var_cas_ioListFileContents._dotAssign_operation (GGS_string (true, "").reader_stringByLeftAndRightPadding (_inLexique, GGS_uint (true, 79U), GGS_char (true, '*') COMMA_SOURCE_FILE_AT_LINE (1703))) ;
    var_cas_ioListFileContents.writeString ("\n") ;
    var_cas_ioListFileContents.writeString ("*") ;
    var_cas_ioListFileContents._dotAssign_operation (GGS_string (true, "IPIC INSTRUCTION LIST").reader_stringByLeftAndRightPadding (_inLexique, GGS_uint (true, 77U), GGS_char (true, ' ') COMMA_SOURCE_FILE_AT_LINE (1704))) ;
    var_cas_ioListFileContents.writeString ("*\n") ;
    var_cas_ioListFileContents._dotAssign_operation (GGS_string (true, "").reader_stringByLeftAndRightPadding (_inLexique, GGS_uint (true, 79U), GGS_char (true, '*') COMMA_SOURCE_FILE_AT_LINE (1705))) ;
    var_cas_ioListFileContents.writeString ("\n"
      "\n") ;
    if (((var_cas_generationOptimizationMessages.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1706)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
      var_cas_ioListFileContents.writeString ("Optimizations during generation:\n") ;
      var_cas_ioListFileContents._dotAssign_operation (var_cas_generationOptimizationMessages) ;
      var_cas_ioListFileContents.writeString ("\n") ;
    }
    var_cas_ioListFileContents.writeString ("Generated intermediate code:\n") ;
    GGS_uint  var_cas_index ;
    var_cas_index = GGS_uint (true, 0U) ;
    GGS_uint  var_cas_currentAddress ;
    var_cas_currentAddress = GGS_uint (true, 0U) ;
    {
      GGS_midrange_ipic_instructionList::cEnumerator enumerator_60279 (var_cas_outGeneratedInstructionList, true) ;
      const GGS_midrange_ipic_instructionList::cElement * operand_60279 = NULL ;
      while (((operand_60279 = enumerator_60279.nextObject ()))) {
        macroValidPointer (operand_60279) ;
        const GGS_midrange_ipic_instruction  _temp_60320 = operand_60279->mInstruction ;
        if (_temp_60320._isBuilt ()) {
          _temp_60320 (HERE)->method_setCurrentAddress (_inLexique, var_cas_currentAddress COMMA_SOURCE_FILE_AT_LINE (1715)) ;
        }
        var_cas_ioListFileContents._dotAssign_operation (var_cas_index.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1716)).reader_stringByLeftPadding (_inLexique, GGS_uint (true, 5U), GGS_char (true, ' ') COMMA_SOURCE_FILE_AT_LINE (1716))) ;
        var_cas_ioListFileContents.writeString (": ") ;
        const GGS_midrange_ipic_instruction  _temp_60465 = operand_60279->mInstruction ;
        if (_temp_60465._isBuilt ()) {
          _temp_60465 (HERE)->method_displayIPICinstruction (_inLexique, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1717)) ;
        }
        var_cas_ioListFileContents.writeString ("\n") ;
        var_cas_index._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1719)) ;
      }
    }
    var_cas_ioListFileContents.writeString ("\n") ;
    var_cas_ioListFileContents.writeString ("Minimum code size without optimization: ") ;
    var_cas_ioListFileContents._dotAssign_operation (var_cas_currentAddress.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1722))) ;
    var_cas_ioListFileContents.writeString (" instructions.\n"
      "\n") ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_midrange_assembly_instruction_list\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_midrange_checkingAndBuildIPIC (void) {
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_nobanksel__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_nobanksel.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_savebank__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_savebank.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_banksel__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_banksel.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_FD__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_FD.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_F__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_F.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_FB__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_FB.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_JSR__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_JSR.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_CALL__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_CALL.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_JUMP__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_JUMP.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_GOTO__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_GOTO.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_CLRWDT__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_CLRWDT.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_CLRW__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_CLRW.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_NOP__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_NOP.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_SLEEP__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_SLEEP.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_literalOperation__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_literalOperation.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_MNOP__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_MNOP.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_FOREVER__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_FOREVER.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_IF_BitTest__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_IF_BitTest.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition) category_method__midrange_incDecRegisterInCondition__buildIPICinstructionForCondition, gClassInfoFor__midrange_incDecRegisterInCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition) category_method__midrange_incDecRegisterInCondition__computeInstructionCountForCondition, gClassInfoFor__midrange_incDecRegisterInCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition) category_method__midrange_negateCondition__buildIPICinstructionForCondition, gClassInfoFor__midrange_negateCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition) category_method__midrange_negateCondition__computeInstructionCountForCondition, gClassInfoFor__midrange_negateCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition) category_method__midrange_andCondition__buildIPICinstructionForCondition, gClassInfoFor__midrange_andCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition) category_method__midrange_andCondition__computeInstructionCountForCondition, gClassInfoFor__midrange_andCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition) category_method__midrange_bitTest_in_structured_if_condition__buildIPICinstructionForCondition, gClassInfoFor__midrange_bitTest_in_structured_if_condition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition) category_method__midrange_bitTest_in_structured_if_condition__computeInstructionCountForCondition, gClassInfoFor__midrange_bitTest_in_structured_if_condition.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_structured_if__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_structured_if.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_do_while__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_do_while.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_IF_IncDec__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_IF_IncDec.slotID ()) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogueAction prologueEpilogueObjectFor_midrange_checkingAndBuildIPIC (prologueRoutineFor_midrange_checkingAndBuildIPIC,
                                   NULL) ;

//---------------------------------------------------------------------------*

