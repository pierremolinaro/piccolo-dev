//---------------------------------------------------------------------------*
//                                                                           *
//                 File 'midrange_checkingAndBuildIPIC.cpp'                  *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                        may 8th, 2010, at 21h49'3"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "midrange_checkingAndBuildIPIC.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "midrange_checkingAndBuildIPIC.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@midrange_instruction.instructionUsesGOTOorCALL'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction * operand_731,
                                GGS_bool & /* var_cas_ioUsesGOTOorCALL */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_731 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_instruction.instructionUsesGOTOorCALL'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL> gDispatchTableForMethod__midrange_instruction__instructionUsesGOTOorCALL ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL (typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__midrange_instruction__instructionUsesGOTOorCALL.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL
findCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__midrange_instruction__instructionUsesGOTOorCALL.count ()) {
    result = gDispatchTableForMethod__midrange_instruction__instructionUsesGOTOorCALL (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL (superClassPtr) ;
      gDispatchTableForMethod__midrange_instruction__instructionUsesGOTOorCALL.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_FOREVER.instructionUsesGOTOorCALL'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_FOREVER__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_FOREVER * operand_909,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_909 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_structured_if.instructionUsesGOTOorCALL'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_structured_if__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_structured_if * operand_1115,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1115 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@midrange_instruction_CALL.instructionUsesGOTOorCALL'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_CALL__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_CALL * operand_1312,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1312 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@midrange_instruction_JSR.instructionUsesGOTOorCALL'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_JSR__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_JSR * operand_1508,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1508 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@midrange_instruction_GOTO.instructionUsesGOTOorCALL'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_GOTO__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_GOTO * operand_1705,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1705 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@midrange_instruction_JUMP.instructionUsesGOTOorCALL'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_JUMP__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_JUMP * operand_1902,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1902 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_instruction.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList> gDispatchTableForMethod__midrange_instruction__build_midrange_ipic_instructionList ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__midrange_instruction__build_midrange_ipic_instructionList.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList
findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__midrange_instruction__build_midrange_ipic_instructionList.count ()) {
    result = gDispatchTableForMethod__midrange_instruction__build_midrange_ipic_instructionList (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (superClassPtr) ;
      gDispatchTableForMethod__midrange_instruction__build_midrange_ipic_instructionList.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "handleMidrangeInstructionList"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_handleMidrangeInstructionList (C_Compiler & inLexique,
                                const GGS_midrange_instructionList   var_cas_inInstructionList,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & var_cas_outContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_handleMidrangeInstructionList at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outContinuesInSequence = GGS_bool (true) ;
  {
    GGS_midrange_instructionList::cEnumerator enumerator_3177 (var_cas_inInstructionList, true) ;
    const GGS_midrange_instructionList::cElement * operand_3177 = NULL ;
    while (((operand_3177 = enumerator_3177.nextObject ()))) {
      macroValidPointer (operand_3177) ;
      const GGS_bool cond_3337 = (var_cas_outContinuesInSequence).operator_not () ;
      if (cond_3337.isBuiltAndTrue ()) {
        operand_3177->mInstruction.reader_mInstructionLocation (inLexique COMMA_SOURCE_FILE_AT_LINE (106)).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("Unreachable code") COMMA_SOURCE_FILE_AT_LINE (107)) ;
        var_cas_outContinuesInSequence = GGS_bool (true) ;
      }
      { typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList method = findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (operand_3177->mInstruction.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_3177->mInstruction (HERE), var_cas_inRoutineMap, var_cas_inRegisterTable, var_cas_inConstantMap, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inShouldPreserveBank, var_cas_outContinuesInSequence, var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (109)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_handleMidrangeInstructionList\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_nobanksel.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_nobanksel__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_nobanksel * operand_3853,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & /* var_cas_ioGeneratedInstructionList */,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3853 != NULL) {
    const GGS_bool cond_4452 = var_cas_inShouldPreserveBank ;
    if (cond_4452.isBuiltAndTrue ()) {
      operand_3853->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("cannot use \"nobank\" here: bank selection should be preserved (use it in a \"banksave\" construct)") COMMA_SOURCE_FILE_AT_LINE (142)) ;
    }
    var_cas_ioCurrentBank = GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (143)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_savebank.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_savebank__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_savebank * operand_4666,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4666 != NULL) {
    GGS_registerExpression  var_cas_STATUS_register = GGS_registerExpression ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("STATUS"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (163)), GGS_luint ::constructor_new (inLexique, GGS_uint (0U), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (163)) COMMA_SOURCE_FILE_AT_LINE (163)) ;
    GGS_midrange_ipic_registerExpression var_cas_STATUS_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_5409_0 ;
    { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (var_cas_STATUS_register.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, var_cas_STATUS_register (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (167)), var_cas_inRegisterTable, var_cas_STATUS_IPICregisterDescription, automatic_var_5409_0 COMMA_SOURCE_FILE_AT_LINE (165)) ;
      }
    }
    GGS_midrange_ipic_registerExpression var_cas_save_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_5682_0 ;
    { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (operand_4666->mRegister.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_4666->mRegister (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (176)), var_cas_inRegisterTable, var_cas_save_IPICregisterDescription, automatic_var_5682_0 COMMA_SOURCE_FILE_AT_LINE (174)) ;
      }
    }
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, operand_4666->mInstructionLocation, GGS_midrange_instruction_FD_base_code::constructor_SWAPF (inLexique COMMA_SOURCE_FILE_AT_LINE (184)), var_cas_STATUS_IPICregisterDescription, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (182))) ;
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, operand_4666->mInstructionLocation, GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_SOURCE_FILE_AT_LINE (191)), var_cas_save_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (189))) ;
    GGS_uint  var_cas_finalBank = var_cas_ioCurrentBank ;
    ::routine_handleMidrangeInstructionList (inLexique,  operand_4666->mInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_finalBank,  GGS_bool (false),  var_cas_ioContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (196)) ;
    const GGS_bool cond_6712 = (var_cas_ioContinuesInSequence).operator_not () ;
    if (cond_6712.isBuiltAndTrue ()) {
      operand_4666->mEndOfSaveBankInstruction.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("useless saving: execution does reach the end of \"savebank\" instruction list") COMMA_SOURCE_FILE_AT_LINE (212)) ;
    }
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, operand_4666->mInstructionLocation, GGS_midrange_instruction_FD_base_code::constructor_SWAPF (inLexique COMMA_SOURCE_FILE_AT_LINE (216)), var_cas_save_IPICregisterDescription, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (214))) ;
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, operand_4666->mInstructionLocation, GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_SOURCE_FILE_AT_LINE (223)), var_cas_STATUS_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (221))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_banksel.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_banksel__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_banksel * operand_7349,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7349 != NULL) {
    const GGS_bool cond_7922 = var_cas_inShouldPreserveBank ;
    if (cond_7922.isBuiltAndTrue ()) {
      operand_7349->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("cannot use \"banksel\" here: bank selection should be preserved (save it with \"banksave\" construct)") COMMA_SOURCE_FILE_AT_LINE (245)) ;
    }
    GGS_registerExpression  var_cas_STATUS_register = GGS_registerExpression ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("STATUS"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (247)), GGS_luint ::constructor_new (inLexique, GGS_uint (0U), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (247)) COMMA_SOURCE_FILE_AT_LINE (247)) ;
    GGS_midrange_ipic_registerExpression var_cas_STATUS_IPICregisterDescription ;
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (var_cas_STATUS_register.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, var_cas_STATUS_register (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_STATUS_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (250)) ;
      }
    }
    const GGS_lstring  var_cas_RP = GGS_lstring ::constructor_new (inLexique, GGS_string ("RP"), operand_7349->mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (257)) ;
    GGS_uint  var_cas_rpIndex ;
    GGS_uint  var_cas_sliceSize ;
    if (var_cas_bitSliceTable.isBuilt ()) {
      var_cas_bitSliceTable (HERE)->method_searchKey (inLexique, var_cas_RP, var_cas_rpIndex, var_cas_sliceSize COMMA_SOURCE_FILE_AT_LINE (260)) ;
    }
    const GGS_bool cond_8661 = (var_cas_sliceSize).operator_isNotEqual (var_cas_inTotalBankCount.substract_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (261)).reader_significantBitCount (inLexique COMMA_SOURCE_FILE_AT_LINE (261))) ;
    if (cond_8661.isBuiltAndTrue ()) {
      operand_7349->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, (((GGS_string ("internal error: sliceSize == ")).operator_concat (var_cas_sliceSize.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (262)))).operator_concat (GGS_string (", total bank count == "))).operator_concat (var_cas_inTotalBankCount.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (262))) COMMA_SOURCE_FILE_AT_LINE (263)) ;
    }
    const GGS_bool cond_8832 = (operand_7349->mBankIndex.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (265))).operator_isEqual (var_cas_ioCurrentBank) ;
    if (cond_8832.isBuiltAndTrue ()) {
      operand_7349->mBankIndex.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, ((GGS_string ("useless instruction: the bank ")).operator_concat (var_cas_ioCurrentBank.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (266)))).operator_concat (GGS_string (" is already selected")) COMMA_SOURCE_FILE_AT_LINE (266)) ;
    }else if (cond_8832.isBuiltAndFalse ()) {
      const GGS_bool cond_9026 = (operand_7349->mBankIndex.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (267))).operator_supOrEqual (var_cas_inTotalBankCount) ;
      if (cond_9026.isBuiltAndTrue ()) {
        operand_7349->mBankIndex.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the bank ")).operator_concat (operand_7349->mBankIndex.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (268)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (268)))).operator_concat (GGS_string (" does not exist (the device has "))).operator_concat (var_cas_inTotalBankCount.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (268)))).operator_concat (GGS_string (" bank(s))")) COMMA_SOURCE_FILE_AT_LINE (269)) ;
      }else if (cond_9026.isBuiltAndFalse ()) {
        const GGS_bool cond_9784 = (var_cas_ioCurrentBank).operator_isEqual (GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (269))) ;
        if (cond_9784.isBuiltAndTrue ()) {
          GGS_uint  var_cas_n = var_cas_inTotalBankCount.substract_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (270)).reader_significantBitCount (inLexique COMMA_SOURCE_FILE_AT_LINE (270)) ;
          GGS_uint  var_cas_shiftedBank = operand_7349->mBankIndex.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (271)) ;
          GGS_uint  var_cas_idx = GGS_uint (0U) ;
          GGS_uint _variant_9729 = var_cas_sliceSize ;
          GGS_bool _condition_9729 (_variant_9729.isBuilt (), true) ;
          while (_condition_9729.isBuiltAndTrue ()) {
            _condition_9729 = (var_cas_idx).operator_strictInf (var_cas_sliceSize) ;
            if (_condition_9729.isBuiltAndTrue ()) {
              if (_variant_9729.uintValue () == 0) {
                inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (288)) ;
                _condition_9729 = GGS_bool (false) ;
              }else{
                _variant_9729.decrement_operation (inLexique COMMA_HERE) ;
                GGS_midrange_bit_oriented_op var_cas_op ;
                const GGS_bool cond_9410 = ((var_cas_shiftedBank).operator_and (GGS_uint (1U))).operator_isEqual (GGS_uint (0U)) ;
                if (cond_9410.isBuiltAndTrue ()) {
                  var_cas_op = GGS_midrange_bit_oriented_op::constructor_BCF (inLexique COMMA_SOURCE_FILE_AT_LINE (276)) ;
                }else if (cond_9410.isBuiltAndFalse ()) {
                  var_cas_op = GGS_midrange_bit_oriented_op::constructor_BSF (inLexique COMMA_SOURCE_FILE_AT_LINE (278)) ;
                }
                var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_FB ::constructor_new (inLexique, operand_7349->mInstructionLocation, var_cas_op, var_cas_STATUS_IPICregisterDescription, var_cas_rpIndex.add_operation (inLexique, var_cas_idx COMMA_SOURCE_FILE_AT_LINE (284)) COMMA_SOURCE_FILE_AT_LINE (280))) ;
                var_cas_idx.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (286)) ;
                var_cas_shiftedBank = var_cas_shiftedBank.right_shift_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (287)) ;
              }
            }
          }
          var_cas_ioCurrentBank = operand_7349->mBankIndex.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (289)) ;
        }else if (cond_9784.isBuiltAndFalse ()) {
          GGS_bool var_cas_optimize = gOption_piccolo_5F_options_performOptimizations.reader_value () ;
          GGS_uint  var_cas_shiftedBank = operand_7349->mBankIndex.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (292)) ;
          GGS_uint  var_cas_shiftedXorBank = (operand_7349->mBankIndex.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (293))).operator_xor (var_cas_ioCurrentBank) ;
          GGS_uint  var_cas_idx = GGS_uint (0U) ;
          GGS_uint _variant_10873 = var_cas_sliceSize ;
          GGS_bool _condition_10873 (_variant_10873.isBuilt (), true) ;
          while (_condition_10873.isBuiltAndTrue ()) {
            _condition_10873 = (var_cas_idx).operator_strictInf (var_cas_sliceSize) ;
            if (_condition_10873.isBuiltAndTrue ()) {
              if (_variant_10873.uintValue () == 0) {
                inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (317)) ;
                _condition_10873 = GGS_bool (false) ;
              }else{
                _variant_10873.decrement_operation (inLexique COMMA_HERE) ;
                GGS_midrange_bit_oriented_op var_cas_op ;
                const GGS_bool cond_10171 = ((var_cas_shiftedBank).operator_and (GGS_uint (1U))).operator_isEqual (GGS_uint (0U)) ;
                if (cond_10171.isBuiltAndTrue ()) {
                  var_cas_op = GGS_midrange_bit_oriented_op::constructor_BCF (inLexique COMMA_SOURCE_FILE_AT_LINE (298)) ;
                }else if (cond_10171.isBuiltAndFalse ()) {
                  var_cas_op = GGS_midrange_bit_oriented_op::constructor_BSF (inLexique COMMA_SOURCE_FILE_AT_LINE (300)) ;
                }
                const GGS_bool cond_10501 = (((var_cas_shiftedXorBank).operator_and (GGS_uint (1U))).operator_isNotEqual (GGS_uint (0U))).operator_or ((var_cas_optimize).operator_not ()) ;
                if (cond_10501.isBuiltAndTrue ()) {
                  var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_FB ::constructor_new (inLexique, operand_7349->mInstructionLocation, var_cas_op, var_cas_STATUS_IPICregisterDescription, var_cas_rpIndex.add_operation (inLexique, var_cas_idx COMMA_SOURCE_FILE_AT_LINE (307)) COMMA_SOURCE_FILE_AT_LINE (303))) ;
                }else if (cond_10501.isBuiltAndFalse ()) {
                  var_cas_ioListFileContents.appendCString ("  line ") ;
                  var_cas_ioListFileContents.dotAssign_operation (var_cas_ioGeneratedInstructionList.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (310))) ;
                  var_cas_ioListFileContents.appendCString (": useless '") ;
                  var_cas_ioListFileContents.dotAssign_operation (var_cas_op.reader_mnemonic (inLexique COMMA_SOURCE_FILE_AT_LINE (311))) ;
                  var_cas_ioListFileContents.appendCString (" STATUS, ") ;
                  var_cas_ioListFileContents.dotAssign_operation (var_cas_rpIndex.add_operation (inLexique, var_cas_idx COMMA_SOURCE_FILE_AT_LINE (312)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (312))) ;
                  var_cas_ioListFileContents.appendCString ("' not generated\n") ;
                }
                var_cas_idx.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (314)) ;
                var_cas_shiftedBank = var_cas_shiftedBank.right_shift_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (315)) ;
                var_cas_shiftedXorBank = var_cas_shiftedXorBank.right_shift_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (316)) ;
              }
            }
          }
          var_cas_ioCurrentBank = operand_7349->mBankIndex.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (318)) ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_FD.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_FD__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_FD * operand_11079,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11079 != NULL) {
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_11700_0 ;
    { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (operand_11079->mRegisterExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_11079->mRegisterExpression (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_11700_0 COMMA_SOURCE_FILE_AT_LINE (338)) ;
      }
    }
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, operand_11079->mInstructionLocation, operand_11079->mInstruction_FD_base_code, var_cas_IPICregisterDescription, operand_11079->m_W_isDestination COMMA_SOURCE_FILE_AT_LINE (345))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_F.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_F__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_F * operand_12031,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12031 != NULL) {
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_12652_0 ;
    { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (operand_12031->mRegisterExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_12031->mRegisterExpression (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_12652_0 COMMA_SOURCE_FILE_AT_LINE (369)) ;
      }
    }
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, operand_12031->mInstructionLocation, operand_12031->mFAinstruction, var_cas_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (376))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_FB.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_FB__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_FB * operand_12949,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12949 != NULL) {
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (operand_12949->mRegisterExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_12949->mRegisterExpression (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (400)) ;
      }
    }
    GGS_uint  var_cas_bitNumber ;
    { typeCategoryMethod__bitNumberExpression__getBitNumber method = findCategoryMethod__bitNumberExpression__getBitNumber (operand_12949->mBitNumber.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_12949->mBitNumber (HERE), var_cas_bitSliceTable, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (408)) ;
      }
    }
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_FB ::constructor_new (inLexique, operand_12949->mInstructionLocation, operand_12949->mBitOrientedOp, var_cas_IPICregisterDescription, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (412))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_JSR.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_JSR__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_JSR * operand_14016,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_14016 != NULL) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  var_cas_returnedBank ;
    GGS_bool var_cas_preservesBank ;
    if (var_cas_inRoutineMap.isBuilt ()) {
      var_cas_inRoutineMap (HERE)->method_searchKey (inLexique, operand_14016->mTargetLabel, var_cas_isNoReturn, var_cas_requiredBank, var_cas_returnedBank, var_cas_preservesBank COMMA_SOURCE_FILE_AT_LINE (440)) ;
    }
    const GGS_bool cond_15123 = ((var_cas_requiredBank).operator_isNotEqual (GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (441)))).operator_and ((var_cas_requiredBank).operator_isNotEqual (var_cas_ioCurrentBank)) ;
    if (cond_15123.isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage = (((GGS_string ("the routine '")).operator_concat (operand_14016->mTargetLabel)).operator_concat (GGS_string ("' requires bank selection to be set to "))).operator_concat (var_cas_requiredBank.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (442))) ;
      var_cas_errorMessage.appendCString (", but bank selection ") ;
      const GGS_bool cond_15004 = (var_cas_ioCurrentBank).operator_isEqual (GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (444))) ;
      if (cond_15004.isBuiltAndTrue ()) {
        var_cas_errorMessage.appendCString ("does contain any reliable value") ;
      }else if (cond_15004.isBuiltAndFalse ()) {
        var_cas_errorMessage.appendCString ("is set to ") ;
        var_cas_errorMessage.dotAssign_operation (var_cas_ioCurrentBank.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (447))) ;
      }
      operand_14016->mTargetLabel.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (450)) ;
    }
    const GGS_bool cond_15254 = var_cas_isNoReturn ;
    if (cond_15254.isBuiltAndTrue ()) {
      operand_14016->mTargetLabel.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("a \"noreturn\" routine should be called with a GOTO or JUMP instruction") COMMA_SOURCE_FILE_AT_LINE (453)) ;
    }
    const GGS_bool cond_15329 = (var_cas_preservesBank).operator_not () ;
    if (cond_15329.isBuiltAndTrue ()) {
      var_cas_ioCurrentBank = var_cas_returnedBank ;
    }
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_JSR ::constructor_new (inLexique, operand_14016->mInstructionLocation, operand_14016->mTargetLabel, GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_SOURCE_FILE_AT_LINE (461)), GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_SOURCE_FILE_AT_LINE (462)) COMMA_SOURCE_FILE_AT_LINE (458))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_CALL.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_CALL__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_CALL * operand_15675,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_15675 != NULL) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  var_cas_returnedBank ;
    GGS_bool var_cas_preservesBank ;
    if (var_cas_inRoutineMap.isBuilt ()) {
      var_cas_inRoutineMap (HERE)->method_searchKey (inLexique, operand_15675->mTargetLabel, var_cas_isNoReturn, var_cas_requiredBank, var_cas_returnedBank, var_cas_preservesBank COMMA_SOURCE_FILE_AT_LINE (486)) ;
    }
    const GGS_bool cond_16782 = ((var_cas_requiredBank).operator_isNotEqual (GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (487)))).operator_and ((var_cas_requiredBank).operator_isNotEqual (var_cas_ioCurrentBank)) ;
    if (cond_16782.isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage = (((GGS_string ("the routine '")).operator_concat (operand_15675->mTargetLabel)).operator_concat (GGS_string ("' requires bank selection to be set to "))).operator_concat (var_cas_requiredBank.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (488))) ;
      var_cas_errorMessage.appendCString (", but bank selection ") ;
      const GGS_bool cond_16663 = (var_cas_ioCurrentBank).operator_isEqual (GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (490))) ;
      if (cond_16663.isBuiltAndTrue ()) {
        var_cas_errorMessage.appendCString ("does contain any reliable value") ;
      }else if (cond_16663.isBuiltAndFalse ()) {
        var_cas_errorMessage.appendCString ("is set to ") ;
        var_cas_errorMessage.dotAssign_operation (var_cas_ioCurrentBank.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (493))) ;
      }
      operand_15675->mTargetLabel.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (496)) ;
    }
    const GGS_bool cond_16913 = var_cas_isNoReturn ;
    if (cond_16913.isBuiltAndTrue ()) {
      operand_15675->mTargetLabel.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("a \"noreturn\" routine should be called with a GOTO or JUMP instruction") COMMA_SOURCE_FILE_AT_LINE (499)) ;
    }
    const GGS_bool cond_16988 = (var_cas_preservesBank).operator_not () ;
    if (cond_16988.isBuiltAndTrue ()) {
      var_cas_ioCurrentBank = var_cas_returnedBank ;
    }
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_CALL ::constructor_new (inLexique, operand_15675->mInstructionLocation, operand_15675->mTargetLabel COMMA_SOURCE_FILE_AT_LINE (504))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_JUMP.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_JUMP__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_JUMP * operand_17255,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17255 != NULL) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  automatic_var_17807_0 ;
    GGS_bool automatic_var_17807_1 ;
    if (var_cas_inRoutineMap.isBuilt ()) {
      var_cas_inRoutineMap (HERE)->method_searchKey (inLexique, operand_17255->mTargetLabel, var_cas_isNoReturn, var_cas_requiredBank, automatic_var_17807_0, automatic_var_17807_1 COMMA_SOURCE_FILE_AT_LINE (528)) ;
    }
    const GGS_bool cond_18285 = ((var_cas_requiredBank).operator_isNotEqual (GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (529)))).operator_and ((var_cas_requiredBank).operator_isNotEqual (var_cas_ioCurrentBank)) ;
    if (cond_18285.isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage = (((GGS_string ("the routine '")).operator_concat (operand_17255->mTargetLabel)).operator_concat (GGS_string ("' requires bank selection to be set to "))).operator_concat (var_cas_requiredBank.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (530))) ;
      var_cas_errorMessage.appendCString (", but bank selection ") ;
      const GGS_bool cond_18166 = (var_cas_ioCurrentBank).operator_isEqual (GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (532))) ;
      if (cond_18166.isBuiltAndTrue ()) {
        var_cas_errorMessage.appendCString ("does contain any reliable value") ;
      }else if (cond_18166.isBuiltAndFalse ()) {
        var_cas_errorMessage.appendCString ("is set to ") ;
        var_cas_errorMessage.dotAssign_operation (var_cas_ioCurrentBank.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (535))) ;
      }
      operand_17255->mTargetLabel.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (538)) ;
    }
    const GGS_bool cond_18414 = (var_cas_isNoReturn).operator_not () ;
    if (cond_18414.isBuiltAndTrue ()) {
      operand_17255->mTargetLabel.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("a regular routine should be called with a CALL or JSR instruction") COMMA_SOURCE_FILE_AT_LINE (541)) ;
    }
    var_cas_ioContinuesInSequence = GGS_bool (false) ;
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_JUMP ::constructor_new (inLexique, operand_17255->mInstructionLocation, operand_17255->mTargetLabel, GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_SOURCE_FILE_AT_LINE (547)), GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_SOURCE_FILE_AT_LINE (548)) COMMA_SOURCE_FILE_AT_LINE (544))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_GOTO.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_GOTO__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_GOTO * operand_18796,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18796 != NULL) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  automatic_var_19348_0 ;
    GGS_bool automatic_var_19348_1 ;
    if (var_cas_inRoutineMap.isBuilt ()) {
      var_cas_inRoutineMap (HERE)->method_searchKey (inLexique, operand_18796->mTargetLabel, var_cas_isNoReturn, var_cas_requiredBank, automatic_var_19348_0, automatic_var_19348_1 COMMA_SOURCE_FILE_AT_LINE (570)) ;
    }
    const GGS_bool cond_19826 = ((var_cas_requiredBank).operator_isNotEqual (GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (571)))).operator_and ((var_cas_requiredBank).operator_isNotEqual (var_cas_ioCurrentBank)) ;
    if (cond_19826.isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage = (((GGS_string ("the routine '")).operator_concat (operand_18796->mTargetLabel)).operator_concat (GGS_string ("' requires bank selection to be set to "))).operator_concat (var_cas_requiredBank.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (572))) ;
      var_cas_errorMessage.appendCString (", but bank selection ") ;
      const GGS_bool cond_19707 = (var_cas_ioCurrentBank).operator_isEqual (GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (574))) ;
      if (cond_19707.isBuiltAndTrue ()) {
        var_cas_errorMessage.appendCString ("does contain any reliable value") ;
      }else if (cond_19707.isBuiltAndFalse ()) {
        var_cas_errorMessage.appendCString ("is set to ") ;
        var_cas_errorMessage.dotAssign_operation (var_cas_ioCurrentBank.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (577))) ;
      }
      operand_18796->mTargetLabel.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (580)) ;
    }
    const GGS_bool cond_19955 = (var_cas_isNoReturn).operator_not () ;
    if (cond_19955.isBuiltAndTrue ()) {
      operand_18796->mTargetLabel.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("a regular routine should be called with a CALL or JSR instruction") COMMA_SOURCE_FILE_AT_LINE (583)) ;
    }
    var_cas_ioContinuesInSequence = GGS_bool (false) ;
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (inLexique, operand_18796->mInstructionLocation, operand_18796->mTargetLabel COMMA_SOURCE_FILE_AT_LINE (586))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_CLRWDT.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_CLRWDT__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_CLRWDT * operand_20259,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20259 != NULL) {
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_CLRWDT ::constructor_new (inLexique, operand_20259->mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (607))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_CLRW.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_CLRW__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_CLRW * operand_20945,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20945 != NULL) {
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_CLRW ::constructor_new (inLexique, operand_20945->mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (627))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_NOP.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_NOP__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_NOP * operand_21628,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21628 != NULL) {
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_NOP ::constructor_new (inLexique, operand_21628->mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (647))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_SLEEP.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_SLEEP__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_SLEEP * operand_22312,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22312 != NULL) {
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_SLEEP ::constructor_new (inLexique, operand_22312->mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (667))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_literalOperation.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_literalOperation__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_literalOperation * operand_23009,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23009 != NULL) {
    GGS_sint  var_cas_result ;
    { typeCategoryMethod__immediatExpression__eval method = findCategoryMethod__immediatExpression__eval (operand_23009->mImmediatExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_23009->mImmediatExpression (HERE), var_cas_inRegisterTable, var_cas_inConstantMap, var_cas_result COMMA_SOURCE_FILE_AT_LINE (687)) ;
      }
    }
    const GGS_bool cond_23698 = ((var_cas_result).operator_strictSup (GGS_sint (255L))).operator_or ((var_cas_result).operator_strictInf (GGS_sint (128L).operator_unary_minus (inLexique COMMA_HERE))) ;
    if (cond_23698.isBuiltAndTrue ()) {
      operand_23009->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("immediate value is evaluated as ")).operator_concat (var_cas_result.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (690)))).operator_concat (GGS_string (" (should be betwween -128 and 255)")) COMMA_SOURCE_FILE_AT_LINE (691)) ;
    }
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_literalOperation ::constructor_new (inLexique, operand_23009->mInstructionLocation, operand_23009->mLiteralInstruction, (var_cas_result).operator_and (GGS_sint (255L)).reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (696)) COMMA_SOURCE_FILE_AT_LINE (693))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_MNOP.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_MNOP__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_MNOP * operand_26142,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26142 != NULL) {
    const GGS_bool cond_26707 = (operand_26142->mOccurrenceFactor.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (765))).operator_isEqual (GGS_uint (0U)) ;
    if (cond_26707.isBuiltAndTrue ()) {
      operand_26142->mOccurrenceFactor.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("occurrence argument is zero: no generated code") COMMA_SOURCE_FILE_AT_LINE (766)) ;
    }
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_MNOP ::constructor_new (inLexique, operand_26142->mInstructionLocation, operand_26142->mOccurrenceFactor COMMA_SOURCE_FILE_AT_LINE (769))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_FOREVER.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_FOREVER__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_FOREVER * operand_31997,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_31997 != NULL) {
    switch (var_cas_inRoutineKind.enumValue ()) {
    case GGS_routineKind::enum_regularRoutine:
      {
      operand_31997->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("a regular routine does not accept the \"forever\" instruction") COMMA_SOURCE_FILE_AT_LINE (911)) ;
      }
      break ;
    case GGS_routineKind::enum_noReturnRoutine:
      {
      }
      break ;
    case GGS_routineKind::enum_interruptRoutine:
      {
      operand_31997->mInstructionLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("an interrupt routine does not accept the \"forever\" instruction") COMMA_SOURCE_FILE_AT_LINE (914)) ;
      }
      break ;
    case GGS_routineKind::kNotBuilt:
      break ;
    }
    GGS_uint  var_cas_finalBank = var_cas_ioCurrentBank ;
    GGS_string var_cas_label0 = (GGS_string ("_label_")).operator_concat (var_cas_ioLocalLabelIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (917))) ;
    var_cas_ioLocalLabelIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (918)) ;
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_label0, operand_31997->mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (919)) COMMA_SOURCE_FILE_AT_LINE (919))) ;
    ::routine_handleMidrangeInstructionList (inLexique,  operand_31997->mInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_finalBank,  var_cas_inShouldPreserveBank,  var_cas_ioContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (920)) ;
    const GGS_bool cond_33407 = (var_cas_ioCurrentBank).operator_isNotEqual (var_cas_finalBank) ;
    if (cond_33407.isBuiltAndTrue ()) {
      operand_31997->mEndOfInstructionList.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("instruction list does not leave bank selection unchanged") COMMA_SOURCE_FILE_AT_LINE (936)) ;
    }
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (inLexique, operand_31997->mInstructionLocation, GGS_lstring ::constructor_new (inLexique, var_cas_label0, operand_31997->mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (940)) COMMA_SOURCE_FILE_AT_LINE (938))) ;
    var_cas_ioContinuesInSequence = GGS_bool (false) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_IF_BitTest.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_IF_BitTest__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_IF_BitTest * operand_33780,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_33780 != NULL) {
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (operand_33780->mRegisterExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_33780->mRegisterExpression (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (963)) ;
      }
    }
    GGS_uint  var_cas_bitNumber ;
    { typeCategoryMethod__bitNumberExpression__getBitNumber method = findCategoryMethod__bitNumberExpression__getBitNumber (operand_33780->mBitNumber.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_33780->mBitNumber (HERE), var_cas_bitSliceTable, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (971)) ;
      }
    }
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_BitTestSkip ::constructor_new (inLexique, operand_33780->mInstructionLocation, operand_33780->mSkipIfSet, var_cas_IPICregisterDescription, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (975))) ;
    GGS_bool var_cas_unusedContinuesInSequence = GGS_bool (true) ;
    { typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList method = findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (operand_33780->mInstruction.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_33780->mInstruction (HERE), var_cas_inRoutineMap, var_cas_inRegisterTable, var_cas_inConstantMap, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inShouldPreserveBank, var_cas_unusedContinuesInSequence, var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (983)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_conditionExpression.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition> gDispatchTableForMethod__midrange_conditionExpression__buildIPICinstructionForCondition ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__midrange_conditionExpression__buildIPICinstructionForCondition.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition
findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__midrange_conditionExpression__buildIPICinstructionForCondition.count ()) {
    result = gDispatchTableForMethod__midrange_conditionExpression__buildIPICinstructionForCondition (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (superClassPtr) ;
      gDispatchTableForMethod__midrange_conditionExpression__buildIPICinstructionForCondition.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_conditionExpression.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition> gDispatchTableForMethod__midrange_conditionExpression__computeInstructionCountForCondition ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__midrange_conditionExpression__computeInstructionCountForCondition.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition
findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__midrange_conditionExpression__computeInstructionCountForCondition.count ()) {
    result = gDispatchTableForMethod__midrange_conditionExpression__computeInstructionCountForCondition (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (superClassPtr) ;
      gDispatchTableForMethod__midrange_conditionExpression__computeInstructionCountForCondition.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_incDecRegisterInCondition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_incDecRegisterInCondition__buildIPICinstructionForCondition (C_Compiler & inLexique,
                                const cPtr_midrange_incDecRegisterInCondition * operand_35850,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_uint   var_cas_inCurrentBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_35850 != NULL) {
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_36376_0 ;
    { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (operand_35850->mRegisterExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_35850->mRegisterExpression (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_36376_0 COMMA_SOURCE_FILE_AT_LINE (1033)) ;
      }
    }
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_incDecRegisterInCondition ::constructor_new (inLexique, var_cas_inInstructionLocation, var_cas_IPICregisterDescription, var_cas_inTargetLabel, operand_35850->mIncrement, operand_35850->m_W_isDestination, (operand_35850->mBranchIfZero).operator_xor (var_cas_inComplementaryBranch) COMMA_SOURCE_FILE_AT_LINE (1041))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_incDecRegisterInCondition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_incDecRegisterInCondition__computeInstructionCountForCondition (C_Compiler &,
                                const cPtr_midrange_incDecRegisterInCondition * operand_36783,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_36783 != NULL) {
    const GGS_bool cond_36932 = (operand_36783->mBranchIfZero).operator_xor (var_cas_inComplementaryBranch) ;
    if (cond_36932.isBuiltAndTrue ()) {
      var_cas_outInstructionCount = GGS_uint (3U) ;
    }else if (cond_36932.isBuiltAndFalse ()) {
      var_cas_outInstructionCount = GGS_uint (2U) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_negateCondition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_negateCondition__buildIPICinstructionForCondition (C_Compiler & inLexique,
                                const cPtr_midrange_negateCondition * operand_37119,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_uint   var_cas_inCurrentBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_37119 != NULL) {
    { typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (operand_37119->mCondition.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_37119->mCondition (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, (var_cas_inComplementaryBranch).operator_not (), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1077)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_negateCondition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_negateCondition__computeInstructionCountForCondition (C_Compiler & inLexique,
                                const cPtr_midrange_negateCondition * operand_37844,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_37844 != NULL) {
    { typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (operand_37844->mCondition.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_37844->mCondition (HERE), (var_cas_inComplementaryBranch).operator_not (), var_cas_outInstructionCount COMMA_SOURCE_FILE_AT_LINE (1096)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_andCondition.buildIPICinstructionForCondition'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_andCondition__buildIPICinstructionForCondition (C_Compiler & inLexique,
                                const cPtr_midrange_andCondition * operand_38161,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_uint   var_cas_inCurrentBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_38161 != NULL) {
    const GGS_bool cond_39064 = var_cas_inComplementaryBranch ;
    if (cond_39064.isBuiltAndTrue ()) {
      { typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (operand_38161->mLeftExpression.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_38161->mLeftExpression (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1116)) ;
        }
      }
      { typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (operand_38161->mRightExpression.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_38161->mRightExpression (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1127)) ;
        }
      }
    }else if (cond_39064.isBuiltAndFalse ()) {
      GGS_string var_cas_label0 = (GGS_string ("_label_")).operator_concat (var_cas_ioLocalLabelIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1139))) ;
      var_cas_ioLocalLabelIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (1139)) ;
      { typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (operand_38161->mLeftExpression.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_38161->mLeftExpression (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true), var_cas_inInstructionLocation, var_cas_label0, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1140)) ;
        }
      }
      { typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (operand_38161->mRightExpression.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_38161->mRightExpression (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (false), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1151)) ;
        }
      }
      var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_label0, var_cas_inInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1162)) COMMA_SOURCE_FILE_AT_LINE (1162))) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_andCondition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_andCondition__computeInstructionCountForCondition (C_Compiler & inLexique,
                                const cPtr_midrange_andCondition * operand_39979,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_39979 != NULL) {
    GGS_uint  var_cas_countLeft ;
    { typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (operand_39979->mLeftExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_39979->mLeftExpression (HERE), var_cas_inComplementaryBranch, var_cas_countLeft COMMA_SOURCE_FILE_AT_LINE (1173)) ;
      }
    }
    GGS_uint  var_cas_countRight ;
    { typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (operand_39979->mLeftExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_39979->mLeftExpression (HERE), var_cas_inComplementaryBranch, var_cas_countRight COMMA_SOURCE_FILE_AT_LINE (1178)) ;
      }
    }
    var_cas_outInstructionCount = var_cas_countLeft.add_operation (inLexique, var_cas_countRight COMMA_SOURCE_FILE_AT_LINE (1182)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_bitTest_in_structured_if_condition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_bitTest_in_structured_if_condition__buildIPICinstructionForCondition (C_Compiler & inLexique,
                                const cPtr_midrange_bitTest_in_structured_if_condition * operand_40504,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_uint   var_cas_inCurrentBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_40504 != NULL) {
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (operand_40504->mRegisterExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_40504->mRegisterExpression (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (1200)) ;
      }
    }
    GGS_uint  var_cas_bitNumber ;
    { typeCategoryMethod__bitNumberExpression__getBitNumber method = findCategoryMethod__bitNumberExpression__getBitNumber (operand_40504->mBitNumber.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_40504->mBitNumber (HERE), var_cas_bitSliceTable, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (1208)) ;
      }
    }
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_BitTestSkip ::constructor_new (inLexique, var_cas_inInstructionLocation, (operand_40504->mBTFSSinstruction).operator_xor (var_cas_inComplementaryBranch), var_cas_IPICregisterDescription, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (1212))) ;
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_JUMP ::constructor_new (inLexique, var_cas_inInstructionLocation, GGS_lstring ::constructor_new (inLexique, var_cas_inTargetLabel, var_cas_inInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1220)), GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_SOURCE_FILE_AT_LINE (1222)), GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_SOURCE_FILE_AT_LINE (1223)) COMMA_SOURCE_FILE_AT_LINE (1218))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_bitTest_in_structured_if_condition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_bitTest_in_structured_if_condition__computeInstructionCountForCondition (C_Compiler &,
                                const cPtr_midrange_bitTest_in_structured_if_condition * operand_41766,
                                const GGS_bool  /* var_cas_inComplementaryBranch */,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_41766 != NULL) {
    var_cas_outInstructionCount = GGS_uint (2U) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_structured_if.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_structured_if__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_structured_if * operand_42023,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_42023 != NULL) {
    GGS_bool var_cas_generateComplementaryCondition = GGS_bool (false) ;
    const GGS_bool cond_43361 = gOption_piccolo_5F_options_performOptimizations.reader_value () ;
    if (cond_43361.isBuiltAndTrue ()) {
      GGS_uint  var_cas_directCount ;
      { typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (operand_42023->mIfCondition.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_42023->mIfCondition (HERE), GGS_bool (true), var_cas_directCount COMMA_SOURCE_FILE_AT_LINE (1254)) ;
        }
      }
      const GGS_bool cond_42706 = (operand_42023->mElseInstructionList.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
      if (cond_42706.isBuiltAndTrue ()) {
        var_cas_directCount.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (1256)) ;
      }
      GGS_uint  var_cas_complementaryCount ;
      { typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (operand_42023->mIfCondition.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_42023->mIfCondition (HERE), GGS_bool (false), var_cas_complementaryCount COMMA_SOURCE_FILE_AT_LINE (1258)) ;
        }
      }
      const GGS_bool cond_42906 = (operand_42023->mThenInstructionList.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
      if (cond_42906.isBuiltAndTrue ()) {
        var_cas_complementaryCount.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (1260)) ;
      }
      const GGS_bool cond_43350 = (var_cas_complementaryCount).operator_strictInf (var_cas_directCount) ;
      if (cond_43350.isBuiltAndTrue ()) {
        var_cas_generateComplementaryCondition = GGS_bool (true) ;
        var_cas_ioListFileContents.appendCString ("  line ") ;
        var_cas_ioListFileContents.dotAssign_operation (var_cas_ioGeneratedInstructionList.reader_length ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1264))) ;
        var_cas_ioListFileContents.appendCString (": generates complementary test (saves ") ;
        var_cas_ioListFileContents.dotAssign_operation (var_cas_directCount.substract_operation (inLexique, var_cas_complementaryCount COMMA_SOURCE_FILE_AT_LINE (1265)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1265))) ;
        var_cas_ioListFileContents.appendCString (" instruction") ;
        const GGS_bool cond_43301 = (var_cas_directCount.substract_operation (inLexique, var_cas_complementaryCount COMMA_SOURCE_FILE_AT_LINE (1266))).operator_strictSup (GGS_uint (1U)) ;
        if (cond_43301.isBuiltAndTrue ()) {
          var_cas_ioListFileContents.appendCString ("s") ;
        }
        var_cas_ioListFileContents.appendCString (")\n") ;
      }
    }
    GGS_uint  var_cas_elseBranchFinalBank = var_cas_ioCurrentBank ;
    GGS_uint  var_cas_thenBranchFinalBank = var_cas_ioCurrentBank ;
    GGS_bool var_cas_elseContinuesInSequence ;
    GGS_bool var_cas_thenContinuesInSequence ;
    const GGS_bool cond_45392 = var_cas_generateComplementaryCondition ;
    if (cond_45392.isBuiltAndTrue ()) {
      GGS_string var_cas_label_nextCondition = (GGS_string ("_label_")).operator_concat (var_cas_ioLocalLabelIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1278))) ;
      var_cas_ioLocalLabelIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (1278)) ;
      GGS_string var_cas_label_endOfIfinstruction = (GGS_string ("_label_")).operator_concat (var_cas_ioLocalLabelIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1279))) ;
      var_cas_ioLocalLabelIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (1279)) ;
      { typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (operand_42023->mIfCondition.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_42023->mIfCondition (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (false), operand_42023->mInstructionLocation, var_cas_label_nextCondition, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1281)) ;
        }
      }
      ::routine_handleMidrangeInstructionList (inLexique,  operand_42023->mElseInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_elseBranchFinalBank,  var_cas_inShouldPreserveBank,  var_cas_elseContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1293)) ;
      const GGS_bool cond_44700 = (operand_42023->mThenInstructionList.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
      if (cond_44700.isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (inLexique, operand_42023->mInstructionLocation, GGS_lstring ::constructor_new (inLexique, var_cas_label_endOfIfinstruction, operand_42023->mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1309)) COMMA_SOURCE_FILE_AT_LINE (1309))) ;
      }
      var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_label_nextCondition, operand_42023->mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1311)) COMMA_SOURCE_FILE_AT_LINE (1311))) ;
      ::routine_handleMidrangeInstructionList (inLexique,  operand_42023->mThenInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_thenBranchFinalBank,  var_cas_inShouldPreserveBank,  var_cas_thenContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1312)) ;
      const GGS_bool cond_45380 = (operand_42023->mThenInstructionList.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
      if (cond_45380.isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_label_endOfIfinstruction, operand_42023->mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1327)) COMMA_SOURCE_FILE_AT_LINE (1327))) ;
      }
    }else if (cond_45392.isBuiltAndFalse ()) {
      GGS_string var_cas_label_nextCondition = (GGS_string ("_label_")).operator_concat (var_cas_ioLocalLabelIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1331))) ;
      var_cas_ioLocalLabelIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (1331)) ;
      GGS_string var_cas_label_endOfIfinstruction = (GGS_string ("_label_")).operator_concat (var_cas_ioLocalLabelIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1332))) ;
      var_cas_ioLocalLabelIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (1332)) ;
      { typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (operand_42023->mIfCondition.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_42023->mIfCondition (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true), operand_42023->mInstructionLocation, var_cas_label_nextCondition, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1334)) ;
        }
      }
      ::routine_handleMidrangeInstructionList (inLexique,  operand_42023->mThenInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_thenBranchFinalBank,  var_cas_inShouldPreserveBank,  var_cas_thenContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1346)) ;
      const GGS_bool cond_46522 = (operand_42023->mElseInstructionList.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
      if (cond_46522.isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (inLexique, operand_42023->mInstructionLocation, GGS_lstring ::constructor_new (inLexique, var_cas_label_endOfIfinstruction, operand_42023->mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1362)) COMMA_SOURCE_FILE_AT_LINE (1362))) ;
      }
      var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_label_nextCondition, operand_42023->mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1364)) COMMA_SOURCE_FILE_AT_LINE (1364))) ;
      ::routine_handleMidrangeInstructionList (inLexique,  operand_42023->mElseInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_elseBranchFinalBank,  var_cas_inShouldPreserveBank,  var_cas_elseContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1365)) ;
      const GGS_bool cond_47200 = (operand_42023->mElseInstructionList.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
      if (cond_47200.isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_label_endOfIfinstruction, operand_42023->mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1380)) COMMA_SOURCE_FILE_AT_LINE (1380))) ;
      }
    }
    const GGS_bool cond_47319 = (var_cas_elseBranchFinalBank).operator_isEqual (var_cas_thenBranchFinalBank) ;
    if (cond_47319.isBuiltAndTrue ()) {
      var_cas_ioCurrentBank = var_cas_elseBranchFinalBank ;
    }else if (cond_47319.isBuiltAndFalse ()) {
      operand_42023->mEndOfElsePartLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("This branch does not leave bank selection value as the first one does") COMMA_SOURCE_FILE_AT_LINE (1387)) ;
      var_cas_elseBranchFinalBank = GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (1387)) ;
    }
    var_cas_ioContinuesInSequence = (var_cas_thenContinuesInSequence).operator_or (var_cas_elseContinuesInSequence) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_do_while.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_do_while__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_do_while * operand_47754,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_47754 != NULL) {
    GGS_string var_cas_labelInstructionBegin = (GGS_string ("_label_")).operator_concat (var_cas_ioLocalLabelIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1409))) ;
    var_cas_ioLocalLabelIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (1409)) ;
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_labelInstructionBegin, operand_47754->mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1411)) COMMA_SOURCE_FILE_AT_LINE (1411))) ;
    GGS_uint  var_cas_finalBank = var_cas_ioCurrentBank ;
    ::routine_handleMidrangeInstructionList (inLexique,  operand_47754->mRepeatedInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_finalBank,  var_cas_inShouldPreserveBank,  var_cas_ioContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1414)) ;
    const GGS_bool cond_48910 = (var_cas_ioCurrentBank).operator_isNotEqual (var_cas_finalBank) ;
    if (cond_48910.isBuiltAndTrue ()) {
      operand_47754->mEndOfRepeatedInstructionList.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("This branch does not leave bank selection value unchanged") COMMA_SOURCE_FILE_AT_LINE (1430)) ;
    }
    {
      GGS_midrange_partList::cEnumerator enumerator_48957 (operand_47754->mWhilePartList, true) ;
      const GGS_midrange_partList::cElement * operand_48957 = NULL ;
      while (((operand_48957 = enumerator_48957.nextObject ()))) {
        macroValidPointer (operand_48957) ;
        const GGS_bool cond_49317 = (operand_48957->mInstructionList.reader_length ()).operator_isEqual (GGS_uint (0U)) ;
        if (cond_49317.isBuiltAndTrue ()) {
          { typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (operand_48957->mCondition.galgasObjectRunTimeInfo ()) ;
            if (method != NULL) {
              method (inLexique, operand_48957->mCondition (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (false), operand_47754->mInstructionLocation, var_cas_labelInstructionBegin, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1434)) ;
            }
          }
        }else if (cond_49317.isBuiltAndFalse ()) {
          GGS_string var_cas_nextBranchLabel = (GGS_string ("_label_")).operator_concat (var_cas_ioLocalLabelIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1446))) ;
          var_cas_ioLocalLabelIndex.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (1446)) ;
          { typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (operand_48957->mCondition.galgasObjectRunTimeInfo ()) ;
            if (method != NULL) {
              method (inLexique, operand_48957->mCondition (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true), operand_47754->mInstructionLocation, var_cas_nextBranchLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1447)) ;
            }
          }
          GGS_uint  var_cas_bank = var_cas_ioCurrentBank ;
          ::routine_handleMidrangeInstructionList (inLexique,  operand_48957->mInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_bank,  var_cas_inShouldPreserveBank,  var_cas_ioContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1459)) ;
          const GGS_bool cond_50247 = (var_cas_ioCurrentBank).operator_isNotEqual (var_cas_bank) ;
          if (cond_50247.isBuiltAndTrue ()) {
            operand_48957->mEndOfPartLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("This branch does not leave bank selection value unchanged") COMMA_SOURCE_FILE_AT_LINE (1475)) ;
          }
          var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (inLexique, operand_47754->mInstructionLocation, GGS_lstring ::constructor_new (inLexique, var_cas_labelInstructionBegin, operand_47754->mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1476)) COMMA_SOURCE_FILE_AT_LINE (1476))) ;
          var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_nextBranchLabel, operand_47754->mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (1477)) COMMA_SOURCE_FILE_AT_LINE (1477))) ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_IF_IncDec.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_IF_IncDec__build_midrange_ipic_instructionList (C_Compiler & inLexique,
                                const cPtr_midrange_instruction_IF_IncDec * operand_50711,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_50711 != NULL) {
    GGS_midrange_instruction_FD_base_code var_cas_baseCode ;
    const GGS_bool cond_51224 = operand_50711->mIncrement ;
    if (cond_51224.isBuiltAndTrue ()) {
      var_cas_baseCode = GGS_midrange_instruction_FD_base_code::constructor_INCFSZ (inLexique COMMA_SOURCE_FILE_AT_LINE (1500)) ;
    }else if (cond_51224.isBuiltAndFalse ()) {
      var_cas_baseCode = GGS_midrange_instruction_FD_base_code::constructor_DECFSZ (inLexique COMMA_SOURCE_FILE_AT_LINE (1502)) ;
    }
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_51511_0 ;
    { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (operand_50711->mRegisterExpression.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_50711->mRegisterExpression (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_51511_0 COMMA_SOURCE_FILE_AT_LINE (1506)) ;
      }
    }
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, operand_50711->mInstructionLocation, var_cas_baseCode, var_cas_IPICregisterDescription, operand_50711->m_W_isDestination COMMA_SOURCE_FILE_AT_LINE (1514))) ;
    GGS_bool var_cas_unusedContinuesInSequence = GGS_bool (true) ;
    { typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList method = findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (operand_50711->mInstruction.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, operand_50711->mInstruction (HERE), var_cas_inRoutineMap, var_cas_inRegisterTable, var_cas_inConstantMap, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inShouldPreserveBank, var_cas_unusedContinuesInSequence, var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1522)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "generateInterruptRoutineForControllerWithSharedRAM"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateInterruptRoutineForControllerWithSharedRAM (C_Compiler & inLexique,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_lstring   var_cas_inFirstSaveRegister,
                                const GGS_lstring   var_cas_inSecondSaveRegister,
                                const GGS_bool  var_cas_inNeedsToSavePCLATH,
                                const GGS_midrange_instructionList   var_cas_inInterruptRoutineInstructionList,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_constantMap   var_cas_inConstantMap,
                                const GGS_location   var_cas_inEndOfInterruptLocation,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_string & var_cas_ioGenerationOptimizationMessages
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateInterruptRoutineForControllerWithSharedRAM at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_uintlist  var_cas_registerAddressList ;
  GGS_uint  var_cas_size ;
  GGS_bitSliceTable  automatic_var_52876_0 ;
  GGS_string automatic_var_52876_1 ;
  if (var_cas_inRegisterTable.isBuilt ()) {
    var_cas_inRegisterTable (HERE)->method_searchKey (inLexique, var_cas_inFirstSaveRegister, var_cas_registerAddressList, var_cas_size, automatic_var_52876_0, automatic_var_52876_1 COMMA_SOURCE_FILE_AT_LINE (1556)) ;
  }
  GGS_bool var_cas_accessibleFromBank0 = GGS_bool (false) ;
  {
    GGS_uintlist::cEnumerator enumerator_52947 (var_cas_registerAddressList, true) ;
    const GGS_uintlist::cElement * operand_52947 = NULL ;
    while (((operand_52947 = enumerator_52947.nextObject ()))
        && ((var_cas_accessibleFromBank0).operator_not ().isBuiltAndTrue ())) {
      macroValidPointer (operand_52947) ;
      var_cas_accessibleFromBank0 = ((operand_52947->mValue).operator_and (GGS_uint (3968U))).operator_isEqual (GGS_uint (0U)) ;
    }
  }
  const GGS_bool cond_53196 = (var_cas_accessibleFromBank0).operator_not () ;
  if (cond_53196.isBuiltAndTrue ()) {
    var_cas_inFirstSaveRegister.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (var_cas_inFirstSaveRegister)).operator_concat (GGS_string ("' variable cannot be accessed from bank 0")) COMMA_SOURCE_FILE_AT_LINE (1563)) ;
  }
  const GGS_bool cond_53378 = (var_cas_inNeedsToSavePCLATH).operator_and ((var_cas_size).operator_isNotEqual (GGS_uint (2U))) ;
  if (cond_53378.isBuiltAndTrue ()) {
    var_cas_inFirstSaveRegister.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_inFirstSaveRegister)).operator_concat (GGS_string ("' variable size is "))).operator_concat (var_cas_size.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1565)))).operator_concat (GGS_string (" (it should be 2)")) COMMA_SOURCE_FILE_AT_LINE (1566)) ;
  }else if (cond_53378.isBuiltAndFalse ()) {
    const GGS_bool cond_53554 = ((var_cas_inNeedsToSavePCLATH).operator_not ()).operator_and ((var_cas_size).operator_isNotEqual (GGS_uint (1U))) ;
    if (cond_53554.isBuiltAndTrue ()) {
      var_cas_inFirstSaveRegister.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_inFirstSaveRegister)).operator_concat (GGS_string ("' variable size is "))).operator_concat (var_cas_size.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1567)))).operator_concat (GGS_string (" (it should be 1)")) COMMA_SOURCE_FILE_AT_LINE (1568)) ;
    }
  }
  GGS_bitSliceTable  automatic_var_53752_0 ;
  GGS_string automatic_var_53752_1 ;
  if (var_cas_inRegisterTable.isBuilt ()) {
    var_cas_inRegisterTable (HERE)->method_searchKey (inLexique, var_cas_inSecondSaveRegister, var_cas_registerAddressList, var_cas_size, automatic_var_53752_0, automatic_var_53752_1 COMMA_SOURCE_FILE_AT_LINE (1570)) ;
  }
  GGS_uint  var_cas_bankAccessibility = GGS_uint (0U) ;
  {
    GGS_uintlist::cEnumerator enumerator_53817 (var_cas_registerAddressList, true) ;
    const GGS_uintlist::cElement * operand_53817 = NULL ;
    while (((operand_53817 = enumerator_53817.nextObject ()))) {
      macroValidPointer (operand_53817) ;
      var_cas_bankAccessibility = (var_cas_bankAccessibility).operator_or (GGS_uint (1U).left_shift_operation (inLexique, operand_53817->mValue.right_shift_operation (inLexique, GGS_uint (7U) COMMA_SOURCE_FILE_AT_LINE (1573)) COMMA_SOURCE_FILE_AT_LINE (1573))) ;
    }
  }
  const GGS_bool cond_54084 = (var_cas_bankAccessibility.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (1575))).operator_isNotEqual (GGS_uint (1U).left_shift_operation (inLexique, var_cas_inTotalBankCount COMMA_SOURCE_FILE_AT_LINE (1575))) ;
  if (cond_54084.isBuiltAndTrue ()) {
    var_cas_inSecondSaveRegister.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (var_cas_inSecondSaveRegister)).operator_concat (GGS_string ("' variable cannot be accessed from any bank")) COMMA_SOURCE_FILE_AT_LINE (1577)) ;
  }
  const GGS_bool cond_54242 = (var_cas_size).operator_isNotEqual (GGS_uint (1U)) ;
  if (cond_54242.isBuiltAndTrue ()) {
    var_cas_inSecondSaveRegister.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_inSecondSaveRegister)).operator_concat (GGS_string ("' variable size is "))).operator_concat (var_cas_size.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1579)))).operator_concat (GGS_string (" (it should be 1)")) COMMA_SOURCE_FILE_AT_LINE (1580)) ;
  }
  const GGS_bool cond_59844 = (GGS_uint ::constructor_errorCount (inLexique COMMA_SOURCE_FILE_AT_LINE (1582))).operator_isEqual (GGS_uint (0U)) ;
  if (cond_59844.isBuiltAndTrue ()) {
    GGS_registerExpression  var_cas_first_register = GGS_registerExpression ::constructor_new (inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (inLexique, GGS_uint (0U), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1583)) COMMA_SOURCE_FILE_AT_LINE (1583)) ;
    GGS_midrange_ipic_registerExpression var_cas_first_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_54633_0 ;
    { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (var_cas_first_register.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, var_cas_first_register (HERE), var_cas_inTotalBankCount, GGS_uint (0U), var_cas_inRegisterTable, var_cas_first_IPICregisterDescription, automatic_var_54633_0 COMMA_SOURCE_FILE_AT_LINE (1585)) ;
      }
    }
    GGS_registerExpression  var_cas_second_register = GGS_registerExpression ::constructor_new (inLexique, var_cas_inSecondSaveRegister, GGS_luint ::constructor_new (inLexique, GGS_uint (0U), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1592)) COMMA_SOURCE_FILE_AT_LINE (1592)) ;
    GGS_midrange_ipic_registerExpression var_cas_second_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_54962_0 ;
    { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (var_cas_second_register.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, var_cas_second_register (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (1596)), var_cas_inRegisterTable, var_cas_second_IPICregisterDescription, automatic_var_54962_0 COMMA_SOURCE_FILE_AT_LINE (1594)) ;
      }
    }
    GGS_registerExpression  var_cas_STATUS_register = GGS_registerExpression ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("STATUS"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1602)), GGS_luint ::constructor_new (inLexique, GGS_uint (0U), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1602)) COMMA_SOURCE_FILE_AT_LINE (1602)) ;
    GGS_midrange_ipic_registerExpression var_cas_STATUS_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_55338_0 ;
    { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (var_cas_STATUS_register.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, var_cas_STATUS_register (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (1606)), var_cas_inRegisterTable, var_cas_STATUS_IPICregisterDescription, automatic_var_55338_0 COMMA_SOURCE_FILE_AT_LINE (1604)) ;
      }
    }
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_SOURCE_FILE_AT_LINE (1611)), var_cas_second_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (1611))) ;
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (inLexique COMMA_SOURCE_FILE_AT_LINE (1612)), var_cas_STATUS_IPICregisterDescription, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (1612))) ;
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_CLRF (inLexique COMMA_SOURCE_FILE_AT_LINE (1613)), var_cas_STATUS_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (1613))) ;
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_SOURCE_FILE_AT_LINE (1614)), var_cas_first_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (1614))) ;
    const GGS_bool cond_57268 = var_cas_inNeedsToSavePCLATH ;
    if (cond_57268.isBuiltAndTrue ()) {
      GGS_registerExpression  var_cas_first_register_second_byte = GGS_registerExpression ::constructor_new (inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (inLexique, GGS_uint (1U), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1616)) COMMA_SOURCE_FILE_AT_LINE (1616)) ;
      GGS_midrange_ipic_registerExpression var_cas_first_var_second_byte_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_56376_0 ;
      { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (var_cas_first_register_second_byte.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, var_cas_first_register_second_byte (HERE), var_cas_inTotalBankCount, GGS_uint (0U), var_cas_inRegisterTable, var_cas_first_var_second_byte_IPICregisterDescription, automatic_var_56376_0 COMMA_SOURCE_FILE_AT_LINE (1618)) ;
        }
      }
      GGS_registerExpression  var_cas_PCLATH_register = GGS_registerExpression ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("PCLATH"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1626)), GGS_luint ::constructor_new (inLexique, GGS_uint (0U), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1626)) COMMA_SOURCE_FILE_AT_LINE (1626)) ;
      GGS_midrange_ipic_registerExpression var_cas_PCLATH_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_56772_0 ;
      { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (var_cas_PCLATH_register.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, var_cas_PCLATH_register (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (1630)), var_cas_inRegisterTable, var_cas_PCLATH_IPICregisterDescription, automatic_var_56772_0 COMMA_SOURCE_FILE_AT_LINE (1628)) ;
        }
      }
      var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_MOVF (inLexique COMMA_SOURCE_FILE_AT_LINE (1635)), var_cas_PCLATH_IPICregisterDescription, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (1635))) ;
      var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_SOURCE_FILE_AT_LINE (1636)), var_cas_first_var_second_byte_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (1636))) ;
      var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_CLRF (inLexique COMMA_SOURCE_FILE_AT_LINE (1637)), var_cas_PCLATH_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (1637))) ;
    }
    GGS_bool var_cas_continuesInSequence ;
    GGS_uint  var_cas_currentBank = GGS_uint (0U) ;
    ::routine_handleMidrangeInstructionList (inLexique,  var_cas_inInterruptRoutineInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioGenerationOptimizationMessages,  var_cas_inTotalBankCount,  var_cas_currentBank,  GGS_bool (true),  var_cas_continuesInSequence,  GGS_routineKind::constructor_interruptRoutine (inLexique COMMA_SOURCE_FILE_AT_LINE (1654)) COMMA_SOURCE_FILE_AT_LINE (1642)) ;
    const GGS_bool cond_57911 = (var_cas_continuesInSequence).operator_not () ;
    if (cond_57911.isBuiltAndTrue ()) {
      var_cas_inEndOfInterruptLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("execution cannot reach the end of the interrupt routine") COMMA_SOURCE_FILE_AT_LINE (1658)) ;
    }
    const GGS_bool cond_59072 = var_cas_inNeedsToSavePCLATH ;
    if (cond_59072.isBuiltAndTrue ()) {
      GGS_registerExpression  var_cas_first_register_second_byte = GGS_registerExpression ::constructor_new (inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (inLexique, GGS_uint (1U), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1660)) COMMA_SOURCE_FILE_AT_LINE (1660)) ;
      GGS_midrange_ipic_registerExpression var_cas_first_var_second_byte_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_58334_0 ;
      { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (var_cas_first_register_second_byte.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, var_cas_first_register_second_byte (HERE), var_cas_inTotalBankCount, GGS_uint (0U), var_cas_inRegisterTable, var_cas_first_var_second_byte_IPICregisterDescription, automatic_var_58334_0 COMMA_SOURCE_FILE_AT_LINE (1662)) ;
        }
      }
      GGS_registerExpression  var_cas_PCLATH_register = GGS_registerExpression ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("PCLATH"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1670)), GGS_luint ::constructor_new (inLexique, GGS_uint (0U), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1670)) COMMA_SOURCE_FILE_AT_LINE (1670)) ;
      GGS_midrange_ipic_registerExpression var_cas_PCLATH_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_58730_0 ;
      { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (var_cas_PCLATH_register.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, var_cas_PCLATH_register (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (1674)), var_cas_inRegisterTable, var_cas_PCLATH_IPICregisterDescription, automatic_var_58730_0 COMMA_SOURCE_FILE_AT_LINE (1672)) ;
        }
      }
      var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_MOVF (inLexique COMMA_SOURCE_FILE_AT_LINE (1679)), var_cas_first_var_second_byte_IPICregisterDescription, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (1679))) ;
      var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_SOURCE_FILE_AT_LINE (1680)), var_cas_PCLATH_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (1680))) ;
    }
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (inLexique COMMA_SOURCE_FILE_AT_LINE (1683)), var_cas_first_IPICregisterDescription, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (1683))) ;
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_SOURCE_FILE_AT_LINE (1684)), var_cas_STATUS_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (1684))) ;
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (inLexique COMMA_SOURCE_FILE_AT_LINE (1685)), var_cas_second_IPICregisterDescription, GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1685))) ;
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (inLexique COMMA_SOURCE_FILE_AT_LINE (1686)), var_cas_second_IPICregisterDescription, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (1686))) ;
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_RETFIE ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1688))) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateInterruptRoutineForControllerWithSharedRAM\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "generateInterruptRoutineForControllerWithoutSharedRAM"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateInterruptRoutineForControllerWithoutSharedRAM (C_Compiler & inLexique,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_lstring   var_cas_inFirstSaveRegister,
                                const GGS_lstring   var_cas_inSecondSaveRegister,
                                const GGS_bool  var_cas_inNeedsToSavePCLATH,
                                const GGS_midrange_instructionList   var_cas_inInterruptRoutineInstructionList,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_constantMap   var_cas_inConstantMap,
                                const GGS_location   var_cas_inEndOfInterruptLocation,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_string & var_cas_ioGenerationOptimizationMessages
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateInterruptRoutineForControllerWithoutSharedRAM at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_uintlist  var_cas_registerAddressList ;
  GGS_uint  var_cas_size ;
  GGS_bitSliceTable  automatic_var_60678_0 ;
  GGS_string automatic_var_60678_1 ;
  if (var_cas_inRegisterTable.isBuilt ()) {
    var_cas_inRegisterTable (HERE)->method_searchKey (inLexique, var_cas_inFirstSaveRegister, var_cas_registerAddressList, var_cas_size, automatic_var_60678_0, automatic_var_60678_1 COMMA_SOURCE_FILE_AT_LINE (1711)) ;
  }
  GGS_bool var_cas_accessibleFromBank0 = GGS_bool (false) ;
  GGS_uint  var_cas_offset = GGS_uint (0U) ;
  {
    GGS_uintlist::cEnumerator enumerator_60783 (var_cas_registerAddressList, true) ;
    const GGS_uintlist::cElement * operand_60783 = NULL ;
    while (((operand_60783 = enumerator_60783.nextObject ()))
        && ((var_cas_accessibleFromBank0).operator_not ().isBuiltAndTrue ())) {
      macroValidPointer (operand_60783) ;
      var_cas_offset = (operand_60783->mValue).operator_and (GGS_uint (127U)) ;
      var_cas_accessibleFromBank0 = ((operand_60783->mValue).operator_and (GGS_uint (3968U))).operator_isEqual (GGS_uint (0U)) ;
    }
  }
  const GGS_bool cond_61062 = (var_cas_accessibleFromBank0).operator_not () ;
  if (cond_61062.isBuiltAndTrue ()) {
    var_cas_inFirstSaveRegister.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (var_cas_inFirstSaveRegister)).operator_concat (GGS_string ("' variable cannot be accessed from bank 0")) COMMA_SOURCE_FILE_AT_LINE (1720)) ;
  }
  const GGS_bool cond_61244 = (var_cas_inNeedsToSavePCLATH).operator_and ((var_cas_size).operator_isNotEqual (GGS_uint (3U))) ;
  if (cond_61244.isBuiltAndTrue ()) {
    var_cas_inFirstSaveRegister.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_inFirstSaveRegister)).operator_concat (GGS_string ("' variable size is "))).operator_concat (var_cas_size.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1722)))).operator_concat (GGS_string (" (it should be 3)")) COMMA_SOURCE_FILE_AT_LINE (1723)) ;
  }else if (cond_61244.isBuiltAndFalse ()) {
    const GGS_bool cond_61420 = ((var_cas_inNeedsToSavePCLATH).operator_not ()).operator_and ((var_cas_size).operator_isNotEqual (GGS_uint (2U))) ;
    if (cond_61420.isBuiltAndTrue ()) {
      var_cas_inFirstSaveRegister.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_inFirstSaveRegister)).operator_concat (GGS_string ("' variable size is "))).operator_concat (var_cas_size.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1724)))).operator_concat (GGS_string (" (it should be 2)")) COMMA_SOURCE_FILE_AT_LINE (1725)) ;
    }
  }
  GGS_uintlist  var_cas_saveStatusRegisterAddressList = var_cas_registerAddressList ;
  GGS_bitSliceTable  automatic_var_61683_0 ;
  GGS_string automatic_var_61683_1 ;
  if (var_cas_inRegisterTable.isBuilt ()) {
    var_cas_inRegisterTable (HERE)->method_searchKey (inLexique, var_cas_inSecondSaveRegister, var_cas_registerAddressList, var_cas_size, automatic_var_61683_0, automatic_var_61683_1 COMMA_SOURCE_FILE_AT_LINE (1728)) ;
  }
  var_cas_saveStatusRegisterAddressList = (var_cas_saveStatusRegisterAddressList).operator_concat (var_cas_registerAddressList) ;
  const GGS_bool cond_61927 = (var_cas_size).operator_isNotEqual (GGS_uint (1U)) ;
  if (cond_61927.isBuiltAndTrue ()) {
    var_cas_inSecondSaveRegister.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("the '")).operator_concat (var_cas_inSecondSaveRegister)).operator_concat (GGS_string ("' variable size is "))).operator_concat (var_cas_size.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1731)))).operator_concat (GGS_string (" (it should be 1)")) COMMA_SOURCE_FILE_AT_LINE (1732)) ;
  }
  GGS_bool var_cas_accessibleFromBank1 = GGS_bool (false) ;
  {
    GGS_uintlist::cEnumerator enumerator_62051 (var_cas_registerAddressList, true) ;
    const GGS_uintlist::cElement * operand_62051 = NULL ;
    while (((operand_62051 = enumerator_62051.nextObject ()))
        && ((var_cas_accessibleFromBank1).operator_not ().isBuiltAndTrue ())) {
      macroValidPointer (operand_62051) ;
      var_cas_accessibleFromBank1 = ((operand_62051->mValue).operator_and (GGS_uint (3968U))).operator_isEqual (GGS_uint (128U)) ;
    }
  }
  const GGS_bool cond_62305 = (var_cas_accessibleFromBank1).operator_not () ;
  if (cond_62305.isBuiltAndTrue ()) {
    var_cas_inSecondSaveRegister.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (var_cas_inSecondSaveRegister)).operator_concat (GGS_string ("' variable cannot be accessed from bank 1")) COMMA_SOURCE_FILE_AT_LINE (1740)) ;
  }
  GGS_bool var_cas_offsetOk = GGS_bool (true) ;
  {
    GGS_uintlist::cEnumerator enumerator_62462 (var_cas_registerAddressList, true) ;
    const GGS_uintlist::cElement * operand_62462 = NULL ;
    while (((operand_62462 = enumerator_62462.nextObject ()))
        && (var_cas_offsetOk.isBuiltAndTrue ())) {
      macroValidPointer (operand_62462) ;
      var_cas_offsetOk = (var_cas_offset).operator_isEqual ((operand_62462->mValue).operator_and (GGS_uint (127U))) ;
      const GGS_bool cond_62831 = (var_cas_offsetOk).operator_not () ;
      if (cond_62831.isBuiltAndTrue ()) {
        var_cas_inSecondSaveRegister.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((((((GGS_string ("the '")).operator_concat (var_cas_inSecondSaveRegister)).operator_concat (GGS_string ("' variable has an offset equal to "))).operator_concat ((operand_62462->mValue).operator_and (GGS_uint (127U)).reader_hexString (inLexique COMMA_SOURCE_FILE_AT_LINE (1747)))).operator_concat (GGS_string (", while '"))).operator_concat (var_cas_inFirstSaveRegister)).operator_concat (GGS_string ("' has an offset equal to "))).operator_concat (var_cas_offset.reader_hexString (inLexique COMMA_SOURCE_FILE_AT_LINE (1748)))).operator_concat (GGS_string (" (tthe two offsets should be equal)")) COMMA_SOURCE_FILE_AT_LINE (1749)) ;
      }
    }
  }
  const GGS_bool cond_68510 = (GGS_uint ::constructor_errorCount (inLexique COMMA_SOURCE_FILE_AT_LINE (1752))).operator_isEqual (GGS_uint (0U)) ;
  if (cond_68510.isBuiltAndTrue ()) {
    GGS_registerExpression  var_cas_first_register = GGS_registerExpression ::constructor_new (inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (inLexique, GGS_uint (0U), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1753)) COMMA_SOURCE_FILE_AT_LINE (1753)) ;
    GGS_midrange_ipic_registerExpression var_cas_first_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_63237_0 ;
    { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (var_cas_first_register.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, var_cas_first_register (HERE), var_cas_inTotalBankCount, GGS_uint (0U), var_cas_inRegisterTable, var_cas_first_IPICregisterDescription, automatic_var_63237_0 COMMA_SOURCE_FILE_AT_LINE (1755)) ;
      }
    }
    GGS_registerExpression  var_cas_first_register_second_byte = GGS_registerExpression ::constructor_new (inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (inLexique, GGS_uint (1U), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1762)) COMMA_SOURCE_FILE_AT_LINE (1762)) ;
    GGS_midrange_ipic_registerExpression var_cas_first_reg_second_byte_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_63607_0 ;
    { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (var_cas_first_register_second_byte.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, var_cas_first_register_second_byte (HERE), var_cas_inTotalBankCount, GGS_uint (0U), var_cas_inRegisterTable, var_cas_first_reg_second_byte_IPICregisterDescription, automatic_var_63607_0 COMMA_SOURCE_FILE_AT_LINE (1764)) ;
      }
    }
    GGS_registerExpression  var_cas_STATUS_register = GGS_registerExpression ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("STATUS"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1772)), GGS_luint ::constructor_new (inLexique, GGS_uint (0U), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1772)) COMMA_SOURCE_FILE_AT_LINE (1772)) ;
    GGS_midrange_ipic_registerExpression var_cas_STATUS_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_63983_0 ;
    { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (var_cas_STATUS_register.galgasObjectRunTimeInfo ()) ;
      if (method != NULL) {
        method (inLexique, var_cas_STATUS_register (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (1776)), var_cas_inRegisterTable, var_cas_STATUS_IPICregisterDescription, automatic_var_63983_0 COMMA_SOURCE_FILE_AT_LINE (1774)) ;
      }
    }
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_SOURCE_FILE_AT_LINE (1781)), var_cas_first_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (1781))) ;
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (inLexique COMMA_SOURCE_FILE_AT_LINE (1782)), var_cas_STATUS_IPICregisterDescription, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (1782))) ;
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_CLRF (inLexique COMMA_SOURCE_FILE_AT_LINE (1783)), var_cas_STATUS_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (1783))) ;
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_SOURCE_FILE_AT_LINE (1784)), var_cas_first_reg_second_byte_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (1784))) ;
    const GGS_bool cond_65924 = var_cas_inNeedsToSavePCLATH ;
    if (cond_65924.isBuiltAndTrue ()) {
      GGS_registerExpression  var_cas_first_register_third_byte = GGS_registerExpression ::constructor_new (inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (inLexique, GGS_uint (2U), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1786)) COMMA_SOURCE_FILE_AT_LINE (1786)) ;
      GGS_midrange_ipic_registerExpression var_cas_first_var_third_byte_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_65033_0 ;
      { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (var_cas_first_register_third_byte.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, var_cas_first_register_third_byte (HERE), var_cas_inTotalBankCount, GGS_uint (0U), var_cas_inRegisterTable, var_cas_first_var_third_byte_IPICregisterDescription, automatic_var_65033_0 COMMA_SOURCE_FILE_AT_LINE (1788)) ;
        }
      }
      GGS_registerExpression  var_cas_PCLATH_register = GGS_registerExpression ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("PCLATH"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1796)), GGS_luint ::constructor_new (inLexique, GGS_uint (0U), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1796)) COMMA_SOURCE_FILE_AT_LINE (1796)) ;
      GGS_midrange_ipic_registerExpression var_cas_PCLATH_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_65429_0 ;
      { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (var_cas_PCLATH_register.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, var_cas_PCLATH_register (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (1800)), var_cas_inRegisterTable, var_cas_PCLATH_IPICregisterDescription, automatic_var_65429_0 COMMA_SOURCE_FILE_AT_LINE (1798)) ;
        }
      }
      var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_MOVF (inLexique COMMA_SOURCE_FILE_AT_LINE (1805)), var_cas_PCLATH_IPICregisterDescription, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (1805))) ;
      var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_SOURCE_FILE_AT_LINE (1806)), var_cas_first_var_third_byte_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (1806))) ;
      var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_CLRF (inLexique COMMA_SOURCE_FILE_AT_LINE (1807)), var_cas_PCLATH_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (1807))) ;
    }
    GGS_bool var_cas_continuesInSequence ;
    GGS_uint  var_cas_currentBank = GGS_uint (0U) ;
    ::routine_handleMidrangeInstructionList (inLexique,  var_cas_inInterruptRoutineInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioGenerationOptimizationMessages,  var_cas_inTotalBankCount,  var_cas_currentBank,  GGS_bool (true),  var_cas_continuesInSequence,  GGS_routineKind::constructor_interruptRoutine (inLexique COMMA_SOURCE_FILE_AT_LINE (1824)) COMMA_SOURCE_FILE_AT_LINE (1812)) ;
    const GGS_bool cond_66567 = (var_cas_continuesInSequence).operator_not () ;
    if (cond_66567.isBuiltAndTrue ()) {
      var_cas_inEndOfInterruptLocation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("execution cannot reach the end of the interrupt routine") COMMA_SOURCE_FILE_AT_LINE (1828)) ;
    }
    const GGS_bool cond_67725 = var_cas_inNeedsToSavePCLATH ;
    if (cond_67725.isBuiltAndTrue ()) {
      GGS_registerExpression  var_cas_first_register_third_byte = GGS_registerExpression ::constructor_new (inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (inLexique, GGS_uint (2U), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1830)) COMMA_SOURCE_FILE_AT_LINE (1830)) ;
      GGS_midrange_ipic_registerExpression var_cas_first_var_second_byte_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_66987_0 ;
      { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (var_cas_first_register_third_byte.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, var_cas_first_register_third_byte (HERE), var_cas_inTotalBankCount, GGS_uint (0U), var_cas_inRegisterTable, var_cas_first_var_second_byte_IPICregisterDescription, automatic_var_66987_0 COMMA_SOURCE_FILE_AT_LINE (1832)) ;
        }
      }
      GGS_registerExpression  var_cas_PCLATH_register = GGS_registerExpression ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("PCLATH"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1840)), GGS_luint ::constructor_new (inLexique, GGS_uint (0U), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1840)) COMMA_SOURCE_FILE_AT_LINE (1840)) ;
      GGS_midrange_ipic_registerExpression var_cas_PCLATH_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_67383_0 ;
      { typeCategoryMethod__registerExpression__resolveMidrangeAccess method = findCategoryMethod__registerExpression__resolveMidrangeAccess (var_cas_PCLATH_register.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, var_cas_PCLATH_register (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (1844)), var_cas_inRegisterTable, var_cas_PCLATH_IPICregisterDescription, automatic_var_67383_0 COMMA_SOURCE_FILE_AT_LINE (1842)) ;
        }
      }
      var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_MOVF (inLexique COMMA_SOURCE_FILE_AT_LINE (1849)), var_cas_first_var_second_byte_IPICregisterDescription, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (1849))) ;
      var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_SOURCE_FILE_AT_LINE (1850)), var_cas_PCLATH_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (1850))) ;
    }
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (inLexique COMMA_SOURCE_FILE_AT_LINE (1853)), var_cas_first_reg_second_byte_IPICregisterDescription, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (1853))) ;
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (inLexique COMMA_SOURCE_FILE_AT_LINE (1854)), var_cas_STATUS_IPICregisterDescription COMMA_SOURCE_FILE_AT_LINE (1854))) ;
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (inLexique COMMA_SOURCE_FILE_AT_LINE (1855)), var_cas_first_IPICregisterDescription, GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1855))) ;
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (inLexique, GGS_location (inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (inLexique COMMA_SOURCE_FILE_AT_LINE (1856)), var_cas_first_IPICregisterDescription, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (1856))) ;
    var_cas_ioGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_RETFIE ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1858))) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateInterruptRoutineForControllerWithoutSharedRAM\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of routine "build_midrange_assembly_instruction_list"    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_midrange_assembly_instruction_list (C_Compiler & inLexique,
                                const GGS_uint   var_cas_inTotalPageCount,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_sint   var_cas_inROMSize,
                                const GGS_bool  var_cas_inHasSharedRAMBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_midrange_model  var_cas_inPiccoloModel,
                                const GGS_bool  var_cas_inHasInterrupt,
                                GGS_midrange_ipic_instructionList  & var_cas_outGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_midrange_assembly_instruction_list at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_generationOptimizationMessages = GGS_string ("") ;
  GGS_routineMap  var_cas_routineMap = GGS_routineMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1877)) ;
  {
    GGS_midrange_routineDefinitionList::cEnumerator enumerator_69079 (var_cas_inPiccoloModel.reader_mRoutineDefinitionList (inLexique COMMA_SOURCE_FILE_AT_LINE (1878)), true) ;
    const GGS_midrange_routineDefinitionList::cElement * operand_69079 = NULL ;
    while (((operand_69079 = enumerator_69079.nextObject ()))) {
      macroValidPointer (operand_69079) ;
      const GGS_bool cond_69293 = ((operand_69079->mRequiredBank.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (1879))).operator_isNotEqual (GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (1879)))).operator_and ((operand_69079->mRequiredBank.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (1879))).operator_strictSup (GGS_uint (15U))) ;
      if (cond_69293.isBuiltAndTrue ()) {
        operand_69079->mRequiredBank.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the required bank value should be lower or equal to 15") COMMA_SOURCE_FILE_AT_LINE (1881)) ;
      }
      const GGS_bool cond_69471 = ((operand_69079->mReturnedBank.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (1882))).operator_isNotEqual (GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (1882)))).operator_and ((operand_69079->mReturnedBank.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (1882))).operator_strictSup (GGS_uint (15U))) ;
      if (cond_69471.isBuiltAndTrue ()) {
        operand_69079->mReturnedBank.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the returned bank value should be lower or equal to 15") COMMA_SOURCE_FILE_AT_LINE (1884)) ;
      }
      var_cas_routineMap.modifier_insertKey (inLexique, operand_69079->mRoutineName, operand_69079->mIsNoReturn, operand_69079->mRequiredBank.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (1885)), operand_69079->mReturnedBank.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (1885)), operand_69079->mPreservesBank COMMA_SOURCE_FILE_AT_LINE (1885)) ;
    }
  }
  GGS_constantMap  var_cas_constantMap = GGS_constantMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1888)) ;
  GGS_lstring  var_cas_romSizeString = GGS_lstring ::constructor_new (inLexique, GGS_string ("ROM_SIZE"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1890)) ;
  var_cas_constantMap.modifier_insertKey (inLexique, var_cas_romSizeString, var_cas_inROMSize COMMA_SOURCE_FILE_AT_LINE (1891)) ;
  {
    GGS_constantDefinitionList::cEnumerator enumerator_69879 (var_cas_inPiccoloModel.reader_mConstantDefinitionList (inLexique COMMA_SOURCE_FILE_AT_LINE (1893)), true) ;
    const GGS_constantDefinitionList::cElement * operand_69879 = NULL ;
    while (((operand_69879 = enumerator_69879.nextObject ()))) {
      macroValidPointer (operand_69879) ;
      GGS_sint  var_cas_result ;
      { typeCategoryMethod__immediatExpression__eval method = findCategoryMethod__immediatExpression__eval (operand_69879->mExpression.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_69879->mExpression (HERE), var_cas_inRegisterTable, var_cas_constantMap, var_cas_result COMMA_SOURCE_FILE_AT_LINE (1894)) ;
        }
      }
      const GGS_bool cond_70180 = var_cas_inRegisterTable.reader_hasKey (operand_69879->mConstantName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1895))) ;
      if (cond_70180.isBuiltAndTrue ()) {
        operand_69879->mConstantName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("'")).operator_concat (operand_69879->mConstantName)).operator_concat (GGS_string ("' is already declared as ram register or special register")) COMMA_SOURCE_FILE_AT_LINE (1897)) ;
      }else if (cond_70180.isBuiltAndFalse ()) {
        var_cas_constantMap.modifier_insertKey (inLexique, operand_69879->mConstantName, var_cas_result COMMA_SOURCE_FILE_AT_LINE (1898)) ;
      }
    }
  }
  const GGS_bool cond_70465 = gOption_piccolo_5F_options_ouputListingFile.reader_value () ;
  if (cond_70465.isBuiltAndTrue ()) {
    ::routine_print_constant_definition (inLexique,  var_cas_constantMap,  var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1903)) ;
  }
  const GGS_bool cond_71048 = var_cas_routineMap.reader_hasKey (GGS_string ("main")) ;
  if (cond_71048.isBuiltAndTrue ()) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  automatic_var_70716_0 ;
    GGS_bool automatic_var_70716_1 ;
    if (var_cas_routineMap.isBuilt ()) {
      var_cas_routineMap (HERE)->method_searchKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("main"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1912)), var_cas_isNoReturn, var_cas_requiredBank, automatic_var_70716_0, automatic_var_70716_1 COMMA_SOURCE_FILE_AT_LINE (1912)) ;
    }
    const GGS_bool cond_70870 = (var_cas_isNoReturn).operator_not () ;
    if (cond_70870.isBuiltAndTrue ()) {
      GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the \"main\" should be declared with \"noreturn\" qualifier: \"noreturn main bank:requires 0\"") COMMA_SOURCE_FILE_AT_LINE (1915)) ;
    }
    const GGS_bool cond_71036 = (var_cas_requiredBank).operator_isNotEqual (GGS_uint (0U)) ;
    if (cond_71036.isBuiltAndTrue ()) {
      GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the \"main\" should be declared with \"requiresbank 0\" qualifier: \"noreturn main bank:requires 0\"") COMMA_SOURCE_FILE_AT_LINE (1918)) ;
    }
  }else if (cond_71048.isBuiltAndFalse ()) {
    var_cas_inPiccoloModel.reader_mEndOfProgram (inLexique COMMA_SOURCE_FILE_AT_LINE (1920)).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the program should declare the \"main\" routine") COMMA_SOURCE_FILE_AT_LINE (1921)) ;
  }
  GGS_bool var_cas_needsToSavePCLATH = GGS_bool (false) ;
  {
    GGS_midrange_routineDefinitionList::cEnumerator enumerator_71295 (var_cas_inPiccoloModel.reader_mRoutineDefinitionList (inLexique COMMA_SOURCE_FILE_AT_LINE (1924)), true) ;
    const GGS_midrange_routineDefinitionList::cElement * operand_71295 = NULL ;
    while (((operand_71295 = enumerator_71295.nextObject ()))) {
      macroValidPointer (operand_71295) ;
      const GGS_bool cond_71407 = (operand_71295->mPage.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (1925))).operator_strictSup (GGS_uint (0U)) ;
      if (cond_71407.isBuiltAndTrue ()) {
        var_cas_needsToSavePCLATH = GGS_bool (true) ;
      }
      const GGS_bool cond_71600 = (operand_71295->mPage.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (1928))).operator_supOrEqual (var_cas_inTotalPageCount) ;
      if (cond_71600.isBuiltAndTrue ()) {
        operand_71295->mPage.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("invalid value (")).operator_concat (operand_71295->mPage.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (1929)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1929)))).operator_concat (GGS_string ("); the device has "))).operator_concat (var_cas_inTotalPageCount.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1929)))).operator_concat (GGS_string (" 2k page(s) on rom")) COMMA_SOURCE_FILE_AT_LINE (1930)) ;
      }
    }
  }
  const GGS_bool cond_72050 = var_cas_needsToSavePCLATH ;
  if (cond_72050.isBuiltAndTrue ()) {
    var_cas_needsToSavePCLATH = GGS_bool (false) ;
    {
      GGS_midrange_interruptDefinitionList::cEnumerator enumerator_71802 (var_cas_inPiccoloModel.reader_mInterruptDefinitionList (inLexique COMMA_SOURCE_FILE_AT_LINE (1935)), true) ;
      const GGS_midrange_interruptDefinitionList::cElement * operand_71802 = NULL ;
      while (((operand_71802 = enumerator_71802.nextObject ()))
          && ((var_cas_needsToSavePCLATH).operator_not ().isBuiltAndTrue ())) {
        macroValidPointer (operand_71802) ;
        {
          GGS_midrange_instructionList::cEnumerator enumerator_71904 (operand_71802->mInstructionList, true) ;
          const GGS_midrange_instructionList::cElement * operand_71904 = NULL ;
          while (((operand_71904 = enumerator_71904.nextObject ()))
              && ((var_cas_needsToSavePCLATH).operator_not ().isBuiltAndTrue ())) {
            macroValidPointer (operand_71904) ;
            { typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL method = findCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL (operand_71904->mInstruction.galgasObjectRunTimeInfo ()) ;
              if (method != NULL) {
                method (inLexique, operand_71904->mInstruction (HERE), var_cas_needsToSavePCLATH COMMA_SOURCE_FILE_AT_LINE (1937)) ;
              }
            }
          }
        }
      }
    }
  }
  var_cas_outGeneratedInstructionList = GGS_midrange_ipic_instructionList ::constructor_emptyList () ;
  GGS_uint  var_cas_localLabelIndex = GGS_uint (0U) ;
  var_cas_outGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_JUMP ::constructor_new (inLexique, GGS_location (inLexique), GGS_lstring ::constructor_new (inLexique, GGS_string ("main"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1947)), GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_SOURCE_FILE_AT_LINE (1948)), GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_SOURCE_FILE_AT_LINE (1949)) COMMA_SOURCE_FILE_AT_LINE (1945))) ;
  const GGS_bool cond_73586 = var_cas_inHasInterrupt ;
  if (cond_73586.isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_pseudo_ORG ::constructor_new (inLexique, GGS_uint (4U) COMMA_SOURCE_FILE_AT_LINE (1953))) ;
    {
      GGS_midrange_interruptDefinitionList::cEnumerator enumerator_72591 (var_cas_inPiccoloModel.reader_mInterruptDefinitionList (inLexique COMMA_SOURCE_FILE_AT_LINE (1954)), true) ;
      const GGS_midrange_interruptDefinitionList::cElement * operand_72591 = NULL ;
      while (((operand_72591 = enumerator_72591.nextObject ()))) {
        macroValidPointer (operand_72591) ;
        const GGS_bool cond_73111 = var_cas_inHasSharedRAMBank ;
        if (cond_73111.isBuiltAndTrue ()) {
          ::routine_generateInterruptRoutineForControllerWithSharedRAM (inLexique,  var_cas_inTotalBankCount,  var_cas_inRegisterTable,  operand_72591->mFirstSaveRegister,  operand_72591->mSecondSaveRegister,  var_cas_needsToSavePCLATH,  operand_72591->mInstructionList,  var_cas_routineMap,  var_cas_constantMap,  operand_72591->mEndOfInterruptLocation,  var_cas_outGeneratedInstructionList,  var_cas_localLabelIndex,  var_cas_generationOptimizationMessages COMMA_SOURCE_FILE_AT_LINE (1956)) ;
        }else if (cond_73111.isBuiltAndFalse ()) {
          ::routine_generateInterruptRoutineForControllerWithoutSharedRAM (inLexique,  var_cas_inTotalBankCount,  var_cas_inRegisterTable,  operand_72591->mFirstSaveRegister,  operand_72591->mSecondSaveRegister,  var_cas_needsToSavePCLATH,  operand_72591->mInstructionList,  var_cas_routineMap,  var_cas_constantMap,  operand_72591->mEndOfInterruptLocation,  var_cas_outGeneratedInstructionList,  var_cas_localLabelIndex,  var_cas_generationOptimizationMessages COMMA_SOURCE_FILE_AT_LINE (1971)) ;
        }
      }
    }
  }
  GGS_uint  var_cas_currentPage = GGS_uint (0U) ;
  GGS_uint _variant_75551 = var_cas_inTotalPageCount ;
  GGS_bool _condition_75551 (_variant_75551.isBuilt (), true) ;
  while (_condition_75551.isBuiltAndTrue ()) {
    _condition_75551 = (var_cas_currentPage).operator_strictInf (var_cas_inTotalPageCount) ;
    if (_condition_75551.isBuiltAndTrue ()) {
      if (_variant_75551.uintValue () == 0) {
        inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (2034)) ;
        _condition_75551 = GGS_bool (false) ;
      }else{
        _variant_75551.decrement_operation (inLexique COMMA_HERE) ;
        GGS_bool var_cas_orgGenerated = (var_cas_currentPage).operator_isEqual (GGS_uint (0U)) ;
        {
          GGS_midrange_routineDefinitionList::cEnumerator enumerator_73830 (var_cas_inPiccoloModel.reader_mRoutineDefinitionList (inLexique COMMA_SOURCE_FILE_AT_LINE (1992)), true) ;
          const GGS_midrange_routineDefinitionList::cElement * operand_73830 = NULL ;
          while (((operand_73830 = enumerator_73830.nextObject ()))) {
            macroValidPointer (operand_73830) ;
            const GGS_bool cond_75501 = (operand_73830->mPage.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (1993))).operator_isEqual (var_cas_currentPage) ;
            if (cond_75501.isBuiltAndTrue ()) {
              const GGS_bool cond_74087 = (var_cas_orgGenerated).operator_not () ;
              if (cond_74087.isBuiltAndTrue ()) {
                var_cas_outGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_pseudo_ORG ::constructor_new (inLexique, var_cas_currentPage.multiply_operation (inLexique, GGS_uint (2048U) COMMA_SOURCE_FILE_AT_LINE (1995)) COMMA_SOURCE_FILE_AT_LINE (1995))) ;
                var_cas_orgGenerated = GGS_bool (true) ;
              }
              GGS_bool var_cas_continuesInSequence ;
              GGS_uint  var_cas_currentBank = operand_73830->mRequiredBank.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (1999)) ;
              GGS_routineKind var_cas_routineKind ;
              const GGS_bool cond_74314 = operand_73830->mIsNoReturn ;
              if (cond_74314.isBuiltAndTrue ()) {
                var_cas_routineKind = GGS_routineKind::constructor_noReturnRoutine (inLexique COMMA_SOURCE_FILE_AT_LINE (2002)) ;
              }else if (cond_74314.isBuiltAndFalse ()) {
                var_cas_routineKind = GGS_routineKind::constructor_regularRoutine (inLexique COMMA_SOURCE_FILE_AT_LINE (2004)) ;
              }
              var_cas_outGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (inLexique, operand_73830->mRoutineName COMMA_SOURCE_FILE_AT_LINE (2006))) ;
              ::routine_handleMidrangeInstructionList (inLexique,  operand_73830->mInstructionList,  var_cas_routineMap,  var_cas_inRegisterTable,  var_cas_constantMap,  var_cas_localLabelIndex,  var_cas_outGeneratedInstructionList,  var_cas_generationOptimizationMessages,  var_cas_inTotalBankCount,  var_cas_currentBank,  operand_73830->mPreservesBank,  var_cas_continuesInSequence,  var_cas_routineKind COMMA_SOURCE_FILE_AT_LINE (2007)) ;
              const GGS_bool cond_75102 = (((operand_73830->mIsNoReturn).operator_not ()).operator_and ((operand_73830->mReturnedBank.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (2021))).operator_isNotEqual (GGS_uint ::constructor_max (inLexique COMMA_SOURCE_FILE_AT_LINE (2021))))).operator_and ((var_cas_currentBank).operator_isNotEqual (operand_73830->mReturnedBank.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (2021)))) ;
              if (cond_75102.isBuiltAndTrue ()) {
                operand_73830->mRoutineName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, (GGS_string ("execution will not set bank selection to ")).operator_concat (operand_73830->mReturnedBank.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (2022)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2022))) COMMA_SOURCE_FILE_AT_LINE (2023)) ;
              }
              const GGS_bool cond_75263 = (operand_73830->mIsNoReturn).operator_and (var_cas_continuesInSequence) ;
              if (cond_75263.isBuiltAndTrue ()) {
                operand_73830->mRoutineName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("execution should not reach the end of a \"noreturn\" routine") COMMA_SOURCE_FILE_AT_LINE (2026)) ;
              }
              const GGS_bool cond_75486 = (operand_73830->mIsNoReturn).operator_not () ;
              if (cond_75486.isBuiltAndTrue ()) {
                var_cas_outGeneratedInstructionList.addAssign_operation (GGS_midrange_ipic_instruction_RETURN ::constructor_new (inLexique, operand_73830->mRoutineName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (2029)) COMMA_SOURCE_FILE_AT_LINE (2029))) ;
              }
            }
          }
        }
        var_cas_currentPage.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (2033)) ;
      }
    }
  }
  const GGS_bool cond_76723 = gOption_piccolo_5F_options_ouputListingFile.reader_value () ;
  if (cond_76723.isBuiltAndTrue ()) {
    var_cas_ioListFileContents.dotAssign_operation (GGS_string ("").reader_stringByLeftAndRightPadding (GGS_uint (79U), GGS_char (TO_UNICODE ('*')))) ;
    var_cas_ioListFileContents.appendCString ("\n") ;
    var_cas_ioListFileContents.appendCString ("*") ;
    var_cas_ioListFileContents.dotAssign_operation (GGS_string ("IPIC INSTRUCTION LIST").reader_stringByLeftAndRightPadding (GGS_uint (77U), GGS_char (TO_UNICODE (' ')))) ;
    var_cas_ioListFileContents.appendCString ("*\n") ;
    var_cas_ioListFileContents.dotAssign_operation (GGS_string ("").reader_stringByLeftAndRightPadding (GGS_uint (79U), GGS_char (TO_UNICODE ('*')))) ;
    var_cas_ioListFileContents.appendCString ("\n"
      "\n") ;
    const GGS_bool cond_76128 = (var_cas_generationOptimizationMessages.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
    if (cond_76128.isBuiltAndTrue ()) {
      var_cas_ioListFileContents.appendCString ("Optimizations during generation:\n") ;
      var_cas_ioListFileContents.dotAssign_operation (var_cas_generationOptimizationMessages) ;
      var_cas_ioListFileContents.appendCString ("\n") ;
    }
    var_cas_ioListFileContents.appendCString ("Generated intermediate code:\n") ;
    GGS_uint  var_cas_idx = GGS_uint (0U) ;
    GGS_uint  var_cas_currentAddress = GGS_uint (0U) ;
    {
      GGS_midrange_ipic_instructionList::cEnumerator enumerator_76287 (var_cas_outGeneratedInstructionList, true) ;
      const GGS_midrange_ipic_instructionList::cElement * operand_76287 = NULL ;
      while (((operand_76287 = enumerator_76287.nextObject ()))) {
        macroValidPointer (operand_76287) ;
        if (operand_76287->mInstruction.isBuilt ()) {
          operand_76287->mInstruction (HERE)->method_setCurrentAddress (inLexique, var_cas_currentAddress COMMA_SOURCE_FILE_AT_LINE (2049)) ;
        }
        var_cas_ioListFileContents.dotAssign_operation (var_cas_idx.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2050)).reader_stringByLeftPadding (GGS_uint (5U), GGS_char (TO_UNICODE (' ')))) ;
        var_cas_ioListFileContents.appendCString (": ") ;
        if (operand_76287->mInstruction.isBuilt ()) {
          operand_76287->mInstruction (HERE)->method_displayIPICinstruction (inLexique, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (2051)) ;
        }
        var_cas_ioListFileContents.appendCString ("\n") ;
        var_cas_idx.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (2053)) ;
      }
    }
    var_cas_ioListFileContents.appendCString ("\n") ;
    var_cas_ioListFileContents.appendCString ("Minimum code size without optimization: ") ;
    var_cas_ioListFileContents.dotAssign_operation (var_cas_currentAddress.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (2056))) ;
    var_cas_ioListFileContents.appendCString (" instructions.\n"
      "\n") ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_midrange_assembly_instruction_list\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_midrange_checkingAndBuildIPIC (void) {
  enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL (category_method__midrange_instruction__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction.slotID ()) ;
  enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_FOREVER__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_FOREVER.slotID ()) ;
  enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_structured_if__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_structured_if.slotID ()) ;
  enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_CALL__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_CALL.slotID ()) ;
  enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_JSR__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_JSR.slotID ()) ;
  enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_GOTO__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_GOTO.slotID ()) ;
  enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_JUMP__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_JUMP.slotID ()) ;
  enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_nobanksel__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_nobanksel.slotID ()) ;
  enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_savebank__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_savebank.slotID ()) ;
  enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_banksel__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_banksel.slotID ()) ;
  enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_FD__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_FD.slotID ()) ;
  enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_F__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_F.slotID ()) ;
  enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_FB__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_FB.slotID ()) ;
  enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_JSR__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_JSR.slotID ()) ;
  enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_CALL__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_CALL.slotID ()) ;
  enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_JUMP__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_JUMP.slotID ()) ;
  enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_GOTO__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_GOTO.slotID ()) ;
  enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_CLRWDT__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_CLRWDT.slotID ()) ;
  enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_CLRW__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_CLRW.slotID ()) ;
  enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_NOP__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_NOP.slotID ()) ;
  enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_SLEEP__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_SLEEP.slotID ()) ;
  enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_literalOperation__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_literalOperation.slotID ()) ;
  enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_MNOP__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_MNOP.slotID ()) ;
  enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_FOREVER__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_FOREVER.slotID ()) ;
  enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_IF_BitTest__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_IF_BitTest.slotID ()) ;
  enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition) category_method__midrange_incDecRegisterInCondition__buildIPICinstructionForCondition, gClassInfoFor__midrange_incDecRegisterInCondition.slotID ()) ;
  enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition) category_method__midrange_incDecRegisterInCondition__computeInstructionCountForCondition, gClassInfoFor__midrange_incDecRegisterInCondition.slotID ()) ;
  enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition) category_method__midrange_negateCondition__buildIPICinstructionForCondition, gClassInfoFor__midrange_negateCondition.slotID ()) ;
  enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition) category_method__midrange_negateCondition__computeInstructionCountForCondition, gClassInfoFor__midrange_negateCondition.slotID ()) ;
  enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition) category_method__midrange_andCondition__buildIPICinstructionForCondition, gClassInfoFor__midrange_andCondition.slotID ()) ;
  enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition) category_method__midrange_andCondition__computeInstructionCountForCondition, gClassInfoFor__midrange_andCondition.slotID ()) ;
  enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition) category_method__midrange_bitTest_in_structured_if_condition__buildIPICinstructionForCondition, gClassInfoFor__midrange_bitTest_in_structured_if_condition.slotID ()) ;
  enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition) category_method__midrange_bitTest_in_structured_if_condition__computeInstructionCountForCondition, gClassInfoFor__midrange_bitTest_in_structured_if_condition.slotID ()) ;
  enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_structured_if__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_structured_if.slotID ()) ;
  enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_do_while__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_do_while.slotID ()) ;
  enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_IF_IncDec__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_IF_IncDec.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_midrange_checkingAndBuildIPIC (void) {
  gDispatchTableForMethod__midrange_instruction__instructionUsesGOTOorCALL.free () ;
  gDispatchTableForMethod__midrange_instruction__build_midrange_ipic_instructionList.free () ;
  gDispatchTableForMethod__midrange_conditionExpression__buildIPICinstructionForCondition.free () ;
  gDispatchTableForMethod__midrange_conditionExpression__computeInstructionCountForCondition.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_midrange_checkingAndBuildIPIC (prologueRoutineFor_midrange_checkingAndBuildIPIC, epilogueRoutineFor_midrange_checkingAndBuildIPIC) ;

//---------------------------------------------------------------------------*

