//---------------------------------------------------------------------------*
//                                                                           *
//                 File 'midrange_checkingAndBuildIPIC.cpp'                  *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     october 16th, 2008, at 11h52'0"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "midrange_checkingAndBuildIPIC.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "midrange_checkingAndBuildIPIC.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@midrange_instruction.instructionUsesGOTOorCALL'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction * operand_731,
                                GGS_bool & /* var_cas_ioUsesGOTOorCALL */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_731 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_instruction.instructionUsesGOTOorCALL'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL> gDispatchTableFor__midrange_instruction__instructionUsesGOTOorCALL ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL (typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__midrange_instruction__instructionUsesGOTOorCALL.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL
findCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__midrange_instruction__instructionUsesGOTOorCALL.count ()) {
    result = gDispatchTableFor__midrange_instruction__instructionUsesGOTOorCALL (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL (superClassPtr) ;
      gDispatchTableFor__midrange_instruction__instructionUsesGOTOorCALL.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_FOREVER.instructionUsesGOTOorCALL'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_FOREVER__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_FOREVER * operand_909,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_909 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true, true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_structured_if.instructionUsesGOTOorCALL'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_structured_if__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_structured_if * operand_1115,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1115 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true, true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@midrange_instruction_CALL.instructionUsesGOTOorCALL'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_CALL__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_CALL * operand_1312,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1312 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true, true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@midrange_instruction_JSR.instructionUsesGOTOorCALL'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_JSR__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_JSR * operand_1508,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1508 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true, true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@midrange_instruction_GOTO.instructionUsesGOTOorCALL'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_GOTO__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_GOTO * operand_1705,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1705 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true, true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@midrange_instruction_JUMP.instructionUsesGOTOorCALL'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_JUMP__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_JUMP * operand_1902,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1902 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true, true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_instruction.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList> gDispatchTableFor__midrange_instruction__build_midrange_ipic_instructionList ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__midrange_instruction__build_midrange_ipic_instructionList.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList
findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__midrange_instruction__build_midrange_ipic_instructionList.count ()) {
    result = gDispatchTableFor__midrange_instruction__build_midrange_ipic_instructionList (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (superClassPtr) ;
      gDispatchTableFor__midrange_instruction__build_midrange_ipic_instructionList.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "handleMidrangeInstructionList"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_handleMidrangeInstructionList (C_Compiler & _inLexique,
                                const GGS_midrange_instructionList   var_cas_inInstructionList,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & var_cas_outContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_handleMidrangeInstructionList at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outContinuesInSequence = GGS_bool (true, true) ;
  {
    GGS_midrange_instructionList::cEnumerator enumerator_3177 (var_cas_inInstructionList, true) ;
    const GGS_midrange_instructionList::cElement * operand_3177 = NULL ;
    while (((operand_3177 = enumerator_3177.nextObject ()))) {
      macroValidPointer (operand_3177) ;
      if (((var_cas_outContinuesInSequence)._operator_not ()).isBuiltAndTrue ()) {
        operand_3177->mInstruction.reader_mInstructionLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (106)).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "Unreachable code") COMMA_SOURCE_FILE_AT_LINE (107)) ;
        var_cas_outContinuesInSequence = GGS_bool (true, true) ;
      }
      const GGS_midrange_instruction  _temp_3396 = operand_3177->mInstruction ;
      if (_temp_3396._isBuilt ()) {
        typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList _method = findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (_temp_3396._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_3396 (HERE), var_cas_inRoutineMap, var_cas_inRegisterTable, var_cas_inConstantMap, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inShouldPreserveBank, var_cas_outContinuesInSequence, var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (109)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_handleMidrangeInstructionList\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_nobanksel.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_nobanksel__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_nobanksel * operand_3853,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & /* var_cas_ioGeneratedInstructionList */,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3853 != NULL) {
    if ((var_cas_inShouldPreserveBank).isBuiltAndTrue ()) {
      operand_3853->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "cannot use \"nobank\" here: bank selection should be preserved (use it in a \"banksave\" construct)") COMMA_SOURCE_FILE_AT_LINE (142)) ;
    }
    var_cas_ioCurrentBank = GGS_uint ::constructor_max (_inLexique COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_banksel.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_banksel__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_banksel * operand_4665,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4665 != NULL) {
    if ((var_cas_inShouldPreserveBank).isBuiltAndTrue ()) {
      operand_4665->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "cannot use \"banksel\" here: bank selection should be preserved (save it in \"banksave\" construct)") COMMA_SOURCE_FILE_AT_LINE (164)) ;
    }
    GGS_registerExpression  var_cas_STATUS_register ;
    var_cas_STATUS_register = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "STATUS"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_STATUS_IPICregisterDescription ;
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    const GGS_registerExpression  _temp_5490 = var_cas_STATUS_register ;
    if (_temp_5490._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_5490._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_5490 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_STATUS_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (169)) ;
      }
    }
    GGS_lstring  var_cas_RP ;
    var_cas_RP = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "RP"), operand_4665->mInstructionLocation COMMA_HERE) ;
    GGS_uint  var_cas_rpIndex ;
    GGS_uint  var_cas_sliceSize ;
    const GGS_bitSliceTable  _temp_5728 = var_cas_bitSliceTable ;
    if (_temp_5728._isBuilt ()) {
      _temp_5728 (HERE)->method_searchKey (_inLexique, var_cas_RP, var_cas_rpIndex, var_cas_sliceSize COMMA_SOURCE_FILE_AT_LINE (179)) ;
    }
    if (((var_cas_sliceSize)._operator_isNotEqual (var_cas_inTotalBankCount._substract_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (180)).reader_significantBitCount (_inLexique COMMA_SOURCE_FILE_AT_LINE (180)))).isBuiltAndTrue ()) {
      operand_4665->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, (((GGS_string (true, "internal error: sliceSize == "))._operator_concat (var_cas_sliceSize.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (181))))._operator_concat (GGS_string (true, ", significant bit count == ")))._operator_concat (var_cas_inTotalBankCount._substract_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (181)).reader_significantBitCount (_inLexique COMMA_SOURCE_FILE_AT_LINE (181)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (181))) COMMA_SOURCE_FILE_AT_LINE (182)) ;
    }
    if (((operand_4665->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (184)))._operator_isEqual (var_cas_ioCurrentBank)).isBuiltAndTrue ()) {
      operand_4665->mBankIndex.reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, ((GGS_string (true, "useless instruction: the bank "))._operator_concat (var_cas_ioCurrentBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (185))))._operator_concat (GGS_string (true, " is already selected")) COMMA_SOURCE_FILE_AT_LINE (185)) ;
    }else if (((operand_4665->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (186)))._operator_supOrEqual (var_cas_inTotalBankCount)).isBuiltAndTrue ()) {
      operand_4665->mBankIndex.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the bank "))._operator_concat (operand_4665->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (187)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (187))))._operator_concat (GGS_string (true, " does not exist (the device has ")))._operator_concat (var_cas_inTotalBankCount.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (187))))._operator_concat (GGS_string (true, " bank(s))")) COMMA_SOURCE_FILE_AT_LINE (188)) ;
    }else if (((var_cas_ioCurrentBank)._operator_isEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE))).isBuiltAndTrue ()) {
      GGS_uint  var_cas_n ;
      var_cas_n = var_cas_inTotalBankCount._substract_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (189)).reader_significantBitCount (_inLexique COMMA_SOURCE_FILE_AT_LINE (189)) ;
      GGS_uint  var_cas_shiftedBank ;
      var_cas_shiftedBank = operand_4665->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (190)) ;
      GGS_uint  var_cas_index ;
      var_cas_index = GGS_uint (true, 0U) ;
      GGS_uint _variant_7076 = var_cas_sliceSize ;
      GGS_bool _condition_7076 (_variant_7076._isBuilt (), true) ;
      while (_condition_7076.isBuiltAndTrue ()) {
        _condition_7076 = (var_cas_index)._operator_strictInf (var_cas_sliceSize) ;
        if (_condition_7076.isBuiltAndTrue ()) {
          if (_variant_7076.uintValue () == 0) {
            _inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (207)) ;
            _condition_7076 = GGS_bool (true, false) ;
          }else{
            _variant_7076._decrement_operation (_inLexique COMMA_HERE) ;
            GGS_midrange_bit_oriented_op var_cas_op ;
            if ((((var_cas_shiftedBank)._operator_and (GGS_uint (true, 1U)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
              var_cas_op = GGS_midrange_bit_oriented_op::constructor_BCF (_inLexique COMMA_HERE) ;
            }else{
              var_cas_op = GGS_midrange_bit_oriented_op::constructor_BSF (_inLexique COMMA_HERE) ;
            }
            var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FB ::constructor_new (_inLexique, operand_4665->mInstructionLocation, var_cas_op, var_cas_STATUS_IPICregisterDescription, var_cas_rpIndex._add_operation (_inLexique, var_cas_index COMMA_SOURCE_FILE_AT_LINE (203)) COMMA_HERE)) ;
            var_cas_index._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (205)) ;
            var_cas_shiftedBank = var_cas_shiftedBank._right_shift_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (206)) ;
          }
        }
      }
      var_cas_ioCurrentBank = operand_4665->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (208)) ;
    }else{
      GGS_bool var_cas_optimize ;
      var_cas_optimize = GGS_bool (true, _inLexique.boolOptionValueFromKeys ("piccolo_options", "performOptimizations" COMMA_SOURCE_FILE_AT_LINE (210))) ;
      GGS_uint  var_cas_shiftedBank ;
      var_cas_shiftedBank = operand_4665->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (211)) ;
      GGS_uint  var_cas_shiftedXorBank ;
      var_cas_shiftedXorBank = (operand_4665->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (212)))._operator_xor (var_cas_ioCurrentBank) ;
      GGS_uint  var_cas_index ;
      var_cas_index = GGS_uint (true, 0U) ;
      GGS_uint _variant_8224 = var_cas_sliceSize ;
      GGS_bool _condition_8224 (_variant_8224._isBuilt (), true) ;
      while (_condition_8224.isBuiltAndTrue ()) {
        _condition_8224 = (var_cas_index)._operator_strictInf (var_cas_sliceSize) ;
        if (_condition_8224.isBuiltAndTrue ()) {
          if (_variant_8224.uintValue () == 0) {
            _inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (236)) ;
            _condition_8224 = GGS_bool (true, false) ;
          }else{
            _variant_8224._decrement_operation (_inLexique COMMA_HERE) ;
            GGS_midrange_bit_oriented_op var_cas_op ;
            if ((((var_cas_shiftedBank)._operator_and (GGS_uint (true, 1U)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
              var_cas_op = GGS_midrange_bit_oriented_op::constructor_BCF (_inLexique COMMA_HERE) ;
            }else{
              var_cas_op = GGS_midrange_bit_oriented_op::constructor_BSF (_inLexique COMMA_HERE) ;
            }
            if (((((var_cas_shiftedXorBank)._operator_and (GGS_uint (true, 1U)))._operator_isNotEqual (GGS_uint (true, 0U)))._operator_or ((var_cas_optimize)._operator_not ())).isBuiltAndTrue ()) {
              var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FB ::constructor_new (_inLexique, operand_4665->mInstructionLocation, var_cas_op, var_cas_STATUS_IPICregisterDescription, var_cas_rpIndex._add_operation (_inLexique, var_cas_index COMMA_SOURCE_FILE_AT_LINE (226)) COMMA_HERE)) ;
            }else{
              var_cas_ioListFileContents.writeString ("  line ") ;
              var_cas_ioListFileContents._dotAssign_operation (var_cas_ioGeneratedInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (229)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (229))) ;
              var_cas_ioListFileContents.writeString (": useless '") ;
              var_cas_ioListFileContents._dotAssign_operation (var_cas_op.reader_mnemonic (_inLexique COMMA_SOURCE_FILE_AT_LINE (230))) ;
              var_cas_ioListFileContents.writeString (" STATUS, ") ;
              var_cas_ioListFileContents._dotAssign_operation (var_cas_rpIndex._add_operation (_inLexique, var_cas_index COMMA_SOURCE_FILE_AT_LINE (231)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (231))) ;
              var_cas_ioListFileContents.writeString ("' not generated\n") ;
            }
            var_cas_index._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (233)) ;
            var_cas_shiftedBank = var_cas_shiftedBank._right_shift_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (234)) ;
            var_cas_shiftedXorBank = var_cas_shiftedXorBank._right_shift_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (235)) ;
          }
        }
      }
      var_cas_ioCurrentBank = operand_4665->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (237)) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_FD.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_FD__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_FD * operand_8430,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8430 != NULL) {
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_0 ;
    const GGS_registerExpression  _temp_8949 = operand_8430->mRegisterExpression ;
    if (_temp_8949._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_8949._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_8949 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_0 COMMA_SOURCE_FILE_AT_LINE (257)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, operand_8430->mInstructionLocation, operand_8430->mInstruction_FD_base_code, var_cas_IPICregisterDescription, operand_8430->m_W_isDestination COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_F.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_F__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_F * operand_9382,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9382 != NULL) {
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_1 ;
    const GGS_registerExpression  _temp_9901 = operand_9382->mRegisterExpression ;
    if (_temp_9901._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_9901._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_9901 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_1 COMMA_SOURCE_FILE_AT_LINE (288)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, operand_9382->mInstructionLocation, operand_9382->mFAinstruction, var_cas_IPICregisterDescription COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_FB.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_FB__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_FB * operand_10300,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10300 != NULL) {
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    const GGS_registerExpression  _temp_10852 = operand_10300->mRegisterExpression ;
    if (_temp_10852._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_10852._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_10852 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (319)) ;
      }
    }
    GGS_uint  var_cas_bitNumber ;
    const GGS_bitNumberExpression  _temp_11015 = operand_10300->mBitNumber ;
    if (_temp_11015._isBuilt ()) {
      typeCategoryMethod__bitNumberExpression__getBitNumber _method = findCategoryMethod__bitNumberExpression__getBitNumber (_temp_11015._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_11015 (HERE), var_cas_bitSliceTable, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (327)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FB ::constructor_new (_inLexique, operand_10300->mInstructionLocation, operand_10300->mBitOrientedOp, var_cas_IPICregisterDescription, var_cas_bitNumber COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_JSR.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_JSR__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_JSR * operand_11367,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11367 != NULL) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  var_cas_returnedBank ;
    GGS_bool var_cas_preservesBank ;
    const GGS_routineMap  _temp_11926 = var_cas_inRoutineMap ;
    if (_temp_11926._isBuilt ()) {
      _temp_11926 (HERE)->method_searchKey (_inLexique, operand_11367->mTargetLabel, var_cas_isNoReturn, var_cas_requiredBank, var_cas_returnedBank, var_cas_preservesBank COMMA_SOURCE_FILE_AT_LINE (359)) ;
    }
    if ((((var_cas_requiredBank)._operator_isNotEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE)))._operator_and ((var_cas_requiredBank)._operator_isNotEqual (var_cas_ioCurrentBank))).isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage ;
      var_cas_errorMessage = (((GGS_string (true, "the routine '"))._operator_concat (operand_11367->mTargetLabel))._operator_concat (GGS_string (true, "' requires bank selection to be set to ")))._operator_concat (var_cas_requiredBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (361))) ;
      var_cas_errorMessage.writeString (", but bank selection ") ;
      if (((var_cas_ioCurrentBank)._operator_isEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE))).isBuiltAndTrue ()) {
        var_cas_errorMessage.writeString ("does contain any reliable value") ;
      }else{
        var_cas_errorMessage.writeString ("is set to ") ;
        var_cas_errorMessage._dotAssign_operation (var_cas_ioCurrentBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (366))) ;
      }
      operand_11367->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (369)) ;
    }
    if ((var_cas_isNoReturn).isBuiltAndTrue ()) {
      operand_11367->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a \"noreturn\" routine should be called with a GOTO or JUMP instruction") COMMA_SOURCE_FILE_AT_LINE (372)) ;
    }
    if (((var_cas_preservesBank)._operator_not ()).isBuiltAndTrue ()) {
      var_cas_ioCurrentBank = var_cas_returnedBank ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_JSR ::constructor_new (_inLexique, operand_11367->mInstructionLocation, operand_11367->mTargetLabel, GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_CALL.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_CALL__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_CALL * operand_13026,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13026 != NULL) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  var_cas_returnedBank ;
    GGS_bool var_cas_preservesBank ;
    const GGS_routineMap  _temp_13585 = var_cas_inRoutineMap ;
    if (_temp_13585._isBuilt ()) {
      _temp_13585 (HERE)->method_searchKey (_inLexique, operand_13026->mTargetLabel, var_cas_isNoReturn, var_cas_requiredBank, var_cas_returnedBank, var_cas_preservesBank COMMA_SOURCE_FILE_AT_LINE (405)) ;
    }
    if ((((var_cas_requiredBank)._operator_isNotEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE)))._operator_and ((var_cas_requiredBank)._operator_isNotEqual (var_cas_ioCurrentBank))).isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage ;
      var_cas_errorMessage = (((GGS_string (true, "the routine '"))._operator_concat (operand_13026->mTargetLabel))._operator_concat (GGS_string (true, "' requires bank selection to be set to ")))._operator_concat (var_cas_requiredBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (407))) ;
      var_cas_errorMessage.writeString (", but bank selection ") ;
      if (((var_cas_ioCurrentBank)._operator_isEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE))).isBuiltAndTrue ()) {
        var_cas_errorMessage.writeString ("does contain any reliable value") ;
      }else{
        var_cas_errorMessage.writeString ("is set to ") ;
        var_cas_errorMessage._dotAssign_operation (var_cas_ioCurrentBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (412))) ;
      }
      operand_13026->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (415)) ;
    }
    if ((var_cas_isNoReturn).isBuiltAndTrue ()) {
      operand_13026->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a \"noreturn\" routine should be called with a GOTO or JUMP instruction") COMMA_SOURCE_FILE_AT_LINE (418)) ;
    }
    if (((var_cas_preservesBank)._operator_not ()).isBuiltAndTrue ()) {
      var_cas_ioCurrentBank = var_cas_returnedBank ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_CALL ::constructor_new (_inLexique, operand_13026->mInstructionLocation, operand_13026->mTargetLabel COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_JUMP.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_JUMP__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_JUMP * operand_14606,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_14606 != NULL) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  automatic_var_2 ;
    GGS_bool automatic_var_3 ;
    const GGS_routineMap  _temp_15111 = var_cas_inRoutineMap ;
    if (_temp_15111._isBuilt ()) {
      _temp_15111 (HERE)->method_searchKey (_inLexique, operand_14606->mTargetLabel, var_cas_isNoReturn, var_cas_requiredBank, automatic_var_2, automatic_var_3 COMMA_SOURCE_FILE_AT_LINE (447)) ;
    }
    if ((((var_cas_requiredBank)._operator_isNotEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE)))._operator_and ((var_cas_requiredBank)._operator_isNotEqual (var_cas_ioCurrentBank))).isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage ;
      var_cas_errorMessage = (((GGS_string (true, "the routine '"))._operator_concat (operand_14606->mTargetLabel))._operator_concat (GGS_string (true, "' requires bank selection to be set to ")))._operator_concat (var_cas_requiredBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (449))) ;
      var_cas_errorMessage.writeString (", but bank selection ") ;
      if (((var_cas_ioCurrentBank)._operator_isEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE))).isBuiltAndTrue ()) {
        var_cas_errorMessage.writeString ("does contain any reliable value") ;
      }else{
        var_cas_errorMessage.writeString ("is set to ") ;
        var_cas_errorMessage._dotAssign_operation (var_cas_ioCurrentBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (454))) ;
      }
      operand_14606->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (457)) ;
    }
    if (((var_cas_isNoReturn)._operator_not ()).isBuiltAndTrue ()) {
      operand_14606->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a regular routine should be called with a CALL or JSR instruction") COMMA_SOURCE_FILE_AT_LINE (460)) ;
    }
    var_cas_ioContinuesInSequence = GGS_bool (true, false) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_JUMP ::constructor_new (_inLexique, operand_14606->mInstructionLocation, operand_14606->mTargetLabel, GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_GOTO.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_GOTO__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_GOTO * operand_16147,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16147 != NULL) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  automatic_var_4 ;
    GGS_bool automatic_var_5 ;
    const GGS_routineMap  _temp_16652 = var_cas_inRoutineMap ;
    if (_temp_16652._isBuilt ()) {
      _temp_16652 (HERE)->method_searchKey (_inLexique, operand_16147->mTargetLabel, var_cas_isNoReturn, var_cas_requiredBank, automatic_var_4, automatic_var_5 COMMA_SOURCE_FILE_AT_LINE (489)) ;
    }
    if ((((var_cas_requiredBank)._operator_isNotEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE)))._operator_and ((var_cas_requiredBank)._operator_isNotEqual (var_cas_ioCurrentBank))).isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage ;
      var_cas_errorMessage = (((GGS_string (true, "the routine '"))._operator_concat (operand_16147->mTargetLabel))._operator_concat (GGS_string (true, "' requires bank selection to be set to ")))._operator_concat (var_cas_requiredBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (491))) ;
      var_cas_errorMessage.writeString (", but bank selection ") ;
      if (((var_cas_ioCurrentBank)._operator_isEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE))).isBuiltAndTrue ()) {
        var_cas_errorMessage.writeString ("does contain any reliable value") ;
      }else{
        var_cas_errorMessage.writeString ("is set to ") ;
        var_cas_errorMessage._dotAssign_operation (var_cas_ioCurrentBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (496))) ;
      }
      operand_16147->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (499)) ;
    }
    if (((var_cas_isNoReturn)._operator_not ()).isBuiltAndTrue ()) {
      operand_16147->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a regular routine should be called with a CALL or JSR instruction") COMMA_SOURCE_FILE_AT_LINE (502)) ;
    }
    var_cas_ioContinuesInSequence = GGS_bool (true, false) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (_inLexique, operand_16147->mInstructionLocation, operand_16147->mTargetLabel COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_CLRWDT.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_CLRWDT__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_CLRWDT * operand_17610,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17610 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_CLRWDT ::constructor_new (_inLexique, operand_17610->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_CLRW.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_CLRW__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_CLRW * operand_18296,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18296 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_CLRW ::constructor_new (_inLexique, operand_18296->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_NOP.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_NOP__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_NOP * operand_18979,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18979 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_NOP ::constructor_new (_inLexique, operand_18979->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_SLEEP.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_SLEEP__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_SLEEP * operand_19663,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19663 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_SLEEP ::constructor_new (_inLexique, operand_19663->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_literalOperation.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_literalOperation__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_literalOperation * operand_20360,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20360 != NULL) {
    GGS_sint  var_cas_result ;
    const GGS_immediatExpression  _temp_20822 = operand_20360->mImmediatExpression ;
    if (_temp_20822._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_20822._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_20822 (HERE), var_cas_inRegisterTable, var_cas_inConstantMap, var_cas_result COMMA_SOURCE_FILE_AT_LINE (606)) ;
      }
    }
    if ((((var_cas_result)._operator_strictSup (GGS_sint (true, 255L)))._operator_or ((var_cas_result)._operator_strictInf (GGS_sint (true, 128L)._operator_unary_minus (_inLexique COMMA_HERE)))).isBuiltAndTrue ()) {
      operand_20360->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "immediate value is evaluated as "))._operator_concat (var_cas_result.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (609))))._operator_concat (GGS_string (true, " (should be betwween -128 and 255)")) COMMA_SOURCE_FILE_AT_LINE (610)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_literalOperation ::constructor_new (_inLexique, operand_20360->mInstructionLocation, operand_20360->mLiteralInstruction, (var_cas_result)._operator_and (GGS_sint (true, 255L)).reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (615)) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_MNOP.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_MNOP__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_MNOP * operand_23495,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23495 != NULL) {
    if (((operand_23495->mOccurrenceFactor.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (684)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
      operand_23495->mOccurrenceFactor.reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "occurrence argument is zero: no generated code") COMMA_SOURCE_FILE_AT_LINE (685)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_MNOP ::constructor_new (_inLexique, operand_23495->mInstructionLocation, operand_23495->mOccurrenceFactor COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_FOREVER.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_FOREVER__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_FOREVER * operand_29350,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_29350 != NULL) {
    switch (var_cas_inRoutineKind.enumValue ()) {
    case GGS_routineKind::enum_regularRoutine:
      {
      operand_29350->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a regular routine does not accept the \"forever\" instruction") COMMA_SOURCE_FILE_AT_LINE (830)) ;
      }
      break ;
    case GGS_routineKind::enum_noReturnRoutine:
      {
      }
      break ;
    case GGS_routineKind::enum_interruptRoutine:
      {
      operand_29350->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "an interrupt routine does not accept the \"forever\" instruction") COMMA_SOURCE_FILE_AT_LINE (833)) ;
      }
      break ;
    case GGS_routineKind::kNotBuilt:
      break ;
    }
    GGS_uint  var_cas_finalBank ;
    var_cas_finalBank = var_cas_ioCurrentBank ;
    GGS_string var_cas_label0 ;
    var_cas_label0 = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (836))) ;
    var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (837)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, operand_29350->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    ::routine_handleMidrangeInstructionList (_inLexique,  operand_29350->mInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_finalBank,  var_cas_inShouldPreserveBank,  var_cas_ioContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (839)) ;
    if (((var_cas_ioCurrentBank)._operator_isNotEqual (var_cas_finalBank)).isBuiltAndTrue ()) {
      operand_29350->mEndOfInstructionList.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "instruction list does not leave bank selection unchanged") COMMA_SOURCE_FILE_AT_LINE (855)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (_inLexique, operand_29350->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, operand_29350->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    var_cas_ioContinuesInSequence = GGS_bool (true, false) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_IF_BitTest.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_IF_BitTest__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_IF_BitTest * operand_31133,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_31133 != NULL) {
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    const GGS_registerExpression  _temp_31643 = operand_31133->mRegisterExpression ;
    if (_temp_31643._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_31643._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_31643 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (882)) ;
      }
    }
    GGS_uint  var_cas_bitNumber ;
    const GGS_bitNumberExpression  _temp_31806 = operand_31133->mBitNumber ;
    if (_temp_31806._isBuilt ()) {
      typeCategoryMethod__bitNumberExpression__getBitNumber _method = findCategoryMethod__bitNumberExpression__getBitNumber (_temp_31806._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_31806 (HERE), var_cas_bitSliceTable, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (890)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_BitTestSkip ::constructor_new (_inLexique, operand_31133->mInstructionLocation, operand_31133->mSkipIfSet, var_cas_IPICregisterDescription, var_cas_bitNumber COMMA_HERE)) ;
    GGS_bool var_cas_unusedContinuesInSequence ;
    var_cas_unusedContinuesInSequence = GGS_bool (true, true) ;
    const GGS_midrange_instruction  _temp_32135 = operand_31133->mInstruction ;
    if (_temp_32135._isBuilt ()) {
      typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList _method = findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (_temp_32135._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_32135 (HERE), var_cas_inRoutineMap, var_cas_inRegisterTable, var_cas_inConstantMap, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inShouldPreserveBank, var_cas_unusedContinuesInSequence, var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (902)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_conditionExpression.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition> gDispatchTableFor__midrange_conditionExpression__buildIPICinstructionForCondition ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__midrange_conditionExpression__buildIPICinstructionForCondition.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition
findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__midrange_conditionExpression__buildIPICinstructionForCondition.count ()) {
    result = gDispatchTableFor__midrange_conditionExpression__buildIPICinstructionForCondition (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (superClassPtr) ;
      gDispatchTableFor__midrange_conditionExpression__buildIPICinstructionForCondition.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_conditionExpression.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition> gDispatchTableFor__midrange_conditionExpression__computeInstructionCountForCondition ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__midrange_conditionExpression__computeInstructionCountForCondition.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition
findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__midrange_conditionExpression__computeInstructionCountForCondition.count ()) {
    result = gDispatchTableFor__midrange_conditionExpression__computeInstructionCountForCondition (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (superClassPtr) ;
      gDispatchTableFor__midrange_conditionExpression__computeInstructionCountForCondition.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_incDecRegisterInCondition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_incDecRegisterInCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_midrange_incDecRegisterInCondition * operand_33203,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_uint   var_cas_inCurrentBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_33203 != NULL) {
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_6 ;
    const GGS_registerExpression  _temp_33627 = operand_33203->mRegisterExpression ;
    if (_temp_33627._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_33627._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_33627 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_6 COMMA_SOURCE_FILE_AT_LINE (952)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_incDecRegisterInCondition ::constructor_new (_inLexique, var_cas_inInstructionLocation, var_cas_IPICregisterDescription, var_cas_inTargetLabel, operand_33203->mIncrement, operand_33203->m_W_isDestination, (operand_33203->mBranchIfZero)._operator_xor (var_cas_inComplementaryBranch) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_incDecRegisterInCondition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_incDecRegisterInCondition__computeInstructionCountForCondition (C_Compiler &,
                                const cPtr_midrange_incDecRegisterInCondition * operand_34136,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_34136 != NULL) {
    if (((operand_34136->mBranchIfZero)._operator_xor (var_cas_inComplementaryBranch)).isBuiltAndTrue ()) {
      var_cas_outInstructionCount = GGS_uint (true, 3U) ;
    }else{
      var_cas_outInstructionCount = GGS_uint (true, 2U) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_negateCondition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_negateCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_midrange_negateCondition * operand_34472,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_uint   var_cas_inCurrentBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_34472 != NULL) {
    const GGS_midrange_conditionExpression  _temp_34822 = operand_34472->mCondition ;
    if (_temp_34822._isBuilt ()) {
      typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_34822._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_34822 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, (var_cas_inComplementaryBranch)._operator_not (), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (996)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_negateCondition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_negateCondition__computeInstructionCountForCondition (C_Compiler & _inLexique,
                                const cPtr_midrange_negateCondition * operand_35197,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_35197 != NULL) {
    const GGS_midrange_conditionExpression  _temp_35310 = operand_35197->mCondition ;
    if (_temp_35310._isBuilt ()) {
      typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (_temp_35310._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_35310 (HERE), (var_cas_inComplementaryBranch)._operator_not (), var_cas_outInstructionCount COMMA_SOURCE_FILE_AT_LINE (1015)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_andCondition.buildIPICinstructionForCondition'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_andCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_midrange_andCondition * operand_35514,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_uint   var_cas_inCurrentBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_35514 != NULL) {
    if ((var_cas_inComplementaryBranch).isBuiltAndTrue ()) {
      const GGS_midrange_conditionExpression  _temp_35903 = operand_35514->mLeftExpression ;
      if (_temp_35903._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_35903._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_35903 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1035)) ;
        }
      }
      const GGS_midrange_conditionExpression  _temp_36184 = operand_35514->mRightExpression ;
      if (_temp_36184._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_36184._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_36184 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1046)) ;
        }
      }
    }else{
      GGS_string var_cas_label0 ;
      var_cas_label0 = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1058))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1058)) ;
      const GGS_midrange_conditionExpression  _temp_36557 = operand_35514->mLeftExpression ;
      if (_temp_36557._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_36557._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_36557 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), var_cas_inInstructionLocation, var_cas_label0, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1059)) ;
        }
      }
      const GGS_midrange_conditionExpression  _temp_36831 = operand_35514->mRightExpression ;
      if (_temp_36831._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_36831._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_36831 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, false), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1070)) ;
        }
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, var_cas_inInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_andCondition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_andCondition__computeInstructionCountForCondition (C_Compiler & _inLexique,
                                const cPtr_midrange_andCondition * operand_37332,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_37332 != NULL) {
    GGS_uint  var_cas_countLeft ;
    const GGS_midrange_conditionExpression  _temp_37470 = operand_37332->mLeftExpression ;
    if (_temp_37470._isBuilt ()) {
      typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (_temp_37470._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_37470 (HERE), var_cas_inComplementaryBranch, var_cas_countLeft COMMA_SOURCE_FILE_AT_LINE (1092)) ;
      }
    }
    GGS_uint  var_cas_countRight ;
    const GGS_midrange_conditionExpression  _temp_37594 = operand_37332->mLeftExpression ;
    if (_temp_37594._isBuilt ()) {
      typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (_temp_37594._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_37594 (HERE), var_cas_inComplementaryBranch, var_cas_countRight COMMA_SOURCE_FILE_AT_LINE (1097)) ;
      }
    }
    var_cas_outInstructionCount = var_cas_countLeft._add_operation (_inLexique, var_cas_countRight COMMA_SOURCE_FILE_AT_LINE (1101)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_bitTest_in_structured_if_condition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_bitTest_in_structured_if_condition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_midrange_bitTest_in_structured_if_condition * operand_37857,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_uint   var_cas_inCurrentBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_37857 != NULL) {
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    const GGS_registerExpression  _temp_38314 = operand_37857->mRegisterExpression ;
    if (_temp_38314._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_38314._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_38314 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (1119)) ;
      }
    }
    GGS_uint  var_cas_bitNumber ;
    const GGS_bitNumberExpression  _temp_38477 = operand_37857->mBitNumber ;
    if (_temp_38477._isBuilt ()) {
      typeCategoryMethod__bitNumberExpression__getBitNumber _method = findCategoryMethod__bitNumberExpression__getBitNumber (_temp_38477._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_38477 (HERE), var_cas_bitSliceTable, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (1127)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_BitTestSkip ::constructor_new (_inLexique, var_cas_inInstructionLocation, (operand_37857->mBTFSSinstruction)._operator_xor (var_cas_inComplementaryBranch), var_cas_IPICregisterDescription, var_cas_bitNumber COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_JUMP ::constructor_new (_inLexique, var_cas_inInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_inTargetLabel, var_cas_inInstructionLocation COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_bitTest_in_structured_if_condition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_bitTest_in_structured_if_condition__computeInstructionCountForCondition (C_Compiler &,
                                const cPtr_midrange_bitTest_in_structured_if_condition * operand_39119,
                                const GGS_bool  /* var_cas_inComplementaryBranch */,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_39119 != NULL) {
    var_cas_outInstructionCount = GGS_uint (true, 2U) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_structured_if.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_structured_if__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_structured_if * operand_39376,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_39376 != NULL) {
    GGS_bool var_cas_generateComplementaryCondition ;
    var_cas_generateComplementaryCondition = GGS_bool (true, false) ;
    if ((GGS_bool (true, _inLexique.boolOptionValueFromKeys ("piccolo_options", "performOptimizations" COMMA_SOURCE_FILE_AT_LINE (1172)))).isBuiltAndTrue ()) {
      GGS_uint  var_cas_directCount ;
      const GGS_midrange_conditionExpression  _temp_39954 = operand_39376->mIfCondition ;
      if (_temp_39954._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (_temp_39954._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_39954 (HERE), GGS_bool (true, true), var_cas_directCount COMMA_SOURCE_FILE_AT_LINE (1173)) ;
        }
      }
      if (((operand_39376->mElseInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1174)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_directCount._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1175)) ;
      }
      GGS_uint  var_cas_complementaryCount ;
      const GGS_midrange_conditionExpression  _temp_40139 = operand_39376->mIfCondition ;
      if (_temp_40139._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (_temp_40139._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_40139 (HERE), GGS_bool (true, false), var_cas_complementaryCount COMMA_SOURCE_FILE_AT_LINE (1177)) ;
        }
      }
      if (((operand_39376->mThenInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1178)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_complementaryCount._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1179)) ;
      }
      if (((var_cas_complementaryCount)._operator_strictInf (var_cas_directCount)).isBuiltAndTrue ()) {
        var_cas_generateComplementaryCondition = GGS_bool (true, true) ;
        var_cas_ioListFileContents.writeString ("  line ") ;
        var_cas_ioListFileContents._dotAssign_operation (var_cas_ioGeneratedInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1183)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1183))) ;
        var_cas_ioListFileContents.writeString (": generates complementary test (saves ") ;
        var_cas_ioListFileContents._dotAssign_operation (var_cas_directCount._substract_operation (_inLexique, var_cas_complementaryCount COMMA_SOURCE_FILE_AT_LINE (1184)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1184))) ;
        var_cas_ioListFileContents.writeString (" instruction") ;
        if (((var_cas_directCount._substract_operation (_inLexique, var_cas_complementaryCount COMMA_SOURCE_FILE_AT_LINE (1185)))._operator_strictSup (GGS_uint (true, 1U))).isBuiltAndTrue ()) {
          var_cas_ioListFileContents.writeString ("s") ;
        }
        var_cas_ioListFileContents.writeString (")\n") ;
      }
    }
    GGS_uint  var_cas_elseBranchFinalBank ;
    var_cas_elseBranchFinalBank = var_cas_ioCurrentBank ;
    GGS_uint  var_cas_thenBranchFinalBank ;
    var_cas_thenBranchFinalBank = var_cas_ioCurrentBank ;
    GGS_bool var_cas_elseContinuesInSequence ;
    GGS_bool var_cas_thenContinuesInSequence ;
    if ((var_cas_generateComplementaryCondition).isBuiltAndTrue ()) {
      GGS_string var_cas_label_nextCondition ;
      var_cas_label_nextCondition = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1197))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1197)) ;
      GGS_string var_cas_label_endOfIfinstruction ;
      var_cas_label_endOfIfinstruction = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1198))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1198)) ;
      const GGS_midrange_conditionExpression  _temp_41204 = operand_39376->mIfCondition ;
      if (_temp_41204._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_41204._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_41204 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, false), operand_39376->mInstructionLocation, var_cas_label_nextCondition, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1200)) ;
        }
      }
      ::routine_handleMidrangeInstructionList (_inLexique,  operand_39376->mElseInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_elseBranchFinalBank,  var_cas_inShouldPreserveBank,  var_cas_elseContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1212)) ;
      if (((operand_39376->mThenInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1227)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (_inLexique, operand_39376->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_39376->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_nextCondition, operand_39376->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      ::routine_handleMidrangeInstructionList (_inLexique,  operand_39376->mThenInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_thenBranchFinalBank,  var_cas_inShouldPreserveBank,  var_cas_thenContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1231)) ;
      if (((operand_39376->mThenInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1245)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_39376->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      }
    }else{
      GGS_string var_cas_label_nextCondition ;
      var_cas_label_nextCondition = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1250))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1250)) ;
      GGS_string var_cas_label_endOfIfinstruction ;
      var_cas_label_endOfIfinstruction = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1251))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1251)) ;
      const GGS_midrange_conditionExpression  _temp_43027 = operand_39376->mIfCondition ;
      if (_temp_43027._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_43027._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_43027 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), operand_39376->mInstructionLocation, var_cas_label_nextCondition, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1253)) ;
        }
      }
      ::routine_handleMidrangeInstructionList (_inLexique,  operand_39376->mThenInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_thenBranchFinalBank,  var_cas_inShouldPreserveBank,  var_cas_thenContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1265)) ;
      if (((operand_39376->mElseInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1280)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (_inLexique, operand_39376->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_39376->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_nextCondition, operand_39376->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      ::routine_handleMidrangeInstructionList (_inLexique,  operand_39376->mElseInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_elseBranchFinalBank,  var_cas_inShouldPreserveBank,  var_cas_elseContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1284)) ;
      if (((operand_39376->mElseInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1298)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_39376->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      }
    }
    if (((var_cas_elseBranchFinalBank)._operator_isEqual (var_cas_thenBranchFinalBank)).isBuiltAndTrue ()) {
      var_cas_ioCurrentBank = var_cas_elseBranchFinalBank ;
    }else{
      operand_39376->mEndOfElsePartLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "This branch does not leave bank selection value as the first one does") COMMA_SOURCE_FILE_AT_LINE (1306)) ;
      var_cas_elseBranchFinalBank = GGS_uint ::constructor_max (_inLexique COMMA_HERE) ;
    }
    var_cas_ioContinuesInSequence = (var_cas_thenContinuesInSequence)._operator_or (var_cas_elseContinuesInSequence) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_do_while.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_do_while__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_do_while * operand_45101,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_45101 != NULL) {
    GGS_string var_cas_labelInstructionBegin ;
    var_cas_labelInstructionBegin = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1328))) ;
    var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1328)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_labelInstructionBegin, operand_45101->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    GGS_uint  var_cas_finalBank ;
    var_cas_finalBank = var_cas_ioCurrentBank ;
    ::routine_handleMidrangeInstructionList (_inLexique,  operand_45101->mRepeatedInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_finalBank,  var_cas_inShouldPreserveBank,  var_cas_ioContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1333)) ;
    if (((var_cas_ioCurrentBank)._operator_isNotEqual (var_cas_finalBank)).isBuiltAndTrue ()) {
      operand_45101->mEndOfRepeatedInstructionList.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "This branch does not leave bank selection value unchanged") COMMA_SOURCE_FILE_AT_LINE (1349)) ;
    }
    {
      GGS_midrange_partList::cEnumerator enumerator_46304 (operand_45101->mWhilePartList, true) ;
      const GGS_midrange_partList::cElement * operand_46304 = NULL ;
      while (((operand_46304 = enumerator_46304.nextObject ()))) {
        macroValidPointer (operand_46304) ;
        if (((operand_46304->mInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1352)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
          const GGS_midrange_conditionExpression  _temp_46401 = operand_46304->mCondition ;
          if (_temp_46401._isBuilt ()) {
            typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_46401._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_46401 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, false), operand_45101->mInstructionLocation, var_cas_labelInstructionBegin, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1353)) ;
            }
          }
        }else{
          GGS_string var_cas_nextBranchLabel ;
          var_cas_nextBranchLabel = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1365))) ;
          var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1365)) ;
          const GGS_midrange_conditionExpression  _temp_46812 = operand_46304->mCondition ;
          if (_temp_46812._isBuilt ()) {
            typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_46812._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_46812 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), operand_45101->mInstructionLocation, var_cas_nextBranchLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1366)) ;
            }
          }
          GGS_uint  var_cas_bank ;
          var_cas_bank = var_cas_ioCurrentBank ;
          ::routine_handleMidrangeInstructionList (_inLexique,  operand_46304->mInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_bank,  var_cas_inShouldPreserveBank,  var_cas_ioContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1378)) ;
          if (((var_cas_ioCurrentBank)._operator_isNotEqual (var_cas_bank)).isBuiltAndTrue ()) {
            operand_46304->mEndOfPartLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "This branch does not leave bank selection value unchanged") COMMA_SOURCE_FILE_AT_LINE (1394)) ;
          }
          var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (_inLexique, operand_45101->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_labelInstructionBegin, operand_45101->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
          var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_nextBranchLabel, operand_45101->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_IF_IncDec.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_IF_IncDec__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_IF_IncDec * operand_48058,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_48058 != NULL) {
    GGS_midrange_instruction_FD_base_code var_cas_baseCode ;
    if ((operand_48058->mIncrement).isBuiltAndTrue ()) {
      var_cas_baseCode = GGS_midrange_instruction_FD_base_code::constructor_INCFSZ (_inLexique COMMA_HERE) ;
    }else{
      var_cas_baseCode = GGS_midrange_instruction_FD_base_code::constructor_DECFSZ (_inLexique COMMA_HERE) ;
    }
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_7 ;
    const GGS_registerExpression  _temp_48756 = operand_48058->mRegisterExpression ;
    if (_temp_48756._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_48756._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_48756 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_7 COMMA_SOURCE_FILE_AT_LINE (1425)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, operand_48058->mInstructionLocation, var_cas_baseCode, var_cas_IPICregisterDescription, operand_48058->m_W_isDestination COMMA_HERE)) ;
    GGS_bool var_cas_unusedContinuesInSequence ;
    var_cas_unusedContinuesInSequence = GGS_bool (true, true) ;
    const GGS_midrange_instruction  _temp_49132 = operand_48058->mInstruction ;
    if (_temp_49132._isBuilt ()) {
      typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList _method = findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (_temp_49132._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_49132 (HERE), var_cas_inRoutineMap, var_cas_inRegisterTable, var_cas_inConstantMap, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inShouldPreserveBank, var_cas_unusedContinuesInSequence, var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1441)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "generateInterruptRoutineForControllerWithSharedRAM"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateInterruptRoutineForControllerWithSharedRAM (C_Compiler & _inLexique,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_lstring   var_cas_inFirstSaveRegister,
                                const GGS_lstring   var_cas_inSecondSaveRegister,
                                const GGS_bool  var_cas_inNeedsToSavePCLATH,
                                const GGS_midrange_instructionList   var_cas_inInterruptRoutineInstructionList,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_constantMap   var_cas_inConstantMap,
                                const GGS_location   var_cas_inEndOfInterruptLocation,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_string & var_cas_ioGenerationOptimizationMessages COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateInterruptRoutineForControllerWithSharedRAM at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_uintlist  var_cas_registerAddressList ;
  GGS_uint  var_cas_size ;
  GGS_bitSliceTable  automatic_var_8 ;
  GGS_string automatic_var_9 ;
  const GGS_registerTable  _temp_50167 = var_cas_inRegisterTable ;
  if (_temp_50167._isBuilt ()) {
    _temp_50167 (HERE)->method_searchKey (_inLexique, var_cas_inFirstSaveRegister, var_cas_registerAddressList, var_cas_size, automatic_var_8, automatic_var_9 COMMA_SOURCE_FILE_AT_LINE (1475)) ;
  }
  GGS_bool var_cas_accessibleFromBank0 ;
  var_cas_accessibleFromBank0 = GGS_bool (true, false) ;
  {
    GGS_uintlist::cEnumerator enumerator_50294 (var_cas_registerAddressList, true) ;
    const GGS_uintlist::cElement * operand_50294 = NULL ;
    while (((operand_50294 = enumerator_50294.nextObject ()))
        && ((var_cas_accessibleFromBank0)._operator_not ().isBuiltAndTrue ())) {
      macroValidPointer (operand_50294) ;
      var_cas_accessibleFromBank0 = ((operand_50294->mValue)._operator_and (GGS_uint (true, 3968U)))._operator_isEqual (GGS_uint (true, 0U)) ;
    }
  }
  if (((var_cas_accessibleFromBank0)._operator_not ()).isBuiltAndTrue ()) {
    var_cas_inFirstSaveRegister.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '"))._operator_concat (var_cas_inFirstSaveRegister))._operator_concat (GGS_string (true, "' variable cannot be accessed from bank 0")) COMMA_SOURCE_FILE_AT_LINE (1482)) ;
  }
  if (((var_cas_inNeedsToSavePCLATH)._operator_and ((var_cas_size)._operator_isNotEqual (GGS_uint (true, 2U)))).isBuiltAndTrue ()) {
    var_cas_inFirstSaveRegister.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '"))._operator_concat (var_cas_inFirstSaveRegister))._operator_concat (GGS_string (true, "' variable size is ")))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1484))))._operator_concat (GGS_string (true, " (it should be 2)")) COMMA_SOURCE_FILE_AT_LINE (1485)) ;
  }else if ((((var_cas_inNeedsToSavePCLATH)._operator_not ())._operator_and ((var_cas_size)._operator_isNotEqual (GGS_uint (true, 1U)))).isBuiltAndTrue ()) {
    var_cas_inFirstSaveRegister.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '"))._operator_concat (var_cas_inFirstSaveRegister))._operator_concat (GGS_string (true, "' variable size is ")))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1486))))._operator_concat (GGS_string (true, " (it should be 1)")) COMMA_SOURCE_FILE_AT_LINE (1487)) ;
  }
  GGS_bitSliceTable  automatic_var_10 ;
  GGS_string automatic_var_11 ;
  const GGS_registerTable  _temp_51042 = var_cas_inRegisterTable ;
  if (_temp_51042._isBuilt ()) {
    _temp_51042 (HERE)->method_searchKey (_inLexique, var_cas_inSecondSaveRegister, var_cas_registerAddressList, var_cas_size, automatic_var_10, automatic_var_11 COMMA_SOURCE_FILE_AT_LINE (1489)) ;
  }
  GGS_uint  var_cas_bankAccessibility ;
  var_cas_bankAccessibility = GGS_uint (true, 0U) ;
  {
    GGS_uintlist::cEnumerator enumerator_51164 (var_cas_registerAddressList, true) ;
    const GGS_uintlist::cElement * operand_51164 = NULL ;
    while (((operand_51164 = enumerator_51164.nextObject ()))) {
      macroValidPointer (operand_51164) ;
      var_cas_bankAccessibility = (var_cas_bankAccessibility)._operator_or (GGS_uint (true, 1U)._left_shift_operation (_inLexique, operand_51164->mValue._right_shift_operation (_inLexique, GGS_uint (true, 7U) COMMA_SOURCE_FILE_AT_LINE (1492)) COMMA_SOURCE_FILE_AT_LINE (1492))) ;
    }
  }
  if (((var_cas_bankAccessibility._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (1494)))._operator_isNotEqual (GGS_uint (true, 1U)._left_shift_operation (_inLexique, var_cas_inTotalBankCount COMMA_SOURCE_FILE_AT_LINE (1494)))).isBuiltAndTrue ()) {
    var_cas_inSecondSaveRegister.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '"))._operator_concat (var_cas_inSecondSaveRegister))._operator_concat (GGS_string (true, "' variable cannot be accessed from any bank")) COMMA_SOURCE_FILE_AT_LINE (1496)) ;
  }
  if (((var_cas_size)._operator_isNotEqual (GGS_uint (true, 1U))).isBuiltAndTrue ()) {
    var_cas_inSecondSaveRegister.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '"))._operator_concat (var_cas_inSecondSaveRegister))._operator_concat (GGS_string (true, "' variable size is ")))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1498))))._operator_concat (GGS_string (true, " (it should be 1)")) COMMA_SOURCE_FILE_AT_LINE (1499)) ;
  }
  if (((GGS_uint ::constructor_errorCount (_inLexique COMMA_HERE))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
    GGS_registerExpression  var_cas_first_register ;
    var_cas_first_register = GGS_registerExpression ::constructor_new (_inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_first_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_12 ;
    const GGS_registerExpression  _temp_51872 = var_cas_first_register ;
    if (_temp_51872._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_51872._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_51872 (HERE), var_cas_inTotalBankCount, GGS_uint (true, 0U), var_cas_inRegisterTable, var_cas_first_IPICregisterDescription, automatic_var_12 COMMA_SOURCE_FILE_AT_LINE (1504)) ;
      }
    }
    GGS_registerExpression  var_cas_second_register ;
    var_cas_second_register = GGS_registerExpression ::constructor_new (_inLexique, var_cas_inSecondSaveRegister, GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_second_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_13 ;
    const GGS_registerExpression  _temp_52190 = var_cas_second_register ;
    if (_temp_52190._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_52190._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_52190 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (_inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_second_IPICregisterDescription, automatic_var_13 COMMA_SOURCE_FILE_AT_LINE (1513)) ;
      }
    }
    GGS_registerExpression  var_cas_STATUS_register ;
    var_cas_STATUS_register = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "STATUS"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_STATUS_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_14 ;
    const GGS_registerExpression  _temp_52566 = var_cas_STATUS_register ;
    if (_temp_52566._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_52566._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_52566 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (_inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_STATUS_IPICregisterDescription, automatic_var_14 COMMA_SOURCE_FILE_AT_LINE (1523)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_second_IPICregisterDescription COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (_inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_CLRF (_inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_first_IPICregisterDescription COMMA_HERE)) ;
    if ((var_cas_inNeedsToSavePCLATH).isBuiltAndTrue ()) {
      GGS_registerExpression  var_cas_first_register_second_byte ;
      var_cas_first_register_second_byte = GGS_registerExpression ::constructor_new (_inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 1U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_first_var_second_byte_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_15 ;
      const GGS_registerExpression  _temp_53587 = var_cas_first_register_second_byte ;
      if (_temp_53587._isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_53587._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_53587 (HERE), var_cas_inTotalBankCount, GGS_uint (true, 0U), var_cas_inRegisterTable, var_cas_first_var_second_byte_IPICregisterDescription, automatic_var_15 COMMA_SOURCE_FILE_AT_LINE (1537)) ;
        }
      }
      GGS_registerExpression  var_cas_PCLATH_register ;
      var_cas_PCLATH_register = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "PCLATH"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_PCLATH_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_16 ;
      const GGS_registerExpression  _temp_53988 = var_cas_PCLATH_register ;
      if (_temp_53988._isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_53988._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_53988 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (_inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_PCLATH_IPICregisterDescription, automatic_var_16 COMMA_SOURCE_FILE_AT_LINE (1547)) ;
        }
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_MOVF (_inLexique COMMA_HERE), var_cas_PCLATH_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_first_var_second_byte_IPICregisterDescription COMMA_HERE)) ;
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_CLRF (_inLexique COMMA_HERE), var_cas_PCLATH_IPICregisterDescription COMMA_HERE)) ;
    }
    GGS_bool var_cas_continuesInSequence ;
    GGS_uint  var_cas_currentBank ;
    var_cas_currentBank = GGS_uint (true, 0U) ;
    ::routine_handleMidrangeInstructionList (_inLexique,  var_cas_inInterruptRoutineInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioGenerationOptimizationMessages,  var_cas_inTotalBankCount,  var_cas_currentBank,  GGS_bool (true, true),  var_cas_continuesInSequence,  GGS_routineKind::constructor_interruptRoutine (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (1561)) ;
    if (((var_cas_continuesInSequence)._operator_not ()).isBuiltAndTrue ()) {
      var_cas_inEndOfInterruptLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "execution cannot reach the end of the interrupt routine") COMMA_SOURCE_FILE_AT_LINE (1577)) ;
    }
    if ((var_cas_inNeedsToSavePCLATH).isBuiltAndTrue ()) {
      GGS_registerExpression  var_cas_first_register_second_byte ;
      var_cas_first_register_second_byte = GGS_registerExpression ::constructor_new (_inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 1U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_first_var_second_byte_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_17 ;
      const GGS_registerExpression  _temp_55545 = var_cas_first_register_second_byte ;
      if (_temp_55545._isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_55545._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_55545 (HERE), var_cas_inTotalBankCount, GGS_uint (true, 0U), var_cas_inRegisterTable, var_cas_first_var_second_byte_IPICregisterDescription, automatic_var_17 COMMA_SOURCE_FILE_AT_LINE (1581)) ;
        }
      }
      GGS_registerExpression  var_cas_PCLATH_register ;
      var_cas_PCLATH_register = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "PCLATH"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_PCLATH_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_18 ;
      const GGS_registerExpression  _temp_55946 = var_cas_PCLATH_register ;
      if (_temp_55946._isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_55946._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_55946 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (_inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_PCLATH_IPICregisterDescription, automatic_var_18 COMMA_SOURCE_FILE_AT_LINE (1591)) ;
        }
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_MOVF (_inLexique COMMA_HERE), var_cas_first_var_second_byte_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_PCLATH_IPICregisterDescription COMMA_HERE)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (_inLexique COMMA_HERE), var_cas_first_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (_inLexique COMMA_HERE), var_cas_second_IPICregisterDescription, GGS_bool (true, false) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (_inLexique COMMA_HERE), var_cas_second_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_RETFIE ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateInterruptRoutineForControllerWithSharedRAM\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "generateInterruptRoutineForControllerWithoutSharedRAM"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateInterruptRoutineForControllerWithoutSharedRAM (C_Compiler & _inLexique,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_lstring   var_cas_inFirstSaveRegister,
                                const GGS_lstring   var_cas_inSecondSaveRegister,
                                const GGS_bool  var_cas_inNeedsToSavePCLATH,
                                const GGS_midrange_instructionList   var_cas_inInterruptRoutineInstructionList,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_constantMap   var_cas_inConstantMap,
                                const GGS_location   var_cas_inEndOfInterruptLocation,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_string & var_cas_ioGenerationOptimizationMessages COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateInterruptRoutineForControllerWithoutSharedRAM at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_uintlist  var_cas_registerAddressList ;
  GGS_uint  var_cas_size ;
  GGS_bitSliceTable  automatic_var_19 ;
  GGS_string automatic_var_20 ;
  const GGS_registerTable  _temp_57970 = var_cas_inRegisterTable ;
  if (_temp_57970._isBuilt ()) {
    _temp_57970 (HERE)->method_searchKey (_inLexique, var_cas_inFirstSaveRegister, var_cas_registerAddressList, var_cas_size, automatic_var_19, automatic_var_20 COMMA_SOURCE_FILE_AT_LINE (1630)) ;
  }
  GGS_bool var_cas_accessibleFromBank0 ;
  var_cas_accessibleFromBank0 = GGS_bool (true, false) ;
  GGS_uint  var_cas_offset ;
  var_cas_offset = GGS_uint (true, 0U) ;
  {
    GGS_uintlist::cEnumerator enumerator_58130 (var_cas_registerAddressList, true) ;
    const GGS_uintlist::cElement * operand_58130 = NULL ;
    while (((operand_58130 = enumerator_58130.nextObject ()))
        && ((var_cas_accessibleFromBank0)._operator_not ().isBuiltAndTrue ())) {
      macroValidPointer (operand_58130) ;
      var_cas_offset = (operand_58130->mValue)._operator_and (GGS_uint (true, 127U)) ;
      var_cas_accessibleFromBank0 = ((operand_58130->mValue)._operator_and (GGS_uint (true, 3968U)))._operator_isEqual (GGS_uint (true, 0U)) ;
    }
  }
  if (((var_cas_accessibleFromBank0)._operator_not ()).isBuiltAndTrue ()) {
    var_cas_inFirstSaveRegister.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '"))._operator_concat (var_cas_inFirstSaveRegister))._operator_concat (GGS_string (true, "' variable cannot be accessed from bank 0")) COMMA_SOURCE_FILE_AT_LINE (1639)) ;
  }
  if (((var_cas_inNeedsToSavePCLATH)._operator_and ((var_cas_size)._operator_isNotEqual (GGS_uint (true, 3U)))).isBuiltAndTrue ()) {
    var_cas_inFirstSaveRegister.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '"))._operator_concat (var_cas_inFirstSaveRegister))._operator_concat (GGS_string (true, "' variable size is ")))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1641))))._operator_concat (GGS_string (true, " (it should be 3)")) COMMA_SOURCE_FILE_AT_LINE (1642)) ;
  }else if ((((var_cas_inNeedsToSavePCLATH)._operator_not ())._operator_and ((var_cas_size)._operator_isNotEqual (GGS_uint (true, 2U)))).isBuiltAndTrue ()) {
    var_cas_inFirstSaveRegister.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '"))._operator_concat (var_cas_inFirstSaveRegister))._operator_concat (GGS_string (true, "' variable size is ")))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1643))))._operator_concat (GGS_string (true, " (it should be 2)")) COMMA_SOURCE_FILE_AT_LINE (1644)) ;
  }
  GGS_uintlist  var_cas_saveStatusRegisterAddressList ;
  var_cas_saveStatusRegisterAddressList = var_cas_registerAddressList ;
  GGS_bitSliceTable  automatic_var_21 ;
  GGS_string automatic_var_22 ;
  const GGS_registerTable  _temp_58973 = var_cas_inRegisterTable ;
  if (_temp_58973._isBuilt ()) {
    _temp_58973 (HERE)->method_searchKey (_inLexique, var_cas_inSecondSaveRegister, var_cas_registerAddressList, var_cas_size, automatic_var_21, automatic_var_22 COMMA_SOURCE_FILE_AT_LINE (1647)) ;
  }
  var_cas_saveStatusRegisterAddressList = (var_cas_saveStatusRegisterAddressList)._operator_concat (var_cas_registerAddressList) ;
  if (((var_cas_size)._operator_isNotEqual (GGS_uint (true, 1U))).isBuiltAndTrue ()) {
    var_cas_inSecondSaveRegister.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '"))._operator_concat (var_cas_inSecondSaveRegister))._operator_concat (GGS_string (true, "' variable size is ")))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1650))))._operator_concat (GGS_string (true, " (it should be 1)")) COMMA_SOURCE_FILE_AT_LINE (1651)) ;
  }
  GGS_bool var_cas_accessibleFromBank1 ;
  var_cas_accessibleFromBank1 = GGS_bool (true, false) ;
  {
    GGS_uintlist::cEnumerator enumerator_59398 (var_cas_registerAddressList, true) ;
    const GGS_uintlist::cElement * operand_59398 = NULL ;
    while (((operand_59398 = enumerator_59398.nextObject ()))
        && ((var_cas_accessibleFromBank1)._operator_not ().isBuiltAndTrue ())) {
      macroValidPointer (operand_59398) ;
      var_cas_accessibleFromBank1 = ((operand_59398->mValue)._operator_and (GGS_uint (true, 3968U)))._operator_isEqual (GGS_uint (true, 128U)) ;
    }
  }
  if (((var_cas_accessibleFromBank1)._operator_not ()).isBuiltAndTrue ()) {
    var_cas_inSecondSaveRegister.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '"))._operator_concat (var_cas_inSecondSaveRegister))._operator_concat (GGS_string (true, "' variable cannot be accessed from bank 1")) COMMA_SOURCE_FILE_AT_LINE (1659)) ;
  }
  GGS_bool var_cas_offsetOk ;
  var_cas_offsetOk = GGS_bool (true, true) ;
  {
    GGS_uintlist::cEnumerator enumerator_59809 (var_cas_registerAddressList, true) ;
    const GGS_uintlist::cElement * operand_59809 = NULL ;
    while (((operand_59809 = enumerator_59809.nextObject ()))
        && (var_cas_offsetOk.isBuiltAndTrue ())) {
      macroValidPointer (operand_59809) ;
      var_cas_offsetOk = (var_cas_offset)._operator_isEqual ((operand_59809->mValue)._operator_and (GGS_uint (true, 127U))) ;
      if (((var_cas_offsetOk)._operator_not ()).isBuiltAndTrue ()) {
        var_cas_inSecondSaveRegister.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "the '"))._operator_concat (var_cas_inSecondSaveRegister))._operator_concat (GGS_string (true, "' variable has an offset equal to ")))._operator_concat ((operand_59809->mValue)._operator_and (GGS_uint (true, 127U)).reader_hexString (_inLexique COMMA_SOURCE_FILE_AT_LINE (1666))))._operator_concat (GGS_string (true, ", while '")))._operator_concat (var_cas_inFirstSaveRegister))._operator_concat (GGS_string (true, "' has an offset equal to ")))._operator_concat (var_cas_offset.reader_hexString (_inLexique COMMA_SOURCE_FILE_AT_LINE (1667))))._operator_concat (GGS_string (true, " (tthe two offsets should be equal)")) COMMA_SOURCE_FILE_AT_LINE (1668)) ;
      }
    }
  }
  if (((GGS_uint ::constructor_errorCount (_inLexique COMMA_HERE))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
    GGS_registerExpression  var_cas_first_register ;
    var_cas_first_register = GGS_registerExpression ::constructor_new (_inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_first_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_23 ;
    const GGS_registerExpression  _temp_60476 = var_cas_first_register ;
    if (_temp_60476._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_60476._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_60476 (HERE), var_cas_inTotalBankCount, GGS_uint (true, 0U), var_cas_inRegisterTable, var_cas_first_IPICregisterDescription, automatic_var_23 COMMA_SOURCE_FILE_AT_LINE (1674)) ;
      }
    }
    GGS_registerExpression  var_cas_first_register_second_byte ;
    var_cas_first_register_second_byte = GGS_registerExpression ::constructor_new (_inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 1U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_first_reg_second_byte_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_24 ;
    const GGS_registerExpression  _temp_60829 = var_cas_first_register_second_byte ;
    if (_temp_60829._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_60829._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_60829 (HERE), var_cas_inTotalBankCount, GGS_uint (true, 0U), var_cas_inRegisterTable, var_cas_first_reg_second_byte_IPICregisterDescription, automatic_var_24 COMMA_SOURCE_FILE_AT_LINE (1683)) ;
      }
    }
    GGS_registerExpression  var_cas_STATUS_register ;
    var_cas_STATUS_register = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "STATUS"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_STATUS_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_25 ;
    const GGS_registerExpression  _temp_61211 = var_cas_STATUS_register ;
    if (_temp_61211._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_61211._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_61211 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (_inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_STATUS_IPICregisterDescription, automatic_var_25 COMMA_SOURCE_FILE_AT_LINE (1693)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_first_IPICregisterDescription COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (_inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_CLRF (_inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_first_reg_second_byte_IPICregisterDescription COMMA_HERE)) ;
    if ((var_cas_inNeedsToSavePCLATH).isBuiltAndTrue ()) {
      GGS_registerExpression  var_cas_first_register_third_byte ;
      var_cas_first_register_third_byte = GGS_registerExpression ::constructor_new (_inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 2U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_first_var_third_byte_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_26 ;
      const GGS_registerExpression  _temp_62245 = var_cas_first_register_third_byte ;
      if (_temp_62245._isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_62245._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_62245 (HERE), var_cas_inTotalBankCount, GGS_uint (true, 0U), var_cas_inRegisterTable, var_cas_first_var_third_byte_IPICregisterDescription, automatic_var_26 COMMA_SOURCE_FILE_AT_LINE (1707)) ;
        }
      }
      GGS_registerExpression  var_cas_PCLATH_register ;
      var_cas_PCLATH_register = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "PCLATH"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_PCLATH_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_27 ;
      const GGS_registerExpression  _temp_62645 = var_cas_PCLATH_register ;
      if (_temp_62645._isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_62645._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_62645 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (_inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_PCLATH_IPICregisterDescription, automatic_var_27 COMMA_SOURCE_FILE_AT_LINE (1717)) ;
        }
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_MOVF (_inLexique COMMA_HERE), var_cas_PCLATH_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_first_var_third_byte_IPICregisterDescription COMMA_HERE)) ;
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_CLRF (_inLexique COMMA_HERE), var_cas_PCLATH_IPICregisterDescription COMMA_HERE)) ;
    }
    GGS_bool var_cas_continuesInSequence ;
    GGS_uint  var_cas_currentBank ;
    var_cas_currentBank = GGS_uint (true, 0U) ;
    ::routine_handleMidrangeInstructionList (_inLexique,  var_cas_inInterruptRoutineInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioGenerationOptimizationMessages,  var_cas_inTotalBankCount,  var_cas_currentBank,  GGS_bool (true, true),  var_cas_continuesInSequence,  GGS_routineKind::constructor_interruptRoutine (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (1731)) ;
    if (((var_cas_continuesInSequence)._operator_not ()).isBuiltAndTrue ()) {
      var_cas_inEndOfInterruptLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "execution cannot reach the end of the interrupt routine") COMMA_SOURCE_FILE_AT_LINE (1747)) ;
    }
    if ((var_cas_inNeedsToSavePCLATH).isBuiltAndTrue ()) {
      GGS_registerExpression  var_cas_first_register_third_byte ;
      var_cas_first_register_third_byte = GGS_registerExpression ::constructor_new (_inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 2U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_first_var_second_byte_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_28 ;
      const GGS_registerExpression  _temp_64198 = var_cas_first_register_third_byte ;
      if (_temp_64198._isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_64198._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_64198 (HERE), var_cas_inTotalBankCount, GGS_uint (true, 0U), var_cas_inRegisterTable, var_cas_first_var_second_byte_IPICregisterDescription, automatic_var_28 COMMA_SOURCE_FILE_AT_LINE (1751)) ;
        }
      }
      GGS_registerExpression  var_cas_PCLATH_register ;
      var_cas_PCLATH_register = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "PCLATH"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_PCLATH_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_29 ;
      const GGS_registerExpression  _temp_64599 = var_cas_PCLATH_register ;
      if (_temp_64599._isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_64599._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_64599 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (_inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_PCLATH_IPICregisterDescription, automatic_var_29 COMMA_SOURCE_FILE_AT_LINE (1761)) ;
        }
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_MOVF (_inLexique COMMA_HERE), var_cas_first_var_second_byte_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_PCLATH_IPICregisterDescription COMMA_HERE)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (_inLexique COMMA_HERE), var_cas_first_reg_second_byte_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (_inLexique COMMA_HERE), var_cas_first_IPICregisterDescription, GGS_bool (true, false) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (_inLexique COMMA_HERE), var_cas_first_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_RETFIE ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateInterruptRoutineForControllerWithoutSharedRAM\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of routine "build_midrange_assembly_instruction_list"    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_midrange_assembly_instruction_list (C_Compiler & _inLexique,
                                const GGS_uint   var_cas_inTotalPageCount,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_bool  var_cas_inHasSharedRAMBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_midrange_model  var_cas_inPiccoloModel,
                                const GGS_bool  var_cas_inHasInterrupt,
                                GGS_midrange_ipic_instructionList  & var_cas_outGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_midrange_assembly_instruction_list at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_generationOptimizationMessages ;
  var_cas_generationOptimizationMessages = GGS_string (true, "") ;
  GGS_routineMap  var_cas_routineMap ;
  var_cas_routineMap = GGS_routineMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  {
    GGS_midrange_routineDefinitionList::cEnumerator enumerator_66406 (var_cas_inPiccoloModel.reader_mRoutineDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1796)), true) ;
    const GGS_midrange_routineDefinitionList::cElement * operand_66406 = NULL ;
    while (((operand_66406 = enumerator_66406.nextObject ()))) {
      macroValidPointer (operand_66406) ;
      if ((((operand_66406->mRequiredBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1797)))._operator_isNotEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE)))._operator_and ((operand_66406->mRequiredBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1797)))._operator_strictSup (GGS_uint (true, 15U)))).isBuiltAndTrue ()) {
        operand_66406->mRequiredBank.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the required bank value should be lower or equal to 15") COMMA_SOURCE_FILE_AT_LINE (1799)) ;
      }
      if ((((operand_66406->mReturnedBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1800)))._operator_isNotEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE)))._operator_and ((operand_66406->mReturnedBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1800)))._operator_strictSup (GGS_uint (true, 15U)))).isBuiltAndTrue ()) {
        operand_66406->mReturnedBank.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the returned bank value should be lower or equal to 15") COMMA_SOURCE_FILE_AT_LINE (1802)) ;
      }
      var_cas_routineMap.modifier_insertKey (_inLexique, operand_66406->mRoutineName, operand_66406->mIsNoReturn, operand_66406->mRequiredBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1803)), operand_66406->mReturnedBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1803)), operand_66406->mPreservesBank COMMA_SOURCE_FILE_AT_LINE (1803)) ;
    }
  }
  GGS_constantMap  var_cas_constantMap ;
  var_cas_constantMap = GGS_constantMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  {
    GGS_constantDefinitionList::cEnumerator enumerator_67042 (var_cas_inPiccoloModel.reader_mConstantDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1807)), true) ;
    const GGS_constantDefinitionList::cElement * operand_67042 = NULL ;
    while (((operand_67042 = enumerator_67042.nextObject ()))) {
      macroValidPointer (operand_67042) ;
      GGS_sint  var_cas_result ;
      const GGS_immediatExpression  _temp_67121 = operand_67042->mExpression ;
      if (_temp_67121._isBuilt ()) {
        typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_67121._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_67121 (HERE), var_cas_inRegisterTable, var_cas_constantMap, var_cas_result COMMA_SOURCE_FILE_AT_LINE (1808)) ;
        }
      }
      if ((var_cas_inRegisterTable.reader_hasKey (_inLexique, operand_67042->mConstantName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1809)) COMMA_SOURCE_FILE_AT_LINE (1809))).isBuiltAndTrue ()) {
        operand_67042->mConstantName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "'"))._operator_concat (operand_67042->mConstantName))._operator_concat (GGS_string (true, "' is alreday declared as ram register or special register")) COMMA_SOURCE_FILE_AT_LINE (1811)) ;
      }else{
        var_cas_constantMap.modifier_insertKey (_inLexique, operand_67042->mConstantName, var_cas_result COMMA_SOURCE_FILE_AT_LINE (1812)) ;
      }
    }
  }
  if ((var_cas_routineMap.reader_hasKey (_inLexique, GGS_string (true, "main") COMMA_SOURCE_FILE_AT_LINE (1816))).isBuiltAndTrue ()) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  automatic_var_30 ;
    GGS_bool automatic_var_31 ;
    const GGS_routineMap  _temp_67612 = var_cas_routineMap ;
    if (_temp_67612._isBuilt ()) {
      _temp_67612 (HERE)->method_searchKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "main"), GGS_location (_inLexique) COMMA_HERE), var_cas_isNoReturn, var_cas_requiredBank, automatic_var_30, automatic_var_31 COMMA_SOURCE_FILE_AT_LINE (1819)) ;
    }
    if (((var_cas_isNoReturn)._operator_not ()).isBuiltAndTrue ()) {
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the \"main\" should be declared with \"noreturn\" qualifier: \"noreturn main requiresbank 0\"") COMMA_SOURCE_FILE_AT_LINE (1822)) ;
    }
    if (((var_cas_requiredBank)._operator_isNotEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the \"main\" should be declared with \"requiresbank 0\" qualifier: \"noreturn main requiresbank 0\"") COMMA_SOURCE_FILE_AT_LINE (1825)) ;
    }
  }else{
    var_cas_inPiccoloModel.reader_mEndOfProgram (_inLexique COMMA_SOURCE_FILE_AT_LINE (1827)).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the program should declare the \"main\" routine") COMMA_SOURCE_FILE_AT_LINE (1828)) ;
  }
  GGS_bool var_cas_needsToSavePCLATH ;
  var_cas_needsToSavePCLATH = GGS_bool (true, false) ;
  {
    GGS_midrange_routineDefinitionList::cEnumerator enumerator_68252 (var_cas_inPiccoloModel.reader_mRoutineDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1831)), true) ;
    const GGS_midrange_routineDefinitionList::cElement * operand_68252 = NULL ;
    while (((operand_68252 = enumerator_68252.nextObject ()))) {
      macroValidPointer (operand_68252) ;
      if (((operand_68252->mPage.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1832)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_needsToSavePCLATH = GGS_bool (true, true) ;
      }
      if (((operand_68252->mPage.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1835)))._operator_supOrEqual (var_cas_inTotalPageCount)).isBuiltAndTrue ()) {
        operand_68252->mPage.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "invalid value ("))._operator_concat (operand_68252->mPage.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1836)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1836))))._operator_concat (GGS_string (true, "); the device has ")))._operator_concat (var_cas_inTotalPageCount.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1836))))._operator_concat (GGS_string (true, " 2k page(s) on rom")) COMMA_SOURCE_FILE_AT_LINE (1837)) ;
      }
    }
  }
  if ((var_cas_needsToSavePCLATH).isBuiltAndTrue ()) {
    var_cas_needsToSavePCLATH = GGS_bool (true, false) ;
    {
      GGS_midrange_interruptDefinitionList::cEnumerator enumerator_68759 (var_cas_inPiccoloModel.reader_mInterruptDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1842)), true) ;
      const GGS_midrange_interruptDefinitionList::cElement * operand_68759 = NULL ;
      while (((operand_68759 = enumerator_68759.nextObject ()))
          && ((var_cas_needsToSavePCLATH)._operator_not ().isBuiltAndTrue ())) {
        macroValidPointer (operand_68759) ;
        {
          GGS_midrange_instructionList::cEnumerator enumerator_68861 (operand_68759->mInstructionList, true) ;
          const GGS_midrange_instructionList::cElement * operand_68861 = NULL ;
          while (((operand_68861 = enumerator_68861.nextObject ()))
              && ((var_cas_needsToSavePCLATH)._operator_not ().isBuiltAndTrue ())) {
            macroValidPointer (operand_68861) ;
            const GGS_midrange_instruction  _temp_68940 = operand_68861->mInstruction ;
            if (_temp_68940._isBuilt ()) {
              typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL _method = findCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL (_temp_68940._galgasObjectRunTimeInfo ()) ;
              if (_method != NULL) {
                _method (_inLexique, _temp_68940 (HERE), var_cas_needsToSavePCLATH COMMA_SOURCE_FILE_AT_LINE (1844)) ;
              }
            }
          }
        }
      }
    }
  }
  var_cas_outGeneratedInstructionList = GGS_midrange_ipic_instructionList ::constructor_emptyList () ;
  GGS_uint  var_cas_localLabelIndex ;
  var_cas_localLabelIndex = GGS_uint (true, 0U) ;
  var_cas_outGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_JUMP ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "main"), GGS_location (_inLexique) COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE) COMMA_HERE)) ;
  if ((var_cas_inHasInterrupt).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_ORG ::constructor_new (_inLexique, GGS_uint (true, 4U) COMMA_HERE)) ;
    {
      GGS_midrange_interruptDefinitionList::cEnumerator enumerator_69548 (var_cas_inPiccoloModel.reader_mInterruptDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1861)), true) ;
      const GGS_midrange_interruptDefinitionList::cElement * operand_69548 = NULL ;
      while (((operand_69548 = enumerator_69548.nextObject ()))) {
        macroValidPointer (operand_69548) ;
        if ((var_cas_inHasSharedRAMBank).isBuiltAndTrue ()) {
          ::routine_generateInterruptRoutineForControllerWithSharedRAM (_inLexique,  var_cas_inTotalBankCount,  var_cas_inRegisterTable,  operand_69548->mFirstSaveRegister,  operand_69548->mSecondSaveRegister,  var_cas_needsToSavePCLATH,  operand_69548->mInstructionList,  var_cas_routineMap,  var_cas_constantMap,  operand_69548->mEndOfInterruptLocation,  var_cas_outGeneratedInstructionList,  var_cas_localLabelIndex,  var_cas_generationOptimizationMessages COMMA_SOURCE_FILE_AT_LINE (1863)) ;
        }else{
          ::routine_generateInterruptRoutineForControllerWithoutSharedRAM (_inLexique,  var_cas_inTotalBankCount,  var_cas_inRegisterTable,  operand_69548->mFirstSaveRegister,  operand_69548->mSecondSaveRegister,  var_cas_needsToSavePCLATH,  operand_69548->mInstructionList,  var_cas_routineMap,  var_cas_constantMap,  operand_69548->mEndOfInterruptLocation,  var_cas_outGeneratedInstructionList,  var_cas_localLabelIndex,  var_cas_generationOptimizationMessages COMMA_SOURCE_FILE_AT_LINE (1878)) ;
        }
      }
    }
  }
  GGS_uint  var_cas_currentPage ;
  var_cas_currentPage = GGS_uint (true, 0U) ;
  GGS_uint _variant_72508 = var_cas_inTotalPageCount ;
  GGS_bool _condition_72508 (_variant_72508._isBuilt (), true) ;
  while (_condition_72508.isBuiltAndTrue ()) {
    _condition_72508 = (var_cas_currentPage)._operator_strictInf (var_cas_inTotalPageCount) ;
    if (_condition_72508.isBuiltAndTrue ()) {
      if (_variant_72508.uintValue () == 0) {
        _inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (1941)) ;
        _condition_72508 = GGS_bool (true, false) ;
      }else{
        _variant_72508._decrement_operation (_inLexique COMMA_HERE) ;
        GGS_bool var_cas_orgGenerated ;
        var_cas_orgGenerated = (var_cas_currentPage)._operator_isEqual (GGS_uint (true, 0U)) ;
        {
          GGS_midrange_routineDefinitionList::cEnumerator enumerator_70787 (var_cas_inPiccoloModel.reader_mRoutineDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1899)), true) ;
          const GGS_midrange_routineDefinitionList::cElement * operand_70787 = NULL ;
          while (((operand_70787 = enumerator_70787.nextObject ()))) {
            macroValidPointer (operand_70787) ;
            if (((operand_70787->mPage.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1900)))._operator_isEqual (var_cas_currentPage)).isBuiltAndTrue ()) {
              if (((var_cas_orgGenerated)._operator_not ()).isBuiltAndTrue ()) {
                var_cas_outGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_ORG ::constructor_new (_inLexique, var_cas_currentPage._multiply_operation (_inLexique, GGS_uint (true, 2048U) COMMA_SOURCE_FILE_AT_LINE (1902)) COMMA_HERE)) ;
                var_cas_orgGenerated = GGS_bool (true, true) ;
              }
              GGS_bool var_cas_continuesInSequence ;
              GGS_uint  var_cas_currentBank ;
              var_cas_currentBank = operand_70787->mRequiredBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1906)) ;
              GGS_routineKind var_cas_routineKind ;
              if ((operand_70787->mIsNoReturn).isBuiltAndTrue ()) {
                var_cas_routineKind = GGS_routineKind::constructor_noReturnRoutine (_inLexique COMMA_HERE) ;
              }else{
                var_cas_routineKind = GGS_routineKind::constructor_regularRoutine (_inLexique COMMA_HERE) ;
              }
              var_cas_outGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, operand_70787->mRoutineName COMMA_HERE)) ;
              ::routine_handleMidrangeInstructionList (_inLexique,  operand_70787->mInstructionList,  var_cas_routineMap,  var_cas_inRegisterTable,  var_cas_constantMap,  var_cas_localLabelIndex,  var_cas_outGeneratedInstructionList,  var_cas_generationOptimizationMessages,  var_cas_inTotalBankCount,  var_cas_currentBank,  operand_70787->mPreservesBank,  var_cas_continuesInSequence,  var_cas_routineKind COMMA_SOURCE_FILE_AT_LINE (1914)) ;
              if (((((operand_70787->mIsNoReturn)._operator_not ())._operator_and ((operand_70787->mReturnedBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1928)))._operator_isNotEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE))))._operator_and ((var_cas_currentBank)._operator_isNotEqual (operand_70787->mReturnedBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1928))))).isBuiltAndTrue ()) {
                operand_70787->mRoutineName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, (GGS_string (true, "execution will not set bank selection to "))._operator_concat (operand_70787->mReturnedBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1929)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1929))) COMMA_SOURCE_FILE_AT_LINE (1930)) ;
              }
              if (((operand_70787->mIsNoReturn)._operator_and (var_cas_continuesInSequence)).isBuiltAndTrue ()) {
                operand_70787->mRoutineName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "execution should not reach the end of a \"noreturn\" routine") COMMA_SOURCE_FILE_AT_LINE (1933)) ;
              }
              if (((operand_70787->mIsNoReturn)._operator_not ()).isBuiltAndTrue ()) {
                var_cas_outGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_RETURN ::constructor_new (_inLexique, operand_70787->mRoutineName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (1936)) COMMA_HERE)) ;
              }
            }
          }
        }
        var_cas_currentPage._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1940)) ;
      }
    }
  }
  if ((GGS_bool (true, _inLexique.boolOptionValueFromKeys ("piccolo_options", "ouputListingFile" COMMA_SOURCE_FILE_AT_LINE (1943)))).isBuiltAndTrue ()) {
    var_cas_ioListFileContents._dotAssign_operation (GGS_string (true, "").reader_stringByLeftAndRightPadding (_inLexique, GGS_uint (true, 79U), GGS_char (true, '*') COMMA_SOURCE_FILE_AT_LINE (1944))) ;
    var_cas_ioListFileContents.writeString ("\n") ;
    var_cas_ioListFileContents.writeString ("*") ;
    var_cas_ioListFileContents._dotAssign_operation (GGS_string (true, "IPIC INSTRUCTION LIST").reader_stringByLeftAndRightPadding (_inLexique, GGS_uint (true, 77U), GGS_char (true, ' ') COMMA_SOURCE_FILE_AT_LINE (1945))) ;
    var_cas_ioListFileContents.writeString ("*\n") ;
    var_cas_ioListFileContents._dotAssign_operation (GGS_string (true, "").reader_stringByLeftAndRightPadding (_inLexique, GGS_uint (true, 79U), GGS_char (true, '*') COMMA_SOURCE_FILE_AT_LINE (1946))) ;
    var_cas_ioListFileContents.writeString ("\n"
      "\n") ;
    if (((var_cas_generationOptimizationMessages.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1947)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
      var_cas_ioListFileContents.writeString ("Optimizations during generation:\n") ;
      var_cas_ioListFileContents._dotAssign_operation (var_cas_generationOptimizationMessages) ;
      var_cas_ioListFileContents.writeString ("\n") ;
    }
    var_cas_ioListFileContents.writeString ("Generated intermediate code:\n") ;
    GGS_uint  var_cas_index ;
    var_cas_index = GGS_uint (true, 0U) ;
    GGS_uint  var_cas_currentAddress ;
    var_cas_currentAddress = GGS_uint (true, 0U) ;
    {
      GGS_midrange_ipic_instructionList::cEnumerator enumerator_73240 (var_cas_outGeneratedInstructionList, true) ;
      const GGS_midrange_ipic_instructionList::cElement * operand_73240 = NULL ;
      while (((operand_73240 = enumerator_73240.nextObject ()))) {
        macroValidPointer (operand_73240) ;
        const GGS_midrange_ipic_instruction  _temp_73281 = operand_73240->mInstruction ;
        if (_temp_73281._isBuilt ()) {
          _temp_73281 (HERE)->method_setCurrentAddress (_inLexique, var_cas_currentAddress COMMA_SOURCE_FILE_AT_LINE (1956)) ;
        }
        var_cas_ioListFileContents._dotAssign_operation (var_cas_index.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1957)).reader_stringByLeftPadding (_inLexique, GGS_uint (true, 5U), GGS_char (true, ' ') COMMA_SOURCE_FILE_AT_LINE (1957))) ;
        var_cas_ioListFileContents.writeString (": ") ;
        const GGS_midrange_ipic_instruction  _temp_73426 = operand_73240->mInstruction ;
        if (_temp_73426._isBuilt ()) {
          _temp_73426 (HERE)->method_displayIPICinstruction (_inLexique, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1958)) ;
        }
        var_cas_ioListFileContents.writeString ("\n") ;
        var_cas_index._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1960)) ;
      }
    }
    var_cas_ioListFileContents.writeString ("\n") ;
    var_cas_ioListFileContents.writeString ("Minimum code size without optimization: ") ;
    var_cas_ioListFileContents._dotAssign_operation (var_cas_currentAddress.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1963))) ;
    var_cas_ioListFileContents.writeString (" instructions.\n"
      "\n") ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_midrange_assembly_instruction_list\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_midrange_checkingAndBuildIPIC (void) {
 enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL (category_method__midrange_instruction__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction.slotID ()) ;
 enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_FOREVER__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_FOREVER.slotID ()) ;
 enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_structured_if__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_structured_if.slotID ()) ;
 enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_CALL__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_CALL.slotID ()) ;
 enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_JSR__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_JSR.slotID ()) ;
 enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_GOTO__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_GOTO.slotID ()) ;
 enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_JUMP__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_JUMP.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_nobanksel__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_nobanksel.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_banksel__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_banksel.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_FD__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_FD.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_F__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_F.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_FB__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_FB.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_JSR__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_JSR.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_CALL__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_CALL.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_JUMP__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_JUMP.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_GOTO__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_GOTO.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_CLRWDT__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_CLRWDT.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_CLRW__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_CLRW.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_NOP__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_NOP.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_SLEEP__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_SLEEP.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_literalOperation__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_literalOperation.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_MNOP__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_MNOP.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_FOREVER__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_FOREVER.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_IF_BitTest__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_IF_BitTest.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition) category_method__midrange_incDecRegisterInCondition__buildIPICinstructionForCondition, gClassInfoFor__midrange_incDecRegisterInCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition) category_method__midrange_incDecRegisterInCondition__computeInstructionCountForCondition, gClassInfoFor__midrange_incDecRegisterInCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition) category_method__midrange_negateCondition__buildIPICinstructionForCondition, gClassInfoFor__midrange_negateCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition) category_method__midrange_negateCondition__computeInstructionCountForCondition, gClassInfoFor__midrange_negateCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition) category_method__midrange_andCondition__buildIPICinstructionForCondition, gClassInfoFor__midrange_andCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition) category_method__midrange_andCondition__computeInstructionCountForCondition, gClassInfoFor__midrange_andCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition) category_method__midrange_bitTest_in_structured_if_condition__buildIPICinstructionForCondition, gClassInfoFor__midrange_bitTest_in_structured_if_condition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition) category_method__midrange_bitTest_in_structured_if_condition__computeInstructionCountForCondition, gClassInfoFor__midrange_bitTest_in_structured_if_condition.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_structured_if__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_structured_if.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_do_while__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_do_while.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_IF_IncDec__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_IF_IncDec.slotID ()) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogueAction prologueEpilogueObjectFor_midrange_checkingAndBuildIPIC (prologueRoutineFor_midrange_checkingAndBuildIPIC,
                                   NULL) ;

//---------------------------------------------------------------------------*

