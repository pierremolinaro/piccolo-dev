//---------------------------------------------------------------------------*
//                                                                           *
//                 File 'midrange_checkingAndBuildIPIC.cpp'                  *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      october 8th, 2008, at 20h24'2"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "midrange_checkingAndBuildIPIC.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "midrange_checkingAndBuildIPIC.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@midrange_instruction.instructionUsesGOTOorCALL'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction * operand_731,
                                GGS_bool & /* var_cas_ioUsesGOTOorCALL */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_731 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_instruction.instructionUsesGOTOorCALL'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL> gDispatchTableFor__midrange_instruction__instructionUsesGOTOorCALL ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL (typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__midrange_instruction__instructionUsesGOTOorCALL.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL
findCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__midrange_instruction__instructionUsesGOTOorCALL.count ()) {
    result = gDispatchTableFor__midrange_instruction__instructionUsesGOTOorCALL (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL (superClassPtr) ;
      gDispatchTableFor__midrange_instruction__instructionUsesGOTOorCALL.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_FOREVER.instructionUsesGOTOorCALL'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_FOREVER__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_FOREVER * operand_909,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_909 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true, true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_structured_if.instructionUsesGOTOorCALL'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_structured_if__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_structured_if * operand_1115,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1115 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true, true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@midrange_instruction_CALL.instructionUsesGOTOorCALL'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_CALL__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_CALL * operand_1312,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1312 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true, true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@midrange_instruction_JSR.instructionUsesGOTOorCALL'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_JSR__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_JSR * operand_1508,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1508 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true, true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@midrange_instruction_GOTO.instructionUsesGOTOorCALL'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_GOTO__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_GOTO * operand_1705,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1705 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true, true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@midrange_instruction_JUMP.instructionUsesGOTOorCALL'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_JUMP__instructionUsesGOTOorCALL (C_Compiler &,
                                const cPtr_midrange_instruction_JUMP * operand_1902,
                                GGS_bool & var_cas_ioUsesGOTOorCALL
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1902 != NULL) {
    var_cas_ioUsesGOTOorCALL = GGS_bool (true, true) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_instruction.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList> gDispatchTableFor__midrange_instruction__build_midrange_ipic_instructionList ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__midrange_instruction__build_midrange_ipic_instructionList.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList
findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__midrange_instruction__build_midrange_ipic_instructionList.count ()) {
    result = gDispatchTableFor__midrange_instruction__build_midrange_ipic_instructionList (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (superClassPtr) ;
      gDispatchTableFor__midrange_instruction__build_midrange_ipic_instructionList.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "handleMidrangeInstructionList"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_handleMidrangeInstructionList (C_Compiler & _inLexique,
                                const GGS_midrange_instructionList   var_cas_inInstructionList,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & var_cas_outContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_handleMidrangeInstructionList at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outContinuesInSequence = GGS_bool (true, true) ;
  {
    GGS_midrange_instructionList::cEnumerator enumerator_3177 (var_cas_inInstructionList, true) ;
    const GGS_midrange_instructionList::cElement * operand_3177 = NULL ;
    while (((operand_3177 = enumerator_3177.nextObject ()))) {
      macroValidPointer (operand_3177) ;
      if (((var_cas_outContinuesInSequence)._operator_not ()).isBuiltAndTrue ()) {
        operand_3177->mInstruction.reader_mInstructionLocation (_inLexique COMMA_SOURCE_FILE_AT_LINE (106)).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "Unreachable code") COMMA_SOURCE_FILE_AT_LINE (107)) ;
        var_cas_outContinuesInSequence = GGS_bool (true, true) ;
      }
      const GGS_midrange_instruction  _temp_3396 = operand_3177->mInstruction ;
      if (_temp_3396._isBuilt ()) {
        typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList _method = findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (_temp_3396._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_3396 (HERE), var_cas_inRoutineMap, var_cas_inRegisterTable, var_cas_inConstantMap, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inShouldPreserveBank, var_cas_outContinuesInSequence, var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (109)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_handleMidrangeInstructionList\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_nobanksel.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_nobanksel__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_nobanksel * operand_3853,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & /* var_cas_ioGeneratedInstructionList */,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3853 != NULL) {
    if ((var_cas_inShouldPreserveBank).isBuiltAndTrue ()) {
      operand_3853->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "cannot use \"nobank\" here: bank selection should be preserved (use it in a \"banksave\" construct)") COMMA_SOURCE_FILE_AT_LINE (142)) ;
    }
    var_cas_ioCurrentBank = GGS_uint ::constructor_max (_inLexique COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_savebank.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_savebank__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_savebank * operand_4666,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4666 != NULL) {
    GGS_registerExpression  var_cas_STATUS_register ;
    var_cas_STATUS_register = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "STATUS"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_STATUS_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_0 ;
    const GGS_registerExpression  _temp_5283 = var_cas_STATUS_register ;
    if (_temp_5283._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_5283._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_5283 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_STATUS_IPICregisterDescription, automatic_var_0 COMMA_SOURCE_FILE_AT_LINE (165)) ;
      }
    }
    GGS_midrange_ipic_registerExpression var_cas_save_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_1 ;
    const GGS_registerExpression  _temp_5541 = operand_4666->mRegister ;
    if (_temp_5541._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_5541._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_5541 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_save_IPICregisterDescription, automatic_var_1 COMMA_SOURCE_FILE_AT_LINE (174)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, operand_4666->mInstructionLocation, GGS_midrange_instruction_FD_base_code::constructor_SWAPF (_inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, operand_4666->mInstructionLocation, GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_save_IPICregisterDescription COMMA_HERE)) ;
    GGS_uint  var_cas_finalBank ;
    var_cas_finalBank = var_cas_ioCurrentBank ;
    ::routine_handleMidrangeInstructionList (_inLexique,  operand_4666->mInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_finalBank,  GGS_bool (true, false),  var_cas_ioContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (196)) ;
    if (((var_cas_ioContinuesInSequence)._operator_not ()).isBuiltAndTrue ()) {
      operand_4666->mEndOfSaveBankInstruction.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "useless saving: execution does reach the end of \"savebank\" instruction list") COMMA_SOURCE_FILE_AT_LINE (212)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, operand_4666->mInstructionLocation, GGS_midrange_instruction_FD_base_code::constructor_SWAPF (_inLexique COMMA_HERE), var_cas_save_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, operand_4666->mInstructionLocation, GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_banksel.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_banksel__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_banksel * operand_7315,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7315 != NULL) {
    if ((var_cas_inShouldPreserveBank).isBuiltAndTrue ()) {
      operand_7315->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "cannot use \"banksel\" here: bank selection should be preserved (save it in \"banksave\" construct)") COMMA_SOURCE_FILE_AT_LINE (245)) ;
    }
    GGS_registerExpression  var_cas_STATUS_register ;
    var_cas_STATUS_register = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "STATUS"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_STATUS_IPICregisterDescription ;
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    const GGS_registerExpression  _temp_8140 = var_cas_STATUS_register ;
    if (_temp_8140._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_8140._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_8140 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_STATUS_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (250)) ;
      }
    }
    GGS_lstring  var_cas_RP ;
    var_cas_RP = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "RP"), operand_7315->mInstructionLocation COMMA_HERE) ;
    GGS_uint  var_cas_rpIndex ;
    GGS_uint  var_cas_sliceSize ;
    const GGS_bitSliceTable  _temp_8378 = var_cas_bitSliceTable ;
    if (_temp_8378._isBuilt ()) {
      _temp_8378 (HERE)->method_searchKey (_inLexique, var_cas_RP, var_cas_rpIndex, var_cas_sliceSize COMMA_SOURCE_FILE_AT_LINE (260)) ;
    }
    if (((var_cas_sliceSize)._operator_isNotEqual (var_cas_inTotalBankCount._substract_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (261)).reader_significantBitCount (_inLexique COMMA_SOURCE_FILE_AT_LINE (261)))).isBuiltAndTrue ()) {
      operand_7315->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, (((GGS_string (true, "internal error: sliceSize == "))._operator_concat (var_cas_sliceSize.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (262))))._operator_concat (GGS_string (true, ", significant bit count == ")))._operator_concat (var_cas_inTotalBankCount._substract_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (262)).reader_significantBitCount (_inLexique COMMA_SOURCE_FILE_AT_LINE (262)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (262))) COMMA_SOURCE_FILE_AT_LINE (263)) ;
    }
    if (((operand_7315->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (265)))._operator_isEqual (var_cas_ioCurrentBank)).isBuiltAndTrue ()) {
      operand_7315->mBankIndex.reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, ((GGS_string (true, "useless instruction: the bank "))._operator_concat (var_cas_ioCurrentBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (266))))._operator_concat (GGS_string (true, " is already selected")) COMMA_SOURCE_FILE_AT_LINE (266)) ;
    }else if (((operand_7315->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (267)))._operator_supOrEqual (var_cas_inTotalBankCount)).isBuiltAndTrue ()) {
      operand_7315->mBankIndex.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the bank "))._operator_concat (operand_7315->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (268)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (268))))._operator_concat (GGS_string (true, " does not exist (the device has ")))._operator_concat (var_cas_inTotalBankCount.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (268))))._operator_concat (GGS_string (true, " bank(s))")) COMMA_SOURCE_FILE_AT_LINE (269)) ;
    }else if (((var_cas_ioCurrentBank)._operator_isEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE))).isBuiltAndTrue ()) {
      GGS_uint  var_cas_n ;
      var_cas_n = var_cas_inTotalBankCount._substract_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (270)).reader_significantBitCount (_inLexique COMMA_SOURCE_FILE_AT_LINE (270)) ;
      GGS_uint  var_cas_shiftedBank ;
      var_cas_shiftedBank = operand_7315->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (271)) ;
      GGS_uint  var_cas_index ;
      var_cas_index = GGS_uint (true, 0U) ;
      GGS_uint _variant_9726 = var_cas_sliceSize ;
      GGS_bool _condition_9726 (_variant_9726._isBuilt (), true) ;
      while (_condition_9726.isBuiltAndTrue ()) {
        _condition_9726 = (var_cas_index)._operator_strictInf (var_cas_sliceSize) ;
        if (_condition_9726.isBuiltAndTrue ()) {
          if (_variant_9726.uintValue () == 0) {
            _inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (288)) ;
            _condition_9726 = GGS_bool (true, false) ;
          }else{
            _variant_9726._decrement_operation (_inLexique COMMA_HERE) ;
            GGS_midrange_bit_oriented_op var_cas_op ;
            if ((((var_cas_shiftedBank)._operator_and (GGS_uint (true, 1U)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
              var_cas_op = GGS_midrange_bit_oriented_op::constructor_BCF (_inLexique COMMA_HERE) ;
            }else{
              var_cas_op = GGS_midrange_bit_oriented_op::constructor_BSF (_inLexique COMMA_HERE) ;
            }
            var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FB ::constructor_new (_inLexique, operand_7315->mInstructionLocation, var_cas_op, var_cas_STATUS_IPICregisterDescription, var_cas_rpIndex._add_operation (_inLexique, var_cas_index COMMA_SOURCE_FILE_AT_LINE (284)) COMMA_HERE)) ;
            var_cas_index._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (286)) ;
            var_cas_shiftedBank = var_cas_shiftedBank._right_shift_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (287)) ;
          }
        }
      }
      var_cas_ioCurrentBank = operand_7315->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (289)) ;
    }else{
      GGS_bool var_cas_optimize ;
      var_cas_optimize = GGS_bool (true, _inLexique.boolOptionValueFromKeys ("piccolo_options", "performOptimizations" COMMA_SOURCE_FILE_AT_LINE (291))) ;
      GGS_uint  var_cas_shiftedBank ;
      var_cas_shiftedBank = operand_7315->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (292)) ;
      GGS_uint  var_cas_shiftedXorBank ;
      var_cas_shiftedXorBank = (operand_7315->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (293)))._operator_xor (var_cas_ioCurrentBank) ;
      GGS_uint  var_cas_index ;
      var_cas_index = GGS_uint (true, 0U) ;
      GGS_uint _variant_10874 = var_cas_sliceSize ;
      GGS_bool _condition_10874 (_variant_10874._isBuilt (), true) ;
      while (_condition_10874.isBuiltAndTrue ()) {
        _condition_10874 = (var_cas_index)._operator_strictInf (var_cas_sliceSize) ;
        if (_condition_10874.isBuiltAndTrue ()) {
          if (_variant_10874.uintValue () == 0) {
            _inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (317)) ;
            _condition_10874 = GGS_bool (true, false) ;
          }else{
            _variant_10874._decrement_operation (_inLexique COMMA_HERE) ;
            GGS_midrange_bit_oriented_op var_cas_op ;
            if ((((var_cas_shiftedBank)._operator_and (GGS_uint (true, 1U)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
              var_cas_op = GGS_midrange_bit_oriented_op::constructor_BCF (_inLexique COMMA_HERE) ;
            }else{
              var_cas_op = GGS_midrange_bit_oriented_op::constructor_BSF (_inLexique COMMA_HERE) ;
            }
            if (((((var_cas_shiftedXorBank)._operator_and (GGS_uint (true, 1U)))._operator_isNotEqual (GGS_uint (true, 0U)))._operator_or ((var_cas_optimize)._operator_not ())).isBuiltAndTrue ()) {
              var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FB ::constructor_new (_inLexique, operand_7315->mInstructionLocation, var_cas_op, var_cas_STATUS_IPICregisterDescription, var_cas_rpIndex._add_operation (_inLexique, var_cas_index COMMA_SOURCE_FILE_AT_LINE (307)) COMMA_HERE)) ;
            }else{
              var_cas_ioListFileContents.writeString ("  line ") ;
              var_cas_ioListFileContents._dotAssign_operation (var_cas_ioGeneratedInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (310)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (310))) ;
              var_cas_ioListFileContents.writeString (": useless '") ;
              var_cas_ioListFileContents._dotAssign_operation (var_cas_op.reader_mnemonic (_inLexique COMMA_SOURCE_FILE_AT_LINE (311))) ;
              var_cas_ioListFileContents.writeString (" STATUS, ") ;
              var_cas_ioListFileContents._dotAssign_operation (var_cas_rpIndex._add_operation (_inLexique, var_cas_index COMMA_SOURCE_FILE_AT_LINE (312)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (312))) ;
              var_cas_ioListFileContents.writeString ("' not generated\n") ;
            }
            var_cas_index._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (314)) ;
            var_cas_shiftedBank = var_cas_shiftedBank._right_shift_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (315)) ;
            var_cas_shiftedXorBank = var_cas_shiftedXorBank._right_shift_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (316)) ;
          }
        }
      }
      var_cas_ioCurrentBank = operand_7315->mBankIndex.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (318)) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_FD.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_FD__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_FD * operand_11080,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11080 != NULL) {
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_2 ;
    const GGS_registerExpression  _temp_11599 = operand_11080->mRegisterExpression ;
    if (_temp_11599._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_11599._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_11599 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_2 COMMA_SOURCE_FILE_AT_LINE (338)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, operand_11080->mInstructionLocation, operand_11080->mInstruction_FD_base_code, var_cas_IPICregisterDescription, operand_11080->m_W_isDestination COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_F.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_F__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_F * operand_12032,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12032 != NULL) {
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_3 ;
    const GGS_registerExpression  _temp_12551 = operand_12032->mRegisterExpression ;
    if (_temp_12551._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_12551._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_12551 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_3 COMMA_SOURCE_FILE_AT_LINE (369)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, operand_12032->mInstructionLocation, operand_12032->mFAinstruction, var_cas_IPICregisterDescription COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_FB.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_FB__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_FB * operand_12950,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12950 != NULL) {
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    const GGS_registerExpression  _temp_13502 = operand_12950->mRegisterExpression ;
    if (_temp_13502._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_13502._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_13502 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (400)) ;
      }
    }
    GGS_uint  var_cas_bitNumber ;
    const GGS_bitNumberExpression  _temp_13665 = operand_12950->mBitNumber ;
    if (_temp_13665._isBuilt ()) {
      typeCategoryMethod__bitNumberExpression__getBitNumber _method = findCategoryMethod__bitNumberExpression__getBitNumber (_temp_13665._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_13665 (HERE), var_cas_bitSliceTable, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (408)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FB ::constructor_new (_inLexique, operand_12950->mInstructionLocation, operand_12950->mBitOrientedOp, var_cas_IPICregisterDescription, var_cas_bitNumber COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_JSR.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_JSR__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_JSR * operand_14017,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_14017 != NULL) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  var_cas_returnedBank ;
    GGS_bool var_cas_preservesBank ;
    const GGS_routineMap  _temp_14576 = var_cas_inRoutineMap ;
    if (_temp_14576._isBuilt ()) {
      _temp_14576 (HERE)->method_searchKey (_inLexique, operand_14017->mTargetLabel, var_cas_isNoReturn, var_cas_requiredBank, var_cas_returnedBank, var_cas_preservesBank COMMA_SOURCE_FILE_AT_LINE (440)) ;
    }
    if ((((var_cas_requiredBank)._operator_isNotEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE)))._operator_and ((var_cas_requiredBank)._operator_isNotEqual (var_cas_ioCurrentBank))).isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage ;
      var_cas_errorMessage = (((GGS_string (true, "the routine '"))._operator_concat (operand_14017->mTargetLabel))._operator_concat (GGS_string (true, "' requires bank selection to be set to ")))._operator_concat (var_cas_requiredBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (442))) ;
      var_cas_errorMessage.writeString (", but bank selection ") ;
      if (((var_cas_ioCurrentBank)._operator_isEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE))).isBuiltAndTrue ()) {
        var_cas_errorMessage.writeString ("does contain any reliable value") ;
      }else{
        var_cas_errorMessage.writeString ("is set to ") ;
        var_cas_errorMessage._dotAssign_operation (var_cas_ioCurrentBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (447))) ;
      }
      operand_14017->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (450)) ;
    }
    if ((var_cas_isNoReturn).isBuiltAndTrue ()) {
      operand_14017->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a \"noreturn\" routine should be called with a GOTO or JUMP instruction") COMMA_SOURCE_FILE_AT_LINE (453)) ;
    }
    if (((var_cas_preservesBank)._operator_not ()).isBuiltAndTrue ()) {
      var_cas_ioCurrentBank = var_cas_returnedBank ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_JSR ::constructor_new (_inLexique, operand_14017->mInstructionLocation, operand_14017->mTargetLabel, GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_CALL.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_CALL__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_CALL * operand_15676,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_15676 != NULL) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  var_cas_returnedBank ;
    GGS_bool var_cas_preservesBank ;
    const GGS_routineMap  _temp_16235 = var_cas_inRoutineMap ;
    if (_temp_16235._isBuilt ()) {
      _temp_16235 (HERE)->method_searchKey (_inLexique, operand_15676->mTargetLabel, var_cas_isNoReturn, var_cas_requiredBank, var_cas_returnedBank, var_cas_preservesBank COMMA_SOURCE_FILE_AT_LINE (486)) ;
    }
    if ((((var_cas_requiredBank)._operator_isNotEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE)))._operator_and ((var_cas_requiredBank)._operator_isNotEqual (var_cas_ioCurrentBank))).isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage ;
      var_cas_errorMessage = (((GGS_string (true, "the routine '"))._operator_concat (operand_15676->mTargetLabel))._operator_concat (GGS_string (true, "' requires bank selection to be set to ")))._operator_concat (var_cas_requiredBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (488))) ;
      var_cas_errorMessage.writeString (", but bank selection ") ;
      if (((var_cas_ioCurrentBank)._operator_isEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE))).isBuiltAndTrue ()) {
        var_cas_errorMessage.writeString ("does contain any reliable value") ;
      }else{
        var_cas_errorMessage.writeString ("is set to ") ;
        var_cas_errorMessage._dotAssign_operation (var_cas_ioCurrentBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (493))) ;
      }
      operand_15676->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (496)) ;
    }
    if ((var_cas_isNoReturn).isBuiltAndTrue ()) {
      operand_15676->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a \"noreturn\" routine should be called with a GOTO or JUMP instruction") COMMA_SOURCE_FILE_AT_LINE (499)) ;
    }
    if (((var_cas_preservesBank)._operator_not ()).isBuiltAndTrue ()) {
      var_cas_ioCurrentBank = var_cas_returnedBank ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_CALL ::constructor_new (_inLexique, operand_15676->mInstructionLocation, operand_15676->mTargetLabel COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_JUMP.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_JUMP__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_JUMP * operand_17256,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17256 != NULL) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  automatic_var_4 ;
    GGS_bool automatic_var_5 ;
    const GGS_routineMap  _temp_17761 = var_cas_inRoutineMap ;
    if (_temp_17761._isBuilt ()) {
      _temp_17761 (HERE)->method_searchKey (_inLexique, operand_17256->mTargetLabel, var_cas_isNoReturn, var_cas_requiredBank, automatic_var_4, automatic_var_5 COMMA_SOURCE_FILE_AT_LINE (528)) ;
    }
    if ((((var_cas_requiredBank)._operator_isNotEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE)))._operator_and ((var_cas_requiredBank)._operator_isNotEqual (var_cas_ioCurrentBank))).isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage ;
      var_cas_errorMessage = (((GGS_string (true, "the routine '"))._operator_concat (operand_17256->mTargetLabel))._operator_concat (GGS_string (true, "' requires bank selection to be set to ")))._operator_concat (var_cas_requiredBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (530))) ;
      var_cas_errorMessage.writeString (", but bank selection ") ;
      if (((var_cas_ioCurrentBank)._operator_isEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE))).isBuiltAndTrue ()) {
        var_cas_errorMessage.writeString ("does contain any reliable value") ;
      }else{
        var_cas_errorMessage.writeString ("is set to ") ;
        var_cas_errorMessage._dotAssign_operation (var_cas_ioCurrentBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (535))) ;
      }
      operand_17256->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (538)) ;
    }
    if (((var_cas_isNoReturn)._operator_not ()).isBuiltAndTrue ()) {
      operand_17256->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a regular routine should be called with a CALL or JSR instruction") COMMA_SOURCE_FILE_AT_LINE (541)) ;
    }
    var_cas_ioContinuesInSequence = GGS_bool (true, false) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_JUMP ::constructor_new (_inLexique, operand_17256->mInstructionLocation, operand_17256->mTargetLabel, GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_GOTO.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_GOTO__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_GOTO * operand_18797,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18797 != NULL) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  automatic_var_6 ;
    GGS_bool automatic_var_7 ;
    const GGS_routineMap  _temp_19302 = var_cas_inRoutineMap ;
    if (_temp_19302._isBuilt ()) {
      _temp_19302 (HERE)->method_searchKey (_inLexique, operand_18797->mTargetLabel, var_cas_isNoReturn, var_cas_requiredBank, automatic_var_6, automatic_var_7 COMMA_SOURCE_FILE_AT_LINE (570)) ;
    }
    if ((((var_cas_requiredBank)._operator_isNotEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE)))._operator_and ((var_cas_requiredBank)._operator_isNotEqual (var_cas_ioCurrentBank))).isBuiltAndTrue ()) {
      GGS_string var_cas_errorMessage ;
      var_cas_errorMessage = (((GGS_string (true, "the routine '"))._operator_concat (operand_18797->mTargetLabel))._operator_concat (GGS_string (true, "' requires bank selection to be set to ")))._operator_concat (var_cas_requiredBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (572))) ;
      var_cas_errorMessage.writeString (", but bank selection ") ;
      if (((var_cas_ioCurrentBank)._operator_isEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE))).isBuiltAndTrue ()) {
        var_cas_errorMessage.writeString ("does contain any reliable value") ;
      }else{
        var_cas_errorMessage.writeString ("is set to ") ;
        var_cas_errorMessage._dotAssign_operation (var_cas_ioCurrentBank.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (577))) ;
      }
      operand_18797->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, var_cas_errorMessage COMMA_SOURCE_FILE_AT_LINE (580)) ;
    }
    if (((var_cas_isNoReturn)._operator_not ()).isBuiltAndTrue ()) {
      operand_18797->mTargetLabel.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a regular routine should be called with a CALL or JSR instruction") COMMA_SOURCE_FILE_AT_LINE (583)) ;
    }
    var_cas_ioContinuesInSequence = GGS_bool (true, false) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (_inLexique, operand_18797->mInstructionLocation, operand_18797->mTargetLabel COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_CLRWDT.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_CLRWDT__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_CLRWDT * operand_20260,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20260 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_CLRWDT ::constructor_new (_inLexique, operand_20260->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_CLRW.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_CLRW__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_CLRW * operand_20946,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20946 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_CLRW ::constructor_new (_inLexique, operand_20946->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_NOP.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_NOP__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_NOP * operand_21629,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21629 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_NOP ::constructor_new (_inLexique, operand_21629->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_SLEEP.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_SLEEP__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_SLEEP * operand_22313,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_22313 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_SLEEP ::constructor_new (_inLexique, operand_22313->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_literalOperation.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_literalOperation__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_literalOperation * operand_23010,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_23010 != NULL) {
    GGS_sint  var_cas_result ;
    const GGS_immediatExpression  _temp_23472 = operand_23010->mImmediatExpression ;
    if (_temp_23472._isBuilt ()) {
      typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_23472._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_23472 (HERE), var_cas_inRegisterTable, var_cas_inConstantMap, var_cas_result COMMA_SOURCE_FILE_AT_LINE (687)) ;
      }
    }
    if ((((var_cas_result)._operator_strictSup (GGS_sint (true, 255L)))._operator_or ((var_cas_result)._operator_strictInf (GGS_sint (true, 128L)._operator_unary_minus (_inLexique COMMA_HERE)))).isBuiltAndTrue ()) {
      operand_23010->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "immediate value is evaluated as "))._operator_concat (var_cas_result.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (690))))._operator_concat (GGS_string (true, " (should be betwween -128 and 255)")) COMMA_SOURCE_FILE_AT_LINE (691)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_literalOperation ::constructor_new (_inLexique, operand_23010->mInstructionLocation, operand_23010->mLiteralInstruction, (var_cas_result)._operator_and (GGS_sint (true, 255L)).reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (696)) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_MNOP.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_MNOP__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_MNOP * operand_26145,
                                const GGS_routineMap   /* var_cas_inRoutineMap */,
                                const GGS_registerTable   /* var_cas_inRegisterTable */,
                                const GGS_constantMap   /* var_cas_inConstantMap */,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */,
                                const GGS_uint   /* var_cas_inTotalBankCount */,
                                GGS_uint  & /* var_cas_ioCurrentBank */,
                                const GGS_bool  /* var_cas_inShouldPreserveBank */,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  /* var_cas_inRoutineKind */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_26145 != NULL) {
    if (((operand_26145->mOccurrenceFactor.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (765)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
      operand_26145->mOccurrenceFactor.reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "occurrence argument is zero: no generated code") COMMA_SOURCE_FILE_AT_LINE (766)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_MNOP ::constructor_new (_inLexique, operand_26145->mInstructionLocation, operand_26145->mOccurrenceFactor COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_FOREVER.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_FOREVER__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_FOREVER * operand_32000,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_32000 != NULL) {
    switch (var_cas_inRoutineKind.enumValue ()) {
    case GGS_routineKind::enum_regularRoutine:
      {
      operand_32000->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "a regular routine does not accept the \"forever\" instruction") COMMA_SOURCE_FILE_AT_LINE (911)) ;
      }
      break ;
    case GGS_routineKind::enum_noReturnRoutine:
      {
      }
      break ;
    case GGS_routineKind::enum_interruptRoutine:
      {
      operand_32000->mInstructionLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "an interrupt routine does not accept the \"forever\" instruction") COMMA_SOURCE_FILE_AT_LINE (914)) ;
      }
      break ;
    case GGS_routineKind::kNotBuilt:
      break ;
    }
    GGS_uint  var_cas_finalBank ;
    var_cas_finalBank = var_cas_ioCurrentBank ;
    GGS_string var_cas_label0 ;
    var_cas_label0 = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (917))) ;
    var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (918)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, operand_32000->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    ::routine_handleMidrangeInstructionList (_inLexique,  operand_32000->mInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_finalBank,  var_cas_inShouldPreserveBank,  var_cas_ioContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (920)) ;
    if (((var_cas_ioCurrentBank)._operator_isNotEqual (var_cas_finalBank)).isBuiltAndTrue ()) {
      operand_32000->mEndOfInstructionList.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "instruction list does not leave bank selection unchanged") COMMA_SOURCE_FILE_AT_LINE (936)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (_inLexique, operand_32000->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, operand_32000->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    var_cas_ioContinuesInSequence = GGS_bool (true, false) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_IF_BitTest.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_IF_BitTest__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_IF_BitTest * operand_33783,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_33783 != NULL) {
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    const GGS_registerExpression  _temp_34293 = operand_33783->mRegisterExpression ;
    if (_temp_34293._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_34293._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_34293 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (963)) ;
      }
    }
    GGS_uint  var_cas_bitNumber ;
    const GGS_bitNumberExpression  _temp_34456 = operand_33783->mBitNumber ;
    if (_temp_34456._isBuilt ()) {
      typeCategoryMethod__bitNumberExpression__getBitNumber _method = findCategoryMethod__bitNumberExpression__getBitNumber (_temp_34456._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_34456 (HERE), var_cas_bitSliceTable, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (971)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_BitTestSkip ::constructor_new (_inLexique, operand_33783->mInstructionLocation, operand_33783->mSkipIfSet, var_cas_IPICregisterDescription, var_cas_bitNumber COMMA_HERE)) ;
    GGS_bool var_cas_unusedContinuesInSequence ;
    var_cas_unusedContinuesInSequence = GGS_bool (true, true) ;
    const GGS_midrange_instruction  _temp_34785 = operand_33783->mInstruction ;
    if (_temp_34785._isBuilt ()) {
      typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList _method = findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (_temp_34785._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_34785 (HERE), var_cas_inRoutineMap, var_cas_inRegisterTable, var_cas_inConstantMap, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inShouldPreserveBank, var_cas_unusedContinuesInSequence, var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (983)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_conditionExpression.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition> gDispatchTableFor__midrange_conditionExpression__buildIPICinstructionForCondition ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__midrange_conditionExpression__buildIPICinstructionForCondition.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition
findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__midrange_conditionExpression__buildIPICinstructionForCondition.count ()) {
    result = gDispatchTableFor__midrange_conditionExpression__buildIPICinstructionForCondition (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (superClassPtr) ;
      gDispatchTableFor__midrange_conditionExpression__buildIPICinstructionForCondition.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_conditionExpression.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition> gDispatchTableFor__midrange_conditionExpression__computeInstructionCountForCondition ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__midrange_conditionExpression__computeInstructionCountForCondition.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition
findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__midrange_conditionExpression__computeInstructionCountForCondition.count ()) {
    result = gDispatchTableFor__midrange_conditionExpression__computeInstructionCountForCondition (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (superClassPtr) ;
      gDispatchTableFor__midrange_conditionExpression__computeInstructionCountForCondition.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_incDecRegisterInCondition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_incDecRegisterInCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_midrange_incDecRegisterInCondition * operand_35853,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_uint   var_cas_inCurrentBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_35853 != NULL) {
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_8 ;
    const GGS_registerExpression  _temp_36277 = operand_35853->mRegisterExpression ;
    if (_temp_36277._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_36277._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_36277 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_8 COMMA_SOURCE_FILE_AT_LINE (1033)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_incDecRegisterInCondition ::constructor_new (_inLexique, var_cas_inInstructionLocation, var_cas_IPICregisterDescription, var_cas_inTargetLabel, operand_35853->mIncrement, operand_35853->m_W_isDestination, (operand_35853->mBranchIfZero)._operator_xor (var_cas_inComplementaryBranch) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_incDecRegisterInCondition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_incDecRegisterInCondition__computeInstructionCountForCondition (C_Compiler &,
                                const cPtr_midrange_incDecRegisterInCondition * operand_36786,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_36786 != NULL) {
    if (((operand_36786->mBranchIfZero)._operator_xor (var_cas_inComplementaryBranch)).isBuiltAndTrue ()) {
      var_cas_outInstructionCount = GGS_uint (true, 3U) ;
    }else{
      var_cas_outInstructionCount = GGS_uint (true, 2U) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_negateCondition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_negateCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_midrange_negateCondition * operand_37122,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_uint   var_cas_inCurrentBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_37122 != NULL) {
    const GGS_midrange_conditionExpression  _temp_37472 = operand_37122->mCondition ;
    if (_temp_37472._isBuilt ()) {
      typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_37472._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_37472 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, (var_cas_inComplementaryBranch)._operator_not (), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1077)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_negateCondition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_negateCondition__computeInstructionCountForCondition (C_Compiler & _inLexique,
                                const cPtr_midrange_negateCondition * operand_37847,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_37847 != NULL) {
    const GGS_midrange_conditionExpression  _temp_37960 = operand_37847->mCondition ;
    if (_temp_37960._isBuilt ()) {
      typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (_temp_37960._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_37960 (HERE), (var_cas_inComplementaryBranch)._operator_not (), var_cas_outInstructionCount COMMA_SOURCE_FILE_AT_LINE (1096)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_andCondition.buildIPICinstructionForCondition'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_andCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_midrange_andCondition * operand_38164,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_uint   var_cas_inCurrentBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_38164 != NULL) {
    if ((var_cas_inComplementaryBranch).isBuiltAndTrue ()) {
      const GGS_midrange_conditionExpression  _temp_38553 = operand_38164->mLeftExpression ;
      if (_temp_38553._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_38553._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_38553 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1116)) ;
        }
      }
      const GGS_midrange_conditionExpression  _temp_38834 = operand_38164->mRightExpression ;
      if (_temp_38834._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_38834._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_38834 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1127)) ;
        }
      }
    }else{
      GGS_string var_cas_label0 ;
      var_cas_label0 = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1139))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1139)) ;
      const GGS_midrange_conditionExpression  _temp_39207 = operand_38164->mLeftExpression ;
      if (_temp_39207._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_39207._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_39207 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), var_cas_inInstructionLocation, var_cas_label0, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1140)) ;
        }
      }
      const GGS_midrange_conditionExpression  _temp_39481 = operand_38164->mRightExpression ;
      if (_temp_39481._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_39481._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_39481 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, false), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1151)) ;
        }
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, var_cas_inInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_andCondition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_andCondition__computeInstructionCountForCondition (C_Compiler & _inLexique,
                                const cPtr_midrange_andCondition * operand_39982,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_39982 != NULL) {
    GGS_uint  var_cas_countLeft ;
    const GGS_midrange_conditionExpression  _temp_40120 = operand_39982->mLeftExpression ;
    if (_temp_40120._isBuilt ()) {
      typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (_temp_40120._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_40120 (HERE), var_cas_inComplementaryBranch, var_cas_countLeft COMMA_SOURCE_FILE_AT_LINE (1173)) ;
      }
    }
    GGS_uint  var_cas_countRight ;
    const GGS_midrange_conditionExpression  _temp_40244 = operand_39982->mLeftExpression ;
    if (_temp_40244._isBuilt ()) {
      typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (_temp_40244._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_40244 (HERE), var_cas_inComplementaryBranch, var_cas_countRight COMMA_SOURCE_FILE_AT_LINE (1178)) ;
      }
    }
    var_cas_outInstructionCount = var_cas_countLeft._add_operation (_inLexique, var_cas_countRight COMMA_SOURCE_FILE_AT_LINE (1182)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_bitTest_in_structured_if_condition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_bitTest_in_structured_if_condition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_midrange_bitTest_in_structured_if_condition * operand_40507,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_uint   var_cas_inCurrentBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & /* var_cas_ioListFileContents */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_40507 != NULL) {
    GGS_bitSliceTable  var_cas_bitSliceTable ;
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    const GGS_registerExpression  _temp_40964 = operand_40507->mRegisterExpression ;
    if (_temp_40964._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_40964._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_40964 (HERE), var_cas_inTotalBankCount, var_cas_inCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, var_cas_bitSliceTable COMMA_SOURCE_FILE_AT_LINE (1200)) ;
      }
    }
    GGS_uint  var_cas_bitNumber ;
    const GGS_bitNumberExpression  _temp_41127 = operand_40507->mBitNumber ;
    if (_temp_41127._isBuilt ()) {
      typeCategoryMethod__bitNumberExpression__getBitNumber _method = findCategoryMethod__bitNumberExpression__getBitNumber (_temp_41127._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_41127 (HERE), var_cas_bitSliceTable, var_cas_bitNumber COMMA_SOURCE_FILE_AT_LINE (1208)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_BitTestSkip ::constructor_new (_inLexique, var_cas_inInstructionLocation, (operand_40507->mBTFSSinstruction)._operator_xor (var_cas_inComplementaryBranch), var_cas_IPICregisterDescription, var_cas_bitNumber COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_JUMP ::constructor_new (_inLexique, var_cas_inInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_inTargetLabel, var_cas_inInstructionLocation COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_bitTest_in_structured_if_condition.computeInstructionCountForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_bitTest_in_structured_if_condition__computeInstructionCountForCondition (C_Compiler &,
                                const cPtr_midrange_bitTest_in_structured_if_condition * operand_41769,
                                const GGS_bool  /* var_cas_inComplementaryBranch */,
                                GGS_uint  & var_cas_outInstructionCount
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_41769 != NULL) {
    var_cas_outInstructionCount = GGS_uint (true, 2U) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_structured_if.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_structured_if__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_structured_if * operand_42026,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_42026 != NULL) {
    GGS_bool var_cas_generateComplementaryCondition ;
    var_cas_generateComplementaryCondition = GGS_bool (true, false) ;
    if ((GGS_bool (true, _inLexique.boolOptionValueFromKeys ("piccolo_options", "performOptimizations" COMMA_SOURCE_FILE_AT_LINE (1253)))).isBuiltAndTrue ()) {
      GGS_uint  var_cas_directCount ;
      const GGS_midrange_conditionExpression  _temp_42604 = operand_42026->mIfCondition ;
      if (_temp_42604._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (_temp_42604._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_42604 (HERE), GGS_bool (true, true), var_cas_directCount COMMA_SOURCE_FILE_AT_LINE (1254)) ;
        }
      }
      if (((operand_42026->mElseInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1255)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_directCount._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1256)) ;
      }
      GGS_uint  var_cas_complementaryCount ;
      const GGS_midrange_conditionExpression  _temp_42789 = operand_42026->mIfCondition ;
      if (_temp_42789._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition _method = findCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition (_temp_42789._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_42789 (HERE), GGS_bool (true, false), var_cas_complementaryCount COMMA_SOURCE_FILE_AT_LINE (1258)) ;
        }
      }
      if (((operand_42026->mThenInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1259)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_complementaryCount._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1260)) ;
      }
      if (((var_cas_complementaryCount)._operator_strictInf (var_cas_directCount)).isBuiltAndTrue ()) {
        var_cas_generateComplementaryCondition = GGS_bool (true, true) ;
        var_cas_ioListFileContents.writeString ("  line ") ;
        var_cas_ioListFileContents._dotAssign_operation (var_cas_ioGeneratedInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1264)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1264))) ;
        var_cas_ioListFileContents.writeString (": generates complementary test (saves ") ;
        var_cas_ioListFileContents._dotAssign_operation (var_cas_directCount._substract_operation (_inLexique, var_cas_complementaryCount COMMA_SOURCE_FILE_AT_LINE (1265)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1265))) ;
        var_cas_ioListFileContents.writeString (" instruction") ;
        if (((var_cas_directCount._substract_operation (_inLexique, var_cas_complementaryCount COMMA_SOURCE_FILE_AT_LINE (1266)))._operator_strictSup (GGS_uint (true, 1U))).isBuiltAndTrue ()) {
          var_cas_ioListFileContents.writeString ("s") ;
        }
        var_cas_ioListFileContents.writeString (")\n") ;
      }
    }
    GGS_uint  var_cas_elseBranchFinalBank ;
    var_cas_elseBranchFinalBank = var_cas_ioCurrentBank ;
    GGS_uint  var_cas_thenBranchFinalBank ;
    var_cas_thenBranchFinalBank = var_cas_ioCurrentBank ;
    GGS_bool var_cas_elseContinuesInSequence ;
    GGS_bool var_cas_thenContinuesInSequence ;
    if ((var_cas_generateComplementaryCondition).isBuiltAndTrue ()) {
      GGS_string var_cas_label_nextCondition ;
      var_cas_label_nextCondition = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1278))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1278)) ;
      GGS_string var_cas_label_endOfIfinstruction ;
      var_cas_label_endOfIfinstruction = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1279))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1279)) ;
      const GGS_midrange_conditionExpression  _temp_43854 = operand_42026->mIfCondition ;
      if (_temp_43854._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_43854._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_43854 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, false), operand_42026->mInstructionLocation, var_cas_label_nextCondition, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1281)) ;
        }
      }
      ::routine_handleMidrangeInstructionList (_inLexique,  operand_42026->mElseInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_elseBranchFinalBank,  var_cas_inShouldPreserveBank,  var_cas_elseContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1293)) ;
      if (((operand_42026->mThenInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1308)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (_inLexique, operand_42026->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_42026->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_nextCondition, operand_42026->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      ::routine_handleMidrangeInstructionList (_inLexique,  operand_42026->mThenInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_thenBranchFinalBank,  var_cas_inShouldPreserveBank,  var_cas_thenContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1312)) ;
      if (((operand_42026->mThenInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1326)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_42026->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      }
    }else{
      GGS_string var_cas_label_nextCondition ;
      var_cas_label_nextCondition = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1331))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1331)) ;
      GGS_string var_cas_label_endOfIfinstruction ;
      var_cas_label_endOfIfinstruction = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1332))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1332)) ;
      const GGS_midrange_conditionExpression  _temp_45677 = operand_42026->mIfCondition ;
      if (_temp_45677._isBuilt ()) {
        typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_45677._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_45677 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), operand_42026->mInstructionLocation, var_cas_label_nextCondition, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1334)) ;
        }
      }
      ::routine_handleMidrangeInstructionList (_inLexique,  operand_42026->mThenInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_thenBranchFinalBank,  var_cas_inShouldPreserveBank,  var_cas_thenContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1346)) ;
      if (((operand_42026->mElseInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1361)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (_inLexique, operand_42026->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_42026->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_nextCondition, operand_42026->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      ::routine_handleMidrangeInstructionList (_inLexique,  operand_42026->mElseInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_elseBranchFinalBank,  var_cas_inShouldPreserveBank,  var_cas_elseContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1365)) ;
      if (((operand_42026->mElseInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1379)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_42026->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
      }
    }
    if (((var_cas_elseBranchFinalBank)._operator_isEqual (var_cas_thenBranchFinalBank)).isBuiltAndTrue ()) {
      var_cas_ioCurrentBank = var_cas_elseBranchFinalBank ;
    }else{
      operand_42026->mEndOfElsePartLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "This branch does not leave bank selection value as the first one does") COMMA_SOURCE_FILE_AT_LINE (1387)) ;
      var_cas_elseBranchFinalBank = GGS_uint ::constructor_max (_inLexique COMMA_HERE) ;
    }
    var_cas_ioContinuesInSequence = (var_cas_thenContinuesInSequence)._operator_or (var_cas_elseContinuesInSequence) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_do_while.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_do_while__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_do_while * operand_47751,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & var_cas_ioContinuesInSequence,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_47751 != NULL) {
    GGS_string var_cas_labelInstructionBegin ;
    var_cas_labelInstructionBegin = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1409))) ;
    var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1409)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_labelInstructionBegin, operand_47751->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    GGS_uint  var_cas_finalBank ;
    var_cas_finalBank = var_cas_ioCurrentBank ;
    ::routine_handleMidrangeInstructionList (_inLexique,  operand_47751->mRepeatedInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_finalBank,  var_cas_inShouldPreserveBank,  var_cas_ioContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1414)) ;
    if (((var_cas_ioCurrentBank)._operator_isNotEqual (var_cas_finalBank)).isBuiltAndTrue ()) {
      operand_47751->mEndOfRepeatedInstructionList.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "This branch does not leave bank selection value unchanged") COMMA_SOURCE_FILE_AT_LINE (1430)) ;
    }
    {
      GGS_midrange_partList::cEnumerator enumerator_48954 (operand_47751->mWhilePartList, true) ;
      const GGS_midrange_partList::cElement * operand_48954 = NULL ;
      while (((operand_48954 = enumerator_48954.nextObject ()))) {
        macroValidPointer (operand_48954) ;
        if (((operand_48954->mInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (1433)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
          const GGS_midrange_conditionExpression  _temp_49051 = operand_48954->mCondition ;
          if (_temp_49051._isBuilt ()) {
            typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_49051._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_49051 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, false), operand_47751->mInstructionLocation, var_cas_labelInstructionBegin, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1434)) ;
            }
          }
        }else{
          GGS_string var_cas_nextBranchLabel ;
          var_cas_nextBranchLabel = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1446))) ;
          var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (1446)) ;
          const GGS_midrange_conditionExpression  _temp_49462 = operand_48954->mCondition ;
          if (_temp_49462._isBuilt ()) {
            typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition (_temp_49462._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_49462 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_ioLocalLabelIndex, GGS_bool (true, true), operand_47751->mInstructionLocation, var_cas_nextBranchLabel, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (1447)) ;
            }
          }
          GGS_uint  var_cas_bank ;
          var_cas_bank = var_cas_ioCurrentBank ;
          ::routine_handleMidrangeInstructionList (_inLexique,  operand_48954->mInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioListFileContents,  var_cas_inTotalBankCount,  var_cas_bank,  var_cas_inShouldPreserveBank,  var_cas_ioContinuesInSequence,  var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1459)) ;
          if (((var_cas_ioCurrentBank)._operator_isNotEqual (var_cas_bank)).isBuiltAndTrue ()) {
            operand_48954->mEndOfPartLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "This branch does not leave bank selection value unchanged") COMMA_SOURCE_FILE_AT_LINE (1475)) ;
          }
          var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_GOTO ::constructor_new (_inLexique, operand_47751->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_labelInstructionBegin, operand_47751->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
          var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_nextBranchLabel, operand_47751->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_instruction_IF_IncDec.build_midrange_ipic_instructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_instruction_IF_IncDec__build_midrange_ipic_instructionList (C_Compiler & _inLexique,
                                const cPtr_midrange_instruction_IF_IncDec * operand_50708,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_constantMap   var_cas_inConstantMap,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                const GGS_uint   var_cas_inTotalBankCount,
                                GGS_uint  & var_cas_ioCurrentBank,
                                const GGS_bool  var_cas_inShouldPreserveBank,
                                GGS_bool & /* var_cas_ioContinuesInSequence */,
                                const GGS_routineKind  var_cas_inRoutineKind
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_50708 != NULL) {
    GGS_midrange_instruction_FD_base_code var_cas_baseCode ;
    if ((operand_50708->mIncrement).isBuiltAndTrue ()) {
      var_cas_baseCode = GGS_midrange_instruction_FD_base_code::constructor_INCFSZ (_inLexique COMMA_HERE) ;
    }else{
      var_cas_baseCode = GGS_midrange_instruction_FD_base_code::constructor_DECFSZ (_inLexique COMMA_HERE) ;
    }
    GGS_midrange_ipic_registerExpression var_cas_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_9 ;
    const GGS_registerExpression  _temp_51406 = operand_50708->mRegisterExpression ;
    if (_temp_51406._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_51406._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_51406 (HERE), var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inRegisterTable, var_cas_IPICregisterDescription, automatic_var_9 COMMA_SOURCE_FILE_AT_LINE (1506)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, operand_50708->mInstructionLocation, var_cas_baseCode, var_cas_IPICregisterDescription, operand_50708->m_W_isDestination COMMA_HERE)) ;
    GGS_bool var_cas_unusedContinuesInSequence ;
    var_cas_unusedContinuesInSequence = GGS_bool (true, true) ;
    const GGS_midrange_instruction  _temp_51782 = operand_50708->mInstruction ;
    if (_temp_51782._isBuilt ()) {
      typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList _method = findCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList (_temp_51782._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_51782 (HERE), var_cas_inRoutineMap, var_cas_inRegisterTable, var_cas_inConstantMap, var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_inTotalBankCount, var_cas_ioCurrentBank, var_cas_inShouldPreserveBank, var_cas_unusedContinuesInSequence, var_cas_inRoutineKind COMMA_SOURCE_FILE_AT_LINE (1522)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "generateInterruptRoutineForControllerWithSharedRAM"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateInterruptRoutineForControllerWithSharedRAM (C_Compiler & _inLexique,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_lstring   var_cas_inFirstSaveRegister,
                                const GGS_lstring   var_cas_inSecondSaveRegister,
                                const GGS_bool  var_cas_inNeedsToSavePCLATH,
                                const GGS_midrange_instructionList   var_cas_inInterruptRoutineInstructionList,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_constantMap   var_cas_inConstantMap,
                                const GGS_location   var_cas_inEndOfInterruptLocation,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_string & var_cas_ioGenerationOptimizationMessages COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateInterruptRoutineForControllerWithSharedRAM at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_uintlist  var_cas_registerAddressList ;
  GGS_uint  var_cas_size ;
  GGS_bitSliceTable  automatic_var_10 ;
  GGS_string automatic_var_11 ;
  const GGS_registerTable  _temp_52817 = var_cas_inRegisterTable ;
  if (_temp_52817._isBuilt ()) {
    _temp_52817 (HERE)->method_searchKey (_inLexique, var_cas_inFirstSaveRegister, var_cas_registerAddressList, var_cas_size, automatic_var_10, automatic_var_11 COMMA_SOURCE_FILE_AT_LINE (1556)) ;
  }
  GGS_bool var_cas_accessibleFromBank0 ;
  var_cas_accessibleFromBank0 = GGS_bool (true, false) ;
  {
    GGS_uintlist::cEnumerator enumerator_52944 (var_cas_registerAddressList, true) ;
    const GGS_uintlist::cElement * operand_52944 = NULL ;
    while (((operand_52944 = enumerator_52944.nextObject ()))
        && ((var_cas_accessibleFromBank0)._operator_not ().isBuiltAndTrue ())) {
      macroValidPointer (operand_52944) ;
      var_cas_accessibleFromBank0 = ((operand_52944->mValue)._operator_and (GGS_uint (true, 3968U)))._operator_isEqual (GGS_uint (true, 0U)) ;
    }
  }
  if (((var_cas_accessibleFromBank0)._operator_not ()).isBuiltAndTrue ()) {
    var_cas_inFirstSaveRegister.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '"))._operator_concat (var_cas_inFirstSaveRegister))._operator_concat (GGS_string (true, "' variable cannot be accessed from bank 0")) COMMA_SOURCE_FILE_AT_LINE (1563)) ;
  }
  if (((var_cas_inNeedsToSavePCLATH)._operator_and ((var_cas_size)._operator_isNotEqual (GGS_uint (true, 2U)))).isBuiltAndTrue ()) {
    var_cas_inFirstSaveRegister.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '"))._operator_concat (var_cas_inFirstSaveRegister))._operator_concat (GGS_string (true, "' variable size is ")))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1565))))._operator_concat (GGS_string (true, " (it should be 2)")) COMMA_SOURCE_FILE_AT_LINE (1566)) ;
  }else if ((((var_cas_inNeedsToSavePCLATH)._operator_not ())._operator_and ((var_cas_size)._operator_isNotEqual (GGS_uint (true, 1U)))).isBuiltAndTrue ()) {
    var_cas_inFirstSaveRegister.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '"))._operator_concat (var_cas_inFirstSaveRegister))._operator_concat (GGS_string (true, "' variable size is ")))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1567))))._operator_concat (GGS_string (true, " (it should be 1)")) COMMA_SOURCE_FILE_AT_LINE (1568)) ;
  }
  GGS_bitSliceTable  automatic_var_12 ;
  GGS_string automatic_var_13 ;
  const GGS_registerTable  _temp_53692 = var_cas_inRegisterTable ;
  if (_temp_53692._isBuilt ()) {
    _temp_53692 (HERE)->method_searchKey (_inLexique, var_cas_inSecondSaveRegister, var_cas_registerAddressList, var_cas_size, automatic_var_12, automatic_var_13 COMMA_SOURCE_FILE_AT_LINE (1570)) ;
  }
  GGS_uint  var_cas_bankAccessibility ;
  var_cas_bankAccessibility = GGS_uint (true, 0U) ;
  {
    GGS_uintlist::cEnumerator enumerator_53814 (var_cas_registerAddressList, true) ;
    const GGS_uintlist::cElement * operand_53814 = NULL ;
    while (((operand_53814 = enumerator_53814.nextObject ()))) {
      macroValidPointer (operand_53814) ;
      var_cas_bankAccessibility = (var_cas_bankAccessibility)._operator_or (GGS_uint (true, 1U)._left_shift_operation (_inLexique, operand_53814->mValue._right_shift_operation (_inLexique, GGS_uint (true, 7U) COMMA_SOURCE_FILE_AT_LINE (1573)) COMMA_SOURCE_FILE_AT_LINE (1573))) ;
    }
  }
  if (((var_cas_bankAccessibility._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (1575)))._operator_isNotEqual (GGS_uint (true, 1U)._left_shift_operation (_inLexique, var_cas_inTotalBankCount COMMA_SOURCE_FILE_AT_LINE (1575)))).isBuiltAndTrue ()) {
    var_cas_inSecondSaveRegister.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '"))._operator_concat (var_cas_inSecondSaveRegister))._operator_concat (GGS_string (true, "' variable cannot be accessed from any bank")) COMMA_SOURCE_FILE_AT_LINE (1577)) ;
  }
  if (((var_cas_size)._operator_isNotEqual (GGS_uint (true, 1U))).isBuiltAndTrue ()) {
    var_cas_inSecondSaveRegister.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '"))._operator_concat (var_cas_inSecondSaveRegister))._operator_concat (GGS_string (true, "' variable size is ")))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1579))))._operator_concat (GGS_string (true, " (it should be 1)")) COMMA_SOURCE_FILE_AT_LINE (1580)) ;
  }
  if (((GGS_uint ::constructor_errorCount (_inLexique COMMA_HERE))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
    GGS_registerExpression  var_cas_first_register ;
    var_cas_first_register = GGS_registerExpression ::constructor_new (_inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_first_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_14 ;
    const GGS_registerExpression  _temp_54522 = var_cas_first_register ;
    if (_temp_54522._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_54522._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_54522 (HERE), var_cas_inTotalBankCount, GGS_uint (true, 0U), var_cas_inRegisterTable, var_cas_first_IPICregisterDescription, automatic_var_14 COMMA_SOURCE_FILE_AT_LINE (1585)) ;
      }
    }
    GGS_registerExpression  var_cas_second_register ;
    var_cas_second_register = GGS_registerExpression ::constructor_new (_inLexique, var_cas_inSecondSaveRegister, GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_second_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_15 ;
    const GGS_registerExpression  _temp_54840 = var_cas_second_register ;
    if (_temp_54840._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_54840._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_54840 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (_inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_second_IPICregisterDescription, automatic_var_15 COMMA_SOURCE_FILE_AT_LINE (1594)) ;
      }
    }
    GGS_registerExpression  var_cas_STATUS_register ;
    var_cas_STATUS_register = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "STATUS"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_STATUS_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_16 ;
    const GGS_registerExpression  _temp_55216 = var_cas_STATUS_register ;
    if (_temp_55216._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_55216._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_55216 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (_inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_STATUS_IPICregisterDescription, automatic_var_16 COMMA_SOURCE_FILE_AT_LINE (1604)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_second_IPICregisterDescription COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (_inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_CLRF (_inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_first_IPICregisterDescription COMMA_HERE)) ;
    if ((var_cas_inNeedsToSavePCLATH).isBuiltAndTrue ()) {
      GGS_registerExpression  var_cas_first_register_second_byte ;
      var_cas_first_register_second_byte = GGS_registerExpression ::constructor_new (_inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 1U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_first_var_second_byte_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_17 ;
      const GGS_registerExpression  _temp_56237 = var_cas_first_register_second_byte ;
      if (_temp_56237._isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_56237._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_56237 (HERE), var_cas_inTotalBankCount, GGS_uint (true, 0U), var_cas_inRegisterTable, var_cas_first_var_second_byte_IPICregisterDescription, automatic_var_17 COMMA_SOURCE_FILE_AT_LINE (1618)) ;
        }
      }
      GGS_registerExpression  var_cas_PCLATH_register ;
      var_cas_PCLATH_register = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "PCLATH"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_PCLATH_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_18 ;
      const GGS_registerExpression  _temp_56638 = var_cas_PCLATH_register ;
      if (_temp_56638._isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_56638._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_56638 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (_inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_PCLATH_IPICregisterDescription, automatic_var_18 COMMA_SOURCE_FILE_AT_LINE (1628)) ;
        }
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_MOVF (_inLexique COMMA_HERE), var_cas_PCLATH_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_first_var_second_byte_IPICregisterDescription COMMA_HERE)) ;
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_CLRF (_inLexique COMMA_HERE), var_cas_PCLATH_IPICregisterDescription COMMA_HERE)) ;
    }
    GGS_bool var_cas_continuesInSequence ;
    GGS_uint  var_cas_currentBank ;
    var_cas_currentBank = GGS_uint (true, 0U) ;
    ::routine_handleMidrangeInstructionList (_inLexique,  var_cas_inInterruptRoutineInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioGenerationOptimizationMessages,  var_cas_inTotalBankCount,  var_cas_currentBank,  GGS_bool (true, true),  var_cas_continuesInSequence,  GGS_routineKind::constructor_interruptRoutine (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (1642)) ;
    if (((var_cas_continuesInSequence)._operator_not ()).isBuiltAndTrue ()) {
      var_cas_inEndOfInterruptLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "execution cannot reach the end of the interrupt routine") COMMA_SOURCE_FILE_AT_LINE (1658)) ;
    }
    if ((var_cas_inNeedsToSavePCLATH).isBuiltAndTrue ()) {
      GGS_registerExpression  var_cas_first_register_second_byte ;
      var_cas_first_register_second_byte = GGS_registerExpression ::constructor_new (_inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 1U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_first_var_second_byte_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_19 ;
      const GGS_registerExpression  _temp_58195 = var_cas_first_register_second_byte ;
      if (_temp_58195._isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_58195._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_58195 (HERE), var_cas_inTotalBankCount, GGS_uint (true, 0U), var_cas_inRegisterTable, var_cas_first_var_second_byte_IPICregisterDescription, automatic_var_19 COMMA_SOURCE_FILE_AT_LINE (1662)) ;
        }
      }
      GGS_registerExpression  var_cas_PCLATH_register ;
      var_cas_PCLATH_register = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "PCLATH"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_PCLATH_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_20 ;
      const GGS_registerExpression  _temp_58596 = var_cas_PCLATH_register ;
      if (_temp_58596._isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_58596._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_58596 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (_inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_PCLATH_IPICregisterDescription, automatic_var_20 COMMA_SOURCE_FILE_AT_LINE (1672)) ;
        }
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_MOVF (_inLexique COMMA_HERE), var_cas_first_var_second_byte_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_PCLATH_IPICregisterDescription COMMA_HERE)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (_inLexique COMMA_HERE), var_cas_first_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (_inLexique COMMA_HERE), var_cas_second_IPICregisterDescription, GGS_bool (true, false) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (_inLexique COMMA_HERE), var_cas_second_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_RETFIE ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateInterruptRoutineForControllerWithSharedRAM\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "generateInterruptRoutineForControllerWithoutSharedRAM"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateInterruptRoutineForControllerWithoutSharedRAM (C_Compiler & _inLexique,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_lstring   var_cas_inFirstSaveRegister,
                                const GGS_lstring   var_cas_inSecondSaveRegister,
                                const GGS_bool  var_cas_inNeedsToSavePCLATH,
                                const GGS_midrange_instructionList   var_cas_inInterruptRoutineInstructionList,
                                const GGS_routineMap   var_cas_inRoutineMap,
                                const GGS_constantMap   var_cas_inConstantMap,
                                const GGS_location   var_cas_inEndOfInterruptLocation,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_string & var_cas_ioGenerationOptimizationMessages COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateInterruptRoutineForControllerWithoutSharedRAM at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_uintlist  var_cas_registerAddressList ;
  GGS_uint  var_cas_size ;
  GGS_bitSliceTable  automatic_var_21 ;
  GGS_string automatic_var_22 ;
  const GGS_registerTable  _temp_60620 = var_cas_inRegisterTable ;
  if (_temp_60620._isBuilt ()) {
    _temp_60620 (HERE)->method_searchKey (_inLexique, var_cas_inFirstSaveRegister, var_cas_registerAddressList, var_cas_size, automatic_var_21, automatic_var_22 COMMA_SOURCE_FILE_AT_LINE (1711)) ;
  }
  GGS_bool var_cas_accessibleFromBank0 ;
  var_cas_accessibleFromBank0 = GGS_bool (true, false) ;
  GGS_uint  var_cas_offset ;
  var_cas_offset = GGS_uint (true, 0U) ;
  {
    GGS_uintlist::cEnumerator enumerator_60780 (var_cas_registerAddressList, true) ;
    const GGS_uintlist::cElement * operand_60780 = NULL ;
    while (((operand_60780 = enumerator_60780.nextObject ()))
        && ((var_cas_accessibleFromBank0)._operator_not ().isBuiltAndTrue ())) {
      macroValidPointer (operand_60780) ;
      var_cas_offset = (operand_60780->mValue)._operator_and (GGS_uint (true, 127U)) ;
      var_cas_accessibleFromBank0 = ((operand_60780->mValue)._operator_and (GGS_uint (true, 3968U)))._operator_isEqual (GGS_uint (true, 0U)) ;
    }
  }
  if (((var_cas_accessibleFromBank0)._operator_not ()).isBuiltAndTrue ()) {
    var_cas_inFirstSaveRegister.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '"))._operator_concat (var_cas_inFirstSaveRegister))._operator_concat (GGS_string (true, "' variable cannot be accessed from bank 0")) COMMA_SOURCE_FILE_AT_LINE (1720)) ;
  }
  if (((var_cas_inNeedsToSavePCLATH)._operator_and ((var_cas_size)._operator_isNotEqual (GGS_uint (true, 3U)))).isBuiltAndTrue ()) {
    var_cas_inFirstSaveRegister.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '"))._operator_concat (var_cas_inFirstSaveRegister))._operator_concat (GGS_string (true, "' variable size is ")))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1722))))._operator_concat (GGS_string (true, " (it should be 3)")) COMMA_SOURCE_FILE_AT_LINE (1723)) ;
  }else if ((((var_cas_inNeedsToSavePCLATH)._operator_not ())._operator_and ((var_cas_size)._operator_isNotEqual (GGS_uint (true, 2U)))).isBuiltAndTrue ()) {
    var_cas_inFirstSaveRegister.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '"))._operator_concat (var_cas_inFirstSaveRegister))._operator_concat (GGS_string (true, "' variable size is ")))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1724))))._operator_concat (GGS_string (true, " (it should be 2)")) COMMA_SOURCE_FILE_AT_LINE (1725)) ;
  }
  GGS_uintlist  var_cas_saveStatusRegisterAddressList ;
  var_cas_saveStatusRegisterAddressList = var_cas_registerAddressList ;
  GGS_bitSliceTable  automatic_var_23 ;
  GGS_string automatic_var_24 ;
  const GGS_registerTable  _temp_61623 = var_cas_inRegisterTable ;
  if (_temp_61623._isBuilt ()) {
    _temp_61623 (HERE)->method_searchKey (_inLexique, var_cas_inSecondSaveRegister, var_cas_registerAddressList, var_cas_size, automatic_var_23, automatic_var_24 COMMA_SOURCE_FILE_AT_LINE (1728)) ;
  }
  var_cas_saveStatusRegisterAddressList = (var_cas_saveStatusRegisterAddressList)._operator_concat (var_cas_registerAddressList) ;
  if (((var_cas_size)._operator_isNotEqual (GGS_uint (true, 1U))).isBuiltAndTrue ()) {
    var_cas_inSecondSaveRegister.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '"))._operator_concat (var_cas_inSecondSaveRegister))._operator_concat (GGS_string (true, "' variable size is ")))._operator_concat (var_cas_size.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1731))))._operator_concat (GGS_string (true, " (it should be 1)")) COMMA_SOURCE_FILE_AT_LINE (1732)) ;
  }
  GGS_bool var_cas_accessibleFromBank1 ;
  var_cas_accessibleFromBank1 = GGS_bool (true, false) ;
  {
    GGS_uintlist::cEnumerator enumerator_62048 (var_cas_registerAddressList, true) ;
    const GGS_uintlist::cElement * operand_62048 = NULL ;
    while (((operand_62048 = enumerator_62048.nextObject ()))
        && ((var_cas_accessibleFromBank1)._operator_not ().isBuiltAndTrue ())) {
      macroValidPointer (operand_62048) ;
      var_cas_accessibleFromBank1 = ((operand_62048->mValue)._operator_and (GGS_uint (true, 3968U)))._operator_isEqual (GGS_uint (true, 128U)) ;
    }
  }
  if (((var_cas_accessibleFromBank1)._operator_not ()).isBuiltAndTrue ()) {
    var_cas_inSecondSaveRegister.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '"))._operator_concat (var_cas_inSecondSaveRegister))._operator_concat (GGS_string (true, "' variable cannot be accessed from bank 1")) COMMA_SOURCE_FILE_AT_LINE (1740)) ;
  }
  GGS_bool var_cas_offsetOk ;
  var_cas_offsetOk = GGS_bool (true, true) ;
  {
    GGS_uintlist::cEnumerator enumerator_62459 (var_cas_registerAddressList, true) ;
    const GGS_uintlist::cElement * operand_62459 = NULL ;
    while (((operand_62459 = enumerator_62459.nextObject ()))
        && (var_cas_offsetOk.isBuiltAndTrue ())) {
      macroValidPointer (operand_62459) ;
      var_cas_offsetOk = (var_cas_offset)._operator_isEqual ((operand_62459->mValue)._operator_and (GGS_uint (true, 127U))) ;
      if (((var_cas_offsetOk)._operator_not ()).isBuiltAndTrue ()) {
        var_cas_inSecondSaveRegister.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((((((GGS_string (true, "the '"))._operator_concat (var_cas_inSecondSaveRegister))._operator_concat (GGS_string (true, "' variable has an offset equal to ")))._operator_concat ((operand_62459->mValue)._operator_and (GGS_uint (true, 127U)).reader_hexString (_inLexique COMMA_SOURCE_FILE_AT_LINE (1747))))._operator_concat (GGS_string (true, ", while '")))._operator_concat (var_cas_inFirstSaveRegister))._operator_concat (GGS_string (true, "' has an offset equal to ")))._operator_concat (var_cas_offset.reader_hexString (_inLexique COMMA_SOURCE_FILE_AT_LINE (1748))))._operator_concat (GGS_string (true, " (tthe two offsets should be equal)")) COMMA_SOURCE_FILE_AT_LINE (1749)) ;
      }
    }
  }
  if (((GGS_uint ::constructor_errorCount (_inLexique COMMA_HERE))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
    GGS_registerExpression  var_cas_first_register ;
    var_cas_first_register = GGS_registerExpression ::constructor_new (_inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_first_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_25 ;
    const GGS_registerExpression  _temp_63126 = var_cas_first_register ;
    if (_temp_63126._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_63126._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_63126 (HERE), var_cas_inTotalBankCount, GGS_uint (true, 0U), var_cas_inRegisterTable, var_cas_first_IPICregisterDescription, automatic_var_25 COMMA_SOURCE_FILE_AT_LINE (1755)) ;
      }
    }
    GGS_registerExpression  var_cas_first_register_second_byte ;
    var_cas_first_register_second_byte = GGS_registerExpression ::constructor_new (_inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 1U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_first_reg_second_byte_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_26 ;
    const GGS_registerExpression  _temp_63479 = var_cas_first_register_second_byte ;
    if (_temp_63479._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_63479._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_63479 (HERE), var_cas_inTotalBankCount, GGS_uint (true, 0U), var_cas_inRegisterTable, var_cas_first_reg_second_byte_IPICregisterDescription, automatic_var_26 COMMA_SOURCE_FILE_AT_LINE (1764)) ;
      }
    }
    GGS_registerExpression  var_cas_STATUS_register ;
    var_cas_STATUS_register = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "STATUS"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
    GGS_midrange_ipic_registerExpression var_cas_STATUS_IPICregisterDescription ;
    GGS_bitSliceTable  automatic_var_27 ;
    const GGS_registerExpression  _temp_63861 = var_cas_STATUS_register ;
    if (_temp_63861._isBuilt ()) {
      typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_63861._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_63861 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (_inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_STATUS_IPICregisterDescription, automatic_var_27 COMMA_SOURCE_FILE_AT_LINE (1774)) ;
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_first_IPICregisterDescription COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (_inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_CLRF (_inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_first_reg_second_byte_IPICregisterDescription COMMA_HERE)) ;
    if ((var_cas_inNeedsToSavePCLATH).isBuiltAndTrue ()) {
      GGS_registerExpression  var_cas_first_register_third_byte ;
      var_cas_first_register_third_byte = GGS_registerExpression ::constructor_new (_inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 2U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_first_var_third_byte_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_28 ;
      const GGS_registerExpression  _temp_64895 = var_cas_first_register_third_byte ;
      if (_temp_64895._isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_64895._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_64895 (HERE), var_cas_inTotalBankCount, GGS_uint (true, 0U), var_cas_inRegisterTable, var_cas_first_var_third_byte_IPICregisterDescription, automatic_var_28 COMMA_SOURCE_FILE_AT_LINE (1788)) ;
        }
      }
      GGS_registerExpression  var_cas_PCLATH_register ;
      var_cas_PCLATH_register = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "PCLATH"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_PCLATH_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_29 ;
      const GGS_registerExpression  _temp_65295 = var_cas_PCLATH_register ;
      if (_temp_65295._isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_65295._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_65295 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (_inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_PCLATH_IPICregisterDescription, automatic_var_29 COMMA_SOURCE_FILE_AT_LINE (1798)) ;
        }
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_MOVF (_inLexique COMMA_HERE), var_cas_PCLATH_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_first_var_third_byte_IPICregisterDescription COMMA_HERE)) ;
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_CLRF (_inLexique COMMA_HERE), var_cas_PCLATH_IPICregisterDescription COMMA_HERE)) ;
    }
    GGS_bool var_cas_continuesInSequence ;
    GGS_uint  var_cas_currentBank ;
    var_cas_currentBank = GGS_uint (true, 0U) ;
    ::routine_handleMidrangeInstructionList (_inLexique,  var_cas_inInterruptRoutineInstructionList,  var_cas_inRoutineMap,  var_cas_inRegisterTable,  var_cas_inConstantMap,  var_cas_ioLocalLabelIndex,  var_cas_ioGeneratedInstructionList,  var_cas_ioGenerationOptimizationMessages,  var_cas_inTotalBankCount,  var_cas_currentBank,  GGS_bool (true, true),  var_cas_continuesInSequence,  GGS_routineKind::constructor_interruptRoutine (_inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (1812)) ;
    if (((var_cas_continuesInSequence)._operator_not ()).isBuiltAndTrue ()) {
      var_cas_inEndOfInterruptLocation.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "execution cannot reach the end of the interrupt routine") COMMA_SOURCE_FILE_AT_LINE (1828)) ;
    }
    if ((var_cas_inNeedsToSavePCLATH).isBuiltAndTrue ()) {
      GGS_registerExpression  var_cas_first_register_third_byte ;
      var_cas_first_register_third_byte = GGS_registerExpression ::constructor_new (_inLexique, var_cas_inFirstSaveRegister, GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 2U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_first_var_second_byte_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_30 ;
      const GGS_registerExpression  _temp_66848 = var_cas_first_register_third_byte ;
      if (_temp_66848._isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_66848._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_66848 (HERE), var_cas_inTotalBankCount, GGS_uint (true, 0U), var_cas_inRegisterTable, var_cas_first_var_second_byte_IPICregisterDescription, automatic_var_30 COMMA_SOURCE_FILE_AT_LINE (1832)) ;
        }
      }
      GGS_registerExpression  var_cas_PCLATH_register ;
      var_cas_PCLATH_register = GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "PCLATH"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE) ;
      GGS_midrange_ipic_registerExpression var_cas_PCLATH_IPICregisterDescription ;
      GGS_bitSliceTable  automatic_var_31 ;
      const GGS_registerExpression  _temp_67249 = var_cas_PCLATH_register ;
      if (_temp_67249._isBuilt ()) {
        typeCategoryMethod__registerExpression__resolveMidrangeAccess _method = findCategoryMethod__registerExpression__resolveMidrangeAccess (_temp_67249._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_67249 (HERE), var_cas_inTotalBankCount, GGS_uint ::constructor_max (_inLexique COMMA_HERE), var_cas_inRegisterTable, var_cas_PCLATH_IPICregisterDescription, automatic_var_31 COMMA_SOURCE_FILE_AT_LINE (1842)) ;
        }
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_MOVF (_inLexique COMMA_HERE), var_cas_first_var_second_byte_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_PCLATH_IPICregisterDescription COMMA_HERE)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (_inLexique COMMA_HERE), var_cas_first_reg_second_byte_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_F ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_F_instruction_base_code::constructor_MOVWF (_inLexique COMMA_HERE), var_cas_STATUS_IPICregisterDescription COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (_inLexique COMMA_HERE), var_cas_first_IPICregisterDescription, GGS_bool (true, false) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_FD ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_midrange_instruction_FD_base_code::constructor_SWAPF (_inLexique COMMA_HERE), var_cas_first_IPICregisterDescription, GGS_bool (true, true) COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_RETFIE ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateInterruptRoutineForControllerWithoutSharedRAM\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of routine "build_midrange_assembly_instruction_list"    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_midrange_assembly_instruction_list (C_Compiler & _inLexique,
                                const GGS_uint   var_cas_inTotalPageCount,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_bool  var_cas_inHasSharedRAMBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                const GGS_midrange_model  var_cas_inPiccoloModel,
                                const GGS_bool  var_cas_inHasInterrupt,
                                GGS_midrange_ipic_instructionList  & var_cas_outGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_midrange_assembly_instruction_list at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_generationOptimizationMessages ;
  var_cas_generationOptimizationMessages = GGS_string (true, "") ;
  GGS_routineMap  var_cas_routineMap ;
  var_cas_routineMap = GGS_routineMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  {
    GGS_midrange_routineDefinitionList::cEnumerator enumerator_69056 (var_cas_inPiccoloModel.reader_mRoutineDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1877)), true) ;
    const GGS_midrange_routineDefinitionList::cElement * operand_69056 = NULL ;
    while (((operand_69056 = enumerator_69056.nextObject ()))) {
      macroValidPointer (operand_69056) ;
      if ((((operand_69056->mRequiredBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1878)))._operator_isNotEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE)))._operator_and ((operand_69056->mRequiredBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1878)))._operator_strictSup (GGS_uint (true, 15U)))).isBuiltAndTrue ()) {
        operand_69056->mRequiredBank.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the required bank value should be lower or equal to 15") COMMA_SOURCE_FILE_AT_LINE (1880)) ;
      }
      if ((((operand_69056->mReturnedBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1881)))._operator_isNotEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE)))._operator_and ((operand_69056->mReturnedBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1881)))._operator_strictSup (GGS_uint (true, 15U)))).isBuiltAndTrue ()) {
        operand_69056->mReturnedBank.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the returned bank value should be lower or equal to 15") COMMA_SOURCE_FILE_AT_LINE (1883)) ;
      }
      var_cas_routineMap.modifier_insertKey (_inLexique, operand_69056->mRoutineName, operand_69056->mIsNoReturn, operand_69056->mRequiredBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1884)), operand_69056->mReturnedBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1884)), operand_69056->mPreservesBank COMMA_SOURCE_FILE_AT_LINE (1884)) ;
    }
  }
  GGS_constantMap  var_cas_constantMap ;
  var_cas_constantMap = GGS_constantMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  {
    GGS_constantDefinitionList::cEnumerator enumerator_69692 (var_cas_inPiccoloModel.reader_mConstantDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1888)), true) ;
    const GGS_constantDefinitionList::cElement * operand_69692 = NULL ;
    while (((operand_69692 = enumerator_69692.nextObject ()))) {
      macroValidPointer (operand_69692) ;
      GGS_sint  var_cas_result ;
      const GGS_immediatExpression  _temp_69771 = operand_69692->mExpression ;
      if (_temp_69771._isBuilt ()) {
        typeCategoryMethod__immediatExpression__eval _method = findCategoryMethod__immediatExpression__eval (_temp_69771._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_69771 (HERE), var_cas_inRegisterTable, var_cas_constantMap, var_cas_result COMMA_SOURCE_FILE_AT_LINE (1889)) ;
        }
      }
      if ((var_cas_inRegisterTable.reader_hasKey (_inLexique, operand_69692->mConstantName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1890)) COMMA_SOURCE_FILE_AT_LINE (1890))).isBuiltAndTrue ()) {
        operand_69692->mConstantName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "'"))._operator_concat (operand_69692->mConstantName))._operator_concat (GGS_string (true, "' is alreday declared as ram register or special register")) COMMA_SOURCE_FILE_AT_LINE (1892)) ;
      }else{
        var_cas_constantMap.modifier_insertKey (_inLexique, operand_69692->mConstantName, var_cas_result COMMA_SOURCE_FILE_AT_LINE (1893)) ;
      }
    }
  }
  if ((var_cas_routineMap.reader_hasKey (_inLexique, GGS_string (true, "main") COMMA_SOURCE_FILE_AT_LINE (1897))).isBuiltAndTrue ()) {
    GGS_bool var_cas_isNoReturn ;
    GGS_uint  var_cas_requiredBank ;
    GGS_uint  automatic_var_32 ;
    GGS_bool automatic_var_33 ;
    const GGS_routineMap  _temp_70262 = var_cas_routineMap ;
    if (_temp_70262._isBuilt ()) {
      _temp_70262 (HERE)->method_searchKey (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "main"), GGS_location (_inLexique) COMMA_HERE), var_cas_isNoReturn, var_cas_requiredBank, automatic_var_32, automatic_var_33 COMMA_SOURCE_FILE_AT_LINE (1900)) ;
    }
    if (((var_cas_isNoReturn)._operator_not ()).isBuiltAndTrue ()) {
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the \"main\" should be declared with \"noreturn\" qualifier: \"noreturn main requiresbank 0\"") COMMA_SOURCE_FILE_AT_LINE (1903)) ;
    }
    if (((var_cas_requiredBank)._operator_isNotEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
      GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the \"main\" should be declared with \"requiresbank 0\" qualifier: \"noreturn main requiresbank 0\"") COMMA_SOURCE_FILE_AT_LINE (1906)) ;
    }
  }else{
    var_cas_inPiccoloModel.reader_mEndOfProgram (_inLexique COMMA_SOURCE_FILE_AT_LINE (1908)).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the program should declare the \"main\" routine") COMMA_SOURCE_FILE_AT_LINE (1909)) ;
  }
  GGS_bool var_cas_needsToSavePCLATH ;
  var_cas_needsToSavePCLATH = GGS_bool (true, false) ;
  {
    GGS_midrange_routineDefinitionList::cEnumerator enumerator_70902 (var_cas_inPiccoloModel.reader_mRoutineDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1912)), true) ;
    const GGS_midrange_routineDefinitionList::cElement * operand_70902 = NULL ;
    while (((operand_70902 = enumerator_70902.nextObject ()))) {
      macroValidPointer (operand_70902) ;
      if (((operand_70902->mPage.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1913)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
        var_cas_needsToSavePCLATH = GGS_bool (true, true) ;
      }
      if (((operand_70902->mPage.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1916)))._operator_supOrEqual (var_cas_inTotalPageCount)).isBuiltAndTrue ()) {
        operand_70902->mPage.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "invalid value ("))._operator_concat (operand_70902->mPage.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1917)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1917))))._operator_concat (GGS_string (true, "); the device has ")))._operator_concat (var_cas_inTotalPageCount.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (1917))))._operator_concat (GGS_string (true, " 2k page(s) on rom")) COMMA_SOURCE_FILE_AT_LINE (1918)) ;
      }
    }
  }
  if ((var_cas_needsToSavePCLATH).isBuiltAndTrue ()) {
    var_cas_needsToSavePCLATH = GGS_bool (true, false) ;
    {
      GGS_midrange_interruptDefinitionList::cEnumerator enumerator_71409 (var_cas_inPiccoloModel.reader_mInterruptDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1923)), true) ;
      const GGS_midrange_interruptDefinitionList::cElement * operand_71409 = NULL ;
      while (((operand_71409 = enumerator_71409.nextObject ()))
          && ((var_cas_needsToSavePCLATH)._operator_not ().isBuiltAndTrue ())) {
        macroValidPointer (operand_71409) ;
        {
          GGS_midrange_instructionList::cEnumerator enumerator_71511 (operand_71409->mInstructionList, true) ;
          const GGS_midrange_instructionList::cElement * operand_71511 = NULL ;
          while (((operand_71511 = enumerator_71511.nextObject ()))
              && ((var_cas_needsToSavePCLATH)._operator_not ().isBuiltAndTrue ())) {
            macroValidPointer (operand_71511) ;
            const GGS_midrange_instruction  _temp_71590 = operand_71511->mInstruction ;
            if (_temp_71590._isBuilt ()) {
              typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL _method = findCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL (_temp_71590._galgasObjectRunTimeInfo ()) ;
              if (_method != NULL) {
                _method (_inLexique, _temp_71590 (HERE), var_cas_needsToSavePCLATH COMMA_SOURCE_FILE_AT_LINE (1925)) ;
              }
            }
          }
        }
      }
    }
  }
  var_cas_outGeneratedInstructionList = GGS_midrange_ipic_instructionList ::constructor_emptyList () ;
  GGS_uint  var_cas_localLabelIndex ;
  var_cas_localLabelIndex = GGS_uint (true, 0U) ;
  var_cas_outGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_JUMP ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "main"), GGS_location (_inLexique) COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (_inLexique COMMA_HERE) COMMA_HERE)) ;
  if ((var_cas_inHasInterrupt).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_ORG ::constructor_new (_inLexique, GGS_uint (true, 4U) COMMA_HERE)) ;
    {
      GGS_midrange_interruptDefinitionList::cEnumerator enumerator_72198 (var_cas_inPiccoloModel.reader_mInterruptDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1942)), true) ;
      const GGS_midrange_interruptDefinitionList::cElement * operand_72198 = NULL ;
      while (((operand_72198 = enumerator_72198.nextObject ()))) {
        macroValidPointer (operand_72198) ;
        if ((var_cas_inHasSharedRAMBank).isBuiltAndTrue ()) {
          ::routine_generateInterruptRoutineForControllerWithSharedRAM (_inLexique,  var_cas_inTotalBankCount,  var_cas_inRegisterTable,  operand_72198->mFirstSaveRegister,  operand_72198->mSecondSaveRegister,  var_cas_needsToSavePCLATH,  operand_72198->mInstructionList,  var_cas_routineMap,  var_cas_constantMap,  operand_72198->mEndOfInterruptLocation,  var_cas_outGeneratedInstructionList,  var_cas_localLabelIndex,  var_cas_generationOptimizationMessages COMMA_SOURCE_FILE_AT_LINE (1944)) ;
        }else{
          ::routine_generateInterruptRoutineForControllerWithoutSharedRAM (_inLexique,  var_cas_inTotalBankCount,  var_cas_inRegisterTable,  operand_72198->mFirstSaveRegister,  operand_72198->mSecondSaveRegister,  var_cas_needsToSavePCLATH,  operand_72198->mInstructionList,  var_cas_routineMap,  var_cas_constantMap,  operand_72198->mEndOfInterruptLocation,  var_cas_outGeneratedInstructionList,  var_cas_localLabelIndex,  var_cas_generationOptimizationMessages COMMA_SOURCE_FILE_AT_LINE (1959)) ;
        }
      }
    }
  }
  GGS_uint  var_cas_currentPage ;
  var_cas_currentPage = GGS_uint (true, 0U) ;
  GGS_uint _variant_75158 = var_cas_inTotalPageCount ;
  GGS_bool _condition_75158 (_variant_75158._isBuilt (), true) ;
  while (_condition_75158.isBuiltAndTrue ()) {
    _condition_75158 = (var_cas_currentPage)._operator_strictInf (var_cas_inTotalPageCount) ;
    if (_condition_75158.isBuiltAndTrue ()) {
      if (_variant_75158.uintValue () == 0) {
        _inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (2022)) ;
        _condition_75158 = GGS_bool (true, false) ;
      }else{
        _variant_75158._decrement_operation (_inLexique COMMA_HERE) ;
        GGS_bool var_cas_orgGenerated ;
        var_cas_orgGenerated = (var_cas_currentPage)._operator_isEqual (GGS_uint (true, 0U)) ;
        {
          GGS_midrange_routineDefinitionList::cEnumerator enumerator_73437 (var_cas_inPiccoloModel.reader_mRoutineDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (1980)), true) ;
          const GGS_midrange_routineDefinitionList::cElement * operand_73437 = NULL ;
          while (((operand_73437 = enumerator_73437.nextObject ()))) {
            macroValidPointer (operand_73437) ;
            if (((operand_73437->mPage.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1981)))._operator_isEqual (var_cas_currentPage)).isBuiltAndTrue ()) {
              if (((var_cas_orgGenerated)._operator_not ()).isBuiltAndTrue ()) {
                var_cas_outGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_ORG ::constructor_new (_inLexique, var_cas_currentPage._multiply_operation (_inLexique, GGS_uint (true, 2048U) COMMA_SOURCE_FILE_AT_LINE (1983)) COMMA_HERE)) ;
                var_cas_orgGenerated = GGS_bool (true, true) ;
              }
              GGS_bool var_cas_continuesInSequence ;
              GGS_uint  var_cas_currentBank ;
              var_cas_currentBank = operand_73437->mRequiredBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (1987)) ;
              GGS_routineKind var_cas_routineKind ;
              if ((operand_73437->mIsNoReturn).isBuiltAndTrue ()) {
                var_cas_routineKind = GGS_routineKind::constructor_noReturnRoutine (_inLexique COMMA_HERE) ;
              }else{
                var_cas_routineKind = GGS_routineKind::constructor_regularRoutine (_inLexique COMMA_HERE) ;
              }
              var_cas_outGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_pseudo_LABEL ::constructor_new (_inLexique, operand_73437->mRoutineName COMMA_HERE)) ;
              ::routine_handleMidrangeInstructionList (_inLexique,  operand_73437->mInstructionList,  var_cas_routineMap,  var_cas_inRegisterTable,  var_cas_constantMap,  var_cas_localLabelIndex,  var_cas_outGeneratedInstructionList,  var_cas_generationOptimizationMessages,  var_cas_inTotalBankCount,  var_cas_currentBank,  operand_73437->mPreservesBank,  var_cas_continuesInSequence,  var_cas_routineKind COMMA_SOURCE_FILE_AT_LINE (1995)) ;
              if (((((operand_73437->mIsNoReturn)._operator_not ())._operator_and ((operand_73437->mReturnedBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (2009)))._operator_isNotEqual (GGS_uint ::constructor_max (_inLexique COMMA_HERE))))._operator_and ((var_cas_currentBank)._operator_isNotEqual (operand_73437->mReturnedBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (2009))))).isBuiltAndTrue ()) {
                operand_73437->mRoutineName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, (GGS_string (true, "execution will not set bank selection to "))._operator_concat (operand_73437->mReturnedBank.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (2010)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2010))) COMMA_SOURCE_FILE_AT_LINE (2011)) ;
              }
              if (((operand_73437->mIsNoReturn)._operator_and (var_cas_continuesInSequence)).isBuiltAndTrue ()) {
                operand_73437->mRoutineName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "execution should not reach the end of a \"noreturn\" routine") COMMA_SOURCE_FILE_AT_LINE (2014)) ;
              }
              if (((operand_73437->mIsNoReturn)._operator_not ()).isBuiltAndTrue ()) {
                var_cas_outGeneratedInstructionList._addAssign_operation (GGS_midrange_ipic_instruction_RETURN ::constructor_new (_inLexique, operand_73437->mRoutineName.reader_location (_inLexique COMMA_SOURCE_FILE_AT_LINE (2017)) COMMA_HERE)) ;
              }
            }
          }
        }
        var_cas_currentPage._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (2021)) ;
      }
    }
  }
  if ((GGS_bool (true, _inLexique.boolOptionValueFromKeys ("piccolo_options", "ouputListingFile" COMMA_SOURCE_FILE_AT_LINE (2024)))).isBuiltAndTrue ()) {
    var_cas_ioListFileContents._dotAssign_operation (GGS_string (true, "").reader_stringByLeftAndRightPadding (_inLexique, GGS_uint (true, 79U), GGS_char (true, '*') COMMA_SOURCE_FILE_AT_LINE (2025))) ;
    var_cas_ioListFileContents.writeString ("\n") ;
    var_cas_ioListFileContents.writeString ("*") ;
    var_cas_ioListFileContents._dotAssign_operation (GGS_string (true, "IPIC INSTRUCTION LIST").reader_stringByLeftAndRightPadding (_inLexique, GGS_uint (true, 77U), GGS_char (true, ' ') COMMA_SOURCE_FILE_AT_LINE (2026))) ;
    var_cas_ioListFileContents.writeString ("*\n") ;
    var_cas_ioListFileContents._dotAssign_operation (GGS_string (true, "").reader_stringByLeftAndRightPadding (_inLexique, GGS_uint (true, 79U), GGS_char (true, '*') COMMA_SOURCE_FILE_AT_LINE (2027))) ;
    var_cas_ioListFileContents.writeString ("\n"
      "\n") ;
    if (((var_cas_generationOptimizationMessages.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (2028)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
      var_cas_ioListFileContents.writeString ("Optimizations during generation:\n") ;
      var_cas_ioListFileContents._dotAssign_operation (var_cas_generationOptimizationMessages) ;
      var_cas_ioListFileContents.writeString ("\n") ;
    }
    var_cas_ioListFileContents.writeString ("Generated intermediate code:\n") ;
    GGS_uint  var_cas_index ;
    var_cas_index = GGS_uint (true, 0U) ;
    GGS_uint  var_cas_currentAddress ;
    var_cas_currentAddress = GGS_uint (true, 0U) ;
    {
      GGS_midrange_ipic_instructionList::cEnumerator enumerator_75890 (var_cas_outGeneratedInstructionList, true) ;
      const GGS_midrange_ipic_instructionList::cElement * operand_75890 = NULL ;
      while (((operand_75890 = enumerator_75890.nextObject ()))) {
        macroValidPointer (operand_75890) ;
        const GGS_midrange_ipic_instruction  _temp_75931 = operand_75890->mInstruction ;
        if (_temp_75931._isBuilt ()) {
          _temp_75931 (HERE)->method_setCurrentAddress (_inLexique, var_cas_currentAddress COMMA_SOURCE_FILE_AT_LINE (2037)) ;
        }
        var_cas_ioListFileContents._dotAssign_operation (var_cas_index.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2038)).reader_stringByLeftPadding (_inLexique, GGS_uint (true, 5U), GGS_char (true, ' ') COMMA_SOURCE_FILE_AT_LINE (2038))) ;
        var_cas_ioListFileContents.writeString (": ") ;
        const GGS_midrange_ipic_instruction  _temp_76076 = operand_75890->mInstruction ;
        if (_temp_76076._isBuilt ()) {
          _temp_76076 (HERE)->method_displayIPICinstruction (_inLexique, var_cas_ioListFileContents COMMA_SOURCE_FILE_AT_LINE (2039)) ;
        }
        var_cas_ioListFileContents.writeString ("\n") ;
        var_cas_index._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (2041)) ;
      }
    }
    var_cas_ioListFileContents.writeString ("\n") ;
    var_cas_ioListFileContents.writeString ("Minimum code size without optimization: ") ;
    var_cas_ioListFileContents._dotAssign_operation (var_cas_currentAddress.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (2044))) ;
    var_cas_ioListFileContents.writeString (" instructions.\n"
      "\n") ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_midrange_assembly_instruction_list\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_midrange_checkingAndBuildIPIC (void) {
 enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL (category_method__midrange_instruction__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction.slotID ()) ;
 enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_FOREVER__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_FOREVER.slotID ()) ;
 enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_structured_if__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_structured_if.slotID ()) ;
 enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_CALL__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_CALL.slotID ()) ;
 enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_JSR__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_JSR.slotID ()) ;
 enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_GOTO__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_GOTO.slotID ()) ;
 enterCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL ((typeCategoryMethod__midrange_instruction__instructionUsesGOTOorCALL) category_method__midrange_instruction_JUMP__instructionUsesGOTOorCALL, gClassInfoFor__midrange_instruction_JUMP.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_nobanksel__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_nobanksel.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_savebank__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_savebank.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_banksel__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_banksel.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_FD__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_FD.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_F__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_F.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_FB__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_FB.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_JSR__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_JSR.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_CALL__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_CALL.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_JUMP__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_JUMP.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_GOTO__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_GOTO.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_CLRWDT__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_CLRWDT.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_CLRW__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_CLRW.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_NOP__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_NOP.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_SLEEP__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_SLEEP.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_literalOperation__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_literalOperation.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_MNOP__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_MNOP.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_FOREVER__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_FOREVER.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_IF_BitTest__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_IF_BitTest.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition) category_method__midrange_incDecRegisterInCondition__buildIPICinstructionForCondition, gClassInfoFor__midrange_incDecRegisterInCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition) category_method__midrange_incDecRegisterInCondition__computeInstructionCountForCondition, gClassInfoFor__midrange_incDecRegisterInCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition) category_method__midrange_negateCondition__buildIPICinstructionForCondition, gClassInfoFor__midrange_negateCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition) category_method__midrange_negateCondition__computeInstructionCountForCondition, gClassInfoFor__midrange_negateCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition) category_method__midrange_andCondition__buildIPICinstructionForCondition, gClassInfoFor__midrange_andCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition) category_method__midrange_andCondition__computeInstructionCountForCondition, gClassInfoFor__midrange_andCondition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__midrange_conditionExpression__buildIPICinstructionForCondition) category_method__midrange_bitTest_in_structured_if_condition__buildIPICinstructionForCondition, gClassInfoFor__midrange_bitTest_in_structured_if_condition.slotID ()) ;
 enterCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition ((typeCategoryMethod__midrange_conditionExpression__computeInstructionCountForCondition) category_method__midrange_bitTest_in_structured_if_condition__computeInstructionCountForCondition, gClassInfoFor__midrange_bitTest_in_structured_if_condition.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_structured_if__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_structured_if.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_do_while__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_do_while.slotID ()) ;
 enterCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList ((typeCategoryMethod__midrange_instruction__build_midrange_ipic_instructionList) category_method__midrange_instruction_IF_IncDec__build_midrange_ipic_instructionList, gClassInfoFor__midrange_instruction_IF_IncDec.slotID ()) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogueAction prologueEpilogueObjectFor_midrange_checkingAndBuildIPIC (prologueRoutineFor_midrange_checkingAndBuildIPIC,
                                   NULL) ;

//---------------------------------------------------------------------------*

