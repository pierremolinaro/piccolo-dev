//---------------------------------------------------------------------------*
//                                                                           *
//               File 'midrange_ipic_build_assembly_code.cpp'                *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     august 23th, 2008, at 19h19'42"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "midrange_ipic_build_assembly_code.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "midrange_ipic_build_assembly_code.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_ipic_instruction.buildAssemblyCode'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_ipic_instruction__buildAssemblyCode> gDispatchTableFor__midrange_ipic_instruction__buildAssemblyCode ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_ipic_instruction__buildAssemblyCode (typeCategoryMethod__midrange_ipic_instruction__buildAssemblyCode inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__midrange_ipic_instruction__buildAssemblyCode.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_ipic_instruction__buildAssemblyCode
findCategoryMethod__midrange_ipic_instruction__buildAssemblyCode (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__midrange_ipic_instruction__buildAssemblyCode result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__midrange_ipic_instruction__buildAssemblyCode.count ()) {
    result = gDispatchTableFor__midrange_ipic_instruction__buildAssemblyCode (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_ipic_instruction__buildAssemblyCode (superClassPtr) ;
      gDispatchTableFor__midrange_ipic_instruction__buildAssemblyCode.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@midrange_ipic_pseudo_ORG.buildAssemblyCode'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_pseudo_ORG__buildAssemblyCode (C_Compiler & _inLexique,
                                const cPtr_midrange_ipic_pseudo_ORG * operand_716,
                                GGS_string & var_cas_ioString,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_716 != NULL) {
    var_cas_ioString.writeString ("  ORG ") ;
    var_cas_ioString._dotAssign_operation (operand_716->mOrigin.reader_hexString (_inLexique COMMA_SOURCE_FILE_AT_LINE (22))) ;
    var_cas_ioString.writeString ("\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@midrange_ipic_pseudo_LABEL.buildAssemblyCode'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_pseudo_LABEL__buildAssemblyCode (C_Compiler & _inLexique,
                                const cPtr_midrange_ipic_pseudo_LABEL * operand_960,
                                GGS_string & var_cas_ioString,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_960 != NULL) {
    var_cas_ioString._dotAssign_operation (operand_960->mLabel.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (31))) ;
    var_cas_ioString.writeString (":\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@midrange_ipic_instruction_FD.buildAssemblyCode'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_instruction_FD__buildAssemblyCode (C_Compiler & _inLexique,
                                const cPtr_midrange_ipic_instruction_FD * operand_1192,
                                GGS_string & var_cas_ioString,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1192 != NULL) {
    var_cas_ioString.writeString ("  ") ;
    var_cas_ioString._dotAssign_operation (operand_1192->mInstruction_FD_base_code.reader_mnemonic (_inLexique COMMA_SOURCE_FILE_AT_LINE (40))) ;
    var_cas_ioString.writeString (" ") ;
    var_cas_ioString._dotAssign_operation (operand_1192->mRegisterDescription.reader_mAssemblyString (_inLexique COMMA_SOURCE_FILE_AT_LINE (40))) ;
    if ((operand_1192->m_W_isDestination).isBuiltAndTrue ()) {
      var_cas_ioString.writeString (", W") ;
    }else{
      var_cas_ioString.writeString (", F") ;
    }
    var_cas_ioString.writeString ("\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@midrange_ipic_instruction_FB.buildAssemblyCode'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_instruction_FB__buildAssemblyCode (C_Compiler & _inLexique,
                                const cPtr_midrange_ipic_instruction_FB * operand_1606,
                                GGS_string & var_cas_ioString,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1606 != NULL) {
    var_cas_ioString.writeString ("  ") ;
    var_cas_ioString._dotAssign_operation (operand_1606->mBitOrientedOp.reader_mnemonic (_inLexique COMMA_SOURCE_FILE_AT_LINE (55))) ;
    var_cas_ioString.writeString ("  ") ;
    var_cas_ioString._dotAssign_operation (operand_1606->mRegisterDescription.reader_mAssemblyString (_inLexique COMMA_SOURCE_FILE_AT_LINE (56))) ;
    var_cas_ioString.writeString (", ") ;
    var_cas_ioString._dotAssign_operation (operand_1606->mBitNumber.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (57))) ;
    var_cas_ioString.writeString ("\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_ipic_instruction_BitTestSkip.buildAssemblyCode' *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_instruction_BitTestSkip__buildAssemblyCode (C_Compiler & _inLexique,
                                const cPtr_midrange_ipic_instruction_BitTestSkip * operand_1982,
                                GGS_string & var_cas_ioString,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1982 != NULL) {
    var_cas_ioString.writeString ("  ") ;
    if ((operand_1982->mSkipIfSet).isBuiltAndTrue ()) {
      var_cas_ioString.writeString ("BTFSS") ;
    }else{
      var_cas_ioString.writeString ("BTFSC") ;
    }
    var_cas_ioString.writeString ("  ") ;
    var_cas_ioString._dotAssign_operation (operand_1982->mRegisterDescription.reader_mAssemblyString (_inLexique COMMA_SOURCE_FILE_AT_LINE (73))) ;
    var_cas_ioString.writeString (", ") ;
    var_cas_ioString._dotAssign_operation (operand_1982->mBitNumber.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (74))) ;
    var_cas_ioString.writeString ("\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@midrange_ipic_instruction_F.buildAssemblyCode'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_instruction_F__buildAssemblyCode (C_Compiler & _inLexique,
                                const cPtr_midrange_ipic_instruction_F * operand_2411,
                                GGS_string & var_cas_ioString,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2411 != NULL) {
    var_cas_ioString.writeString ("  ") ;
    var_cas_ioString._dotAssign_operation (operand_2411->mFinstruction.reader_mnemonic (_inLexique COMMA_SOURCE_FILE_AT_LINE (84))) ;
    var_cas_ioString.writeString (" ") ;
    var_cas_ioString._dotAssign_operation (operand_2411->mRegisterDescription.reader_mAssemblyString (_inLexique COMMA_SOURCE_FILE_AT_LINE (84))) ;
    var_cas_ioString.writeString ("\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_ipic_incDecRegisterInCondition.buildAssemblyCode'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_incDecRegisterInCondition__buildAssemblyCode (C_Compiler & _inLexique,
                                const cPtr_midrange_ipic_incDecRegisterInCondition * operand_2730,
                                GGS_string & var_cas_ioString,
                                GGS_uint  & var_cas_ioLocalLabelIndex
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2730 != NULL) {
    if ((operand_2730->mIncrement).isBuiltAndTrue ()) {
      var_cas_ioString.writeString ("  "
      "INCFSZ ") ;
    }else{
      var_cas_ioString.writeString ("  "
      "DECFSZ ") ;
    }
    var_cas_ioString._dotAssign_operation (operand_2730->mRegisterDescription.reader_mAssemblyString (_inLexique COMMA_SOURCE_FILE_AT_LINE (99))) ;
    if ((operand_2730->m_W_isDestination).isBuiltAndTrue ()) {
      var_cas_ioString.writeString (", W") ;
    }else{
      var_cas_ioString.writeString (", F") ;
    }
    var_cas_ioString.writeString ("\n") ;
    if ((operand_2730->mBranchIfZero).isBuiltAndTrue ()) {
      GGS_string var_cas_localLabel ;
      var_cas_localLabel = (GGS_string (true, "_local_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (107))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (107)) ;
      var_cas_ioString.writeString ("  GOTO ") ;
      var_cas_ioString._dotAssign_operation (var_cas_localLabel) ;
      var_cas_ioString.writeString ("\n") ;
      var_cas_ioString.writeString ("  GOTO ") ;
      var_cas_ioString._dotAssign_operation (operand_2730->mTargetLabel) ;
      var_cas_ioString.writeString ("\n") ;
      var_cas_ioString._dotAssign_operation (var_cas_localLabel) ;
      var_cas_ioString.writeString (":\n") ;
    }else{
      var_cas_ioString.writeString ("  GOTO ") ;
      var_cas_ioString._dotAssign_operation (operand_2730->mTargetLabel) ;
      var_cas_ioString.writeString ("\n") ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@midrange_ipic_JUMP.buildAssemblyCode'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_JUMP__buildAssemblyCode (C_Compiler & _inLexique,
                                const cPtr_midrange_ipic_JUMP * operand_3506,
                                GGS_string & var_cas_ioString,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3506 != NULL) {
    switch (operand_3506->mKind.enumValue ()) {
    case GGS_midrange_jumpInstructionKind::enum_ipicExtended:
      {
      var_cas_ioString.writeString ("  GOTO   ") ;
      var_cas_ioString._dotAssign_operation (operand_3506->mTargetLabel.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (123))) ;
      var_cas_ioString.writeString ("\n") ;
      }
      break ;
    case GGS_midrange_jumpInstructionKind::enum_native:
      {
      var_cas_ioString.writeString ("  GOTO  ") ;
      var_cas_ioString._dotAssign_operation (operand_3506->mTargetLabel.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (124))) ;
      var_cas_ioString.writeString ("\n") ;
      }
      break ;
    case GGS_midrange_jumpInstructionKind::kNotBuilt:
      break ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@midrange_ipic_JSR.buildAssemblyCode'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_JSR__buildAssemblyCode (C_Compiler & _inLexique,
                                const cPtr_midrange_ipic_JSR * operand_3878,
                                GGS_string & var_cas_ioString,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3878 != NULL) {
    switch (operand_3878->mKind.enumValue ()) {
    case GGS_midrange_jumpInstructionKind::enum_ipicExtended:
      {
      var_cas_ioString.writeString ("  CALL   ") ;
      var_cas_ioString._dotAssign_operation (operand_3878->mTargetLabel.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (135))) ;
      var_cas_ioString.writeString ("\n") ;
      }
      break ;
    case GGS_midrange_jumpInstructionKind::enum_native:
      {
      var_cas_ioString.writeString ("  CALL  ") ;
      var_cas_ioString._dotAssign_operation (operand_3878->mTargetLabel.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (136))) ;
      var_cas_ioString.writeString ("\n") ;
      }
      break ;
    case GGS_midrange_jumpInstructionKind::kNotBuilt:
      break ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@midrange_ipic_instruction_CLRWDT.buildAssemblyCode'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_instruction_CLRWDT__buildAssemblyCode (C_Compiler &,
                                const cPtr_midrange_ipic_instruction_CLRWDT * operand_4265,
                                GGS_string & var_cas_ioString,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4265 != NULL) {
    var_cas_ioString.writeString ("  CLRWDT\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@midrange_ipic_instruction_CLRW.buildAssemblyCode'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_instruction_CLRW__buildAssemblyCode (C_Compiler &,
                                const cPtr_midrange_ipic_instruction_CLRW * operand_4488,
                                GGS_string & var_cas_ioString,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4488 != NULL) {
    var_cas_ioString.writeString ("  CLRW\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@midrange_ipic_instruction_NOP.buildAssemblyCode'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_instruction_NOP__buildAssemblyCode (C_Compiler &,
                                const cPtr_midrange_ipic_instruction_NOP * operand_4708,
                                GGS_string & var_cas_ioString,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4708 != NULL) {
    var_cas_ioString.writeString ("  NOP\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@midrange_ipic_instruction_RETURN.buildAssemblyCode'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_instruction_RETURN__buildAssemblyCode (C_Compiler &,
                                const cPtr_midrange_ipic_instruction_RETURN * operand_4930,
                                GGS_string & var_cas_ioString,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4930 != NULL) {
    var_cas_ioString.writeString ("  RETURN\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@midrange_ipic_instruction_RETFIE.buildAssemblyCode'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_instruction_RETFIE__buildAssemblyCode (C_Compiler &,
                                const cPtr_midrange_ipic_instruction_RETFIE * operand_5156,
                                GGS_string & var_cas_ioString,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5156 != NULL) {
    var_cas_ioString.writeString ("  RETFIE\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@midrange_ipic_instruction_SLEEP.buildAssemblyCode'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_instruction_SLEEP__buildAssemblyCode (C_Compiler &,
                                const cPtr_midrange_ipic_instruction_SLEEP * operand_5381,
                                GGS_string & var_cas_ioString,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5381 != NULL) {
    var_cas_ioString.writeString ("  SLEEP\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_ipic_instruction_literalOperation.buildAssemblyCode'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_instruction_literalOperation__buildAssemblyCode (C_Compiler & _inLexique,
                                const cPtr_midrange_ipic_instruction_literalOperation * operand_5615,
                                GGS_string & var_cas_ioString,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5615 != NULL) {
    var_cas_ioString.writeString ("  ") ;
    var_cas_ioString._dotAssign_operation (operand_5615->mLiteralInstruction.reader_mnemonic (_inLexique COMMA_SOURCE_FILE_AT_LINE (200))) ;
    var_cas_ioString.writeString (" ") ;
    var_cas_ioString._dotAssign_operation (operand_5615->mLiteralValue.reader_hexString (_inLexique COMMA_SOURCE_FILE_AT_LINE (200))) ;
    var_cas_ioString.writeString ("\n") ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@midrange_ipic_instruction_MNOP.buildAssemblyCode'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_instruction_MNOP__buildAssemblyCode (C_Compiler & _inLexique,
                                const cPtr_midrange_ipic_instruction_MNOP * operand_5904,
                                GGS_string & var_cas_ioString,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5904 != NULL) {
    if (((operand_5904->mOccurrenceFactor.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (209)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
      operand_5904->mOccurrenceFactor.reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, GGS_string (true, "No generated code") COMMA_SOURCE_FILE_AT_LINE (210)) ;
    }
    GGS_uint  var_cas_idx ;
    var_cas_idx = GGS_uint (true, 0U) ;
    GGS_uint _variant_6210 = operand_5904->mOccurrenceFactor.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (213)) ;
    GGS_bool _condition_6210 (_variant_6210._isBuilt (), true) ;
    while (_condition_6210.isBuiltAndTrue ()) {
      _condition_6210 = (var_cas_idx)._operator_strictInf (operand_5904->mOccurrenceFactor.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (214))) ;
      if (_condition_6210.isBuiltAndTrue ()) {
        if (_variant_6210.uintValue () == 0) {
          _inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (218)) ;
          _condition_6210 = GGS_bool (true, false) ;
        }else{
          _variant_6210._decrement_operation (_inLexique COMMA_HERE) ;
          var_cas_ioString.writeString ("  NOP\n") ;
          var_cas_idx._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (217)) ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "midrange_build_assembly_code"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_midrange_build_assembly_code (C_Compiler & _inLexique,
                                const GGS_string  var_cas_inProcessorName,
                                const GGS_registerTable   var_cas_inPredefinedRegisters,
                                const GGS_registerTable   var_cas_inAllRegisters,
                                const GGS_midrange_ipic_instructionList   var_cas_inInstructionList,
                                const GGS_actualConfigurationMap   var_cas_inActualConfigurationMap,
                                GGS_string & var_cas_outAssemblyCode COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_midrange_build_assembly_code at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outAssemblyCode = GGS_string (true, "  errorlevel -302 ; No Warning on registers not in bank 0\n"
    "\n") ;
  var_cas_outAssemblyCode.writeString ("  PROCESSOR ") ;
  var_cas_outAssemblyCode._dotAssign_operation (var_cas_inProcessorName) ;
  var_cas_outAssemblyCode.writeString ("\n"
    "\n") ;
  var_cas_outAssemblyCode.writeString (";--- Code\n") ;
  var_cas_outAssemblyCode.writeString ("  ORG 0\n") ;
  GGS_uint  var_cas_bccLabelIndex ;
  var_cas_bccLabelIndex = GGS_uint (true, 0U) ;
  {
    GGS_midrange_ipic_instructionList::cEnumerator enumerator_8190 (var_cas_inInstructionList, true) ;
    const GGS_midrange_ipic_instructionList::cElement * operand_8190 = NULL ;
    while (((operand_8190 = enumerator_8190.nextObject ()))) {
      macroValidPointer (operand_8190) ;
      const GGS_midrange_ipic_instruction  _temp_8229 = operand_8190->mInstruction ;
      if (_temp_8229._isBuilt ()) {
        typeCategoryMethod__midrange_ipic_instruction__buildAssemblyCode _method = findCategoryMethod__midrange_ipic_instruction__buildAssemblyCode (_temp_8229._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_8229 (HERE), var_cas_outAssemblyCode, var_cas_bccLabelIndex COMMA_SOURCE_FILE_AT_LINE (286)) ;
        }
      }
    }
  }
  var_cas_outAssemblyCode.writeString ("\n") ;
  var_cas_outAssemblyCode.writeString (";--- Prefefined registers\n") ;
  {
    GGS_registerTable::cEnumerator enumerator_8419 (var_cas_inPredefinedRegisters, true) ;
    const GGS_registerTable::cElement * operand_8419 = NULL ;
    while (((operand_8419 = enumerator_8419.nextObject ()))) {
      macroValidPointer (operand_8419) ;
      GGS_uint  var_cas_firstRegister ;
      const GGS_uintlist  _temp_8476 = operand_8419->mInfo.mRegisterAddressList ;
      if (_temp_8476._isBuilt ()) {
        _temp_8476 (HERE)->method_first (_inLexique, var_cas_firstRegister COMMA_SOURCE_FILE_AT_LINE (292)) ;
      }
      var_cas_outAssemblyCode._dotAssign_operation (operand_8419->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (293))) ;
      var_cas_outAssemblyCode.writeString (" EQU ") ;
      var_cas_outAssemblyCode._dotAssign_operation (var_cas_firstRegister.reader_hexString (_inLexique COMMA_SOURCE_FILE_AT_LINE (293))) ;
      var_cas_outAssemblyCode.writeString ("\n") ;
    }
  }
  var_cas_outAssemblyCode.writeString ("\n") ;
  var_cas_outAssemblyCode.writeString (";--- User defined registers (in RAM)\n") ;
  {
    GGS_registerTable::cEnumerator enumerator_8745 (var_cas_inAllRegisters, true) ;
    const GGS_registerTable::cElement * operand_8745 = NULL ;
    while (((operand_8745 = enumerator_8745.nextObject ()))) {
      macroValidPointer (operand_8745) ;
      if (((var_cas_inPredefinedRegisters.reader_hasKey (_inLexique, operand_8745->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (299)) COMMA_SOURCE_FILE_AT_LINE (299)))._operator_not ()).isBuiltAndTrue ()) {
        GGS_uint  var_cas_firstRegister ;
        const GGS_uintlist  _temp_8865 = operand_8745->mInfo.mRegisterAddressList ;
        if (_temp_8865._isBuilt ()) {
          _temp_8865 (HERE)->method_first (_inLexique, var_cas_firstRegister COMMA_SOURCE_FILE_AT_LINE (300)) ;
        }
        var_cas_outAssemblyCode._dotAssign_operation (operand_8745->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (301))) ;
        var_cas_outAssemblyCode.writeString (" EQU ") ;
        var_cas_outAssemblyCode._dotAssign_operation (var_cas_firstRegister.reader_hexString (_inLexique COMMA_SOURCE_FILE_AT_LINE (301))) ;
        var_cas_outAssemblyCode.writeString ("\n") ;
      }
    }
  }
  var_cas_outAssemblyCode.writeString ("\n") ;
  var_cas_outAssemblyCode.writeString (";--- Piccolo defined symbols\n") ;
  var_cas_outAssemblyCode.writeString ("F EQU 0\n") ;
  var_cas_outAssemblyCode.writeString ("W EQU 1\n") ;
  var_cas_outAssemblyCode.writeString ("BSR_ACCESS EQU 1\n"
    "\n") ;
  if (((var_cas_inActualConfigurationMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (311)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
    var_cas_outAssemblyCode.writeString (";--- Configuration\n"
      "\n") ;
    {
      GGS_actualConfigurationMap::cEnumerator enumerator_9412 (var_cas_inActualConfigurationMap, true) ;
      const GGS_actualConfigurationMap::cElement * operand_9412 = NULL ;
      while (((operand_9412 = enumerator_9412.nextObject ()))) {
        macroValidPointer (operand_9412) ;
        var_cas_outAssemblyCode.writeString ("  __config ") ;
        var_cas_outAssemblyCode._dotAssign_operation (operand_9412->mInfo.mRegisterAddress.reader_hexString (_inLexique COMMA_SOURCE_FILE_AT_LINE (314))) ;
        var_cas_outAssemblyCode.writeString (", ") ;
        var_cas_outAssemblyCode._dotAssign_operation ((operand_9412->mInfo.mRegisterValue)._operator_and (GGS_uint (true, 255U)).reader_hexString (_inLexique COMMA_SOURCE_FILE_AT_LINE (314))) ;
        var_cas_outAssemblyCode.writeString ("\n") ;
      }
    }
  }
  var_cas_outAssemblyCode.writeString (";---\n"
    "\n") ;
  var_cas_outAssemblyCode.writeString ("  END\n"
    "\n") ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_midrange_build_assembly_code\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_midrange_ipic_build_assembly_code (void) {
 enterCategoryMethod__midrange_ipic_instruction__buildAssemblyCode ((typeCategoryMethod__midrange_ipic_instruction__buildAssemblyCode) category_method__midrange_ipic_pseudo_ORG__buildAssemblyCode, gClassInfoFor__midrange_ipic_pseudo_ORG.slotID ()) ;
 enterCategoryMethod__midrange_ipic_instruction__buildAssemblyCode ((typeCategoryMethod__midrange_ipic_instruction__buildAssemblyCode) category_method__midrange_ipic_pseudo_LABEL__buildAssemblyCode, gClassInfoFor__midrange_ipic_pseudo_LABEL.slotID ()) ;
 enterCategoryMethod__midrange_ipic_instruction__buildAssemblyCode ((typeCategoryMethod__midrange_ipic_instruction__buildAssemblyCode) category_method__midrange_ipic_instruction_FD__buildAssemblyCode, gClassInfoFor__midrange_ipic_instruction_FD.slotID ()) ;
 enterCategoryMethod__midrange_ipic_instruction__buildAssemblyCode ((typeCategoryMethod__midrange_ipic_instruction__buildAssemblyCode) category_method__midrange_ipic_instruction_FB__buildAssemblyCode, gClassInfoFor__midrange_ipic_instruction_FB.slotID ()) ;
 enterCategoryMethod__midrange_ipic_instruction__buildAssemblyCode ((typeCategoryMethod__midrange_ipic_instruction__buildAssemblyCode) category_method__midrange_ipic_instruction_BitTestSkip__buildAssemblyCode, gClassInfoFor__midrange_ipic_instruction_BitTestSkip.slotID ()) ;
 enterCategoryMethod__midrange_ipic_instruction__buildAssemblyCode ((typeCategoryMethod__midrange_ipic_instruction__buildAssemblyCode) category_method__midrange_ipic_instruction_F__buildAssemblyCode, gClassInfoFor__midrange_ipic_instruction_F.slotID ()) ;
 enterCategoryMethod__midrange_ipic_instruction__buildAssemblyCode ((typeCategoryMethod__midrange_ipic_instruction__buildAssemblyCode) category_method__midrange_ipic_incDecRegisterInCondition__buildAssemblyCode, gClassInfoFor__midrange_ipic_incDecRegisterInCondition.slotID ()) ;
 enterCategoryMethod__midrange_ipic_instruction__buildAssemblyCode ((typeCategoryMethod__midrange_ipic_instruction__buildAssemblyCode) category_method__midrange_ipic_JUMP__buildAssemblyCode, gClassInfoFor__midrange_ipic_JUMP.slotID ()) ;
 enterCategoryMethod__midrange_ipic_instruction__buildAssemblyCode ((typeCategoryMethod__midrange_ipic_instruction__buildAssemblyCode) category_method__midrange_ipic_JSR__buildAssemblyCode, gClassInfoFor__midrange_ipic_JSR.slotID ()) ;
 enterCategoryMethod__midrange_ipic_instruction__buildAssemblyCode ((typeCategoryMethod__midrange_ipic_instruction__buildAssemblyCode) category_method__midrange_ipic_instruction_CLRWDT__buildAssemblyCode, gClassInfoFor__midrange_ipic_instruction_CLRWDT.slotID ()) ;
 enterCategoryMethod__midrange_ipic_instruction__buildAssemblyCode ((typeCategoryMethod__midrange_ipic_instruction__buildAssemblyCode) category_method__midrange_ipic_instruction_CLRW__buildAssemblyCode, gClassInfoFor__midrange_ipic_instruction_CLRW.slotID ()) ;
 enterCategoryMethod__midrange_ipic_instruction__buildAssemblyCode ((typeCategoryMethod__midrange_ipic_instruction__buildAssemblyCode) category_method__midrange_ipic_instruction_NOP__buildAssemblyCode, gClassInfoFor__midrange_ipic_instruction_NOP.slotID ()) ;
 enterCategoryMethod__midrange_ipic_instruction__buildAssemblyCode ((typeCategoryMethod__midrange_ipic_instruction__buildAssemblyCode) category_method__midrange_ipic_instruction_RETURN__buildAssemblyCode, gClassInfoFor__midrange_ipic_instruction_RETURN.slotID ()) ;
 enterCategoryMethod__midrange_ipic_instruction__buildAssemblyCode ((typeCategoryMethod__midrange_ipic_instruction__buildAssemblyCode) category_method__midrange_ipic_instruction_RETFIE__buildAssemblyCode, gClassInfoFor__midrange_ipic_instruction_RETFIE.slotID ()) ;
 enterCategoryMethod__midrange_ipic_instruction__buildAssemblyCode ((typeCategoryMethod__midrange_ipic_instruction__buildAssemblyCode) category_method__midrange_ipic_instruction_SLEEP__buildAssemblyCode, gClassInfoFor__midrange_ipic_instruction_SLEEP.slotID ()) ;
 enterCategoryMethod__midrange_ipic_instruction__buildAssemblyCode ((typeCategoryMethod__midrange_ipic_instruction__buildAssemblyCode) category_method__midrange_ipic_instruction_literalOperation__buildAssemblyCode, gClassInfoFor__midrange_ipic_instruction_literalOperation.slotID ()) ;
 enterCategoryMethod__midrange_ipic_instruction__buildAssemblyCode ((typeCategoryMethod__midrange_ipic_instruction__buildAssemblyCode) category_method__midrange_ipic_instruction_MNOP__buildAssemblyCode, gClassInfoFor__midrange_ipic_instruction_MNOP.slotID ()) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogueAction prologueEpilogueObjectFor_midrange_ipic_build_assembly_code (prologueRoutineFor_midrange_ipic_build_assembly_code,
                                   NULL) ;

//---------------------------------------------------------------------------*

