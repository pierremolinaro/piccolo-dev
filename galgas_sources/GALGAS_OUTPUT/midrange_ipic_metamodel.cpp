//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'midrange_ipic_metamodel.cpp'                     *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     november 19th, 2009, at 19h17'4"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "midrange_ipic_metamodel.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "midrange_ipic_metamodel.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of 'midrange_ipic_registerExpression' struct         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_registerExpression ("midrange_ipic_registerExpression", false, NULL) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_registerExpression::GGS_midrange_ipic_registerExpression (void) :
mAssemblyString (),
mRegisterAddress () {
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_registerExpression::~GGS_midrange_ipic_registerExpression (void) {
}

//---------------------------------------------------------------------------*

void GGS_midrange_ipic_registerExpression::drop (void) {
  mAssemblyString.drop () ;
  mRegisterAddress.drop () ;
}

//---------------------------------------------------------------------------*

bool GGS_midrange_ipic_registerExpression::isBuilt (void) const {
  return mAssemblyString.isBuilt ()
    && mRegisterAddress.isBuilt () ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_midrange_ipic_registerExpression::
operator_isEqual (const GGS_midrange_ipic_registerExpression & inOperand) const {
  return mAssemblyString.operator_isEqual (inOperand.mAssemblyString)
    .operator_and (mRegisterAddress.operator_isEqual (inOperand.mRegisterAddress)) ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_midrange_ipic_registerExpression::
operator_isNotEqual (const GGS_midrange_ipic_registerExpression & inOperand) const {
  return mAssemblyString.operator_isNotEqual (inOperand.mAssemblyString)
    .operator_or (mRegisterAddress.operator_isNotEqual (inOperand.mRegisterAddress)) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_registerExpression GGS_midrange_ipic_registerExpression::
constructor_new (const GGS_string& argument_0,
                 const GGS_uint & argument_1) {
  GGS_midrange_ipic_registerExpression result ;
  result.mAssemblyString = argument_0 ;
  result.mRegisterAddress = argument_1 ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_midrange_ipic_registerExpression::
reader_description (const PMSInt32 inIndentation) const {
  C_String _s ;
  _s << "<struct @midrange_ipic_registerExpression" ;
  if (isBuilt ()) {
    _s << "\n" ;
    _s.writeStringMultiple ("| ", inIndentation + 1) ;
    _s << "mAssemblyString " ;
    _s << mAssemblyString.reader_description (inIndentation + 1) ;
    _s << "\n" ;
    _s.writeStringMultiple ("| ", inIndentation + 1) ;
    _s << "mRegisterAddress " ;
    _s << mRegisterAddress.reader_description (inIndentation + 1) ;
  }else{
    _s << "not built" ;
  }
  _s << "\n" ;
  _s.writeStringMultiple ("| ", inIndentation) ;
  _s << ">" ;
  return GGS_string (true, _s) ;
}

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_registerExpression::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_registerExpression * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_registerExpression (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_registerExpression GGS_midrange_ipic_registerExpression::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_registerExpression result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_registerExpression * p = dynamic_cast <const GGS_midrange_ipic_registerExpression *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_registerExpression, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_registerExpression::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_registerExpression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@registerExpression.resolveMidrangeAccess'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__registerExpression__resolveMidrangeAccess (C_Compiler & inLexique,
                                const cPtr_registerExpression * operand_530,
                                const GGS_uint   var_cas_inTotalBankCount,
                                const GGS_uint   var_cas_inCurrentBank,
                                const GGS_registerTable   var_cas_inRegisterTable,
                                GGS_midrange_ipic_registerExpression & var_cas_outIPICregisterDescription,
                                GGS_bitSliceTable  & var_cas_outBitSliceTable
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_530 != NULL) {
    GGS_string var_cas_assemblyString = operand_530->mRegisterName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (24)) ;
    const GGS_bool cond_891 = (operand_530->mOffset.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (25))).operator_strictSup (GGS_uint (0U)) ;
    if (cond_891.isBuiltAndTrue ()) {
      var_cas_assemblyString.appendCString (" + ") ;
      var_cas_assemblyString.dotAssign_operation (operand_530->mOffset.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (26)).reader_hexString (inLexique COMMA_SOURCE_FILE_AT_LINE (26))) ;
    }
    GGS_uintlist  var_cas_registerAddressList ;
    GGS_uint  var_cas_size ;
    GGS_uint  var_cas_registerAddress = GGS_uint (0U) ;
    GGS_string automatic_var_0 ;
    const GGS_registerTable  temp_1011 = var_cas_inRegisterTable ;
    if (temp_1011.isBuilt ()) {
      temp_1011 (HERE)->method_searchKey (inLexique, operand_530->mRegisterName, var_cas_registerAddressList, var_cas_size, var_cas_outBitSliceTable, automatic_var_0 COMMA_SOURCE_FILE_AT_LINE (32)) ;
    }
    GGS_uintlist  var_cas_acceptableBanks = GGS_uintlist ::constructor_emptyList () ;
    {
      GGS_uintlist::cEnumerator enumerator_1184 (var_cas_registerAddressList, true) ;
      const GGS_uintlist::cElement * operand_1184 = NULL ;
      while (((operand_1184 = enumerator_1184.nextObject ()))) {
        macroValidPointer (operand_1184) ;
        var_cas_acceptableBanks.addAssign_operation (operand_1184->mValue.right_shift_operation (inLexique, GGS_uint (7U) COMMA_SOURCE_FILE_AT_LINE (36))) ;
      }
    }
    const GGS_bool cond_2147 = (var_cas_inCurrentBank).operator_isEqual (GGS_uint ::constructor_max (inLexique COMMA_HERE)) ;
    if (cond_2147.isBuiltAndTrue ()) {
      GGS_uint  var_cas_bank = GGS_uint (0U) ;
      GGS_bool var_cas_ok = GGS_bool (true) ;
      GGS_uint _variant_1694 = var_cas_inTotalBankCount ;
      GGS_bool _condition_1694 (_variant_1694.isBuilt (), true) ;
      while (_condition_1694.isBuiltAndTrue ()) {
        _condition_1694 = ((var_cas_bank).operator_strictInf (var_cas_inTotalBankCount)).operator_and (var_cas_ok) ;
        if (_condition_1694.isBuiltAndTrue ()) {
          if (_variant_1694.uintValue () == 0) {
            inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (50)) ;
            _condition_1694 = GGS_bool (false) ;
          }else{
            _variant_1694.decrement_operation (inLexique COMMA_HERE) ;
            var_cas_ok = GGS_bool (false) ;
            {
              GGS_uintlist::cEnumerator enumerator_1518 (var_cas_registerAddressList, true) ;
              const GGS_uintlist::cElement * operand_1518 = NULL ;
              while (((operand_1518 = enumerator_1518.nextObject ()))
                  && ((var_cas_ok).operator_not ().isBuiltAndTrue ())) {
                macroValidPointer (operand_1518) ;
                var_cas_ok = ((operand_1518->mValue).operator_supOrEqual (var_cas_bank.multiply_operation (inLexique, GGS_uint (128U) COMMA_SOURCE_FILE_AT_LINE (46)))).operator_and ((operand_1518->mValue).operator_strictInf (var_cas_bank.multiply_operation (inLexique, GGS_uint (128U) COMMA_SOURCE_FILE_AT_LINE (46)).add_operation (inLexique, GGS_uint (128U) COMMA_SOURCE_FILE_AT_LINE (46)))) ;
                var_cas_registerAddress = (operand_1518->mValue).operator_and (GGS_uint (127U)) ;
              }
            }
            var_cas_bank.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (49)) ;
          }
        }
      }
      const GGS_bool cond_2135 = (var_cas_ok).operator_not () ;
      if (cond_2135.isBuiltAndTrue ()) {
        GGS_string var_cas_acceptableBankMessage = GGS_string ("") ;
        {
          GGS_uintlist::cEnumerator enumerator_1798 (var_cas_registerAddressList, true) ;
          const GGS_uintlist::cElement * operand_1798 = enumerator_1798.nextObject () ;
          if ((operand_1798 != NULL)) {
            bool _foreach_loop_1798 ;
            do{
              macroValidPointer (operand_1798) ;
              var_cas_acceptableBankMessage.dotAssign_operation (operand_1798->mValue.right_shift_operation (inLexique, GGS_uint (7U) COMMA_SOURCE_FILE_AT_LINE (54)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (54))) ;
              operand_1798 = enumerator_1798.nextObject () ;
              _foreach_loop_1798 = ((operand_1798 != NULL)) ;
              if (_foreach_loop_1798) {
                var_cas_acceptableBankMessage.appendCString (", ") ;
              }
            }while (_foreach_loop_1798) ;
          }
        }
        operand_530->mRegisterName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("as no bank is currently known, the '")).operator_concat (operand_530->mRegisterName)).operator_concat (GGS_string ("' register accessible from bank "))).operator_concat (var_cas_acceptableBankMessage)).operator_concat (GGS_string (", but should be able to be accessed from any bank setting")) COMMA_SOURCE_FILE_AT_LINE (58)) ;
      }
    }else if (cond_2147.isBuiltAndFalse ()) {
      GGS_bool var_cas_found = GGS_bool (false) ;
      {
        GGS_uintlist::cEnumerator enumerator_2206 (var_cas_registerAddressList, true) ;
        const GGS_uintlist::cElement * operand_2206 = NULL ;
        while (((operand_2206 = enumerator_2206.nextObject ()))
            && ((var_cas_found).operator_not ().isBuiltAndTrue ())) {
          macroValidPointer (operand_2206) ;
          var_cas_found = ((operand_2206->mValue).operator_supOrEqual (var_cas_inCurrentBank.multiply_operation (inLexique, GGS_uint (128U) COMMA_SOURCE_FILE_AT_LINE (62)))).operator_and ((operand_2206->mValue).operator_strictInf (var_cas_inCurrentBank.multiply_operation (inLexique, GGS_uint (128U) COMMA_SOURCE_FILE_AT_LINE (62)).add_operation (inLexique, GGS_uint (128U) COMMA_SOURCE_FILE_AT_LINE (62)))) ;
          var_cas_registerAddress = (operand_2206->mValue).operator_and (GGS_uint (127U)) ;
        }
      }
      const GGS_bool cond_2786 = (var_cas_found).operator_not () ;
      if (cond_2786.isBuiltAndTrue ()) {
        GGS_string var_cas_acceptableBankMessage = GGS_string ("") ;
        {
          GGS_uintlist::cEnumerator enumerator_2476 (var_cas_registerAddressList, true) ;
          const GGS_uintlist::cElement * operand_2476 = enumerator_2476.nextObject () ;
          if ((operand_2476 != NULL)) {
            bool _foreach_loop_2476 ;
            do{
              macroValidPointer (operand_2476) ;
              var_cas_acceptableBankMessage.dotAssign_operation (operand_2476->mValue.right_shift_operation (inLexique, GGS_uint (7U) COMMA_SOURCE_FILE_AT_LINE (68)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (68))) ;
              operand_2476 = enumerator_2476.nextObject () ;
              _foreach_loop_2476 = ((operand_2476 != NULL)) ;
              if (_foreach_loop_2476) {
                var_cas_acceptableBankMessage.appendCString (", ") ;
              }
            }while (_foreach_loop_2476) ;
          }
        }
        operand_530->mRegisterName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((((GGS_string ("the '")).operator_concat (operand_530->mRegisterName)).operator_concat (GGS_string ("' register cannot be accessed from bank "))).operator_concat (var_cas_inCurrentBank.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (71)))).operator_concat (GGS_string (" (valid bank setting: "))).operator_concat (var_cas_acceptableBankMessage)).operator_concat (GGS_string (")")) COMMA_SOURCE_FILE_AT_LINE (72)) ;
      }
    }
    var_cas_outIPICregisterDescription = GGS_midrange_ipic_registerExpression::constructor_new (var_cas_assemblyString, var_cas_registerAddress.add_operation (inLexique, operand_530->mOffset.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (77)) COMMA_SOURCE_FILE_AT_LINE (77))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@registerExpression.resolveMidrangeAccess'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__registerExpression__resolveMidrangeAccess> gDispatchTableForMethod__registerExpression__resolveMidrangeAccess ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__registerExpression__resolveMidrangeAccess (typeCategoryMethod__registerExpression__resolveMidrangeAccess inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__registerExpression__resolveMidrangeAccess.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__registerExpression__resolveMidrangeAccess
findCategoryMethod__registerExpression__resolveMidrangeAccess (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__registerExpression__resolveMidrangeAccess result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__registerExpression__resolveMidrangeAccess.count ()) {
    result = gDispatchTableForMethod__registerExpression__resolveMidrangeAccess (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__registerExpression__resolveMidrangeAccess (superClassPtr) ;
      gDispatchTableForMethod__registerExpression__resolveMidrangeAccess.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                  class 'cPtr_midrange_ipic_instruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_midrange_ipic_instruction::
cPtr_midrange_ipic_instruction (LOCATION_ARGS)
:cPtr__AC_galgas_class (THERE) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_midrange_ipic_instruction * GGS_midrange_ipic_instruction::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_midrange_ipic_instruction *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction::
method_setCurrentAddress (C_Compiler & inLexique,
                                GGS_uint & var_cas_ioCurrentAddress COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_uint  var_cas_length ;
  method_instructionLength (inLexique, var_cas_length COMMA_SOURCE_FILE_AT_LINE (89)) ;
  var_cas_ioCurrentAddress = var_cas_ioCurrentAddress.add_operation (inLexique, var_cas_length COMMA_SOURCE_FILE_AT_LINE (90)) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction::
method_isLABELorORG (C_Compiler & /* inLexique */,
                                GGS_bool& var_cas_outIsLABELorORG COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outIsLABELorORG = GGS_bool (false) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction::
method_isNULL (C_Compiler & /* inLexique */,
                                GGS_bool& var_cas_outIsNULL COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outIsNULL = GGS_bool (false) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction::
method_nextInstructionIsReachable (C_Compiler & /* inLexique */,
                                GGS_bool& var_cas_outIsReachable COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outIsReachable = GGS_bool (true) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction::
method_isSkippingInstruction (C_Compiler & /* inLexique */,
                                GGS_bool& var_cas_outIsSkipping COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outIsSkipping = GGS_bool (false) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction::
method_enterReferencedLabel (C_Compiler & /* inLexique */,
                                GGS_stringset & /* var_cas_ioReferencedLabelSet */ COMMA_UNUSED_LOCATION_ARGS) const {
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction::
appendForDescription (C_String & ioString,
                      const PMSInt32 /* inIndentation */) const {
  ioString << "->@midrange_ipic_instruction:" ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction::
instanceMessage (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_midrange_ipic_instruction (& typeid (cPtr_midrange_ipic_instruction), NULL, "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_midrange_ipic_instruction::galgasRTTI (void) const {
  return & gClassInfoFor__midrange_ipic_instruction ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_midrange_ipic_instruction'                *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_instruction ("midrange_ipic_instruction", true, NULL) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction::
GGS_midrange_ipic_instruction (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction::
GGS_midrange_ipic_instruction (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_midrange_ipic_instruction GGS_midrange_ipic_instruction::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_midrange_ipic_instruction *> (inPointer) != NULL)
      : (typeid (cPtr_midrange_ipic_instruction) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_midrange_ipic_instruction (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_midrange_ipic_instruction),
                                       inUseKindOfClass,
                                       inPointer->instanceMessage ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_midrange_ipic_instruction::actualTypeName (void) const {
  return "midrange_ipic_instruction" ;
}

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * GGS_midrange_ipic_instruction::galgasObjectRunTimeInfo (void) const {
  AC_galgasClassRunTimeInformation * result = NULL ;
  if (mPointer != NULL) {
    result = mPointer->galgasRTTI () ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

C_galgasRootClassRunTimeInformation gClassInfoFor__midrange_ipic_instruction ("midrange_ipic_instruction", & kTypeDescriptor_GGS_midrange_ipic_instruction) ;

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_instruction::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_instruction * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_instruction (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction GGS_midrange_ipic_instruction::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_instruction * p = dynamic_cast <const GGS_midrange_ipic_instruction *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_instruction, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_instruction::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_instruction ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@midrange_ipic_instructionList'              *
//                                                                           *
//---------------------------------------------------------------------------*

elementOf_GGS_midrange_ipic_instructionList::
elementOf_GGS_midrange_ipic_instructionList (const GGS_midrange_ipic_instruction & argument_0
                                COMMA_LOCATION_ARGS) :
AC_galgas_list::cListElement (THERE),
mInstruction (argument_0) {
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_midrange_ipic_instructionList::
isEqualToObject (const cListElement * inOperand) const {
  bool equal = inOperand == this ;
  if (! equal) {
    const elementOf_GGS_midrange_ipic_instructionList * ptr = dynamic_cast <const elementOf_GGS_midrange_ipic_instructionList *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mInstruction.operator_isEqual (ptr->mInstruction).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void elementOf_GGS_midrange_ipic_instructionList::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mInstruction.reader_description (inIndentation) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                  List '@midrange_ipic_instructionList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_instructionList ("midrange_ipic_instructionList", false, NULL) ;

//---------------------------------------------------------------------------*

void GGS_midrange_ipic_instructionList::
internalAppendValues (const GGS_midrange_ipic_instruction & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalAppendItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_midrange_ipic_instructionList::
internalPrependValues (const GGS_midrange_ipic_instruction & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalPrependItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_midrange_ipic_instructionList::
addAssign_operation (const GGS_midrange_ipic_instruction & argument_0) {
  if (isBuilt ()&& argument_0.isBuilt ()) {
    insulateList () ;
    internalAppendValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instructionList GGS_midrange_ipic_instructionList::
operator_concat (const GGS_midrange_ipic_instructionList & inOperand) const {
  GGS_midrange_ipic_instructionList result = * this ;
  result.dotAssign_operation (inOperand) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_midrange_ipic_instructionList::
dotAssign_operation (const GGS_midrange_ipic_instructionList inOperand) {
  if (isBuilt () && inOperand.isBuilt ()) {
    if (count () == 0) {
      * this = inOperand ;
    }else{
      if (inOperand.count () > 0) {
        insulateList () ;
        elementOf_GGS_midrange_ipic_instructionList * p = inOperand.firstObject () ;
        while (p != NULL) {
          macroValidPointer (p) ;
          GGS_midrange_ipic_instruction  p_0 = p->mInstruction ;
          internalAppendValues (p_0 COMMA_HERE) ;
          p = p->nextObject () ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_midrange_ipic_instructionList::
modifier_prependValue (C_Compiler & /* inLexique */,
                     const GGS_midrange_ipic_instruction & argument_0
                     COMMA_UNUSED_LOCATION_ARGS) {
  if (isBuilt ()) {
    insulateList () ;
    internalPrependValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_midrange_ipic_instructionList::
insulateList (void) {
  if (_shared ()) {
    cElement * ptr = firstObject () ;
    alloc () ;
    while (ptr != NULL) {
      macroValidPointer (ptr) ;
      internalAppendValues (ptr->mInstruction
                                COMMA_HERE) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instructionList  GGS_midrange_ipic_instructionList::
constructor_emptyList (void) {
  GGS_midrange_ipic_instructionList result ;
  result.alloc () ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instructionList  GGS_midrange_ipic_instructionList::
constructor_listWithValue (const GGS_midrange_ipic_instruction & argument_0) {
  GGS_midrange_ipic_instructionList result ;
  result.alloc () ;
  result.addAssign_operation (argument_0) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_midrange_ipic_instructionList::
internalSubListWithRange (GGS_midrange_ipic_instructionList & ioList,
                          const PMSInt32 inFirstIndex,
                          const PMSInt32 inCount) const {
  ioList.alloc () ;
  if (inCount > 0) {
    cElement * ptr = firstObject () ;
    for (PMSInt32 i=0 ; i<inFirstIndex ; i++) {
      macroValidPointer (ptr) ;
      ptr = ptr->nextObject () ;
    }
    for (PMSInt32 i=0 ; i<inCount ; i++) {
      macroValidPointer (ptr) ;
      ioList.addAssign_operation (ptr->mInstruction) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instructionList GGS_midrange_ipic_instructionList::
reader_subListWithRange (C_Compiler & inLexique,
                         const GGS_uint & inFirstIndex,
                         const GGS_uint & inCount
                         COMMA_LOCATION_ARGS) const {
  GGS_midrange_ipic_instructionList result ;
  if (isBuilt () && inFirstIndex.isBuilt () && inCount.isBuilt ()) {
    const PMSInt32 firstIndex = (PMSInt32) inFirstIndex.uintValue () ;
    const PMSInt32 rangeCount = (PMSInt32) inCount.uintValue () ;
    if ((firstIndex + rangeCount) > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListWithRange' method invoked with upper bound greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, firstIndex, rangeCount) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instructionList GGS_midrange_ipic_instructionList::
reader_subListFromIndex (C_Compiler & inLexique,
                         const GGS_uint & inIndex
                         COMMA_LOCATION_ARGS) const {
  GGS_midrange_ipic_instructionList result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    const PMSInt32 startIndex = (PMSInt32) inIndex.uintValue () ;
    if (startIndex > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListFromIndex' method invoked with start index greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, startIndex, count () - startIndex) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_midrange_ipic_instructionList::
reader_description (const PMSInt32 inIndentation) const {
  return performDescription ("@midrange_ipic_instructionList", inIndentation) ;
}

//---------------------------------------------------------------------------*

void GGS_midrange_ipic_instructionList::
method_first (C_Compiler & inLexique,
              GGS_midrange_ipic_instruction & _out_0
              COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'first' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mInstruction ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_midrange_ipic_instructionList::
method_last (C_Compiler & inLexique,
             GGS_midrange_ipic_instruction & _out_0
             COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'last' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mInstruction ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_midrange_ipic_instructionList::
modifier_popFirst (C_Compiler & inLexique,
                 GGS_midrange_ipic_instruction & _out_0
                 COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popFirst' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mInstruction ;
    insulateList () ;
    _internalRemoveFirst () ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_midrange_ipic_instructionList::
modifier_popLast (C_Compiler & inLexique,
                GGS_midrange_ipic_instruction & _out_0
                COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popLast' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mInstruction ;
    insulateList () ;
    _internalRemoveLast () ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction  GGS_midrange_ipic_instructionList::
reader_mInstructionAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_midrange_ipic_instruction  result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mInstruction ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_midrange_ipic_instructionList::
modifier_setMInstructionAtIndex (C_Compiler & inLexique,
                              const GGS_midrange_ipic_instruction  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mInstruction = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

/* const */ GGS_midrange_ipic_instruction  & GGS_midrange_ipic_instructionList::cEnumerator::_mInstruction (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mInstruction ;
}

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_instructionList::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_instructionList * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_instructionList (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instructionList GGS_midrange_ipic_instructionList::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instructionList result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_instructionList * p = dynamic_cast <const GGS_midrange_ipic_instructionList *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_instructionList, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_instructionList::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_instructionList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                     class 'cPtr_midrange_ipic_NULL'                       *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_midrange_ipic_NULL::
cPtr_midrange_ipic_NULL (LOCATION_ARGS)
:cPtr_midrange_ipic_instruction (THERE) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_midrange_ipic_NULL * GGS_midrange_ipic_NULL::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_NULL *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_midrange_ipic_NULL *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_midrange_ipic_NULL::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  return typeid (this) == typeid (inOperand) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_NULL::
method_instructionLength (C_Compiler & /* inLexique */,
                                GGS_uint & var_cas_outLength COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outLength = GGS_uint (0U) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_NULL::
method_displayIPICinstruction (C_Compiler & /* inLexique */,
                                GGS_string& var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioListFileContents.appendCString ("-") ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_NULL::
method_isNULL (C_Compiler & /* inLexique */,
                                GGS_bool& var_cas_outIsNULL COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outIsNULL = GGS_bool (true) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_NULL::
appendForDescription (C_String & ioString,
                      const PMSInt32 /* inIndentation */) const {
  ioString << "->@midrange_ipic_NULL:" ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_NULL::
instanceMessage (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_NULL::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_midrange_ipic_NULL (& typeid (cPtr_midrange_ipic_NULL), & typeid (cPtr_midrange_ipic_instruction), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_midrange_ipic_NULL::galgasRTTI (void) const {
  return & gClassInfoFor__midrange_ipic_NULL ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_midrange_ipic_NULL'                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_NULL ("midrange_ipic_NULL", true, & kTypeDescriptor_GGS_midrange_ipic_instruction) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_NULL::
GGS_midrange_ipic_NULL (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_NULL::
GGS_midrange_ipic_NULL (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_midrange_ipic_NULL GGS_midrange_ipic_NULL::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_NULL result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_midrange_ipic_NULL *> (inPointer) != NULL)
      : (typeid (cPtr_midrange_ipic_NULL) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_midrange_ipic_NULL (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_midrange_ipic_NULL),
                                       inUseKindOfClass,
                                       inPointer->instanceMessage ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static cPtr_midrange_ipic_NULL * gSingleton_midrange_ipic_NULL = NULL ;

//---------------------------------------------------------------------------*

static void cleanUp_midrange_ipic_NULL (void) {
  macroDetachPointer (gSingleton_midrange_ipic_NULL, cPtr_midrange_ipic_NULL) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_NULL GGS_midrange_ipic_NULL::
constructor_new (C_Compiler & /* inLexique */
                                COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_NULL result ;
  if (NULL == gSingleton_midrange_ipic_NULL) {
    macroMyNew (gSingleton_midrange_ipic_NULL, cPtr_midrange_ipic_NULL (THERE)) ;
    registerReleaseRoutine (cleanUp_midrange_ipic_NULL) ;
  }
  macroAssignPointer (result.mPointer, gSingleton_midrange_ipic_NULL) ;
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_midrange_ipic_NULL::actualTypeName (void) const {
  return "midrange_ipic_NULL" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__midrange_ipic_NULL ("midrange_ipic_NULL", gClassInfoFor__midrange_ipic_instruction, & kTypeDescriptor_GGS_midrange_ipic_NULL) ;

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_NULL::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_NULL * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_NULL (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_NULL GGS_midrange_ipic_NULL::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_NULL result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_NULL * p = dynamic_cast <const GGS_midrange_ipic_NULL *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_NULL, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_NULL::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_NULL ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                  class 'cPtr_midrange_ipic_pseudo_ORG'                    *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_midrange_ipic_pseudo_ORG::
cPtr_midrange_ipic_pseudo_ORG (const GGS_uint & argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_midrange_ipic_instruction (THERE),
mOrigin (argument_0) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_midrange_ipic_pseudo_ORG * GGS_midrange_ipic_pseudo_ORG::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_pseudo_ORG *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_midrange_ipic_pseudo_ORG *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_midrange_ipic_pseudo_ORG::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_midrange_ipic_pseudo_ORG * ptr = dynamic_cast <const cPtr_midrange_ipic_pseudo_ORG *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mOrigin.operator_isEqual (ptr->mOrigin).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_pseudo_ORG::
method_instructionLength (C_Compiler & /* inLexique */,
                                GGS_uint & var_cas_outLength COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outLength = GGS_uint (0U) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_pseudo_ORG::
method_setCurrentAddress (C_Compiler & /* inLexique */,
                                GGS_uint & var_cas_ioCurrentAddress COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioCurrentAddress = mOrigin ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_pseudo_ORG::
method_displayIPICinstruction (C_Compiler & inLexique,
                                GGS_string& var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioListFileContents.appendCString ("ORG ") ;
  var_cas_ioListFileContents.dotAssign_operation (mOrigin.reader_hexString (inLexique COMMA_SOURCE_FILE_AT_LINE (151))) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_pseudo_ORG::
method_isLABELorORG (C_Compiler & /* inLexique */,
                                GGS_bool& var_cas_outIsLABELorORG COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outIsLABELorORG = GGS_bool (true) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_pseudo_ORG::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "->@midrange_ipic_pseudo_ORG:"
           << mOrigin.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_pseudo_ORG::
instanceMessage (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_pseudo_ORG::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_midrange_ipic_pseudo_ORG (& typeid (cPtr_midrange_ipic_pseudo_ORG), & typeid (cPtr_midrange_ipic_instruction), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_midrange_ipic_pseudo_ORG::galgasRTTI (void) const {
  return & gClassInfoFor__midrange_ipic_pseudo_ORG ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_midrange_ipic_pseudo_ORG::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_midrange_ipic_pseudo_ORG (mOrigin COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_midrange_ipic_pseudo_ORG'                 *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_pseudo_ORG ("midrange_ipic_pseudo_ORG", true, & kTypeDescriptor_GGS_midrange_ipic_instruction) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_pseudo_ORG::
GGS_midrange_ipic_pseudo_ORG (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_pseudo_ORG::
GGS_midrange_ipic_pseudo_ORG (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_midrange_ipic_pseudo_ORG GGS_midrange_ipic_pseudo_ORG::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_pseudo_ORG result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_midrange_ipic_pseudo_ORG *> (inPointer) != NULL)
      : (typeid (cPtr_midrange_ipic_pseudo_ORG) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_midrange_ipic_pseudo_ORG (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_midrange_ipic_pseudo_ORG),
                                       inUseKindOfClass,
                                       inPointer->instanceMessage ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_pseudo_ORG GGS_midrange_ipic_pseudo_ORG::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_uint & argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_pseudo_ORG result ;
  macroMyNew (result.mPointer, cPtr_midrange_ipic_pseudo_ORG (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_uint  GGS_midrange_ipic_pseudo_ORG::
reader_mOrigin (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_uint   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_pseudo_ORG *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_pseudo_ORG *) mPointer)->mOrigin ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_midrange_ipic_pseudo_ORG::actualTypeName (void) const {
  return "midrange_ipic_pseudo_ORG" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__midrange_ipic_pseudo_ORG ("midrange_ipic_pseudo_ORG", gClassInfoFor__midrange_ipic_instruction, & kTypeDescriptor_GGS_midrange_ipic_pseudo_ORG) ;

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_pseudo_ORG::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_pseudo_ORG * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_pseudo_ORG (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_pseudo_ORG GGS_midrange_ipic_pseudo_ORG::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_pseudo_ORG result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_pseudo_ORG * p = dynamic_cast <const GGS_midrange_ipic_pseudo_ORG *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_pseudo_ORG, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_pseudo_ORG::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_pseudo_ORG ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 class 'cPtr_midrange_ipic_pseudo_LABEL'                   *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_midrange_ipic_pseudo_LABEL::
cPtr_midrange_ipic_pseudo_LABEL (const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_midrange_ipic_instruction (THERE),
mLabel (argument_0) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_midrange_ipic_pseudo_LABEL * GGS_midrange_ipic_pseudo_LABEL::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_pseudo_LABEL *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_midrange_ipic_pseudo_LABEL *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_midrange_ipic_pseudo_LABEL::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_midrange_ipic_pseudo_LABEL * ptr = dynamic_cast <const cPtr_midrange_ipic_pseudo_LABEL *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mLabel.operator_isEqual (ptr->mLabel).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_pseudo_LABEL::
method_instructionLength (C_Compiler & /* inLexique */,
                                GGS_uint & var_cas_outLength COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outLength = GGS_uint (0U) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_pseudo_LABEL::
method_displayIPICinstruction (C_Compiler & /* inLexique */,
                                GGS_string& var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioListFileContents.appendCString ("LABEL ") ;
  var_cas_ioListFileContents.dotAssign_operation (mLabel) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_pseudo_LABEL::
method_isLABELorORG (C_Compiler & /* inLexique */,
                                GGS_bool& var_cas_outIsLABELorORG COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outIsLABELorORG = GGS_bool (true) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_pseudo_LABEL::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "->@midrange_ipic_pseudo_LABEL:"
           << mLabel.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_pseudo_LABEL::
instanceMessage (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_pseudo_LABEL::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_midrange_ipic_pseudo_LABEL (& typeid (cPtr_midrange_ipic_pseudo_LABEL), & typeid (cPtr_midrange_ipic_instruction), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_midrange_ipic_pseudo_LABEL::galgasRTTI (void) const {
  return & gClassInfoFor__midrange_ipic_pseudo_LABEL ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_midrange_ipic_pseudo_LABEL::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_midrange_ipic_pseudo_LABEL (mLabel COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_midrange_ipic_pseudo_LABEL'                *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_pseudo_LABEL ("midrange_ipic_pseudo_LABEL", true, & kTypeDescriptor_GGS_midrange_ipic_instruction) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_pseudo_LABEL::
GGS_midrange_ipic_pseudo_LABEL (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_pseudo_LABEL::
GGS_midrange_ipic_pseudo_LABEL (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_midrange_ipic_pseudo_LABEL GGS_midrange_ipic_pseudo_LABEL::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_pseudo_LABEL result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_midrange_ipic_pseudo_LABEL *> (inPointer) != NULL)
      : (typeid (cPtr_midrange_ipic_pseudo_LABEL) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_midrange_ipic_pseudo_LABEL (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_midrange_ipic_pseudo_LABEL),
                                       inUseKindOfClass,
                                       inPointer->instanceMessage ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_pseudo_LABEL GGS_midrange_ipic_pseudo_LABEL::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_pseudo_LABEL result ;
  macroMyNew (result.mPointer, cPtr_midrange_ipic_pseudo_LABEL (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_lstring  GGS_midrange_ipic_pseudo_LABEL::
reader_mLabel (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_lstring   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_pseudo_LABEL *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_pseudo_LABEL *) mPointer)->mLabel ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_midrange_ipic_pseudo_LABEL::actualTypeName (void) const {
  return "midrange_ipic_pseudo_LABEL" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__midrange_ipic_pseudo_LABEL ("midrange_ipic_pseudo_LABEL", gClassInfoFor__midrange_ipic_instruction, & kTypeDescriptor_GGS_midrange_ipic_pseudo_LABEL) ;

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_pseudo_LABEL::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_pseudo_LABEL * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_pseudo_LABEL (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_pseudo_LABEL GGS_midrange_ipic_pseudo_LABEL::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_pseudo_LABEL result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_pseudo_LABEL * p = dynamic_cast <const GGS_midrange_ipic_pseudo_LABEL *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_pseudo_LABEL, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_pseudo_LABEL::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_pseudo_LABEL ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//               class 'cPtr_midrange_ipic_actualInstruction'                *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_midrange_ipic_actualInstruction::
cPtr_midrange_ipic_actualInstruction (const GGS_location & argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_midrange_ipic_instruction (THERE),
mInstructionLocation (argument_0) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_midrange_ipic_actualInstruction * GGS_midrange_ipic_actualInstruction::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_actualInstruction *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_midrange_ipic_actualInstruction *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_actualInstruction::
method_instructionLength (C_Compiler & /* inLexique */,
                                GGS_uint & var_cas_outLength COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outLength = GGS_uint (1U) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_actualInstruction::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "->@midrange_ipic_actualInstruction:"
           << mInstructionLocation.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_actualInstruction::
instanceMessage (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_actualInstruction::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_midrange_ipic_actualInstruction (& typeid (cPtr_midrange_ipic_actualInstruction), & typeid (cPtr_midrange_ipic_instruction), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_midrange_ipic_actualInstruction::galgasRTTI (void) const {
  return & gClassInfoFor__midrange_ipic_actualInstruction ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_midrange_ipic_actualInstruction'             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_actualInstruction ("midrange_ipic_actualInstruction", true, & kTypeDescriptor_GGS_midrange_ipic_instruction) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_actualInstruction::
GGS_midrange_ipic_actualInstruction (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_actualInstruction::
GGS_midrange_ipic_actualInstruction (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_midrange_ipic_actualInstruction GGS_midrange_ipic_actualInstruction::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_actualInstruction result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_midrange_ipic_actualInstruction *> (inPointer) != NULL)
      : (typeid (cPtr_midrange_ipic_actualInstruction) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_midrange_ipic_actualInstruction (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_midrange_ipic_actualInstruction),
                                       inUseKindOfClass,
                                       inPointer->instanceMessage ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_location  GGS_midrange_ipic_actualInstruction::
reader_mInstructionLocation (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_location   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_actualInstruction *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_actualInstruction *) mPointer)->mInstructionLocation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_midrange_ipic_actualInstruction::actualTypeName (void) const {
  return "midrange_ipic_actualInstruction" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__midrange_ipic_actualInstruction ("midrange_ipic_actualInstruction", gClassInfoFor__midrange_ipic_instruction, & kTypeDescriptor_GGS_midrange_ipic_actualInstruction) ;

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_actualInstruction::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_actualInstruction * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_actualInstruction (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_actualInstruction GGS_midrange_ipic_actualInstruction::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_actualInstruction result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_actualInstruction * p = dynamic_cast <const GGS_midrange_ipic_actualInstruction *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_actualInstruction, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_actualInstruction::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_actualInstruction ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                class 'cPtr_midrange_ipic_instruction_FD'                  *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_midrange_ipic_instruction_FD::
cPtr_midrange_ipic_instruction_FD (const GGS_location & argument_0,
                                const GGS_midrange_instruction_FD_base_code& argument_1,
                                const GGS_midrange_ipic_registerExpression& argument_2,
                                const GGS_bool& argument_3
                                COMMA_LOCATION_ARGS)
:cPtr_midrange_ipic_actualInstruction (argument_0 COMMA_THERE),
mInstruction_FD_base_code (argument_1),
mRegisterDescription (argument_2),
m_W_isDestination (argument_3) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_midrange_ipic_instruction_FD * GGS_midrange_ipic_instruction_FD::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_FD *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_midrange_ipic_instruction_FD *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_midrange_ipic_instruction_FD::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_midrange_ipic_instruction_FD * ptr = dynamic_cast <const cPtr_midrange_ipic_instruction_FD *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mInstructionLocation.operator_isEqual (ptr->mInstructionLocation).boolValue ()
         && mInstruction_FD_base_code.operator_isEqual (ptr->mInstruction_FD_base_code).boolValue ()
         && mRegisterDescription.operator_isEqual (ptr->mRegisterDescription).boolValue ()
         && m_W_isDestination.operator_isEqual (ptr->m_W_isDestination).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_FD::
method_getBaseCode (C_Compiler & inLexique,
                                GGS_uint & var_cas_outBaseCode COMMA_UNUSED_LOCATION_ARGS) const {
  ::routine_getMidRangeFDInstructionBaseCode (inLexique,  mInstruction_FD_base_code,  var_cas_outBaseCode COMMA_SOURCE_FILE_AT_LINE (196)) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_FD::
method_displayIPICinstruction (C_Compiler & inLexique,
                                GGS_string& var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioListFileContents.dotAssign_operation (mInstruction_FD_base_code.reader_mnemonic (inLexique COMMA_SOURCE_FILE_AT_LINE (201))) ;
  var_cas_ioListFileContents.appendCString (" ") ;
  var_cas_ioListFileContents.dotAssign_operation (mRegisterDescription.reader_mAssemblyString (inLexique COMMA_SOURCE_FILE_AT_LINE (201))) ;
  const GGS_bool cond_6425 = m_W_isDestination ;
  if (cond_6425.isBuiltAndTrue ()) {
    var_cas_ioListFileContents.appendCString (", W") ;
  }
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_FD::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "->@midrange_ipic_instruction_FD:"
           << mInstructionLocation.reader_description (inIndentation + 1)
           << mInstruction_FD_base_code.reader_description (inIndentation + 1)
           << mRegisterDescription.reader_description (inIndentation + 1)
           << m_W_isDestination.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_FD::
instanceMessage (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_FD::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_midrange_ipic_instruction_FD (& typeid (cPtr_midrange_ipic_instruction_FD), & typeid (cPtr_midrange_ipic_actualInstruction), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_midrange_ipic_instruction_FD::galgasRTTI (void) const {
  return & gClassInfoFor__midrange_ipic_instruction_FD ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_midrange_ipic_instruction_FD::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_midrange_ipic_instruction_FD (mInstructionLocation, mInstruction_FD_base_code, mRegisterDescription, m_W_isDestination COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_midrange_ipic_instruction_FD'               *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_instruction_FD ("midrange_ipic_instruction_FD", true, & kTypeDescriptor_GGS_midrange_ipic_actualInstruction) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_FD::
GGS_midrange_ipic_instruction_FD (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_FD::
GGS_midrange_ipic_instruction_FD (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_midrange_ipic_instruction_FD GGS_midrange_ipic_instruction_FD::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_FD result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_midrange_ipic_instruction_FD *> (inPointer) != NULL)
      : (typeid (cPtr_midrange_ipic_instruction_FD) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_midrange_ipic_instruction_FD (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_midrange_ipic_instruction_FD),
                                       inUseKindOfClass,
                                       inPointer->instanceMessage ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_FD GGS_midrange_ipic_instruction_FD::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_location & argument_0,
                 const GGS_midrange_instruction_FD_base_code& argument_1,
                 const GGS_midrange_ipic_registerExpression& argument_2,
                 const GGS_bool& argument_3
                                COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_FD result ;
  macroMyNew (result.mPointer, cPtr_midrange_ipic_instruction_FD (argument_0,
                                argument_1,
                                argument_2,
                                argument_3 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_instruction_FD_base_code GGS_midrange_ipic_instruction_FD::
reader_mInstruction_FD_base_code (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_midrange_instruction_FD_base_code  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_FD *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_instruction_FD *) mPointer)->mInstruction_FD_base_code ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_registerExpression GGS_midrange_ipic_instruction_FD::
reader_mRegisterDescription (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_midrange_ipic_registerExpression  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_FD *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_instruction_FD *) mPointer)->mRegisterDescription ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_midrange_ipic_instruction_FD::
reader_m_W_isDestination (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_bool  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_FD *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_instruction_FD *) mPointer)->m_W_isDestination ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_midrange_ipic_instruction_FD::actualTypeName (void) const {
  return "midrange_ipic_instruction_FD" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__midrange_ipic_instruction_FD ("midrange_ipic_instruction_FD", gClassInfoFor__midrange_ipic_actualInstruction, & kTypeDescriptor_GGS_midrange_ipic_instruction_FD) ;

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_instruction_FD::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_instruction_FD * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_instruction_FD (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_FD GGS_midrange_ipic_instruction_FD::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_FD result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_instruction_FD * p = dynamic_cast <const GGS_midrange_ipic_instruction_FD *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_instruction_FD, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_instruction_FD::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_instruction_FD ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "getMidRangeFinstructionBaseCode"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_getMidRangeFinstructionBaseCode (C_Compiler &,
                                const GGS_midrange_F_instruction_base_code  var_cas_inInstruction,
                                GGS_uint  & var_cas_outBaseCode COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_getMidRangeFinstructionBaseCode at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  switch (var_cas_inInstruction.enumValue ()) {
  case GGS_midrange_F_instruction_base_code::enum_CLRF:
    {
    var_cas_outBaseCode = GGS_uint (384U) ;
    }
    break ;
  case GGS_midrange_F_instruction_base_code::enum_MOVWF:
    {
    var_cas_outBaseCode = GGS_uint (128U) ;
    }
    break ;
  case GGS_midrange_F_instruction_base_code::kNotBuilt:
    break ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_getMidRangeFinstructionBaseCode\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 class 'cPtr_midrange_ipic_instruction_F'                  *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_midrange_ipic_instruction_F::
cPtr_midrange_ipic_instruction_F (const GGS_location & argument_0,
                                const GGS_midrange_F_instruction_base_code& argument_1,
                                const GGS_midrange_ipic_registerExpression& argument_2
                                COMMA_LOCATION_ARGS)
:cPtr_midrange_ipic_actualInstruction (argument_0 COMMA_THERE),
mFinstruction (argument_1),
mRegisterDescription (argument_2) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_midrange_ipic_instruction_F * GGS_midrange_ipic_instruction_F::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_F *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_midrange_ipic_instruction_F *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_midrange_ipic_instruction_F::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_midrange_ipic_instruction_F * ptr = dynamic_cast <const cPtr_midrange_ipic_instruction_F *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mInstructionLocation.operator_isEqual (ptr->mInstructionLocation).boolValue ()
         && mFinstruction.operator_isEqual (ptr->mFinstruction).boolValue ()
         && mRegisterDescription.operator_isEqual (ptr->mRegisterDescription).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_F::
method_getBaseCode (C_Compiler & inLexique,
                                GGS_uint & var_cas_outBaseCode COMMA_UNUSED_LOCATION_ARGS) const {
  ::routine_getMidRangeFinstructionBaseCode (inLexique,  mFinstruction,  var_cas_outBaseCode COMMA_SOURCE_FILE_AT_LINE (227)) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_F::
method_displayIPICinstruction (C_Compiler & inLexique,
                                GGS_string& var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioListFileContents.dotAssign_operation (mFinstruction.reader_mnemonic (inLexique COMMA_SOURCE_FILE_AT_LINE (232))) ;
  var_cas_ioListFileContents.appendCString (" ") ;
  var_cas_ioListFileContents.dotAssign_operation (mRegisterDescription.reader_mAssemblyString (inLexique COMMA_SOURCE_FILE_AT_LINE (232))) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_F::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "->@midrange_ipic_instruction_F:"
           << mInstructionLocation.reader_description (inIndentation + 1)
           << mFinstruction.reader_description (inIndentation + 1)
           << mRegisterDescription.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_F::
instanceMessage (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_F::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_midrange_ipic_instruction_F (& typeid (cPtr_midrange_ipic_instruction_F), & typeid (cPtr_midrange_ipic_actualInstruction), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_midrange_ipic_instruction_F::galgasRTTI (void) const {
  return & gClassInfoFor__midrange_ipic_instruction_F ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_midrange_ipic_instruction_F::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_midrange_ipic_instruction_F (mInstructionLocation, mFinstruction, mRegisterDescription COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_midrange_ipic_instruction_F'               *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_instruction_F ("midrange_ipic_instruction_F", true, & kTypeDescriptor_GGS_midrange_ipic_actualInstruction) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_F::
GGS_midrange_ipic_instruction_F (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_F::
GGS_midrange_ipic_instruction_F (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_midrange_ipic_instruction_F GGS_midrange_ipic_instruction_F::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_F result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_midrange_ipic_instruction_F *> (inPointer) != NULL)
      : (typeid (cPtr_midrange_ipic_instruction_F) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_midrange_ipic_instruction_F (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_midrange_ipic_instruction_F),
                                       inUseKindOfClass,
                                       inPointer->instanceMessage ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_F GGS_midrange_ipic_instruction_F::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_location & argument_0,
                 const GGS_midrange_F_instruction_base_code& argument_1,
                 const GGS_midrange_ipic_registerExpression& argument_2
                                COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_F result ;
  macroMyNew (result.mPointer, cPtr_midrange_ipic_instruction_F (argument_0,
                                argument_1,
                                argument_2 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_F_instruction_base_code GGS_midrange_ipic_instruction_F::
reader_mFinstruction (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_midrange_F_instruction_base_code  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_F *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_instruction_F *) mPointer)->mFinstruction ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_registerExpression GGS_midrange_ipic_instruction_F::
reader_mRegisterDescription (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_midrange_ipic_registerExpression  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_F *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_instruction_F *) mPointer)->mRegisterDescription ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_midrange_ipic_instruction_F::actualTypeName (void) const {
  return "midrange_ipic_instruction_F" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__midrange_ipic_instruction_F ("midrange_ipic_instruction_F", gClassInfoFor__midrange_ipic_actualInstruction, & kTypeDescriptor_GGS_midrange_ipic_instruction_F) ;

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_instruction_F::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_instruction_F * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_instruction_F (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_F GGS_midrange_ipic_instruction_F::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_F result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_instruction_F * p = dynamic_cast <const GGS_midrange_ipic_instruction_F *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_instruction_F, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_instruction_F::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_instruction_F ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "getMidRangeBitOrientedOpBaseCode"        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_getMidRangeBitOrientedOpBaseCode (C_Compiler &,
                                const GGS_midrange_bit_oriented_op  var_cas_inInstruction,
                                GGS_uint  & var_cas_outBaseCode COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_getMidRangeBitOrientedOpBaseCode at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  switch (var_cas_inInstruction.enumValue ()) {
  case GGS_midrange_bit_oriented_op::enum_BCF:
    {
    var_cas_outBaseCode = GGS_uint (4096U) ;
    }
    break ;
  case GGS_midrange_bit_oriented_op::enum_BSF:
    {
    var_cas_outBaseCode = GGS_uint (5120U) ;
    }
    break ;
  case GGS_midrange_bit_oriented_op::kNotBuilt:
    break ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_getMidRangeBitOrientedOpBaseCode\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                class 'cPtr_midrange_ipic_instruction_FB'                  *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_midrange_ipic_instruction_FB::
cPtr_midrange_ipic_instruction_FB (const GGS_location & argument_0,
                                const GGS_midrange_bit_oriented_op& argument_1,
                                const GGS_midrange_ipic_registerExpression& argument_2,
                                const GGS_uint & argument_3
                                COMMA_LOCATION_ARGS)
:cPtr_midrange_ipic_actualInstruction (argument_0 COMMA_THERE),
mBitOrientedOp (argument_1),
mRegisterDescription (argument_2),
mBitNumber (argument_3) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_midrange_ipic_instruction_FB * GGS_midrange_ipic_instruction_FB::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_FB *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_midrange_ipic_instruction_FB *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_midrange_ipic_instruction_FB::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_midrange_ipic_instruction_FB * ptr = dynamic_cast <const cPtr_midrange_ipic_instruction_FB *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mInstructionLocation.operator_isEqual (ptr->mInstructionLocation).boolValue ()
         && mBitOrientedOp.operator_isEqual (ptr->mBitOrientedOp).boolValue ()
         && mRegisterDescription.operator_isEqual (ptr->mRegisterDescription).boolValue ()
         && mBitNumber.operator_isEqual (ptr->mBitNumber).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_FB::
method_getBaseCode (C_Compiler & inLexique,
                                GGS_uint & var_cas_outBaseCode COMMA_UNUSED_LOCATION_ARGS) const {
  ::routine_getMidRangeBitOrientedOpBaseCode (inLexique,  mBitOrientedOp,  var_cas_outBaseCode COMMA_SOURCE_FILE_AT_LINE (254)) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_FB::
method_displayIPICinstruction (C_Compiler & inLexique,
                                GGS_string& var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioListFileContents.dotAssign_operation (mBitOrientedOp.reader_mnemonic (inLexique COMMA_SOURCE_FILE_AT_LINE (259))) ;
  var_cas_ioListFileContents.appendCString (" ") ;
  var_cas_ioListFileContents.dotAssign_operation (mRegisterDescription.reader_mAssemblyString (inLexique COMMA_SOURCE_FILE_AT_LINE (259))) ;
  var_cas_ioListFileContents.appendCString (", ") ;
  var_cas_ioListFileContents.dotAssign_operation (mBitNumber.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (259))) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_FB::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "->@midrange_ipic_instruction_FB:"
           << mInstructionLocation.reader_description (inIndentation + 1)
           << mBitOrientedOp.reader_description (inIndentation + 1)
           << mRegisterDescription.reader_description (inIndentation + 1)
           << mBitNumber.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_FB::
instanceMessage (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_FB::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_midrange_ipic_instruction_FB (& typeid (cPtr_midrange_ipic_instruction_FB), & typeid (cPtr_midrange_ipic_actualInstruction), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_midrange_ipic_instruction_FB::galgasRTTI (void) const {
  return & gClassInfoFor__midrange_ipic_instruction_FB ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_midrange_ipic_instruction_FB::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_midrange_ipic_instruction_FB (mInstructionLocation, mBitOrientedOp, mRegisterDescription, mBitNumber COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_midrange_ipic_instruction_FB'               *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_instruction_FB ("midrange_ipic_instruction_FB", true, & kTypeDescriptor_GGS_midrange_ipic_actualInstruction) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_FB::
GGS_midrange_ipic_instruction_FB (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_FB::
GGS_midrange_ipic_instruction_FB (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_midrange_ipic_instruction_FB GGS_midrange_ipic_instruction_FB::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_FB result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_midrange_ipic_instruction_FB *> (inPointer) != NULL)
      : (typeid (cPtr_midrange_ipic_instruction_FB) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_midrange_ipic_instruction_FB (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_midrange_ipic_instruction_FB),
                                       inUseKindOfClass,
                                       inPointer->instanceMessage ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_FB GGS_midrange_ipic_instruction_FB::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_location & argument_0,
                 const GGS_midrange_bit_oriented_op& argument_1,
                 const GGS_midrange_ipic_registerExpression& argument_2,
                 const GGS_uint & argument_3
                                COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_FB result ;
  macroMyNew (result.mPointer, cPtr_midrange_ipic_instruction_FB (argument_0,
                                argument_1,
                                argument_2,
                                argument_3 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_bit_oriented_op GGS_midrange_ipic_instruction_FB::
reader_mBitOrientedOp (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_midrange_bit_oriented_op  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_FB *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_instruction_FB *) mPointer)->mBitOrientedOp ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_registerExpression GGS_midrange_ipic_instruction_FB::
reader_mRegisterDescription (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_midrange_ipic_registerExpression  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_FB *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_instruction_FB *) mPointer)->mRegisterDescription ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_uint  GGS_midrange_ipic_instruction_FB::
reader_mBitNumber (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_uint   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_FB *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_instruction_FB *) mPointer)->mBitNumber ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_midrange_ipic_instruction_FB::actualTypeName (void) const {
  return "midrange_ipic_instruction_FB" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__midrange_ipic_instruction_FB ("midrange_ipic_instruction_FB", gClassInfoFor__midrange_ipic_actualInstruction, & kTypeDescriptor_GGS_midrange_ipic_instruction_FB) ;

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_instruction_FB::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_instruction_FB * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_instruction_FB (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_FB GGS_midrange_ipic_instruction_FB::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_FB result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_instruction_FB * p = dynamic_cast <const GGS_midrange_ipic_instruction_FB *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_instruction_FB, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_instruction_FB::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_instruction_FB ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            class 'cPtr_midrange_ipic_instruction_BitTestSkip'             *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_midrange_ipic_instruction_BitTestSkip::
cPtr_midrange_ipic_instruction_BitTestSkip (const GGS_location & argument_0,
                                const GGS_bool& argument_1,
                                const GGS_midrange_ipic_registerExpression& argument_2,
                                const GGS_uint & argument_3
                                COMMA_LOCATION_ARGS)
:cPtr_midrange_ipic_actualInstruction (argument_0 COMMA_THERE),
mSkipIfSet (argument_1),
mRegisterDescription (argument_2),
mBitNumber (argument_3) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_midrange_ipic_instruction_BitTestSkip * GGS_midrange_ipic_instruction_BitTestSkip::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_BitTestSkip *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_midrange_ipic_instruction_BitTestSkip *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_midrange_ipic_instruction_BitTestSkip::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_midrange_ipic_instruction_BitTestSkip * ptr = dynamic_cast <const cPtr_midrange_ipic_instruction_BitTestSkip *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mInstructionLocation.operator_isEqual (ptr->mInstructionLocation).boolValue ()
         && mSkipIfSet.operator_isEqual (ptr->mSkipIfSet).boolValue ()
         && mRegisterDescription.operator_isEqual (ptr->mRegisterDescription).boolValue ()
         && mBitNumber.operator_isEqual (ptr->mBitNumber).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_BitTestSkip::
method_getBaseCode (C_Compiler & /* inLexique */,
                                GGS_uint & var_cas_outBaseCode COMMA_UNUSED_LOCATION_ARGS) const {
  const GGS_bool cond_8570 = mSkipIfSet ;
  if (cond_8570.isBuiltAndTrue ()) {
    var_cas_outBaseCode = GGS_uint (7168U) ;
  }else if (cond_8570.isBuiltAndFalse ()) {
    var_cas_outBaseCode = GGS_uint (6144U) ;
  }
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_BitTestSkip::
method_displayIPICinstruction (C_Compiler & inLexique,
                                GGS_string& var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) const {
  const GGS_bool cond_8781 = mSkipIfSet ;
  if (cond_8781.isBuiltAndTrue ()) {
    var_cas_ioListFileContents.appendCString ("BTFSS") ;
  }else if (cond_8781.isBuiltAndFalse ()) {
    var_cas_ioListFileContents.appendCString ("BTFSC") ;
  }
  var_cas_ioListFileContents.appendCString (" ") ;
  var_cas_ioListFileContents.dotAssign_operation (mRegisterDescription.reader_mAssemblyString (inLexique COMMA_SOURCE_FILE_AT_LINE (286))) ;
  var_cas_ioListFileContents.appendCString (", ") ;
  var_cas_ioListFileContents.dotAssign_operation (mBitNumber.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (286))) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_BitTestSkip::
method_isSkippingInstruction (C_Compiler & /* inLexique */,
                                GGS_bool& var_cas_outIsSkipping COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outIsSkipping = GGS_bool (true) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_BitTestSkip::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "->@midrange_ipic_instruction_BitTestSkip:"
           << mInstructionLocation.reader_description (inIndentation + 1)
           << mSkipIfSet.reader_description (inIndentation + 1)
           << mRegisterDescription.reader_description (inIndentation + 1)
           << mBitNumber.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_BitTestSkip::
instanceMessage (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_BitTestSkip::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_midrange_ipic_instruction_BitTestSkip (& typeid (cPtr_midrange_ipic_instruction_BitTestSkip), & typeid (cPtr_midrange_ipic_actualInstruction), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_midrange_ipic_instruction_BitTestSkip::galgasRTTI (void) const {
  return & gClassInfoFor__midrange_ipic_instruction_BitTestSkip ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_midrange_ipic_instruction_BitTestSkip::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_midrange_ipic_instruction_BitTestSkip (mInstructionLocation, mSkipIfSet, mRegisterDescription, mBitNumber COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         GALGAS class 'GGS_midrange_ipic_instruction_BitTestSkip'          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_instruction_BitTestSkip ("midrange_ipic_instruction_BitTestSkip", true, & kTypeDescriptor_GGS_midrange_ipic_actualInstruction) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_BitTestSkip::
GGS_midrange_ipic_instruction_BitTestSkip (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_BitTestSkip::
GGS_midrange_ipic_instruction_BitTestSkip (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_midrange_ipic_instruction_BitTestSkip GGS_midrange_ipic_instruction_BitTestSkip::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_BitTestSkip result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_midrange_ipic_instruction_BitTestSkip *> (inPointer) != NULL)
      : (typeid (cPtr_midrange_ipic_instruction_BitTestSkip) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_midrange_ipic_instruction_BitTestSkip (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_midrange_ipic_instruction_BitTestSkip),
                                       inUseKindOfClass,
                                       inPointer->instanceMessage ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_BitTestSkip GGS_midrange_ipic_instruction_BitTestSkip::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_location & argument_0,
                 const GGS_bool& argument_1,
                 const GGS_midrange_ipic_registerExpression& argument_2,
                 const GGS_uint & argument_3
                                COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_BitTestSkip result ;
  macroMyNew (result.mPointer, cPtr_midrange_ipic_instruction_BitTestSkip (argument_0,
                                argument_1,
                                argument_2,
                                argument_3 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_midrange_ipic_instruction_BitTestSkip::
reader_mSkipIfSet (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_bool  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_BitTestSkip *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_instruction_BitTestSkip *) mPointer)->mSkipIfSet ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_registerExpression GGS_midrange_ipic_instruction_BitTestSkip::
reader_mRegisterDescription (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_midrange_ipic_registerExpression  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_BitTestSkip *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_instruction_BitTestSkip *) mPointer)->mRegisterDescription ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_uint  GGS_midrange_ipic_instruction_BitTestSkip::
reader_mBitNumber (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_uint   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_BitTestSkip *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_instruction_BitTestSkip *) mPointer)->mBitNumber ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_midrange_ipic_instruction_BitTestSkip::actualTypeName (void) const {
  return "midrange_ipic_instruction_BitTestSkip" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__midrange_ipic_instruction_BitTestSkip ("midrange_ipic_instruction_BitTestSkip", gClassInfoFor__midrange_ipic_actualInstruction, & kTypeDescriptor_GGS_midrange_ipic_instruction_BitTestSkip) ;

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_instruction_BitTestSkip::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_instruction_BitTestSkip * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_instruction_BitTestSkip (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_BitTestSkip GGS_midrange_ipic_instruction_BitTestSkip::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_BitTestSkip result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_instruction_BitTestSkip * p = dynamic_cast <const GGS_midrange_ipic_instruction_BitTestSkip *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_instruction_BitTestSkip, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_instruction_BitTestSkip::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_instruction_BitTestSkip ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Class for 'midrange_call_goto_bit' Enumeration               *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_call_goto_bit ("midrange_call_goto_bit", false, NULL) ;

//---------------------------------------------------------------------------*

bool GGS_midrange_call_goto_bit::
isBuilt (void) const {
  return mValue > kNotBuilt ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_midrange_call_goto_bit::
operator_isEqual (const GGS_midrange_call_goto_bit inOperand) const {
  return GGS_bool (isBuilt () && inOperand.isBuilt (),
                   mValue == inOperand.mValue) ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_midrange_call_goto_bit::
operator_isNotEqual (const GGS_midrange_call_goto_bit inOperand) const {
  return GGS_bool (isBuilt () && inOperand.isBuilt (),
                   mValue != inOperand.mValue) ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_midrange_call_goto_bit::
operator_infOrEqual (const GGS_midrange_call_goto_bit inOperand) const {
  return GGS_bool (isBuilt () && inOperand.isBuilt (),
                   mValue <= inOperand.mValue) ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_midrange_call_goto_bit::
operator_supOrEqual (const GGS_midrange_call_goto_bit inOperand) const {
  return GGS_bool (isBuilt () && inOperand.isBuilt (),
                   mValue >= inOperand.mValue) ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_midrange_call_goto_bit::
operator_strictInf (const GGS_midrange_call_goto_bit inOperand) const {
  return GGS_bool (isBuilt () && inOperand.isBuilt (),
                   mValue < inOperand.mValue) ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_midrange_call_goto_bit::
operator_strictSup (const GGS_midrange_call_goto_bit inOperand) const {
  return GGS_bool (isBuilt () && inOperand.isBuilt (),
                   mValue > inOperand.mValue) ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_midrange_call_goto_bit::
reader_description (const PMSInt32 /* inIndentation */) const {
  C_String s ;
  s << "<enum @midrange_call_goto_bit" ;
  switch (mValue) {
  case enum_clear:
    s << " clear>" ;
    break ;
  case enum_noChange:
    s << " noChange>" ;
    break ;
  case enum_set:
    s << " set>" ;
    break ;
  case kNotBuilt:
    s << " (not built)>" ;
    break ;
  }
  return GGS_string (true, s) ;
}

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_call_goto_bit::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_call_goto_bit * p = NULL ;
    macroMyNew (p, GGS_midrange_call_goto_bit (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_call_goto_bit GGS_midrange_call_goto_bit::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_call_goto_bit result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_call_goto_bit * p = dynamic_cast <const GGS_midrange_call_goto_bit *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_call_goto_bit, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_call_goto_bit::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_call_goto_bit ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                     class 'cPtr_midrange_ipic_JUMP'                       *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_midrange_ipic_JUMP::
cPtr_midrange_ipic_JUMP (const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_midrange_call_goto_bit& argument_2,
                                const GGS_midrange_call_goto_bit& argument_3
                                COMMA_LOCATION_ARGS)
:cPtr_midrange_ipic_actualInstruction (argument_0 COMMA_THERE),
mTargetLabel (argument_1),
mBit11 (argument_2),
mBit12 (argument_3) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_midrange_ipic_JUMP * GGS_midrange_ipic_JUMP::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_JUMP *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_midrange_ipic_JUMP *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_midrange_ipic_JUMP::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_midrange_ipic_JUMP * ptr = dynamic_cast <const cPtr_midrange_ipic_JUMP *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mInstructionLocation.operator_isEqual (ptr->mInstructionLocation).boolValue ()
         && mTargetLabel.operator_isEqual (ptr->mTargetLabel).boolValue ()
         && mBit11.operator_isEqual (ptr->mBit11).boolValue ()
         && mBit12.operator_isEqual (ptr->mBit12).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_JUMP::
method_instructionLength (C_Compiler & inLexique,
                                GGS_uint & var_cas_outLength COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outLength = GGS_uint (1U) ;
  const GGS_bool cond_9608 = (mBit11).operator_isNotEqual (GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_HERE)) ;
  if (cond_9608.isBuiltAndTrue ()) {
    var_cas_outLength.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (316)) ;
  }
  const GGS_bool cond_9699 = (mBit12).operator_isNotEqual (GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_HERE)) ;
  if (cond_9699.isBuiltAndTrue ()) {
    var_cas_outLength.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (319)) ;
  }
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_JUMP::
method_displayIPICinstruction (C_Compiler & /* inLexique */,
                                GGS_string& var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioListFileContents.appendCString ("JUMP ") ;
  var_cas_ioListFileContents.dotAssign_operation (mTargetLabel) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_JUMP::
method_nextInstructionIsReachable (C_Compiler & /* inLexique */,
                                GGS_bool& var_cas_outIsReachable COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outIsReachable = GGS_bool (false) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_JUMP::
method_enterReferencedLabel (C_Compiler & inLexique,
                                GGS_stringset & var_cas_ioReferencedLabelSet COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioReferencedLabelSet.addAssign_operation (mTargetLabel.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (333))) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_JUMP::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "->@midrange_ipic_JUMP:"
           << mInstructionLocation.reader_description (inIndentation + 1)
           << mTargetLabel.reader_description (inIndentation + 1)
           << mBit11.reader_description (inIndentation + 1)
           << mBit12.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_JUMP::
instanceMessage (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_JUMP::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_midrange_ipic_JUMP (& typeid (cPtr_midrange_ipic_JUMP), & typeid (cPtr_midrange_ipic_actualInstruction), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_midrange_ipic_JUMP::galgasRTTI (void) const {
  return & gClassInfoFor__midrange_ipic_JUMP ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_midrange_ipic_JUMP::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_midrange_ipic_JUMP (mInstructionLocation, mTargetLabel, mBit11, mBit12 COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_midrange_ipic_JUMP'                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_JUMP ("midrange_ipic_JUMP", true, & kTypeDescriptor_GGS_midrange_ipic_actualInstruction) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_JUMP::
GGS_midrange_ipic_JUMP (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_JUMP::
GGS_midrange_ipic_JUMP (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_midrange_ipic_JUMP GGS_midrange_ipic_JUMP::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_JUMP result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_midrange_ipic_JUMP *> (inPointer) != NULL)
      : (typeid (cPtr_midrange_ipic_JUMP) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_midrange_ipic_JUMP (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_midrange_ipic_JUMP),
                                       inUseKindOfClass,
                                       inPointer->instanceMessage ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_JUMP GGS_midrange_ipic_JUMP::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_location & argument_0,
                 const GGS_lstring & argument_1,
                 const GGS_midrange_call_goto_bit& argument_2,
                 const GGS_midrange_call_goto_bit& argument_3
                                COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_JUMP result ;
  macroMyNew (result.mPointer, cPtr_midrange_ipic_JUMP (argument_0,
                                argument_1,
                                argument_2,
                                argument_3 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_lstring  GGS_midrange_ipic_JUMP::
reader_mTargetLabel (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_lstring   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_JUMP *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_JUMP *) mPointer)->mTargetLabel ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_call_goto_bit GGS_midrange_ipic_JUMP::
reader_mBit11 (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_midrange_call_goto_bit  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_JUMP *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_JUMP *) mPointer)->mBit11 ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_call_goto_bit GGS_midrange_ipic_JUMP::
reader_mBit12 (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_midrange_call_goto_bit  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_JUMP *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_JUMP *) mPointer)->mBit12 ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_midrange_ipic_JUMP::actualTypeName (void) const {
  return "midrange_ipic_JUMP" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__midrange_ipic_JUMP ("midrange_ipic_JUMP", gClassInfoFor__midrange_ipic_actualInstruction, & kTypeDescriptor_GGS_midrange_ipic_JUMP) ;

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_JUMP::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_JUMP * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_JUMP (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_JUMP GGS_midrange_ipic_JUMP::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_JUMP result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_JUMP * p = dynamic_cast <const GGS_midrange_ipic_JUMP *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_JUMP, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_JUMP::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_JUMP ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                     class 'cPtr_midrange_ipic_GOTO'                       *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_midrange_ipic_GOTO::
cPtr_midrange_ipic_GOTO (const GGS_location & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS)
:cPtr_midrange_ipic_actualInstruction (argument_0 COMMA_THERE),
mTargetLabel (argument_1) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_midrange_ipic_GOTO * GGS_midrange_ipic_GOTO::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_GOTO *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_midrange_ipic_GOTO *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_midrange_ipic_GOTO::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_midrange_ipic_GOTO * ptr = dynamic_cast <const cPtr_midrange_ipic_GOTO *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mInstructionLocation.operator_isEqual (ptr->mInstructionLocation).boolValue ()
         && mTargetLabel.operator_isEqual (ptr->mTargetLabel).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_GOTO::
method_instructionLength (C_Compiler & /* inLexique */,
                                GGS_uint & var_cas_outLength COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outLength = GGS_uint (1U) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_GOTO::
method_displayIPICinstruction (C_Compiler & /* inLexique */,
                                GGS_string& var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioListFileContents.appendCString ("GOTO ") ;
  var_cas_ioListFileContents.dotAssign_operation (mTargetLabel) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_GOTO::
method_nextInstructionIsReachable (C_Compiler & /* inLexique */,
                                GGS_bool& var_cas_outIsReachable COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outIsReachable = GGS_bool (false) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_GOTO::
method_enterReferencedLabel (C_Compiler & inLexique,
                                GGS_stringset & var_cas_ioReferencedLabelSet COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioReferencedLabelSet.addAssign_operation (mTargetLabel.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (357))) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_GOTO::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "->@midrange_ipic_GOTO:"
           << mInstructionLocation.reader_description (inIndentation + 1)
           << mTargetLabel.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_GOTO::
instanceMessage (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_GOTO::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_midrange_ipic_GOTO (& typeid (cPtr_midrange_ipic_GOTO), & typeid (cPtr_midrange_ipic_actualInstruction), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_midrange_ipic_GOTO::galgasRTTI (void) const {
  return & gClassInfoFor__midrange_ipic_GOTO ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_midrange_ipic_GOTO::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_midrange_ipic_GOTO (mInstructionLocation, mTargetLabel COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_midrange_ipic_GOTO'                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_GOTO ("midrange_ipic_GOTO", true, & kTypeDescriptor_GGS_midrange_ipic_actualInstruction) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_GOTO::
GGS_midrange_ipic_GOTO (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_GOTO::
GGS_midrange_ipic_GOTO (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_midrange_ipic_GOTO GGS_midrange_ipic_GOTO::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_GOTO result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_midrange_ipic_GOTO *> (inPointer) != NULL)
      : (typeid (cPtr_midrange_ipic_GOTO) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_midrange_ipic_GOTO (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_midrange_ipic_GOTO),
                                       inUseKindOfClass,
                                       inPointer->instanceMessage ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_GOTO GGS_midrange_ipic_GOTO::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_location & argument_0,
                 const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_GOTO result ;
  macroMyNew (result.mPointer, cPtr_midrange_ipic_GOTO (argument_0,
                                argument_1 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_lstring  GGS_midrange_ipic_GOTO::
reader_mTargetLabel (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_lstring   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_GOTO *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_GOTO *) mPointer)->mTargetLabel ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_midrange_ipic_GOTO::actualTypeName (void) const {
  return "midrange_ipic_GOTO" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__midrange_ipic_GOTO ("midrange_ipic_GOTO", gClassInfoFor__midrange_ipic_actualInstruction, & kTypeDescriptor_GGS_midrange_ipic_GOTO) ;

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_GOTO::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_GOTO * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_GOTO (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_GOTO GGS_midrange_ipic_GOTO::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_GOTO result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_GOTO * p = dynamic_cast <const GGS_midrange_ipic_GOTO *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_GOTO, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_GOTO::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_GOTO ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                     class 'cPtr_midrange_ipic_CALL'                       *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_midrange_ipic_CALL::
cPtr_midrange_ipic_CALL (const GGS_location & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS)
:cPtr_midrange_ipic_actualInstruction (argument_0 COMMA_THERE),
mTargetLabel (argument_1) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_midrange_ipic_CALL * GGS_midrange_ipic_CALL::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_CALL *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_midrange_ipic_CALL *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_midrange_ipic_CALL::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_midrange_ipic_CALL * ptr = dynamic_cast <const cPtr_midrange_ipic_CALL *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mInstructionLocation.operator_isEqual (ptr->mInstructionLocation).boolValue ()
         && mTargetLabel.operator_isEqual (ptr->mTargetLabel).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_CALL::
method_displayIPICinstruction (C_Compiler & /* inLexique */,
                                GGS_string& var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioListFileContents.appendCString ("CALL ") ;
  var_cas_ioListFileContents.dotAssign_operation (mTargetLabel) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_CALL::
method_enterReferencedLabel (C_Compiler & inLexique,
                                GGS_stringset & var_cas_ioReferencedLabelSet COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioReferencedLabelSet.addAssign_operation (mTargetLabel.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (372))) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_CALL::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "->@midrange_ipic_CALL:"
           << mInstructionLocation.reader_description (inIndentation + 1)
           << mTargetLabel.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_CALL::
instanceMessage (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_CALL::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_midrange_ipic_CALL (& typeid (cPtr_midrange_ipic_CALL), & typeid (cPtr_midrange_ipic_actualInstruction), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_midrange_ipic_CALL::galgasRTTI (void) const {
  return & gClassInfoFor__midrange_ipic_CALL ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_midrange_ipic_CALL::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_midrange_ipic_CALL (mInstructionLocation, mTargetLabel COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_midrange_ipic_CALL'                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_CALL ("midrange_ipic_CALL", true, & kTypeDescriptor_GGS_midrange_ipic_actualInstruction) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_CALL::
GGS_midrange_ipic_CALL (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_CALL::
GGS_midrange_ipic_CALL (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_midrange_ipic_CALL GGS_midrange_ipic_CALL::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_CALL result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_midrange_ipic_CALL *> (inPointer) != NULL)
      : (typeid (cPtr_midrange_ipic_CALL) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_midrange_ipic_CALL (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_midrange_ipic_CALL),
                                       inUseKindOfClass,
                                       inPointer->instanceMessage ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_CALL GGS_midrange_ipic_CALL::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_location & argument_0,
                 const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_CALL result ;
  macroMyNew (result.mPointer, cPtr_midrange_ipic_CALL (argument_0,
                                argument_1 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_lstring  GGS_midrange_ipic_CALL::
reader_mTargetLabel (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_lstring   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_CALL *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_CALL *) mPointer)->mTargetLabel ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_midrange_ipic_CALL::actualTypeName (void) const {
  return "midrange_ipic_CALL" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__midrange_ipic_CALL ("midrange_ipic_CALL", gClassInfoFor__midrange_ipic_actualInstruction, & kTypeDescriptor_GGS_midrange_ipic_CALL) ;

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_CALL::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_CALL * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_CALL (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_CALL GGS_midrange_ipic_CALL::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_CALL result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_CALL * p = dynamic_cast <const GGS_midrange_ipic_CALL *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_CALL, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_CALL::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_CALL ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      class 'cPtr_midrange_ipic_JSR'                       *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_midrange_ipic_JSR::
cPtr_midrange_ipic_JSR (const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_midrange_call_goto_bit& argument_2,
                                const GGS_midrange_call_goto_bit& argument_3
                                COMMA_LOCATION_ARGS)
:cPtr_midrange_ipic_actualInstruction (argument_0 COMMA_THERE),
mTargetLabel (argument_1),
mBit11 (argument_2),
mBit12 (argument_3) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_midrange_ipic_JSR * GGS_midrange_ipic_JSR::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_JSR *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_midrange_ipic_JSR *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_midrange_ipic_JSR::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_midrange_ipic_JSR * ptr = dynamic_cast <const cPtr_midrange_ipic_JSR *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mInstructionLocation.operator_isEqual (ptr->mInstructionLocation).boolValue ()
         && mTargetLabel.operator_isEqual (ptr->mTargetLabel).boolValue ()
         && mBit11.operator_isEqual (ptr->mBit11).boolValue ()
         && mBit12.operator_isEqual (ptr->mBit12).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_JSR::
method_instructionLength (C_Compiler & inLexique,
                                GGS_uint & var_cas_outLength COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outLength = GGS_uint (1U) ;
  const GGS_bool cond_11609 = (mBit11).operator_isNotEqual (GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_HERE)) ;
  if (cond_11609.isBuiltAndTrue ()) {
    var_cas_outLength = var_cas_outLength.add_operation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (387)) ;
  }
  const GGS_bool cond_11715 = (mBit12).operator_isNotEqual (GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_HERE)) ;
  if (cond_11715.isBuiltAndTrue ()) {
    var_cas_outLength = var_cas_outLength.add_operation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (390)) ;
  }
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_JSR::
method_displayIPICinstruction (C_Compiler & /* inLexique */,
                                GGS_string& var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioListFileContents.appendCString ("CALL ") ;
  var_cas_ioListFileContents.dotAssign_operation (mTargetLabel) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_JSR::
method_enterReferencedLabel (C_Compiler & inLexique,
                                GGS_stringset & var_cas_ioReferencedLabelSet COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioReferencedLabelSet.addAssign_operation (mTargetLabel.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (400))) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_JSR::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "->@midrange_ipic_JSR:"
           << mInstructionLocation.reader_description (inIndentation + 1)
           << mTargetLabel.reader_description (inIndentation + 1)
           << mBit11.reader_description (inIndentation + 1)
           << mBit12.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_JSR::
instanceMessage (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_JSR::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_midrange_ipic_JSR (& typeid (cPtr_midrange_ipic_JSR), & typeid (cPtr_midrange_ipic_actualInstruction), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_midrange_ipic_JSR::galgasRTTI (void) const {
  return & gClassInfoFor__midrange_ipic_JSR ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_midrange_ipic_JSR::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_midrange_ipic_JSR (mInstructionLocation, mTargetLabel, mBit11, mBit12 COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_midrange_ipic_JSR'                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_JSR ("midrange_ipic_JSR", true, & kTypeDescriptor_GGS_midrange_ipic_actualInstruction) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_JSR::
GGS_midrange_ipic_JSR (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_JSR::
GGS_midrange_ipic_JSR (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_midrange_ipic_JSR GGS_midrange_ipic_JSR::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_JSR result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_midrange_ipic_JSR *> (inPointer) != NULL)
      : (typeid (cPtr_midrange_ipic_JSR) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_midrange_ipic_JSR (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_midrange_ipic_JSR),
                                       inUseKindOfClass,
                                       inPointer->instanceMessage ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_JSR GGS_midrange_ipic_JSR::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_location & argument_0,
                 const GGS_lstring & argument_1,
                 const GGS_midrange_call_goto_bit& argument_2,
                 const GGS_midrange_call_goto_bit& argument_3
                                COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_JSR result ;
  macroMyNew (result.mPointer, cPtr_midrange_ipic_JSR (argument_0,
                                argument_1,
                                argument_2,
                                argument_3 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_lstring  GGS_midrange_ipic_JSR::
reader_mTargetLabel (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_lstring   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_JSR *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_JSR *) mPointer)->mTargetLabel ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_call_goto_bit GGS_midrange_ipic_JSR::
reader_mBit11 (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_midrange_call_goto_bit  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_JSR *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_JSR *) mPointer)->mBit11 ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_call_goto_bit GGS_midrange_ipic_JSR::
reader_mBit12 (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_midrange_call_goto_bit  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_JSR *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_JSR *) mPointer)->mBit12 ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_midrange_ipic_JSR::actualTypeName (void) const {
  return "midrange_ipic_JSR" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__midrange_ipic_JSR ("midrange_ipic_JSR", gClassInfoFor__midrange_ipic_actualInstruction, & kTypeDescriptor_GGS_midrange_ipic_JSR) ;

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_JSR::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_JSR * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_JSR (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_JSR GGS_midrange_ipic_JSR::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_JSR result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_JSR * p = dynamic_cast <const GGS_midrange_ipic_JSR *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_JSR, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_JSR::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_JSR ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              class 'cPtr_midrange_ipic_instruction_CLRWDT'                *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_midrange_ipic_instruction_CLRWDT::
cPtr_midrange_ipic_instruction_CLRWDT (const GGS_location & argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_midrange_ipic_actualInstruction (argument_0 COMMA_THERE) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_midrange_ipic_instruction_CLRWDT * GGS_midrange_ipic_instruction_CLRWDT::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_CLRWDT *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_midrange_ipic_instruction_CLRWDT *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_midrange_ipic_instruction_CLRWDT::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_midrange_ipic_instruction_CLRWDT * ptr = dynamic_cast <const cPtr_midrange_ipic_instruction_CLRWDT *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mInstructionLocation.operator_isEqual (ptr->mInstructionLocation).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_CLRWDT::
method_displayIPICinstruction (C_Compiler & /* inLexique */,
                                GGS_string& var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioListFileContents.appendCString ("CLRWDT") ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_CLRWDT::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "->@midrange_ipic_instruction_CLRWDT:"
           << mInstructionLocation.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_CLRWDT::
instanceMessage (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_CLRWDT::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_midrange_ipic_instruction_CLRWDT (& typeid (cPtr_midrange_ipic_instruction_CLRWDT), & typeid (cPtr_midrange_ipic_actualInstruction), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_midrange_ipic_instruction_CLRWDT::galgasRTTI (void) const {
  return & gClassInfoFor__midrange_ipic_instruction_CLRWDT ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_midrange_ipic_instruction_CLRWDT::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_midrange_ipic_instruction_CLRWDT (mInstructionLocation COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_midrange_ipic_instruction_CLRWDT'             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_instruction_CLRWDT ("midrange_ipic_instruction_CLRWDT", true, & kTypeDescriptor_GGS_midrange_ipic_actualInstruction) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_CLRWDT::
GGS_midrange_ipic_instruction_CLRWDT (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_CLRWDT::
GGS_midrange_ipic_instruction_CLRWDT (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_midrange_ipic_instruction_CLRWDT GGS_midrange_ipic_instruction_CLRWDT::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_CLRWDT result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_midrange_ipic_instruction_CLRWDT *> (inPointer) != NULL)
      : (typeid (cPtr_midrange_ipic_instruction_CLRWDT) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_midrange_ipic_instruction_CLRWDT (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_midrange_ipic_instruction_CLRWDT),
                                       inUseKindOfClass,
                                       inPointer->instanceMessage ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_CLRWDT GGS_midrange_ipic_instruction_CLRWDT::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_CLRWDT result ;
  macroMyNew (result.mPointer, cPtr_midrange_ipic_instruction_CLRWDT (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_midrange_ipic_instruction_CLRWDT::actualTypeName (void) const {
  return "midrange_ipic_instruction_CLRWDT" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__midrange_ipic_instruction_CLRWDT ("midrange_ipic_instruction_CLRWDT", gClassInfoFor__midrange_ipic_actualInstruction, & kTypeDescriptor_GGS_midrange_ipic_instruction_CLRWDT) ;

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_instruction_CLRWDT::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_instruction_CLRWDT * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_instruction_CLRWDT (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_CLRWDT GGS_midrange_ipic_instruction_CLRWDT::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_CLRWDT result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_instruction_CLRWDT * p = dynamic_cast <const GGS_midrange_ipic_instruction_CLRWDT *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_instruction_CLRWDT, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_instruction_CLRWDT::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_instruction_CLRWDT ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//               class 'cPtr_midrange_ipic_instruction_CLRW'                 *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_midrange_ipic_instruction_CLRW::
cPtr_midrange_ipic_instruction_CLRW (const GGS_location & argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_midrange_ipic_actualInstruction (argument_0 COMMA_THERE) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_midrange_ipic_instruction_CLRW * GGS_midrange_ipic_instruction_CLRW::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_CLRW *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_midrange_ipic_instruction_CLRW *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_midrange_ipic_instruction_CLRW::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_midrange_ipic_instruction_CLRW * ptr = dynamic_cast <const cPtr_midrange_ipic_instruction_CLRW *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mInstructionLocation.operator_isEqual (ptr->mInstructionLocation).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_CLRW::
method_displayIPICinstruction (C_Compiler & /* inLexique */,
                                GGS_string& var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioListFileContents.appendCString ("CLRW") ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_CLRW::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "->@midrange_ipic_instruction_CLRW:"
           << mInstructionLocation.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_CLRW::
instanceMessage (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_CLRW::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_midrange_ipic_instruction_CLRW (& typeid (cPtr_midrange_ipic_instruction_CLRW), & typeid (cPtr_midrange_ipic_actualInstruction), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_midrange_ipic_instruction_CLRW::galgasRTTI (void) const {
  return & gClassInfoFor__midrange_ipic_instruction_CLRW ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_midrange_ipic_instruction_CLRW::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_midrange_ipic_instruction_CLRW (mInstructionLocation COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_midrange_ipic_instruction_CLRW'              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_instruction_CLRW ("midrange_ipic_instruction_CLRW", true, & kTypeDescriptor_GGS_midrange_ipic_actualInstruction) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_CLRW::
GGS_midrange_ipic_instruction_CLRW (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_CLRW::
GGS_midrange_ipic_instruction_CLRW (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_midrange_ipic_instruction_CLRW GGS_midrange_ipic_instruction_CLRW::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_CLRW result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_midrange_ipic_instruction_CLRW *> (inPointer) != NULL)
      : (typeid (cPtr_midrange_ipic_instruction_CLRW) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_midrange_ipic_instruction_CLRW (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_midrange_ipic_instruction_CLRW),
                                       inUseKindOfClass,
                                       inPointer->instanceMessage ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_CLRW GGS_midrange_ipic_instruction_CLRW::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_CLRW result ;
  macroMyNew (result.mPointer, cPtr_midrange_ipic_instruction_CLRW (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_midrange_ipic_instruction_CLRW::actualTypeName (void) const {
  return "midrange_ipic_instruction_CLRW" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__midrange_ipic_instruction_CLRW ("midrange_ipic_instruction_CLRW", gClassInfoFor__midrange_ipic_actualInstruction, & kTypeDescriptor_GGS_midrange_ipic_instruction_CLRW) ;

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_instruction_CLRW::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_instruction_CLRW * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_instruction_CLRW (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_CLRW GGS_midrange_ipic_instruction_CLRW::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_CLRW result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_instruction_CLRW * p = dynamic_cast <const GGS_midrange_ipic_instruction_CLRW *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_instruction_CLRW, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_instruction_CLRW::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_instruction_CLRW ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                class 'cPtr_midrange_ipic_instruction_NOP'                 *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_midrange_ipic_instruction_NOP::
cPtr_midrange_ipic_instruction_NOP (const GGS_location & argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_midrange_ipic_actualInstruction (argument_0 COMMA_THERE) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_midrange_ipic_instruction_NOP * GGS_midrange_ipic_instruction_NOP::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_NOP *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_midrange_ipic_instruction_NOP *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_midrange_ipic_instruction_NOP::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_midrange_ipic_instruction_NOP * ptr = dynamic_cast <const cPtr_midrange_ipic_instruction_NOP *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mInstructionLocation.operator_isEqual (ptr->mInstructionLocation).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_NOP::
method_displayIPICinstruction (C_Compiler & /* inLexique */,
                                GGS_string& var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioListFileContents.appendCString ("NOP") ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_NOP::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "->@midrange_ipic_instruction_NOP:"
           << mInstructionLocation.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_NOP::
instanceMessage (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_NOP::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_midrange_ipic_instruction_NOP (& typeid (cPtr_midrange_ipic_instruction_NOP), & typeid (cPtr_midrange_ipic_actualInstruction), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_midrange_ipic_instruction_NOP::galgasRTTI (void) const {
  return & gClassInfoFor__midrange_ipic_instruction_NOP ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_midrange_ipic_instruction_NOP::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_midrange_ipic_instruction_NOP (mInstructionLocation COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_midrange_ipic_instruction_NOP'              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_instruction_NOP ("midrange_ipic_instruction_NOP", true, & kTypeDescriptor_GGS_midrange_ipic_actualInstruction) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_NOP::
GGS_midrange_ipic_instruction_NOP (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_NOP::
GGS_midrange_ipic_instruction_NOP (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_midrange_ipic_instruction_NOP GGS_midrange_ipic_instruction_NOP::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_NOP result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_midrange_ipic_instruction_NOP *> (inPointer) != NULL)
      : (typeid (cPtr_midrange_ipic_instruction_NOP) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_midrange_ipic_instruction_NOP (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_midrange_ipic_instruction_NOP),
                                       inUseKindOfClass,
                                       inPointer->instanceMessage ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_NOP GGS_midrange_ipic_instruction_NOP::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_NOP result ;
  macroMyNew (result.mPointer, cPtr_midrange_ipic_instruction_NOP (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_midrange_ipic_instruction_NOP::actualTypeName (void) const {
  return "midrange_ipic_instruction_NOP" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__midrange_ipic_instruction_NOP ("midrange_ipic_instruction_NOP", gClassInfoFor__midrange_ipic_actualInstruction, & kTypeDescriptor_GGS_midrange_ipic_instruction_NOP) ;

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_instruction_NOP::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_instruction_NOP * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_instruction_NOP (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_NOP GGS_midrange_ipic_instruction_NOP::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_NOP result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_instruction_NOP * p = dynamic_cast <const GGS_midrange_ipic_instruction_NOP *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_instruction_NOP, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_instruction_NOP::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_instruction_NOP ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              class 'cPtr_midrange_ipic_instruction_RETURN'                *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_midrange_ipic_instruction_RETURN::
cPtr_midrange_ipic_instruction_RETURN (const GGS_location & argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_midrange_ipic_actualInstruction (argument_0 COMMA_THERE) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_midrange_ipic_instruction_RETURN * GGS_midrange_ipic_instruction_RETURN::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_RETURN *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_midrange_ipic_instruction_RETURN *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_midrange_ipic_instruction_RETURN::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_midrange_ipic_instruction_RETURN * ptr = dynamic_cast <const cPtr_midrange_ipic_instruction_RETURN *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mInstructionLocation.operator_isEqual (ptr->mInstructionLocation).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_RETURN::
method_displayIPICinstruction (C_Compiler & /* inLexique */,
                                GGS_string& var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioListFileContents.appendCString ("RETURN") ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_RETURN::
method_nextInstructionIsReachable (C_Compiler & /* inLexique */,
                                GGS_bool& var_cas_outIsReachable COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outIsReachable = GGS_bool (false) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_RETURN::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "->@midrange_ipic_instruction_RETURN:"
           << mInstructionLocation.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_RETURN::
instanceMessage (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_RETURN::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_midrange_ipic_instruction_RETURN (& typeid (cPtr_midrange_ipic_instruction_RETURN), & typeid (cPtr_midrange_ipic_actualInstruction), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_midrange_ipic_instruction_RETURN::galgasRTTI (void) const {
  return & gClassInfoFor__midrange_ipic_instruction_RETURN ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_midrange_ipic_instruction_RETURN::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_midrange_ipic_instruction_RETURN (mInstructionLocation COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_midrange_ipic_instruction_RETURN'             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_instruction_RETURN ("midrange_ipic_instruction_RETURN", true, & kTypeDescriptor_GGS_midrange_ipic_actualInstruction) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_RETURN::
GGS_midrange_ipic_instruction_RETURN (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_RETURN::
GGS_midrange_ipic_instruction_RETURN (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_midrange_ipic_instruction_RETURN GGS_midrange_ipic_instruction_RETURN::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_RETURN result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_midrange_ipic_instruction_RETURN *> (inPointer) != NULL)
      : (typeid (cPtr_midrange_ipic_instruction_RETURN) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_midrange_ipic_instruction_RETURN (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_midrange_ipic_instruction_RETURN),
                                       inUseKindOfClass,
                                       inPointer->instanceMessage ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_RETURN GGS_midrange_ipic_instruction_RETURN::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_RETURN result ;
  macroMyNew (result.mPointer, cPtr_midrange_ipic_instruction_RETURN (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_midrange_ipic_instruction_RETURN::actualTypeName (void) const {
  return "midrange_ipic_instruction_RETURN" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__midrange_ipic_instruction_RETURN ("midrange_ipic_instruction_RETURN", gClassInfoFor__midrange_ipic_actualInstruction, & kTypeDescriptor_GGS_midrange_ipic_instruction_RETURN) ;

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_instruction_RETURN::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_instruction_RETURN * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_instruction_RETURN (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_RETURN GGS_midrange_ipic_instruction_RETURN::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_RETURN result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_instruction_RETURN * p = dynamic_cast <const GGS_midrange_ipic_instruction_RETURN *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_instruction_RETURN, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_instruction_RETURN::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_instruction_RETURN ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              class 'cPtr_midrange_ipic_instruction_RETFIE'                *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_midrange_ipic_instruction_RETFIE::
cPtr_midrange_ipic_instruction_RETFIE (const GGS_location & argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_midrange_ipic_actualInstruction (argument_0 COMMA_THERE) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_midrange_ipic_instruction_RETFIE * GGS_midrange_ipic_instruction_RETFIE::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_RETFIE *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_midrange_ipic_instruction_RETFIE *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_midrange_ipic_instruction_RETFIE::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_midrange_ipic_instruction_RETFIE * ptr = dynamic_cast <const cPtr_midrange_ipic_instruction_RETFIE *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mInstructionLocation.operator_isEqual (ptr->mInstructionLocation).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_RETFIE::
method_displayIPICinstruction (C_Compiler & /* inLexique */,
                                GGS_string& var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioListFileContents.appendCString ("RETFIE") ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_RETFIE::
method_nextInstructionIsReachable (C_Compiler & /* inLexique */,
                                GGS_bool& var_cas_outIsReachable COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outIsReachable = GGS_bool (false) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_RETFIE::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "->@midrange_ipic_instruction_RETFIE:"
           << mInstructionLocation.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_RETFIE::
instanceMessage (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_RETFIE::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_midrange_ipic_instruction_RETFIE (& typeid (cPtr_midrange_ipic_instruction_RETFIE), & typeid (cPtr_midrange_ipic_actualInstruction), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_midrange_ipic_instruction_RETFIE::galgasRTTI (void) const {
  return & gClassInfoFor__midrange_ipic_instruction_RETFIE ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_midrange_ipic_instruction_RETFIE::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_midrange_ipic_instruction_RETFIE (mInstructionLocation COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_midrange_ipic_instruction_RETFIE'             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_instruction_RETFIE ("midrange_ipic_instruction_RETFIE", true, & kTypeDescriptor_GGS_midrange_ipic_actualInstruction) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_RETFIE::
GGS_midrange_ipic_instruction_RETFIE (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_RETFIE::
GGS_midrange_ipic_instruction_RETFIE (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_midrange_ipic_instruction_RETFIE GGS_midrange_ipic_instruction_RETFIE::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_RETFIE result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_midrange_ipic_instruction_RETFIE *> (inPointer) != NULL)
      : (typeid (cPtr_midrange_ipic_instruction_RETFIE) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_midrange_ipic_instruction_RETFIE (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_midrange_ipic_instruction_RETFIE),
                                       inUseKindOfClass,
                                       inPointer->instanceMessage ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_RETFIE GGS_midrange_ipic_instruction_RETFIE::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_RETFIE result ;
  macroMyNew (result.mPointer, cPtr_midrange_ipic_instruction_RETFIE (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_midrange_ipic_instruction_RETFIE::actualTypeName (void) const {
  return "midrange_ipic_instruction_RETFIE" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__midrange_ipic_instruction_RETFIE ("midrange_ipic_instruction_RETFIE", gClassInfoFor__midrange_ipic_actualInstruction, & kTypeDescriptor_GGS_midrange_ipic_instruction_RETFIE) ;

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_instruction_RETFIE::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_instruction_RETFIE * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_instruction_RETFIE (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_RETFIE GGS_midrange_ipic_instruction_RETFIE::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_RETFIE result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_instruction_RETFIE * p = dynamic_cast <const GGS_midrange_ipic_instruction_RETFIE *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_instruction_RETFIE, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_instruction_RETFIE::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_instruction_RETFIE ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//               class 'cPtr_midrange_ipic_instruction_SLEEP'                *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_midrange_ipic_instruction_SLEEP::
cPtr_midrange_ipic_instruction_SLEEP (const GGS_location & argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_midrange_ipic_actualInstruction (argument_0 COMMA_THERE) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_midrange_ipic_instruction_SLEEP * GGS_midrange_ipic_instruction_SLEEP::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_SLEEP *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_midrange_ipic_instruction_SLEEP *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_midrange_ipic_instruction_SLEEP::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_midrange_ipic_instruction_SLEEP * ptr = dynamic_cast <const cPtr_midrange_ipic_instruction_SLEEP *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mInstructionLocation.operator_isEqual (ptr->mInstructionLocation).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_SLEEP::
method_displayIPICinstruction (C_Compiler & /* inLexique */,
                                GGS_string& var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioListFileContents.appendCString ("SLEEP") ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_SLEEP::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "->@midrange_ipic_instruction_SLEEP:"
           << mInstructionLocation.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_SLEEP::
instanceMessage (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_SLEEP::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_midrange_ipic_instruction_SLEEP (& typeid (cPtr_midrange_ipic_instruction_SLEEP), & typeid (cPtr_midrange_ipic_actualInstruction), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_midrange_ipic_instruction_SLEEP::galgasRTTI (void) const {
  return & gClassInfoFor__midrange_ipic_instruction_SLEEP ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_midrange_ipic_instruction_SLEEP::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_midrange_ipic_instruction_SLEEP (mInstructionLocation COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_midrange_ipic_instruction_SLEEP'             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_instruction_SLEEP ("midrange_ipic_instruction_SLEEP", true, & kTypeDescriptor_GGS_midrange_ipic_actualInstruction) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_SLEEP::
GGS_midrange_ipic_instruction_SLEEP (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_SLEEP::
GGS_midrange_ipic_instruction_SLEEP (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_midrange_ipic_instruction_SLEEP GGS_midrange_ipic_instruction_SLEEP::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_SLEEP result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_midrange_ipic_instruction_SLEEP *> (inPointer) != NULL)
      : (typeid (cPtr_midrange_ipic_instruction_SLEEP) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_midrange_ipic_instruction_SLEEP (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_midrange_ipic_instruction_SLEEP),
                                       inUseKindOfClass,
                                       inPointer->instanceMessage ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_SLEEP GGS_midrange_ipic_instruction_SLEEP::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_SLEEP result ;
  macroMyNew (result.mPointer, cPtr_midrange_ipic_instruction_SLEEP (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_midrange_ipic_instruction_SLEEP::actualTypeName (void) const {
  return "midrange_ipic_instruction_SLEEP" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__midrange_ipic_instruction_SLEEP ("midrange_ipic_instruction_SLEEP", gClassInfoFor__midrange_ipic_actualInstruction, & kTypeDescriptor_GGS_midrange_ipic_instruction_SLEEP) ;

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_instruction_SLEEP::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_instruction_SLEEP * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_instruction_SLEEP (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_SLEEP GGS_midrange_ipic_instruction_SLEEP::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_SLEEP result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_instruction_SLEEP * p = dynamic_cast <const GGS_midrange_ipic_instruction_SLEEP *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_instruction_SLEEP, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_instruction_SLEEP::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_instruction_SLEEP ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of routine "getMidRangeLiteralInstructionBaseCode"      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_getMidRangeLiteralInstructionBaseCode (C_Compiler &,
                                const GGS_midrange_literal_instruction_opcode  var_cas_inInstruction,
                                GGS_uint  & var_cas_outBaseCode COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_getMidRangeLiteralInstructionBaseCode at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  switch (var_cas_inInstruction.enumValue ()) {
  case GGS_midrange_literal_instruction_opcode::enum_ADDLW:
    {
    var_cas_outBaseCode = GGS_uint (15872U) ;
    }
    break ;
  case GGS_midrange_literal_instruction_opcode::enum_ANDLW:
    {
    var_cas_outBaseCode = GGS_uint (14592U) ;
    }
    break ;
  case GGS_midrange_literal_instruction_opcode::enum_IORLW:
    {
    var_cas_outBaseCode = GGS_uint (14336U) ;
    }
    break ;
  case GGS_midrange_literal_instruction_opcode::enum_MOVLW:
    {
    var_cas_outBaseCode = GGS_uint (12288U) ;
    }
    break ;
  case GGS_midrange_literal_instruction_opcode::enum_RETLW:
    {
    var_cas_outBaseCode = GGS_uint (13312U) ;
    }
    break ;
  case GGS_midrange_literal_instruction_opcode::enum_SUBLW:
    {
    var_cas_outBaseCode = GGS_uint (15360U) ;
    }
    break ;
  case GGS_midrange_literal_instruction_opcode::enum_XORLW:
    {
    var_cas_outBaseCode = GGS_uint (14848U) ;
    }
    break ;
  case GGS_midrange_literal_instruction_opcode::kNotBuilt:
    break ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_getMidRangeLiteralInstructionBaseCode\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         class 'cPtr_midrange_ipic_instruction_literalOperation'           *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_midrange_ipic_instruction_literalOperation::
cPtr_midrange_ipic_instruction_literalOperation (const GGS_location & argument_0,
                                const GGS_midrange_literal_instruction_opcode& argument_1,
                                const GGS_uint & argument_2
                                COMMA_LOCATION_ARGS)
:cPtr_midrange_ipic_actualInstruction (argument_0 COMMA_THERE),
mLiteralInstruction (argument_1),
mLiteralValue (argument_2) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_midrange_ipic_instruction_literalOperation * GGS_midrange_ipic_instruction_literalOperation::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_literalOperation *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_midrange_ipic_instruction_literalOperation *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_midrange_ipic_instruction_literalOperation::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_midrange_ipic_instruction_literalOperation * ptr = dynamic_cast <const cPtr_midrange_ipic_instruction_literalOperation *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mInstructionLocation.operator_isEqual (ptr->mInstructionLocation).boolValue ()
         && mLiteralInstruction.operator_isEqual (ptr->mLiteralInstruction).boolValue ()
         && mLiteralValue.operator_isEqual (ptr->mLiteralValue).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_literalOperation::
method_getBaseCode (C_Compiler & inLexique,
                                GGS_uint & var_cas_outBaseCode COMMA_UNUSED_LOCATION_ARGS) const {
  ::routine_getMidRangeLiteralInstructionBaseCode (inLexique,  mLiteralInstruction,  var_cas_outBaseCode COMMA_SOURCE_FILE_AT_LINE (493)) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_literalOperation::
method_displayIPICinstruction (C_Compiler & inLexique,
                                GGS_string& var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioListFileContents.dotAssign_operation (mLiteralInstruction.reader_mnemonic (inLexique COMMA_SOURCE_FILE_AT_LINE (498))) ;
  var_cas_ioListFileContents.appendCString (" ") ;
  var_cas_ioListFileContents.dotAssign_operation (mLiteralValue.reader_hexString (inLexique COMMA_SOURCE_FILE_AT_LINE (498))) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_literalOperation::
method_nextInstructionIsReachable (C_Compiler & inLexique,
                                GGS_bool& var_cas_outIsReachable COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outIsReachable = (mLiteralInstruction).operator_isNotEqual (GGS_midrange_literal_instruction_opcode::constructor_RETLW (inLexique COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_literalOperation::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "->@midrange_ipic_instruction_literalOperation:"
           << mInstructionLocation.reader_description (inIndentation + 1)
           << mLiteralInstruction.reader_description (inIndentation + 1)
           << mLiteralValue.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_literalOperation::
instanceMessage (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_literalOperation::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_midrange_ipic_instruction_literalOperation (& typeid (cPtr_midrange_ipic_instruction_literalOperation), & typeid (cPtr_midrange_ipic_actualInstruction), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_midrange_ipic_instruction_literalOperation::galgasRTTI (void) const {
  return & gClassInfoFor__midrange_ipic_instruction_literalOperation ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_midrange_ipic_instruction_literalOperation::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_midrange_ipic_instruction_literalOperation (mInstructionLocation, mLiteralInstruction, mLiteralValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      GALGAS class 'GGS_midrange_ipic_instruction_literalOperation'        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_instruction_literalOperation ("midrange_ipic_instruction_literalOperation", true, & kTypeDescriptor_GGS_midrange_ipic_actualInstruction) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_literalOperation::
GGS_midrange_ipic_instruction_literalOperation (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_literalOperation::
GGS_midrange_ipic_instruction_literalOperation (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_midrange_ipic_instruction_literalOperation GGS_midrange_ipic_instruction_literalOperation::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_literalOperation result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_midrange_ipic_instruction_literalOperation *> (inPointer) != NULL)
      : (typeid (cPtr_midrange_ipic_instruction_literalOperation) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_midrange_ipic_instruction_literalOperation (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_midrange_ipic_instruction_literalOperation),
                                       inUseKindOfClass,
                                       inPointer->instanceMessage ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_literalOperation GGS_midrange_ipic_instruction_literalOperation::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_location & argument_0,
                 const GGS_midrange_literal_instruction_opcode& argument_1,
                 const GGS_uint & argument_2
                                COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_literalOperation result ;
  macroMyNew (result.mPointer, cPtr_midrange_ipic_instruction_literalOperation (argument_0,
                                argument_1,
                                argument_2 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_literal_instruction_opcode GGS_midrange_ipic_instruction_literalOperation::
reader_mLiteralInstruction (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_midrange_literal_instruction_opcode  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_literalOperation *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_instruction_literalOperation *) mPointer)->mLiteralInstruction ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_uint  GGS_midrange_ipic_instruction_literalOperation::
reader_mLiteralValue (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_uint   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_literalOperation *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_instruction_literalOperation *) mPointer)->mLiteralValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_midrange_ipic_instruction_literalOperation::actualTypeName (void) const {
  return "midrange_ipic_instruction_literalOperation" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__midrange_ipic_instruction_literalOperation ("midrange_ipic_instruction_literalOperation", gClassInfoFor__midrange_ipic_actualInstruction, & kTypeDescriptor_GGS_midrange_ipic_instruction_literalOperation) ;

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_instruction_literalOperation::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_instruction_literalOperation * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_instruction_literalOperation (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_literalOperation GGS_midrange_ipic_instruction_literalOperation::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_literalOperation result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_instruction_literalOperation * p = dynamic_cast <const GGS_midrange_ipic_instruction_literalOperation *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_instruction_literalOperation, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_instruction_literalOperation::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_instruction_literalOperation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//               class 'cPtr_midrange_ipic_instruction_MNOP'                 *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_midrange_ipic_instruction_MNOP::
cPtr_midrange_ipic_instruction_MNOP (const GGS_location & argument_0,
                                const GGS_luint & argument_1
                                COMMA_LOCATION_ARGS)
:cPtr_midrange_ipic_actualInstruction (argument_0 COMMA_THERE),
mOccurrenceFactor (argument_1) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_midrange_ipic_instruction_MNOP * GGS_midrange_ipic_instruction_MNOP::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_MNOP *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_midrange_ipic_instruction_MNOP *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_midrange_ipic_instruction_MNOP::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_midrange_ipic_instruction_MNOP * ptr = dynamic_cast <const cPtr_midrange_ipic_instruction_MNOP *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mInstructionLocation.operator_isEqual (ptr->mInstructionLocation).boolValue ()
         && mOccurrenceFactor.operator_isEqual (ptr->mOccurrenceFactor).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_MNOP::
method_instructionLength (C_Compiler & inLexique,
                                GGS_uint & var_cas_outLength COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outLength = mOccurrenceFactor.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (512)) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_MNOP::
method_displayIPICinstruction (C_Compiler & inLexique,
                                GGS_string& var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioListFileContents.appendCString ("MNOP ") ;
  var_cas_ioListFileContents.dotAssign_operation (mOccurrenceFactor.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (517)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (517))) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_instruction_MNOP::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "->@midrange_ipic_instruction_MNOP:"
           << mInstructionLocation.reader_description (inIndentation + 1)
           << mOccurrenceFactor.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_MNOP::
instanceMessage (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_instruction_MNOP::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_midrange_ipic_instruction_MNOP (& typeid (cPtr_midrange_ipic_instruction_MNOP), & typeid (cPtr_midrange_ipic_actualInstruction), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_midrange_ipic_instruction_MNOP::galgasRTTI (void) const {
  return & gClassInfoFor__midrange_ipic_instruction_MNOP ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_midrange_ipic_instruction_MNOP::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_midrange_ipic_instruction_MNOP (mInstructionLocation, mOccurrenceFactor COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_midrange_ipic_instruction_MNOP'              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_instruction_MNOP ("midrange_ipic_instruction_MNOP", true, & kTypeDescriptor_GGS_midrange_ipic_actualInstruction) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_MNOP::
GGS_midrange_ipic_instruction_MNOP (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_MNOP::
GGS_midrange_ipic_instruction_MNOP (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_midrange_ipic_instruction_MNOP GGS_midrange_ipic_instruction_MNOP::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_MNOP result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_midrange_ipic_instruction_MNOP *> (inPointer) != NULL)
      : (typeid (cPtr_midrange_ipic_instruction_MNOP) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_midrange_ipic_instruction_MNOP (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_midrange_ipic_instruction_MNOP),
                                       inUseKindOfClass,
                                       inPointer->instanceMessage ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_MNOP GGS_midrange_ipic_instruction_MNOP::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_location & argument_0,
                 const GGS_luint & argument_1
                                COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_MNOP result ;
  macroMyNew (result.mPointer, cPtr_midrange_ipic_instruction_MNOP (argument_0,
                                argument_1 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_luint  GGS_midrange_ipic_instruction_MNOP::
reader_mOccurrenceFactor (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_luint   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_instruction_MNOP *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_instruction_MNOP *) mPointer)->mOccurrenceFactor ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_midrange_ipic_instruction_MNOP::actualTypeName (void) const {
  return "midrange_ipic_instruction_MNOP" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__midrange_ipic_instruction_MNOP ("midrange_ipic_instruction_MNOP", gClassInfoFor__midrange_ipic_actualInstruction, & kTypeDescriptor_GGS_midrange_ipic_instruction_MNOP) ;

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_instruction_MNOP::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_instruction_MNOP * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_instruction_MNOP (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_instruction_MNOP GGS_midrange_ipic_instruction_MNOP::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_instruction_MNOP result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_instruction_MNOP * p = dynamic_cast <const GGS_midrange_ipic_instruction_MNOP *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_instruction_MNOP, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_instruction_MNOP::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_instruction_MNOP ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           class 'cPtr_midrange_ipic_incDecRegisterInCondition'            *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_midrange_ipic_incDecRegisterInCondition::
cPtr_midrange_ipic_incDecRegisterInCondition (const GGS_location & argument_0,
                                const GGS_midrange_ipic_registerExpression& argument_1,
                                const GGS_string& argument_2,
                                const GGS_bool& argument_3,
                                const GGS_bool& argument_4,
                                const GGS_bool& argument_5
                                COMMA_LOCATION_ARGS)
:cPtr_midrange_ipic_actualInstruction (argument_0 COMMA_THERE),
mRegisterDescription (argument_1),
mTargetLabel (argument_2),
mIncrement (argument_3),
m_W_isDestination (argument_4),
mBranchIfZero (argument_5) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_midrange_ipic_incDecRegisterInCondition * GGS_midrange_ipic_incDecRegisterInCondition::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_incDecRegisterInCondition *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_midrange_ipic_incDecRegisterInCondition *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_midrange_ipic_incDecRegisterInCondition::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_midrange_ipic_incDecRegisterInCondition * ptr = dynamic_cast <const cPtr_midrange_ipic_incDecRegisterInCondition *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mInstructionLocation.operator_isEqual (ptr->mInstructionLocation).boolValue ()
         && mRegisterDescription.operator_isEqual (ptr->mRegisterDescription).boolValue ()
         && mTargetLabel.operator_isEqual (ptr->mTargetLabel).boolValue ()
         && mIncrement.operator_isEqual (ptr->mIncrement).boolValue ()
         && m_W_isDestination.operator_isEqual (ptr->m_W_isDestination).boolValue ()
         && mBranchIfZero.operator_isEqual (ptr->mBranchIfZero).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_incDecRegisterInCondition::
method_instructionLength (C_Compiler & /* inLexique */,
                                GGS_uint & var_cas_outLength COMMA_UNUSED_LOCATION_ARGS) const {
  const GGS_bool cond_20423 = mBranchIfZero ;
  if (cond_20423.isBuiltAndTrue ()) {
    var_cas_outLength = GGS_uint (3U) ;
  }else if (cond_20423.isBuiltAndFalse ()) {
    var_cas_outLength = GGS_uint (2U) ;
  }
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_incDecRegisterInCondition::
method_displayIPICinstruction (C_Compiler & inLexique,
                                GGS_string& var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioListFileContents.appendCString ("JUMP ") ;
  const GGS_bool cond_20656 = mIncrement ;
  if (cond_20656.isBuiltAndTrue ()) {
    var_cas_ioListFileContents.appendCString ("INCF ") ;
  }else if (cond_20656.isBuiltAndFalse ()) {
    var_cas_ioListFileContents.appendCString ("DECF ") ;
  }
  var_cas_ioListFileContents.dotAssign_operation (mRegisterDescription.reader_mAssemblyString (inLexique COMMA_SOURCE_FILE_AT_LINE (699))) ;
  const GGS_bool cond_20848 = m_W_isDestination ;
  if (cond_20848.isBuiltAndTrue ()) {
    var_cas_ioListFileContents.appendCString (", W") ;
  }
  const GGS_bool cond_20923 = mBranchIfZero ;
  if (cond_20923.isBuiltAndTrue ()) {
    var_cas_ioListFileContents.appendCString (" Z") ;
  }else if (cond_20923.isBuiltAndFalse ()) {
    var_cas_ioListFileContents.appendCString (" NZ") ;
  }
  var_cas_ioListFileContents.appendCString (" ") ;
  var_cas_ioListFileContents.dotAssign_operation (mTargetLabel) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_incDecRegisterInCondition::
method_enterReferencedLabel (C_Compiler & /* inLexique */,
                                GGS_stringset & var_cas_ioReferencedLabelSet COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioReferencedLabelSet.addAssign_operation (mTargetLabel) ;
}

//---------------------------------------------------------------------------*

void cPtr_midrange_ipic_incDecRegisterInCondition::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "->@midrange_ipic_incDecRegisterInCondition:"
           << mInstructionLocation.reader_description (inIndentation + 1)
           << mRegisterDescription.reader_description (inIndentation + 1)
           << mTargetLabel.reader_description (inIndentation + 1)
           << mIncrement.reader_description (inIndentation + 1)
           << m_W_isDestination.reader_description (inIndentation + 1)
           << mBranchIfZero.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_incDecRegisterInCondition::
instanceMessage (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_midrange_ipic_incDecRegisterInCondition::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_midrange_ipic_incDecRegisterInCondition (& typeid (cPtr_midrange_ipic_incDecRegisterInCondition), & typeid (cPtr_midrange_ipic_actualInstruction), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_midrange_ipic_incDecRegisterInCondition::galgasRTTI (void) const {
  return & gClassInfoFor__midrange_ipic_incDecRegisterInCondition ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_midrange_ipic_incDecRegisterInCondition::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_midrange_ipic_incDecRegisterInCondition (mInstructionLocation, mRegisterDescription, mTargetLabel, mIncrement, m_W_isDestination, mBranchIfZero COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        GALGAS class 'GGS_midrange_ipic_incDecRegisterInCondition'         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_midrange_ipic_incDecRegisterInCondition ("midrange_ipic_incDecRegisterInCondition", true, & kTypeDescriptor_GGS_midrange_ipic_actualInstruction) ;

//---------------------------------------------------------------------------*

GGS_midrange_ipic_incDecRegisterInCondition::
GGS_midrange_ipic_incDecRegisterInCondition (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_incDecRegisterInCondition::
GGS_midrange_ipic_incDecRegisterInCondition (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_midrange_ipic_incDecRegisterInCondition GGS_midrange_ipic_incDecRegisterInCondition::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_incDecRegisterInCondition result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_midrange_ipic_incDecRegisterInCondition *> (inPointer) != NULL)
      : (typeid (cPtr_midrange_ipic_incDecRegisterInCondition) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_midrange_ipic_incDecRegisterInCondition (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_midrange_ipic_incDecRegisterInCondition),
                                       inUseKindOfClass,
                                       inPointer->instanceMessage ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_incDecRegisterInCondition GGS_midrange_ipic_incDecRegisterInCondition::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_location & argument_0,
                 const GGS_midrange_ipic_registerExpression& argument_1,
                 const GGS_string& argument_2,
                 const GGS_bool& argument_3,
                 const GGS_bool& argument_4,
                 const GGS_bool& argument_5
                                COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_incDecRegisterInCondition result ;
  macroMyNew (result.mPointer, cPtr_midrange_ipic_incDecRegisterInCondition (argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4,
                                argument_5 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_registerExpression GGS_midrange_ipic_incDecRegisterInCondition::
reader_mRegisterDescription (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_midrange_ipic_registerExpression  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_incDecRegisterInCondition *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_incDecRegisterInCondition *) mPointer)->mRegisterDescription ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_midrange_ipic_incDecRegisterInCondition::
reader_mTargetLabel (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_incDecRegisterInCondition *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_incDecRegisterInCondition *) mPointer)->mTargetLabel ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_midrange_ipic_incDecRegisterInCondition::
reader_mIncrement (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_bool  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_incDecRegisterInCondition *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_incDecRegisterInCondition *) mPointer)->mIncrement ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_midrange_ipic_incDecRegisterInCondition::
reader_m_W_isDestination (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_bool  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_incDecRegisterInCondition *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_incDecRegisterInCondition *) mPointer)->m_W_isDestination ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_midrange_ipic_incDecRegisterInCondition::
reader_mBranchIfZero (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_bool  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_midrange_ipic_incDecRegisterInCondition *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_midrange_ipic_incDecRegisterInCondition *) mPointer)->mBranchIfZero ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_midrange_ipic_incDecRegisterInCondition::actualTypeName (void) const {
  return "midrange_ipic_incDecRegisterInCondition" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__midrange_ipic_incDecRegisterInCondition ("midrange_ipic_incDecRegisterInCondition", gClassInfoFor__midrange_ipic_actualInstruction, & kTypeDescriptor_GGS_midrange_ipic_incDecRegisterInCondition) ;

//---------------------------------------------------------------------------*

GGS_object GGS_midrange_ipic_incDecRegisterInCondition::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_midrange_ipic_incDecRegisterInCondition * p = NULL ;
    macroMyNew (p, GGS_midrange_ipic_incDecRegisterInCondition (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_midrange_ipic_incDecRegisterInCondition GGS_midrange_ipic_incDecRegisterInCondition::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_midrange_ipic_incDecRegisterInCondition result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_midrange_ipic_incDecRegisterInCondition * p = dynamic_cast <const GGS_midrange_ipic_incDecRegisterInCondition *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_midrange_ipic_incDecRegisterInCondition, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_midrange_ipic_incDecRegisterInCondition::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_midrange_ipic_incDecRegisterInCondition ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_midrange_ipic_metamodel (void) {
 enterCategoryMethod__registerExpression__resolveMidrangeAccess (category_method__registerExpression__resolveMidrangeAccess, gClassInfoFor__registerExpression.slotID ()) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogueAction prologueEpilogueObjectFor_midrange_ipic_metamodel (prologueRoutineFor_midrange_ipic_metamodel,
                                   NULL) ;

//---------------------------------------------------------------------------*

