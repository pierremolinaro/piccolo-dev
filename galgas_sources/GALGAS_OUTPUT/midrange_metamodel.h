//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'midrange_metamodel.h'                         *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     august 24th, 2008, at 17h18'33"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef midrange_metamodel_DEFINED
#define midrange_metamodel_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/C_GGS_Object.h"
#include "galgas/GGS_location.h"
#include "galgas/GGS_lbool.h"
#include "galgas/GGS_lchar.h"
#include "galgas/GGS_lstring.h"
#include "galgas/GGS_ldouble.h"
#include "galgas/GGS_luint.h"
#include "galgas/GGS_lsint.h"
#include "galgas/GGS_luint64.h"
#include "galgas/GGS_lsint64.h"
#include "galgas/GGS_stringset.h"
#include "galgas/GGS_binaryset.h"
#include "galgas/GGS_filewrapper.h"
#include "galgas/predefined_types.h"
#include "galgas/AC_galgas_class.h"
#include "galgas/AC_galgas_domain.h"
#include "galgas/AC_galgas_mapindex.h"
#include "galgas/AC_galgas_map.h"
#include "galgas/AC_galgas_listmap.h"
#include "galgas/AC_galgas_list.h"
#include "galgas/AC_galgas_sortedlist.h"

//---------------------------------------------------------------------------*

#include "galgas/C_Lexique.h"

// Include imported semantics
#include "generic_metamodel.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction ;
class cPtr_midrange_instruction ;
class GGS_midrange_instructionList ;
class GGS_midrange_instruction_nobanksel ;
class cPtr_midrange_instruction_nobanksel ;
class GGS_midrange_instruction_banksel ;
class cPtr_midrange_instruction_banksel ;
class GGS_midrange_instruction_savebank ;
class cPtr_midrange_instruction_savebank ;
class GGS_midrange_instruction_FD_base_code ;
class GGS_midrange_instruction_FD ;
class cPtr_midrange_instruction_FD ;
class GGS_midrange_F_instruction_base_code ;
class GGS_midrange_instruction_F ;
class cPtr_midrange_instruction_F ;
class GGS_midrange_bit_oriented_op ;
class GGS_midrange_instruction_FB ;
class cPtr_midrange_instruction_FB ;
class GGS_midrange_instruction_CALL ;
class cPtr_midrange_instruction_CALL ;
class GGS_midrange_instruction_JSR ;
class cPtr_midrange_instruction_JSR ;
class GGS_midrange_instruction_JUMP ;
class cPtr_midrange_instruction_JUMP ;
class GGS_midrange_instruction_GOTO ;
class cPtr_midrange_instruction_GOTO ;
class GGS_midrange_instruction_CLRWDT ;
class cPtr_midrange_instruction_CLRWDT ;
class GGS_midrange_instruction_CLRW ;
class cPtr_midrange_instruction_CLRW ;
class GGS_midrange_instruction_NOP ;
class cPtr_midrange_instruction_NOP ;
class GGS_midrange_instruction_SLEEP ;
class cPtr_midrange_instruction_SLEEP ;
class GGS_midrange_literal_instruction_opcode ;
class GGS_midrange_instruction_literalOperation ;
class cPtr_midrange_instruction_literalOperation ;
class GGS_midrange_instruction_MNOP ;
class cPtr_midrange_instruction_MNOP ;
class GGS_midrange_instruction_FOREVER ;
class cPtr_midrange_instruction_FOREVER ;
class GGS_midrange_instruction_IF_SEMI_COLON ;
class cPtr_midrange_instruction_IF_SEMI_COLON ;
class GGS_midrange_instruction_IF_BitTest ;
class cPtr_midrange_instruction_IF_BitTest ;
class GGS_midrange_instruction_IF_IncDec ;
class cPtr_midrange_instruction_IF_IncDec ;
class GGS_midrange_conditionExpression ;
class cPtr_midrange_conditionExpression ;
class GGS_midrange_incDecRegisterInCondition ;
class cPtr_midrange_incDecRegisterInCondition ;
class GGS_midrange_negateCondition ;
class cPtr_midrange_negateCondition ;
class GGS_midrange_andCondition ;
class cPtr_midrange_andCondition ;
class GGS_midrange_bitTest_in_structured_if_condition ;
class cPtr_midrange_bitTest_in_structured_if_condition ;
class GGS_midrange_instruction_structured_if ;
class cPtr_midrange_instruction_structured_if ;
class GGS_midrange_partList ;
class GGS_midrange_instruction_do_while ;
class cPtr_midrange_instruction_do_while ;
class GGS_midrange_interruptDefinitionList ;
class GGS_midrange_routineDefinitionList ;
class GGS_midrange_model ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_midrange_instruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction : public AC_galgas_class {
//--- Default constructor
  public : inline GGS_midrange_instruction (void) : AC_galgas_class () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction * getPtr (void) const {
    return (cPtr_midrange_instruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mInstructionLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformation * _galgasObjectRunTimeInfo (void) const ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformation gClassInfoFor__midrange_instruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@midrange_instructionList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_midrange_instructionList ;

class GGS_midrange_instructionList : public AC_galgas_list {
  public : typedef elementOf_GGS_midrange_instructionList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_midrange_instructionList constructor_emptyList (void) ;
  public : static GGS_midrange_instructionList constructor_listWithValue (const GGS_midrange_instruction & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_midrange_instructionList & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_midrange_instructionList
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_midrange_instructionList
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_midrange_instructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_midrange_instruction & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_midrange_instruction & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_midrange_instruction & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_midrange_instruction & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_midrange_instructionList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_midrange_instruction & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_midrange_instructionList _operator_concat (const GGS_midrange_instructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_midrange_instruction & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_midrange_instruction & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_midrange_instruction & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_midrange_instruction 
  reader_mInstructionAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMInstructionAtIndex (C_Compiler & inLexique,
                              const GGS_midrange_instruction  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_midrange_instructionList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_midrange_instruction   & _mInstruction (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_midrange_instruction_nobanksel'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_nobanksel : public GGS_midrange_instruction {
//--- Default constructor
  public : inline GGS_midrange_instruction_nobanksel (void) : GGS_midrange_instruction () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction_nobanksel (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction_nobanksel (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction_nobanksel
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_instruction_nobanksel constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction_nobanksel * getPtr (void) const {
    return (cPtr_midrange_instruction_nobanksel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction_nobanksel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction_nobanksel * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction_nobanksel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_instruction_nobanksel ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_midrange_instruction_banksel'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_banksel : public GGS_midrange_instruction {
//--- Default constructor
  public : inline GGS_midrange_instruction_banksel (void) : GGS_midrange_instruction () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction_banksel (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction_banksel (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction_banksel
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_instruction_banksel constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_luint & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction_banksel * getPtr (void) const {
    return (cPtr_midrange_instruction_banksel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_luint  reader_mBankIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction_banksel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction_banksel * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction_banksel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_instruction_banksel ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_midrange_instruction_savebank'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_savebank : public GGS_midrange_instruction {
//--- Default constructor
  public : inline GGS_midrange_instruction_savebank (void) : GGS_midrange_instruction () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction_savebank (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction_savebank (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction_savebank
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_instruction_savebank constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_registerExpression & argument_1,
                                const GGS_midrange_instructionList & argument_2,
                                const GGS_location & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction_savebank * getPtr (void) const {
    return (cPtr_midrange_instruction_savebank *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_registerExpression  reader_mRegister (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_midrange_instructionList  reader_mInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mEndOfSaveBankInstruction (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction_savebank * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction_savebank * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction_savebank *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_instruction_savebank ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Class for 'midrange_instruction_FD_base_code' Enumeration          *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_FD_base_code {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_ADDWF, enum_ANDWF, enum_COMF, enum_DECF, enum_DECFSZ, enum_INCF, enum_INCFSZ, enum_IORWF, enum_MOVF, enum_RLF, enum_RRF, enum_SUBWF, enum_SWAPF, enum_XORWF} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const { return mValue ; }

//--- Default constructor
  public : inline GGS_midrange_instruction_FD_base_code (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_midrange_instruction_FD_base_code (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline uint16 bitCount (void) { return 4 ; }

//--- Is built ?
  public : bool _isBuilt (void) const ;

//--- Construction from GALGAS constructor
  public : static inline GGS_midrange_instruction_FD_base_code  constructor_ADDWF (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_instruction_FD_base_code (enum_ADDWF) ;
  }
  public : static inline GGS_midrange_instruction_FD_base_code  constructor_ANDWF (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_instruction_FD_base_code (enum_ANDWF) ;
  }
  public : static inline GGS_midrange_instruction_FD_base_code  constructor_COMF (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_instruction_FD_base_code (enum_COMF) ;
  }
  public : static inline GGS_midrange_instruction_FD_base_code  constructor_DECF (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_instruction_FD_base_code (enum_DECF) ;
  }
  public : static inline GGS_midrange_instruction_FD_base_code  constructor_DECFSZ (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_instruction_FD_base_code (enum_DECFSZ) ;
  }
  public : static inline GGS_midrange_instruction_FD_base_code  constructor_INCF (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_instruction_FD_base_code (enum_INCF) ;
  }
  public : static inline GGS_midrange_instruction_FD_base_code  constructor_INCFSZ (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_instruction_FD_base_code (enum_INCFSZ) ;
  }
  public : static inline GGS_midrange_instruction_FD_base_code  constructor_IORWF (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_instruction_FD_base_code (enum_IORWF) ;
  }
  public : static inline GGS_midrange_instruction_FD_base_code  constructor_MOVF (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_instruction_FD_base_code (enum_MOVF) ;
  }
  public : static inline GGS_midrange_instruction_FD_base_code  constructor_RLF (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_instruction_FD_base_code (enum_RLF) ;
  }
  public : static inline GGS_midrange_instruction_FD_base_code  constructor_RRF (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_instruction_FD_base_code (enum_RRF) ;
  }
  public : static inline GGS_midrange_instruction_FD_base_code  constructor_SUBWF (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_instruction_FD_base_code (enum_SUBWF) ;
  }
  public : static inline GGS_midrange_instruction_FD_base_code  constructor_SWAPF (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_instruction_FD_base_code (enum_SWAPF) ;
  }
  public : static inline GGS_midrange_instruction_FD_base_code  constructor_XORWF (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_instruction_FD_base_code (enum_XORWF) ;
  }

//--- Readers
  public : GGS_string reader_mnemonic (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- Methods

//--- Operators

//--- 'description' reader
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;

//--- Drop operation
  public : inline void _drop (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool _operator_isEqual (const GGS_midrange_instruction_FD_base_code inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_midrange_instruction_FD_base_code inOperand) const ;
  public : GGS_bool _operator_infOrEqual (const GGS_midrange_instruction_FD_base_code inOperand) const ;
  public : GGS_bool _operator_supOrEqual (const GGS_midrange_instruction_FD_base_code inOperand) const ;
  public : GGS_bool _operator_strictInf (const GGS_midrange_instruction_FD_base_code inOperand) const ;
  public : GGS_bool _operator_strictSup (const GGS_midrange_instruction_FD_base_code inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Routine 'getMidRangeFDInstructionBaseCode'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_getMidRangeFDInstructionBaseCode (C_Compiler &,
                                const GGS_midrange_instruction_FD_base_code ,
                                GGS_uint  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_midrange_instruction_FD'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_FD : public GGS_midrange_instruction {
//--- Default constructor
  public : inline GGS_midrange_instruction_FD (void) : GGS_midrange_instruction () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction_FD (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction_FD (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction_FD
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_instruction_FD constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_midrange_instruction_FD_base_code& argument_1,
                                const GGS_registerExpression & argument_2,
                                const GGS_bool& argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction_FD * getPtr (void) const {
    return (cPtr_midrange_instruction_FD *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_midrange_instruction_FD_base_code reader_mInstruction_FD_base_code (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_registerExpression  reader_mRegisterExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_m_W_isDestination (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction_FD * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction_FD * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction_FD *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_instruction_FD ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Class for 'midrange_F_instruction_base_code' Enumeration          *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_F_instruction_base_code {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_CLRF, enum_MOVWF} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const { return mValue ; }

//--- Default constructor
  public : inline GGS_midrange_F_instruction_base_code (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_midrange_F_instruction_base_code (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline uint16 bitCount (void) { return 2 ; }

//--- Is built ?
  public : bool _isBuilt (void) const ;

//--- Construction from GALGAS constructor
  public : static inline GGS_midrange_F_instruction_base_code  constructor_CLRF (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_F_instruction_base_code (enum_CLRF) ;
  }
  public : static inline GGS_midrange_F_instruction_base_code  constructor_MOVWF (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_F_instruction_base_code (enum_MOVWF) ;
  }

//--- Readers
  public : GGS_string reader_mnemonic (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- Methods

//--- Operators

//--- 'description' reader
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;

//--- Drop operation
  public : inline void _drop (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool _operator_isEqual (const GGS_midrange_F_instruction_base_code inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_midrange_F_instruction_base_code inOperand) const ;
  public : GGS_bool _operator_infOrEqual (const GGS_midrange_F_instruction_base_code inOperand) const ;
  public : GGS_bool _operator_supOrEqual (const GGS_midrange_F_instruction_base_code inOperand) const ;
  public : GGS_bool _operator_strictInf (const GGS_midrange_F_instruction_base_code inOperand) const ;
  public : GGS_bool _operator_strictSup (const GGS_midrange_F_instruction_base_code inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_midrange_instruction_F'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_F : public GGS_midrange_instruction {
//--- Default constructor
  public : inline GGS_midrange_instruction_F (void) : GGS_midrange_instruction () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction_F (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction_F (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction_F
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_instruction_F constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_midrange_F_instruction_base_code& argument_1,
                                const GGS_registerExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction_F * getPtr (void) const {
    return (cPtr_midrange_instruction_F *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_midrange_F_instruction_base_code reader_mFAinstruction (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_registerExpression  reader_mRegisterExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction_F * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction_F * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction_F *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_instruction_F ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Class for 'midrange_bit_oriented_op' Enumeration              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_bit_oriented_op {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_BCF, enum_BSF} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const { return mValue ; }

//--- Default constructor
  public : inline GGS_midrange_bit_oriented_op (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_midrange_bit_oriented_op (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline uint16 bitCount (void) { return 2 ; }

//--- Is built ?
  public : bool _isBuilt (void) const ;

//--- Construction from GALGAS constructor
  public : static inline GGS_midrange_bit_oriented_op  constructor_BCF (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_bit_oriented_op (enum_BCF) ;
  }
  public : static inline GGS_midrange_bit_oriented_op  constructor_BSF (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_bit_oriented_op (enum_BSF) ;
  }

//--- Readers
  public : GGS_string reader_mnemonic (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- Methods

//--- Operators

//--- 'description' reader
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;

//--- Drop operation
  public : inline void _drop (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool _operator_isEqual (const GGS_midrange_bit_oriented_op inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_midrange_bit_oriented_op inOperand) const ;
  public : GGS_bool _operator_infOrEqual (const GGS_midrange_bit_oriented_op inOperand) const ;
  public : GGS_bool _operator_supOrEqual (const GGS_midrange_bit_oriented_op inOperand) const ;
  public : GGS_bool _operator_strictInf (const GGS_midrange_bit_oriented_op inOperand) const ;
  public : GGS_bool _operator_strictSup (const GGS_midrange_bit_oriented_op inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_midrange_instruction_FB'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_FB : public GGS_midrange_instruction {
//--- Default constructor
  public : inline GGS_midrange_instruction_FB (void) : GGS_midrange_instruction () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction_FB (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction_FB (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction_FB
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_instruction_FB constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_midrange_bit_oriented_op& argument_1,
                                const GGS_registerExpression & argument_2,
                                const GGS_bitNumberExpression & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction_FB * getPtr (void) const {
    return (cPtr_midrange_instruction_FB *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_midrange_bit_oriented_op reader_mBitOrientedOp (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_registerExpression  reader_mRegisterExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bitNumberExpression  reader_mBitNumber (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction_FB * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction_FB * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction_FB *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_instruction_FB ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_midrange_instruction_CALL'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_CALL : public GGS_midrange_instruction {
//--- Default constructor
  public : inline GGS_midrange_instruction_CALL (void) : GGS_midrange_instruction () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction_CALL (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction_CALL (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction_CALL
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_instruction_CALL constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction_CALL * getPtr (void) const {
    return (cPtr_midrange_instruction_CALL *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTargetLabel (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction_CALL * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction_CALL * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction_CALL *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_instruction_CALL ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_midrange_instruction_JSR'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_JSR : public GGS_midrange_instruction {
//--- Default constructor
  public : inline GGS_midrange_instruction_JSR (void) : GGS_midrange_instruction () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction_JSR (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction_JSR (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction_JSR
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_instruction_JSR constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction_JSR * getPtr (void) const {
    return (cPtr_midrange_instruction_JSR *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTargetLabel (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction_JSR * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction_JSR * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction_JSR *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_instruction_JSR ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_midrange_instruction_JUMP'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_JUMP : public GGS_midrange_instruction {
//--- Default constructor
  public : inline GGS_midrange_instruction_JUMP (void) : GGS_midrange_instruction () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction_JUMP (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction_JUMP (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction_JUMP
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_instruction_JUMP constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction_JUMP * getPtr (void) const {
    return (cPtr_midrange_instruction_JUMP *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTargetLabel (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction_JUMP * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction_JUMP * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction_JUMP *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_instruction_JUMP ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_midrange_instruction_GOTO'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_GOTO : public GGS_midrange_instruction {
//--- Default constructor
  public : inline GGS_midrange_instruction_GOTO (void) : GGS_midrange_instruction () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction_GOTO (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction_GOTO (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction_GOTO
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_instruction_GOTO constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction_GOTO * getPtr (void) const {
    return (cPtr_midrange_instruction_GOTO *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTargetLabel (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction_GOTO * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction_GOTO * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction_GOTO *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_instruction_GOTO ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_midrange_instruction_CLRWDT'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_CLRWDT : public GGS_midrange_instruction {
//--- Default constructor
  public : inline GGS_midrange_instruction_CLRWDT (void) : GGS_midrange_instruction () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction_CLRWDT (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction_CLRWDT (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction_CLRWDT
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_instruction_CLRWDT constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction_CLRWDT * getPtr (void) const {
    return (cPtr_midrange_instruction_CLRWDT *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction_CLRWDT * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction_CLRWDT * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction_CLRWDT *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_instruction_CLRWDT ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_midrange_instruction_CLRW'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_CLRW : public GGS_midrange_instruction {
//--- Default constructor
  public : inline GGS_midrange_instruction_CLRW (void) : GGS_midrange_instruction () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction_CLRW (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction_CLRW (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction_CLRW
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_instruction_CLRW constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction_CLRW * getPtr (void) const {
    return (cPtr_midrange_instruction_CLRW *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction_CLRW * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction_CLRW * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction_CLRW *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_instruction_CLRW ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_midrange_instruction_NOP'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_NOP : public GGS_midrange_instruction {
//--- Default constructor
  public : inline GGS_midrange_instruction_NOP (void) : GGS_midrange_instruction () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction_NOP (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction_NOP (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction_NOP
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_instruction_NOP constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction_NOP * getPtr (void) const {
    return (cPtr_midrange_instruction_NOP *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction_NOP * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction_NOP * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction_NOP *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_instruction_NOP ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_midrange_instruction_SLEEP'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_SLEEP : public GGS_midrange_instruction {
//--- Default constructor
  public : inline GGS_midrange_instruction_SLEEP (void) : GGS_midrange_instruction () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction_SLEEP (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction_SLEEP (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction_SLEEP
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_instruction_SLEEP constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction_SLEEP * getPtr (void) const {
    return (cPtr_midrange_instruction_SLEEP *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction_SLEEP * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction_SLEEP * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction_SLEEP *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_instruction_SLEEP ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Class for 'midrange_literal_instruction_opcode' Enumeration         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_literal_instruction_opcode {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_ADDLW, enum_ANDLW, enum_IORLW, enum_MOVLW, enum_RETLW, enum_SUBLW, enum_XORLW} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const { return mValue ; }

//--- Default constructor
  public : inline GGS_midrange_literal_instruction_opcode (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_midrange_literal_instruction_opcode (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline uint16 bitCount (void) { return 3 ; }

//--- Is built ?
  public : bool _isBuilt (void) const ;

//--- Construction from GALGAS constructor
  public : static inline GGS_midrange_literal_instruction_opcode  constructor_ADDLW (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_literal_instruction_opcode (enum_ADDLW) ;
  }
  public : static inline GGS_midrange_literal_instruction_opcode  constructor_ANDLW (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_literal_instruction_opcode (enum_ANDLW) ;
  }
  public : static inline GGS_midrange_literal_instruction_opcode  constructor_IORLW (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_literal_instruction_opcode (enum_IORLW) ;
  }
  public : static inline GGS_midrange_literal_instruction_opcode  constructor_MOVLW (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_literal_instruction_opcode (enum_MOVLW) ;
  }
  public : static inline GGS_midrange_literal_instruction_opcode  constructor_RETLW (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_literal_instruction_opcode (enum_RETLW) ;
  }
  public : static inline GGS_midrange_literal_instruction_opcode  constructor_SUBLW (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_literal_instruction_opcode (enum_SUBLW) ;
  }
  public : static inline GGS_midrange_literal_instruction_opcode  constructor_XORLW (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_midrange_literal_instruction_opcode (enum_XORLW) ;
  }

//--- Readers
  public : GGS_string reader_mnemonic (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- Methods

//--- Operators

//--- 'description' reader
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;

//--- Drop operation
  public : inline void _drop (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool _operator_isEqual (const GGS_midrange_literal_instruction_opcode inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_midrange_literal_instruction_opcode inOperand) const ;
  public : GGS_bool _operator_infOrEqual (const GGS_midrange_literal_instruction_opcode inOperand) const ;
  public : GGS_bool _operator_supOrEqual (const GGS_midrange_literal_instruction_opcode inOperand) const ;
  public : GGS_bool _operator_strictInf (const GGS_midrange_literal_instruction_opcode inOperand) const ;
  public : GGS_bool _operator_strictSup (const GGS_midrange_literal_instruction_opcode inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//         GALGAS class 'GGS_midrange_instruction_literalOperation'          *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_literalOperation : public GGS_midrange_instruction {
//--- Default constructor
  public : inline GGS_midrange_instruction_literalOperation (void) : GGS_midrange_instruction () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction_literalOperation (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction_literalOperation (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction_literalOperation
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_instruction_literalOperation constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_midrange_literal_instruction_opcode& argument_1,
                                const GGS_immediatExpression & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction_literalOperation * getPtr (void) const {
    return (cPtr_midrange_instruction_literalOperation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_midrange_literal_instruction_opcode reader_mLiteralInstruction (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_immediatExpression  reader_mImmediatExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction_literalOperation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction_literalOperation * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction_literalOperation *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_instruction_literalOperation ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_midrange_instruction_MNOP'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_MNOP : public GGS_midrange_instruction {
//--- Default constructor
  public : inline GGS_midrange_instruction_MNOP (void) : GGS_midrange_instruction () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction_MNOP (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction_MNOP (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction_MNOP
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_instruction_MNOP constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_luint & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction_MNOP * getPtr (void) const {
    return (cPtr_midrange_instruction_MNOP *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_luint  reader_mOccurrenceFactor (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction_MNOP * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction_MNOP * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction_MNOP *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_instruction_MNOP ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_midrange_instruction_FOREVER'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_FOREVER : public GGS_midrange_instruction {
//--- Default constructor
  public : inline GGS_midrange_instruction_FOREVER (void) : GGS_midrange_instruction () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction_FOREVER (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction_FOREVER (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction_FOREVER
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_instruction_FOREVER constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_midrange_instructionList & argument_1,
                                const GGS_location & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction_FOREVER * getPtr (void) const {
    return (cPtr_midrange_instruction_FOREVER *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_midrange_instructionList  reader_mInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mEndOfInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction_FOREVER * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction_FOREVER * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction_FOREVER *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_instruction_FOREVER ;

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_midrange_instruction_IF_SEMI_COLON'            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_IF_SEMI_COLON : public GGS_midrange_instruction {
//--- Default constructor
  public : inline GGS_midrange_instruction_IF_SEMI_COLON (void) : GGS_midrange_instruction () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction_IF_SEMI_COLON (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction_IF_SEMI_COLON (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction_IF_SEMI_COLON
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction_IF_SEMI_COLON * getPtr (void) const {
    return (cPtr_midrange_instruction_IF_SEMI_COLON *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_midrange_instruction  reader_mInstruction (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction_IF_SEMI_COLON * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction_IF_SEMI_COLON * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction_IF_SEMI_COLON *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_instruction_IF_SEMI_COLON ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_midrange_instruction_IF_BitTest'             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_IF_BitTest : public GGS_midrange_instruction_IF_SEMI_COLON {
//--- Default constructor
  public : inline GGS_midrange_instruction_IF_BitTest (void) : GGS_midrange_instruction_IF_SEMI_COLON () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction_IF_BitTest (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction_IF_BitTest (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction_IF_BitTest
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_instruction_IF_BitTest constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_midrange_instruction & argument_1,
                                const GGS_bool& argument_2,
                                const GGS_registerExpression & argument_3,
                                const GGS_bitNumberExpression & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction_IF_BitTest * getPtr (void) const {
    return (cPtr_midrange_instruction_IF_BitTest *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_bool reader_mSkipIfSet (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_registerExpression  reader_mRegisterExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bitNumberExpression  reader_mBitNumber (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction_IF_BitTest * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction_IF_BitTest * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction_IF_BitTest *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_instruction_IF_BitTest ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_midrange_instruction_IF_IncDec'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_IF_IncDec : public GGS_midrange_instruction_IF_SEMI_COLON {
//--- Default constructor
  public : inline GGS_midrange_instruction_IF_IncDec (void) : GGS_midrange_instruction_IF_SEMI_COLON () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction_IF_IncDec (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction_IF_IncDec (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction_IF_IncDec
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_instruction_IF_IncDec constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_midrange_instruction & argument_1,
                                const GGS_bool& argument_2,
                                const GGS_registerExpression & argument_3,
                                const GGS_bool& argument_4
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction_IF_IncDec * getPtr (void) const {
    return (cPtr_midrange_instruction_IF_IncDec *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_bool reader_mIncrement (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_registerExpression  reader_mRegisterExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_m_W_isDestination (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction_IF_IncDec * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction_IF_IncDec * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction_IF_IncDec *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_instruction_IF_IncDec ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_midrange_conditionExpression'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_conditionExpression : public AC_galgas_class {
//--- Default constructor
  public : inline GGS_midrange_conditionExpression (void) : AC_galgas_class () {}

//--- Pointer assignment constructor
  public : GGS_midrange_conditionExpression (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_conditionExpression (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_conditionExpression
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_conditionExpression * getPtr (void) const {
    return (cPtr_midrange_conditionExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_conditionExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_conditionExpression * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_conditionExpression *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformation * _galgasObjectRunTimeInfo (void) const ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformation gClassInfoFor__midrange_conditionExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_midrange_incDecRegisterInCondition'            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_incDecRegisterInCondition : public GGS_midrange_conditionExpression {
//--- Default constructor
  public : inline GGS_midrange_incDecRegisterInCondition (void) : GGS_midrange_conditionExpression () {}

//--- Pointer assignment constructor
  public : GGS_midrange_incDecRegisterInCondition (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_incDecRegisterInCondition (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_incDecRegisterInCondition
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_incDecRegisterInCondition constructor_new (C_Compiler & inLexique,
                                const GGS_registerExpression & argument_0,
                                const GGS_bool& argument_1,
                                const GGS_bool& argument_2,
                                const GGS_bool& argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_incDecRegisterInCondition * getPtr (void) const {
    return (cPtr_midrange_incDecRegisterInCondition *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_registerExpression  reader_mRegisterExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mIncrement (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_m_W_isDestination (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mBranchIfZero (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_incDecRegisterInCondition * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_incDecRegisterInCondition * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_incDecRegisterInCondition *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_incDecRegisterInCondition ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_midrange_negateCondition'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_negateCondition : public GGS_midrange_conditionExpression {
//--- Default constructor
  public : inline GGS_midrange_negateCondition (void) : GGS_midrange_conditionExpression () {}

//--- Pointer assignment constructor
  public : GGS_midrange_negateCondition (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_negateCondition (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_negateCondition
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_negateCondition constructor_new (C_Compiler & inLexique,
                                const GGS_midrange_conditionExpression & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_negateCondition * getPtr (void) const {
    return (cPtr_midrange_negateCondition *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_midrange_conditionExpression  reader_mCondition (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_negateCondition * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_negateCondition * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_negateCondition *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_negateCondition ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_midrange_andCondition'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_andCondition : public GGS_midrange_conditionExpression {
//--- Default constructor
  public : inline GGS_midrange_andCondition (void) : GGS_midrange_conditionExpression () {}

//--- Pointer assignment constructor
  public : GGS_midrange_andCondition (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_andCondition (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_andCondition
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_andCondition constructor_new (C_Compiler & inLexique,
                                const GGS_midrange_conditionExpression & argument_0,
                                const GGS_midrange_conditionExpression & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_andCondition * getPtr (void) const {
    return (cPtr_midrange_andCondition *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_midrange_conditionExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_midrange_conditionExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_andCondition * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_andCondition * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_andCondition *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_andCondition ;

//---------------------------------------------------------------------------*
//                                                                           *
//      GALGAS class 'GGS_midrange_bitTest_in_structured_if_condition'       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_bitTest_in_structured_if_condition : public GGS_midrange_conditionExpression {
//--- Default constructor
  public : inline GGS_midrange_bitTest_in_structured_if_condition (void) : GGS_midrange_conditionExpression () {}

//--- Pointer assignment constructor
  public : GGS_midrange_bitTest_in_structured_if_condition (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_bitTest_in_structured_if_condition (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_bitTest_in_structured_if_condition
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_bitTest_in_structured_if_condition constructor_new (C_Compiler & inLexique,
                                const GGS_registerExpression & argument_0,
                                const GGS_bitNumberExpression & argument_1,
                                const GGS_bool& argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_bitTest_in_structured_if_condition * getPtr (void) const {
    return (cPtr_midrange_bitTest_in_structured_if_condition *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_registerExpression  reader_mRegisterExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bitNumberExpression  reader_mBitNumber (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mBTFSSinstruction (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_bitTest_in_structured_if_condition * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_bitTest_in_structured_if_condition * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_bitTest_in_structured_if_condition *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_bitTest_in_structured_if_condition ;

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_midrange_instruction_structured_if'            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_structured_if : public GGS_midrange_instruction {
//--- Default constructor
  public : inline GGS_midrange_instruction_structured_if (void) : GGS_midrange_instruction () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction_structured_if (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction_structured_if (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction_structured_if
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_instruction_structured_if constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_midrange_conditionExpression & argument_1,
                                const GGS_midrange_instructionList & argument_2,
                                const GGS_midrange_instructionList & argument_3,
                                const GGS_location & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction_structured_if * getPtr (void) const {
    return (cPtr_midrange_instruction_structured_if *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_midrange_conditionExpression  reader_mIfCondition (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_midrange_instructionList  reader_mThenInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_midrange_instructionList  reader_mElseInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mEndOfElsePartLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction_structured_if * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction_structured_if * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction_structured_if *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_instruction_structured_if ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@midrange_partList'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_midrange_partList ;

class GGS_midrange_partList : public AC_galgas_list {
  public : typedef elementOf_GGS_midrange_partList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_midrange_partList constructor_emptyList (void) ;
  public : static GGS_midrange_partList constructor_listWithValue (const GGS_midrange_conditionExpression & argument_0,
                                const GGS_midrange_instructionList & argument_1,
                                const GGS_location & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_midrange_partList & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_midrange_partList
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_midrange_partList
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_midrange_partList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_midrange_conditionExpression & _out_0,
                              GGS_midrange_instructionList & _out_1,
                              GGS_location & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_midrange_conditionExpression & _out_0,
                             GGS_midrange_instructionList & _out_1,
                             GGS_location & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_midrange_conditionExpression & _out_0,
                                GGS_midrange_instructionList & _out_1,
                                GGS_location & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_midrange_conditionExpression & _out_0,
                                 GGS_midrange_instructionList & _out_1,
                                 GGS_location & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_midrange_partList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_midrange_conditionExpression & argument_0,
                                const GGS_midrange_instructionList & argument_1,
                                const GGS_location & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_midrange_partList _operator_concat (const GGS_midrange_partList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_midrange_conditionExpression & argument_0,
                                const GGS_midrange_instructionList & argument_1,
                                const GGS_location & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_midrange_conditionExpression & argument_0,
                                const GGS_midrange_instructionList & argument_1,
                                const GGS_location & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_midrange_conditionExpression & argument_0,
                                const GGS_midrange_instructionList & argument_1,
                                const GGS_location & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_midrange_conditionExpression 
  reader_mConditionAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_midrange_instructionList 
  reader_mInstructionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_location 
  reader_mEndOfPartLocationAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMConditionAtIndex (C_Compiler & inLexique,
                              const GGS_midrange_conditionExpression  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_Compiler & inLexique,
                              const GGS_midrange_instructionList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMEndOfPartLocationAtIndex (C_Compiler & inLexique,
                              const GGS_location  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_midrange_partList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_midrange_conditionExpression   & _mCondition (LOCATION_ARGS) const ;
  public : /* const */ GGS_midrange_instructionList   & _mInstructionList (LOCATION_ARGS) const ;
  public : /* const */ GGS_location   & _mEndOfPartLocation (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_midrange_instruction_do_while'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_instruction_do_while : public GGS_midrange_instruction {
//--- Default constructor
  public : inline GGS_midrange_instruction_do_while (void) : GGS_midrange_instruction () {}

//--- Pointer assignment constructor
  public : GGS_midrange_instruction_do_while (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_midrange_instruction_do_while (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_midrange_instruction_do_while
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_midrange_instruction_do_while constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_midrange_instructionList & argument_1,
                                const GGS_location & argument_2,
                                const GGS_midrange_partList & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_midrange_instruction_do_while * getPtr (void) const {
    return (cPtr_midrange_instruction_do_while *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_midrange_instructionList  reader_mRepeatedInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mEndOfRepeatedInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_midrange_partList  reader_mWhilePartList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_midrange_instruction_do_while * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_midrange_instruction_do_while * operator () (LOCATION_ARGS) const {
      return (cPtr_midrange_instruction_do_while *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__midrange_instruction_do_while ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 list '@midrange_interruptDefinitionList'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_midrange_interruptDefinitionList ;

class GGS_midrange_interruptDefinitionList : public AC_galgas_list {
  public : typedef elementOf_GGS_midrange_interruptDefinitionList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_midrange_interruptDefinitionList constructor_emptyList (void) ;
  public : static GGS_midrange_interruptDefinitionList constructor_listWithValue (const GGS_location & argument_0,
                                const GGS_midrange_instructionList & argument_1,
                                const GGS_location & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_midrange_interruptDefinitionList & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_midrange_interruptDefinitionList
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_midrange_interruptDefinitionList
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_midrange_interruptDefinitionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_location & _out_0,
                              GGS_midrange_instructionList & _out_1,
                              GGS_location & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_location & _out_0,
                             GGS_midrange_instructionList & _out_1,
                             GGS_location & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_location & _out_0,
                                GGS_midrange_instructionList & _out_1,
                                GGS_location & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_location & _out_0,
                                 GGS_midrange_instructionList & _out_1,
                                 GGS_location & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_midrange_interruptDefinitionList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_location & argument_0,
                                const GGS_midrange_instructionList & argument_1,
                                const GGS_location & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_midrange_interruptDefinitionList _operator_concat (const GGS_midrange_interruptDefinitionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_location & argument_0,
                                const GGS_midrange_instructionList & argument_1,
                                const GGS_location & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_location & argument_0,
                                const GGS_midrange_instructionList & argument_1,
                                const GGS_location & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_location & argument_0,
                                const GGS_midrange_instructionList & argument_1,
                                const GGS_location & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_location 
  reader_mInterruptLocationAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_midrange_instructionList 
  reader_mInstructionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_location 
  reader_mEndOfInterruptLocationAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMInterruptLocationAtIndex (C_Compiler & inLexique,
                              const GGS_location  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_Compiler & inLexique,
                              const GGS_midrange_instructionList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMEndOfInterruptLocationAtIndex (C_Compiler & inLexique,
                              const GGS_location  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_midrange_interruptDefinitionList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_location   & _mInterruptLocation (LOCATION_ARGS) const ;
  public : /* const */ GGS_midrange_instructionList   & _mInstructionList (LOCATION_ARGS) const ;
  public : /* const */ GGS_location   & _mEndOfInterruptLocation (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  list '@midrange_routineDefinitionList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_midrange_routineDefinitionList ;

class GGS_midrange_routineDefinitionList : public AC_galgas_list {
  public : typedef elementOf_GGS_midrange_routineDefinitionList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_midrange_routineDefinitionList constructor_emptyList (void) ;
  public : static GGS_midrange_routineDefinitionList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_luint & argument_1,
                                const GGS_luint & argument_2,
                                const GGS_luint & argument_3,
                                const GGS_bool& argument_4,
                                const GGS_bool& argument_5,
                                const GGS_midrange_instructionList & argument_6,
                                const GGS_location & argument_7) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_midrange_routineDefinitionList & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_midrange_routineDefinitionList
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_midrange_routineDefinitionList
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_midrange_routineDefinitionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0,
                              GGS_luint & _out_1,
                              GGS_luint & _out_2,
                              GGS_luint & _out_3,
                              GGS_bool& _out_4,
                              GGS_bool& _out_5,
                              GGS_midrange_instructionList & _out_6,
                              GGS_location & _out_7
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0,
                             GGS_luint & _out_1,
                             GGS_luint & _out_2,
                             GGS_luint & _out_3,
                             GGS_bool& _out_4,
                             GGS_bool& _out_5,
                             GGS_midrange_instructionList & _out_6,
                             GGS_location & _out_7
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0,
                                GGS_luint & _out_1,
                                GGS_luint & _out_2,
                                GGS_luint & _out_3,
                                GGS_bool& _out_4,
                                GGS_bool& _out_5,
                                GGS_midrange_instructionList & _out_6,
                                GGS_location & _out_7
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_luint & _out_1,
                                 GGS_luint & _out_2,
                                 GGS_luint & _out_3,
                                 GGS_bool& _out_4,
                                 GGS_bool& _out_5,
                                 GGS_midrange_instructionList & _out_6,
                                 GGS_location & _out_7
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_midrange_routineDefinitionList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_luint & argument_1,
                                const GGS_luint & argument_2,
                                const GGS_luint & argument_3,
                                const GGS_bool& argument_4,
                                const GGS_bool& argument_5,
                                const GGS_midrange_instructionList & argument_6,
                                const GGS_location & argument_7) ;
//--- Handling '.' GALGAS operator
  public : GGS_midrange_routineDefinitionList _operator_concat (const GGS_midrange_routineDefinitionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_luint & argument_1,
                                const GGS_luint & argument_2,
                                const GGS_luint & argument_3,
                                const GGS_bool& argument_4,
                                const GGS_bool& argument_5,
                                const GGS_midrange_instructionList & argument_6,
                                const GGS_location & argument_7
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_luint & argument_1,
                                const GGS_luint & argument_2,
                                const GGS_luint & argument_3,
                                const GGS_bool& argument_4,
                                const GGS_bool& argument_5,
                                const GGS_midrange_instructionList & argument_6,
                                const GGS_location & argument_7
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_luint & argument_1,
                                const GGS_luint & argument_2,
                                const GGS_luint & argument_3,
                                const GGS_bool& argument_4,
                                const GGS_bool& argument_5,
                                const GGS_midrange_instructionList & argument_6,
                                const GGS_location & argument_7
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mRoutineNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_luint 
  reader_mPageAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_luint 
  reader_mRequiredBankAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_luint 
  reader_mReturnedBankAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_bool
  reader_mPreservesBankAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_bool
  reader_mIsNoReturnAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_midrange_instructionList 
  reader_mInstructionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_location 
  reader_mEndOfRoutineLocationAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMRoutineNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMPageAtIndex (C_Compiler & inLexique,
                              const GGS_luint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMRequiredBankAtIndex (C_Compiler & inLexique,
                              const GGS_luint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMReturnedBankAtIndex (C_Compiler & inLexique,
                              const GGS_luint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMPreservesBankAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMIsNoReturnAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_Compiler & inLexique,
                              const GGS_midrange_instructionList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMEndOfRoutineLocationAtIndex (C_Compiler & inLexique,
                              const GGS_location  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_midrange_routineDefinitionList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_lstring   & _mRoutineName (LOCATION_ARGS) const ;
  public : /* const */ GGS_luint   & _mPage (LOCATION_ARGS) const ;
  public : /* const */ GGS_luint   & _mRequiredBank (LOCATION_ARGS) const ;
  public : /* const */ GGS_luint   & _mReturnedBank (LOCATION_ARGS) const ;
  public : /* const */ GGS_bool  & _mPreservesBank (LOCATION_ARGS) const ;
  public : /* const */ GGS_bool  & _mIsNoReturn (LOCATION_ARGS) const ;
  public : /* const */ GGS_midrange_instructionList   & _mInstructionList (LOCATION_ARGS) const ;
  public : /* const */ GGS_location   & _mEndOfRoutineLocation (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_midrange_instruction'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_midrange_instruction (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction (void) {}
  #endif

//--- Attributes
  public : GGS_location  mInstructionLocation ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@midrange_instructionList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_midrange_instructionList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_midrange_instruction  mInstruction ;
//--- Constructor
  public : elementOf_GGS_midrange_instructionList (const GGS_midrange_instruction & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_midrange_instructionList * nextObject (void) const { return (elementOf_GGS_midrange_instructionList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_midrange_instructionList * previousObject (void) const { return (elementOf_GGS_midrange_instructionList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_midrange_instructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           abstract class 'cPtr_midrange_instruction_nobanksel'            *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction_nobanksel : public cPtr_midrange_instruction {
  private : typedef cPtr_midrange_instruction inherited ;
//--- Constructor
  public : cPtr_midrange_instruction_nobanksel (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction_nobanksel (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            abstract class 'cPtr_midrange_instruction_banksel'             *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction_banksel : public cPtr_midrange_instruction {
  private : typedef cPtr_midrange_instruction inherited ;
//--- Constructor
  public : cPtr_midrange_instruction_banksel (const GGS_location & ,
                                const GGS_luint & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction_banksel (void) {}
  #endif

//--- Attributes
  public : GGS_luint  mBankIndex ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           abstract class 'cPtr_midrange_instruction_savebank'             *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction_savebank : public cPtr_midrange_instruction {
  private : typedef cPtr_midrange_instruction inherited ;
//--- Constructor
  public : cPtr_midrange_instruction_savebank (const GGS_location & ,
                                const GGS_registerExpression & ,
                                const GGS_midrange_instructionList & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction_savebank (void) {}
  #endif

//--- Attributes
  public : GGS_registerExpression  mRegister ;
  public : GGS_midrange_instructionList  mInstructionList ;
  public : GGS_location  mEndOfSaveBankInstruction ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_midrange_instruction_FD'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction_FD : public cPtr_midrange_instruction {
  private : typedef cPtr_midrange_instruction inherited ;
//--- Constructor
  public : cPtr_midrange_instruction_FD (const GGS_location & ,
                                const GGS_midrange_instruction_FD_base_code& ,
                                const GGS_registerExpression & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction_FD (void) {}
  #endif

//--- Attributes
  public : GGS_midrange_instruction_FD_base_code mInstruction_FD_base_code ;
  public : GGS_registerExpression  mRegisterExpression ;
  public : GGS_bool m_W_isDestination ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_midrange_instruction_F'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction_F : public cPtr_midrange_instruction {
  private : typedef cPtr_midrange_instruction inherited ;
//--- Constructor
  public : cPtr_midrange_instruction_F (const GGS_location & ,
                                const GGS_midrange_F_instruction_base_code& ,
                                const GGS_registerExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction_F (void) {}
  #endif

//--- Attributes
  public : GGS_midrange_F_instruction_base_code mFAinstruction ;
  public : GGS_registerExpression  mRegisterExpression ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_midrange_instruction_FB'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction_FB : public cPtr_midrange_instruction {
  private : typedef cPtr_midrange_instruction inherited ;
//--- Constructor
  public : cPtr_midrange_instruction_FB (const GGS_location & ,
                                const GGS_midrange_bit_oriented_op& ,
                                const GGS_registerExpression & ,
                                const GGS_bitNumberExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction_FB (void) {}
  #endif

//--- Attributes
  public : GGS_midrange_bit_oriented_op mBitOrientedOp ;
  public : GGS_registerExpression  mRegisterExpression ;
  public : GGS_bitNumberExpression  mBitNumber ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_midrange_instruction_CALL'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction_CALL : public cPtr_midrange_instruction {
  private : typedef cPtr_midrange_instruction inherited ;
//--- Constructor
  public : cPtr_midrange_instruction_CALL (const GGS_location & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction_CALL (void) {}
  #endif

//--- Attributes
  public : GGS_lstring  mTargetLabel ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_midrange_instruction_JSR'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction_JSR : public cPtr_midrange_instruction {
  private : typedef cPtr_midrange_instruction inherited ;
//--- Constructor
  public : cPtr_midrange_instruction_JSR (const GGS_location & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction_JSR (void) {}
  #endif

//--- Attributes
  public : GGS_lstring  mTargetLabel ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_midrange_instruction_JUMP'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction_JUMP : public cPtr_midrange_instruction {
  private : typedef cPtr_midrange_instruction inherited ;
//--- Constructor
  public : cPtr_midrange_instruction_JUMP (const GGS_location & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction_JUMP (void) {}
  #endif

//--- Attributes
  public : GGS_lstring  mTargetLabel ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_midrange_instruction_GOTO'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction_GOTO : public cPtr_midrange_instruction {
  private : typedef cPtr_midrange_instruction inherited ;
//--- Constructor
  public : cPtr_midrange_instruction_GOTO (const GGS_location & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction_GOTO (void) {}
  #endif

//--- Attributes
  public : GGS_lstring  mTargetLabel ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            abstract class 'cPtr_midrange_instruction_CLRWDT'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction_CLRWDT : public cPtr_midrange_instruction {
  private : typedef cPtr_midrange_instruction inherited ;
//--- Constructor
  public : cPtr_midrange_instruction_CLRWDT (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction_CLRWDT (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_midrange_instruction_CLRW'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction_CLRW : public cPtr_midrange_instruction {
  private : typedef cPtr_midrange_instruction inherited ;
//--- Constructor
  public : cPtr_midrange_instruction_CLRW (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction_CLRW (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_midrange_instruction_NOP'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction_NOP : public cPtr_midrange_instruction {
  private : typedef cPtr_midrange_instruction inherited ;
//--- Constructor
  public : cPtr_midrange_instruction_NOP (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction_NOP (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_midrange_instruction_SLEEP'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction_SLEEP : public cPtr_midrange_instruction {
  private : typedef cPtr_midrange_instruction inherited ;
//--- Constructor
  public : cPtr_midrange_instruction_SLEEP (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction_SLEEP (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//       abstract class 'cPtr_midrange_instruction_literalOperation'         *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction_literalOperation : public cPtr_midrange_instruction {
  private : typedef cPtr_midrange_instruction inherited ;
//--- Constructor
  public : cPtr_midrange_instruction_literalOperation (const GGS_location & ,
                                const GGS_midrange_literal_instruction_opcode& ,
                                const GGS_immediatExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction_literalOperation (void) {}
  #endif

//--- Attributes
  public : GGS_midrange_literal_instruction_opcode mLiteralInstruction ;
  public : GGS_immediatExpression  mImmediatExpression ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_midrange_instruction_MNOP'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction_MNOP : public cPtr_midrange_instruction {
  private : typedef cPtr_midrange_instruction inherited ;
//--- Constructor
  public : cPtr_midrange_instruction_MNOP (const GGS_location & ,
                                const GGS_luint & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction_MNOP (void) {}
  #endif

//--- Attributes
  public : GGS_luint  mOccurrenceFactor ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            abstract class 'cPtr_midrange_instruction_FOREVER'             *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction_FOREVER : public cPtr_midrange_instruction {
  private : typedef cPtr_midrange_instruction inherited ;
//--- Constructor
  public : cPtr_midrange_instruction_FOREVER (const GGS_location & ,
                                const GGS_midrange_instructionList & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction_FOREVER (void) {}
  #endif

//--- Attributes
  public : GGS_midrange_instructionList  mInstructionList ;
  public : GGS_location  mEndOfInstructionList ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//         abstract class 'cPtr_midrange_instruction_IF_SEMI_COLON'          *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction_IF_SEMI_COLON : public cPtr_midrange_instruction {
  private : typedef cPtr_midrange_instruction inherited ;
//--- Constructor
  public : cPtr_midrange_instruction_IF_SEMI_COLON (const GGS_location & ,
                                const GGS_midrange_instruction & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction_IF_SEMI_COLON (void) {}
  #endif

//--- Attributes
  public : GGS_midrange_instruction  mInstruction ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          abstract class 'cPtr_midrange_instruction_IF_BitTest'            *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction_IF_BitTest : public cPtr_midrange_instruction_IF_SEMI_COLON {
  private : typedef cPtr_midrange_instruction_IF_SEMI_COLON inherited ;
//--- Constructor
  public : cPtr_midrange_instruction_IF_BitTest (const GGS_location & ,
                                const GGS_midrange_instruction & ,
                                const GGS_bool& ,
                                const GGS_registerExpression & ,
                                const GGS_bitNumberExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction_IF_BitTest (void) {}
  #endif

//--- Attributes
  public : GGS_bool mSkipIfSet ;
  public : GGS_registerExpression  mRegisterExpression ;
  public : GGS_bitNumberExpression  mBitNumber ;
//--- Method 'getBaseCode'
  public : virtual void method_getBaseCode (C_Compiler &,
                                GGS_uint & 
                                COMMA_LOCATION_ARGS) const ;

//--- Method 'getMnemonic'
  public : virtual void method_getMnemonic (C_Compiler &,
                                GGS_string& 
                                COMMA_LOCATION_ARGS) const ;

//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           abstract class 'cPtr_midrange_instruction_IF_IncDec'            *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction_IF_IncDec : public cPtr_midrange_instruction_IF_SEMI_COLON {
  private : typedef cPtr_midrange_instruction_IF_SEMI_COLON inherited ;
//--- Constructor
  public : cPtr_midrange_instruction_IF_IncDec (const GGS_location & ,
                                const GGS_midrange_instruction & ,
                                const GGS_bool& ,
                                const GGS_registerExpression & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction_IF_IncDec (void) {}
  #endif

//--- Attributes
  public : GGS_bool mIncrement ;
  public : GGS_registerExpression  mRegisterExpression ;
  public : GGS_bool m_W_isDestination ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            abstract class 'cPtr_midrange_conditionExpression'             *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_conditionExpression : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_midrange_conditionExpression (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_conditionExpression (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//         abstract class 'cPtr_midrange_incDecRegisterInCondition'          *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_incDecRegisterInCondition : public cPtr_midrange_conditionExpression {
  private : typedef cPtr_midrange_conditionExpression inherited ;
//--- Constructor
  public : cPtr_midrange_incDecRegisterInCondition (const GGS_registerExpression & ,
                                const GGS_bool& ,
                                const GGS_bool& ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_incDecRegisterInCondition (void) {}
  #endif

//--- Attributes
  public : GGS_registerExpression  mRegisterExpression ;
  public : GGS_bool mIncrement ;
  public : GGS_bool m_W_isDestination ;
  public : GGS_bool mBranchIfZero ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_midrange_negateCondition'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_negateCondition : public cPtr_midrange_conditionExpression {
  private : typedef cPtr_midrange_conditionExpression inherited ;
//--- Constructor
  public : cPtr_midrange_negateCondition (const GGS_midrange_conditionExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_negateCondition (void) {}
  #endif

//--- Attributes
  public : GGS_midrange_conditionExpression  mCondition ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_midrange_andCondition'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_andCondition : public cPtr_midrange_conditionExpression {
  private : typedef cPtr_midrange_conditionExpression inherited ;
//--- Constructor
  public : cPtr_midrange_andCondition (const GGS_midrange_conditionExpression & ,
                                const GGS_midrange_conditionExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_andCondition (void) {}
  #endif

//--- Attributes
  public : GGS_midrange_conditionExpression  mLeftExpression ;
  public : GGS_midrange_conditionExpression  mRightExpression ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//    abstract class 'cPtr_midrange_bitTest_in_structured_if_condition'      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_bitTest_in_structured_if_condition : public cPtr_midrange_conditionExpression {
  private : typedef cPtr_midrange_conditionExpression inherited ;
//--- Constructor
  public : cPtr_midrange_bitTest_in_structured_if_condition (const GGS_registerExpression & ,
                                const GGS_bitNumberExpression & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_bitTest_in_structured_if_condition (void) {}
  #endif

//--- Attributes
  public : GGS_registerExpression  mRegisterExpression ;
  public : GGS_bitNumberExpression  mBitNumber ;
  public : GGS_bool mBTFSSinstruction ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//         abstract class 'cPtr_midrange_instruction_structured_if'          *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction_structured_if : public cPtr_midrange_instruction {
  private : typedef cPtr_midrange_instruction inherited ;
//--- Constructor
  public : cPtr_midrange_instruction_structured_if (const GGS_location & ,
                                const GGS_midrange_conditionExpression & ,
                                const GGS_midrange_instructionList & ,
                                const GGS_midrange_instructionList & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction_structured_if (void) {}
  #endif

//--- Attributes
  public : GGS_midrange_conditionExpression  mIfCondition ;
  public : GGS_midrange_instructionList  mThenInstructionList ;
  public : GGS_midrange_instructionList  mElseInstructionList ;
  public : GGS_location  mEndOfElsePartLocation ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@midrange_partList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_midrange_partList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_midrange_conditionExpression  mCondition ;
  public : GGS_midrange_instructionList  mInstructionList ;
  public : GGS_location  mEndOfPartLocation ;
//--- Constructor
  public : elementOf_GGS_midrange_partList (const GGS_midrange_conditionExpression & ,
                                const GGS_midrange_instructionList & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_midrange_partList * nextObject (void) const { return (elementOf_GGS_midrange_partList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_midrange_partList * previousObject (void) const { return (elementOf_GGS_midrange_partList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_midrange_partList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           abstract class 'cPtr_midrange_instruction_do_while'             *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_midrange_instruction_do_while : public cPtr_midrange_instruction {
  private : typedef cPtr_midrange_instruction inherited ;
//--- Constructor
  public : cPtr_midrange_instruction_do_while (const GGS_location & ,
                                const GGS_midrange_instructionList & ,
                                const GGS_location & ,
                                const GGS_midrange_partList & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_midrange_instruction_do_while (void) {}
  #endif

//--- Attributes
  public : GGS_midrange_instructionList  mRepeatedInstructionList ;
  public : GGS_location  mEndOfRepeatedInstructionList ;
  public : GGS_midrange_partList  mWhilePartList ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Element of list '@midrange_interruptDefinitionList'             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_midrange_interruptDefinitionList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_location  mInterruptLocation ;
  public : GGS_midrange_instructionList  mInstructionList ;
  public : GGS_location  mEndOfInterruptLocation ;
//--- Constructor
  public : elementOf_GGS_midrange_interruptDefinitionList (const GGS_location & ,
                                const GGS_midrange_instructionList & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_midrange_interruptDefinitionList * nextObject (void) const { return (elementOf_GGS_midrange_interruptDefinitionList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_midrange_interruptDefinitionList * previousObject (void) const { return (elementOf_GGS_midrange_interruptDefinitionList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_midrange_interruptDefinitionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Element of list '@midrange_routineDefinitionList'              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_midrange_routineDefinitionList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mRoutineName ;
  public : GGS_luint  mPage ;
  public : GGS_luint  mRequiredBank ;
  public : GGS_luint  mReturnedBank ;
  public : GGS_bool mPreservesBank ;
  public : GGS_bool mIsNoReturn ;
  public : GGS_midrange_instructionList  mInstructionList ;
  public : GGS_location  mEndOfRoutineLocation ;
//--- Constructor
  public : elementOf_GGS_midrange_routineDefinitionList (const GGS_lstring & ,
                                const GGS_luint & ,
                                const GGS_luint & ,
                                const GGS_luint & ,
                                const GGS_bool& ,
                                const GGS_bool& ,
                                const GGS_midrange_instructionList & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_midrange_routineDefinitionList * nextObject (void) const { return (elementOf_GGS_midrange_routineDefinitionList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_midrange_routineDefinitionList * previousObject (void) const { return (elementOf_GGS_midrange_routineDefinitionList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_midrange_routineDefinitionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Declarations for 'midrange_model' struct                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_midrange_model {
//--- Default constructor
  public : GGS_midrange_model (void) ;

//--- Virtual destructor
  public : virtual ~GGS_midrange_model (void) ;

//--- Handle 'drop' instruction
  public : void _drop (void) ;

//--- Method '_isBuilt'
  public : bool _isBuilt (void) const ;

//--- Support for method call handling in GALGAS
  public : inline const GGS_midrange_model * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
  public : inline GGS_midrange_model * operator () (UNUSED_LOCATION_ARGS) { return this ; }

//--- Comparison
  public : GGS_bool _operator_isEqual (const GGS_midrange_model & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_midrange_model & inOperand) const ;

//--- Reader 'description'
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;
//--- Galgas 'new' destructor
  public : static GGS_midrange_model constructor_new (const GGS_lstring & argument_0,
                 const GGS_lstring & argument_1,
                 const GGS_configDefinitionList & argument_2,
                 const GGS_bool& argument_3,
                 const GGS_ramDefinitionList & argument_4,
                 const GGS_midrange_interruptDefinitionList & argument_5,
                 const GGS_constantDefinitionList & argument_6,
                 const GGS_midrange_routineDefinitionList & argument_7,
                 const GGS_bool& argument_8,
                 const GGS_bool& argument_9,
                 const GGS_location & argument_10) ;

//--- Readers
  public : inline GGS_lstring 
  reader_mProgramName (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mProgramName ;
  }

  public : inline GGS_lstring 
  reader_mDeviceName (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mDeviceName ;
  }

  public : inline GGS_configDefinitionList 
  reader_mConfigDefinitionList (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mConfigDefinitionList ;
  }

  public : inline GGS_bool
  reader_mAcceptDefaultConfiguration (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mAcceptDefaultConfiguration ;
  }

  public : inline GGS_ramDefinitionList 
  reader_mRamDefinitionList (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mRamDefinitionList ;
  }

  public : inline GGS_midrange_interruptDefinitionList 
  reader_mInterruptDefinitionList (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mInterruptDefinitionList ;
  }

  public : inline GGS_constantDefinitionList 
  reader_mConstantDefinitionList (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mConstantDefinitionList ;
  }

  public : inline GGS_midrange_routineDefinitionList 
  reader_mRoutineDefinitionList (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mRoutineDefinitionList ;
  }

  public : inline GGS_bool
  reader_mNeedsComputedGoto2 (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mNeedsComputedGoto2 ;
  }

  public : inline GGS_bool
  reader_mNeedsComputedGoto4 (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mNeedsComputedGoto4 ;
  }

  public : inline GGS_location 
  reader_mEndOfProgram (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mEndOfProgram ;
  }

//--- Attributes
  public : GGS_lstring  mProgramName ;
  public : GGS_lstring  mDeviceName ;
  public : GGS_configDefinitionList  mConfigDefinitionList ;
  public : GGS_bool mAcceptDefaultConfiguration ;
  public : GGS_ramDefinitionList  mRamDefinitionList ;
  public : GGS_midrange_interruptDefinitionList  mInterruptDefinitionList ;
  public : GGS_constantDefinitionList  mConstantDefinitionList ;
  public : GGS_midrange_routineDefinitionList  mRoutineDefinitionList ;
  public : GGS_bool mNeedsComputedGoto2 ;
  public : GGS_bool mNeedsComputedGoto4 ;
  public : GGS_location  mEndOfProgram ;
} ;

//---------------------------------------------------------------------------*

#endif
