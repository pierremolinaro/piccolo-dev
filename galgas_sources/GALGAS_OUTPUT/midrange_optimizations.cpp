//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'midrange_optimizations.cpp'                      *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      april 9th, 2010, at 22h29'39"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "midrange_optimizations.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "midrange_optimizations.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@midrange_ipic_instruction.defineLabel'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_instruction__defineLabel (C_Compiler &,
                                const cPtr_midrange_ipic_instruction * operand_605,
                                GGS_symbolTableForOptimizations  & /* var_cas_ioRoutineSymbolTable */,
                                const GGS_uint   /* var_cas_inLineIndex */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_605 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_ipic_instruction.defineLabel' *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_ipic_instruction__defineLabel> gDispatchTableForMethod__midrange_ipic_instruction__defineLabel ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_ipic_instruction__defineLabel (typeCategoryMethod__midrange_ipic_instruction__defineLabel inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__midrange_ipic_instruction__defineLabel.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_ipic_instruction__defineLabel
findCategoryMethod__midrange_ipic_instruction__defineLabel (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__midrange_ipic_instruction__defineLabel result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__midrange_ipic_instruction__defineLabel.count ()) {
    result = gDispatchTableForMethod__midrange_ipic_instruction__defineLabel (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_ipic_instruction__defineLabel (superClassPtr) ;
      gDispatchTableForMethod__midrange_ipic_instruction__defineLabel.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@midrange_ipic_pseudo_LABEL.defineLabel'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_pseudo_LABEL__defineLabel (C_Compiler & inLexique,
                                const cPtr_midrange_ipic_pseudo_LABEL * operand_847,
                                GGS_symbolTableForOptimizations  & var_cas_ioRoutineSymbolTable,
                                const GGS_uint   var_cas_inLineIndex
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_847 != NULL) {
    var_cas_ioRoutineSymbolTable.modifier_insertKey (inLexique, operand_847->mLabel, var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (24)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of routine "findMidRangeFirstInstructionFromAddress"     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_findMidRangeFirstInstructionFromAddress (C_Compiler & inLexique,
                                const GGS_uint   var_cas_inLineIndex,
                                const GGS_midrange_ipic_instructionList   var_cas_inGeneratedInstructionList,
                                GGS_midrange_ipic_instruction  & var_cas_outFirstInstruction COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_findMidRangeFirstInstructionFromAddress at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_uint  var_cas_currentAddress = var_cas_inLineIndex ;
  var_cas_outFirstInstruction = GGS_midrange_ipic_NULL ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (37)) ;
  GGS_bool var_cas_found = GGS_bool (false) ;
  GGS_uint _variant_1835 = var_cas_inGeneratedInstructionList.reader_length () ;
  GGS_bool _condition_1835 (_variant_1835.isBuilt (), true) ;
  while (_condition_1835.isBuiltAndTrue ()) {
    _condition_1835 = ((var_cas_currentAddress).operator_strictInf (var_cas_inGeneratedInstructionList.reader_length ())).operator_and ((var_cas_found).operator_not ()) ;
    if (_condition_1835.isBuiltAndTrue ()) {
      if (_variant_1835.uintValue () == 0) {
        inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (49)) ;
        _condition_1835 = GGS_bool (false) ;
      }else{
        _variant_1835.decrement_operation (inLexique COMMA_HERE) ;
        { const GGS_midrange_ipic_instruction _var_1822 = var_cas_inGeneratedInstructionList.reader_mInstructionAtIndex (inLexique, var_cas_currentAddress COMMA_SOURCE_FILE_AT_LINE (42)) ; // CAST instruction
          if (_var_1822.getPtr () != NULL) {
            macroValidPointer (_var_1822.getPtr ()) ;
            if (dynamic_cast <cPtr_midrange_ipic_actualInstruction *> (_var_1822.getPtr ()) != NULL) {
              const GGS_midrange_ipic_actualInstruction var_cas_instr (_var_1822.getPtr ()) ;
              var_cas_outFirstInstruction = var_cas_instr ;
              var_cas_found = GGS_bool (true) ;
            }else{
              var_cas_currentAddress.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (47)) ;
            }
          }
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_findMidRangeFirstInstructionFromAddress\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "findMidRangeFirstInstructionOrLabelFromAddress" *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_findMidRangeFirstInstructionOrLabelFromAddress (C_Compiler & inLexique,
                                const GGS_uint   var_cas_inLineIndex,
                                const GGS_midrange_ipic_instructionList   var_cas_inGeneratedInstructionList,
                                GGS_midrange_ipic_instruction  & var_cas_outFirstInstruction,
                                GGS_stringset  & var_cas_outReachedLabelSet COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_findMidRangeFirstInstructionOrLabelFromAddress at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outReachedLabelSet = GGS_stringset ::constructor_emptySet () ;
  GGS_uint  var_cas_currentAddress = var_cas_inLineIndex ;
  var_cas_outFirstInstruction = GGS_midrange_ipic_NULL ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (64)) ;
  GGS_bool var_cas_found = GGS_bool (false) ;
  GGS_uint _variant_3054 = var_cas_inGeneratedInstructionList.reader_length () ;
  GGS_bool _condition_3054 (_variant_3054.isBuilt (), true) ;
  while (_condition_3054.isBuiltAndTrue ()) {
    _condition_3054 = ((var_cas_currentAddress).operator_strictInf (var_cas_inGeneratedInstructionList.reader_length ())).operator_and ((var_cas_found).operator_not ()) ;
    if (_condition_3054.isBuiltAndTrue ()) {
      if (_variant_3054.uintValue () == 0) {
        inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (83)) ;
        _condition_3054 = GGS_bool (false) ;
      }else{
        _variant_3054.decrement_operation (inLexique COMMA_HERE) ;
        { const GGS_midrange_ipic_instruction _var_3041 = var_cas_inGeneratedInstructionList.reader_mInstructionAtIndex (inLexique, var_cas_currentAddress COMMA_SOURCE_FILE_AT_LINE (69)) ; // CAST instruction
          if (_var_3041.getPtr () != NULL) {
            macroValidPointer (_var_3041.getPtr ()) ;
            if (dynamic_cast <cPtr_midrange_ipic_actualInstruction *> (_var_3041.getPtr ()) != NULL) {
              const GGS_midrange_ipic_actualInstruction var_cas_instr (_var_3041.getPtr ()) ;
              var_cas_outFirstInstruction = var_cas_instr ;
              var_cas_found = GGS_bool (true) ;
            }else if (dynamic_cast <cPtr_midrange_ipic_pseudo_ORG *> (_var_3041.getPtr ()) != NULL) {
              const GGS_midrange_ipic_pseudo_ORG var_cas_instr (_var_3041.getPtr ()) ;
              var_cas_outFirstInstruction = var_cas_instr ;
              var_cas_found = GGS_bool (true) ;
            }else if (typeid (cPtr_midrange_ipic_pseudo_LABEL) == typeid (* (_var_3041.getPtr ()))) {
              const GGS_midrange_ipic_pseudo_LABEL var_cas_instr (_var_3041.getPtr ()) ;
              var_cas_outFirstInstruction = var_cas_instr ;
              var_cas_outReachedLabelSet.addAssign_operation (var_cas_instr.reader_mLabel (inLexique COMMA_SOURCE_FILE_AT_LINE (78)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (78))) ;
              var_cas_currentAddress.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (79)) ;
            }else{
              var_cas_currentAddress.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (81)) ;
            }
          }
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_findMidRangeFirstInstructionOrLabelFromAddress\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@midrange_ipic_JUMP.optimizeJUMP'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_JUMP__optimizeJUMP (C_Compiler & inLexique,
                                const cPtr_midrange_ipic_JUMP * operand_3512,
                                const GGS_symbolTableForOptimizations   var_cas_inSymbolTable,
                                const GGS_uint   var_cas_inLineIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                GGS_bool & var_cas_ioOptimizationsDone
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3512 != NULL) {
    GGS_stringset  var_cas_reachedLabelSet ;
    GGS_midrange_ipic_instruction  automatic_var_3896_0 ;
    ::routine_findMidRangeFirstInstructionOrLabelFromAddress (inLexique,  var_cas_inLineIndex.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (101)),  var_cas_ioGeneratedInstructionList,  automatic_var_3896_0,  var_cas_reachedLabelSet COMMA_SOURCE_FILE_AT_LINE (101)) ;
    const GGS_bool cond_4216 = var_cas_reachedLabelSet.reader_hasKey (operand_3512->mTargetLabel.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (103))) ;
    if (cond_4216.isBuiltAndTrue ()) {
      var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_NULL ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (104)), var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (104)) ;
      var_cas_ioListFileContents.appendCString ("  line ") ;
      var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (105))) ;
      var_cas_ioListFileContents.appendCString (": JUMP branching to next instruction deleted\n") ;
    }else if (cond_4216.isBuiltAndFalse ()) {
      GGS_uint  var_cas_line ;
      const GGS_symbolTableForOptimizations  temp_4310 = var_cas_inSymbolTable ;
      if (temp_4310.isBuilt ()) {
        temp_4310 (HERE)->method_searchKey (inLexique, operand_3512->mTargetLabel, var_cas_line COMMA_SOURCE_FILE_AT_LINE (108)) ;
      }
      GGS_midrange_ipic_instruction  var_cas_firstInstruction ;
      ::routine_findMidRangeFirstInstructionFromAddress (inLexique,  var_cas_line.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (111)),  var_cas_ioGeneratedInstructionList,  var_cas_firstInstruction COMMA_SOURCE_FILE_AT_LINE (111)) ;
      { const GGS_midrange_ipic_instruction _var_5951 = var_cas_firstInstruction ; // CAST instruction
        if (_var_5951.getPtr () != NULL) {
          macroValidPointer (_var_5951.getPtr ()) ;
          if (typeid (cPtr_midrange_ipic_instruction_RETURN) == typeid (* (_var_5951.getPtr ()))) {
            var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_instruction_RETURN ::constructor_new (inLexique, operand_3512->mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (116)), var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (115)) ;
            var_cas_ioOptimizationsDone = GGS_bool (true) ;
            var_cas_ioListFileContents.appendCString ("  line ") ;
            var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (120))) ;
            var_cas_ioListFileContents.appendCString (": JUMP branching to RETURN replaced by RETURN\n") ;
          }else if (typeid (cPtr_midrange_ipic_instruction_literalOperation) == typeid (* (_var_5951.getPtr ()))) {
            const GGS_midrange_ipic_instruction_literalOperation var_cas_literalOp (_var_5951.getPtr ()) ;
            const GGS_bool cond_5407 = (var_cas_literalOp.reader_mLiteralInstruction (inLexique COMMA_SOURCE_FILE_AT_LINE (122))).operator_isEqual (GGS_midrange_literal_instruction_opcode::constructor_RETLW (inLexique COMMA_SOURCE_FILE_AT_LINE (122))) ;
            if (cond_5407.isBuiltAndTrue ()) {
              var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, var_cas_literalOp, var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (123)) ;
              var_cas_ioOptimizationsDone = GGS_bool (true) ;
              var_cas_ioListFileContents.appendCString ("  line ") ;
              var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (128))) ;
              var_cas_ioListFileContents.appendCString (": JUMP branching to RETLW replaced by RETLW\n") ;
            }
          }else if (typeid (cPtr_midrange_ipic_JUMP) == typeid (* (_var_5951.getPtr ()))) {
            const GGS_midrange_ipic_JUMP var_cas_jump (_var_5951.getPtr ()) ;
            const GGS_bool cond_5911 = (operand_3512->mTargetLabel).operator_isNotEqual (var_cas_jump.reader_mTargetLabel (inLexique COMMA_SOURCE_FILE_AT_LINE (131))) ;
            if (cond_5911.isBuiltAndTrue ()) {
              var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_JUMP ::constructor_new (inLexique, operand_3512->mInstructionLocation, var_cas_jump.reader_mTargetLabel (inLexique COMMA_SOURCE_FILE_AT_LINE (133)), GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_SOURCE_FILE_AT_LINE (133)), GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_SOURCE_FILE_AT_LINE (133)) COMMA_SOURCE_FILE_AT_LINE (133)), var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (132)) ;
              var_cas_ioOptimizationsDone = GGS_bool (true) ;
              var_cas_ioListFileContents.appendCString ("  line ") ;
              var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (137))) ;
              var_cas_ioListFileContents.appendCString (": JUMP branching to JUMP replaced by JUMP\n") ;
            }
          }else{
          }
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Virtual Table for category method '@midrange_ipic_JUMP.optimizeJUMP'    *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_ipic_JUMP__optimizeJUMP> gDispatchTableForMethod__midrange_ipic_JUMP__optimizeJUMP ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_ipic_JUMP__optimizeJUMP (typeCategoryMethod__midrange_ipic_JUMP__optimizeJUMP inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__midrange_ipic_JUMP__optimizeJUMP.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_ipic_JUMP__optimizeJUMP
findCategoryMethod__midrange_ipic_JUMP__optimizeJUMP (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__midrange_ipic_JUMP__optimizeJUMP result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__midrange_ipic_JUMP__optimizeJUMP.count ()) {
    result = gDispatchTableForMethod__midrange_ipic_JUMP__optimizeJUMP (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_ipic_JUMP__optimizeJUMP (superClassPtr) ;
      gDispatchTableForMethod__midrange_ipic_JUMP__optimizeJUMP.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@midrange_ipic_GOTO.optimizeGOTO'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_GOTO__optimizeGOTO (C_Compiler & inLexique,
                                const cPtr_midrange_ipic_GOTO * operand_6109,
                                const GGS_symbolTableForOptimizations   var_cas_inSymbolTable,
                                const GGS_uint   var_cas_inLineIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                GGS_bool & var_cas_ioOptimizationsDone
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6109 != NULL) {
    GGS_stringset  var_cas_reachedLabelSet ;
    GGS_midrange_ipic_instruction  automatic_var_6551_0 ;
    ::routine_findMidRangeFirstInstructionOrLabelFromAddress (inLexique,  var_cas_inLineIndex.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (156)),  var_cas_ioGeneratedInstructionList,  automatic_var_6551_0,  var_cas_reachedLabelSet COMMA_SOURCE_FILE_AT_LINE (156)) ;
    const GGS_bool cond_6871 = var_cas_reachedLabelSet.reader_hasKey (operand_6109->mTargetLabel.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (158))) ;
    if (cond_6871.isBuiltAndTrue ()) {
      var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_NULL ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (159)), var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (159)) ;
      var_cas_ioListFileContents.appendCString ("  line ") ;
      var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (160))) ;
      var_cas_ioListFileContents.appendCString (": GOTO branching to next instruction deleted\n") ;
    }else if (cond_6871.isBuiltAndFalse ()) {
      GGS_uint  var_cas_line ;
      const GGS_symbolTableForOptimizations  temp_6965 = var_cas_inSymbolTable ;
      if (temp_6965.isBuilt ()) {
        temp_6965 (HERE)->method_searchKey (inLexique, operand_6109->mTargetLabel, var_cas_line COMMA_SOURCE_FILE_AT_LINE (163)) ;
      }
      GGS_midrange_ipic_instruction  var_cas_firstInstruction ;
      ::routine_findMidRangeFirstInstructionFromAddress (inLexique,  var_cas_line.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (166)),  var_cas_ioGeneratedInstructionList,  var_cas_firstInstruction COMMA_SOURCE_FILE_AT_LINE (166)) ;
      { const GGS_midrange_ipic_instruction _var_9066 = var_cas_firstInstruction ; // CAST instruction
        if (_var_9066.getPtr () != NULL) {
          macroValidPointer (_var_9066.getPtr ()) ;
          if (typeid (cPtr_midrange_ipic_instruction_RETURN) == typeid (* (_var_9066.getPtr ()))) {
            var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_instruction_RETURN ::constructor_new (inLexique, operand_6109->mInstructionLocation COMMA_SOURCE_FILE_AT_LINE (172)), var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (171)) ;
            var_cas_ioOptimizationsDone = GGS_bool (true) ;
            var_cas_ioListFileContents.appendCString ("  line ") ;
            var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (176))) ;
            var_cas_ioListFileContents.appendCString (": GOTO branching to RETURN replaced by RETURN\n") ;
          }else if (typeid (cPtr_midrange_ipic_instruction_literalOperation) == typeid (* (_var_9066.getPtr ()))) {
            const GGS_midrange_ipic_instruction_literalOperation var_cas_literalOp (_var_9066.getPtr ()) ;
            const GGS_bool cond_8090 = (var_cas_literalOp.reader_mLiteralInstruction (inLexique COMMA_SOURCE_FILE_AT_LINE (178))).operator_isEqual (GGS_midrange_literal_instruction_opcode::constructor_RETLW (inLexique COMMA_SOURCE_FILE_AT_LINE (178))) ;
            if (cond_8090.isBuiltAndTrue ()) {
              var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, var_cas_literalOp, var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (179)) ;
              var_cas_ioOptimizationsDone = GGS_bool (true) ;
              var_cas_ioListFileContents.appendCString ("  line ") ;
              var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (184))) ;
              var_cas_ioListFileContents.appendCString (": GOTO branching to RETLW replaced by RETLW\n") ;
            }
          }else if (typeid (cPtr_midrange_ipic_JUMP) == typeid (* (_var_9066.getPtr ()))) {
            const GGS_midrange_ipic_JUMP var_cas_jump (_var_9066.getPtr ()) ;
            const GGS_bool cond_8594 = (operand_6109->mTargetLabel).operator_isNotEqual (var_cas_jump.reader_mTargetLabel (inLexique COMMA_SOURCE_FILE_AT_LINE (187))) ;
            if (cond_8594.isBuiltAndTrue ()) {
              var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_JUMP ::constructor_new (inLexique, operand_6109->mInstructionLocation, var_cas_jump.reader_mTargetLabel (inLexique COMMA_SOURCE_FILE_AT_LINE (189)), GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_SOURCE_FILE_AT_LINE (189)), GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_SOURCE_FILE_AT_LINE (189)) COMMA_SOURCE_FILE_AT_LINE (189)), var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (188)) ;
              var_cas_ioOptimizationsDone = GGS_bool (true) ;
              var_cas_ioListFileContents.appendCString ("  line ") ;
              var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (193))) ;
              var_cas_ioListFileContents.appendCString (": GOTO branching to JUMP replaced by JUMP\n") ;
            }
          }else if (typeid (cPtr_midrange_ipic_GOTO) == typeid (* (_var_9066.getPtr ()))) {
            const GGS_midrange_ipic_GOTO var_cas_goto (_var_9066.getPtr ()) ;
            const GGS_bool cond_9026 = (operand_6109->mTargetLabel).operator_isNotEqual (var_cas_goto.reader_mTargetLabel (inLexique COMMA_SOURCE_FILE_AT_LINE (196))) ;
            if (cond_9026.isBuiltAndTrue ()) {
              var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_GOTO ::constructor_new (inLexique, operand_6109->mInstructionLocation, var_cas_goto.reader_mTargetLabel (inLexique COMMA_SOURCE_FILE_AT_LINE (198)) COMMA_SOURCE_FILE_AT_LINE (198)), var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (197)) ;
              var_cas_ioOptimizationsDone = GGS_bool (true) ;
              var_cas_ioListFileContents.appendCString ("  line ") ;
              var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (202))) ;
              var_cas_ioListFileContents.appendCString (": GOTO branching to GOTO replaced by GOTO\n") ;
            }
          }else{
          }
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Virtual Table for category method '@midrange_ipic_GOTO.optimizeGOTO'    *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_ipic_GOTO__optimizeGOTO> gDispatchTableForMethod__midrange_ipic_GOTO__optimizeGOTO ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_ipic_GOTO__optimizeGOTO (typeCategoryMethod__midrange_ipic_GOTO__optimizeGOTO inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__midrange_ipic_GOTO__optimizeGOTO.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_ipic_GOTO__optimizeGOTO
findCategoryMethod__midrange_ipic_GOTO__optimizeGOTO (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__midrange_ipic_GOTO__optimizeGOTO result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__midrange_ipic_GOTO__optimizeGOTO.count ()) {
    result = gDispatchTableForMethod__midrange_ipic_GOTO__optimizeGOTO (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_ipic_GOTO__optimizeGOTO (superClassPtr) ;
      gDispatchTableForMethod__midrange_ipic_GOTO__optimizeGOTO.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_ipic_instruction_literalOperation.optimizeMOVLW'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_instruction_literalOperation__optimizeMOVLW (C_Compiler & inLexique,
                                const cPtr_midrange_ipic_instruction_literalOperation * operand_10173,
                                const GGS_uint   var_cas_inLineIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                GGS_bool & var_cas_ioOptimizationsDone
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10173 != NULL) {
    const GGS_bool cond_11136 = (operand_10173->mLiteralInstruction).operator_isEqual (GGS_midrange_literal_instruction_opcode::constructor_MOVLW (inLexique COMMA_SOURCE_FILE_AT_LINE (241))) ;
    if (cond_11136.isBuiltAndTrue ()) {
      GGS_midrange_ipic_instruction  var_cas_firstInstruction ;
      ::routine_findMidRangeFirstInstructionFromAddress (inLexique,  var_cas_inLineIndex.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (244)),  var_cas_ioGeneratedInstructionList,  var_cas_firstInstruction COMMA_SOURCE_FILE_AT_LINE (244)) ;
      { const GGS_midrange_ipic_instruction _var_11123 = var_cas_firstInstruction ; // CAST instruction
        if (_var_11123.getPtr () != NULL) {
          macroValidPointer (_var_11123.getPtr ()) ;
          if (typeid (cPtr_midrange_ipic_instruction_RETURN) == typeid (* (_var_11123.getPtr ()))) {
            var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_instruction_literalOperation ::constructor_new (inLexique, operand_10173->mInstructionLocation, GGS_midrange_literal_instruction_opcode::constructor_RETLW (inLexique COMMA_SOURCE_FILE_AT_LINE (249)), operand_10173->mLiteralValue COMMA_SOURCE_FILE_AT_LINE (249)), var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (248)) ;
            var_cas_ioOptimizationsDone = GGS_bool (true) ;
            var_cas_ioListFileContents.appendCString ("  line ") ;
            var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (253))) ;
            var_cas_ioListFileContents.appendCString (": MOVLW followed by RETURN replaced by RETLW\n") ;
          }else{
          }
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_ipic_instruction_literalOperation.optimizeMOVLW'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW> gDispatchTableForMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW (typeCategoryMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW
findCategoryMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW.count ()) {
    result = gDispatchTableForMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW (superClassPtr) ;
      gDispatchTableForMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_ipic_incDecRegisterInCondition.optimizeTestDecInc'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc (C_Compiler & inLexique,
                                const cPtr_midrange_ipic_incDecRegisterInCondition * operand_11302,
                                const GGS_symbolTableForOptimizations   var_cas_inSymbolTable,
                                const GGS_uint   var_cas_inLineIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                GGS_bool & var_cas_ioOptimizationsDone
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11302 != NULL) {
    GGS_uint  var_cas_line ;
    const GGS_symbolTableForOptimizations  temp_11645 = var_cas_inSymbolTable ;
    if (temp_11645.isBuilt ()) {
      temp_11645 (HERE)->method_searchKey (inLexique, GGS_lstring ::constructor_new (inLexique, operand_11302->mTargetLabel, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (270)), var_cas_line COMMA_SOURCE_FILE_AT_LINE (270)) ;
    }
    GGS_midrange_ipic_instruction  var_cas_firstInstruction ;
    ::routine_findMidRangeFirstInstructionFromAddress (inLexique,  var_cas_line.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (273)),  var_cas_ioGeneratedInstructionList,  var_cas_firstInstruction COMMA_SOURCE_FILE_AT_LINE (273)) ;
    { const GGS_midrange_ipic_instruction _var_13920 = var_cas_firstInstruction ; // CAST instruction
      if (_var_13920.getPtr () != NULL) {
        macroValidPointer (_var_13920.getPtr ()) ;
        if (typeid (cPtr_midrange_ipic_JUMP) == typeid (* (_var_13920.getPtr ()))) {
          const GGS_midrange_ipic_JUMP var_cas_jump (_var_13920.getPtr ()) ;
          var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_incDecRegisterInCondition ::constructor_new (inLexique, operand_11302->mInstructionLocation, operand_11302->mRegisterDescription, var_cas_jump.reader_mTargetLabel (inLexique COMMA_SOURCE_FILE_AT_LINE (282)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (282)), operand_11302->mIncrement, operand_11302->m_W_isDestination, operand_11302->mBranchIfZero COMMA_SOURCE_FILE_AT_LINE (279)), var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (278)) ;
          var_cas_ioOptimizationsDone = GGS_bool (true) ;
          var_cas_ioListFileContents.appendCString ("  line ") ;
          var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (290))) ;
          var_cas_ioListFileContents.appendCString (": label of ") ;
          var_cas_ioListFileContents.appendCString ("JUMP ") ;
          const GGS_bool cond_12544 = operand_11302->mIncrement ;
          if (cond_12544.isBuiltAndTrue ()) {
            var_cas_ioListFileContents.appendCString ("INCF ") ;
          }else if (cond_12544.isBuiltAndFalse ()) {
            var_cas_ioListFileContents.appendCString ("DECF ") ;
          }
          var_cas_ioListFileContents.dotAssign_operation (operand_11302->mRegisterDescription.reader_mAssemblyString (inLexique COMMA_SOURCE_FILE_AT_LINE (297))) ;
          const GGS_bool cond_12737 = operand_11302->m_W_isDestination ;
          if (cond_12737.isBuiltAndTrue ()) {
            var_cas_ioListFileContents.appendCString (", W ") ;
          }
          const GGS_bool cond_12811 = operand_11302->mBranchIfZero ;
          if (cond_12811.isBuiltAndTrue ()) {
            var_cas_ioListFileContents.appendCString ("Z") ;
          }else if (cond_12811.isBuiltAndFalse ()) {
            var_cas_ioListFileContents.appendCString ("NZ") ;
          }
          var_cas_ioListFileContents.appendCString (": branching to JUMP replaced by second JUMP label\n") ;
        }else if (typeid (cPtr_midrange_ipic_GOTO) == typeid (* (_var_13920.getPtr ()))) {
          const GGS_midrange_ipic_GOTO var_cas_goto (_var_13920.getPtr ()) ;
          var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_incDecRegisterInCondition ::constructor_new (inLexique, operand_11302->mInstructionLocation, operand_11302->mRegisterDescription, var_cas_goto.reader_mTargetLabel (inLexique COMMA_SOURCE_FILE_AT_LINE (312)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (312)), operand_11302->mIncrement, operand_11302->m_W_isDestination, operand_11302->mBranchIfZero COMMA_SOURCE_FILE_AT_LINE (309)), var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (308)) ;
          var_cas_ioOptimizationsDone = GGS_bool (true) ;
          var_cas_ioListFileContents.appendCString ("  line ") ;
          var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (320))) ;
          var_cas_ioListFileContents.appendCString (": label of ") ;
          var_cas_ioListFileContents.appendCString ("JUMP ") ;
          const GGS_bool cond_13509 = operand_11302->mIncrement ;
          if (cond_13509.isBuiltAndTrue ()) {
            var_cas_ioListFileContents.appendCString ("INCF ") ;
          }else if (cond_13509.isBuiltAndFalse ()) {
            var_cas_ioListFileContents.appendCString ("DECF ") ;
          }
          var_cas_ioListFileContents.dotAssign_operation (operand_11302->mRegisterDescription.reader_mAssemblyString (inLexique COMMA_SOURCE_FILE_AT_LINE (327))) ;
          const GGS_bool cond_13701 = operand_11302->m_W_isDestination ;
          if (cond_13701.isBuiltAndTrue ()) {
            var_cas_ioListFileContents.appendCString (", W") ;
          }
          const GGS_bool cond_13776 = operand_11302->mBranchIfZero ;
          if (cond_13776.isBuiltAndTrue ()) {
            var_cas_ioListFileContents.appendCString (" Z") ;
          }else if (cond_13776.isBuiltAndFalse ()) {
            var_cas_ioListFileContents.appendCString (" NZ") ;
          }
          var_cas_ioListFileContents.appendCString (": branching to GOTO replaced by second JUMP label\n") ;
        }else{
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_ipic_incDecRegisterInCondition.optimizeTestDecInc'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc> gDispatchTableForMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc (typeCategoryMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc
findCategoryMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc.count ()) {
    result = gDispatchTableForMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc (superClassPtr) ;
      gDispatchTableForMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_ipic_instruction_BitTestSkip.optimizeBitTestSkip'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip (C_Compiler & inLexique,
                                const cPtr_midrange_ipic_instruction_BitTestSkip * operand_14087,
                                const GGS_uint   var_cas_inLineIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                GGS_bool & var_cas_ioOptimizationsDone
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_14087 != NULL) {
    GGS_string var_cas_jumpLabel = GGS_string ("") ;
    GGS_bool var_cas_ok = GGS_bool (false) ;
    { const GGS_midrange_ipic_instruction _var_14536 = var_cas_ioGeneratedInstructionList.reader_mInstructionAtIndex (inLexique, var_cas_inLineIndex.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (352)) COMMA_SOURCE_FILE_AT_LINE (352)) ; // CAST instruction
      if (_var_14536.getPtr () != NULL) {
        macroValidPointer (_var_14536.getPtr ()) ;
        if (typeid (cPtr_midrange_ipic_JUMP) == typeid (* (_var_14536.getPtr ()))) {
          const GGS_midrange_ipic_JUMP var_cas_jump (_var_14536.getPtr ()) ;
          var_cas_jumpLabel = var_cas_jump.reader_mTargetLabel (inLexique COMMA_SOURCE_FILE_AT_LINE (354)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (354)) ;
          var_cas_ok = GGS_bool (true) ;
        }else{
        }
      }
    }
    const GGS_bool cond_14905 = var_cas_ok ;
    if (cond_14905.isBuiltAndTrue ()) {
      { const GGS_midrange_ipic_instruction _var_14892 = var_cas_ioGeneratedInstructionList.reader_mInstructionAtIndex (inLexique, var_cas_inLineIndex.add_operation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (360)) COMMA_SOURCE_FILE_AT_LINE (360)) ; // CAST instruction
        if (_var_14892.getPtr () != NULL) {
          macroValidPointer (_var_14892.getPtr ()) ;
          if (dynamic_cast <cPtr_midrange_ipic_actualInstruction *> (_var_14892.getPtr ()) != NULL) {
            const GGS_midrange_ipic_actualInstruction var_cas_instruction (_var_14892.getPtr ()) ;
            GGS_uint  var_cas_instructionLength ;
            const GGS_midrange_ipic_actualInstruction  temp_14796 = var_cas_instruction ;
            if (temp_14796.isBuilt ()) {
              temp_14796 (HERE)->method_instructionLength (inLexique, var_cas_instructionLength COMMA_SOURCE_FILE_AT_LINE (362)) ;
            }
            var_cas_ok = (var_cas_instructionLength).operator_isEqual (GGS_uint (1U)) ;
          }else{
            var_cas_ok = GGS_bool (false) ;
          }
        }
      }
    }
    const GGS_bool cond_15244 = var_cas_ok ;
    if (cond_15244.isBuiltAndTrue ()) {
      GGS_midrange_ipic_instruction  var_cas_thirdInstruction = GGS_midrange_ipic_NULL ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (370)) ;
      GGS_stringset  var_cas_reachedLabelSet ;
      GGS_midrange_ipic_instruction  automatic_var_15190_0 ;
      ::routine_findMidRangeFirstInstructionOrLabelFromAddress (inLexique,  var_cas_inLineIndex.add_operation (inLexique, GGS_uint (3U) COMMA_SOURCE_FILE_AT_LINE (372)),  var_cas_ioGeneratedInstructionList,  automatic_var_15190_0,  var_cas_reachedLabelSet COMMA_SOURCE_FILE_AT_LINE (372)) ;
      var_cas_ok = var_cas_reachedLabelSet.reader_hasKey (var_cas_jumpLabel) ;
    }
    const GGS_bool cond_16261 = var_cas_ok ;
    if (cond_16261.isBuiltAndTrue ()) {
      var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_instruction_BitTestSkip ::constructor_new (inLexique, operand_14087->mInstructionLocation, (operand_14087->mSkipIfSet).operator_not (), operand_14087->mRegisterDescription, operand_14087->mBitNumber COMMA_SOURCE_FILE_AT_LINE (379)), var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (378)) ;
      var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, var_cas_ioGeneratedInstructionList.reader_mInstructionAtIndex (inLexique, var_cas_inLineIndex.add_operation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (389)) COMMA_SOURCE_FILE_AT_LINE (389)), var_cas_inLineIndex.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (390)) COMMA_SOURCE_FILE_AT_LINE (388)) ;
      var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_NULL ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (394)), var_cas_inLineIndex.add_operation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (395)) COMMA_SOURCE_FILE_AT_LINE (393)) ;
      var_cas_ioOptimizationsDone = GGS_bool (true) ;
      var_cas_ioListFileContents.appendCString ("  lines ") ;
      var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (400))) ;
      var_cas_ioListFileContents.appendCString (" to ") ;
      var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.add_operation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (400)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (400))) ;
      var_cas_ioListFileContents.appendCString (" bit test skip, following by a JUMP skipping next instruction, is complemented\n") ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_ipic_instruction_BitTestSkip.optimizeBitTestSkip'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip> gDispatchTableForMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip (typeCategoryMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip
findCategoryMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip.count ()) {
    result = gDispatchTableForMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip (superClassPtr) ;
      gDispatchTableForMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "perform_midrange_optimizations"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_perform_midrange_optimizations (C_Compiler & inLexique,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_perform_midrange_optimizations at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_ioListFileContents.dotAssign_operation (GGS_string ("").reader_stringByLeftAndRightPadding (GGS_uint (79U), GGS_char (TO_UNICODE ('*')))) ;
  var_cas_ioListFileContents.appendCString ("\n") ;
  var_cas_ioListFileContents.appendCString ("*") ;
  var_cas_ioListFileContents.dotAssign_operation (GGS_string ("CODE OPTIMIZATION").reader_stringByLeftAndRightPadding (GGS_uint (77U), GGS_char (TO_UNICODE (' ')))) ;
  var_cas_ioListFileContents.appendCString ("*\n") ;
  var_cas_ioListFileContents.dotAssign_operation (GGS_string ("").reader_stringByLeftAndRightPadding (GGS_uint (79U), GGS_char (TO_UNICODE ('*')))) ;
  var_cas_ioListFileContents.appendCString ("\n"
    "\n") ;
  GGS_symbolTableForOptimizations  var_cas_symbolTable = GGS_symbolTableForOptimizations ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (420)) ;
  {
      GGS_uint var_cas_lineIndex (true, 0) ;
    GGS_midrange_ipic_instructionList::cEnumerator enumerator_17248 (var_cas_ioGeneratedInstructionList, true) ;
    const GGS_midrange_ipic_instructionList::cElement * operand_17248 = NULL ;
    while (((operand_17248 = enumerator_17248.nextObject ()))) {
      macroValidPointer (operand_17248) ;
      const GGS_midrange_ipic_instruction  temp_17297 = operand_17248->mInstruction ;
      if (temp_17297.isBuilt ()) {
        typeCategoryMethod__midrange_ipic_instruction__defineLabel method = findCategoryMethod__midrange_ipic_instruction__defineLabel (temp_17297.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, temp_17297 (HERE), var_cas_symbolTable, var_cas_lineIndex COMMA_SOURCE_FILE_AT_LINE (422)) ;
        }
      }
      var_cas_lineIndex.mValue ++ ;
    }
  }
  GGS_bool var_cas_optimizationsDone = GGS_bool (true) ;
  GGS_uint  var_cas_iteration = GGS_uint (0U) ;
  GGS_uint _variant_21017 = var_cas_ioGeneratedInstructionList.reader_length () ;
  GGS_bool _condition_21017 (_variant_21017.isBuilt (), true) ;
  while (_condition_21017.isBuiltAndTrue ()) {
    _condition_21017 = var_cas_optimizationsDone ;
    if (_condition_21017.isBuiltAndTrue ()) {
      if (_variant_21017.uintValue () == 0) {
        inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (495)) ;
        _condition_21017 = GGS_bool (false) ;
      }else{
        _variant_21017.decrement_operation (inLexique COMMA_HERE) ;
        var_cas_optimizationsDone = GGS_bool (false) ;
        var_cas_iteration.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (431)) ;
        var_cas_ioListFileContents.appendCString ("Pass ") ;
        var_cas_ioListFileContents.dotAssign_operation (var_cas_iteration.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (432))) ;
        var_cas_ioListFileContents.appendCString (":\n") ;
        {
            GGS_uint var_cas_idx (true, 0) ;
          GGS_midrange_ipic_instructionList::cEnumerator enumerator_17717 (var_cas_ioGeneratedInstructionList, true) ;
          const GGS_midrange_ipic_instructionList::cElement * operand_17717 = NULL ;
          while (((operand_17717 = enumerator_17717.nextObject ()))) {
            macroValidPointer (operand_17717) ;
            { const GGS_midrange_ipic_instruction _var_18862 = operand_17717->mInstruction ; // CAST instruction
              if (_var_18862.getPtr () != NULL) {
                macroValidPointer (_var_18862.getPtr ()) ;
                if (typeid (cPtr_midrange_ipic_GOTO) == typeid (* (_var_18862.getPtr ()))) {
                  const GGS_midrange_ipic_GOTO var_cas_ipic_GOTO (_var_18862.getPtr ()) ;
                  const GGS_midrange_ipic_GOTO  temp_17835 = var_cas_ipic_GOTO ;
                  if (temp_17835.isBuilt ()) {
                    typeCategoryMethod__midrange_ipic_GOTO__optimizeGOTO method = findCategoryMethod__midrange_ipic_GOTO__optimizeGOTO (temp_17835.galgasObjectRunTimeInfo ()) ;
                    if (method != NULL) {
                      method (inLexique, temp_17835 (HERE), var_cas_symbolTable, var_cas_idx, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_optimizationsDone COMMA_SOURCE_FILE_AT_LINE (437)) ;
                    }
                  }
                }else if (typeid (cPtr_midrange_ipic_JUMP) == typeid (* (_var_18862.getPtr ()))) {
                  const GGS_midrange_ipic_JUMP var_cas_ipic_JUMP (_var_18862.getPtr ()) ;
                  const GGS_midrange_ipic_JUMP  temp_18005 = var_cas_ipic_JUMP ;
                  if (temp_18005.isBuilt ()) {
                    typeCategoryMethod__midrange_ipic_JUMP__optimizeJUMP method = findCategoryMethod__midrange_ipic_JUMP__optimizeJUMP (temp_18005.galgasObjectRunTimeInfo ()) ;
                    if (method != NULL) {
                      method (inLexique, temp_18005 (HERE), var_cas_symbolTable, var_cas_idx, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_optimizationsDone COMMA_SOURCE_FILE_AT_LINE (439)) ;
                    }
                  }
                }else if (typeid (cPtr_midrange_ipic_instruction_literalOperation) == typeid (* (_var_18862.getPtr ()))) {
                  const GGS_midrange_ipic_instruction_literalOperation var_cas_ipic_literal (_var_18862.getPtr ()) ;
                  const GGS_midrange_ipic_instruction_literalOperation  temp_18365 = var_cas_ipic_literal ;
                  if (temp_18365.isBuilt ()) {
                    typeCategoryMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW method = findCategoryMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW (temp_18365.galgasObjectRunTimeInfo ()) ;
                    if (method != NULL) {
                      method (inLexique, temp_18365 (HERE), var_cas_idx, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_optimizationsDone COMMA_SOURCE_FILE_AT_LINE (443)) ;
                    }
                  }
                }else if (typeid (cPtr_midrange_ipic_incDecRegisterInCondition) == typeid (* (_var_18862.getPtr ()))) {
                  const GGS_midrange_ipic_incDecRegisterInCondition var_cas_ipic_decInc (_var_18862.getPtr ()) ;
                  const GGS_midrange_ipic_incDecRegisterInCondition  temp_18553 = var_cas_ipic_decInc ;
                  if (temp_18553.isBuilt ()) {
                    typeCategoryMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc method = findCategoryMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc (temp_18553.galgasObjectRunTimeInfo ()) ;
                    if (method != NULL) {
                      method (inLexique, temp_18553 (HERE), var_cas_symbolTable, var_cas_idx, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_optimizationsDone COMMA_SOURCE_FILE_AT_LINE (445)) ;
                    }
                  }
                }else if (typeid (cPtr_midrange_ipic_instruction_BitTestSkip) == typeid (* (_var_18862.getPtr ()))) {
                  const GGS_midrange_ipic_instruction_BitTestSkip var_cas_ipic_bitTestSkip (_var_18862.getPtr ()) ;
                  const GGS_midrange_ipic_instruction_BitTestSkip  temp_18763 = var_cas_ipic_bitTestSkip ;
                  if (temp_18763.isBuilt ()) {
                    typeCategoryMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip method = findCategoryMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip (temp_18763.galgasObjectRunTimeInfo ()) ;
                    if (method != NULL) {
                      method (inLexique, temp_18763 (HERE), var_cas_idx, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_optimizationsDone COMMA_SOURCE_FILE_AT_LINE (447)) ;
                    }
                  }
                }else{
                }
              }
            }
            var_cas_idx.mValue ++ ;
          }
        }
        GGS_stringset  var_cas_referencedLabels = GGS_stringset ::constructor_emptySet () ;
        {
          GGS_midrange_ipic_instructionList::cEnumerator enumerator_19007 (var_cas_ioGeneratedInstructionList, true) ;
          const GGS_midrange_ipic_instructionList::cElement * operand_19007 = NULL ;
          while (((operand_19007 = enumerator_19007.nextObject ()))) {
            macroValidPointer (operand_19007) ;
            const GGS_midrange_ipic_instruction  temp_19051 = operand_19007->mInstruction ;
            if (temp_19051.isBuilt ()) {
              temp_19051 (HERE)->method_enterReferencedLabel (inLexique, var_cas_referencedLabels COMMA_SOURCE_FILE_AT_LINE (454)) ;
            }
          }
        }
        {
          GGS_symbolTableForOptimizations::cEnumerator enumerator_19115 (var_cas_symbolTable, true) ;
          const GGS_symbolTableForOptimizations::cElement * operand_19115 = NULL ;
          while (((operand_19115 = enumerator_19115.nextObject ()))) {
            macroValidPointer (operand_19115) ;
            const GGS_bool cond_19536 = (var_cas_referencedLabels.reader_hasKey (operand_19115->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (457)))).operator_not () ;
            if (cond_19536.isBuiltAndTrue ()) {
              GGS_uint  var_cas_definitionLine ;
              const GGS_symbolTableForOptimizations  temp_19230 = var_cas_symbolTable ;
              if (temp_19230.isBuilt ()) {
                temp_19230 (HERE)->method_searchKey (inLexique, operand_19115->mKey, var_cas_definitionLine COMMA_SOURCE_FILE_AT_LINE (458)) ;
              }
              var_cas_ioListFileContents.appendCString ("  line ") ;
              var_cas_ioListFileContents.dotAssign_operation (var_cas_definitionLine.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (459))) ;
              var_cas_ioListFileContents.appendCString (": unreferenced label '") ;
              var_cas_ioListFileContents.dotAssign_operation (operand_19115->mKey) ;
              var_cas_ioListFileContents.appendCString ("' is deleted\n") ;
              var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_NULL ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (460)), var_cas_definitionLine COMMA_SOURCE_FILE_AT_LINE (460)) ;
              GGS_uint  automatic_var_19524_0 ;
              var_cas_symbolTable.modifier_removeKey (inLexique, operand_19115->mKey, automatic_var_19524_0 COMMA_SOURCE_FILE_AT_LINE (461)) ;
            }
          }
        }
        GGS_bool var_cas_reachable = GGS_bool (true) ;
        GGS_bool var_cas_skippingInstruction = GGS_bool (false) ;
        GGS_bool var_cas_previousWasSkippingInstruction = GGS_bool (false) ;
        {
            GGS_uint var_cas_idx (true, 0) ;
          GGS_midrange_ipic_instructionList::cEnumerator enumerator_19750 (var_cas_ioGeneratedInstructionList, true) ;
          const GGS_midrange_ipic_instructionList::cElement * operand_19750 = NULL ;
          while (((operand_19750 = enumerator_19750.nextObject ()))) {
            macroValidPointer (operand_19750) ;
            const GGS_bool cond_20031 = (var_cas_reachable).operator_or (var_cas_previousWasSkippingInstruction) ;
            if (cond_20031.isBuiltAndTrue ()) {
              const GGS_midrange_ipic_instruction  temp_19871 = operand_19750->mInstruction ;
              if (temp_19871.isBuilt ()) {
                temp_19871 (HERE)->method_nextInstructionIsReachable (inLexique, var_cas_reachable COMMA_SOURCE_FILE_AT_LINE (470)) ;
              }
              var_cas_previousWasSkippingInstruction = var_cas_skippingInstruction ;
              const GGS_midrange_ipic_instruction  temp_19995 = operand_19750->mInstruction ;
              if (temp_19995.isBuilt ()) {
                temp_19995 (HERE)->method_isSkippingInstruction (inLexique, var_cas_skippingInstruction COMMA_SOURCE_FILE_AT_LINE (472)) ;
              }
            }else if (cond_20031.isBuiltAndFalse ()) {
              GGS_bool var_cas_isLABELorORG ;
              const GGS_midrange_ipic_instruction  temp_20088 = operand_19750->mInstruction ;
              if (temp_20088.isBuilt ()) {
                temp_20088 (HERE)->method_isLABELorORG (inLexique, var_cas_isLABELorORG COMMA_SOURCE_FILE_AT_LINE (474)) ;
              }
              GGS_bool var_cas_isNULL ;
              const GGS_midrange_ipic_instruction  temp_20150 = operand_19750->mInstruction ;
              if (temp_20150.isBuilt ()) {
                temp_20150 (HERE)->method_isNULL (inLexique, var_cas_isNULL COMMA_SOURCE_FILE_AT_LINE (475)) ;
              }
              const GGS_bool cond_20429 = ((var_cas_isLABELorORG).operator_not ()).operator_and ((var_cas_isNULL).operator_not ()) ;
              if (cond_20429.isBuiltAndTrue ()) {
                var_cas_ioListFileContents.appendCString ("  line ") ;
                var_cas_ioListFileContents.dotAssign_operation (var_cas_idx.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (477))) ;
                var_cas_ioListFileContents.appendCString (": unreachable instruction is deleted\n") ;
                var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_NULL ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (478)), var_cas_idx COMMA_SOURCE_FILE_AT_LINE (478)) ;
              }else if (cond_20429.isBuiltAndFalse ()) {
                const GGS_bool cond_20586 = var_cas_isLABELorORG ;
                if (cond_20586.isBuiltAndTrue ()) {
                  var_cas_reachable = GGS_bool (true) ;
                  var_cas_previousWasSkippingInstruction = GGS_bool (false) ;
                  var_cas_skippingInstruction = GGS_bool (false) ;
                }
              }
            }
            var_cas_idx.mValue ++ ;
          }
        }
        const GGS_bool cond_21006 = (var_cas_optimizationsDone).operator_not () ;
        if (cond_21006.isBuiltAndTrue ()) {
          var_cas_ioListFileContents.appendCString ("  No optimization\n"
            "\n") ;
          GGS_uint  var_cas_currentAddress = GGS_uint (0U) ;
          {
            GGS_midrange_ipic_instructionList::cEnumerator enumerator_20815 (var_cas_ioGeneratedInstructionList, true) ;
            const GGS_midrange_ipic_instructionList::cElement * operand_20815 = NULL ;
            while (((operand_20815 = enumerator_20815.nextObject ()))) {
              macroValidPointer (operand_20815) ;
              const GGS_midrange_ipic_instruction  temp_20858 = operand_20815->mInstruction ;
              if (temp_20858.isBuilt ()) {
                temp_20858 (HERE)->method_setCurrentAddress (inLexique, var_cas_currentAddress COMMA_SOURCE_FILE_AT_LINE (491)) ;
              }
            }
          }
          var_cas_ioListFileContents.appendCString ("Minimum code size: ") ;
          var_cas_ioListFileContents.dotAssign_operation (var_cas_currentAddress.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (493))) ;
          var_cas_ioListFileContents.appendCString (" instructions\n"
            "\n") ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_perform_midrange_optimizations\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_midrange_optimizations (void) {
  enterCategoryMethod__midrange_ipic_instruction__defineLabel (category_method__midrange_ipic_instruction__defineLabel, gClassInfoFor__midrange_ipic_instruction.slotID ()) ;
  enterCategoryMethod__midrange_ipic_instruction__defineLabel ((typeCategoryMethod__midrange_ipic_instruction__defineLabel) category_method__midrange_ipic_pseudo_LABEL__defineLabel, gClassInfoFor__midrange_ipic_pseudo_LABEL.slotID ()) ;
  enterCategoryMethod__midrange_ipic_JUMP__optimizeJUMP (category_method__midrange_ipic_JUMP__optimizeJUMP, gClassInfoFor__midrange_ipic_JUMP.slotID ()) ;
  enterCategoryMethod__midrange_ipic_GOTO__optimizeGOTO (category_method__midrange_ipic_GOTO__optimizeGOTO, gClassInfoFor__midrange_ipic_GOTO.slotID ()) ;
  enterCategoryMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW (category_method__midrange_ipic_instruction_literalOperation__optimizeMOVLW, gClassInfoFor__midrange_ipic_instruction_literalOperation.slotID ()) ;
  enterCategoryMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc (category_method__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc, gClassInfoFor__midrange_ipic_incDecRegisterInCondition.slotID ()) ;
  enterCategoryMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip (category_method__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip, gClassInfoFor__midrange_ipic_instruction_BitTestSkip.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_midrange_optimizations (void) {
  gDispatchTableForMethod__midrange_ipic_instruction__defineLabel.free () ;
  gDispatchTableForMethod__midrange_ipic_JUMP__optimizeJUMP.free () ;
  gDispatchTableForMethod__midrange_ipic_GOTO__optimizeGOTO.free () ;
  gDispatchTableForMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW.free () ;
  gDispatchTableForMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc.free () ;
  gDispatchTableForMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_midrange_optimizations (prologueRoutineFor_midrange_optimizations, epilogueRoutineFor_midrange_optimizations) ;

//---------------------------------------------------------------------------*

