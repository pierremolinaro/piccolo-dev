//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'midrange_optimizations.cpp'                      *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       june 5th, 2009, at 22h15'12"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "midrange_optimizations.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "midrange_optimizations.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@midrange_ipic_instruction.defineLabel'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_instruction__defineLabel (C_Compiler &,
                                const cPtr_midrange_ipic_instruction * operand_605,
                                GGS_symbolTableForOptimizations  & /* var_cas_ioRoutineSymbolTable */,
                                const GGS_uint   /* var_cas_inLineIndex */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_605 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_ipic_instruction.defineLabel' *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_ipic_instruction__defineLabel> gDispatchTableFor__midrange_ipic_instruction__defineLabel ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_ipic_instruction__defineLabel (typeCategoryMethod__midrange_ipic_instruction__defineLabel inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__midrange_ipic_instruction__defineLabel.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_ipic_instruction__defineLabel
findCategoryMethod__midrange_ipic_instruction__defineLabel (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__midrange_ipic_instruction__defineLabel result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__midrange_ipic_instruction__defineLabel.count ()) {
    result = gDispatchTableFor__midrange_ipic_instruction__defineLabel (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_ipic_instruction__defineLabel (superClassPtr) ;
      gDispatchTableFor__midrange_ipic_instruction__defineLabel.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@midrange_ipic_pseudo_LABEL.defineLabel'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_pseudo_LABEL__defineLabel (C_Compiler & inLexique,
                                const cPtr_midrange_ipic_pseudo_LABEL * operand_847,
                                GGS_symbolTableForOptimizations  & var_cas_ioRoutineSymbolTable,
                                const GGS_uint   var_cas_inLineIndex
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_847 != NULL) {
    var_cas_ioRoutineSymbolTable.modifier_insertKey (inLexique, operand_847->mLabel, var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (24)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of routine "findMidRangeFirstInstructionFromAddress"     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_findMidRangeFirstInstructionFromAddress (C_Compiler & inLexique,
                                const GGS_uint   var_cas_inLineIndex,
                                const GGS_midrange_ipic_instructionList   var_cas_inGeneratedInstructionList,
                                GGS_midrange_ipic_instruction  & var_cas_outFirstInstruction COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_findMidRangeFirstInstructionFromAddress at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_uint  var_cas_currentAddress ;
  var_cas_currentAddress = var_cas_inLineIndex ;
  var_cas_outFirstInstruction = GGS_midrange_ipic_NULL ::constructor_new (inLexique COMMA_HERE) ;
  GGS_bool var_cas_found ;
  var_cas_found = GGS_bool (false) ;
  GGS_uint _variant_1835 = var_cas_inGeneratedInstructionList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (39)) ;
  GGS_bool _condition_1835 (_variant_1835.isBuilt (), true) ;
  while (_condition_1835.isBuiltAndTrue ()) {
    _condition_1835 = ((var_cas_currentAddress).operator_strictInf (var_cas_inGeneratedInstructionList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (40)))).operator_and ((var_cas_found).operator_not ()) ;
    if (_condition_1835.isBuiltAndTrue ()) {
      if (_variant_1835.uintValue () == 0) {
        inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (49)) ;
        _condition_1835 = GGS_bool (false) ;
      }else{
        _variant_1835.decrement_operation (inLexique COMMA_HERE) ;
        { const GGS_midrange_ipic_instruction _var_1822 = var_cas_inGeneratedInstructionList.reader_mInstructionAtIndex (inLexique, var_cas_currentAddress COMMA_SOURCE_FILE_AT_LINE (42)) ; // CAST instruction
          if (_var_1822.getPtr () != NULL) {
            macroValidPointer (_var_1822.getPtr ()) ;
            if (dynamic_cast <cPtr_midrange_ipic_actualInstruction *> (_var_1822.getPtr ()) != NULL) {
              const GGS_midrange_ipic_actualInstruction var_cas_instr (_var_1822.getPtr ()) ;
              var_cas_outFirstInstruction = var_cas_instr ;
              var_cas_found = GGS_bool (true) ;
            }else{
              var_cas_currentAddress.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (47)) ;
            }
          }
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_findMidRangeFirstInstructionFromAddress\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "findMidRangeFirstInstructionOrLabelFromAddress" *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_findMidRangeFirstInstructionOrLabelFromAddress (C_Compiler & inLexique,
                                const GGS_uint   var_cas_inLineIndex,
                                const GGS_midrange_ipic_instructionList   var_cas_inGeneratedInstructionList,
                                GGS_midrange_ipic_instruction  & var_cas_outFirstInstruction,
                                GGS_stringset  & var_cas_outReachedLabelSet COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_findMidRangeFirstInstructionOrLabelFromAddress at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outReachedLabelSet = GGS_stringset ::constructor_emptySet () ;
  GGS_uint  var_cas_currentAddress ;
  var_cas_currentAddress = var_cas_inLineIndex ;
  var_cas_outFirstInstruction = GGS_midrange_ipic_NULL ::constructor_new (inLexique COMMA_HERE) ;
  GGS_bool var_cas_found ;
  var_cas_found = GGS_bool (false) ;
  GGS_uint _variant_3054 = var_cas_inGeneratedInstructionList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (66)) ;
  GGS_bool _condition_3054 (_variant_3054.isBuilt (), true) ;
  while (_condition_3054.isBuiltAndTrue ()) {
    _condition_3054 = ((var_cas_currentAddress).operator_strictInf (var_cas_inGeneratedInstructionList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (67)))).operator_and ((var_cas_found).operator_not ()) ;
    if (_condition_3054.isBuiltAndTrue ()) {
      if (_variant_3054.uintValue () == 0) {
        inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (83)) ;
        _condition_3054 = GGS_bool (false) ;
      }else{
        _variant_3054.decrement_operation (inLexique COMMA_HERE) ;
        { const GGS_midrange_ipic_instruction _var_3041 = var_cas_inGeneratedInstructionList.reader_mInstructionAtIndex (inLexique, var_cas_currentAddress COMMA_SOURCE_FILE_AT_LINE (69)) ; // CAST instruction
          if (_var_3041.getPtr () != NULL) {
            macroValidPointer (_var_3041.getPtr ()) ;
            if (dynamic_cast <cPtr_midrange_ipic_actualInstruction *> (_var_3041.getPtr ()) != NULL) {
              const GGS_midrange_ipic_actualInstruction var_cas_instr (_var_3041.getPtr ()) ;
              var_cas_outFirstInstruction = var_cas_instr ;
              var_cas_found = GGS_bool (true) ;
            }else if (dynamic_cast <cPtr_midrange_ipic_pseudo_ORG *> (_var_3041.getPtr ()) != NULL) {
              const GGS_midrange_ipic_pseudo_ORG var_cas_instr (_var_3041.getPtr ()) ;
              var_cas_outFirstInstruction = var_cas_instr ;
              var_cas_found = GGS_bool (true) ;
            }else if (typeid (cPtr_midrange_ipic_pseudo_LABEL) == typeid (* (_var_3041.getPtr ()))) {
              const GGS_midrange_ipic_pseudo_LABEL var_cas_instr (_var_3041.getPtr ()) ;
              var_cas_outFirstInstruction = var_cas_instr ;
              var_cas_outReachedLabelSet._addAssign_operation (var_cas_instr.reader_mLabel (inLexique COMMA_SOURCE_FILE_AT_LINE (78)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (78))) ;
              var_cas_currentAddress.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (79)) ;
            }else{
              var_cas_currentAddress.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (81)) ;
            }
          }
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_findMidRangeFirstInstructionOrLabelFromAddress\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@midrange_ipic_JUMP.optimizeJUMP'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_JUMP__optimizeJUMP (C_Compiler & inLexique,
                                const cPtr_midrange_ipic_JUMP * operand_3512,
                                const GGS_symbolTableForOptimizations   var_cas_inSymbolTable,
                                const GGS_uint   var_cas_inLineIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                GGS_bool & var_cas_ioOptimizationsDone
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3512 != NULL) {
    GGS_stringset  var_cas_reachedLabelSet ;
    GGS_midrange_ipic_instruction  automatic_var_0 ;
    ::routine_findMidRangeFirstInstructionOrLabelFromAddress (inLexique,  var_cas_inLineIndex.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (101)),  var_cas_ioGeneratedInstructionList,  automatic_var_0,  var_cas_reachedLabelSet COMMA_SOURCE_FILE_AT_LINE (101)) ;
    if ((var_cas_reachedLabelSet.reader_hasKey (inLexique, operand_3512->mTargetLabel.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (103)) COMMA_SOURCE_FILE_AT_LINE (103))).isBuiltAndTrue ()) {
      var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_NULL ::constructor_new (inLexique COMMA_HERE), var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (104)) ;
      var_cas_ioListFileContents.appendCString ("  line ") ;
      var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (105))) ;
      var_cas_ioListFileContents.appendCString (": JUMP branching to next instruction deleted\n") ;
    }else{
      GGS_uint  var_cas_line ;
      const GGS_symbolTableForOptimizations  _temp_4310 = var_cas_inSymbolTable ;
      if (_temp_4310.isBuilt ()) {
        _temp_4310 (HERE)->method_searchKey (inLexique, operand_3512->mTargetLabel, var_cas_line COMMA_SOURCE_FILE_AT_LINE (108)) ;
      }
      GGS_midrange_ipic_instruction  var_cas_firstInstruction ;
      ::routine_findMidRangeFirstInstructionFromAddress (inLexique,  var_cas_line.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (111)),  var_cas_ioGeneratedInstructionList,  var_cas_firstInstruction COMMA_SOURCE_FILE_AT_LINE (111)) ;
      { const GGS_midrange_ipic_instruction _var_5951 = var_cas_firstInstruction ; // CAST instruction
        if (_var_5951.getPtr () != NULL) {
          macroValidPointer (_var_5951.getPtr ()) ;
          if (typeid (cPtr_midrange_ipic_instruction_RETURN) == typeid (* (_var_5951.getPtr ()))) {
            var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_instruction_RETURN ::constructor_new (inLexique, operand_3512->mInstructionLocation COMMA_HERE), var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (115)) ;
            var_cas_ioOptimizationsDone = GGS_bool (true) ;
            var_cas_ioListFileContents.appendCString ("  line ") ;
            var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (120))) ;
            var_cas_ioListFileContents.appendCString (": JUMP branching to RETURN replaced by RETURN\n") ;
          }else if (typeid (cPtr_midrange_ipic_instruction_literalOperation) == typeid (* (_var_5951.getPtr ()))) {
            const GGS_midrange_ipic_instruction_literalOperation var_cas_literalOp (_var_5951.getPtr ()) ;
            if (((var_cas_literalOp.reader_mLiteralInstruction (inLexique COMMA_SOURCE_FILE_AT_LINE (122))).operator_isEqual (GGS_midrange_literal_instruction_opcode::constructor_RETLW (inLexique COMMA_HERE))).isBuiltAndTrue ()) {
              var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, var_cas_literalOp, var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (123)) ;
              var_cas_ioOptimizationsDone = GGS_bool (true) ;
              var_cas_ioListFileContents.appendCString ("  line ") ;
              var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (128))) ;
              var_cas_ioListFileContents.appendCString (": JUMP branching to RETLW replaced by RETLW\n") ;
            }
          }else if (typeid (cPtr_midrange_ipic_JUMP) == typeid (* (_var_5951.getPtr ()))) {
            const GGS_midrange_ipic_JUMP var_cas_jump (_var_5951.getPtr ()) ;
            if (((operand_3512->mTargetLabel).operator_isNotEqual (var_cas_jump.reader_mTargetLabel (inLexique COMMA_SOURCE_FILE_AT_LINE (131)))).isBuiltAndTrue ()) {
              var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_JUMP ::constructor_new (inLexique, operand_3512->mInstructionLocation, var_cas_jump.reader_mTargetLabel (inLexique COMMA_SOURCE_FILE_AT_LINE (133)), GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_HERE) COMMA_HERE), var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (132)) ;
              var_cas_ioOptimizationsDone = GGS_bool (true) ;
              var_cas_ioListFileContents.appendCString ("  line ") ;
              var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (137))) ;
              var_cas_ioListFileContents.appendCString (": JUMP branching to JUMP replaced by JUMP\n") ;
            }
          }else{
          }
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Virtual Table for category method '@midrange_ipic_JUMP.optimizeJUMP'    *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_ipic_JUMP__optimizeJUMP> gDispatchTableFor__midrange_ipic_JUMP__optimizeJUMP ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_ipic_JUMP__optimizeJUMP (typeCategoryMethod__midrange_ipic_JUMP__optimizeJUMP inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__midrange_ipic_JUMP__optimizeJUMP.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_ipic_JUMP__optimizeJUMP
findCategoryMethod__midrange_ipic_JUMP__optimizeJUMP (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__midrange_ipic_JUMP__optimizeJUMP result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__midrange_ipic_JUMP__optimizeJUMP.count ()) {
    result = gDispatchTableFor__midrange_ipic_JUMP__optimizeJUMP (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_ipic_JUMP__optimizeJUMP (superClassPtr) ;
      gDispatchTableFor__midrange_ipic_JUMP__optimizeJUMP.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@midrange_ipic_GOTO.optimizeGOTO'             *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_GOTO__optimizeGOTO (C_Compiler & inLexique,
                                const cPtr_midrange_ipic_GOTO * operand_6109,
                                const GGS_symbolTableForOptimizations   var_cas_inSymbolTable,
                                const GGS_uint   var_cas_inLineIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                GGS_bool & var_cas_ioOptimizationsDone
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6109 != NULL) {
    GGS_stringset  var_cas_reachedLabelSet ;
    GGS_midrange_ipic_instruction  automatic_var_1 ;
    ::routine_findMidRangeFirstInstructionOrLabelFromAddress (inLexique,  var_cas_inLineIndex.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (155)),  var_cas_ioGeneratedInstructionList,  automatic_var_1,  var_cas_reachedLabelSet COMMA_SOURCE_FILE_AT_LINE (155)) ;
    if ((var_cas_reachedLabelSet.reader_hasKey (inLexique, operand_6109->mTargetLabel.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (157)) COMMA_SOURCE_FILE_AT_LINE (157))).isBuiltAndTrue ()) {
      var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_NULL ::constructor_new (inLexique COMMA_HERE), var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (158)) ;
      var_cas_ioListFileContents.appendCString ("  line ") ;
      var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (159))) ;
      var_cas_ioListFileContents.appendCString (": GOTO branching to next instruction deleted\n") ;
    }else{
      GGS_uint  var_cas_line ;
      const GGS_symbolTableForOptimizations  _temp_6907 = var_cas_inSymbolTable ;
      if (_temp_6907.isBuilt ()) {
        _temp_6907 (HERE)->method_searchKey (inLexique, operand_6109->mTargetLabel, var_cas_line COMMA_SOURCE_FILE_AT_LINE (162)) ;
      }
      GGS_midrange_ipic_instruction  var_cas_firstInstruction ;
      ::routine_findMidRangeFirstInstructionFromAddress (inLexique,  var_cas_line.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (165)),  var_cas_ioGeneratedInstructionList,  var_cas_firstInstruction COMMA_SOURCE_FILE_AT_LINE (165)) ;
      { const GGS_midrange_ipic_instruction _var_8980 = var_cas_firstInstruction ; // CAST instruction
        if (_var_8980.getPtr () != NULL) {
          macroValidPointer (_var_8980.getPtr ()) ;
          if (typeid (cPtr_midrange_ipic_instruction_RETURN) == typeid (* (_var_8980.getPtr ()))) {
            var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_instruction_RETURN ::constructor_new (inLexique, operand_6109->mInstructionLocation COMMA_HERE), var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (169)) ;
            var_cas_ioOptimizationsDone = GGS_bool (true) ;
            var_cas_ioListFileContents.appendCString ("  line ") ;
            var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (174))) ;
            var_cas_ioListFileContents.appendCString (": GOTO branching to RETURN replaced by RETURN\n") ;
          }else if (typeid (cPtr_midrange_ipic_instruction_literalOperation) == typeid (* (_var_8980.getPtr ()))) {
            const GGS_midrange_ipic_instruction_literalOperation var_cas_literalOp (_var_8980.getPtr ()) ;
            if (((var_cas_literalOp.reader_mLiteralInstruction (inLexique COMMA_SOURCE_FILE_AT_LINE (176))).operator_isEqual (GGS_midrange_literal_instruction_opcode::constructor_RETLW (inLexique COMMA_HERE))).isBuiltAndTrue ()) {
              var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, var_cas_literalOp, var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (177)) ;
              var_cas_ioOptimizationsDone = GGS_bool (true) ;
              var_cas_ioListFileContents.appendCString ("  line ") ;
              var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (182))) ;
              var_cas_ioListFileContents.appendCString (": GOTO branching to RETLW replaced by RETLW\n") ;
            }
          }else if (typeid (cPtr_midrange_ipic_JUMP) == typeid (* (_var_8980.getPtr ()))) {
            const GGS_midrange_ipic_JUMP var_cas_jump (_var_8980.getPtr ()) ;
            if (((operand_6109->mTargetLabel).operator_isNotEqual (var_cas_jump.reader_mTargetLabel (inLexique COMMA_SOURCE_FILE_AT_LINE (185)))).isBuiltAndTrue ()) {
              var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_JUMP ::constructor_new (inLexique, operand_6109->mInstructionLocation, var_cas_jump.reader_mTargetLabel (inLexique COMMA_SOURCE_FILE_AT_LINE (187)), GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_HERE), GGS_midrange_call_goto_bit::constructor_noChange (inLexique COMMA_HERE) COMMA_HERE), var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (186)) ;
              var_cas_ioOptimizationsDone = GGS_bool (true) ;
              var_cas_ioListFileContents.appendCString ("  line ") ;
              var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (191))) ;
              var_cas_ioListFileContents.appendCString (": GOTO branching to JUMP replaced by JUMP\n") ;
            }
          }else if (typeid (cPtr_midrange_ipic_GOTO) == typeid (* (_var_8980.getPtr ()))) {
            const GGS_midrange_ipic_GOTO var_cas_goto (_var_8980.getPtr ()) ;
            if (((operand_6109->mTargetLabel).operator_isNotEqual (var_cas_goto.reader_mTargetLabel (inLexique COMMA_SOURCE_FILE_AT_LINE (194)))).isBuiltAndTrue ()) {
              var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_GOTO ::constructor_new (inLexique, operand_6109->mInstructionLocation, var_cas_goto.reader_mTargetLabel (inLexique COMMA_SOURCE_FILE_AT_LINE (196)) COMMA_HERE), var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (195)) ;
              var_cas_ioOptimizationsDone = GGS_bool (true) ;
              var_cas_ioListFileContents.appendCString ("  line ") ;
              var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (200))) ;
              var_cas_ioListFileContents.appendCString (": GOTO branching to JUMP replaced by JUMP\n") ;
            }
          }else{
          }
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Virtual Table for category method '@midrange_ipic_GOTO.optimizeGOTO'    *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_ipic_GOTO__optimizeGOTO> gDispatchTableFor__midrange_ipic_GOTO__optimizeGOTO ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_ipic_GOTO__optimizeGOTO (typeCategoryMethod__midrange_ipic_GOTO__optimizeGOTO inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__midrange_ipic_GOTO__optimizeGOTO.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_ipic_GOTO__optimizeGOTO
findCategoryMethod__midrange_ipic_GOTO__optimizeGOTO (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__midrange_ipic_GOTO__optimizeGOTO result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__midrange_ipic_GOTO__optimizeGOTO.count ()) {
    result = gDispatchTableFor__midrange_ipic_GOTO__optimizeGOTO (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_ipic_GOTO__optimizeGOTO (superClassPtr) ;
      gDispatchTableFor__midrange_ipic_GOTO__optimizeGOTO.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_ipic_instruction_literalOperation.optimizeMOVLW'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_instruction_literalOperation__optimizeMOVLW (C_Compiler & inLexique,
                                const cPtr_midrange_ipic_instruction_literalOperation * operand_10087,
                                const GGS_uint   var_cas_inLineIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                GGS_bool & var_cas_ioOptimizationsDone
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10087 != NULL) {
    if (((operand_10087->mLiteralInstruction).operator_isEqual (GGS_midrange_literal_instruction_opcode::constructor_MOVLW (inLexique COMMA_HERE))).isBuiltAndTrue ()) {
      GGS_midrange_ipic_instruction  var_cas_firstInstruction ;
      ::routine_findMidRangeFirstInstructionFromAddress (inLexique,  var_cas_inLineIndex.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (242)),  var_cas_ioGeneratedInstructionList,  var_cas_firstInstruction COMMA_SOURCE_FILE_AT_LINE (242)) ;
      { const GGS_midrange_ipic_instruction _var_11037 = var_cas_firstInstruction ; // CAST instruction
        if (_var_11037.getPtr () != NULL) {
          macroValidPointer (_var_11037.getPtr ()) ;
          if (typeid (cPtr_midrange_ipic_instruction_RETURN) == typeid (* (_var_11037.getPtr ()))) {
            var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_instruction_literalOperation ::constructor_new (inLexique, operand_10087->mInstructionLocation, GGS_midrange_literal_instruction_opcode::constructor_RETLW (inLexique COMMA_HERE), operand_10087->mLiteralValue COMMA_HERE), var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (246)) ;
            var_cas_ioOptimizationsDone = GGS_bool (true) ;
            var_cas_ioListFileContents.appendCString ("  line ") ;
            var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (251))) ;
            var_cas_ioListFileContents.appendCString (": MOVLW followed by RETURN replaced by RETLW\n") ;
          }else{
          }
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_ipic_instruction_literalOperation.optimizeMOVLW'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW> gDispatchTableFor__midrange_ipic_instruction_literalOperation__optimizeMOVLW ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW (typeCategoryMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__midrange_ipic_instruction_literalOperation__optimizeMOVLW.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW
findCategoryMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__midrange_ipic_instruction_literalOperation__optimizeMOVLW.count ()) {
    result = gDispatchTableFor__midrange_ipic_instruction_literalOperation__optimizeMOVLW (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW (superClassPtr) ;
      gDispatchTableFor__midrange_ipic_instruction_literalOperation__optimizeMOVLW.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_ipic_incDecRegisterInCondition.optimizeTestDecInc'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc (C_Compiler & inLexique,
                                const cPtr_midrange_ipic_incDecRegisterInCondition * operand_11216,
                                const GGS_symbolTableForOptimizations   var_cas_inSymbolTable,
                                const GGS_uint   var_cas_inLineIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                GGS_bool & var_cas_ioOptimizationsDone
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11216 != NULL) {
    GGS_uint  var_cas_line ;
    const GGS_symbolTableForOptimizations  _temp_11494 = var_cas_inSymbolTable ;
    if (_temp_11494.isBuilt ()) {
      _temp_11494 (HERE)->method_searchKey (inLexique, GGS_lstring ::constructor_new (inLexique, operand_11216->mTargetLabel, GGS_location (inLexique) COMMA_HERE), var_cas_line COMMA_SOURCE_FILE_AT_LINE (267)) ;
    }
    GGS_midrange_ipic_instruction  var_cas_firstInstruction ;
    ::routine_findMidRangeFirstInstructionFromAddress (inLexique,  var_cas_line.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (270)),  var_cas_ioGeneratedInstructionList,  var_cas_firstInstruction COMMA_SOURCE_FILE_AT_LINE (270)) ;
    { const GGS_midrange_ipic_instruction _var_12776 = var_cas_firstInstruction ; // CAST instruction
      if (_var_12776.getPtr () != NULL) {
        macroValidPointer (_var_12776.getPtr ()) ;
        if (typeid (cPtr_midrange_ipic_JUMP) == typeid (* (_var_12776.getPtr ()))) {
          const GGS_midrange_ipic_JUMP var_cas_jump (_var_12776.getPtr ()) ;
          var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_incDecRegisterInCondition ::constructor_new (inLexique, operand_11216->mInstructionLocation, operand_11216->mRegisterDescription, var_cas_jump.reader_mTargetLabel (inLexique COMMA_SOURCE_FILE_AT_LINE (278)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (278)), operand_11216->mIncrement, operand_11216->m_W_isDestination, operand_11216->mBranchIfZero COMMA_HERE), var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (274)) ;
          var_cas_ioOptimizationsDone = GGS_bool (true) ;
          var_cas_ioListFileContents.appendCString ("  line ") ;
          var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (286))) ;
          var_cas_ioListFileContents.appendCString (": label of ") ;
          var_cas_ioListFileContents.appendCString ("JUMP ") ;
          if ((operand_11216->mIncrement).isBuiltAndTrue ()) {
            var_cas_ioListFileContents.appendCString ("INCF ") ;
          }else{
            var_cas_ioListFileContents.appendCString ("DECF ") ;
          }
          var_cas_ioListFileContents.dotAssign_operation (operand_11216->mRegisterDescription.reader_mAssemblyString (inLexique COMMA_SOURCE_FILE_AT_LINE (293))) ;
          if ((operand_11216->m_W_isDestination).isBuiltAndTrue ()) {
            var_cas_ioListFileContents.appendCString (", W ") ;
          }
          if ((operand_11216->mBranchIfZero).isBuiltAndTrue ()) {
            var_cas_ioListFileContents.appendCString ("Z") ;
          }else{
            var_cas_ioListFileContents.appendCString ("NZ") ;
          }
          var_cas_ioListFileContents.appendCString (" branching to JUMP replaced by second JUMP label\n") ;
        }else{
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_ipic_incDecRegisterInCondition.optimizeTestDecInc'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc> gDispatchTableFor__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc (typeCategoryMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc
findCategoryMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc.count ()) {
    result = gDispatchTableFor__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc (superClassPtr) ;
      gDispatchTableFor__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@midrange_ipic_instruction_BitTestSkip.optimizeBitTestSkip'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip (C_Compiler & inLexique,
                                const cPtr_midrange_ipic_instruction_BitTestSkip * operand_12943,
                                const GGS_uint   var_cas_inLineIndex,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents,
                                GGS_bool & var_cas_ioOptimizationsDone
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12943 != NULL) {
    GGS_string var_cas_jumpLabel ;
    var_cas_jumpLabel = GGS_string ("") ;
    GGS_bool var_cas_ok ;
    var_cas_ok = GGS_bool (false) ;
    { const GGS_midrange_ipic_instruction _var_13392 = var_cas_ioGeneratedInstructionList.reader_mInstructionAtIndex (inLexique, var_cas_inLineIndex.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (318)) COMMA_SOURCE_FILE_AT_LINE (318)) ; // CAST instruction
      if (_var_13392.getPtr () != NULL) {
        macroValidPointer (_var_13392.getPtr ()) ;
        if (typeid (cPtr_midrange_ipic_JUMP) == typeid (* (_var_13392.getPtr ()))) {
          const GGS_midrange_ipic_JUMP var_cas_jump (_var_13392.getPtr ()) ;
          var_cas_jumpLabel = var_cas_jump.reader_mTargetLabel (inLexique COMMA_SOURCE_FILE_AT_LINE (320)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (320)) ;
          var_cas_ok = GGS_bool (true) ;
        }else{
        }
      }
    }
    if ((var_cas_ok).isBuiltAndTrue ()) {
      { const GGS_midrange_ipic_instruction _var_13748 = var_cas_ioGeneratedInstructionList.reader_mInstructionAtIndex (inLexique, var_cas_inLineIndex.add_operation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (326)) COMMA_SOURCE_FILE_AT_LINE (326)) ; // CAST instruction
        if (_var_13748.getPtr () != NULL) {
          macroValidPointer (_var_13748.getPtr ()) ;
          if (dynamic_cast <cPtr_midrange_ipic_actualInstruction *> (_var_13748.getPtr ()) != NULL) {
            const GGS_midrange_ipic_actualInstruction var_cas_instruction (_var_13748.getPtr ()) ;
            GGS_uint  var_cas_instructionLength ;
            const GGS_midrange_ipic_actualInstruction  _temp_13652 = var_cas_instruction ;
            if (_temp_13652.isBuilt ()) {
              _temp_13652 (HERE)->method_instructionLength (inLexique, var_cas_instructionLength COMMA_SOURCE_FILE_AT_LINE (328)) ;
            }
            var_cas_ok = (var_cas_instructionLength).operator_isEqual (GGS_uint (1U)) ;
          }else{
            var_cas_ok = GGS_bool (false) ;
          }
        }
      }
    }
    if ((var_cas_ok).isBuiltAndTrue ()) {
      GGS_midrange_ipic_instruction  var_cas_thirdInstruction ;
      var_cas_thirdInstruction = GGS_midrange_ipic_NULL ::constructor_new (inLexique COMMA_HERE) ;
      GGS_stringset  var_cas_reachedLabelSet ;
      GGS_midrange_ipic_instruction  automatic_var_2 ;
      ::routine_findMidRangeFirstInstructionOrLabelFromAddress (inLexique,  var_cas_inLineIndex.add_operation (inLexique, GGS_uint (3U) COMMA_SOURCE_FILE_AT_LINE (338)),  var_cas_ioGeneratedInstructionList,  automatic_var_2,  var_cas_reachedLabelSet COMMA_SOURCE_FILE_AT_LINE (338)) ;
      var_cas_ok = var_cas_reachedLabelSet.reader_hasKey (inLexique, var_cas_jumpLabel COMMA_SOURCE_FILE_AT_LINE (339)) ;
    }
    if ((var_cas_ok).isBuiltAndTrue ()) {
      var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_instruction_BitTestSkip ::constructor_new (inLexique, operand_12943->mInstructionLocation, (operand_12943->mSkipIfSet).operator_not (), operand_12943->mRegisterDescription, operand_12943->mBitNumber COMMA_HERE), var_cas_inLineIndex COMMA_SOURCE_FILE_AT_LINE (344)) ;
      var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, var_cas_ioGeneratedInstructionList.reader_mInstructionAtIndex (inLexique, var_cas_inLineIndex.add_operation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (355)) COMMA_SOURCE_FILE_AT_LINE (355)), var_cas_inLineIndex.add_operation (inLexique, GGS_uint (1U) COMMA_SOURCE_FILE_AT_LINE (356)) COMMA_SOURCE_FILE_AT_LINE (354)) ;
      var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_NULL ::constructor_new (inLexique COMMA_HERE), var_cas_inLineIndex.add_operation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (361)) COMMA_SOURCE_FILE_AT_LINE (359)) ;
      var_cas_ioOptimizationsDone = GGS_bool (true) ;
      var_cas_ioListFileContents.appendCString ("  lines ") ;
      var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (366))) ;
      var_cas_ioListFileContents.appendCString (" to ") ;
      var_cas_ioListFileContents.dotAssign_operation (var_cas_inLineIndex.add_operation (inLexique, GGS_uint (2U) COMMA_SOURCE_FILE_AT_LINE (366)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (366))) ;
      var_cas_ioListFileContents.appendCString (" bit test skip, following by a JUMP skipping next instruction, is complemented\n") ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@midrange_ipic_instruction_BitTestSkip.optimizeBitTestSkip'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip> gDispatchTableFor__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip (typeCategoryMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip
findCategoryMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip.count ()) {
    result = gDispatchTableFor__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip (superClassPtr) ;
      gDispatchTableFor__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "perform_midrange_optimizations"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_perform_midrange_optimizations (C_Compiler & inLexique,
                                GGS_midrange_ipic_instructionList  & var_cas_ioGeneratedInstructionList,
                                GGS_string & var_cas_ioListFileContents COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_perform_midrange_optimizations at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_ioListFileContents.dotAssign_operation (GGS_string ("").reader_stringByLeftAndRightPadding (inLexique, GGS_uint (79U), GGS_char (TO_UNICODE ('*')) COMMA_SOURCE_FILE_AT_LINE (382))) ;
  var_cas_ioListFileContents.appendCString ("\n") ;
  var_cas_ioListFileContents.appendCString ("*") ;
  var_cas_ioListFileContents.dotAssign_operation (GGS_string ("CODE OPTIMIZATION").reader_stringByLeftAndRightPadding (inLexique, GGS_uint (77U), GGS_char (TO_UNICODE (' ')) COMMA_SOURCE_FILE_AT_LINE (383))) ;
  var_cas_ioListFileContents.appendCString ("*\n") ;
  var_cas_ioListFileContents.dotAssign_operation (GGS_string ("").reader_stringByLeftAndRightPadding (inLexique, GGS_uint (79U), GGS_char (TO_UNICODE ('*')) COMMA_SOURCE_FILE_AT_LINE (384))) ;
  var_cas_ioListFileContents.appendCString ("\n"
    "\n") ;
  GGS_symbolTableForOptimizations  var_cas_symbolTable ;
  var_cas_symbolTable = GGS_symbolTableForOptimizations ::constructor_emptyMap (inLexique COMMA_HERE) ;
  {
      GGS_uint var_cas_lineIndex (true, 0) ;
    GGS_midrange_ipic_instructionList::cEnumerator enumerator_16104 (var_cas_ioGeneratedInstructionList, true) ;
    const GGS_midrange_ipic_instructionList::cElement * operand_16104 = NULL ;
    while (((operand_16104 = enumerator_16104.nextObject ()))) {
      macroValidPointer (operand_16104) ;
      const GGS_midrange_ipic_instruction  _temp_16147 = operand_16104->mInstruction ;
      if (_temp_16147.isBuilt ()) {
        typeCategoryMethod__midrange_ipic_instruction__defineLabel _method = findCategoryMethod__midrange_ipic_instruction__defineLabel (_temp_16147._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (inLexique, _temp_16147 (HERE), var_cas_symbolTable, var_cas_lineIndex COMMA_SOURCE_FILE_AT_LINE (388)) ;
        }
      }
      var_cas_lineIndex.mValue ++ ;
    }
  }
  GGS_bool var_cas_optimizationsDone ;
  var_cas_optimizationsDone = GGS_bool (true) ;
  GGS_uint  var_cas_iteration ;
  var_cas_iteration = GGS_uint (0U) ;
  GGS_uint _variant_19857 = var_cas_ioGeneratedInstructionList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (393)) ;
  GGS_bool _condition_19857 (_variant_19857.isBuilt (), true) ;
  while (_condition_19857.isBuiltAndTrue ()) {
    _condition_19857 = var_cas_optimizationsDone ;
    if (_condition_19857.isBuiltAndTrue ()) {
      if (_variant_19857.uintValue () == 0) {
        inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (461)) ;
        _condition_19857 = GGS_bool (false) ;
      }else{
        _variant_19857.decrement_operation (inLexique COMMA_HERE) ;
        var_cas_optimizationsDone = GGS_bool (false) ;
        var_cas_iteration.increment_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (397)) ;
        var_cas_ioListFileContents.appendCString ("Pass ") ;
        var_cas_ioListFileContents.dotAssign_operation (var_cas_iteration.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (398))) ;
        var_cas_ioListFileContents.appendCString (":\n") ;
        {
            GGS_uint var_cas_idx (true, 0) ;
          GGS_midrange_ipic_instructionList::cEnumerator enumerator_16567 (var_cas_ioGeneratedInstructionList, true) ;
          const GGS_midrange_ipic_instructionList::cElement * operand_16567 = NULL ;
          while (((operand_16567 = enumerator_16567.nextObject ()))) {
            macroValidPointer (operand_16567) ;
            { const GGS_midrange_ipic_instruction _var_17707 = operand_16567->mInstruction ; // CAST instruction
              if (_var_17707.getPtr () != NULL) {
                macroValidPointer (_var_17707.getPtr ()) ;
                if (typeid (cPtr_midrange_ipic_GOTO) == typeid (* (_var_17707.getPtr ()))) {
                  const GGS_midrange_ipic_GOTO var_cas_ipic_GOTO (_var_17707.getPtr ()) ;
                  const GGS_midrange_ipic_GOTO  _temp_16680 = var_cas_ipic_GOTO ;
                  if (_temp_16680.isBuilt ()) {
                    typeCategoryMethod__midrange_ipic_GOTO__optimizeGOTO _method = findCategoryMethod__midrange_ipic_GOTO__optimizeGOTO (_temp_16680._galgasObjectRunTimeInfo ()) ;
                    if (_method != NULL) {
                      _method (inLexique, _temp_16680 (HERE), var_cas_symbolTable, var_cas_idx, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_optimizationsDone COMMA_SOURCE_FILE_AT_LINE (403)) ;
                    }
                  }
                }else if (typeid (cPtr_midrange_ipic_JUMP) == typeid (* (_var_17707.getPtr ()))) {
                  const GGS_midrange_ipic_JUMP var_cas_ipic_JUMP (_var_17707.getPtr ()) ;
                  const GGS_midrange_ipic_JUMP  _temp_16850 = var_cas_ipic_JUMP ;
                  if (_temp_16850.isBuilt ()) {
                    typeCategoryMethod__midrange_ipic_JUMP__optimizeJUMP _method = findCategoryMethod__midrange_ipic_JUMP__optimizeJUMP (_temp_16850._galgasObjectRunTimeInfo ()) ;
                    if (_method != NULL) {
                      _method (inLexique, _temp_16850 (HERE), var_cas_symbolTable, var_cas_idx, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_optimizationsDone COMMA_SOURCE_FILE_AT_LINE (405)) ;
                    }
                  }
                }else if (typeid (cPtr_midrange_ipic_instruction_literalOperation) == typeid (* (_var_17707.getPtr ()))) {
                  const GGS_midrange_ipic_instruction_literalOperation var_cas_ipic_literal (_var_17707.getPtr ()) ;
                  const GGS_midrange_ipic_instruction_literalOperation  _temp_17210 = var_cas_ipic_literal ;
                  if (_temp_17210.isBuilt ()) {
                    typeCategoryMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW _method = findCategoryMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW (_temp_17210._galgasObjectRunTimeInfo ()) ;
                    if (_method != NULL) {
                      _method (inLexique, _temp_17210 (HERE), var_cas_idx, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_optimizationsDone COMMA_SOURCE_FILE_AT_LINE (409)) ;
                    }
                  }
                }else if (typeid (cPtr_midrange_ipic_incDecRegisterInCondition) == typeid (* (_var_17707.getPtr ()))) {
                  const GGS_midrange_ipic_incDecRegisterInCondition var_cas_ipic_decInc (_var_17707.getPtr ()) ;
                  const GGS_midrange_ipic_incDecRegisterInCondition  _temp_17398 = var_cas_ipic_decInc ;
                  if (_temp_17398.isBuilt ()) {
                    typeCategoryMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc _method = findCategoryMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc (_temp_17398._galgasObjectRunTimeInfo ()) ;
                    if (_method != NULL) {
                      _method (inLexique, _temp_17398 (HERE), var_cas_symbolTable, var_cas_idx, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_optimizationsDone COMMA_SOURCE_FILE_AT_LINE (411)) ;
                    }
                  }
                }else if (typeid (cPtr_midrange_ipic_instruction_BitTestSkip) == typeid (* (_var_17707.getPtr ()))) {
                  const GGS_midrange_ipic_instruction_BitTestSkip var_cas_ipic_bitTestSkip (_var_17707.getPtr ()) ;
                  const GGS_midrange_ipic_instruction_BitTestSkip  _temp_17608 = var_cas_ipic_bitTestSkip ;
                  if (_temp_17608.isBuilt ()) {
                    typeCategoryMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip _method = findCategoryMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip (_temp_17608._galgasObjectRunTimeInfo ()) ;
                    if (_method != NULL) {
                      _method (inLexique, _temp_17608 (HERE), var_cas_idx, var_cas_ioGeneratedInstructionList, var_cas_ioListFileContents, var_cas_optimizationsDone COMMA_SOURCE_FILE_AT_LINE (413)) ;
                    }
                  }
                }else{
                }
              }
            }
            var_cas_idx.mValue ++ ;
          }
        }
        GGS_stringset  var_cas_referencedLabels ;
        var_cas_referencedLabels = GGS_stringset ::constructor_emptySet () ;
        {
          GGS_midrange_ipic_instructionList::cEnumerator enumerator_17852 (var_cas_ioGeneratedInstructionList, true) ;
          const GGS_midrange_ipic_instructionList::cElement * operand_17852 = NULL ;
          while (((operand_17852 = enumerator_17852.nextObject ()))) {
            macroValidPointer (operand_17852) ;
            const GGS_midrange_ipic_instruction  _temp_17896 = operand_17852->mInstruction ;
            if (_temp_17896.isBuilt ()) {
              _temp_17896 (HERE)->method_enterReferencedLabel (inLexique, var_cas_referencedLabels COMMA_SOURCE_FILE_AT_LINE (420)) ;
            }
          }
        }
        {
          GGS_symbolTableForOptimizations::cEnumerator enumerator_17960 (var_cas_symbolTable, true) ;
          const GGS_symbolTableForOptimizations::cElement * operand_17960 = NULL ;
          while (((operand_17960 = enumerator_17960.nextObject ()))) {
            macroValidPointer (operand_17960) ;
            if (((var_cas_referencedLabels.reader_hasKey (inLexique, operand_17960->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (423)) COMMA_SOURCE_FILE_AT_LINE (423))).operator_not ()).isBuiltAndTrue ()) {
              GGS_uint  var_cas_definitionLine ;
              const GGS_symbolTableForOptimizations  _temp_18075 = var_cas_symbolTable ;
              if (_temp_18075.isBuilt ()) {
                _temp_18075 (HERE)->method_searchKey (inLexique, operand_17960->mKey, var_cas_definitionLine COMMA_SOURCE_FILE_AT_LINE (424)) ;
              }
              var_cas_ioListFileContents.appendCString ("  line ") ;
              var_cas_ioListFileContents.dotAssign_operation (var_cas_definitionLine.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (425))) ;
              var_cas_ioListFileContents.appendCString (": unreferenced label '") ;
              var_cas_ioListFileContents.dotAssign_operation (operand_17960->mKey) ;
              var_cas_ioListFileContents.appendCString ("' is deleted\n") ;
              var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_NULL ::constructor_new (inLexique COMMA_HERE), var_cas_definitionLine COMMA_SOURCE_FILE_AT_LINE (426)) ;
              GGS_uint  automatic_var_3 ;
              var_cas_symbolTable.modifier_removeKey (inLexique, operand_17960->mKey, automatic_var_3 COMMA_SOURCE_FILE_AT_LINE (427)) ;
            }
          }
        }
        GGS_bool var_cas_reachable ;
        var_cas_reachable = GGS_bool (true) ;
        GGS_bool var_cas_skippingInstruction ;
        var_cas_skippingInstruction = GGS_bool (false) ;
        GGS_bool var_cas_previousWasSkippingInstruction ;
        var_cas_previousWasSkippingInstruction = GGS_bool (false) ;
        {
            GGS_uint var_cas_idx (true, 0) ;
          GGS_midrange_ipic_instructionList::cEnumerator enumerator_18595 (var_cas_ioGeneratedInstructionList, true) ;
          const GGS_midrange_ipic_instructionList::cElement * operand_18595 = NULL ;
          while (((operand_18595 = enumerator_18595.nextObject ()))) {
            macroValidPointer (operand_18595) ;
            if (((var_cas_reachable).operator_or (var_cas_previousWasSkippingInstruction)).isBuiltAndTrue ()) {
              const GGS_midrange_ipic_instruction  _temp_18711 = operand_18595->mInstruction ;
              if (_temp_18711.isBuilt ()) {
                _temp_18711 (HERE)->method_nextInstructionIsReachable (inLexique, var_cas_reachable COMMA_SOURCE_FILE_AT_LINE (436)) ;
              }
              var_cas_previousWasSkippingInstruction = var_cas_skippingInstruction ;
              const GGS_midrange_ipic_instruction  _temp_18835 = operand_18595->mInstruction ;
              if (_temp_18835.isBuilt ()) {
                _temp_18835 (HERE)->method_isSkippingInstruction (inLexique, var_cas_skippingInstruction COMMA_SOURCE_FILE_AT_LINE (438)) ;
              }
            }else{
              GGS_bool var_cas_isLABELorORG ;
              const GGS_midrange_ipic_instruction  _temp_18928 = operand_18595->mInstruction ;
              if (_temp_18928.isBuilt ()) {
                _temp_18928 (HERE)->method_isLABELorORG (inLexique, var_cas_isLABELorORG COMMA_SOURCE_FILE_AT_LINE (440)) ;
              }
              GGS_bool var_cas_isNULL ;
              const GGS_midrange_ipic_instruction  _temp_18990 = operand_18595->mInstruction ;
              if (_temp_18990.isBuilt ()) {
                _temp_18990 (HERE)->method_isNULL (inLexique, var_cas_isNULL COMMA_SOURCE_FILE_AT_LINE (441)) ;
              }
              if ((((var_cas_isLABELorORG).operator_not ()).operator_and ((var_cas_isNULL).operator_not ())).isBuiltAndTrue ()) {
                var_cas_ioListFileContents.appendCString ("  line ") ;
                var_cas_ioListFileContents.dotAssign_operation (var_cas_idx.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (443))) ;
                var_cas_ioListFileContents.appendCString (": unreachable instruction is deleted\n") ;
                var_cas_ioGeneratedInstructionList.modifier_setMInstructionAtIndex (inLexique, GGS_midrange_ipic_NULL ::constructor_new (inLexique COMMA_HERE), var_cas_idx COMMA_SOURCE_FILE_AT_LINE (444)) ;
              }else if ((var_cas_isLABELorORG).isBuiltAndTrue ()) {
                var_cas_reachable = GGS_bool (true) ;
                var_cas_previousWasSkippingInstruction = GGS_bool (false) ;
                var_cas_skippingInstruction = GGS_bool (false) ;
              }
            }
            var_cas_idx.mValue ++ ;
          }
        }
        if (((var_cas_optimizationsDone).operator_not ()).isBuiltAndTrue ()) {
          var_cas_ioListFileContents.appendCString ("  No optimization\n"
            "\n") ;
          GGS_uint  var_cas_currentAddress ;
          var_cas_currentAddress = GGS_uint (0U) ;
          {
            GGS_midrange_ipic_instructionList::cEnumerator enumerator_19655 (var_cas_ioGeneratedInstructionList, true) ;
            const GGS_midrange_ipic_instructionList::cElement * operand_19655 = NULL ;
            while (((operand_19655 = enumerator_19655.nextObject ()))) {
              macroValidPointer (operand_19655) ;
              const GGS_midrange_ipic_instruction  _temp_19698 = operand_19655->mInstruction ;
              if (_temp_19698.isBuilt ()) {
                _temp_19698 (HERE)->method_setCurrentAddress (inLexique, var_cas_currentAddress COMMA_SOURCE_FILE_AT_LINE (457)) ;
              }
            }
          }
          var_cas_ioListFileContents.appendCString ("Minimum code size: ") ;
          var_cas_ioListFileContents.dotAssign_operation (var_cas_currentAddress.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (459))) ;
          var_cas_ioListFileContents.appendCString (" instructions\n"
            "\n") ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_perform_midrange_optimizations\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_midrange_optimizations (void) {
 enterCategoryMethod__midrange_ipic_instruction__defineLabel (category_method__midrange_ipic_instruction__defineLabel, gClassInfoFor__midrange_ipic_instruction.slotID ()) ;
 enterCategoryMethod__midrange_ipic_instruction__defineLabel ((typeCategoryMethod__midrange_ipic_instruction__defineLabel) category_method__midrange_ipic_pseudo_LABEL__defineLabel, gClassInfoFor__midrange_ipic_pseudo_LABEL.slotID ()) ;
 enterCategoryMethod__midrange_ipic_JUMP__optimizeJUMP (category_method__midrange_ipic_JUMP__optimizeJUMP, gClassInfoFor__midrange_ipic_JUMP.slotID ()) ;
 enterCategoryMethod__midrange_ipic_GOTO__optimizeGOTO (category_method__midrange_ipic_GOTO__optimizeGOTO, gClassInfoFor__midrange_ipic_GOTO.slotID ()) ;
 enterCategoryMethod__midrange_ipic_instruction_literalOperation__optimizeMOVLW (category_method__midrange_ipic_instruction_literalOperation__optimizeMOVLW, gClassInfoFor__midrange_ipic_instruction_literalOperation.slotID ()) ;
 enterCategoryMethod__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc (category_method__midrange_ipic_incDecRegisterInCondition__optimizeTestDecInc, gClassInfoFor__midrange_ipic_incDecRegisterInCondition.slotID ()) ;
 enterCategoryMethod__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip (category_method__midrange_ipic_instruction_BitTestSkip__optimizeBitTestSkip, gClassInfoFor__midrange_ipic_instruction_BitTestSkip.slotID ()) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogueAction prologueEpilogueObjectFor_midrange_optimizations (prologueRoutineFor_midrange_optimizations,
                                   NULL) ;

//---------------------------------------------------------------------------*

