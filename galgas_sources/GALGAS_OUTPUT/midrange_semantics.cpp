//-----------------------------------------------------------------------------*
//                                                                             *
//                       File 'midrange_semantics.cpp'                         *
//                         Generated by version 2.5.8                          *
//                        may 19th, 2014, at 19h44'40"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "midrange_semantics.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "piccolo_options.h"
#include "piccoloDevice_grammar.h"

//-----------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "midrange_semantics.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//-----------------------------------------------------------------------------*

cMapElement_midrange_5F_declaredRoutineMap::cMapElement_midrange_5F_declaredRoutineMap (const GALGAS_lstring & inKey
                                                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_midrange_5F_declaredRoutineMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_midrange_5F_declaredRoutineMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_midrange_5F_declaredRoutineMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_midrange_5F_declaredRoutineMap::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_midrange_5F_declaredRoutineMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_midrange_5F_declaredRoutineMap * operand = (cMapElement_midrange_5F_declaredRoutineMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_midrange_5F_declaredRoutineMap::GALGAS_midrange_5F_declaredRoutineMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_midrange_5F_declaredRoutineMap::GALGAS_midrange_5F_declaredRoutineMap (const GALGAS_midrange_5F_declaredRoutineMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_midrange_5F_declaredRoutineMap & GALGAS_midrange_5F_declaredRoutineMap::operator = (const GALGAS_midrange_5F_declaredRoutineMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_midrange_5F_declaredRoutineMap GALGAS_midrange_5F_declaredRoutineMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_midrange_5F_declaredRoutineMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_midrange_5F_declaredRoutineMap GALGAS_midrange_5F_declaredRoutineMap::constructor_mapWithMapToOverride (const GALGAS_midrange_5F_declaredRoutineMap & inMapToOverride
                                                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_declaredRoutineMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_midrange_5F_declaredRoutineMap GALGAS_midrange_5F_declaredRoutineMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_midrange_5F_declaredRoutineMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_midrange_5F_declaredRoutineMap::modifier_insertKey (GALGAS_lstring inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cMapElement_midrange_5F_declaredRoutineMap * p = NULL ;
  macroMyNew (p, cMapElement_midrange_5F_declaredRoutineMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' routine is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_midrange_5F_declaredRoutineMap_searchKey = "the '%K' routine is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_midrange_5F_declaredRoutineMap::method_searchKey (GALGAS_lstring inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_midrange_5F_declaredRoutineMap * p = (const cMapElement_midrange_5F_declaredRoutineMap *) performSearch (inKey,
                                                                                                                               inCompiler,
                                                                                                                               kSearchErrorMessage_midrange_5F_declaredRoutineMap_searchKey
                                                                                                                               COMMA_THERE) ;
  if (NULL == p) {
  }else{
    macroValidSharedObject (p, const cMapElement_midrange_5F_declaredRoutineMap) ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_midrange_5F_declaredRoutineMap * GALGAS_midrange_5F_declaredRoutineMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                              const GALGAS_string & inKey
                                                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_midrange_5F_declaredRoutineMap * result = (cMapElement_midrange_5F_declaredRoutineMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_midrange_5F_declaredRoutineMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_midrange_5F_declaredRoutineMap * GALGAS_midrange_5F_declaredRoutineMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                                 const GALGAS_lstring & inKey
                                                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_midrange_5F_declaredRoutineMap_searchKey COMMA_THERE) ;
  cMapElement_midrange_5F_declaredRoutineMap * result = (cMapElement_midrange_5F_declaredRoutineMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_midrange_5F_declaredRoutineMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_midrange_5F_declaredRoutineMap::cEnumerator_midrange_5F_declaredRoutineMap (const GALGAS_midrange_5F_declaredRoutineMap & inEnumeratedObject,
                                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_midrange_5F_declaredRoutineMap_2E_element cEnumerator_midrange_5F_declaredRoutineMap::current (LOCATION_ARGS) const {
  const cMapElement_midrange_5F_declaredRoutineMap * p = (const cMapElement_midrange_5F_declaredRoutineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_midrange_5F_declaredRoutineMap) ;
  return GALGAS_midrange_5F_declaredRoutineMap_2E_element (p->mAttribute_lkey) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_midrange_5F_declaredRoutineMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                      @midrange_declaredRoutineMap type                      *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_midrange_5F_declaredRoutineMap ("midrange_declaredRoutineMap",
                                                       NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_midrange_5F_declaredRoutineMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_midrange_5F_declaredRoutineMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_midrange_5F_declaredRoutineMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_midrange_5F_declaredRoutineMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_midrange_5F_declaredRoutineMap GALGAS_midrange_5F_declaredRoutineMap::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_declaredRoutineMap result ;
  const GALGAS_midrange_5F_declaredRoutineMap * p = (const GALGAS_midrange_5F_declaredRoutineMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_midrange_5F_declaredRoutineMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("midrange_declaredRoutineMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                        Routine 'midrange_analyze'                         *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_midrange_5F_analyze (const GALGAS_midrange_5F_model constinArgument_inPiccoloModel,
                                  const GALGAS_string constinArgument_inSourceFileName,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_sourceFileBaseName = constinArgument_inSourceFileName.reader_lastPathComponent (SOURCE_FILE_AT_LINE (28)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (28)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_sourceFileBaseName.objectCompare (constinArgument_inPiccoloModel.reader_mProgramName (SOURCE_FILE_AT_LINE (29)).reader_string (SOURCE_FILE_AT_LINE (29)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (constinArgument_inPiccoloModel.reader_mProgramName (SOURCE_FILE_AT_LINE (30)).reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the program name ('").operator_concat (constinArgument_inPiccoloModel.reader_mProgramName (SOURCE_FILE_AT_LINE (30)).reader_string (SOURCE_FILE_AT_LINE (30)) COMMA_SOURCE_FILE_AT_LINE (30)).operator_concat (GALGAS_string ("') should be identical to the file base name '") COMMA_SOURCE_FILE_AT_LINE (30)).operator_concat (var_sourceFileBaseName COMMA_SOURCE_FILE_AT_LINE (31)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (31)) COMMA_SOURCE_FILE_AT_LINE (30)) ;
  }
  GALGAS_string var_listFileContents = GALGAS_string::makeEmptyString () ;
  GALGAS_piccoloDeviceModel var_piccoloDeviceModel ;
  {
  routine_parseDeviceDefinition (constinArgument_inPiccoloModel.reader_mDeviceName (SOURCE_FILE_AT_LINE (36)), var_piccoloDeviceModel, inCompiler COMMA_SOURCE_FILE_AT_LINE (36)) ;
  }
  if (var_piccoloDeviceModel.reader_mProcessorType (SOURCE_FILE_AT_LINE (37)).isValid ()) {
    switch (var_piccoloDeviceModel.reader_mProcessorType (SOURCE_FILE_AT_LINE (37)).enumValue ()) {
    case GALGAS_processorType::kNotBuilt:
      break ;
    case GALGAS_processorType::kEnum_midrange: {
      } break ;
    case GALGAS_processorType::kEnum_pic_31__38__5F__36__30_: case GALGAS_processorType::kEnum_pic_31__38__5F__38__30_: {
      GALGAS_location location_2 (constinArgument_inPiccoloModel.reader_mDeviceName (SOURCE_FILE_AT_LINE (39)).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("a pic18 device is not accepted here : only a mid-range device") COMMA_SOURCE_FILE_AT_LINE (39)) ;
      } break ;
    case GALGAS_processorType::kEnum_baseline: {
      GALGAS_location location_3 (constinArgument_inPiccoloModel.reader_mDeviceName (SOURCE_FILE_AT_LINE (40)).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("a baseline device is not accepted here : only a mid-range device") COMMA_SOURCE_FILE_AT_LINE (40)) ;
      } break ;
    }
  }
  GALGAS_bool var_hasInterrupt = GALGAS_bool (false) ;
  cEnumerator_midrange_5F_interruptDefinitionList enumerator_2300 (constinArgument_inPiccoloModel.reader_mInterruptDefinitionList (SOURCE_FILE_AT_LINE (44)), kEnumeration_up) ;
  while (enumerator_2300.hasCurrentObject ()) {
    const enumGalgasBool test_4 = var_hasInterrupt.boolEnum () ;
    if (kBoolTrue == test_4) {
      inCompiler->emitSemanticError (enumerator_2300.current_mInterruptLocation (HERE), GALGAS_string ("only one interrupt routine can be defined") COMMA_SOURCE_FILE_AT_LINE (46)) ;
    }
    var_hasInterrupt = GALGAS_bool (true) ;
    enumerator_2300.gotoNextObject () ;
  }
  GALGAS_actualConfigurationMap var_actualConfigurationMap ;
  {
  routine_buildConfig (var_piccoloDeviceModel.reader_mConfigRegisterMap (SOURCE_FILE_AT_LINE (53)), constinArgument_inPiccoloModel.reader_mConfigDefinitionList (SOURCE_FILE_AT_LINE (54)), var_listFileContents, var_actualConfigurationMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (52)) ;
  }
  GALGAS_ramBankTable var_ramBank = var_piccoloDeviceModel.reader_mRamBankTable (SOURCE_FILE_AT_LINE (59)) ;
  GALGAS_registerTable var_registerTable = var_piccoloDeviceModel.reader_mRegisterTable (SOURCE_FILE_AT_LINE (60)) ;
  GALGAS_declaredByteMap var_declaredByteMap ;
  {
  routine_analyze_5F_ram_5F_sections (GALGAS_string ("DECLARED VARIABLES"), constinArgument_inPiccoloModel.reader_mRamDefinitionList (SOURCE_FILE_AT_LINE (63)), var_ramBank, var_piccoloDeviceModel.reader_mRegisterTable (SOURCE_FILE_AT_LINE (65)), var_listFileContents, var_registerTable, var_declaredByteMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (61)) ;
  }
  GALGAS_stringset var_usedRegisters = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (71)) ;
  GALGAS_midrange_5F_intermediate_5F_instructionList var_generatedInstructionList ;
  {
  routine_build_5F_midrange_5F_assembly_5F_instruction_5F_list (var_piccoloDeviceModel.reader_mRomSize (SOURCE_FILE_AT_LINE (73)).reader_uint (SOURCE_FILE_AT_LINE (73)).add_operation (GALGAS_uint ((uint32_t) 2047U), inCompiler COMMA_SOURCE_FILE_AT_LINE (73)).divide_operation (GALGAS_uint ((uint32_t) 2048U), inCompiler COMMA_SOURCE_FILE_AT_LINE (73)), var_piccoloDeviceModel.reader_mBankCount (SOURCE_FILE_AT_LINE (74)).reader_uint (SOURCE_FILE_AT_LINE (74)), var_piccoloDeviceModel.reader_mRomSize (SOURCE_FILE_AT_LINE (75)).reader_uint (SOURCE_FILE_AT_LINE (75)).reader_sint (inCompiler COMMA_SOURCE_FILE_AT_LINE (75)), var_piccoloDeviceModel.mAttribute_mSharedBankName, var_registerTable, constinArgument_inPiccoloModel, var_hasInterrupt, var_generatedInstructionList, var_listFileContents, var_usedRegisters, inCompiler COMMA_SOURCE_FILE_AT_LINE (72)) ;
  }
  GALGAS_stringset var_usedRoutineSet = function_midrange_5F_computeUsedRoutines (constinArgument_inPiccoloModel.mAttribute_mInterruptDefinitionList, constinArgument_inPiccoloModel.mAttribute_mRoutineDefinitionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (85)) ;
  GALGAS_midrange_5F_declaredRoutineMap var_declaredRoutineMap = GALGAS_midrange_5F_declaredRoutineMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (89)) ;
  cEnumerator_midrange_5F_routineDefinitionList enumerator_3992 (constinArgument_inPiccoloModel.mAttribute_mRoutineDefinitionList, kEnumeration_up) ;
  while (enumerator_3992.hasCurrentObject ()) {
    {
    var_declaredRoutineMap.modifier_insertKey (enumerator_3992.current_mRoutineName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (91)) ;
    }
    enumerator_3992.gotoNextObject () ;
  }
  GALGAS_stringset var_unusedRoutineDeclarationUnicity = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (94)) ;
  cEnumerator_lstringlist enumerator_4221 (constinArgument_inPiccoloModel.mAttribute_mUnusedRoutineList, kEnumeration_up) ;
  while (enumerator_4221.hasCurrentObject ()) {
    const enumGalgasBool test_5 = var_declaredRoutineMap.reader_hasKey (enumerator_4221.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (96)).operator_not (SOURCE_FILE_AT_LINE (96)).boolEnum () ;
    if (kBoolTrue == test_5) {
      GALGAS_location location_6 (enumerator_4221.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_6, GALGAS_string ("the '").operator_concat (enumerator_4221.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (97)) COMMA_SOURCE_FILE_AT_LINE (97)).operator_concat (GALGAS_string ("' routine is not declared") COMMA_SOURCE_FILE_AT_LINE (97)) COMMA_SOURCE_FILE_AT_LINE (97)) ;
    }else if (kBoolFalse == test_5) {
      const enumGalgasBool test_7 = var_unusedRoutineDeclarationUnicity.reader_hasKey (enumerator_4221.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (98)).boolEnum () ;
      if (kBoolTrue == test_7) {
        GALGAS_location location_8 (enumerator_4221.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticWarning (location_8, GALGAS_string ("the '").operator_concat (enumerator_4221.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (99)) COMMA_SOURCE_FILE_AT_LINE (99)).operator_concat (GALGAS_string ("' routine is already declared as unused") COMMA_SOURCE_FILE_AT_LINE (99)) COMMA_SOURCE_FILE_AT_LINE (99)) ;
      }else if (kBoolFalse == test_7) {
        const enumGalgasBool test_9 = var_usedRoutineSet.reader_hasKey (enumerator_4221.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (100)).boolEnum () ;
        if (kBoolTrue == test_9) {
          GALGAS_location location_10 (enumerator_4221.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticWarning (location_10, GALGAS_string ("the '").operator_concat (enumerator_4221.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (101)) COMMA_SOURCE_FILE_AT_LINE (101)).operator_concat (GALGAS_string ("' routine is declared as unused, but is used") COMMA_SOURCE_FILE_AT_LINE (101)) COMMA_SOURCE_FILE_AT_LINE (101)) ;
        }
      }
    }
    var_unusedRoutineDeclarationUnicity.addAssign_operation (enumerator_4221.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (103)) ;
    enumerator_4221.gotoNextObject () ;
  }
  cEnumerator_midrange_5F_declaredRoutineMap enumerator_4773 (var_declaredRoutineMap, kEnumeration_up) ;
  while (enumerator_4773.hasCurrentObject ()) {
    const enumGalgasBool test_11 = var_usedRoutineSet.reader_hasKey (enumerator_4773.current_lkey (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (106)).operator_not (SOURCE_FILE_AT_LINE (106)).operator_and (var_unusedRoutineDeclarationUnicity.reader_hasKey (enumerator_4773.current_lkey (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (106)).operator_not (SOURCE_FILE_AT_LINE (106)) COMMA_SOURCE_FILE_AT_LINE (106)).boolEnum () ;
    if (kBoolTrue == test_11) {
      GALGAS_location location_12 (enumerator_4773.current_lkey (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticWarning (location_12, GALGAS_string ("the '").operator_concat (enumerator_4773.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (107)) COMMA_SOURCE_FILE_AT_LINE (107)).operator_concat (GALGAS_string ("' routine is unused") COMMA_SOURCE_FILE_AT_LINE (107)) COMMA_SOURCE_FILE_AT_LINE (107)) ;
    }
    enumerator_4773.gotoNextObject () ;
  }
  GALGAS_stringset var_unusedByteDeclarationUnicity = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (111)) ;
  cEnumerator_lstringlist enumerator_5178 (constinArgument_inPiccoloModel.mAttribute_mUnusedRegisterList, kEnumeration_up) ;
  while (enumerator_5178.hasCurrentObject ()) {
    const enumGalgasBool test_13 = var_registerTable.reader_hasKey (enumerator_5178.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (113)).operator_not (SOURCE_FILE_AT_LINE (113)).boolEnum () ;
    if (kBoolTrue == test_13) {
      GALGAS_location location_14 (enumerator_5178.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_14, GALGAS_string ("the '").operator_concat (enumerator_5178.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (114)) COMMA_SOURCE_FILE_AT_LINE (114)).operator_concat (GALGAS_string ("' byte is not declared") COMMA_SOURCE_FILE_AT_LINE (114)) COMMA_SOURCE_FILE_AT_LINE (114)) ;
    }else if (kBoolFalse == test_13) {
      const enumGalgasBool test_15 = var_unusedByteDeclarationUnicity.reader_hasKey (enumerator_5178.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (115)).boolEnum () ;
      if (kBoolTrue == test_15) {
        GALGAS_location location_16 (enumerator_5178.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticWarning (location_16, GALGAS_string ("the '").operator_concat (enumerator_5178.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (116)) COMMA_SOURCE_FILE_AT_LINE (116)).operator_concat (GALGAS_string ("' byte is already declared as unused") COMMA_SOURCE_FILE_AT_LINE (116)) COMMA_SOURCE_FILE_AT_LINE (116)) ;
      }else if (kBoolFalse == test_15) {
        const enumGalgasBool test_17 = var_usedRegisters.reader_hasKey (enumerator_5178.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (117)).boolEnum () ;
        if (kBoolTrue == test_17) {
          GALGAS_location location_18 (enumerator_5178.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticWarning (location_18, GALGAS_string ("the '").operator_concat (enumerator_5178.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (118)) COMMA_SOURCE_FILE_AT_LINE (118)).operator_concat (GALGAS_string ("' byte is declared as unused, but is used") COMMA_SOURCE_FILE_AT_LINE (118)) COMMA_SOURCE_FILE_AT_LINE (118)) ;
        }
      }
    }
    var_unusedByteDeclarationUnicity.addAssign_operation (enumerator_5178.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (120)) ;
    enumerator_5178.gotoNextObject () ;
  }
  cEnumerator_declaredByteMap enumerator_5706 (var_declaredByteMap, kEnumeration_up) ;
  while (enumerator_5706.hasCurrentObject ()) {
    const enumGalgasBool test_19 = var_usedRegisters.reader_hasKey (enumerator_5706.current_lkey (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (123)).operator_not (SOURCE_FILE_AT_LINE (123)).operator_and (var_unusedByteDeclarationUnicity.reader_hasKey (enumerator_5706.current_lkey (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (123)).operator_not (SOURCE_FILE_AT_LINE (123)) COMMA_SOURCE_FILE_AT_LINE (123)).boolEnum () ;
    if (kBoolTrue == test_19) {
      GALGAS_location location_20 (enumerator_5706.current_lkey (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticWarning (location_20, GALGAS_string ("the '").operator_concat (enumerator_5706.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (124)) COMMA_SOURCE_FILE_AT_LINE (124)).operator_concat (GALGAS_string ("' byte is unused") COMMA_SOURCE_FILE_AT_LINE (124)) COMMA_SOURCE_FILE_AT_LINE (124)) ;
    }
    enumerator_5706.gotoNextObject () ;
  }
  const enumGalgasBool test_21 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (128)).objectCompare (GALGAS_uint ((uint32_t) 0U))).operator_and (GALGAS_bool (gOption_piccolo_5F_options_performOptimizations.reader_value ()) COMMA_SOURCE_FILE_AT_LINE (128)).boolEnum () ;
  if (kBoolTrue == test_21) {
    {
    routine_perform_5F_midrange_5F_optimizations (var_generatedInstructionList, var_listFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (129)) ;
    }
  }
  const enumGalgasBool test_22 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (132)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_22) {
    {
    routine_midrange_5F_compute_5F_JSR_5F_JUMP (var_generatedInstructionList, var_listFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (133)) ;
    }
  }
  const enumGalgasBool test_23 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (137)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_23) {
    GALGAS_uint var_usedROMsize ;
    {
    routine_build_5F_midrange_5F_ipic_5F_binary_5F_code (var_registerTable, var_piccoloDeviceModel.reader_mBankCount (SOURCE_FILE_AT_LINE (142)).reader_uint (SOURCE_FILE_AT_LINE (142)), var_generatedInstructionList, var_piccoloDeviceModel.reader_mRomSize (SOURCE_FILE_AT_LINE (144)).reader_uint (SOURCE_FILE_AT_LINE (144)), var_actualConfigurationMap, var_listFileContents, var_usedROMsize, inCompiler COMMA_SOURCE_FILE_AT_LINE (140)) ;
    }
    GALGAS_string var_contents ;
    {
    routine_getGeneratedContents (var_contents, inCompiler COMMA_SOURCE_FILE_AT_LINE (150)) ;
    }
    GALGAS_string var_destinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (151)).operator_concat (GALGAS_string (".hex") COMMA_SOURCE_FILE_AT_LINE (151)) ;
    GALGAS_bool joker_6997_0 ; // Joker input parameter
    var_contents.method_writeToFileWhenDifferentContents (var_destinationFile, joker_6997_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (152)) ;
    const enumGalgasBool test_24 = GALGAS_bool (gOption_piccolo_5F_options_output_5F_C_5F_Array.reader_value ()).boolEnum () ;
    if (kBoolTrue == test_24) {
      GALGAS_string var_baseName = constinArgument_inSourceFileName.reader_lastPathComponent (SOURCE_FILE_AT_LINE (154)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (154)) ;
      {
      routine_get_5F_C_5F_ArrayImplementation (var_baseName, var_contents, inCompiler COMMA_SOURCE_FILE_AT_LINE (155)) ;
      }
      var_destinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (156)).operator_concat (GALGAS_string (".c") COMMA_SOURCE_FILE_AT_LINE (156)) ;
      GALGAS_bool joker_7367_0 ; // Joker input parameter
      var_contents.method_writeToFileWhenDifferentContents (var_destinationFile, joker_7367_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (157)) ;
      {
      routine_get_5F_C_5F_ArrayHeader (var_baseName, var_contents, inCompiler COMMA_SOURCE_FILE_AT_LINE (158)) ;
      }
      var_destinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (159)).operator_concat (GALGAS_string (".h") COMMA_SOURCE_FILE_AT_LINE (159)) ;
      GALGAS_bool joker_7568_0 ; // Joker input parameter
      var_contents.method_writeToFileWhenDifferentContents (var_destinationFile, joker_7568_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (160)) ;
    }
    const enumGalgasBool test_25 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
    if (kBoolTrue == test_25) {
      GALGAS_string var_verboseMessage = GALGAS_string ("  ROM size: ").operator_concat (var_piccoloDeviceModel.reader_mRomSize (SOURCE_FILE_AT_LINE (164)).reader_uint (SOURCE_FILE_AT_LINE (164)).reader_string (SOURCE_FILE_AT_LINE (164)) COMMA_SOURCE_FILE_AT_LINE (164)).operator_concat (GALGAS_string (" words;") COMMA_SOURCE_FILE_AT_LINE (164)) ;
      var_verboseMessage.dotAssign_operation (GALGAS_string (" used: ").operator_concat (var_usedROMsize.reader_string (SOURCE_FILE_AT_LINE (165)) COMMA_SOURCE_FILE_AT_LINE (165)).operator_concat (GALGAS_string (" words (") COMMA_SOURCE_FILE_AT_LINE (165)) COMMA_SOURCE_FILE_AT_LINE (165)) ;
      var_verboseMessage.dotAssign_operation (var_usedROMsize.multiply_operation (GALGAS_uint ((uint32_t) 100U), inCompiler COMMA_SOURCE_FILE_AT_LINE (166)).divide_operation (var_piccoloDeviceModel.reader_mRomSize (SOURCE_FILE_AT_LINE (166)).reader_uint (SOURCE_FILE_AT_LINE (166)), inCompiler COMMA_SOURCE_FILE_AT_LINE (166)).reader_string (SOURCE_FILE_AT_LINE (166)).operator_concat (GALGAS_string ("%).\n") COMMA_SOURCE_FILE_AT_LINE (166)) COMMA_SOURCE_FILE_AT_LINE (166)) ;
      cEnumerator_ramBankTable enumerator_7971 (var_ramBank, kEnumeration_up) ;
      while (enumerator_7971.hasCurrentObject ()) {
        GALGAS_uint var_bankSize = enumerator_7971.current_mLastAddressPlusOne (HERE).substract_operation (enumerator_7971.current_mFirstAddress (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (168)) ;
        GALGAS_uint var_usedSize = enumerator_7971.current_mFirstFreeAddress (HERE).substract_operation (enumerator_7971.current_mFirstAddress (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (169)) ;
        var_verboseMessage.dotAssign_operation (GALGAS_string ("  RAM bank '").operator_concat (enumerator_7971.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (170)) COMMA_SOURCE_FILE_AT_LINE (170)).operator_concat (GALGAS_string ("': ") COMMA_SOURCE_FILE_AT_LINE (170)) COMMA_SOURCE_FILE_AT_LINE (170)) ;
        var_verboseMessage.dotAssign_operation (var_bankSize.reader_string (SOURCE_FILE_AT_LINE (171)).operator_concat (GALGAS_string (" bytes, used ") COMMA_SOURCE_FILE_AT_LINE (171)) COMMA_SOURCE_FILE_AT_LINE (171)) ;
        var_verboseMessage.dotAssign_operation (var_usedSize.reader_string (SOURCE_FILE_AT_LINE (172)).operator_concat (GALGAS_string (" bytes (") COMMA_SOURCE_FILE_AT_LINE (172)) COMMA_SOURCE_FILE_AT_LINE (172)) ;
        var_verboseMessage.dotAssign_operation (var_usedSize.multiply_operation (GALGAS_uint ((uint32_t) 100U), inCompiler COMMA_SOURCE_FILE_AT_LINE (173)).divide_operation (var_bankSize, inCompiler COMMA_SOURCE_FILE_AT_LINE (173)).reader_string (SOURCE_FILE_AT_LINE (173)).operator_concat (GALGAS_string ("%).\n") COMMA_SOURCE_FILE_AT_LINE (173)) COMMA_SOURCE_FILE_AT_LINE (173)) ;
        enumerator_7971.gotoNextObject () ;
      }
      inCompiler->printMessage (var_verboseMessage COMMA_SOURCE_FILE_AT_LINE (175)) ;
    }
    const enumGalgasBool test_26 = GALGAS_bool (gOption_piccolo_5F_options_generateAssembly.reader_value ()).boolEnum () ;
    if (kBoolTrue == test_26) {
      GALGAS_string var_assemblyCode ;
      {
      routine_midrange_5F_build_5F_assembly_5F_code (var_piccoloDeviceModel.reader_mDeviceName (SOURCE_FILE_AT_LINE (181)).reader_string (SOURCE_FILE_AT_LINE (181)), var_piccoloDeviceModel.reader_mRegisterTable (SOURCE_FILE_AT_LINE (182)), var_registerTable, var_generatedInstructionList, var_actualConfigurationMap, var_assemblyCode, inCompiler COMMA_SOURCE_FILE_AT_LINE (180)) ;
      }
      GALGAS_string var_asmDestinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (188)).operator_concat (GALGAS_string (".asm") COMMA_SOURCE_FILE_AT_LINE (188)) ;
      GALGAS_bool joker_8988_0 ; // Joker input parameter
      var_assemblyCode.method_writeToFileWhenDifferentContents (var_asmDestinationFile, joker_8988_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (189)) ;
    }
  }else if (kBoolFalse == test_23) {
    GALGAS_string var_hexDestinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (192)).operator_concat (GALGAS_string (".hex") COMMA_SOURCE_FILE_AT_LINE (192)) ;
    const enumGalgasBool test_27 = var_hexDestinationFile.reader_fileExists (SOURCE_FILE_AT_LINE (193)).boolEnum () ;
    if (kBoolTrue == test_27) {
      {
      GALGAS_string::class_method_deleteFile (var_hexDestinationFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (194)) ;
      }
    }
    GALGAS_string var_asmDestinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (196)).operator_concat (GALGAS_string (".asm") COMMA_SOURCE_FILE_AT_LINE (196)) ;
    const enumGalgasBool test_28 = var_asmDestinationFile.reader_fileExists (SOURCE_FILE_AT_LINE (197)).boolEnum () ;
    if (kBoolTrue == test_28) {
      {
      GALGAS_string::class_method_deleteFile (var_asmDestinationFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (198)) ;
      }
    }
  }
  const enumGalgasBool test_29 = GALGAS_bool (gOption_piccolo_5F_options_ouputListingFile.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_29) {
    GALGAS_string var_listFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (203)).operator_concat (GALGAS_string (".list") COMMA_SOURCE_FILE_AT_LINE (203)) ;
    GALGAS_bool joker_9726_0 ; // Joker input parameter
    var_listFileContents.method_writeToFileWhenDifferentContents (var_listFile, joker_9726_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (204)) ;
  }
}


//-----------------------------------------------------------------------------*

GALGAS_midrange_5F_declaredRoutineMap_2E_element::GALGAS_midrange_5F_declaredRoutineMap_2E_element (void) :
mAttribute_lkey () {
}

//-----------------------------------------------------------------------------*

GALGAS_midrange_5F_declaredRoutineMap_2E_element::~ GALGAS_midrange_5F_declaredRoutineMap_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_midrange_5F_declaredRoutineMap_2E_element::GALGAS_midrange_5F_declaredRoutineMap_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//-----------------------------------------------------------------------------*

GALGAS_midrange_5F_declaredRoutineMap_2E_element GALGAS_midrange_5F_declaredRoutineMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_midrange_5F_declaredRoutineMap_2E_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_midrange_5F_declaredRoutineMap_2E_element GALGAS_midrange_5F_declaredRoutineMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_midrange_5F_declaredRoutineMap_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_midrange_5F_declaredRoutineMap_2E_element (inOperand0) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_midrange_5F_declaredRoutineMap_2E_element::objectCompare (const GALGAS_midrange_5F_declaredRoutineMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_midrange_5F_declaredRoutineMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_midrange_5F_declaredRoutineMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_midrange_5F_declaredRoutineMap_2E_element::description (C_String & ioString,
                                                                    const int32_t inIndentation) const {
  ioString << "<struct @midrange_declaredRoutineMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_midrange_5F_declaredRoutineMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                  @midrange_declaredRoutineMap.element type                  *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_midrange_5F_declaredRoutineMap_2E_element ("midrange_declaredRoutineMap.element",
                                                                  NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_midrange_5F_declaredRoutineMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_midrange_5F_declaredRoutineMap_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_midrange_5F_declaredRoutineMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_midrange_5F_declaredRoutineMap_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_midrange_5F_declaredRoutineMap_2E_element GALGAS_midrange_5F_declaredRoutineMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                  C_Compiler * inCompiler
                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_midrange_5F_declaredRoutineMap_2E_element result ;
  const GALGAS_midrange_5F_declaredRoutineMap_2E_element * p = (const GALGAS_midrange_5F_declaredRoutineMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_midrange_5F_declaredRoutineMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("midrange_declaredRoutineMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


