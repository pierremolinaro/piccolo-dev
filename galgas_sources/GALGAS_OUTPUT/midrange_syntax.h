//---------------------------------------------------------------------------*
//                                                                           *
//                         File 'midrange_syntax.h'                          *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     november 9th, 2009, at 17h27'23"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef midrange_syntax_DEFINED
#define midrange_syntax_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/C_GGS_Object.h"
#include "galgas/GGS_location.h"
#include "galgas/GGS_data.h"
#include "galgas/GGS_lbool.h"
#include "galgas/GGS_lchar.h"
#include "galgas/GGS_lstring.h"
#include "galgas/GGS_ldouble.h"
#include "galgas/GGS_luint.h"
#include "galgas/GGS_lsint.h"
#include "galgas/GGS_luint64.h"
#include "galgas/GGS_lsint64.h"
#include "galgas/GGS_stringset.h"
#include "galgas/GGS_binaryset.h"
#include "galgas/GGS_filewrapper.h"
#include "galgas/predefined_types.h"
#include "galgas/AC_galgas_class.h"
#include "galgas/AC_galgas_domain.h"
#include "galgas/AC_galgas_mapindex.h"
#include "galgas/AC_galgas_map.h"
#include "galgas/AC_galgas_listmap.h"
#include "galgas/AC_galgas_list.h"
#include "galgas/AC_galgas_sortedlist.h"

//---------------------------------------------------------------------------*

#include "piccolo_lexique.h"

// Include imported semantics
#include "generic_metamodel.h"
#include "midrange_metamodel.h"
#include "midrange_semantics.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*
//                                                                           *
//                 Parser class midrange_syntax declaration                  *
//                                                                           *
//---------------------------------------------------------------------------*

class midrange_syntax {
  public : virtual ~midrange_syntax (void) {}

  protected : virtual void nt_configuration_definition_ (piccolo_lexique &,
                                GGS_configDefinitionList  &,
                                GGS_bool &) = 0 ;

  protected : virtual void nt_configuration_definition_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_declaration_in_ram_ (piccolo_lexique &,
                                GGS_declarationInRam  &) = 0 ;

  protected : virtual void nt_declaration_in_ram_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_ram_definition_ (piccolo_lexique &,
                                GGS_ramDefinitionList  &) = 0 ;

  protected : virtual void nt_ram_definition_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_constant_definition_ (piccolo_lexique &,
                                GGS_constantDefinitionList  &) = 0 ;

  protected : virtual void nt_constant_definition_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_midrange_interrupt_definition_ (piccolo_lexique &,
                                GGS_midrange_interruptDefinitionList  &,
                                GGS_bool &,
                                GGS_bool &) = 0 ;

  protected : virtual void nt_midrange_interrupt_definition_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_midrange_routine_definition_ (piccolo_lexique &,
                                GGS_midrange_routineDefinitionList  &,
                                GGS_bool &,
                                GGS_bool &) = 0 ;

  protected : virtual void nt_midrange_routine_definition_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_midrange_simple_instruction_ (piccolo_lexique &,
                                GGS_midrange_instruction  &) = 0 ;

  protected : virtual void nt_midrange_simple_instruction_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_midrange_structured_instruction_ (piccolo_lexique &,
                                GGS_midrange_instruction  &,
                                GGS_bool &,
                                GGS_bool &) = 0 ;

  protected : virtual void nt_midrange_structured_instruction_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_midrange_instruction_list_ (piccolo_lexique &,
                                GGS_midrange_instructionList  &,
                                GGS_bool &,
                                GGS_bool &) = 0 ;

  protected : virtual void nt_midrange_instruction_list_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_midrange_structured_if_instruction_ (piccolo_lexique &,
                                GGS_midrange_instruction  &,
                                GGS_bool &,
                                GGS_bool &) = 0 ;

  protected : virtual void nt_midrange_structured_if_instruction_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_start_symbol_ (piccolo_lexique &) = 0 ;

  protected : virtual void nt_start_symbol_importBootloaderSpecification (piccolo_lexique &,
                                GGS_piccoloDeviceModel &,
                                GGS_uint  &,
                                GGS_ramBankTable  &,
                                GGS_registerTable  &,
                                GGS_bootloaderReservedRAMmap  &,
                                GGS_routineDeclarationList  &,
                                GGS_routineDeclarationList  &,
                                GGS_luint  &) = 0 ;

  protected : virtual void nt_register_parsing_ (piccolo_lexique &,
                                GGS_registerExpression  &) = 0 ;

  protected : virtual void nt_register_parsing_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_optional_w_as_dest_ (piccolo_lexique &,
                                GGS_bool &) = 0 ;

  protected : virtual void nt_optional_w_as_dest_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_bit_number_parsing_ (piccolo_lexique &,
                                GGS_bitNumberExpression  &) = 0 ;

  protected : virtual void nt_bit_number_parsing_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_midrange_condition_factor_ (piccolo_lexique &,
                                GGS_midrange_conditionExpression  &) = 0 ;

  protected : virtual void nt_midrange_condition_factor_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_midrange_condition_term_ (piccolo_lexique &,
                                GGS_midrange_conditionExpression  &) = 0 ;

  protected : virtual void nt_midrange_condition_term_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_midrange_condition_expression_ (piccolo_lexique &,
                                GGS_midrange_conditionExpression  &) = 0 ;

  protected : virtual void nt_midrange_condition_expression_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_immediate_expression_ (piccolo_lexique &,
                                GGS_immediatExpression  &) = 0 ;

  protected : virtual void nt_immediate_expression_parse (piccolo_lexique &) = 0 ;

  protected : void pr_start_symbol_midrange_syntax_120_19_ (piccolo_lexique &) ;

  protected : virtual PMSInt16 select_repeat_midrange_syntax_0 (piccolo_lexique &) = 0 ;

  protected : void pr_start_symbol_midrange_syntax_120_19_importBootloaderSpecification (piccolo_lexique &,
                                GGS_piccoloDeviceModel &,
                                GGS_uint  &,
                                GGS_ramBankTable  &,
                                GGS_registerTable  &,
                                GGS_bootloaderReservedRAMmap  &,
                                GGS_routineDeclarationList  &,
                                GGS_routineDeclarationList  &,
                                GGS_luint  &) ;

  protected : void pr_midrange_instruction_list_midrange_syntax_222_32_ (piccolo_lexique &,
                                GGS_midrange_instructionList  &,
                                GGS_bool &,
                                GGS_bool &) ;

  protected : virtual PMSInt16 select_repeat_midrange_syntax_1 (piccolo_lexique &) = 0 ;

  protected : void pr_midrange_instruction_list_midrange_syntax_222_32_parse (piccolo_lexique & inLexique) ;

  protected : void pr_midrange_interrupt_definition_midrange_syntax_246_36_ (piccolo_lexique &,
                                GGS_midrange_interruptDefinitionList  &,
                                GGS_bool &,
                                GGS_bool &) ;

  protected : void pr_midrange_interrupt_definition_midrange_syntax_246_36_parse (piccolo_lexique & inLexique) ;

  protected : void pr_midrange_routine_definition_midrange_syntax_276_34_ (piccolo_lexique &,
                                GGS_midrange_routineDefinitionList  &,
                                GGS_bool &,
                                GGS_bool &) ;

  protected : virtual PMSInt16 select_midrange_syntax_2 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_midrange_syntax_3 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_midrange_syntax_4 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_midrange_syntax_5 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_midrange_syntax_6 (piccolo_lexique &) = 0 ;

  protected : void pr_midrange_routine_definition_midrange_syntax_276_34_parse (piccolo_lexique & inLexique) ;

  protected : void pr_midrange_structured_instruction_midrange_syntax_353_38_ (piccolo_lexique &,
                                GGS_midrange_instruction  &,
                                GGS_bool &,
                                GGS_bool &) ;

  protected : virtual PMSInt16 select_midrange_syntax_7 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_midrange_syntax_8 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_midrange_syntax_9 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_midrange_syntax_10 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_midrange_syntax_11 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_repeat_midrange_syntax_12 (piccolo_lexique &) = 0 ;

  protected : void pr_midrange_structured_instruction_midrange_syntax_353_38_parse (piccolo_lexique & inLexique) ;

  protected : void pr_midrange_structured_if_instruction_midrange_syntax_585_41_ (piccolo_lexique &,
                                GGS_midrange_instruction  &,
                                GGS_bool &,
                                GGS_bool &) ;

  protected : virtual PMSInt16 select_midrange_syntax_13 (piccolo_lexique &) = 0 ;

  protected : void pr_midrange_structured_if_instruction_midrange_syntax_585_41_parse (piccolo_lexique & inLexique) ;

  protected : void pr_midrange_simple_instruction_midrange_syntax_632_34_ (piccolo_lexique &,
                                GGS_midrange_instruction  &) ;

  protected : virtual PMSInt16 select_midrange_syntax_14 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_midrange_syntax_15 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_midrange_syntax_16 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_midrange_syntax_17 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_midrange_syntax_18 (piccolo_lexique &) = 0 ;

  protected : void pr_midrange_simple_instruction_midrange_syntax_632_34_parse (piccolo_lexique & inLexique) ;

  protected : void pr_midrange_condition_factor_midrange_syntax_775_32_ (piccolo_lexique &,
                                GGS_midrange_conditionExpression  &) ;

  protected : void pr_midrange_condition_factor_midrange_syntax_775_32_parse (piccolo_lexique & inLexique) ;

  protected : void pr_midrange_condition_factor_midrange_syntax_786_32_ (piccolo_lexique &,
                                GGS_midrange_conditionExpression  &) ;

  protected : void pr_midrange_condition_factor_midrange_syntax_786_32_parse (piccolo_lexique & inLexique) ;

  protected : void pr_midrange_condition_factor_midrange_syntax_794_32_ (piccolo_lexique &,
                                GGS_midrange_conditionExpression  &) ;

  protected : virtual PMSInt16 select_midrange_syntax_19 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_midrange_syntax_20 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_midrange_syntax_21 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_midrange_syntax_22 (piccolo_lexique &) = 0 ;

  protected : void pr_midrange_condition_factor_midrange_syntax_794_32_parse (piccolo_lexique & inLexique) ;

  protected : void pr_midrange_condition_expression_midrange_syntax_876_36_ (piccolo_lexique &,
                                GGS_midrange_conditionExpression  &) ;

  protected : virtual PMSInt16 select_repeat_midrange_syntax_23 (piccolo_lexique &) = 0 ;

  protected : void pr_midrange_condition_expression_midrange_syntax_876_36_parse (piccolo_lexique & inLexique) ;

  protected : void pr_midrange_condition_term_midrange_syntax_895_30_ (piccolo_lexique &,
                                GGS_midrange_conditionExpression  &) ;

  protected : virtual PMSInt16 select_repeat_midrange_syntax_24 (piccolo_lexique &) = 0 ;

  protected : void pr_midrange_condition_term_midrange_syntax_895_30_parse (piccolo_lexique & inLexique) ;

} ;

//---------------------------------------------------------------------------*

#endif
