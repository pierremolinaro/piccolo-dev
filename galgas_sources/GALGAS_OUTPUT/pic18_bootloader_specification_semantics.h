//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 File 'pic18_bootloader_specification_semantics.h'                                   *
//                                             Generated by version 2.7.0                                              *
//                                           august 8th, 2014, at 20h3'53"                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef pic_31__38__5F_bootloader_5F_specification_5F_semantics_ENTITIES_DEFINED
#define pic_31__38__5F_bootloader_5F_specification_5F_semantics_ENTITIES_DEFINED

//---------------------------------------------------------------------------------------------------------------------*

#include "galgas2/predefined-types.h"

//---------------------------------------------------------------------------------------------------------------------*

#include "pic18_semantics.h"
#include "piccolo_config.h"
#include "piccoloDevice_semantics.h"
#include "generic_metamodel.h"
#include "ram_sections.h"
#include "ipic18_build_block_representation.h"
#include "ipic18_optimize_block.h"
#include "ipic18_display_block_list.h"
#include "ipic18_block_representation.h"
#include "pic18_metamodel.h"
#include "ipic18_regular_instructions.h"
#include "pic18_mnemonics.h"
#include "ipic18_terminators.h"
#include "intermediate_generic.h"
#include "ipic18_block_ordering.h"
#include "ipic18_cluster_ordering.h"
#include "ipic18_relatives_resolution.h"
#include "ipic18_code_generation.h"
#include "ipic18_stack_computations.h"
#include "pic18_used_routines.h"
#include "piccolo_embedded_devices.h"
#include "pic18_routine_inlining.h"

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   Routine 'pic18BootloaderSpecificationAnalysis'                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_pic_31__38_BootloaderSpecificationAnalysis (const class GALGAS_string constinArgument0,
                                                         const class GALGAS_lstring constinArgument1,
                                                         const class GALGAS_lstring constinArgument2,
                                                         const class GALGAS_routineDeclarationList constinArgument3,
                                                         const class GALGAS_bootloaderReservedRAMmap constinArgument4,
                                                         const class GALGAS_luint constinArgument5,
                                                         const class GALGAS_routineDeclarationList constinArgument6,
                                                         const class GALGAS_ramDefinitionList constinArgument7,
                                                         class GALGAS_string & outArgument8,
                                                         class GALGAS_piccoloDeviceModel & outArgument9,
                                                         class GALGAS_uint & outArgument10,
                                                         class GALGAS_ramBankTable & outArgument11,
                                                         class GALGAS_registerTable & outArgument12,
                                                         class C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

#endif
