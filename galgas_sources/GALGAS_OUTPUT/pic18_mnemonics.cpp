//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'pic18_mnemonics.cpp'                         *
//                        Generated by version 2.4.7                         *
//                       july 6th, 2013, at 9h58'39"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "pic18_mnemonics.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "pic18_mnemonics.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'getComplementaryBcc'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_getComplementaryBcc (const GALGAS_conditional_5F_branch constinArgument_inConditionalBranch,
                                  GALGAS_conditional_5F_branch & outArgument_outComplementary,
                                  C_Compiler * /* inCompiler */
                                  COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outComplementary.drop () ; // Release 'out' argument
  if (constinArgument_inConditionalBranch.isValid ()) {
    switch (constinArgument_inConditionalBranch.enumValue ()) {
    case GALGAS_conditional_5F_branch::kNotBuilt:
      break ;
    case GALGAS_conditional_5F_branch::kEnum_bz: {
      outArgument_outComplementary = GALGAS_conditional_5F_branch::constructor_bnz (SOURCE_FILE_AT_LINE (77)) ;
      } break ;
    case GALGAS_conditional_5F_branch::kEnum_bnz: {
      outArgument_outComplementary = GALGAS_conditional_5F_branch::constructor_bz (SOURCE_FILE_AT_LINE (78)) ;
      } break ;
    case GALGAS_conditional_5F_branch::kEnum_bn: {
      outArgument_outComplementary = GALGAS_conditional_5F_branch::constructor_bnn (SOURCE_FILE_AT_LINE (79)) ;
      } break ;
    case GALGAS_conditional_5F_branch::kEnum_bnn: {
      outArgument_outComplementary = GALGAS_conditional_5F_branch::constructor_bn (SOURCE_FILE_AT_LINE (80)) ;
      } break ;
    case GALGAS_conditional_5F_branch::kEnum_bc: {
      outArgument_outComplementary = GALGAS_conditional_5F_branch::constructor_bnc (SOURCE_FILE_AT_LINE (81)) ;
      } break ;
    case GALGAS_conditional_5F_branch::kEnum_bnc: {
      outArgument_outComplementary = GALGAS_conditional_5F_branch::constructor_bc (SOURCE_FILE_AT_LINE (82)) ;
      } break ;
    case GALGAS_conditional_5F_branch::kEnum_bov: {
      outArgument_outComplementary = GALGAS_conditional_5F_branch::constructor_bnov (SOURCE_FILE_AT_LINE (83)) ;
      } break ;
    case GALGAS_conditional_5F_branch::kEnum_bnov: {
      outArgument_outComplementary = GALGAS_conditional_5F_branch::constructor_bov (SOURCE_FILE_AT_LINE (84)) ;
      } break ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//           Category Reader '@instruction_FDA_base_code mnemonic'           *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string categoryReader_mnemonic (const GALGAS_instruction_5F_FDA_5F_base_5F_code & inObject,
                                       C_Compiler * /* inCompiler */
                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_instruction_5F_FDA_5F_base_5F_code temp_0 = inObject ;
  if (temp_0.isValid ()) {
    switch (temp_0.enumValue ()) {
    case GALGAS_instruction_5F_FDA_5F_base_5F_code::kNotBuilt:
      break ;
    case GALGAS_instruction_5F_FDA_5F_base_5F_code::kEnum_ADDWF: {
      result_outResult = GALGAS_string ("ADDWF") ;
      } break ;
    case GALGAS_instruction_5F_FDA_5F_base_5F_code::kEnum_ADDWFC: {
      result_outResult = GALGAS_string ("ADDWFC") ;
      } break ;
    case GALGAS_instruction_5F_FDA_5F_base_5F_code::kEnum_ANDWF: {
      result_outResult = GALGAS_string ("ANDWF") ;
      } break ;
    case GALGAS_instruction_5F_FDA_5F_base_5F_code::kEnum_COMF: {
      result_outResult = GALGAS_string ("COMF") ;
      } break ;
    case GALGAS_instruction_5F_FDA_5F_base_5F_code::kEnum_DECF: {
      result_outResult = GALGAS_string ("DECF") ;
      } break ;
    case GALGAS_instruction_5F_FDA_5F_base_5F_code::kEnum_DECFSZ: {
      result_outResult = GALGAS_string ("DECFSZ") ;
      } break ;
    case GALGAS_instruction_5F_FDA_5F_base_5F_code::kEnum_DCFSNZ: {
      result_outResult = GALGAS_string ("DCFSNZ") ;
      } break ;
    case GALGAS_instruction_5F_FDA_5F_base_5F_code::kEnum_INCF: {
      result_outResult = GALGAS_string ("INCF") ;
      } break ;
    case GALGAS_instruction_5F_FDA_5F_base_5F_code::kEnum_INCFSZ: {
      result_outResult = GALGAS_string ("INCFSZ") ;
      } break ;
    case GALGAS_instruction_5F_FDA_5F_base_5F_code::kEnum_INFSNZ: {
      result_outResult = GALGAS_string ("INFSNZ") ;
      } break ;
    case GALGAS_instruction_5F_FDA_5F_base_5F_code::kEnum_IORWF: {
      result_outResult = GALGAS_string ("IORWF") ;
      } break ;
    case GALGAS_instruction_5F_FDA_5F_base_5F_code::kEnum_MOVF: {
      result_outResult = GALGAS_string ("MOVF") ;
      } break ;
    case GALGAS_instruction_5F_FDA_5F_base_5F_code::kEnum_RLCF: {
      result_outResult = GALGAS_string ("RLCF") ;
      } break ;
    case GALGAS_instruction_5F_FDA_5F_base_5F_code::kEnum_RLNCF: {
      result_outResult = GALGAS_string ("RLNCF") ;
      } break ;
    case GALGAS_instruction_5F_FDA_5F_base_5F_code::kEnum_RRCF: {
      result_outResult = GALGAS_string ("RRCF") ;
      } break ;
    case GALGAS_instruction_5F_FDA_5F_base_5F_code::kEnum_RRNCF: {
      result_outResult = GALGAS_string ("RRNCF") ;
      } break ;
    case GALGAS_instruction_5F_FDA_5F_base_5F_code::kEnum_SUBFWB: {
      result_outResult = GALGAS_string ("SUBFWB") ;
      } break ;
    case GALGAS_instruction_5F_FDA_5F_base_5F_code::kEnum_SUBWF: {
      result_outResult = GALGAS_string ("SUBWF") ;
      } break ;
    case GALGAS_instruction_5F_FDA_5F_base_5F_code::kEnum_SUBWFB: {
      result_outResult = GALGAS_string ("SUBWFB") ;
      } break ;
    case GALGAS_instruction_5F_FDA_5F_base_5F_code::kEnum_SWAPF: {
      result_outResult = GALGAS_string ("SWAPF") ;
      } break ;
    case GALGAS_instruction_5F_FDA_5F_base_5F_code::kEnum_XORWF: {
      result_outResult = GALGAS_string ("XORWF") ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//           Category Reader '@FA_instruction_base_code mnemonic'            *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string categoryReader_mnemonic (const GALGAS_FA_5F_instruction_5F_base_5F_code & inObject,
                                       C_Compiler * /* inCompiler */
                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_FA_5F_instruction_5F_base_5F_code temp_0 = inObject ;
  if (temp_0.isValid ()) {
    switch (temp_0.enumValue ()) {
    case GALGAS_FA_5F_instruction_5F_base_5F_code::kNotBuilt:
      break ;
    case GALGAS_FA_5F_instruction_5F_base_5F_code::kEnum_CLRF: {
      result_outResult = GALGAS_string ("CLRF") ;
      } break ;
    case GALGAS_FA_5F_instruction_5F_base_5F_code::kEnum_CPFSEQ: {
      result_outResult = GALGAS_string ("CPFSEQ") ;
      } break ;
    case GALGAS_FA_5F_instruction_5F_base_5F_code::kEnum_CPFSGT: {
      result_outResult = GALGAS_string ("CPFSGT") ;
      } break ;
    case GALGAS_FA_5F_instruction_5F_base_5F_code::kEnum_CPFSLT: {
      result_outResult = GALGAS_string ("CPFSLT") ;
      } break ;
    case GALGAS_FA_5F_instruction_5F_base_5F_code::kEnum_MOVWF: {
      result_outResult = GALGAS_string ("MOVWF") ;
      } break ;
    case GALGAS_FA_5F_instruction_5F_base_5F_code::kEnum_MULWF: {
      result_outResult = GALGAS_string ("MULWF") ;
      } break ;
    case GALGAS_FA_5F_instruction_5F_base_5F_code::kEnum_NEGF: {
      result_outResult = GALGAS_string ("NEGF") ;
      } break ;
    case GALGAS_FA_5F_instruction_5F_base_5F_code::kEnum_SETF: {
      result_outResult = GALGAS_string ("SETF") ;
      } break ;
    case GALGAS_FA_5F_instruction_5F_base_5F_code::kEnum_TSTFSZ: {
      result_outResult = GALGAS_string ("TSTFSZ") ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                Category Reader '@bit_oriented_op mnemonic'                *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string categoryReader_mnemonic (const GALGAS_bit_5F_oriented_5F_op & inObject,
                                       C_Compiler * /* inCompiler */
                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_bit_5F_oriented_5F_op temp_0 = inObject ;
  if (temp_0.isValid ()) {
    switch (temp_0.enumValue ()) {
    case GALGAS_bit_5F_oriented_5F_op::kNotBuilt:
      break ;
    case GALGAS_bit_5F_oriented_5F_op::kEnum_BCF: {
      result_outResult = GALGAS_string ("BCF") ;
      } break ;
    case GALGAS_bit_5F_oriented_5F_op::kEnum_BSF: {
      result_outResult = GALGAS_string ("BSF") ;
      } break ;
    case GALGAS_bit_5F_oriented_5F_op::kEnum_BTG: {
      result_outResult = GALGAS_string ("BTG") ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//              Category Reader '@conditional_branch mnemonic'               *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string categoryReader_mnemonic (const GALGAS_conditional_5F_branch & inObject,
                                       C_Compiler * /* inCompiler */
                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_conditional_5F_branch temp_0 = inObject ;
  if (temp_0.isValid ()) {
    switch (temp_0.enumValue ()) {
    case GALGAS_conditional_5F_branch::kNotBuilt:
      break ;
    case GALGAS_conditional_5F_branch::kEnum_bz: {
      result_outResult = GALGAS_string ("BZ") ;
      } break ;
    case GALGAS_conditional_5F_branch::kEnum_bnz: {
      result_outResult = GALGAS_string ("BNZ") ;
      } break ;
    case GALGAS_conditional_5F_branch::kEnum_bn: {
      result_outResult = GALGAS_string ("BN") ;
      } break ;
    case GALGAS_conditional_5F_branch::kEnum_bnn: {
      result_outResult = GALGAS_string ("BNN") ;
      } break ;
    case GALGAS_conditional_5F_branch::kEnum_bc: {
      result_outResult = GALGAS_string ("BC") ;
      } break ;
    case GALGAS_conditional_5F_branch::kEnum_bnc: {
      result_outResult = GALGAS_string ("BNC") ;
      } break ;
    case GALGAS_conditional_5F_branch::kEnum_bov: {
      result_outResult = GALGAS_string ("BOV") ;
      } break ;
    case GALGAS_conditional_5F_branch::kEnum_bnov: {
      result_outResult = GALGAS_string ("BNOV") ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//          Category Reader '@literal_instruction_opcode mnemonic'           *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string categoryReader_mnemonic (const GALGAS_literal_5F_instruction_5F_opcode & inObject,
                                       C_Compiler * /* inCompiler */
                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_literal_5F_instruction_5F_opcode temp_0 = inObject ;
  if (temp_0.isValid ()) {
    switch (temp_0.enumValue ()) {
    case GALGAS_literal_5F_instruction_5F_opcode::kNotBuilt:
      break ;
    case GALGAS_literal_5F_instruction_5F_opcode::kEnum_ADDLW: {
      result_outResult = GALGAS_string ("ADDLW") ;
      } break ;
    case GALGAS_literal_5F_instruction_5F_opcode::kEnum_ANDLW: {
      result_outResult = GALGAS_string ("ANDLW") ;
      } break ;
    case GALGAS_literal_5F_instruction_5F_opcode::kEnum_IORLW: {
      result_outResult = GALGAS_string ("IORLW") ;
      } break ;
    case GALGAS_literal_5F_instruction_5F_opcode::kEnum_MOVLW: {
      result_outResult = GALGAS_string ("MOVLW") ;
      } break ;
    case GALGAS_literal_5F_instruction_5F_opcode::kEnum_MULLW: {
      result_outResult = GALGAS_string ("MULLW") ;
      } break ;
    case GALGAS_literal_5F_instruction_5F_opcode::kEnum_SUBLW: {
      result_outResult = GALGAS_string ("SUBLW") ;
      } break ;
    case GALGAS_literal_5F_instruction_5F_opcode::kEnum_XORLW: {
      result_outResult = GALGAS_string ("XORLW") ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//               Category Reader '@tableAccessOption mnemonic'               *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string categoryReader_mnemonic (const GALGAS_tableAccessOption & inObject,
                                       C_Compiler * /* inCompiler */
                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_tableAccessOption temp_0 = inObject ;
  if (temp_0.isValid ()) {
    switch (temp_0.enumValue ()) {
    case GALGAS_tableAccessOption::kNotBuilt:
      break ;
    case GALGAS_tableAccessOption::kEnum_simpleAccess: {
      result_outResult = GALGAS_string ("*") ;
      } break ;
    case GALGAS_tableAccessOption::kEnum_postIncrement: {
      result_outResult = GALGAS_string ("*+") ;
      } break ;
    case GALGAS_tableAccessOption::kEnum_postDecrement: {
      result_outResult = GALGAS_string ("*-") ;
      } break ;
    case GALGAS_tableAccessOption::kEnum_preIncrement: {
      result_outResult = GALGAS_string ("+*") ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


