//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'pic18_semantics.cpp'                         *
//                        Generated by version 2.5.0                         *
//                     october 6th, 2013, at 18h45'18"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "pic18_semantics.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "piccoloDevice_grammar.h"
#include "piccolo_options.h"
#include "pic18_grammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "pic18_semantics.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'analyze_data_sections'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyze_5F_data_5F_sections (const GALGAS_dataList constinArgument0,
                                          const GALGAS_registerTable constinArgument1,
                                          const GALGAS_constantMap constinArgument2,
                                          GALGAS_string & ioArgument3,
                                          GALGAS_pic_31__38__5F_intermediate_5F_instructionList & outArgument4,
                                          GALGAS_dataMap & outArgument5,
                                          GALGAS_constantMap & outArgument6,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Routine 'pic18_build_listing_of_generated_code'              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_pic_31__38__5F_build_5F_listing_5F_of_5F_generated_5F_code (const GALGAS_pic_31__38__5F_intermediate_5F_instructionList constinArgument_inInstructionList,
                                                                         GALGAS_string & ioArgument_ioListFileContents,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38__5F_intermediate_5F_symbolTable var_symbolTable = GALGAS_pic_31__38__5F_intermediate_5F_symbolTable::constructor_emptyMap (SOURCE_FILE_AT_LINE (24)) ;
  GALGAS_uint var_currentAddress = GALGAS_uint ((PMUInt32) 0U) ;
  cEnumerator_pic_31__38__5F_intermediate_5F_instructionList enumerator_1136 (constinArgument_inInstructionList, kEnumeration_up) ;
  while (enumerator_1136.hasCurrentObject ()) {
    callCategoryMethod_enterLabelAtAddress ((const cPtr_pic_31__38__5F_intermediate_5F_instruction *) enumerator_1136.current_mInstruction (HERE).ptr (), var_symbolTable, var_currentAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (27)) ;
    enumerator_1136.gotoNextObject () ;
  }
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*******************************************************************************\n") COMMA_SOURCE_FILE_AT_LINE (29)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*                              GENERATED CODE                                 *\n") COMMA_SOURCE_FILE_AT_LINE (30)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*******************************************************************************\n"
    "\n") COMMA_SOURCE_FILE_AT_LINE (31)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (" Line  Address  Code      Assembly\n") COMMA_SOURCE_FILE_AT_LINE (32)) ;
  GALGAS_uint var_bccLabelIndex = GALGAS_uint ((PMUInt32) 0U) ;
  var_currentAddress = GALGAS_uint ((PMUInt32) 0U) ;
  cEnumerator_pic_31__38__5F_intermediate_5F_instructionList enumerator_1708 (constinArgument_inInstructionList, kEnumeration_up) ;
  GALGAS_uint index_1702 ((PMUInt32) 0) ;
  while (enumerator_1708.hasCurrentObject ()) {
    GALGAS_stringlist var_lineList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (36)) ;
    callCategoryMethod_buildAssemblyCode ((const cPtr_pic_31__38__5F_intermediate_5F_instruction *) enumerator_1708.current_mInstruction (HERE).ptr (), var_lineList, var_bccLabelIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (37)) ;
    GALGAS_emittedCodeList var_code = GALGAS_emittedCodeList::constructor_emptyList (SOURCE_FILE_AT_LINE (38)) ;
    callCategoryMethod_generateBinaryCodeAtAddress ((const cPtr_pic_31__38__5F_intermediate_5F_instruction *) enumerator_1708.current_mInstruction (HERE).ptr (), var_symbolTable, var_currentAddress, var_code, inCompiler COMMA_SOURCE_FILE_AT_LINE (39)) ;
    if (var_lineList.reader_length (SOURCE_FILE_AT_LINE (40)).isValid ()) {
      PMUInt32 variant_1957 = var_lineList.reader_length (SOURCE_FILE_AT_LINE (40)).uintValue () ;
      bool loop_1957 = true ;
      while (loop_1957) {
        loop_1957 = GALGAS_bool (kIsStrictSup, var_lineList.reader_length (SOURCE_FILE_AT_LINE (41)).objectCompare (var_code.reader_length (SOURCE_FILE_AT_LINE (41)))).isValid () ;
        if (loop_1957) {
          loop_1957 = GALGAS_bool (kIsStrictSup, var_lineList.reader_length (SOURCE_FILE_AT_LINE (41)).objectCompare (var_code.reader_length (SOURCE_FILE_AT_LINE (41)))).boolValue () ;
        }
        if (loop_1957 && (0 == variant_1957)) {
          loop_1957 = false ;
          inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (40)) ;
        }
        if (loop_1957) {
          variant_1957 -- ;
          var_code.addAssign_operation (GALGAS_uintlist::constructor_emptyList (SOURCE_FILE_AT_LINE (42)) COMMA_SOURCE_FILE_AT_LINE (42)) ;
        }
      }
    }
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_lineList.reader_length (SOURCE_FILE_AT_LINE (44)).objectCompare (var_code.reader_length (SOURCE_FILE_AT_LINE (44)))).boolEnum () ;
    if (kBoolTrue == test_0) {
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("internal error for listing line ").operator_concat (index_1702.reader_string (SOURCE_FILE_AT_LINE (45)) COMMA_SOURCE_FILE_AT_LINE (45)).operator_concat (GALGAS_string (" : ") COMMA_SOURCE_FILE_AT_LINE (46)).operator_concat (var_lineList.reader_length (SOURCE_FILE_AT_LINE (46)).reader_string (SOURCE_FILE_AT_LINE (46)) COMMA_SOURCE_FILE_AT_LINE (46)).operator_concat (GALGAS_string (" != ") COMMA_SOURCE_FILE_AT_LINE (46)).operator_concat (var_code.reader_length (SOURCE_FILE_AT_LINE (46)).reader_string (SOURCE_FILE_AT_LINE (46)) COMMA_SOURCE_FILE_AT_LINE (46)) COMMA_SOURCE_FILE_AT_LINE (45)) ;
    }
    cEnumerator_stringlist enumerator_2313 (var_lineList, kEnumeration_up) ;
    cEnumerator_emittedCodeList enumerator_2321 (var_code, kEnumeration_up) ;
    while (enumerator_2313.hasCurrentObject () && enumerator_2321.hasCurrentObject ()) {
      GALGAS_string var_codeString = GALGAS_string::makeEmptyString () ;
      cEnumerator_uintlist enumerator_2376 (enumerator_2321.current_mCode (HERE), kEnumeration_up) ;
      while (enumerator_2376.hasCurrentObject ()) {
        var_codeString.dotAssign_operation (enumerator_2376.current_mValue (HERE).reader_xString (SOURCE_FILE_AT_LINE (51)).reader_stringByLeftPadding (GALGAS_uint ((PMUInt32) 4U), GALGAS_char (TO_UNICODE (48)) COMMA_SOURCE_FILE_AT_LINE (51)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (51)) COMMA_SOURCE_FILE_AT_LINE (51)) ;
        enumerator_2376.gotoNextObject () ;
      }
      ioArgument_ioListFileContents.dotAssign_operation (index_1702.reader_string (SOURCE_FILE_AT_LINE (53)).reader_stringByLeftPadding (GALGAS_uint ((PMUInt32) 5U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (53)).operator_concat (GALGAS_string ("  ") COMMA_SOURCE_FILE_AT_LINE (53)).operator_concat (var_currentAddress.reader_xString (SOURCE_FILE_AT_LINE (54)).reader_stringByLeftPadding (GALGAS_uint ((PMUInt32) 6U), GALGAS_char (TO_UNICODE (48)) COMMA_SOURCE_FILE_AT_LINE (54)) COMMA_SOURCE_FILE_AT_LINE (54)).operator_concat (GALGAS_string (" : ") COMMA_SOURCE_FILE_AT_LINE (54)).operator_concat (var_codeString.reader_stringByRightPadding (GALGAS_uint ((PMUInt32) 10U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (55)) COMMA_SOURCE_FILE_AT_LINE (55)).operator_concat (enumerator_2313.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (56)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (56)) COMMA_SOURCE_FILE_AT_LINE (53)) ;
      var_currentAddress = var_currentAddress.add_operation (enumerator_2321.current_mCode (HERE).reader_length (SOURCE_FILE_AT_LINE (57)).multiply_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (57)), inCompiler COMMA_SOURCE_FILE_AT_LINE (57)) ;
      enumerator_2313.gotoNextObject () ;
      enumerator_2321.gotoNextObject () ;
    }
    enumerator_1708.gotoNextObject () ;
    index_1702.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (35)) ;
  }
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (60)) ;
}


//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'analyze_data_sections'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyze_5F_data_5F_sections (const GALGAS_dataList constinArgument_inDataDefinitionList,
                                          const GALGAS_registerTable constinArgument_inRegisterTable,
                                          const GALGAS_constantMap constinArgument_inConstantMap,
                                          GALGAS_string & ioArgument_ioListFileContents,
                                          GALGAS_pic_31__38__5F_intermediate_5F_instructionList & outArgument_outDataGeneratedInstructionList,
                                          GALGAS_dataMap & outArgument_outDataMap,
                                          GALGAS_constantMap & outArgument_outConstantMap,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outDataGeneratedInstructionList.drop () ; // Release 'out' argument
  outArgument_outDataMap.drop () ; // Release 'out' argument
  outArgument_outConstantMap.drop () ; // Release 'out' argument
  outArgument_outConstantMap = GALGAS_constantMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (78)) ;
  outArgument_outDataGeneratedInstructionList = GALGAS_pic_31__38__5F_intermediate_5F_instructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (79)) ;
  outArgument_outDataMap = GALGAS_dataMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (80)) ;
  cEnumerator_dataList enumerator_3812 (constinArgument_inDataDefinitionList, kEnumeration_up) ;
  const bool bool_0 = true ;
  if (enumerator_3812.hasCurrentObject () && bool_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*******************************************************************************\n") COMMA_SOURCE_FILE_AT_LINE (83)) ;
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*                    D A T A    D E C L A R A T I O N                         *\n") COMMA_SOURCE_FILE_AT_LINE (84)) ;
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*******************************************************************************\n"
      "\n") COMMA_SOURCE_FILE_AT_LINE (85)) ;
    while (enumerator_3812.hasCurrentObject () && bool_0) {
      ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("Data '").operator_concat (enumerator_3812.current_mDataName (HERE).reader_string (SOURCE_FILE_AT_LINE (87)) COMMA_SOURCE_FILE_AT_LINE (87)).operator_concat (GALGAS_string ("', ") COMMA_SOURCE_FILE_AT_LINE (87)).operator_concat (enumerator_3812.current_mValueList (HERE).reader_length (SOURCE_FILE_AT_LINE (87)).reader_string (SOURCE_FILE_AT_LINE (87)) COMMA_SOURCE_FILE_AT_LINE (87)).operator_concat (GALGAS_string (" words (") COMMA_SOURCE_FILE_AT_LINE (87)).operator_concat (enumerator_3812.current_mValueList (HERE).reader_length (SOURCE_FILE_AT_LINE (87)).multiply_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (87)).reader_string (SOURCE_FILE_AT_LINE (87)) COMMA_SOURCE_FILE_AT_LINE (87)).operator_concat (GALGAS_string (" bytes).\n") COMMA_SOURCE_FILE_AT_LINE (87)) COMMA_SOURCE_FILE_AT_LINE (87)) ;
      {
      outArgument_outDataMap.modifier_insertKey (enumerator_3812.current_mDataName (HERE), enumerator_3812.current_mValueList (HERE).reader_length (SOURCE_FILE_AT_LINE (88)), inCompiler COMMA_SOURCE_FILE_AT_LINE (88)) ;
      }
      {
      outArgument_outConstantMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_3812.current_mDataName (HERE).mAttribute_string.operator_concat (GALGAS_string ("_BYTE_COUNT") COMMA_SOURCE_FILE_AT_LINE (89)), enumerator_3812.current_mDataName (HERE).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (89)), enumerator_3812.current_mValueList (HERE).reader_length (SOURCE_FILE_AT_LINE (89)).multiply_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (89)).reader_sint_36__34_ (SOURCE_FILE_AT_LINE (89)), inCompiler COMMA_SOURCE_FILE_AT_LINE (89)) ;
      }
      GALGAS_lstring var_dataName = GALGAS_lstring::constructor_new (GALGAS_string ("_data_").operator_concat (enumerator_3812.current_mDataName (HERE).reader_string (SOURCE_FILE_AT_LINE (90)) COMMA_SOURCE_FILE_AT_LINE (90)), enumerator_3812.current_mDataName (HERE).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (90)) ;
      outArgument_outDataGeneratedInstructionList.addAssign_operation (GALGAS_pic_31__38__5F_intermediate_5F_pseudo_5F_LABEL::constructor_new (var_dataName, GALGAS_bool (true) COMMA_SOURCE_FILE_AT_LINE (91)) COMMA_SOURCE_FILE_AT_LINE (91)) ;
      GALGAS_stringset var_usedRegisters = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (92)) ;
      cEnumerator_immediatExpressionList enumerator_4737 (enumerator_3812.current_mValueList (HERE), kEnumeration_up) ;
      while (enumerator_4737.hasCurrentObject ()) {
        GALGAS_sint_36__34_ var_value ;
        callCategoryMethod_eval ((const cPtr_immediatExpression *) enumerator_4737.current_mExpression (HERE).ptr (), constinArgument_inRegisterTable, constinArgument_inConstantMap, var_value, var_usedRegisters, inCompiler COMMA_SOURCE_FILE_AT_LINE (94)) ;
        const enumGalgasBool test_1 = GALGAS_bool (kIsStrictInf, var_value.objectCompare (GALGAS_sint_36__34_ ((PMSInt64) 0LL))).boolEnum () ;
        if (kBoolTrue == test_1) {
          inCompiler->emitSemanticError (enumerator_4737.current_mErrorLocation (HERE), GALGAS_string ("data value is ").operator_concat (var_value.reader_string (SOURCE_FILE_AT_LINE (96)) COMMA_SOURCE_FILE_AT_LINE (96)).operator_concat (GALGAS_string (" (negative)") COMMA_SOURCE_FILE_AT_LINE (96)) COMMA_SOURCE_FILE_AT_LINE (96)) ;
        }else if (kBoolFalse == test_1) {
          const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_value.objectCompare (GALGAS_sint_36__34_ ((PMSInt64) 65535LL))).boolEnum () ;
          if (kBoolTrue == test_2) {
            inCompiler->emitSemanticError (enumerator_4737.current_mErrorLocation (HERE), GALGAS_string ("data value is ").operator_concat (var_value.reader_string (SOURCE_FILE_AT_LINE (98)) COMMA_SOURCE_FILE_AT_LINE (98)).operator_concat (GALGAS_string (" (greater than 2**16-1)") COMMA_SOURCE_FILE_AT_LINE (98)) COMMA_SOURCE_FILE_AT_LINE (98)) ;
          }else if (kBoolFalse == test_2) {
            outArgument_outDataGeneratedInstructionList.addAssign_operation (GALGAS_pic_31__38__5F_intermediate_5F_word::constructor_new (var_value.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (100)) COMMA_SOURCE_FILE_AT_LINE (100)) COMMA_SOURCE_FILE_AT_LINE (100)) ;
          }
        }
        enumerator_4737.gotoNextObject () ;
      }
      enumerator_3812.gotoNextObject () ;
    }
  }
}


//---------------------------------------------------------------------------*

cMapElement_declaredRoutineMap::cMapElement_declaredRoutineMap (const GALGAS_lstring & inKey
                                                                COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------*

bool cMapElement_declaredRoutineMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_declaredRoutineMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_declaredRoutineMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_declaredRoutineMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_declaredRoutineMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_declaredRoutineMap * operand = (cMapElement_declaredRoutineMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_declaredRoutineMap::GALGAS_declaredRoutineMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_declaredRoutineMap::GALGAS_declaredRoutineMap (const GALGAS_declaredRoutineMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_declaredRoutineMap & GALGAS_declaredRoutineMap::operator = (const GALGAS_declaredRoutineMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_declaredRoutineMap GALGAS_declaredRoutineMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_declaredRoutineMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_declaredRoutineMap GALGAS_declaredRoutineMap::constructor_mapWithMapToOverride (const GALGAS_declaredRoutineMap & inMapToOverride
                                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_declaredRoutineMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_declaredRoutineMap GALGAS_declaredRoutineMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  GALGAS_declaredRoutineMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_declaredRoutineMap::modifier_insertKey (GALGAS_lstring inKey,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_declaredRoutineMap * p = NULL ;
  macroMyNew (p, cMapElement_declaredRoutineMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' routine is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_declaredRoutineMap_searchKey = "the '%K' routine is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_declaredRoutineMap::method_searchKey (GALGAS_lstring inKey,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  const cMapElement_declaredRoutineMap * p = (const cMapElement_declaredRoutineMap *) performSearch (inKey,
                                                                                                       inCompiler,
                                                                                                       kSearchErrorMessage_declaredRoutineMap_searchKey
                                                                                                       COMMA_THERE) ;
  if (NULL == p) {
  }else{
    macroValidSharedObject (p, const cMapElement_declaredRoutineMap) ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_declaredRoutineMap * GALGAS_declaredRoutineMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                      const GALGAS_string & inKey
                                                                                                      COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_declaredRoutineMap * result = (cMapElement_declaredRoutineMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_declaredRoutineMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_declaredRoutineMap * GALGAS_declaredRoutineMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                         const GALGAS_lstring & inKey
                                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_declaredRoutineMap_searchKey COMMA_THERE) ;
  cMapElement_declaredRoutineMap * result = (cMapElement_declaredRoutineMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_declaredRoutineMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_declaredRoutineMap::cEnumerator_declaredRoutineMap (const GALGAS_declaredRoutineMap & inEnumeratedObject,
                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_declaredRoutineMap_2E_element cEnumerator_declaredRoutineMap::current (LOCATION_ARGS) const {
  const cMapElement_declaredRoutineMap * p = (const cMapElement_declaredRoutineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_declaredRoutineMap) ;
  return GALGAS_declaredRoutineMap_2E_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_declaredRoutineMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @declaredRoutineMap type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_declaredRoutineMap ("declaredRoutineMap",
                                           NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_declaredRoutineMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_declaredRoutineMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_declaredRoutineMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_declaredRoutineMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_declaredRoutineMap GALGAS_declaredRoutineMap::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_declaredRoutineMap result ;
  const GALGAS_declaredRoutineMap * p = (const GALGAS_declaredRoutineMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_declaredRoutineMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("declaredRoutineMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'pic18_analyze'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_pic_31__38__5F_analyze (const GALGAS_piccoloModel constinArgument_inPiccoloModel,
                                     const GALGAS_string constinArgument_inSourceFileName,
                                     C_Compiler * inCompiler
                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_sourceFileBaseName = constinArgument_inSourceFileName.reader_lastPathComponent (SOURCE_FILE_AT_LINE (121)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (121)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_sourceFileBaseName.objectCompare (constinArgument_inPiccoloModel.reader_mProgramName (SOURCE_FILE_AT_LINE (122)).reader_string (SOURCE_FILE_AT_LINE (122)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (constinArgument_inPiccoloModel.reader_mProgramName (SOURCE_FILE_AT_LINE (123)).reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the program name ('").operator_concat (constinArgument_inPiccoloModel.reader_mProgramName (SOURCE_FILE_AT_LINE (123)).reader_string (SOURCE_FILE_AT_LINE (123)) COMMA_SOURCE_FILE_AT_LINE (123)).operator_concat (GALGAS_string ("') should be identical to the file base name '") COMMA_SOURCE_FILE_AT_LINE (124)).operator_concat (var_sourceFileBaseName COMMA_SOURCE_FILE_AT_LINE (124)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (124)) COMMA_SOURCE_FILE_AT_LINE (123)) ;
  }
  GALGAS_string var_listFileContents = GALGAS_string::makeEmptyString () ;
  GALGAS_piccoloDeviceModel var_piccoloDeviceModel ;
  GALGAS_uint var_accessBankSplitOffset ;
  GALGAS_ramBankTable var_ramBank ;
  GALGAS_bootloaderReservedRAMmap var_bootloaderReservedRAMmap ;
  GALGAS_routineDeclarationList var_bootloaderRoutineDeclarationListForBootloaderImplementation ;
  GALGAS_routineDeclarationList var_userRoutineDeclarationListForBootloaderImplementation ;
  GALGAS_routineDeclarationList var_bootloaderRoutineDeclarationListForUserProgramImplementation ;
  GALGAS_routineDeclarationList var_userRoutineDeclarationListForUserProgramImplementation ;
  GALGAS_luint var_bootloaderReservedROMsize ;
  GALGAS_registerTable var_registerTable ;
  GALGAS_string var_piccoloDeviceName ;
  if (constinArgument_inPiccoloModel.mAttribute_mProgramKind.isValid ()) {
    switch (constinArgument_inPiccoloModel.mAttribute_mProgramKind.enumValue ()) {
    case GALGAS_programKind::kNotBuilt:
      break ;
    case GALGAS_programKind::kEnum_regularProgram: {
      var_piccoloDeviceName = constinArgument_inPiccoloModel.mAttribute_mDeviceNameOrBootLoaderReference.mAttribute_string ;
      {
      routine_parseDeviceDefinition (constinArgument_inPiccoloModel.reader_mDeviceNameOrBootLoaderReference (SOURCE_FILE_AT_LINE (142)), var_piccoloDeviceModel, inCompiler COMMA_SOURCE_FILE_AT_LINE (142)) ;
      }
      if (var_piccoloDeviceModel.reader_mProcessorType (SOURCE_FILE_AT_LINE (143)).isValid ()) {
        switch (var_piccoloDeviceModel.reader_mProcessorType (SOURCE_FILE_AT_LINE (143)).enumValue ()) {
        case GALGAS_processorType::kNotBuilt:
          break ;
        case GALGAS_processorType::kEnum_pic_31__38__5F__36__30_: {
          var_accessBankSplitOffset = GALGAS_uint ((PMUInt32) 96U) ;
          } break ;
        case GALGAS_processorType::kEnum_pic_31__38__5F__38__30_: {
          var_accessBankSplitOffset = GALGAS_uint ((PMUInt32) 128U) ;
          } break ;
        case GALGAS_processorType::kEnum_midrange: {
          GALGAS_location location_2 (constinArgument_inPiccoloModel.reader_mDeviceNameOrBootLoaderReference (SOURCE_FILE_AT_LINE (146)).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_2, GALGAS_string ("a midrange device is not accepted here") COMMA_SOURCE_FILE_AT_LINE (146)) ;
          var_accessBankSplitOffset.drop () ; // Release error dropped variable
          } break ;
        case GALGAS_processorType::kEnum_baseline: {
          GALGAS_location location_3 (constinArgument_inPiccoloModel.reader_mDeviceNameOrBootLoaderReference (SOURCE_FILE_AT_LINE (147)).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_3, GALGAS_string ("a baseline device is not accepted here") COMMA_SOURCE_FILE_AT_LINE (147)) ;
          var_accessBankSplitOffset.drop () ; // Release error dropped variable
          } break ;
        }
      }
      var_ramBank = var_piccoloDeviceModel.reader_mRamBankTable (SOURCE_FILE_AT_LINE (149)) ;
      var_bootloaderReservedRAMmap = GALGAS_bootloaderReservedRAMmap::constructor_emptyMap (SOURCE_FILE_AT_LINE (150)) ;
      var_registerTable = var_piccoloDeviceModel.reader_mRegisterTable (SOURCE_FILE_AT_LINE (151)) ;
      var_bootloaderRoutineDeclarationListForBootloaderImplementation = GALGAS_routineDeclarationList::constructor_emptyList (SOURCE_FILE_AT_LINE (152)) ;
      var_userRoutineDeclarationListForBootloaderImplementation = GALGAS_routineDeclarationList::constructor_emptyList (SOURCE_FILE_AT_LINE (153)) ;
      var_bootloaderRoutineDeclarationListForUserProgramImplementation = GALGAS_routineDeclarationList::constructor_emptyList (SOURCE_FILE_AT_LINE (154)) ;
      var_userRoutineDeclarationListForUserProgramImplementation = GALGAS_routineDeclarationList::constructor_emptyList (SOURCE_FILE_AT_LINE (155)) ;
      var_bootloaderReservedROMsize = GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (156)) ;
      } break ;
    case GALGAS_programKind::kEnum_bootloaderProgram: {
      var_bootloaderRoutineDeclarationListForUserProgramImplementation = GALGAS_routineDeclarationList::constructor_emptyList (SOURCE_FILE_AT_LINE (158)) ;
      var_userRoutineDeclarationListForUserProgramImplementation = GALGAS_routineDeclarationList::constructor_emptyList (SOURCE_FILE_AT_LINE (159)) ;
      {
      cGrammar_pic_31__38__5F_grammar::_performSourceFileParsing_importBootloaderSpecification (inCompiler, constinArgument_inPiccoloModel.reader_mDeviceNameOrBootLoaderReference (SOURCE_FILE_AT_LINE (160)), var_piccoloDeviceModel, var_piccoloDeviceName, var_accessBankSplitOffset, var_ramBank, var_registerTable, var_bootloaderReservedRAMmap, var_bootloaderRoutineDeclarationListForBootloaderImplementation, var_userRoutineDeclarationListForBootloaderImplementation, var_bootloaderReservedROMsize COMMA_SOURCE_FILE_AT_LINE (160)) ;
      }
      cEnumerator_ramBankTable enumerator_9230 (var_ramBank, kEnumeration_up) ;
      while (enumerator_9230.hasCurrentObject ()) {
        {
        var_ramBank.modifier_setMFirstFreeAddressForKey (enumerator_9230.current_mFirstAddress (HERE), enumerator_9230.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (172)), inCompiler COMMA_SOURCE_FILE_AT_LINE (172)) ;
        }
        enumerator_9230.gotoNextObject () ;
      }
      } break ;
    case GALGAS_programKind::kEnum_userProgram: {
      {
      cGrammar_pic_31__38__5F_grammar::_performSourceFileParsing_importBootloaderSpecification (inCompiler, constinArgument_inPiccoloModel.reader_mDeviceNameOrBootLoaderReference (SOURCE_FILE_AT_LINE (175)), var_piccoloDeviceModel, var_piccoloDeviceName, var_accessBankSplitOffset, var_ramBank, var_registerTable, var_bootloaderReservedRAMmap, var_bootloaderRoutineDeclarationListForUserProgramImplementation, var_userRoutineDeclarationListForUserProgramImplementation, var_bootloaderReservedROMsize COMMA_SOURCE_FILE_AT_LINE (175)) ;
      }
      var_bootloaderRoutineDeclarationListForBootloaderImplementation = GALGAS_routineDeclarationList::constructor_emptyList (SOURCE_FILE_AT_LINE (186)) ;
      var_userRoutineDeclarationListForBootloaderImplementation = GALGAS_routineDeclarationList::constructor_emptyList (SOURCE_FILE_AT_LINE (187)) ;
      } break ;
    }
  }
  GALGAS_stringset var_usedRoutineSet = function_computeUsedRoutines (constinArgument_inPiccoloModel.mAttribute_mInterruptDefinitionList, constinArgument_inPiccoloModel.mAttribute_mRoutineDefinitionList, var_bootloaderRoutineDeclarationListForBootloaderImplementation, var_userRoutineDeclarationListForUserProgramImplementation, inCompiler COMMA_SOURCE_FILE_AT_LINE (190)) ;
  GALGAS_declaredRoutineMap var_declaredRoutineMap = GALGAS_declaredRoutineMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (196)) ;
  cEnumerator_routineDefinitionList enumerator_10488 (constinArgument_inPiccoloModel.mAttribute_mRoutineDefinitionList, kEnumeration_up) ;
  while (enumerator_10488.hasCurrentObject ()) {
    {
    var_declaredRoutineMap.modifier_insertKey (enumerator_10488.current_mRoutineName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (198)) ;
    }
    enumerator_10488.gotoNextObject () ;
  }
  GALGAS_stringset var_unusedDeclarationUnicity = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (201)) ;
  cEnumerator_lstringlist enumerator_10710 (constinArgument_inPiccoloModel.mAttribute_mUnusedRoutineList, kEnumeration_up) ;
  while (enumerator_10710.hasCurrentObject ()) {
    const enumGalgasBool test_4 = var_declaredRoutineMap.reader_hasKey (enumerator_10710.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (203)).operator_not (SOURCE_FILE_AT_LINE (203)).boolEnum () ;
    if (kBoolTrue == test_4) {
      GALGAS_location location_5 (enumerator_10710.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_5, GALGAS_string ("the '").operator_concat (enumerator_10710.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (204)) COMMA_SOURCE_FILE_AT_LINE (204)).operator_concat (GALGAS_string ("' routine is not declared") COMMA_SOURCE_FILE_AT_LINE (204)) COMMA_SOURCE_FILE_AT_LINE (204)) ;
    }else if (kBoolFalse == test_4) {
      const enumGalgasBool test_6 = var_unusedDeclarationUnicity.reader_hasKey (enumerator_10710.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (205)).boolEnum () ;
      if (kBoolTrue == test_6) {
        GALGAS_location location_7 (enumerator_10710.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticWarning (location_7, GALGAS_string ("the '").operator_concat (enumerator_10710.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (206)) COMMA_SOURCE_FILE_AT_LINE (206)).operator_concat (GALGAS_string ("' routine is already declared as unused") COMMA_SOURCE_FILE_AT_LINE (206)) COMMA_SOURCE_FILE_AT_LINE (206)) ;
      }else if (kBoolFalse == test_6) {
        const enumGalgasBool test_8 = var_usedRoutineSet.reader_hasKey (enumerator_10710.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (207)).boolEnum () ;
        if (kBoolTrue == test_8) {
          GALGAS_location location_9 (enumerator_10710.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticWarning (location_9, GALGAS_string ("the '").operator_concat (enumerator_10710.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (208)) COMMA_SOURCE_FILE_AT_LINE (208)).operator_concat (GALGAS_string ("' routine is declared as unused, but is used") COMMA_SOURCE_FILE_AT_LINE (208)) COMMA_SOURCE_FILE_AT_LINE (208)) ;
        }
      }
    }
    var_unusedDeclarationUnicity.addAssign_operation (enumerator_10710.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (210)) ;
    enumerator_10710.gotoNextObject () ;
  }
  cEnumerator_declaredRoutineMap enumerator_11248 (var_declaredRoutineMap, kEnumeration_up) ;
  while (enumerator_11248.hasCurrentObject ()) {
    const enumGalgasBool test_10 = var_usedRoutineSet.reader_hasKey (enumerator_11248.current_lkey (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (213)).operator_not (SOURCE_FILE_AT_LINE (213)).operator_and (var_unusedDeclarationUnicity.reader_hasKey (enumerator_11248.current_lkey (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (213)).operator_not (SOURCE_FILE_AT_LINE (213)) COMMA_SOURCE_FILE_AT_LINE (213)).boolEnum () ;
    if (kBoolTrue == test_10) {
      GALGAS_location location_11 (enumerator_11248.current_lkey (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticWarning (location_11, GALGAS_string ("the '").operator_concat (enumerator_11248.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (214)) COMMA_SOURCE_FILE_AT_LINE (214)).operator_concat (GALGAS_string ("' routine is unused") COMMA_SOURCE_FILE_AT_LINE (214)) COMMA_SOURCE_FILE_AT_LINE (214)) ;
    }
    enumerator_11248.gotoNextObject () ;
  }
  cEnumerator_checkpicList enumerator_11558 (constinArgument_inPiccoloModel.mAttribute_mCheckpicList, kEnumeration_up) ;
  while (enumerator_11558.hasCurrentObject ()) {
    GALGAS_bool var_found = GALGAS_bool (false) ;
    cEnumerator_lstringlist enumerator_11614 (enumerator_11558.current_mValueList (HERE), kEnumeration_up) ;
    bool bool_12 = var_found.operator_not (SOURCE_FILE_AT_LINE (220)).isValidAndTrue () ;
    if (enumerator_11614.hasCurrentObject () && bool_12) {
      while (enumerator_11614.hasCurrentObject () && bool_12) {
        var_found = GALGAS_bool (kIsEqual, enumerator_11614.current_mValue (HERE).mAttribute_string.objectCompare (var_piccoloDeviceName)) ;
        enumerator_11614.gotoNextObject () ;
        if (enumerator_11614.hasCurrentObject ()) {
          bool_12 = var_found.operator_not (SOURCE_FILE_AT_LINE (220)).isValidAndTrue () ;
        }
      }
    }
    const enumGalgasBool test_13 = var_found.operator_not (SOURCE_FILE_AT_LINE (223)).boolEnum () ;
    if (kBoolTrue == test_13) {
      inCompiler->emitSemanticError (enumerator_11558.current_mErrorLocation (HERE), GALGAS_string ("this code is not available for '").operator_concat (var_piccoloDeviceName COMMA_SOURCE_FILE_AT_LINE (224)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (224)) COMMA_SOURCE_FILE_AT_LINE (224)) ;
    }
    enumerator_11558.gotoNextObject () ;
  }
  GALGAS_bool var_hasHighInterrupt = GALGAS_bool (false) ;
  GALGAS_bool var_highInterruptIsFast = GALGAS_bool (false) ;
  GALGAS_bool var_hasLowInterrupt = GALGAS_bool (false) ;
  GALGAS_bool var_lowInterruptIsFast = GALGAS_bool (false) ;
  cEnumerator_interruptDefinitionList enumerator_12089 (constinArgument_inPiccoloModel.mAttribute_mInterruptDefinitionList, kEnumeration_up) ;
  while (enumerator_12089.hasCurrentObject ()) {
    const enumGalgasBool test_14 = GALGAS_bool (kIsEqual, constinArgument_inPiccoloModel.reader_mProgramKind (SOURCE_FILE_AT_LINE (233)).objectCompare (GALGAS_programKind::constructor_userProgram (SOURCE_FILE_AT_LINE (233)))).boolEnum () ;
    if (kBoolTrue == test_14) {
      GALGAS_location location_15 (enumerator_12089.current_mInterruptName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_15, GALGAS_string ("interrupt routine is not allowed for a bootloader user program") COMMA_SOURCE_FILE_AT_LINE (234)) ;
    }
    const enumGalgasBool test_16 = GALGAS_bool (kIsEqual, enumerator_12089.current_mInterruptName (HERE).reader_string (SOURCE_FILE_AT_LINE (236)).objectCompare (GALGAS_string ("high"))).boolEnum () ;
    if (kBoolTrue == test_16) {
      var_highInterruptIsFast = enumerator_12089.current_mFastReturn (HERE) ;
      const enumGalgasBool test_17 = var_hasHighInterrupt.boolEnum () ;
      if (kBoolTrue == test_17) {
        GALGAS_location location_18 (enumerator_12089.current_mInterruptName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_18, GALGAS_string ("Only one 'high' interrupt routine is allowed") COMMA_SOURCE_FILE_AT_LINE (239)) ;
      }
      var_hasHighInterrupt = GALGAS_bool (true) ;
    }else if (kBoolFalse == test_16) {
      const enumGalgasBool test_19 = GALGAS_bool (kIsEqual, enumerator_12089.current_mInterruptName (HERE).reader_string (SOURCE_FILE_AT_LINE (242)).objectCompare (GALGAS_string ("low"))).boolEnum () ;
      if (kBoolTrue == test_19) {
        var_lowInterruptIsFast = enumerator_12089.current_mFastReturn (HERE) ;
        const enumGalgasBool test_20 = var_hasLowInterrupt.boolEnum () ;
        if (kBoolTrue == test_20) {
          GALGAS_location location_21 (enumerator_12089.current_mInterruptName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_21, GALGAS_string ("Only one 'low' interrupt routine is allowed") COMMA_SOURCE_FILE_AT_LINE (245)) ;
        }
        var_hasLowInterrupt = GALGAS_bool (true) ;
      }else if (kBoolFalse == test_19) {
        GALGAS_location location_22 (enumerator_12089.current_mInterruptName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_22, GALGAS_string ("An interrupt routine should be named 'low' or 'high'") COMMA_SOURCE_FILE_AT_LINE (249)) ;
      }
    }
    const enumGalgasBool test_23 = var_highInterruptIsFast.operator_and (var_lowInterruptIsFast COMMA_SOURCE_FILE_AT_LINE (251)).boolEnum () ;
    if (kBoolTrue == test_23) {
      GALGAS_location location_24 (enumerator_12089.current_mInterruptName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_24, GALGAS_string ("either low interrupt or high interrupt can be \"fast\", not both") COMMA_SOURCE_FILE_AT_LINE (252)) ;
    }
    enumerator_12089.gotoNextObject () ;
  }
  GALGAS_actualConfigurationMap var_actualConfigurationMap ;
  const enumGalgasBool test_25 = GALGAS_bool (kIsEqual, constinArgument_inPiccoloModel.reader_mProgramKind (SOURCE_FILE_AT_LINE (257)).objectCompare (GALGAS_programKind::constructor_userProgram (SOURCE_FILE_AT_LINE (257)))).boolEnum () ;
  if (kBoolTrue == test_25) {
    cEnumerator_configDefinitionList enumerator_13273 (constinArgument_inPiccoloModel.reader_mConfigDefinitionList (SOURCE_FILE_AT_LINE (258)), kEnumeration_up) ;
    while (enumerator_13273.hasCurrentObject ()) {
      inCompiler->emitSemanticError (enumerator_13273.current_mDefinitionLocation (HERE), GALGAS_string ("configuration is not allowed for a bootloader user program") COMMA_SOURCE_FILE_AT_LINE (259)) ;
      enumerator_13273.gotoNextObject () ;
    }
    var_actualConfigurationMap = GALGAS_actualConfigurationMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (261)) ;
  }else if (kBoolFalse == test_25) {
    {
    routine_buildConfig (var_piccoloDeviceModel.reader_mConfigRegisterMap (SOURCE_FILE_AT_LINE (264)), constinArgument_inPiccoloModel.reader_mConfigDefinitionList (SOURCE_FILE_AT_LINE (265)), var_listFileContents, var_actualConfigurationMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (263)) ;
    }
  }
  GALGAS_declaredByteMap var_declaredByteMap ;
  {
  routine_analyze_5F_ram_5F_sections (GALGAS_string ("DECLARED VARIABLES"), constinArgument_inPiccoloModel.reader_mRamDefinitionList (SOURCE_FILE_AT_LINE (273)), var_ramBank, var_piccoloDeviceModel.reader_mRegisterTable (SOURCE_FILE_AT_LINE (275)), var_listFileContents, var_registerTable, var_declaredByteMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (271)) ;
  }
  const enumGalgasBool test_26 = GALGAS_bool (kIsEqual, constinArgument_inPiccoloModel.reader_mProgramKind (SOURCE_FILE_AT_LINE (281)).objectCompare (GALGAS_programKind::constructor_bootloaderProgram (SOURCE_FILE_AT_LINE (281)))).boolEnum () ;
  if (kBoolTrue == test_26) {
    cEnumerator_ramBankTable enumerator_14140 (var_ramBank, kEnumeration_up) ;
    while (enumerator_14140.hasCurrentObject ()) {
      const enumGalgasBool test_27 = var_bootloaderReservedRAMmap.reader_hasKey (enumerator_14140.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (283)) COMMA_SOURCE_FILE_AT_LINE (283)).boolEnum () ;
      if (kBoolTrue == test_27) {
        GALGAS_luint var_bootloaderReservedSize ;
        var_bootloaderReservedRAMmap.method_searchKey (enumerator_14140.current_lkey (HERE), var_bootloaderReservedSize, inCompiler COMMA_SOURCE_FILE_AT_LINE (285)) ;
        const enumGalgasBool test_28 = GALGAS_bool (kIsStrictSup, enumerator_14140.current_mFirstFreeAddress (HERE).substract_operation (enumerator_14140.current_mFirstAddress (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (286)).objectCompare (var_bootloaderReservedSize.reader_uint (SOURCE_FILE_AT_LINE (286)))).boolEnum () ;
        if (kBoolTrue == test_28) {
          inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("for '").operator_concat (enumerator_14140.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (287)) COMMA_SOURCE_FILE_AT_LINE (287)).operator_concat (GALGAS_string ("' RAM bank, the bootloader implementation declares ") COMMA_SOURCE_FILE_AT_LINE (287)).operator_concat (enumerator_14140.current_mFirstFreeAddress (HERE).substract_operation (enumerator_14140.current_mFirstAddress (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (288)).reader_string (SOURCE_FILE_AT_LINE (288)) COMMA_SOURCE_FILE_AT_LINE (288)).operator_concat (GALGAS_string (" byte(s), althought the bootloader specification reserves ") COMMA_SOURCE_FILE_AT_LINE (289)).operator_concat (var_bootloaderReservedSize.reader_uint (SOURCE_FILE_AT_LINE (290)).reader_string (SOURCE_FILE_AT_LINE (290)) COMMA_SOURCE_FILE_AT_LINE (290)).operator_concat (GALGAS_string (" byte(s)") COMMA_SOURCE_FILE_AT_LINE (291)) COMMA_SOURCE_FILE_AT_LINE (287)) ;
        }
      }else if (kBoolFalse == test_27) {
        const enumGalgasBool test_29 = GALGAS_bool (kIsStrictSup, enumerator_14140.current_mFirstFreeAddress (HERE).objectCompare (enumerator_14140.current_mFirstAddress (HERE))).boolEnum () ;
        if (kBoolTrue == test_29) {
          inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("for '").operator_concat (enumerator_14140.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (294)) COMMA_SOURCE_FILE_AT_LINE (294)).operator_concat (GALGAS_string ("' RAM bank, the bootloader implementation declares ") COMMA_SOURCE_FILE_AT_LINE (294)).operator_concat (enumerator_14140.current_mFirstFreeAddress (HERE).substract_operation (enumerator_14140.current_mFirstAddress (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (295)).reader_string (SOURCE_FILE_AT_LINE (295)) COMMA_SOURCE_FILE_AT_LINE (295)).operator_concat (GALGAS_string (" byte(s), althought the bootloader specification reserves no space") COMMA_SOURCE_FILE_AT_LINE (296)) COMMA_SOURCE_FILE_AT_LINE (294)) ;
        }
      }
      enumerator_14140.gotoNextObject () ;
    }
  }
  GALGAS_uint var_RAMsize = GALGAS_uint ((PMUInt32) 0U) ;
  cEnumerator_ramBankTable enumerator_15133 (var_ramBank, kEnumeration_up) ;
  while (enumerator_15133.hasCurrentObject ()) {
    const enumGalgasBool test_30 = GALGAS_bool (kIsStrictSup, enumerator_15133.current_mLastAddressPlusOne (HERE).objectCompare (var_RAMsize)).boolEnum () ;
    if (kBoolTrue == test_30) {
      var_RAMsize = enumerator_15133.current_mLastAddressPlusOne (HERE) ;
    }
    enumerator_15133.gotoNextObject () ;
  }
  const enumGalgasBool test_31 = GALGAS_bool (gOption_piccolo_5F_options_useOldCompiler.reader_value ()).operator_not (SOURCE_FILE_AT_LINE (308)).boolEnum () ;
  if (kBoolTrue == test_31) {
    {
    routine_build_5F_ipic_31__38__5F_block_5F_representation_5F_list (constinArgument_inSourceFileName, var_piccoloDeviceModel, var_RAMsize.reader_sint (inCompiler COMMA_SOURCE_FILE_AT_LINE (313)), var_bootloaderRoutineDeclarationListForBootloaderImplementation, var_userRoutineDeclarationListForBootloaderImplementation, var_bootloaderReservedROMsize, var_bootloaderRoutineDeclarationListForUserProgramImplementation, var_userRoutineDeclarationListForUserProgramImplementation, var_accessBankSplitOffset, var_registerTable, var_declaredByteMap, constinArgument_inPiccoloModel, var_ramBank, var_hasHighInterrupt, var_hasLowInterrupt, var_piccoloDeviceModel.reader_mDeviceName (SOURCE_FILE_AT_LINE (326)).reader_string (SOURCE_FILE_AT_LINE (326)), var_piccoloDeviceModel.reader_mRegisterTable (SOURCE_FILE_AT_LINE (327)), var_actualConfigurationMap, var_listFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (310)) ;
    }
  }else if (kBoolFalse == test_31) {
    GALGAS_pic_31__38__5F_intermediate_5F_instructionList var_dataGeneratedInstructionList ;
    GALGAS_dataMap var_dataMap ;
    GALGAS_constantMap var_dataLengthConstantMap ;
    {
    routine_analyze_5F_data_5F_sections (constinArgument_inPiccoloModel.mAttribute_mDataList, var_registerTable, GALGAS_constantMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (336)), var_listFileContents, var_dataGeneratedInstructionList, var_dataMap, var_dataLengthConstantMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (333)) ;
    }
    GALGAS_pic_31__38__5F_intermediate_5F_instructionList var_generatedInstructionList ;
    {
    routine_build_5F_pic_31__38__5F_intermediate_5F_assembly_5F_instruction_5F_list (var_piccoloDeviceModel.reader_mRomSize (SOURCE_FILE_AT_LINE (345)).reader_uint (SOURCE_FILE_AT_LINE (345)).reader_sint (inCompiler COMMA_SOURCE_FILE_AT_LINE (345)), var_RAMsize.reader_sint (inCompiler COMMA_SOURCE_FILE_AT_LINE (346)), var_bootloaderRoutineDeclarationListForBootloaderImplementation, var_userRoutineDeclarationListForBootloaderImplementation, var_bootloaderReservedROMsize, var_bootloaderRoutineDeclarationListForUserProgramImplementation, var_userRoutineDeclarationListForUserProgramImplementation, var_accessBankSplitOffset, var_registerTable, var_dataMap, constinArgument_inPiccoloModel, var_hasHighInterrupt, var_hasLowInterrupt, var_dataGeneratedInstructionList, var_dataLengthConstantMap, var_generatedInstructionList, var_listFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (344)) ;
    }
    const enumGalgasBool test_32 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (364)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (gOption_piccolo_5F_options_performOptimizations.reader_value ()) COMMA_SOURCE_FILE_AT_LINE (364)).boolEnum () ;
    if (kBoolTrue == test_32) {
      {
      routine_performOptimizations (var_generatedInstructionList, var_listFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (365)) ;
      }
    }
    const enumGalgasBool test_33 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (368)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_33) {
      {
      routine_pic_31__38__5F_intermediate_5F_convertRelativeBranchsToAbsoluteWhenNeeded (var_generatedInstructionList, var_listFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (369)) ;
      }
    }
    const enumGalgasBool test_34 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (372)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_34) {
      GALGAS_uint var_usedROMsize ;
      {
      routine_build_5F_pic_31__38__5F_intermediate_5F_binary_5F_code (var_generatedInstructionList, var_piccoloDeviceModel.reader_mRomSize (SOURCE_FILE_AT_LINE (377)).reader_uint (SOURCE_FILE_AT_LINE (377)), var_actualConfigurationMap, var_usedROMsize, inCompiler COMMA_SOURCE_FILE_AT_LINE (375)) ;
      }
      GALGAS_string var_contents ;
      {
      routine_getGeneratedContents (var_contents, inCompiler COMMA_SOURCE_FILE_AT_LINE (382)) ;
      }
      GALGAS_string var_destinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (383)).operator_concat (GALGAS_string (".hex") COMMA_SOURCE_FILE_AT_LINE (383)) ;
      GALGAS_bool joker_18432_0 ; // Joker input parameter
      var_contents.method_writeToFileWhenDifferentContents (var_destinationFile, joker_18432_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (384)) ;
      const enumGalgasBool test_35 = GALGAS_bool (gOption_piccolo_5F_options_output_5F_C_5F_Array.reader_value ()).boolEnum () ;
      if (kBoolTrue == test_35) {
        GALGAS_string var_baseName = constinArgument_inSourceFileName.reader_lastPathComponent (SOURCE_FILE_AT_LINE (386)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (386)) ;
        {
        routine_get_5F_C_5F_ArrayImplementation (var_baseName, var_contents, inCompiler COMMA_SOURCE_FILE_AT_LINE (387)) ;
        }
        var_destinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (388)).operator_concat (GALGAS_string (".c") COMMA_SOURCE_FILE_AT_LINE (388)) ;
        GALGAS_bool joker_18812_0 ; // Joker input parameter
        var_contents.method_writeToFileWhenDifferentContents (var_destinationFile, joker_18812_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (389)) ;
        {
        routine_get_5F_C_5F_ArrayHeader (var_baseName, var_contents, inCompiler COMMA_SOURCE_FILE_AT_LINE (390)) ;
        }
        var_destinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (391)).operator_concat (GALGAS_string (".h") COMMA_SOURCE_FILE_AT_LINE (391)) ;
        GALGAS_bool joker_19019_0 ; // Joker input parameter
        var_contents.method_writeToFileWhenDifferentContents (var_destinationFile, joker_19019_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (392)) ;
      }
      const enumGalgasBool test_36 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
      if (kBoolTrue == test_36) {
        GALGAS_string var_verboseMessage = GALGAS_string ("Resource usage:\n") ;
        var_verboseMessage.dotAssign_operation (GALGAS_string ("  ROM size: ").operator_concat (var_piccoloDeviceModel.reader_mRomSize (SOURCE_FILE_AT_LINE (397)).reader_uint (SOURCE_FILE_AT_LINE (397)).reader_string (SOURCE_FILE_AT_LINE (397)) COMMA_SOURCE_FILE_AT_LINE (397)).operator_concat (GALGAS_string (" bytes;") COMMA_SOURCE_FILE_AT_LINE (397)) COMMA_SOURCE_FILE_AT_LINE (397)) ;
        var_verboseMessage.dotAssign_operation (GALGAS_string (" used: ").operator_concat (var_usedROMsize.reader_string (SOURCE_FILE_AT_LINE (398)) COMMA_SOURCE_FILE_AT_LINE (398)).operator_concat (GALGAS_string (" bytes (") COMMA_SOURCE_FILE_AT_LINE (398)) COMMA_SOURCE_FILE_AT_LINE (398)) ;
        var_verboseMessage.dotAssign_operation (var_usedROMsize.multiply_operation (GALGAS_uint ((PMUInt32) 100U), inCompiler COMMA_SOURCE_FILE_AT_LINE (399)).divide_operation (var_piccoloDeviceModel.reader_mRomSize (SOURCE_FILE_AT_LINE (399)).reader_uint (SOURCE_FILE_AT_LINE (399)), inCompiler COMMA_SOURCE_FILE_AT_LINE (399)).reader_string (SOURCE_FILE_AT_LINE (399)).operator_concat (GALGAS_string ("%).\n") COMMA_SOURCE_FILE_AT_LINE (399)) COMMA_SOURCE_FILE_AT_LINE (399)) ;
        cEnumerator_ramBankTable enumerator_19486 (var_ramBank, kEnumeration_up) ;
        while (enumerator_19486.hasCurrentObject ()) {
          GALGAS_uint var_bankSize = enumerator_19486.current_mLastAddressPlusOne (HERE).substract_operation (enumerator_19486.current_mFirstAddress (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (401)) ;
          GALGAS_uint var_usedSize = enumerator_19486.current_mFirstFreeAddress (HERE).substract_operation (enumerator_19486.current_mFirstAddress (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (402)) ;
          var_verboseMessage.dotAssign_operation (GALGAS_string ("  RAM bank '").operator_concat (enumerator_19486.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (403)) COMMA_SOURCE_FILE_AT_LINE (403)).operator_concat (GALGAS_string ("': ") COMMA_SOURCE_FILE_AT_LINE (403)) COMMA_SOURCE_FILE_AT_LINE (403)) ;
          var_verboseMessage.dotAssign_operation (var_bankSize.reader_string (SOURCE_FILE_AT_LINE (404)).operator_concat (GALGAS_string (" bytes, used ") COMMA_SOURCE_FILE_AT_LINE (404)) COMMA_SOURCE_FILE_AT_LINE (404)) ;
          var_verboseMessage.dotAssign_operation (var_usedSize.reader_string (SOURCE_FILE_AT_LINE (405)).operator_concat (GALGAS_string (" bytes (") COMMA_SOURCE_FILE_AT_LINE (405)) COMMA_SOURCE_FILE_AT_LINE (405)) ;
          var_verboseMessage.dotAssign_operation (var_usedSize.multiply_operation (GALGAS_uint ((PMUInt32) 100U), inCompiler COMMA_SOURCE_FILE_AT_LINE (406)).divide_operation (var_bankSize, inCompiler COMMA_SOURCE_FILE_AT_LINE (406)).reader_string (SOURCE_FILE_AT_LINE (406)).operator_concat (GALGAS_string ("%).\n") COMMA_SOURCE_FILE_AT_LINE (406)) COMMA_SOURCE_FILE_AT_LINE (406)) ;
          enumerator_19486.gotoNextObject () ;
        }
        inCompiler->printMessage (var_verboseMessage COMMA_SOURCE_FILE_AT_LINE (408)) ;
      }
      const enumGalgasBool test_37 = GALGAS_bool (gOption_piccolo_5F_options_generateAssembly.reader_value ()).boolEnum () ;
      if (kBoolTrue == test_37) {
        GALGAS_string var_assemblyCode ;
        {
        routine_pic_31__38__5F_build_5F_assembly_5F_code (var_piccoloDeviceModel.reader_mDeviceName (SOURCE_FILE_AT_LINE (413)).reader_string (SOURCE_FILE_AT_LINE (413)), var_piccoloDeviceModel.reader_mRegisterTable (SOURCE_FILE_AT_LINE (414)), var_registerTable, var_generatedInstructionList, var_actualConfigurationMap, var_assemblyCode, inCompiler COMMA_SOURCE_FILE_AT_LINE (412)) ;
        }
        GALGAS_string var_asmDestinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (420)).operator_concat (GALGAS_string (".asm") COMMA_SOURCE_FILE_AT_LINE (420)) ;
        GALGAS_bool joker_20525_0 ; // Joker input parameter
        var_assemblyCode.method_writeToFileWhenDifferentContents (var_asmDestinationFile, joker_20525_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (421)) ;
      }
    }else if (kBoolFalse == test_34) {
      GALGAS_string var_hexDestinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (424)).operator_concat (GALGAS_string (".hex") COMMA_SOURCE_FILE_AT_LINE (424)) ;
      {
      GALGAS_string::class_method_deleteFileIfExists (var_hexDestinationFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (425)) ;
      }
      GALGAS_string var_asmDestinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (426)).operator_concat (GALGAS_string (".asm") COMMA_SOURCE_FILE_AT_LINE (426)) ;
      {
      GALGAS_string::class_method_deleteFileIfExists (var_asmDestinationFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (427)) ;
      }
    }
    const enumGalgasBool test_38 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (430)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_38) {
      {
      routine_pic_31__38__5F_build_5F_listing_5F_of_5F_generated_5F_code (var_generatedInstructionList, var_listFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (431)) ;
      }
    }
    const enumGalgasBool test_39 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (437)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (kIsNotEqual, constinArgument_inPiccoloModel.mAttribute_mProgramKind.objectCompare (GALGAS_programKind::constructor_userProgram (SOURCE_FILE_AT_LINE (437)))) COMMA_SOURCE_FILE_AT_LINE (437)).boolEnum () ;
    if (kBoolTrue == test_39) {
      {
      routine_pic_31__38__5F_compute_5F_metrics (constinArgument_inPiccoloModel, var_userRoutineDeclarationListForBootloaderImplementation, var_bootloaderRoutineDeclarationListForUserProgramImplementation, var_generatedInstructionList, var_listFileContents, constinArgument_inSourceFileName, inCompiler COMMA_SOURCE_FILE_AT_LINE (438)) ;
      }
    }
  }
  const enumGalgasBool test_40 = GALGAS_bool (gOption_piccolo_5F_options_ouputListingFile.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_40) {
    var_listFileContents.dotAssign_operation (GALGAS_string ("*******************************************************************************\n") COMMA_SOURCE_FILE_AT_LINE (450)) ;
    GALGAS_string var_listFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (451)).operator_concat (GALGAS_string (".list") COMMA_SOURCE_FILE_AT_LINE (451)) ;
    GALGAS_bool joker_22027_0 ; // Joker input parameter
    var_listFileContents.method_writeToFileWhenDifferentContents (var_listFile, joker_22027_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (452)) ;
  }
}


//---------------------------------------------------------------------------*

GALGAS_declaredRoutineMap_2E_element::GALGAS_declaredRoutineMap_2E_element (void) :
mAttribute_lkey () {
}

//---------------------------------------------------------------------------*

GALGAS_declaredRoutineMap_2E_element::~ GALGAS_declaredRoutineMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_declaredRoutineMap_2E_element::GALGAS_declaredRoutineMap_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//---------------------------------------------------------------------------*

GALGAS_declaredRoutineMap_2E_element GALGAS_declaredRoutineMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_declaredRoutineMap_2E_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_declaredRoutineMap_2E_element GALGAS_declaredRoutineMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_declaredRoutineMap_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_declaredRoutineMap_2E_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_declaredRoutineMap_2E_element::objectCompare (const GALGAS_declaredRoutineMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_declaredRoutineMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_declaredRoutineMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_declaredRoutineMap_2E_element::description (C_String & ioString,
                                                        const PMSInt32 inIndentation) const {
  ioString << "<struct @declaredRoutineMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_declaredRoutineMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @declaredRoutineMap.element type                      *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_declaredRoutineMap_2E_element ("declaredRoutineMap.element",
                                                      NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_declaredRoutineMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_declaredRoutineMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_declaredRoutineMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_declaredRoutineMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_declaredRoutineMap_2E_element GALGAS_declaredRoutineMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_declaredRoutineMap_2E_element result ;
  const GALGAS_declaredRoutineMap_2E_element * p = (const GALGAS_declaredRoutineMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_declaredRoutineMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("declaredRoutineMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


