//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'pic18_semantics.cpp'                         *
//                        Generated by version 2.5.0                         *
//                      august 2nd, 2013, at 12h1'20"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "pic18_semantics.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "piccoloDevice_grammar.h"
#include "piccolo_options.h"
#include "pic18_grammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "pic18_semantics.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'analyze_data_sections'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyze_5F_data_5F_sections (const GALGAS_dataList constinArgument0,
                                          GALGAS_string & ioArgument1,
                                          GALGAS_pic_31__38__5F_intermediate_5F_instructionList & outArgument2,
                                          GALGAS_dataMap & outArgument3,
                                          GALGAS_constantMap & outArgument4,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Routine 'pic18_build_listing_of_generated_code'              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_pic_31__38__5F_build_5F_listing_5F_of_5F_generated_5F_code (const GALGAS_pic_31__38__5F_intermediate_5F_instructionList constinArgument_inInstructionList,
                                                                         GALGAS_string & ioArgument_ioListFileContents,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_pic_31__38__5F_intermediate_5F_symbolTable var_symbolTable = GALGAS_pic_31__38__5F_intermediate_5F_symbolTable::constructor_emptyMap (SOURCE_FILE_AT_LINE (23)) ;
  GALGAS_uint var_currentAddress = GALGAS_uint ((PMUInt32) 0U) ;
  cEnumerator_pic_31__38__5F_intermediate_5F_instructionList enumerator_1094 (constinArgument_inInstructionList, kEnumeration_up) ;
  while (enumerator_1094.hasCurrentObject ()) {
    callCategoryMethod_enterLabelAtAddress ((const cPtr_pic_31__38__5F_intermediate_5F_instruction *) enumerator_1094.current_mInstruction (HERE).ptr (), var_symbolTable, var_currentAddress, inCompiler COMMA_SOURCE_FILE_AT_LINE (26)) ;
    enumerator_1094.gotoNextObject () ;
  }
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*******************************************************************************\n") COMMA_SOURCE_FILE_AT_LINE (28)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*                              GENERATED CODE                                 *\n") COMMA_SOURCE_FILE_AT_LINE (29)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*******************************************************************************\n"
    "\n") COMMA_SOURCE_FILE_AT_LINE (30)) ;
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (" Line  Address  Code      Assembly\n") COMMA_SOURCE_FILE_AT_LINE (31)) ;
  GALGAS_uint var_bccLabelIndex = GALGAS_uint ((PMUInt32) 0U) ;
  var_currentAddress = GALGAS_uint ((PMUInt32) 0U) ;
  cEnumerator_pic_31__38__5F_intermediate_5F_instructionList enumerator_1666 (constinArgument_inInstructionList, kEnumeration_up) ;
  GALGAS_uint index_1660 ((PMUInt32) 0) ;
  while (enumerator_1666.hasCurrentObject ()) {
    GALGAS_stringlist var_lineList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (35)) ;
    callCategoryMethod_buildAssemblyCode ((const cPtr_pic_31__38__5F_intermediate_5F_instruction *) enumerator_1666.current_mInstruction (HERE).ptr (), var_lineList, var_bccLabelIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (36)) ;
    GALGAS_emittedCodeList var_code = GALGAS_emittedCodeList::constructor_emptyList (SOURCE_FILE_AT_LINE (37)) ;
    callCategoryMethod_generateBinaryCodeAtAddress ((const cPtr_pic_31__38__5F_intermediate_5F_instruction *) enumerator_1666.current_mInstruction (HERE).ptr (), var_symbolTable, var_currentAddress, var_code, inCompiler COMMA_SOURCE_FILE_AT_LINE (38)) ;
    if (var_lineList.reader_length (SOURCE_FILE_AT_LINE (39)).isValid ()) {
      PMUInt32 variant_1915 = var_lineList.reader_length (SOURCE_FILE_AT_LINE (39)).uintValue () ;
      bool loop_1915 = true ;
      while (loop_1915) {
        loop_1915 = GALGAS_bool (kIsStrictSup, var_lineList.reader_length (SOURCE_FILE_AT_LINE (40)).objectCompare (var_code.reader_length (SOURCE_FILE_AT_LINE (40)))).isValid () ;
        if (loop_1915) {
          loop_1915 = GALGAS_bool (kIsStrictSup, var_lineList.reader_length (SOURCE_FILE_AT_LINE (40)).objectCompare (var_code.reader_length (SOURCE_FILE_AT_LINE (40)))).boolValue () ;
        }
        if (loop_1915 && (0 == variant_1915)) {
          loop_1915 = false ;
          inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (39)) ;
        }
        if (loop_1915) {
          variant_1915 -- ;
          var_code.addAssign_operation (GALGAS_uintlist::constructor_emptyList (SOURCE_FILE_AT_LINE (41)) COMMA_SOURCE_FILE_AT_LINE (41)) ;
        }
      }
    }
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_lineList.reader_length (SOURCE_FILE_AT_LINE (43)).objectCompare (var_code.reader_length (SOURCE_FILE_AT_LINE (43)))).boolEnum () ;
    if (kBoolTrue == test_0) {
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("internal error for listing line ").operator_concat (index_1660.reader_string (SOURCE_FILE_AT_LINE (44)) COMMA_SOURCE_FILE_AT_LINE (44)).operator_concat (GALGAS_string (" : ") COMMA_SOURCE_FILE_AT_LINE (45)).operator_concat (var_lineList.reader_length (SOURCE_FILE_AT_LINE (45)).reader_string (SOURCE_FILE_AT_LINE (45)) COMMA_SOURCE_FILE_AT_LINE (45)).operator_concat (GALGAS_string (" != ") COMMA_SOURCE_FILE_AT_LINE (45)).operator_concat (var_code.reader_length (SOURCE_FILE_AT_LINE (45)).reader_string (SOURCE_FILE_AT_LINE (45)) COMMA_SOURCE_FILE_AT_LINE (45)) COMMA_SOURCE_FILE_AT_LINE (44)) ;
    }
    cEnumerator_stringlist enumerator_2271 (var_lineList, kEnumeration_up) ;
    cEnumerator_emittedCodeList enumerator_2279 (var_code, kEnumeration_up) ;
    while (enumerator_2271.hasCurrentObject () && enumerator_2279.hasCurrentObject ()) {
      GALGAS_string var_codeString = GALGAS_string::makeEmptyString () ;
      cEnumerator_uintlist enumerator_2343 (enumerator_2279.current_mCode (HERE), kEnumeration_up) ;
      while (enumerator_2343.hasCurrentObject ()) {
        var_codeString.dotAssign_operation (enumerator_2343.current_mValue (HERE).reader_xString (SOURCE_FILE_AT_LINE (50)).reader_stringByLeftPadding (GALGAS_uint ((PMUInt32) 4U), GALGAS_char (TO_UNICODE (48)) COMMA_SOURCE_FILE_AT_LINE (50)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (50)) COMMA_SOURCE_FILE_AT_LINE (50)) ;
        enumerator_2343.gotoNextObject () ;
      }
      ioArgument_ioListFileContents.dotAssign_operation (index_1660.reader_string (SOURCE_FILE_AT_LINE (52)).reader_stringByLeftPadding (GALGAS_uint ((PMUInt32) 5U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (52)).operator_concat (GALGAS_string ("  ") COMMA_SOURCE_FILE_AT_LINE (52)).operator_concat (var_currentAddress.reader_xString (SOURCE_FILE_AT_LINE (53)).reader_stringByLeftPadding (GALGAS_uint ((PMUInt32) 6U), GALGAS_char (TO_UNICODE (48)) COMMA_SOURCE_FILE_AT_LINE (53)) COMMA_SOURCE_FILE_AT_LINE (53)).operator_concat (GALGAS_string (" : ") COMMA_SOURCE_FILE_AT_LINE (53)).operator_concat (var_codeString.reader_stringByRightPadding (GALGAS_uint ((PMUInt32) 10U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (54)) COMMA_SOURCE_FILE_AT_LINE (54)).operator_concat (enumerator_2271.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (55)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (55)) COMMA_SOURCE_FILE_AT_LINE (52)) ;
      var_currentAddress = var_currentAddress.add_operation (enumerator_2279.current_mCode (HERE).reader_length (SOURCE_FILE_AT_LINE (56)).multiply_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (56)), inCompiler COMMA_SOURCE_FILE_AT_LINE (56)) ;
      enumerator_2271.gotoNextObject () ;
      enumerator_2279.gotoNextObject () ;
    }
    enumerator_1666.gotoNextObject () ;
    index_1660.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (34)) ;
  }
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (59)) ;
}


//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'analyze_data_sections'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyze_5F_data_5F_sections (const GALGAS_dataList constinArgument_inDataDefinitionList,
                                          GALGAS_string & ioArgument_ioListFileContents,
                                          GALGAS_pic_31__38__5F_intermediate_5F_instructionList & outArgument_outDataGeneratedInstructionList,
                                          GALGAS_dataMap & outArgument_outDataMap,
                                          GALGAS_constantMap & outArgument_outConstantMap,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outDataGeneratedInstructionList.drop () ; // Release 'out' argument
  outArgument_outDataMap.drop () ; // Release 'out' argument
  outArgument_outConstantMap.drop () ; // Release 'out' argument
  outArgument_outConstantMap = GALGAS_constantMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (75)) ;
  outArgument_outDataGeneratedInstructionList = GALGAS_pic_31__38__5F_intermediate_5F_instructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (76)) ;
  outArgument_outDataMap = GALGAS_dataMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (77)) ;
  cEnumerator_dataList enumerator_3713 (constinArgument_inDataDefinitionList, kEnumeration_up) ;
  const bool bool_0 = true ;
  if (enumerator_3713.hasCurrentObject () && bool_0) {
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*******************************************************************************\n") COMMA_SOURCE_FILE_AT_LINE (80)) ;
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*                    D A T A    D E C L A R A T I O N                         *\n") COMMA_SOURCE_FILE_AT_LINE (81)) ;
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*******************************************************************************\n"
      "\n") COMMA_SOURCE_FILE_AT_LINE (82)) ;
    while (enumerator_3713.hasCurrentObject () && bool_0) {
      ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("Data '").operator_concat (enumerator_3713.current_mDataName (HERE).reader_string (SOURCE_FILE_AT_LINE (84)) COMMA_SOURCE_FILE_AT_LINE (84)).operator_concat (GALGAS_string ("', ") COMMA_SOURCE_FILE_AT_LINE (84)).operator_concat (enumerator_3713.current_mValueList (HERE).reader_length (SOURCE_FILE_AT_LINE (84)).reader_string (SOURCE_FILE_AT_LINE (84)) COMMA_SOURCE_FILE_AT_LINE (84)).operator_concat (GALGAS_string (" words (") COMMA_SOURCE_FILE_AT_LINE (84)).operator_concat (enumerator_3713.current_mValueList (HERE).reader_length (SOURCE_FILE_AT_LINE (84)).multiply_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (84)).reader_string (SOURCE_FILE_AT_LINE (84)) COMMA_SOURCE_FILE_AT_LINE (84)).operator_concat (GALGAS_string (" bytes).\n") COMMA_SOURCE_FILE_AT_LINE (84)) COMMA_SOURCE_FILE_AT_LINE (84)) ;
      {
      outArgument_outDataMap.modifier_insertKey (enumerator_3713.current_mDataName (HERE), enumerator_3713.current_mValueList (HERE).reader_length (SOURCE_FILE_AT_LINE (85)), inCompiler COMMA_SOURCE_FILE_AT_LINE (85)) ;
      }
      {
      outArgument_outConstantMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_3713.current_mDataName (HERE).mAttribute_string.operator_concat (GALGAS_string ("_BYTE_COUNT") COMMA_SOURCE_FILE_AT_LINE (86)), enumerator_3713.current_mDataName (HERE).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (86)), enumerator_3713.current_mValueList (HERE).reader_length (SOURCE_FILE_AT_LINE (86)).multiply_operation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (86)).reader_sint (inCompiler COMMA_SOURCE_FILE_AT_LINE (86)), inCompiler COMMA_SOURCE_FILE_AT_LINE (86)) ;
      }
      GALGAS_lstring var_dataName = GALGAS_lstring::constructor_new (GALGAS_string ("_data_").operator_concat (enumerator_3713.current_mDataName (HERE).reader_string (SOURCE_FILE_AT_LINE (87)) COMMA_SOURCE_FILE_AT_LINE (87)), enumerator_3713.current_mDataName (HERE).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (87)) ;
      outArgument_outDataGeneratedInstructionList.addAssign_operation (GALGAS_pic_31__38__5F_intermediate_5F_pseudo_5F_LABEL::constructor_new (var_dataName, GALGAS_bool (true) COMMA_SOURCE_FILE_AT_LINE (88)) COMMA_SOURCE_FILE_AT_LINE (88)) ;
      cEnumerator_luintlist enumerator_4594 (enumerator_3713.current_mValueList (HERE), kEnumeration_up) ;
      while (enumerator_4594.hasCurrentObject ()) {
        const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, enumerator_4594.current_mValue (HERE).mAttribute_uint.objectCompare (GALGAS_uint ((PMUInt32) 65535U))).boolEnum () ;
        if (kBoolTrue == test_1) {
          GALGAS_location location_2 (enumerator_4594.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_2, GALGAS_string ("data value is ").operator_concat (enumerator_4594.current_mValue (HERE).mAttribute_uint.reader_hexString (SOURCE_FILE_AT_LINE (91)) COMMA_SOURCE_FILE_AT_LINE (91)).operator_concat (GALGAS_string (" (greater than 0xFFFF)") COMMA_SOURCE_FILE_AT_LINE (91)) COMMA_SOURCE_FILE_AT_LINE (91)) ;
        }else if (kBoolFalse == test_1) {
          outArgument_outDataGeneratedInstructionList.addAssign_operation (GALGAS_pic_31__38__5F_intermediate_5F_word::constructor_new (enumerator_4594.current_mValue (HERE).mAttribute_uint COMMA_SOURCE_FILE_AT_LINE (93)) COMMA_SOURCE_FILE_AT_LINE (93)) ;
        }
        enumerator_4594.gotoNextObject () ;
      }
      enumerator_3713.gotoNextObject () ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'pic18_analyze'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_pic_31__38__5F_analyze (const GALGAS_piccoloModel constinArgument_inPiccoloModel,
                                     const GALGAS_string constinArgument_inSourceFileName,
                                     C_Compiler * inCompiler
                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_sourceFileBaseName = constinArgument_inSourceFileName.reader_lastPathComponent (SOURCE_FILE_AT_LINE (107)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (107)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_sourceFileBaseName.objectCompare (constinArgument_inPiccoloModel.reader_mProgramName (SOURCE_FILE_AT_LINE (108)).reader_string (SOURCE_FILE_AT_LINE (108)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (constinArgument_inPiccoloModel.reader_mProgramName (SOURCE_FILE_AT_LINE (109)).reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the program name ('").operator_concat (constinArgument_inPiccoloModel.reader_mProgramName (SOURCE_FILE_AT_LINE (109)).reader_string (SOURCE_FILE_AT_LINE (109)) COMMA_SOURCE_FILE_AT_LINE (109)).operator_concat (GALGAS_string ("') should be identical to the file base name '") COMMA_SOURCE_FILE_AT_LINE (110)).operator_concat (var_sourceFileBaseName COMMA_SOURCE_FILE_AT_LINE (110)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (110)) COMMA_SOURCE_FILE_AT_LINE (109)) ;
  }
  GALGAS_string var_listFileContents = GALGAS_string::makeEmptyString () ;
  GALGAS_piccoloDeviceModel var_piccoloDeviceModel ;
  GALGAS_uint var_accessBankSplitOffset ;
  GALGAS_ramBankTable var_ramBank ;
  GALGAS_bootloaderReservedRAMmap var_bootloaderReservedRAMmap ;
  GALGAS_routineDeclarationList var_bootloaderRoutineDeclarationListForBootloaderImplementation ;
  GALGAS_routineDeclarationList var_userRoutineDeclarationListForBootloaderImplementation ;
  GALGAS_routineDeclarationList var_bootloaderRoutineDeclarationListForUserProgramImplementation ;
  GALGAS_routineDeclarationList var_userRoutineDeclarationListForUserProgramImplementation ;
  GALGAS_luint var_bootloaderReservedROMsize ;
  GALGAS_registerTable var_registerTable ;
  GALGAS_string var_piccoloDeviceName ;
  if (constinArgument_inPiccoloModel.mAttribute_mProgramKind.isValid ()) {
    switch (constinArgument_inPiccoloModel.mAttribute_mProgramKind.enumValue ()) {
    case GALGAS_programKind::kNotBuilt:
      break ;
    case GALGAS_programKind::kEnum_regularProgram: {
      var_piccoloDeviceName = constinArgument_inPiccoloModel.mAttribute_mDeviceNameOrBootLoaderReference.mAttribute_string ;
      {
      routine_parseDeviceDefinition (constinArgument_inPiccoloModel.reader_mDeviceNameOrBootLoaderReference (SOURCE_FILE_AT_LINE (128)), var_piccoloDeviceModel, inCompiler COMMA_SOURCE_FILE_AT_LINE (128)) ;
      }
      if (var_piccoloDeviceModel.reader_mProcessorType (SOURCE_FILE_AT_LINE (129)).isValid ()) {
        switch (var_piccoloDeviceModel.reader_mProcessorType (SOURCE_FILE_AT_LINE (129)).enumValue ()) {
        case GALGAS_processorType::kNotBuilt:
          break ;
        case GALGAS_processorType::kEnum_pic_31__38__5F__36__30_: {
          var_accessBankSplitOffset = GALGAS_uint ((PMUInt32) 96U) ;
          } break ;
        case GALGAS_processorType::kEnum_pic_31__38__5F__38__30_: {
          var_accessBankSplitOffset = GALGAS_uint ((PMUInt32) 128U) ;
          } break ;
        case GALGAS_processorType::kEnum_midrange: {
          GALGAS_location location_2 (constinArgument_inPiccoloModel.reader_mDeviceNameOrBootLoaderReference (SOURCE_FILE_AT_LINE (132)).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_2, GALGAS_string ("a midrange device is not accepted here") COMMA_SOURCE_FILE_AT_LINE (132)) ;
          var_accessBankSplitOffset.drop () ; // Release error dropped variable
          } break ;
        case GALGAS_processorType::kEnum_baseline: {
          GALGAS_location location_3 (constinArgument_inPiccoloModel.reader_mDeviceNameOrBootLoaderReference (SOURCE_FILE_AT_LINE (133)).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_3, GALGAS_string ("a baseline device is not accepted here") COMMA_SOURCE_FILE_AT_LINE (133)) ;
          var_accessBankSplitOffset.drop () ; // Release error dropped variable
          } break ;
        }
      }
      var_ramBank = var_piccoloDeviceModel.reader_mRamBankTable (SOURCE_FILE_AT_LINE (135)) ;
      var_bootloaderReservedRAMmap = GALGAS_bootloaderReservedRAMmap::constructor_emptyMap (SOURCE_FILE_AT_LINE (136)) ;
      var_registerTable = var_piccoloDeviceModel.reader_mRegisterTable (SOURCE_FILE_AT_LINE (137)) ;
      var_bootloaderRoutineDeclarationListForBootloaderImplementation = GALGAS_routineDeclarationList::constructor_emptyList (SOURCE_FILE_AT_LINE (138)) ;
      var_userRoutineDeclarationListForBootloaderImplementation = GALGAS_routineDeclarationList::constructor_emptyList (SOURCE_FILE_AT_LINE (139)) ;
      var_bootloaderRoutineDeclarationListForUserProgramImplementation = GALGAS_routineDeclarationList::constructor_emptyList (SOURCE_FILE_AT_LINE (140)) ;
      var_userRoutineDeclarationListForUserProgramImplementation = GALGAS_routineDeclarationList::constructor_emptyList (SOURCE_FILE_AT_LINE (141)) ;
      var_bootloaderReservedROMsize = GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (142)) ;
      } break ;
    case GALGAS_programKind::kEnum_bootloaderProgram: {
      var_bootloaderRoutineDeclarationListForUserProgramImplementation = GALGAS_routineDeclarationList::constructor_emptyList (SOURCE_FILE_AT_LINE (144)) ;
      var_userRoutineDeclarationListForUserProgramImplementation = GALGAS_routineDeclarationList::constructor_emptyList (SOURCE_FILE_AT_LINE (145)) ;
      {
      cGrammar_pic_31__38__5F_grammar::_performSourceFileParsing_importBootloaderSpecification (inCompiler, constinArgument_inPiccoloModel.reader_mDeviceNameOrBootLoaderReference (SOURCE_FILE_AT_LINE (146)), var_piccoloDeviceModel, var_piccoloDeviceName, var_accessBankSplitOffset, var_ramBank, var_registerTable, var_bootloaderReservedRAMmap, var_bootloaderRoutineDeclarationListForBootloaderImplementation, var_userRoutineDeclarationListForBootloaderImplementation, var_bootloaderReservedROMsize COMMA_SOURCE_FILE_AT_LINE (146)) ;
      }
      cEnumerator_ramBankTable enumerator_8656 (var_ramBank, kEnumeration_up) ;
      while (enumerator_8656.hasCurrentObject ()) {
        {
        var_ramBank.modifier_setMFirstFreeAddressForKey (enumerator_8656.current_mFirstAddress (HERE), enumerator_8656.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (158)), inCompiler COMMA_SOURCE_FILE_AT_LINE (158)) ;
        }
        enumerator_8656.gotoNextObject () ;
      }
      } break ;
    case GALGAS_programKind::kEnum_userProgram: {
      {
      cGrammar_pic_31__38__5F_grammar::_performSourceFileParsing_importBootloaderSpecification (inCompiler, constinArgument_inPiccoloModel.reader_mDeviceNameOrBootLoaderReference (SOURCE_FILE_AT_LINE (161)), var_piccoloDeviceModel, var_piccoloDeviceName, var_accessBankSplitOffset, var_ramBank, var_registerTable, var_bootloaderReservedRAMmap, var_bootloaderRoutineDeclarationListForUserProgramImplementation, var_userRoutineDeclarationListForUserProgramImplementation, var_bootloaderReservedROMsize COMMA_SOURCE_FILE_AT_LINE (161)) ;
      }
      var_bootloaderRoutineDeclarationListForBootloaderImplementation = GALGAS_routineDeclarationList::constructor_emptyList (SOURCE_FILE_AT_LINE (172)) ;
      var_userRoutineDeclarationListForBootloaderImplementation = GALGAS_routineDeclarationList::constructor_emptyList (SOURCE_FILE_AT_LINE (173)) ;
      } break ;
    }
  }
  cEnumerator_checkpicList enumerator_9576 (constinArgument_inPiccoloModel.mAttribute_mCheckpicList, kEnumeration_up) ;
  while (enumerator_9576.hasCurrentObject ()) {
    GALGAS_bool var_found = GALGAS_bool (false) ;
    cEnumerator_lstringlist enumerator_9632 (enumerator_9576.current_mValueList (HERE), kEnumeration_up) ;
    bool bool_4 = var_found.operator_not (SOURCE_FILE_AT_LINE (178)).isValidAndTrue () ;
    if (enumerator_9632.hasCurrentObject () && bool_4) {
      while (enumerator_9632.hasCurrentObject () && bool_4) {
        var_found = GALGAS_bool (kIsEqual, enumerator_9632.current_mValue (HERE).mAttribute_string.objectCompare (var_piccoloDeviceName)) ;
        enumerator_9632.gotoNextObject () ;
        if (enumerator_9632.hasCurrentObject ()) {
          bool_4 = var_found.operator_not (SOURCE_FILE_AT_LINE (178)).isValidAndTrue () ;
        }
      }
    }
    const enumGalgasBool test_5 = var_found.operator_not (SOURCE_FILE_AT_LINE (181)).boolEnum () ;
    if (kBoolTrue == test_5) {
      inCompiler->emitSemanticError (enumerator_9576.current_mErrorLocation (HERE), GALGAS_string ("this code is not available for '").operator_concat (var_piccoloDeviceName COMMA_SOURCE_FILE_AT_LINE (182)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (182)) COMMA_SOURCE_FILE_AT_LINE (182)) ;
    }
    enumerator_9576.gotoNextObject () ;
  }
  GALGAS_bool var_hasHighInterrupt = GALGAS_bool (false) ;
  GALGAS_bool var_highInterruptIsFast = GALGAS_bool (false) ;
  GALGAS_bool var_hasLowInterrupt = GALGAS_bool (false) ;
  GALGAS_bool var_lowInterruptIsFast = GALGAS_bool (false) ;
  cEnumerator_interruptDefinitionList enumerator_10107 (constinArgument_inPiccoloModel.mAttribute_mInterruptDefinitionList, kEnumeration_up) ;
  while (enumerator_10107.hasCurrentObject ()) {
    const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, constinArgument_inPiccoloModel.reader_mProgramKind (SOURCE_FILE_AT_LINE (191)).objectCompare (GALGAS_programKind::constructor_userProgram (SOURCE_FILE_AT_LINE (191)))).boolEnum () ;
    if (kBoolTrue == test_6) {
      GALGAS_location location_7 (enumerator_10107.current_mInterruptName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_7, GALGAS_string ("interrupt routine is not allowed for a bootloader user program") COMMA_SOURCE_FILE_AT_LINE (192)) ;
    }
    const enumGalgasBool test_8 = GALGAS_bool (kIsEqual, enumerator_10107.current_mInterruptName (HERE).reader_string (SOURCE_FILE_AT_LINE (194)).objectCompare (GALGAS_string ("high"))).boolEnum () ;
    if (kBoolTrue == test_8) {
      var_highInterruptIsFast = enumerator_10107.current_mFastReturn (HERE) ;
      const enumGalgasBool test_9 = var_hasHighInterrupt.boolEnum () ;
      if (kBoolTrue == test_9) {
        GALGAS_location location_10 (enumerator_10107.current_mInterruptName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_10, GALGAS_string ("Only one 'high' interrupt routine is allowed") COMMA_SOURCE_FILE_AT_LINE (197)) ;
      }
      var_hasHighInterrupt = GALGAS_bool (true) ;
    }else if (kBoolFalse == test_8) {
      const enumGalgasBool test_11 = GALGAS_bool (kIsEqual, enumerator_10107.current_mInterruptName (HERE).reader_string (SOURCE_FILE_AT_LINE (200)).objectCompare (GALGAS_string ("low"))).boolEnum () ;
      if (kBoolTrue == test_11) {
        var_lowInterruptIsFast = enumerator_10107.current_mFastReturn (HERE) ;
        const enumGalgasBool test_12 = var_hasLowInterrupt.boolEnum () ;
        if (kBoolTrue == test_12) {
          GALGAS_location location_13 (enumerator_10107.current_mInterruptName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_13, GALGAS_string ("Only one 'low' interrupt routine is allowed") COMMA_SOURCE_FILE_AT_LINE (203)) ;
        }
        var_hasLowInterrupt = GALGAS_bool (true) ;
      }else if (kBoolFalse == test_11) {
        GALGAS_location location_14 (enumerator_10107.current_mInterruptName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_14, GALGAS_string ("An interrupt routine should be named 'low' or 'high'") COMMA_SOURCE_FILE_AT_LINE (207)) ;
      }
    }
    const enumGalgasBool test_15 = var_highInterruptIsFast.operator_and (var_lowInterruptIsFast COMMA_SOURCE_FILE_AT_LINE (209)).boolEnum () ;
    if (kBoolTrue == test_15) {
      GALGAS_location location_16 (enumerator_10107.current_mInterruptName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_16, GALGAS_string ("either low interrupt or high interrupt can be \"fast\", not both") COMMA_SOURCE_FILE_AT_LINE (210)) ;
    }
    enumerator_10107.gotoNextObject () ;
  }
  GALGAS_actualConfigurationMap var_actualConfigurationMap ;
  const enumGalgasBool test_17 = GALGAS_bool (kIsEqual, constinArgument_inPiccoloModel.reader_mProgramKind (SOURCE_FILE_AT_LINE (215)).objectCompare (GALGAS_programKind::constructor_userProgram (SOURCE_FILE_AT_LINE (215)))).boolEnum () ;
  if (kBoolTrue == test_17) {
    cEnumerator_configDefinitionList enumerator_11291 (constinArgument_inPiccoloModel.reader_mConfigDefinitionList (SOURCE_FILE_AT_LINE (216)), kEnumeration_up) ;
    while (enumerator_11291.hasCurrentObject ()) {
      inCompiler->emitSemanticError (enumerator_11291.current_mDefinitionLocation (HERE), GALGAS_string ("configuration is not allowed for a bootloader user program") COMMA_SOURCE_FILE_AT_LINE (217)) ;
      enumerator_11291.gotoNextObject () ;
    }
    var_actualConfigurationMap = GALGAS_actualConfigurationMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (219)) ;
  }else if (kBoolFalse == test_17) {
    {
    routine_buildConfig (var_piccoloDeviceModel.reader_mConfigRegisterMap (SOURCE_FILE_AT_LINE (222)), constinArgument_inPiccoloModel.reader_mConfigDefinitionList (SOURCE_FILE_AT_LINE (223)), var_listFileContents, var_actualConfigurationMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (221)) ;
    }
  }
  {
  routine_analyze_5F_ram_5F_sections (GALGAS_string ("DECLARED VARIABLES"), constinArgument_inPiccoloModel.reader_mRamDefinitionList (SOURCE_FILE_AT_LINE (231)), var_ramBank, var_piccoloDeviceModel.reader_mRegisterTable (SOURCE_FILE_AT_LINE (233)), var_listFileContents, var_registerTable, inCompiler COMMA_SOURCE_FILE_AT_LINE (229)) ;
  }
  GALGAS_pic_31__38__5F_intermediate_5F_instructionList var_dataGeneratedInstructionList ;
  GALGAS_dataMap var_dataMap ;
  GALGAS_constantMap var_dataLengthConstantMap ;
  {
  routine_analyze_5F_data_5F_sections (constinArgument_inPiccoloModel.mAttribute_mDataList, var_listFileContents, var_dataGeneratedInstructionList, var_dataMap, var_dataLengthConstantMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (238)) ;
  }
  const enumGalgasBool test_18 = GALGAS_bool (kIsEqual, constinArgument_inPiccoloModel.reader_mProgramKind (SOURCE_FILE_AT_LINE (246)).objectCompare (GALGAS_programKind::constructor_bootloaderProgram (SOURCE_FILE_AT_LINE (246)))).boolEnum () ;
  if (kBoolTrue == test_18) {
    cEnumerator_ramBankTable enumerator_12383 (var_ramBank, kEnumeration_up) ;
    while (enumerator_12383.hasCurrentObject ()) {
      const enumGalgasBool test_19 = var_bootloaderReservedRAMmap.reader_hasKey (enumerator_12383.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (248)) COMMA_SOURCE_FILE_AT_LINE (248)).boolEnum () ;
      if (kBoolTrue == test_19) {
        GALGAS_luint var_bootloaderReservedSize ;
        var_bootloaderReservedRAMmap.method_searchKey (enumerator_12383.current_lkey (HERE), var_bootloaderReservedSize, inCompiler COMMA_SOURCE_FILE_AT_LINE (250)) ;
        const enumGalgasBool test_20 = GALGAS_bool (kIsStrictSup, enumerator_12383.current_mFirstFreeAddress (HERE).substract_operation (enumerator_12383.current_mFirstAddress (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (251)).objectCompare (var_bootloaderReservedSize.reader_uint (SOURCE_FILE_AT_LINE (251)))).boolEnum () ;
        if (kBoolTrue == test_20) {
          inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("for '").operator_concat (enumerator_12383.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (252)) COMMA_SOURCE_FILE_AT_LINE (252)).operator_concat (GALGAS_string ("' RAM bank, the bootloader implementation declares ") COMMA_SOURCE_FILE_AT_LINE (252)).operator_concat (enumerator_12383.current_mFirstFreeAddress (HERE).substract_operation (enumerator_12383.current_mFirstAddress (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (253)).reader_string (SOURCE_FILE_AT_LINE (253)) COMMA_SOURCE_FILE_AT_LINE (253)).operator_concat (GALGAS_string (" byte(s), althought the bootloader specification reserves ") COMMA_SOURCE_FILE_AT_LINE (254)).operator_concat (var_bootloaderReservedSize.reader_uint (SOURCE_FILE_AT_LINE (255)).reader_string (SOURCE_FILE_AT_LINE (255)) COMMA_SOURCE_FILE_AT_LINE (255)).operator_concat (GALGAS_string (" byte(s)") COMMA_SOURCE_FILE_AT_LINE (256)) COMMA_SOURCE_FILE_AT_LINE (252)) ;
        }
      }else if (kBoolFalse == test_19) {
        const enumGalgasBool test_21 = GALGAS_bool (kIsStrictSup, enumerator_12383.current_mFirstFreeAddress (HERE).objectCompare (enumerator_12383.current_mFirstAddress (HERE))).boolEnum () ;
        if (kBoolTrue == test_21) {
          inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("for '").operator_concat (enumerator_12383.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (259)) COMMA_SOURCE_FILE_AT_LINE (259)).operator_concat (GALGAS_string ("' RAM bank, the bootloader implementation declares ") COMMA_SOURCE_FILE_AT_LINE (259)).operator_concat (enumerator_12383.current_mFirstFreeAddress (HERE).substract_operation (enumerator_12383.current_mFirstAddress (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (260)).reader_string (SOURCE_FILE_AT_LINE (260)) COMMA_SOURCE_FILE_AT_LINE (260)).operator_concat (GALGAS_string (" byte(s), althought the bootloader specification reserves no space") COMMA_SOURCE_FILE_AT_LINE (261)) COMMA_SOURCE_FILE_AT_LINE (259)) ;
        }
      }
      enumerator_12383.gotoNextObject () ;
    }
  }
  GALGAS_uint var_RAMsize = GALGAS_uint ((PMUInt32) 0U) ;
  cEnumerator_ramBankTable enumerator_13376 (var_ramBank, kEnumeration_up) ;
  while (enumerator_13376.hasCurrentObject ()) {
    const enumGalgasBool test_22 = GALGAS_bool (kIsStrictSup, enumerator_13376.current_mLastAddressPlusOne (HERE).objectCompare (var_RAMsize)).boolEnum () ;
    if (kBoolTrue == test_22) {
      var_RAMsize = enumerator_13376.current_mLastAddressPlusOne (HERE) ;
    }
    enumerator_13376.gotoNextObject () ;
  }
  GALGAS_ipic_31__38_BlockList var_generatedBlockList ;
  {
  routine_build_5F_ipic_31__38__5F_block_5F_representation_5F_list (var_piccoloDeviceModel.reader_mRomSize (SOURCE_FILE_AT_LINE (274)).reader_uint (SOURCE_FILE_AT_LINE (274)).reader_sint (inCompiler COMMA_SOURCE_FILE_AT_LINE (274)), var_RAMsize.reader_sint (inCompiler COMMA_SOURCE_FILE_AT_LINE (275)), var_bootloaderRoutineDeclarationListForBootloaderImplementation, var_userRoutineDeclarationListForBootloaderImplementation, var_bootloaderReservedROMsize, var_bootloaderRoutineDeclarationListForUserProgramImplementation, var_userRoutineDeclarationListForUserProgramImplementation, var_accessBankSplitOffset, var_registerTable, var_dataMap, constinArgument_inPiccoloModel, var_hasHighInterrupt, var_hasLowInterrupt, var_dataLengthConstantMap, var_generatedBlockList, var_listFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (273)) ;
  }
  GALGAS_pic_31__38__5F_intermediate_5F_instructionList var_generatedInstructionList ;
  {
  routine_build_5F_pic_31__38__5F_intermediate_5F_assembly_5F_instruction_5F_list (var_piccoloDeviceModel.reader_mRomSize (SOURCE_FILE_AT_LINE (294)).reader_uint (SOURCE_FILE_AT_LINE (294)).reader_sint (inCompiler COMMA_SOURCE_FILE_AT_LINE (294)), var_RAMsize.reader_sint (inCompiler COMMA_SOURCE_FILE_AT_LINE (295)), var_bootloaderRoutineDeclarationListForBootloaderImplementation, var_userRoutineDeclarationListForBootloaderImplementation, var_bootloaderReservedROMsize, var_bootloaderRoutineDeclarationListForUserProgramImplementation, var_userRoutineDeclarationListForUserProgramImplementation, var_accessBankSplitOffset, var_registerTable, var_dataMap, constinArgument_inPiccoloModel, var_hasHighInterrupt, var_hasLowInterrupt, var_dataGeneratedInstructionList, var_dataLengthConstantMap, var_generatedInstructionList, var_listFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (293)) ;
  }
  const enumGalgasBool test_23 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (313)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (gOption_piccolo_5F_options_performOptimizations.reader_value ()) COMMA_SOURCE_FILE_AT_LINE (313)).boolEnum () ;
  if (kBoolTrue == test_23) {
    {
    routine_performOptimizations (var_generatedInstructionList, var_listFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (314)) ;
    }
  }
  const enumGalgasBool test_24 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (317)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_24) {
    {
    routine_pic_31__38__5F_intermediate_5F_convertRelativeBranchsToAbsoluteWhenNeeded (var_generatedInstructionList, var_listFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (318)) ;
    }
  }
  const enumGalgasBool test_25 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (321)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_25) {
    GALGAS_uint var_usedROMsize ;
    {
    routine_build_5F_pic_31__38__5F_intermediate_5F_binary_5F_code (var_generatedInstructionList, var_piccoloDeviceModel.reader_mRomSize (SOURCE_FILE_AT_LINE (326)).reader_uint (SOURCE_FILE_AT_LINE (326)), var_actualConfigurationMap, var_usedROMsize, inCompiler COMMA_SOURCE_FILE_AT_LINE (324)) ;
    }
    GALGAS_string var_contents ;
    {
    routine_getGeneratedContents (var_contents, inCompiler COMMA_SOURCE_FILE_AT_LINE (331)) ;
    }
    GALGAS_string var_destinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (332)).operator_concat (GALGAS_string (".hex") COMMA_SOURCE_FILE_AT_LINE (332)) ;
    GALGAS_bool joker_16036_0 ; // Joker input parameter
    var_contents.method_writeToFileWhenDifferentContents (var_destinationFile, joker_16036_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (333)) ;
    const enumGalgasBool test_26 = GALGAS_bool (gOption_piccolo_5F_options_output_5F_C_5F_Array.reader_value ()).boolEnum () ;
    if (kBoolTrue == test_26) {
      GALGAS_string var_baseName = constinArgument_inSourceFileName.reader_lastPathComponent (SOURCE_FILE_AT_LINE (335)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (335)) ;
      {
      routine_get_5F_C_5F_ArrayImplementation (var_baseName, var_contents, inCompiler COMMA_SOURCE_FILE_AT_LINE (336)) ;
      }
      var_destinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (337)).operator_concat (GALGAS_string (".c") COMMA_SOURCE_FILE_AT_LINE (337)) ;
      GALGAS_bool joker_16406_0 ; // Joker input parameter
      var_contents.method_writeToFileWhenDifferentContents (var_destinationFile, joker_16406_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (338)) ;
      {
      routine_get_5F_C_5F_ArrayHeader (var_baseName, var_contents, inCompiler COMMA_SOURCE_FILE_AT_LINE (339)) ;
      }
      var_destinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (340)).operator_concat (GALGAS_string (".h") COMMA_SOURCE_FILE_AT_LINE (340)) ;
      GALGAS_bool joker_16607_0 ; // Joker input parameter
      var_contents.method_writeToFileWhenDifferentContents (var_destinationFile, joker_16607_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (341)) ;
    }
    const enumGalgasBool test_27 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
    if (kBoolTrue == test_27) {
      GALGAS_string var_verboseMessage = GALGAS_string ("  ROM size: ").operator_concat (var_piccoloDeviceModel.reader_mRomSize (SOURCE_FILE_AT_LINE (345)).reader_uint (SOURCE_FILE_AT_LINE (345)).reader_string (SOURCE_FILE_AT_LINE (345)) COMMA_SOURCE_FILE_AT_LINE (345)).operator_concat (GALGAS_string (" bytes;") COMMA_SOURCE_FILE_AT_LINE (345)) ;
      var_verboseMessage.dotAssign_operation (GALGAS_string (" used: ").operator_concat (var_usedROMsize.reader_string (SOURCE_FILE_AT_LINE (346)) COMMA_SOURCE_FILE_AT_LINE (346)).operator_concat (GALGAS_string (" bytes (") COMMA_SOURCE_FILE_AT_LINE (346)) COMMA_SOURCE_FILE_AT_LINE (346)) ;
      var_verboseMessage.dotAssign_operation (var_usedROMsize.multiply_operation (GALGAS_uint ((PMUInt32) 100U), inCompiler COMMA_SOURCE_FILE_AT_LINE (347)).divide_operation (var_piccoloDeviceModel.reader_mRomSize (SOURCE_FILE_AT_LINE (347)).reader_uint (SOURCE_FILE_AT_LINE (347)), inCompiler COMMA_SOURCE_FILE_AT_LINE (347)).reader_string (SOURCE_FILE_AT_LINE (347)).operator_concat (GALGAS_string ("%).\n") COMMA_SOURCE_FILE_AT_LINE (347)) COMMA_SOURCE_FILE_AT_LINE (347)) ;
      cEnumerator_ramBankTable enumerator_17012 (var_ramBank, kEnumeration_up) ;
      while (enumerator_17012.hasCurrentObject ()) {
        GALGAS_uint var_bankSize = enumerator_17012.current_mLastAddressPlusOne (HERE).substract_operation (enumerator_17012.current_mFirstAddress (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (349)) ;
        GALGAS_uint var_usedSize = enumerator_17012.current_mFirstFreeAddress (HERE).substract_operation (enumerator_17012.current_mFirstAddress (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (350)) ;
        var_verboseMessage.dotAssign_operation (GALGAS_string ("  RAM bank '").operator_concat (enumerator_17012.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (351)) COMMA_SOURCE_FILE_AT_LINE (351)).operator_concat (GALGAS_string ("': ") COMMA_SOURCE_FILE_AT_LINE (351)) COMMA_SOURCE_FILE_AT_LINE (351)) ;
        var_verboseMessage.dotAssign_operation (var_bankSize.reader_string (SOURCE_FILE_AT_LINE (352)).operator_concat (GALGAS_string (" bytes, used ") COMMA_SOURCE_FILE_AT_LINE (352)) COMMA_SOURCE_FILE_AT_LINE (352)) ;
        var_verboseMessage.dotAssign_operation (var_usedSize.reader_string (SOURCE_FILE_AT_LINE (353)).operator_concat (GALGAS_string (" bytes (") COMMA_SOURCE_FILE_AT_LINE (353)) COMMA_SOURCE_FILE_AT_LINE (353)) ;
        var_verboseMessage.dotAssign_operation (var_usedSize.multiply_operation (GALGAS_uint ((PMUInt32) 100U), inCompiler COMMA_SOURCE_FILE_AT_LINE (354)).divide_operation (var_bankSize, inCompiler COMMA_SOURCE_FILE_AT_LINE (354)).reader_string (SOURCE_FILE_AT_LINE (354)).operator_concat (GALGAS_string ("%).\n") COMMA_SOURCE_FILE_AT_LINE (354)) COMMA_SOURCE_FILE_AT_LINE (354)) ;
        enumerator_17012.gotoNextObject () ;
      }
      inCompiler->printMessage (var_verboseMessage COMMA_SOURCE_FILE_AT_LINE (356)) ;
    }
    const enumGalgasBool test_28 = GALGAS_bool (gOption_piccolo_5F_options_generateAssembly.reader_value ()).boolEnum () ;
    if (kBoolTrue == test_28) {
      GALGAS_string var_assemblyCode ;
      {
      routine_pic_31__38__5F_build_5F_assembly_5F_code (var_piccoloDeviceModel.reader_mDeviceName (SOURCE_FILE_AT_LINE (361)).reader_string (SOURCE_FILE_AT_LINE (361)), var_piccoloDeviceModel.reader_mRegisterTable (SOURCE_FILE_AT_LINE (362)), var_registerTable, var_generatedInstructionList, var_actualConfigurationMap, var_assemblyCode, inCompiler COMMA_SOURCE_FILE_AT_LINE (360)) ;
      }
      GALGAS_string var_asmDestinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (368)).operator_concat (GALGAS_string (".asm") COMMA_SOURCE_FILE_AT_LINE (368)) ;
      GALGAS_bool joker_18009_0 ; // Joker input parameter
      var_assemblyCode.method_writeToFileWhenDifferentContents (var_asmDestinationFile, joker_18009_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (369)) ;
    }
  }else if (kBoolFalse == test_25) {
    GALGAS_string var_hexDestinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (372)).operator_concat (GALGAS_string (".hex") COMMA_SOURCE_FILE_AT_LINE (372)) ;
    {
    GALGAS_string::class_method_deleteFileIfExists (var_hexDestinationFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (373)) ;
    }
    GALGAS_string var_asmDestinationFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (374)).operator_concat (GALGAS_string (".asm") COMMA_SOURCE_FILE_AT_LINE (374)) ;
    {
    GALGAS_string::class_method_deleteFileIfExists (var_asmDestinationFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (375)) ;
    }
  }
  const enumGalgasBool test_29 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (378)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_29) {
    {
    routine_pic_31__38__5F_build_5F_listing_5F_of_5F_generated_5F_code (var_generatedInstructionList, var_listFileContents, inCompiler COMMA_SOURCE_FILE_AT_LINE (379)) ;
    }
  }
  const enumGalgasBool test_30 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (385)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (kIsNotEqual, constinArgument_inPiccoloModel.mAttribute_mProgramKind.objectCompare (GALGAS_programKind::constructor_userProgram (SOURCE_FILE_AT_LINE (385)))) COMMA_SOURCE_FILE_AT_LINE (385)).boolEnum () ;
  if (kBoolTrue == test_30) {
    {
    routine_pic_31__38__5F_compute_5F_metrics (constinArgument_inPiccoloModel, var_userRoutineDeclarationListForBootloaderImplementation, var_bootloaderRoutineDeclarationListForUserProgramImplementation, var_generatedInstructionList, var_listFileContents, constinArgument_inSourceFileName, inCompiler COMMA_SOURCE_FILE_AT_LINE (386)) ;
    }
  }
  const enumGalgasBool test_31 = GALGAS_bool (gOption_piccolo_5F_options_ouputListingFile.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_31) {
    var_listFileContents.dotAssign_operation (GALGAS_string ("*******************************************************************************\n") COMMA_SOURCE_FILE_AT_LINE (397)) ;
    GALGAS_string var_listFile = constinArgument_inSourceFileName.reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (398)).operator_concat (GALGAS_string (".list") COMMA_SOURCE_FILE_AT_LINE (398)) ;
    GALGAS_bool joker_19450_0 ; // Joker input parameter
    var_listFileContents.method_writeToFileWhenDifferentContents (var_listFile, joker_19450_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (399)) ;
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


