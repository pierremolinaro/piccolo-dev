//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'piccoloDevice_semantics.cpp'                     *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      july 16th, 2008, at 20h33'10"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "piccoloDevice_semantics.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "piccoloDevice_semantics.ggs", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of 'piccoloDeviceModel' struct                *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_piccoloDeviceModel::GGS_piccoloDeviceModel (void) :
mRomSize () {
}

//---------------------------------------------------------------------------*

GGS_piccoloDeviceModel::~GGS_piccoloDeviceModel (void) {
}

//---------------------------------------------------------------------------*

void GGS_piccoloDeviceModel::_drop (void) {
  mRomSize._drop () ;
}

//---------------------------------------------------------------------------*

bool GGS_piccoloDeviceModel::_isBuilt (void) const {
  return mRomSize._isBuilt () ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_piccoloDeviceModel::
_operator_isEqual (const GGS_piccoloDeviceModel & inOperand) const {
  return mRomSize._operator_isEqual (inOperand.mRomSize) ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_piccoloDeviceModel::
_operator_isNotEqual (const GGS_piccoloDeviceModel & inOperand) const {
  return mRomSize._operator_isNotEqual (inOperand.mRomSize) ;
}

//---------------------------------------------------------------------------*

GGS_piccoloDeviceModel GGS_piccoloDeviceModel::
constructor_new (const GGS_luint & argument_0) {
  GGS_piccoloDeviceModel result ;
  result.mRomSize = argument_0 ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_piccoloDeviceModel::
reader_description (C_Compiler & _inLexique
                    COMMA_LOCATION_ARGS,
                    const sint32 inIndentation) const {
  C_String _s ;
  _s << "<struct @piccoloDeviceModel" ;
  if (_isBuilt ()) {
    _s << "\n" ;
    _s.writeStringMultiple ("| ", inIndentation + 1) ;
    _s << "mRomSize " ;
    _s << mRomSize.reader_description (_inLexique COMMA_THERE, inIndentation + 1) ;
  }else{
    _s << "not built" ;
  }
  _s << "\n" ;
  _s.writeStringMultiple ("| ", inIndentation) ;
  _s << ">" ;
  return GGS_string (true, _s) ;
}

//---------------------------------------------------------------------------*

