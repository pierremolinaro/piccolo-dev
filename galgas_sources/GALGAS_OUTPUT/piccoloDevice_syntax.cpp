//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'piccoloDevice_syntax.cpp'                       *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      july 16th, 2008, at 21h18'16"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "piccoloDevice_syntax.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "piccoloDevice_syntax.ggs", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'start_symbol'              *
//                                                                           *
//---------------------------------------------------------------------------*

void piccoloDevice_syntax::
pr_start_symbol_piccoloDevice_syntax_13_4_ (piccoloDevice_lexique & _inLexique,
                                GGS_piccoloDeviceModel &var_cas_outPiccoloDeviceModel) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_controller) COMMA_HERE) ;
  GGS_lstring  var_cas_deviceName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_deviceName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1__7B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_processor) COMMA_HERE) ;
  GGS_lstring  var_cas_processorName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_processorName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_string) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1__3B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_romsize) COMMA_HERE) ;
  GGS_luint  var_cas_romSize ;
  _inLexique._assignFromAttribute_uint32value (var_cas_romSize) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_integer) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1__3B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_eepromsize) COMMA_HERE) ;
  GGS_luint  var_cas_eepromSize ;
  _inLexique._assignFromAttribute_uint32value (var_cas_eepromSize) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_integer) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_at) COMMA_HERE) ;
  GGS_luint  var_cas_eepromAddress ;
  _inLexique._assignFromAttribute_uint32value (var_cas_eepromAddress) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_integer) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1__3B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_bank) COMMA_HERE) ;
  GGS_luint  var_cas_bankCount ;
  _inLexique._assignFromAttribute_uint32value (var_cas_bankCount) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_integer) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1__3B) COMMA_HERE) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_repeat_piccoloDevice_syntax_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_unusedregister) COMMA_HERE) ;
          GGS_luint  var_cas_unusedRegisterStart ;
          _inLexique._assignFromAttribute_uint32value (var_cas_unusedRegisterStart) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_integer) COMMA_HERE) ;
          switch (select_piccoloDevice_syntax_1 (_inLexique)) {
            case 1 : {
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_to) COMMA_HERE) ;
              GGS_luint  var_cas_unusedRegisterEnd ;
              _inLexique._assignFromAttribute_uint32value (var_cas_unusedRegisterEnd) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_integer) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  { bool syntaxRepeat_2 = true ;
    while (syntaxRepeat_2) {
      switch (select_repeat_piccoloDevice_syntax_2 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_ram) COMMA_HERE) ;
          GGS_lstring  var_cas_ramName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_ramName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1__3A) COMMA_HERE) ;
          GGS_luint  var_cas_ramStart ;
          _inLexique._assignFromAttribute_uint32value (var_cas_ramStart) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_integer) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_to) COMMA_HERE) ;
          GGS_luint  var_cas_ramEnd ;
          _inLexique._assignFromAttribute_uint32value (var_cas_ramEnd) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_integer) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_2 = false ;
          break ;
      }
    }
  }
  { bool syntaxRepeat_3 = true ;
    while (syntaxRepeat_3) {
      switch (select_repeat_piccoloDevice_syntax_3 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_register) COMMA_HERE) ;
          GGS_lstring  var_cas_registerName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_registerName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_at) COMMA_HERE) ;
          { bool syntaxRepeat_4 = true ;
            while (syntaxRepeat_4) {
                GGS_luint  var_cas_registerAddress ;
                _inLexique._assignFromAttribute_uint32value (var_cas_registerAddress) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_integer) COMMA_HERE) ;
              switch (select_repeat_piccoloDevice_syntax_4 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1__2C) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_4 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1__3C) COMMA_HERE) ;
          { bool syntaxRepeat_5 = true ;
            while (syntaxRepeat_5) {
                switch (select_piccoloDevice_syntax_6 (_inLexique)) {
                  case 1 : {
                    { bool syntaxRepeat_7 = true ;
                      while (syntaxRepeat_7) {
                          GGS_lstring  var_cas_sliceName ;
                          _inLexique._assignFromAttribute_tokenString (var_cas_sliceName) ;
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_identifier) COMMA_HERE) ;
                          switch (select_piccoloDevice_syntax_8 (_inLexique)) {
                            case 1 : {
                              } break ;
                            case 2 : {
                              _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1__5B) COMMA_HERE) ;
                              GGS_luint  var_cas_sliceSize ;
                              _inLexique._assignFromAttribute_uint32value (var_cas_sliceSize) ;
                              _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_integer) COMMA_HERE) ;
                              _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1__5D) COMMA_HERE) ;
                              } break ;
                            default :
                              break ;
                          }
                        switch (select_repeat_piccoloDevice_syntax_7 (_inLexique)) {
                          case 2 : {
                            _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1__2F) COMMA_HERE) ;
                            } break ;
                          default :
                            syntaxRepeat_7 = false ;
                            break ;
                        }
                      }
                    }
                    } break ;
                  case 2 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1__2D) COMMA_HERE) ;
                    } break ;
                  default :
                    break ;
                }
              switch (select_repeat_piccoloDevice_syntax_5 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1__2C) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_5 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1__3E) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_3 = false ;
          break ;
      }
    }
  }
  { bool syntaxRepeat_9 = true ;
    while (syntaxRepeat_9) {
      switch (select_repeat_piccoloDevice_syntax_9 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_config) COMMA_HERE) ;
          GGS_lstring  var_cas_configRegisterName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_configRegisterName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_at) COMMA_HERE) ;
          GGS_luint  var_cas_configRegisterAddress ;
          _inLexique._assignFromAttribute_uint32value (var_cas_configRegisterAddress) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_integer) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_width) COMMA_HERE) ;
          GGS_luint  var_cas_configRegisterWidth ;
          _inLexique._assignFromAttribute_uint32value (var_cas_configRegisterWidth) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_integer) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1__7B) COMMA_HERE) ;
          { bool syntaxRepeat_10 = true ;
            while (syntaxRepeat_10) {
              switch (select_repeat_piccoloDevice_syntax_10 (_inLexique)) {
                case 2 : {
                  GGS_lstring  var_cas_maskName ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_maskName) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_identifier) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_mask) COMMA_HERE) ;
                  GGS_luint  var_cas_maskValue ;
                  _inLexique._assignFromAttribute_uint32value (var_cas_maskValue) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_integer) COMMA_HERE) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_description) COMMA_HERE) ;
                  GGS_lstring  var_cas_maskDescriptionString ;
                  _inLexique._assignFromAttribute_tokenString (var_cas_maskDescriptionString) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1_string) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_10 = false ;
                  break ;
              }
            }
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1__7D) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_9 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (piccoloDevice_lexique::piccoloDevice_lexique_1__7D) COMMA_HERE) ;
  var_cas_outPiccoloDeviceModel = GGS_piccoloDeviceModel::constructor_new (var_cas_romSize) ;
}

//---------------------------------------------------------------------------*

