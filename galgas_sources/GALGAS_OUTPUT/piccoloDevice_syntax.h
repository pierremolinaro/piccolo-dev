//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'piccoloDevice_syntax.h'                        *
//             Generated by version version GALGAS_BETA_VERSION              *
//                      june 21th, 2011, at 21h16'45"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef piccoloDevice_syntax_ENTITIES_DEFINED
#define piccoloDevice_syntax_ENTITIES_DEFINED

//---------------------------------------------------------------------------*

#include "galgas2/predefined-types.h"

//---------------------------------------------------------------------------*

#include "piccoloDevice_lexique.h"

//---------------------------------------------------------------------------*

#include "piccoloDevice_semantics.h"
#include "generic_metamodel.h"

//---------------------------------------------------------------------------*

class GALGAS__32_stringlist ;
class GALGAS_actualConfigurationMap ;
class GALGAS_application ;
class GALGAS_binaryset ;
class GALGAS_bitNumberExpression ;
class GALGAS_bitNumberLabelValue ;
class GALGAS_bitNumberLiteralValue ;
class GALGAS_bitSliceTable ;
class GALGAS_bool ;
class GALGAS_byteDeclarationInRam ;
class GALGAS_char ;
class GALGAS_commonBranchList ;
class GALGAS_commonDeclarationInRam ;
class GALGAS_configDefinitionList ;
class GALGAS_configRegisterMap ;
class GALGAS_configRegisterMaskMap ;
class GALGAS_configSettingList ;
class GALGAS_constantDefinitionList ;
class GALGAS_data ;
class GALGAS_declarationInRam ;
class GALGAS_declarationInRamList ;
class GALGAS_double ;
class GALGAS_fieldSettingMap ;
class GALGAS_filewrapper ;
class GALGAS_function ;
class GALGAS_functionlist ;
class GALGAS_illegalMaskList ;
class GALGAS_immediatAdd ;
class GALGAS_immediatAnd ;
class GALGAS_immediatComplement ;
class GALGAS_immediatDiv ;
class GALGAS_immediatEqualTest ;
class GALGAS_immediatExpression ;
class GALGAS_immediatExpressionList ;
class GALGAS_immediatGreaterOrEqualTest ;
class GALGAS_immediatGreaterTest ;
class GALGAS_immediatInteger ;
class GALGAS_immediatLeftShift ;
class GALGAS_immediatLowerOrEqualTest ;
class GALGAS_immediatLowerTest ;
class GALGAS_immediatMod ;
class GALGAS_immediatMul ;
class GALGAS_immediatNegate ;
class GALGAS_immediatNotEqualTest ;
class GALGAS_immediatOr ;
class GALGAS_immediatRegister ;
class GALGAS_immediatRightShift ;
class GALGAS_immediatSlice ;
class GALGAS_immediatSliceExpressionList ;
class GALGAS_immediatSub ;
class GALGAS_immediatXor ;
class GALGAS_lbool ;
class GALGAS_lchar ;
class GALGAS_ldouble ;
class GALGAS_location ;
class GALGAS_lsint ;
class GALGAS_lsint_36__34_ ;
class GALGAS_lstring ;
class GALGAS_lstringlist ;
class GALGAS_luint ;
class GALGAS_luint_36__34_ ;
class GALGAS_luintlist ;
class GALGAS_object ;
class GALGAS_objectlist ;
class GALGAS_piccoloDeviceModel ;
class GALGAS_processorType ;
class GALGAS_ramBankTable ;
class GALGAS_ramDefinitionList ;
class GALGAS_registerExpression ;
class GALGAS_registerTable ;
class GALGAS_sint ;
class GALGAS_sint_36__34_ ;
class GALGAS_string ;
class GALGAS_stringlist ;
class GALGAS_stringset ;
class GALGAS_type ;
class GALGAS_typelist ;
class GALGAS_uint ;
class GALGAS_uint_36__34_ ;
class GALGAS_uint_36__34_list ;
class GALGAS_uintlist ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Parser class 'piccoloDevice_syntax' declaration              *
//                                                                           *
//---------------------------------------------------------------------------*

class cParser_piccoloDevice_5F_syntax {
//--- Virtual destructor
  public : virtual ~ cParser_piccoloDevice_5F_syntax (void) {}

//--- Non terminal declarations
  protected : virtual void nt_start_5F_symbol_ (GALGAS_piccoloDeviceModel & outArgument0,
                                                C_Lexique_piccoloDevice_5F_lexique * inLexique) = 0 ;

  protected : virtual void nt_start_5F_symbol_parse (C_Lexique_piccoloDevice_5F_lexique * inLexique) = 0 ;


//--- Rule declarations
  protected : void rule_piccoloDevice_5F_syntax_start_5F_symbol_i0_ (GALGAS_piccoloDeviceModel & outArgument0,
                                                                     C_Lexique_piccoloDevice_5F_lexique * inLexique) ;

  protected : void rule_piccoloDevice_5F_syntax_start_5F_symbol_i0_parse (C_Lexique_piccoloDevice_5F_lexique * inLexique) ;



//--- Select methods
  protected : virtual PMSInt32 select_piccoloDevice_5F_syntax_0 (C_Lexique_piccoloDevice_5F_lexique *) = 0 ;

  protected : virtual PMSInt32 select_piccoloDevice_5F_syntax_1 (C_Lexique_piccoloDevice_5F_lexique *) = 0 ;

  protected : virtual PMSInt32 select_piccoloDevice_5F_syntax_2 (C_Lexique_piccoloDevice_5F_lexique *) = 0 ;

  protected : virtual PMSInt32 select_piccoloDevice_5F_syntax_3 (C_Lexique_piccoloDevice_5F_lexique *) = 0 ;

  protected : virtual PMSInt32 select_piccoloDevice_5F_syntax_4 (C_Lexique_piccoloDevice_5F_lexique *) = 0 ;

  protected : virtual PMSInt32 select_piccoloDevice_5F_syntax_5 (C_Lexique_piccoloDevice_5F_lexique *) = 0 ;

  protected : virtual PMSInt32 select_piccoloDevice_5F_syntax_6 (C_Lexique_piccoloDevice_5F_lexique *) = 0 ;

  protected : virtual PMSInt32 select_piccoloDevice_5F_syntax_7 (C_Lexique_piccoloDevice_5F_lexique *) = 0 ;

  protected : virtual PMSInt32 select_piccoloDevice_5F_syntax_8 (C_Lexique_piccoloDevice_5F_lexique *) = 0 ;

  protected : virtual PMSInt32 select_piccoloDevice_5F_syntax_9 (C_Lexique_piccoloDevice_5F_lexique *) = 0 ;

  protected : virtual PMSInt32 select_piccoloDevice_5F_syntax_10 (C_Lexique_piccoloDevice_5F_lexique *) = 0 ;

  protected : virtual PMSInt32 select_piccoloDevice_5F_syntax_11 (C_Lexique_piccoloDevice_5F_lexique *) = 0 ;

  protected : virtual PMSInt32 select_piccoloDevice_5F_syntax_12 (C_Lexique_piccoloDevice_5F_lexique *) = 0 ;

  protected : virtual PMSInt32 select_piccoloDevice_5F_syntax_13 (C_Lexique_piccoloDevice_5F_lexique *) = 0 ;

  protected : virtual PMSInt32 select_piccoloDevice_5F_syntax_14 (C_Lexique_piccoloDevice_5F_lexique *) = 0 ;

  protected : virtual PMSInt32 select_piccoloDevice_5F_syntax_15 (C_Lexique_piccoloDevice_5F_lexique *) = 0 ;


} ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

#endif
