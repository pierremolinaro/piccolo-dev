//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'piccoloDevice_syntax.h'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     february 7th, 2010, at 20h59'33"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef piccoloDevice_syntax_DEFINED
#define piccoloDevice_syntax_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"
#include "piccoloDevice_lexique.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "piccoloDevice_semantics.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*
//                                                                           *
//              Parser class piccoloDevice_syntax declaration                *
//                                                                           *
//---------------------------------------------------------------------------*

class piccoloDevice_syntax {
  public : virtual ~piccoloDevice_syntax (void) {}

  protected : virtual void nt_start_symbol_ (C_Lexique_piccoloDevice_5F_lexique &,
                                GGS_piccoloDeviceModel &) = 0 ;

  protected : void pr_start_symbol_piccoloDevice_syntax_14_19_ (C_Lexique_piccoloDevice_5F_lexique &,
                                GGS_piccoloDeviceModel &) ;

  protected : virtual PMSInt16 select_piccoloDevice_5F_syntax_0 (C_Lexique_piccoloDevice_5F_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccoloDevice_5F_syntax_1 (C_Lexique_piccoloDevice_5F_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccoloDevice_5F_syntax_2 (C_Lexique_piccoloDevice_5F_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccoloDevice_5F_syntax_3 (C_Lexique_piccoloDevice_5F_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccoloDevice_5F_syntax_4 (C_Lexique_piccoloDevice_5F_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccoloDevice_5F_syntax_5 (C_Lexique_piccoloDevice_5F_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccoloDevice_5F_syntax_6 (C_Lexique_piccoloDevice_5F_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccoloDevice_5F_syntax_7 (C_Lexique_piccoloDevice_5F_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccoloDevice_5F_syntax_8 (C_Lexique_piccoloDevice_5F_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccoloDevice_5F_syntax_9 (C_Lexique_piccoloDevice_5F_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccoloDevice_5F_syntax_10 (C_Lexique_piccoloDevice_5F_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccoloDevice_5F_syntax_11 (C_Lexique_piccoloDevice_5F_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccoloDevice_5F_syntax_12 (C_Lexique_piccoloDevice_5F_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccoloDevice_5F_syntax_13 (C_Lexique_piccoloDevice_5F_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccoloDevice_5F_syntax_14 (C_Lexique_piccoloDevice_5F_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccoloDevice_5F_syntax_15 (C_Lexique_piccoloDevice_5F_lexique &) = 0 ;

} ;

//---------------------------------------------------------------------------*

#endif
