//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'piccolo_cocoa.m'                           *
//                        Generated by version 2.5.4                         *
//                     january 30th, 2014, at 17h15'7"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1


#import "OC_Token.h"
#import "F_CocoaWrapperForGalgas.h"
#import "piccolo_lexique-cocoa.m"
#import "PMPiccoloCocoa.h"
#import "installCLITools.h"

#ifdef USER_DEFAULT_COLORS_DEFINED
  #import "user_default_colors.h"
#endif

//-----------------------------------------------------------------------------*

#pragma mark Nibs

//-----------------------------------------------------------------------------*
//                                                                             *
//          N I B S   A N D   T H E I R   M A I N   C L A S S E S            *
//                                                                             *
//-----------------------------------------------------------------------------*

NSArray * nibsAndClasses (void) {
  return [NSArray arrayWithObjects:
    [NSArray arrayWithObjects:@"PMPiccoloCocoa", [PMPiccoloCocoa class], nil],
    [NSArray arrayWithObjects:@"installCLITools", [installCLITools class], nil],
    nil
  ] ;
}

//-----------------------------------------------------------------------------*

#pragma mark Command Line Options

//-----------------------------------------------------------------------------*
//                                                                             *
//                       Command Line Options                                *
//                                                                             *
//-----------------------------------------------------------------------------*

#import "piccolo_options-cocoa.m"

//-----------------------------------------------------------------------------*

void enterOptions (NSMutableArray * ioBoolOptionArray,
                   NSMutableArray * ioUIntOptionArray,
                   NSMutableArray * ioStringOptionArray) {
  enterOptionsFor_piccolo_5F_options (ioBoolOptionArray, ioUIntOptionArray, ioStringOptionArray) ;
}

//-----------------------------------------------------------------------------*

#pragma mark Lexique piccolo_lexique

//-----------------------------------------------------------------------------*
//                                                                             *
//                     P O P    U P    L I S T    D A T A                    *
//                                                                             *
//-----------------------------------------------------------------------------*

static const UInt16 gPopUpData_piccolo_5F_lexique_292 [6] = {
  0, // Leading character count to strip
  piccolo_lexique_1_routine, 0,
  piccolo_lexique_1_identifier, 0,
  0
} ;

static const UInt16 gPopUpData_piccolo_5F_lexique_327 [6] = {
  0, // Leading character count to strip
  piccolo_lexique_1_mark, 0,
  piccolo_lexique_1_literal_5F_string, 0,
  0
} ;

static const UInt16 gPopUpData_piccolo_5F_lexique_357 [6] = {
  0, // Leading character count to strip
  piccolo_lexique_1_ram, 0,
  piccolo_lexique_1_identifier, 0,
  0
} ;

static const UInt16 gPopUpData_piccolo_5F_lexique_393 [6] = {
  0, // Leading character count to strip
  piccolo_lexique_1_interrupt, 0,
  piccolo_lexique_1_identifier, 0,
  0
} ;

static const UInt16 gPopUpData_piccolo_5F_lexique_431 [6] = {
  0, // Leading character count to strip
  piccolo_lexique_1_include, 0,
  piccolo_lexique_1_literal_5F_string, 0,
  0
} ;

static const UInt16 gPopUpData_piccolo_5F_lexique_472 [8] = {
  0, // Leading character count to strip
  piccolo_lexique_1_unused, 0,
  piccolo_lexique_1_byte, 0,
  piccolo_lexique_1_identifier, 0,
  0
} ;

static const UInt16 gPopUpData_piccolo_5F_lexique_516 [8] = {
  0, // Leading character count to strip
  piccolo_lexique_1_unused, 0,
  piccolo_lexique_1_routine, 0,
  piccolo_lexique_1_identifier, 0,
  0
} ;

static const UInt16 gPopUpData_piccolo_5F_lexique_548 [4] = {
  1, // Leading character count to strip
  piccolo_lexique_1_commentMark, 32,
  0
} ;

static const UInt16 * gPopUpData_piccolo_5F_lexique [9] = {
  gPopUpData_piccolo_5F_lexique_292,
  gPopUpData_piccolo_5F_lexique_327,
  gPopUpData_piccolo_5F_lexique_357,
  gPopUpData_piccolo_5F_lexique_393,
  gPopUpData_piccolo_5F_lexique_431,
  gPopUpData_piccolo_5F_lexique_472,
  gPopUpData_piccolo_5F_lexique_516,
  gPopUpData_piccolo_5F_lexique_548,
  NULL
} ;

//-----------------------------------------------------------------------------*
//                                                                             *
//                            Lexique interface                              *
//                                                                             *
//-----------------------------------------------------------------------------*

@interface OC_Tokenizer_piccolo_lexique : OC_Lexique_piccolo_lexique {

}

- (NSString *) blockComment ;

- (const UInt16 * *) popupListData ;

- (NSUInteger) textMacroCount ;

- (NSString *) textMacroTitleAtIndex: (const UInt32) inIndex ;

- (NSString *) textMacroContentAtIndex: (const UInt32) inIndex ;

- (NSString *) tabItemTitle ;

@end

//-----------------------------------------------------------------------------*

@implementation OC_Tokenizer_piccolo_lexique

//-----------------------------------------------------------------------------*

- (NSString *) blockComment {
  return @"#" ;
}

//-----------------------------------------------------------------------------*

- (const UInt16 * *) popupListData {
  return gPopUpData_piccolo_5F_lexique ;
}

//-----------------------------------------------------------------------------*

- (NSUInteger) textMacroCount {
  return 0 ;
}

//-----------------------------------------------------------------------------*

- (NSString *) tabItemTitle {
  return @"Source" ;
}

//-----------------------------------------------------------------------------*

- (NSString *) textMacroTitleAtIndex: (const UInt32) inIndex {
  static NSString * kTextMacroTitle [1] = {
    NULL
  } ;
  return kTextMacroTitle [inIndex] ;
}

//-----------------------------------------------------------------------------*

- (NSString *) textMacroContentAtIndex: (const UInt32) inIndex {
  static NSString * kTextMacroContent [1] = {
    NULL
  } ;
  return kTextMacroContent [inIndex] ;
}

//-----------------------------------------------------------------------------*

@end



//-----------------------------------------------------------------------------*

OC_Lexique * tokenizerForExtension (const NSString * inExtension) {
  OC_Lexique * result = nil ;
  if ([inExtension isEqualToString:@"piccolo"]) {
    result = [OC_Tokenizer_piccolo_lexique new] ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

NSArray * tokenizers (void) {
  return [NSArray arrayWithObjects:
    [OC_Tokenizer_piccolo_lexique new],
    nil
  ] ;
}

//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2



