//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'piccolo_config.cpp'                          *
//             Generated by version version GALGAS_BETA_VERSION              *
//                    november 13th, 2010, at 23h25'41"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "piccolo_config.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "piccolo_config.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*

cMapElement_configFieldMap::cMapElement_configFieldMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_lstring & in_mRegisterName,
                                                        const GALGAS_luint & in_mMaskValue,
                                                        const GALGAS_lstring & in_mDescription,
                                                        const GALGAS_fieldSettingMap & in_mFieldSettingMap
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mRegisterName (in_mRegisterName),
mAttribute_mMaskValue (in_mMaskValue),
mAttribute_mDescription (in_mDescription),
mAttribute_mFieldSettingMap (in_mFieldSettingMap) {
}

//---------------------------------------------------------------------------*

bool cMapElement_configFieldMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRegisterName.isValid () && mAttribute_mMaskValue.isValid () && mAttribute_mDescription.isValid () && mAttribute_mFieldSettingMap.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_configFieldMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_configFieldMap (mAttribute_lkey, mAttribute_mRegisterName, mAttribute_mMaskValue, mAttribute_mDescription, mAttribute_mFieldSettingMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_configFieldMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
// mAttribute_mRegisterName.description (ioString, inIndentation) ;
// mAttribute_mMaskValue.description (ioString, inIndentation) ;
// mAttribute_mDescription.description (ioString, inIndentation) ;
// mAttribute_mFieldSettingMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

enumComparisonResult cMapElement_configFieldMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_configFieldMap * operand = (cMapElement_configFieldMap *) inOperand ;
  enumComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mRegisterName.objectCompare (operand->mAttribute_mRegisterName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mMaskValue.objectCompare (operand->mAttribute_mMaskValue) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mDescription.objectCompare (operand->mAttribute_mDescription) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFieldSettingMap.objectCompare (operand->mAttribute_mFieldSettingMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_configFieldMap::GALGAS_configFieldMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_configFieldMap::GALGAS_configFieldMap (const GALGAS_configFieldMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_configFieldMap & GALGAS_configFieldMap::operator = (const GALGAS_configFieldMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_configFieldMap GALGAS_configFieldMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_configFieldMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_configFieldMap GALGAS_configFieldMap::constructor_mapWithMapToOverride (const GALGAS_configFieldMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_configFieldMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_configFieldMap GALGAS_configFieldMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_configFieldMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_configFieldMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_lstring inArgument0,
                                                GALGAS_luint inArgument1,
                                                GALGAS_lstring inArgument2,
                                                GALGAS_fieldSettingMap inArgument3,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_configFieldMap * p = NULL ;
  macroMyNew (p, cMapElement_configFieldMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' configuration field is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_configFieldMap_searchKey = "the '%K' configuration field is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_configFieldMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_lstring & outArgument0,
                                              GALGAS_luint & outArgument1,
                                              GALGAS_lstring & outArgument2,
                                              GALGAS_fieldSettingMap & outArgument3,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_configFieldMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_configFieldMap) ;
    outArgument0 = p->mAttribute_mRegisterName ;
    outArgument1 = p->mAttribute_mMaskValue ;
    outArgument2 = p->mAttribute_mDescription ;
    outArgument3 = p->mAttribute_mFieldSettingMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_configFieldMap::reader_mRegisterNameForKey (const GALGAS_string & inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_configFieldMap) ;
    result = p->mAttribute_mRegisterName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_luint GALGAS_configFieldMap::reader_mMaskValueForKey (const GALGAS_string & inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) attributes ;
  GALGAS_luint result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_configFieldMap) ;
    result = p->mAttribute_mMaskValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_configFieldMap::reader_mDescriptionForKey (const GALGAS_string & inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_configFieldMap) ;
    result = p->mAttribute_mDescription ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_fieldSettingMap GALGAS_configFieldMap::reader_mFieldSettingMapForKey (const GALGAS_string & inKey,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) attributes ;
  GALGAS_fieldSettingMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_configFieldMap) ;
    result = p->mAttribute_mFieldSettingMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_configFieldMap::modifier_setMRegisterNameForKey (GALGAS_lstring inAttributeValue,
                                                             GALGAS_string inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_configFieldMap * p = (cMapElement_configFieldMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_configFieldMap) ;
    p->mAttribute_mRegisterName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_configFieldMap::modifier_setMMaskValueForKey (GALGAS_luint inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_configFieldMap * p = (cMapElement_configFieldMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_configFieldMap) ;
    p->mAttribute_mMaskValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_configFieldMap::modifier_setMDescriptionForKey (GALGAS_lstring inAttributeValue,
                                                            GALGAS_string inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_configFieldMap * p = (cMapElement_configFieldMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_configFieldMap) ;
    p->mAttribute_mDescription = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_configFieldMap::modifier_setMFieldSettingMapForKey (GALGAS_fieldSettingMap inAttributeValue,
                                                                GALGAS_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_configFieldMap * p = (cMapElement_configFieldMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_configFieldMap) ;
    p->mAttribute_mFieldSettingMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_configFieldMap * GALGAS_configFieldMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                              const GALGAS_string & inKey
                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_configFieldMap * result = (cMapElement_configFieldMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_configFieldMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_configFieldMap * GALGAS_configFieldMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                 const GALGAS_lstring & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_configFieldMap_searchKey COMMA_THERE) ;
  cMapElement_configFieldMap * result = (cMapElement_configFieldMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_configFieldMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_configFieldMap::cEnumerator_configFieldMap (const GALGAS_configFieldMap & inEnumeratedObject,
                                                        const bool inAscending) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inAscending) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_configFieldMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_configFieldMap::current_mRegisterName (LOCATION_ARGS) const {
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_configFieldMap) ;
  return p->mAttribute_mRegisterName ;
}

//---------------------------------------------------------------------------*

GALGAS_luint cEnumerator_configFieldMap::current_mMaskValue (LOCATION_ARGS) const {
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_configFieldMap) ;
  return p->mAttribute_mMaskValue ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_configFieldMap::current_mDescription (LOCATION_ARGS) const {
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_configFieldMap) ;
  return p->mAttribute_mDescription ;
}

//---------------------------------------------------------------------------*

GALGAS_fieldSettingMap cEnumerator_configFieldMap::current_mFieldSettingMap (LOCATION_ARGS) const {
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_configFieldMap) ;
  return p->mAttribute_mFieldSettingMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @configFieldMap type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_configFieldMap ("configFieldMap",
                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_configFieldMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_configFieldMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_configFieldMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_configFieldMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_configFieldMap GALGAS_configFieldMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler,
                                                            const GALGAS_location & inErrorLocation
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_configFieldMap result ;
  const GALGAS_configFieldMap * p = (const GALGAS_configFieldMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_configFieldMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "configFieldMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'actualBuildConfig'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_actualBuildConfig (const GALGAS_configRegisterMap constinArgument_inConfigRegisterMap,
                                const GALGAS_configDefinitionList constinArgument_inConfigDefinitionList,
                                const GALGAS_bool constinArgument_inAcceptDefaultConfiguration,
                                GALGAS_string & ioArgument_ioListFileContents,
                                GALGAS_actualConfigurationMap & outArgument_outActualConfigurationMap,
                                C_Compiler * inCompiler
                                COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outActualConfigurationMap.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outActualConfigurationMap = GALGAS_actualConfigurationMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (29)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_configFieldMap var_configFieldMap = GALGAS_configFieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (30)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_configRegisterMap enumerator_1262 (constinArgument_inConfigRegisterMap, true) ;
  //--- simple foreach instruction
  while (enumerator_1262.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_uint var_defaultValue = GALGAS_uint ((PMUInt32) 1U).left_shift_operation (enumerator_1262.current_mRegisterWidth (HERE).reader_uint (SOURCE_FILE_AT_LINE (32)) COMMA_SOURCE_FILE_AT_LINE (32)).substract_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (32)) ;
    { //-------- @modifierCallInstructionForGeneration
    outArgument_outActualConfigurationMap.modifier_insertKey (enumerator_1262.current_lkey (HERE), enumerator_1262.current_mRegisterAddress (HERE).reader_uint (SOURCE_FILE_AT_LINE (33)), var_defaultValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (33)) ;
    } //-------- END @typeMethodInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_lstring var_registerName = enumerator_1262.current_lkey (HERE) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_configRegisterMaskMap enumerator_1497 (enumerator_1262.current_mConfigRegisterMaskMap (HERE), true) ;
    //--- simple foreach instruction
    while (enumerator_1497.hasCurrentObject ()) {
      { //-------- @modifierCallInstructionForGeneration
      var_configFieldMap.modifier_insertKey (enumerator_1497.current_lkey (HERE), var_registerName, enumerator_1497.current_mMaskValue (HERE), enumerator_1497.current_mDescription (HERE), enumerator_1497.current_mFieldSettingMap (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (36)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_1497.gotoNextObject () ;
    }
    enumerator_1262.gotoNextObject () ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_stringset var_actualSettingNameSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (40)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_configDefinitionList enumerator_1775 (constinArgument_inConfigDefinitionList, true) ;
  //--- simple foreach instruction
  while (enumerator_1775.hasCurrentObject ()) {
    //-------- @foreachInstructionForGeneration
    cEnumerator_configSettingList enumerator_1803 (enumerator_1775.current_mSettingList (HERE), true) ;
    //--- simple foreach instruction
    while (enumerator_1803.hasCurrentObject ()) {
      //-------- @ifInstructionForGeneration
      if (var_actualSettingNameSet.reader_hasKey (enumerator_1803.current_mSettingName (HERE).reader_string (SOURCE_FILE_AT_LINE (43)) COMMA_SOURCE_FILE_AT_LINE (43)).isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        GALGAS_location location_0 (enumerator_1803.current_mSettingName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_0, GALGAS_string ("the '").operator_concat (enumerator_1803.current_mSettingName (HERE).reader_string (SOURCE_FILE_AT_LINE (44)) COMMA_SOURCE_FILE_AT_LINE (44)).operator_concat (GALGAS_string ("' setting is already defined") COMMA_SOURCE_FILE_AT_LINE (44)) COMMA_SOURCE_FILE_AT_LINE (44)) ;
      }
      //-------- @addAssignInstructionForGeneration
      var_actualSettingNameSet.addAssign_operation (enumerator_1803.current_mSettingName (HERE).reader_string (SOURCE_FILE_AT_LINE (46)) COMMA_SOURCE_FILE_AT_LINE (46)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_lstring var_registerName ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_luint var_maskValue ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_lstring var_settingDescription ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_fieldSettingMap var_fieldSettingMap ;
      //-------- @methodCallInstructionForGeneration
      var_configFieldMap.method_searchKey (enumerator_1803.current_mSettingName (HERE), var_registerName, var_maskValue, var_settingDescription, var_fieldSettingMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (51)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @ifInstructionForGeneration
      if (var_fieldSettingMap.reader_hasKey (enumerator_1803.current_mSettingValue (HERE).reader_string (SOURCE_FILE_AT_LINE (52)) COMMA_SOURCE_FILE_AT_LINE (52)).isValidAndTrue ()) {
        //-------- @localVariableDeclarationForGeneration
        GALGAS_uint var_settingValue ;
        //-------- @localVariableDeclarationForGeneration
        GALGAS_uint var_settingMask ;
        //-------- @methodCallInstructionForGeneration
        var_fieldSettingMap.method_searchKey (enumerator_1803.current_mSettingValue (HERE), var_settingValue, var_settingMask, inCompiler COMMA_SOURCE_FILE_AT_LINE (55)) ;
        //-------- END @methodCallInstructionForGeneration
        //-------- @localVariableDeclarationForGeneration
        GALGAS_uint var_registerValue ;
        //-------- @methodCallInstructionForGeneration
        GALGAS_uint joker_2561_0 ; // Joker input parameter
        outArgument_outActualConfigurationMap.method_searchKey (var_registerName, joker_2561_0, var_registerValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (57)) ;
        //-------- END @methodCallInstructionForGeneration
        //-------- @assignmentInstructionForGeneration
        var_registerValue = var_registerValue.operator_and (var_settingMask.operator_tilde (SOURCE_FILE_AT_LINE (58)) COMMA_SOURCE_FILE_AT_LINE (58)).operator_or (var_settingValue COMMA_SOURCE_FILE_AT_LINE (58)) ;
        { //-------- @modifierCallInstructionForGeneration
        outArgument_outActualConfigurationMap.modifier_setMRegisterValueForKey (var_registerValue, var_registerName.reader_string (SOURCE_FILE_AT_LINE (59)), inCompiler COMMA_SOURCE_FILE_AT_LINE (59)) ;
        } //-------- END @typeMethodInstructionForGeneration
      }else{
        //-------- @ifInstructionForGeneration
        if (GALGAS_bool (kIsStrictSup, var_fieldSettingMap.reader_count (SOURCE_FILE_AT_LINE (60)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
          GALGAS_string var_errorMessage = GALGAS_string ("the '").operator_concat (enumerator_1803.current_mSettingValue (HERE).reader_string (SOURCE_FILE_AT_LINE (61)) COMMA_SOURCE_FILE_AT_LINE (61)).operator_concat (GALGAS_string ("' value is not defined for configuration setting '") COMMA_SOURCE_FILE_AT_LINE (61)).operator_concat (enumerator_1803.current_mSettingName (HERE).reader_string (SOURCE_FILE_AT_LINE (62)) COMMA_SOURCE_FILE_AT_LINE (62)).operator_concat (GALGAS_string ("'; possible values are:") COMMA_SOURCE_FILE_AT_LINE (62)) ;
          //-------- @foreachInstructionForGeneration
          cEnumerator_fieldSettingMap enumerator_2999 (var_fieldSettingMap, true) ;
          //--- simple foreach instruction
          while (enumerator_2999.hasCurrentObject ()) {
            //-------- @appendInstructionForGeneration
            var_errorMessage.dotAssign_operation (GALGAS_string ("\n"
              "-  \"").operator_concat (enumerator_2999.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (64)) COMMA_SOURCE_FILE_AT_LINE (64)).operator_concat (GALGAS_string ("\"") COMMA_SOURCE_FILE_AT_LINE (64)) COMMA_SOURCE_FILE_AT_LINE (64)) ;
            enumerator_2999.gotoNextObject () ;
          }
          //-------- @errorInstructionForGeneration
          GALGAS_location location_1 (enumerator_1803.current_mSettingValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_1, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (66)) ;
        }
      }
      enumerator_1803.gotoNextObject () ;
    }
    enumerator_1775.gotoNextObject () ;
  }
  //-------- @ifInstructionForGeneration
  if (constinArgument_inAcceptDefaultConfiguration.operator_not (SOURCE_FILE_AT_LINE (71)).isValidAndTrue ()) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_stringset var_notDefinedSetting = var_configFieldMap.reader_allKeys (SOURCE_FILE_AT_LINE (72)).substract_operation (var_actualSettingNameSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (72)) ;
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (kIsStrictSup, var_notDefinedSetting.reader_count (SOURCE_FILE_AT_LINE (73)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_errorMessage = GALGAS_string ("the following configuration settings are not defined:") ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_stringset enumerator_3508 (var_notDefinedSetting, true) ;
      //--- simple foreach instruction
      while (enumerator_3508.hasCurrentObject ()) {
        //-------- @appendInstructionForGeneration
        var_errorMessage.dotAssign_operation (GALGAS_string ("\n"
          "-  ").operator_concat (enumerator_3508.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (76)) COMMA_SOURCE_FILE_AT_LINE (76)) ;
        enumerator_3508.gotoNextObject () ;
      }
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), var_errorMessage COMMA_SOURCE_FILE_AT_LINE (78)) ;
    }
  }
  //-------- @foreachInstructionForGeneration
  cEnumerator_actualConfigurationMap enumerator_3714 (outArgument_outActualConfigurationMap, true) ;
  //--- simple foreach instruction
  while (enumerator_3714.hasCurrentObject ()) {
    //-------- @appendInstructionForGeneration
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("Register '").operator_concat (enumerator_3714.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (83)) COMMA_SOURCE_FILE_AT_LINE (83)).operator_concat (GALGAS_string ("' at ") COMMA_SOURCE_FILE_AT_LINE (83)).operator_concat (enumerator_3714.current_mRegisterAddress (HERE).reader_hexString (SOURCE_FILE_AT_LINE (83)) COMMA_SOURCE_FILE_AT_LINE (83)).operator_concat (GALGAS_string (" set to ") COMMA_SOURCE_FILE_AT_LINE (83)).operator_concat (enumerator_3714.current_mRegisterValue (HERE).reader_hexString (SOURCE_FILE_AT_LINE (83)) COMMA_SOURCE_FILE_AT_LINE (83)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (83)) COMMA_SOURCE_FILE_AT_LINE (83)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_configRegisterMaskMap var_configRegisterMaskMap ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_luint joker_3947_0 ; // Joker input parameter
    GALGAS_luint joker_3950_0 ; // Joker input parameter
    GALGAS_illegalMaskList joker_3976_0 ; // Joker input parameter
    constinArgument_inConfigRegisterMap.method_searchKey (enumerator_3714.current_lkey (HERE), joker_3947_0, joker_3950_0, var_configRegisterMaskMap, joker_3976_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (85)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @foreachInstructionForGeneration
    cEnumerator_configRegisterMaskMap enumerator_4024 (var_configRegisterMaskMap, true) ;
    //--- simple foreach instruction
    while (enumerator_4024.hasCurrentObject ()) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_lstring var_settingName = enumerator_4024.current_lkey (HERE) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_fieldSettingMap enumerator_4128 (enumerator_4024.current_mFieldSettingMap (HERE), true) ;
      //--- simple foreach instruction
      while (enumerator_4128.hasCurrentObject ()) {
        //-------- @ifInstructionForGeneration
        if (GALGAS_bool (kIsEqual, enumerator_3714.current_mRegisterValue (HERE).operator_and (enumerator_4024.current_mMaskValue (HERE).reader_uint (SOURCE_FILE_AT_LINE (89)) COMMA_SOURCE_FILE_AT_LINE (89)).objectCompare (enumerator_4128.current_mValue (HERE))).isValidAndTrue ()) {
          //-------- @appendInstructionForGeneration
          ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  setting '").operator_concat (var_settingName.reader_string (SOURCE_FILE_AT_LINE (90)) COMMA_SOURCE_FILE_AT_LINE (90)).operator_concat (GALGAS_string ("' set to ") COMMA_SOURCE_FILE_AT_LINE (90)).operator_concat (enumerator_4128.current_mValue (HERE).reader_hexString (SOURCE_FILE_AT_LINE (90)) COMMA_SOURCE_FILE_AT_LINE (90)).operator_concat (GALGAS_string (" (\"") COMMA_SOURCE_FILE_AT_LINE (90)).operator_concat (enumerator_4128.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (90)) COMMA_SOURCE_FILE_AT_LINE (90)).operator_concat (GALGAS_string ("\")\n") COMMA_SOURCE_FILE_AT_LINE (90)) COMMA_SOURCE_FILE_AT_LINE (90)) ;
        }
        enumerator_4128.gotoNextObject () ;
      }
      enumerator_4024.gotoNextObject () ;
    }
    //-------- @appendInstructionForGeneration
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (94)) ;
    enumerator_3714.gotoNextObject () ;
  }
  //-------- @foreachInstructionForGeneration
  cEnumerator_actualConfigurationMap enumerator_4531 (outArgument_outActualConfigurationMap, true) ;
  //--- simple foreach instruction
  while (enumerator_4531.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_illegalMaskList var_illegalMaskList ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_luint joker_4614_0 ; // Joker input parameter
    GALGAS_luint joker_4617_0 ; // Joker input parameter
    GALGAS_configRegisterMaskMap joker_4620_0 ; // Joker input parameter
    constinArgument_inConfigRegisterMap.method_searchKey (enumerator_4531.current_lkey (HERE), joker_4614_0, joker_4617_0, joker_4620_0, var_illegalMaskList, inCompiler COMMA_SOURCE_FILE_AT_LINE (99)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @foreachInstructionForGeneration
    cEnumerator_illegalMaskList enumerator_4672 (var_illegalMaskList, true) ;
    //--- simple foreach instruction
    while (enumerator_4672.hasCurrentObject ()) {
      //-------- @ifInstructionForGeneration
      if (GALGAS_bool (kIsEqual, enumerator_4531.current_mRegisterValue (HERE).operator_and (enumerator_4672.current_mIllegalMask (HERE).reader_uint (SOURCE_FILE_AT_LINE (101)) COMMA_SOURCE_FILE_AT_LINE (101)).objectCompare (enumerator_4672.current_mIllegalValue (HERE).reader_uint (SOURCE_FILE_AT_LINE (101)))).isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("illegal setting for '").operator_concat (enumerator_4531.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (102)) COMMA_SOURCE_FILE_AT_LINE (102)).operator_concat (GALGAS_string ("' register: ") COMMA_SOURCE_FILE_AT_LINE (102)).operator_concat (enumerator_4672.current_mDescription (HERE).reader_string (SOURCE_FILE_AT_LINE (102)) COMMA_SOURCE_FILE_AT_LINE (102)) COMMA_SOURCE_FILE_AT_LINE (102)) ;
        //-------- @appendInstructionForGeneration
        ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*** ILLEGAL SETTING for register '").operator_concat (enumerator_4531.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (103)) COMMA_SOURCE_FILE_AT_LINE (103)).operator_concat (GALGAS_string ("' ***\n") COMMA_SOURCE_FILE_AT_LINE (103)) COMMA_SOURCE_FILE_AT_LINE (103)) ;
        //-------- @appendInstructionForGeneration
        ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("  message: ").operator_concat (enumerator_4672.current_mDescription (HERE).reader_string (SOURCE_FILE_AT_LINE (104)) COMMA_SOURCE_FILE_AT_LINE (104)).operator_concat (GALGAS_string ("\n"
          "\n") COMMA_SOURCE_FILE_AT_LINE (104)) COMMA_SOURCE_FILE_AT_LINE (104)) ;
      }
      enumerator_4672.gotoNextObject () ;
    }
    enumerator_4531.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                           Routine 'buildConfig'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildConfig (const GALGAS_configRegisterMap constinArgument_inConfigRegisterMap,
                          const GALGAS_configDefinitionList constinArgument_inConfigDefinitionList,
                          const GALGAS_bool constinArgument_inAcceptDefaultConfiguration,
                          GALGAS_string & ioArgument_ioListFileContents,
                          GALGAS_actualConfigurationMap & outArgument_outActualConfigurationMap,
                          C_Compiler * inCompiler
                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outActualConfigurationMap.drop () ; // Release 'out' argument
  //-------- @appendInstructionForGeneration
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("").reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (120)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (120)) COMMA_SOURCE_FILE_AT_LINE (120)) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*").operator_concat (GALGAS_string ("MICROCONTROLLER CONFIGURATION").reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 77U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (121)) COMMA_SOURCE_FILE_AT_LINE (121)).operator_concat (GALGAS_string ("*\n") COMMA_SOURCE_FILE_AT_LINE (121)) COMMA_SOURCE_FILE_AT_LINE (121)) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("").reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (122)).operator_concat (GALGAS_string ("\n"
    "\n") COMMA_SOURCE_FILE_AT_LINE (122)) COMMA_SOURCE_FILE_AT_LINE (122)) ;
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsStrictSup, constinArgument_inConfigDefinitionList.reader_length (SOURCE_FILE_AT_LINE (124)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
    { //-------- @routineCallInstructionForGeneration
    routine_actualBuildConfig (constinArgument_inConfigRegisterMap, constinArgument_inConfigDefinitionList, constinArgument_inAcceptDefaultConfiguration, ioArgument_ioListFileContents, outArgument_outActualConfigurationMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (125)) ;
    } //-------- @routineCallInstructionForGeneration
  }else{
    //-------- @assignmentInstructionForGeneration
    outArgument_outActualConfigurationMap = GALGAS_actualConfigurationMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (133)) ;
    //-------- @appendInstructionForGeneration
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("No configuration.\n"
      "\n") COMMA_SOURCE_FILE_AT_LINE (134)) ;
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


