//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'piccolo_config.cpp'                          *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     october 28th, 2010, at 22h16'36"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "piccolo_config.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "piccolo_config.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*

cMapElement_configFieldMap::cMapElement_configFieldMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_lstring & in_mRegisterName,
                                                        const GALGAS_luint & in_mMaskValue,
                                                        const GALGAS_lstring & in_mDescription,
                                                        const GALGAS_fieldSettingMap & in_mFieldSettingMap
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mRegisterName (in_mRegisterName),
mAttribute_mMaskValue (in_mMaskValue),
mAttribute_mDescription (in_mDescription),
mAttribute_mFieldSettingMap (in_mFieldSettingMap) {
}

//---------------------------------------------------------------------------*

bool cMapElement_configFieldMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRegisterName.isValid () && mAttribute_mMaskValue.isValid () && mAttribute_mDescription.isValid () && mAttribute_mFieldSettingMap.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_configFieldMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_configFieldMap (mAttribute_lkey, mAttribute_mRegisterName, mAttribute_mMaskValue, mAttribute_mDescription, mAttribute_mFieldSettingMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_configFieldMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
// mAttribute_mRegisterName.description (ioString, inIndentation) ;
// mAttribute_mMaskValue.description (ioString, inIndentation) ;
// mAttribute_mDescription.description (ioString, inIndentation) ;
// mAttribute_mFieldSettingMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

enumComparisonResult cMapElement_configFieldMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_configFieldMap * operand = (cMapElement_configFieldMap *) inOperand ;
  enumComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mRegisterName.objectCompare (operand->mAttribute_mRegisterName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mMaskValue.objectCompare (operand->mAttribute_mMaskValue) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mDescription.objectCompare (operand->mAttribute_mDescription) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFieldSettingMap.objectCompare (operand->mAttribute_mFieldSettingMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_configFieldMap::GALGAS_configFieldMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_configFieldMap::GALGAS_configFieldMap (const GALGAS_configFieldMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_configFieldMap & GALGAS_configFieldMap::operator = (const GALGAS_configFieldMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_configFieldMap GALGAS_configFieldMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_configFieldMap result ;
  result.createNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_configFieldMap GALGAS_configFieldMap::constructor_mapWithMapToOverride (const GALGAS_configFieldMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_configFieldMap result ;
  result.createNewEmptyMap (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_configFieldMap GALGAS_configFieldMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_configFieldMap result ;
  overridenMap (result) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_configFieldMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_lstring inArgument0,
                                                GALGAS_luint inArgument1,
                                                GALGAS_lstring inArgument2,
                                                GALGAS_fieldSettingMap inArgument3,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_configFieldMap * p = NULL ;
  macroMyNew (p, cMapElement_configFieldMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
    capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroReleaseObject (p) ;
  const utf32 kInsertErrorMessage [55] = {
    TO_UNICODE ('t'),
    TO_UNICODE ('h'),
    TO_UNICODE ('e'),
    TO_UNICODE (' '),
    TO_UNICODE ('\''),
    TO_UNICODE ('%'),
    TO_UNICODE ('K'),
    TO_UNICODE ('\''),
    TO_UNICODE (' '),
    TO_UNICODE ('c'),
    TO_UNICODE ('o'),
    TO_UNICODE ('n'),
    TO_UNICODE ('f'),
    TO_UNICODE ('i'),
    TO_UNICODE ('g'),
    TO_UNICODE ('u'),
    TO_UNICODE ('r'),
    TO_UNICODE ('a'),
    TO_UNICODE ('t'),
    TO_UNICODE ('i'),
    TO_UNICODE ('o'),
    TO_UNICODE ('n'),
    TO_UNICODE (' '),
    TO_UNICODE ('f'),
    TO_UNICODE ('i'),
    TO_UNICODE ('e'),
    TO_UNICODE ('l'),
    TO_UNICODE ('d'),
    TO_UNICODE (' '),
    TO_UNICODE ('i'),
    TO_UNICODE ('s'),
    TO_UNICODE (' '),
    TO_UNICODE ('a'),
    TO_UNICODE ('l'),
    TO_UNICODE ('r'),
    TO_UNICODE ('e'),
    TO_UNICODE ('a'),
    TO_UNICODE ('d'),
    TO_UNICODE ('y'),
    TO_UNICODE (' '),
    TO_UNICODE ('d'),
    TO_UNICODE ('e'),
    TO_UNICODE ('c'),
    TO_UNICODE ('l'),
    TO_UNICODE ('a'),
    TO_UNICODE ('r'),
    TO_UNICODE ('e'),
    TO_UNICODE ('d'),
    TO_UNICODE (' '),
    TO_UNICODE ('i'),
    TO_UNICODE ('n'),
    TO_UNICODE (' '),
    TO_UNICODE ('%'),
    TO_UNICODE ('L'),
    TO_UNICODE (0)
  } ;
  const utf32 kShadowErrorMessage [1] = {
    TO_UNICODE (0)
  } ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

static const utf32 kSearchErrorMessage_configFieldMap_searchKey [45] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('%'),
  TO_UNICODE ('K'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('c'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE ('f'),
  TO_UNICODE ('i'),
  TO_UNICODE ('g'),
  TO_UNICODE ('u'),
  TO_UNICODE ('r'),
  TO_UNICODE ('a'),
  TO_UNICODE ('t'),
  TO_UNICODE ('i'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (' '),
  TO_UNICODE ('f'),
  TO_UNICODE ('i'),
  TO_UNICODE ('e'),
  TO_UNICODE ('l'),
  TO_UNICODE ('d'),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('s'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('t'),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('l'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------*

void GALGAS_configFieldMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_lstring & outArgument0,
                                              GALGAS_luint & outArgument1,
                                              GALGAS_lstring & outArgument2,
                                              GALGAS_fieldSettingMap & outArgument3,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = performSearch (inKey, inCompiler, kSearchErrorMessage_configFieldMap_searchKey COMMA_THERE) ;
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) attributes ;
  if (NULL != p) {
    macroValidObject (p, const cMapElement_configFieldMap) ;
    outArgument0 = p->mAttribute_mRegisterName ;
    outArgument1 = p->mAttribute_mMaskValue ;
    outArgument2 = p->mAttribute_mDescription ;
    outArgument3 = p->mAttribute_mFieldSettingMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_configFieldMap::reader_mRegisterNameForKey (const GALGAS_string & inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidObject (p, const cMapElement_configFieldMap) ;
    result = p->mAttribute_mRegisterName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_luint GALGAS_configFieldMap::reader_mMaskValueForKey (const GALGAS_string & inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) attributes ;
  GALGAS_luint result ;
  if (NULL != p) {
    macroValidObject (p, const cMapElement_configFieldMap) ;
    result = p->mAttribute_mMaskValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_configFieldMap::reader_mDescriptionForKey (const GALGAS_string & inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidObject (p, const cMapElement_configFieldMap) ;
    result = p->mAttribute_mDescription ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_fieldSettingMap GALGAS_configFieldMap::reader_mFieldSettingMapForKey (const GALGAS_string & inKey,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) attributes ;
  GALGAS_fieldSettingMap result ;
  if (NULL != p) {
    macroValidObject (p, const cMapElement_configFieldMap) ;
    result = p->mAttribute_mFieldSettingMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_configFieldMap::modifier_setMRegisterNameForKey (GALGAS_lstring inAttributeValue,
                                                             GALGAS_string inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_configFieldMap * p = (cMapElement_configFieldMap *) attributes ;
  if (NULL != p) {
    macroValidObject (p, cMapElement_configFieldMap) ;
    p->mAttribute_mRegisterName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_configFieldMap::modifier_setMMaskValueForKey (GALGAS_luint inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_configFieldMap * p = (cMapElement_configFieldMap *) attributes ;
  if (NULL != p) {
    macroValidObject (p, cMapElement_configFieldMap) ;
    p->mAttribute_mMaskValue = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_configFieldMap::modifier_setMDescriptionForKey (GALGAS_lstring inAttributeValue,
                                                            GALGAS_string inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_configFieldMap * p = (cMapElement_configFieldMap *) attributes ;
  if (NULL != p) {
    macroValidObject (p, cMapElement_configFieldMap) ;
    p->mAttribute_mDescription = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_configFieldMap::modifier_setMFieldSettingMapForKey (GALGAS_fieldSettingMap inAttributeValue,
                                                                GALGAS_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_configFieldMap * p = (cMapElement_configFieldMap *) attributes ;
  if (NULL != p) {
    macroValidObject (p, cMapElement_configFieldMap) ;
    p->mAttribute_mFieldSettingMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_configFieldMap * GALGAS_configFieldMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                              const GALGAS_string & inKey
                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_configFieldMap * result = (cMapElement_configFieldMap *) p ;
  macroNullOrValidObject (result, cMapElement_configFieldMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_configFieldMap * GALGAS_configFieldMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                 const GALGAS_lstring & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_configFieldMap_searchKey COMMA_THERE) ;
  cMapElement_configFieldMap * result = (cMapElement_configFieldMap *) p ;
  macroNullOrValidObject (result, cMapElement_configFieldMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_configFieldMap::cEnumerator_configFieldMap (const GALGAS_configFieldMap & inEnumeratedObject,
                                                        const bool inAscending) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inAscending) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_configFieldMap::current_lkey (void) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr () ;
  macroValidObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_configFieldMap::current_mRegisterName (void) const {
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) currentObjectPtr () ;
  macroValidObject (p, const cMapElement_configFieldMap) ;
  return p->mAttribute_mRegisterName ;
}

//---------------------------------------------------------------------------*

GALGAS_luint cEnumerator_configFieldMap::current_mMaskValue (void) const {
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) currentObjectPtr () ;
  macroValidObject (p, const cMapElement_configFieldMap) ;
  return p->mAttribute_mMaskValue ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_configFieldMap::current_mDescription (void) const {
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) currentObjectPtr () ;
  macroValidObject (p, const cMapElement_configFieldMap) ;
  return p->mAttribute_mDescription ;
}

//---------------------------------------------------------------------------*

GALGAS_fieldSettingMap cEnumerator_configFieldMap::current_mFieldSettingMap (void) const {
  const cMapElement_configFieldMap * p = (const cMapElement_configFieldMap *) currentObjectPtr () ;
  macroValidObject (p, const cMapElement_configFieldMap) ;
  return p->mAttribute_mFieldSettingMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @configFieldMap type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_configFieldMap ("configFieldMap",
                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_configFieldMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_configFieldMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_configFieldMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_configFieldMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_configFieldMap GALGAS_configFieldMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler,
                                                            const GALGAS_location & inErrorLocation
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_configFieldMap result ;
  const GALGAS_configFieldMap * p = (const GALGAS_configFieldMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_configFieldMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "configFieldMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'actualBuildConfig'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_actualBuildConfig (const GALGAS_configRegisterMap constinArgument_inConfigRegisterMap,
                                const GALGAS_configDefinitionList constinArgument_inConfigDefinitionList,
                                const GALGAS_bool constinArgument_inAcceptDefaultConfiguration,
                                GALGAS_string & ioArgument_ioListFileContents,
                                GALGAS_actualConfigurationMap & outArgument_outActualConfigurationMap,
                                C_Compiler * inCompiler
                                COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outActualConfigurationMap.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  GALGAS_actualConfigurationMap temp_0 (GALGAS_actualConfigurationMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (29))) ;
  outArgument_outActualConfigurationMap = temp_0 ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_configFieldMap var_configFieldMap (GALGAS_configFieldMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (30))) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_configRegisterMap enumerator_1262 (constinArgument_inConfigRegisterMap, true) ;
  //--- simple foreach instruction
  while (enumerator_1262.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    //--- @subExpressionForGeneration
    //--- @literalUIntExpressionForGeneration
    GALGAS_uint temp_1 ((PMUInt32) 1U) ;
    //--- @readerCallExpressionForGeneration
    GALGAS_uint temp_2 (enumerator_1262.current_mRegisterWidth ().reader_uint (SOURCE_FILE_AT_LINE (32))) ;
    GALGAS_uint temp_3 (temp_1.left_shift_operation (temp_2 COMMA_SOURCE_FILE_AT_LINE (32))) ;
    //--- @literalUIntExpressionForGeneration
    GALGAS_uint temp_4 ((PMUInt32) 1U) ;
    GALGAS_uint temp_5 (temp_3.substract_operation (temp_4, inCompiler COMMA_SOURCE_FILE_AT_LINE (32))) ;
    GALGAS_uint var_defaultValue (temp_5) ;
    { //-------- @modifierCallInstructionForGeneration
    //--- @readerCallExpressionForGeneration
    GALGAS_uint temp_6 (enumerator_1262.current_mRegisterAddress ().reader_uint (SOURCE_FILE_AT_LINE (33))) ;
    outArgument_outActualConfigurationMap.modifier_insertKey (enumerator_1262.current_lkey (), temp_6, var_defaultValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (33)) ;
    } //-------- END @typeMethodInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_lstring var_registerName (enumerator_1262.current_lkey ()) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_configRegisterMaskMap enumerator_1497 (enumerator_1262.current_mConfigRegisterMaskMap (), true) ;
    //--- simple foreach instruction
    while (enumerator_1497.hasCurrentObject ()) {
      { //-------- @modifierCallInstructionForGeneration
      var_configFieldMap.modifier_insertKey (enumerator_1497.current_lkey (), var_registerName, enumerator_1497.current_mMaskValue (), enumerator_1497.current_mDescription (), enumerator_1497.current_mFieldSettingMap (), inCompiler COMMA_SOURCE_FILE_AT_LINE (36)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_1497.gotoNextObject () ;
    }
    enumerator_1262.gotoNextObject () ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_stringset var_actualSettingNameSet (GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (40))) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_configDefinitionList enumerator_1775 (constinArgument_inConfigDefinitionList, true) ;
  //--- simple foreach instruction
  while (enumerator_1775.hasCurrentObject ()) {
    //-------- @foreachInstructionForGeneration
    cEnumerator_configSettingList enumerator_1803 (enumerator_1775.current_mSettingList (), true) ;
    //--- simple foreach instruction
    while (enumerator_1803.hasCurrentObject ()) {
      //-------- @ifInstructionForGeneration
      //--- @readerCallExpressionForGeneration
      //--- @readerCallExpressionForGeneration
      GALGAS_string temp_7 (enumerator_1803.current_mSettingName ().reader_string (SOURCE_FILE_AT_LINE (43))) ;
      GALGAS_bool temp_8 (var_actualSettingNameSet.reader_hasKey (temp_7 COMMA_SOURCE_FILE_AT_LINE (43))) ;
      if (temp_8.isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        //--- @concatExpressionForGeneration
        //--- @concatExpressionForGeneration
        //--- @literalStringExpressionForGeneration
        GALGAS_string temp_9 ("the '") ;
        //--- @readerCallExpressionForGeneration
        GALGAS_string temp_10 (enumerator_1803.current_mSettingName ().reader_string (SOURCE_FILE_AT_LINE (44))) ;
        GALGAS_string temp_11 (temp_9.operator_concat (temp_10 COMMA_SOURCE_FILE_AT_LINE (44))) ;
        //--- @literalStringExpressionForGeneration
        GALGAS_string temp_12 ("' setting is already defined") ;
        GALGAS_string temp_13 (temp_11.operator_concat (temp_12 COMMA_SOURCE_FILE_AT_LINE (44))) ;
        GALGAS_location location_14 (enumerator_1803.current_mSettingName ().reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_14, temp_13 COMMA_SOURCE_FILE_AT_LINE (44)) ;
      }
      //-------- @addAssignInstructionForGeneration
      //--- @readerCallExpressionForGeneration
      GALGAS_string temp_15 (enumerator_1803.current_mSettingName ().reader_string (SOURCE_FILE_AT_LINE (46))) ;
      var_actualSettingNameSet.addAssign_operation (temp_15 COMMA_SOURCE_FILE_AT_LINE (46)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_lstring var_registerName ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_luint var_maskValue ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_lstring var_settingDescription ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_fieldSettingMap var_fieldSettingMap ;
      //-------- @methodCallInstructionForGeneration
      var_configFieldMap.method_searchKey (enumerator_1803.current_mSettingName (), var_registerName, var_maskValue, var_settingDescription, var_fieldSettingMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (51)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @ifInstructionForGeneration
      //--- @readerCallExpressionForGeneration
      //--- @readerCallExpressionForGeneration
      GALGAS_string temp_16 (enumerator_1803.current_mSettingValue ().reader_string (SOURCE_FILE_AT_LINE (52))) ;
      GALGAS_bool temp_17 (var_fieldSettingMap.reader_hasKey (temp_16 COMMA_SOURCE_FILE_AT_LINE (52))) ;
      if (temp_17.isValidAndTrue ()) {
        //-------- @localVariableDeclarationForGeneration
        GALGAS_uint var_settingValue ;
        //-------- @localVariableDeclarationForGeneration
        GALGAS_uint var_settingMask ;
        //-------- @methodCallInstructionForGeneration
        var_fieldSettingMap.method_searchKey (enumerator_1803.current_mSettingValue (), var_settingValue, var_settingMask, inCompiler COMMA_SOURCE_FILE_AT_LINE (55)) ;
        //-------- END @methodCallInstructionForGeneration
        //-------- @localVariableDeclarationForGeneration
        GALGAS_uint var_registerValue ;
        //-------- @methodCallInstructionForGeneration
        GALGAS_uint joker_2561_0 ; // Joker input parameter
        outArgument_outActualConfigurationMap.method_searchKey (var_registerName, joker_2561_0, var_registerValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (57)) ;
        //-------- END @methodCallInstructionForGeneration
        //-------- @assignmentInstructionForGeneration
        //--- @orExpressionForGeneration
        //--- @andExpressionForGeneration
        //--- @complementExpressionForGeneration
        GALGAS_uint temp_18 (var_settingMask.operator_tilde (SOURCE_FILE_AT_LINE (58))) ;
        GALGAS_uint temp_19 (var_registerValue.operator_and (temp_18 COMMA_SOURCE_FILE_AT_LINE (58))) ;
        GALGAS_uint temp_20 (temp_19.operator_or (var_settingValue COMMA_SOURCE_FILE_AT_LINE (58))) ;
        var_registerValue = temp_20 ;
        { //-------- @modifierCallInstructionForGeneration
        //--- @readerCallExpressionForGeneration
        GALGAS_string temp_21 (var_registerName.reader_string (SOURCE_FILE_AT_LINE (59))) ;
        outArgument_outActualConfigurationMap.modifier_setMRegisterValueForKey (var_registerValue, temp_21, inCompiler COMMA_SOURCE_FILE_AT_LINE (59)) ;
        } //-------- END @typeMethodInstructionForGeneration
      }else{
        //-------- @ifInstructionForGeneration
        //--- @strictGreaterExpressionForGeneration
        //--- @readerCallExpressionForGeneration
        GALGAS_uint temp_22 (var_fieldSettingMap.reader_count (SOURCE_FILE_AT_LINE (60))) ;
        //--- @literalUIntExpressionForGeneration
        GALGAS_uint temp_23 ((PMUInt32) 0U) ;
        GALGAS_bool temp_24 (kIsStrictSup, temp_22.objectCompare (temp_23)) ;
        if (temp_24.isValidAndTrue ()) {
          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
          //--- @concatExpressionForGeneration
          //--- @concatExpressionForGeneration
          //--- @concatExpressionForGeneration
          //--- @concatExpressionForGeneration
          //--- @literalStringExpressionForGeneration
          GALGAS_string temp_25 ("the '") ;
          //--- @readerCallExpressionForGeneration
          GALGAS_string temp_26 (enumerator_1803.current_mSettingValue ().reader_string (SOURCE_FILE_AT_LINE (61))) ;
          GALGAS_string temp_27 (temp_25.operator_concat (temp_26 COMMA_SOURCE_FILE_AT_LINE (61))) ;
          //--- @literalStringExpressionForGeneration
          GALGAS_string temp_28 ("' value is not defined for configuration setting '") ;
          GALGAS_string temp_29 (temp_27.operator_concat (temp_28 COMMA_SOURCE_FILE_AT_LINE (61))) ;
          //--- @readerCallExpressionForGeneration
          GALGAS_string temp_30 (enumerator_1803.current_mSettingName ().reader_string (SOURCE_FILE_AT_LINE (62))) ;
          GALGAS_string temp_31 (temp_29.operator_concat (temp_30 COMMA_SOURCE_FILE_AT_LINE (62))) ;
          //--- @literalStringExpressionForGeneration
          GALGAS_string temp_32 ("'; possible values are:") ;
          GALGAS_string temp_33 (temp_31.operator_concat (temp_32 COMMA_SOURCE_FILE_AT_LINE (62))) ;
          GALGAS_string var_errorMessage (temp_33) ;
          //-------- @foreachInstructionForGeneration
          cEnumerator_fieldSettingMap enumerator_2999 (var_fieldSettingMap, true) ;
          //--- simple foreach instruction
          while (enumerator_2999.hasCurrentObject ()) {
            //-------- @appendInstructionForGeneration
            //--- @concatExpressionForGeneration
            //--- @concatExpressionForGeneration
            //--- @literalStringExpressionForGeneration
            GALGAS_string temp_34 ("\n"
              "-  \"") ;
            //--- @readerCallExpressionForGeneration
            GALGAS_string temp_35 (enumerator_2999.current_lkey ().reader_string (SOURCE_FILE_AT_LINE (64))) ;
            GALGAS_string temp_36 (temp_34.operator_concat (temp_35 COMMA_SOURCE_FILE_AT_LINE (64))) ;
            //--- @literalStringExpressionForGeneration
            GALGAS_string temp_37 ("\"") ;
            GALGAS_string temp_38 (temp_36.operator_concat (temp_37 COMMA_SOURCE_FILE_AT_LINE (64))) ;
            var_errorMessage.dotAssign_operation (temp_38 COMMA_SOURCE_FILE_AT_LINE (64)) ;
            enumerator_2999.gotoNextObject () ;
          }
          //-------- @errorInstructionForGeneration
          GALGAS_location location_39 (enumerator_1803.current_mSettingValue ().reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_39, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (66)) ;
        }
      }
      enumerator_1803.gotoNextObject () ;
    }
    enumerator_1775.gotoNextObject () ;
  }
  //-------- @ifInstructionForGeneration
  //--- @notExpressionForGeneration
  GALGAS_bool temp_40 (constinArgument_inAcceptDefaultConfiguration.operator_not (SOURCE_FILE_AT_LINE (71))) ;
  if (temp_40.isValidAndTrue ()) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    //--- @subExpressionForGeneration
    //--- @readerCallExpressionForGeneration
    GALGAS_stringset temp_41 (var_configFieldMap.reader_allKeys (SOURCE_FILE_AT_LINE (72))) ;
    GALGAS_stringset temp_42 (temp_41.substract_operation (var_actualSettingNameSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (72))) ;
    GALGAS_stringset var_notDefinedSetting (temp_42) ;
    //-------- @ifInstructionForGeneration
    //--- @strictGreaterExpressionForGeneration
    //--- @readerCallExpressionForGeneration
    GALGAS_uint temp_43 (var_notDefinedSetting.reader_count (SOURCE_FILE_AT_LINE (73))) ;
    //--- @literalUIntExpressionForGeneration
    GALGAS_uint temp_44 ((PMUInt32) 0U) ;
    GALGAS_bool temp_45 (kIsStrictSup, temp_43.objectCompare (temp_44)) ;
    if (temp_45.isValidAndTrue ()) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      //--- @literalStringExpressionForGeneration
      GALGAS_string temp_46 ("the following configuration settings are not defined:") ;
      GALGAS_string var_errorMessage (temp_46) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_stringset enumerator_3508 (var_notDefinedSetting, true) ;
      //--- simple foreach instruction
      while (enumerator_3508.hasCurrentObject ()) {
        //-------- @appendInstructionForGeneration
        //--- @concatExpressionForGeneration
        //--- @literalStringExpressionForGeneration
        GALGAS_string temp_47 ("\n"
          "-  ") ;
        GALGAS_string temp_48 (temp_47.operator_concat (enumerator_3508.current_key () COMMA_SOURCE_FILE_AT_LINE (76))) ;
        var_errorMessage.dotAssign_operation (temp_48 COMMA_SOURCE_FILE_AT_LINE (76)) ;
        enumerator_3508.gotoNextObject () ;
      }
      //-------- @errorInstructionForGeneration
      GALGAS_location temp_49 (inCompiler->here ()) ;
      inCompiler->emitSemanticError (temp_49, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (78)) ;
    }
  }
  //-------- @foreachInstructionForGeneration
  cEnumerator_actualConfigurationMap enumerator_3714 (outArgument_outActualConfigurationMap, true) ;
  //--- simple foreach instruction
  while (enumerator_3714.hasCurrentObject ()) {
    //-------- @appendInstructionForGeneration
    //--- @concatExpressionForGeneration
    //--- @concatExpressionForGeneration
    //--- @concatExpressionForGeneration
    //--- @concatExpressionForGeneration
    //--- @concatExpressionForGeneration
    //--- @concatExpressionForGeneration
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_50 ("Register '") ;
    //--- @readerCallExpressionForGeneration
    GALGAS_string temp_51 (enumerator_3714.current_lkey ().reader_string (SOURCE_FILE_AT_LINE (83))) ;
    GALGAS_string temp_52 (temp_50.operator_concat (temp_51 COMMA_SOURCE_FILE_AT_LINE (83))) ;
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_53 ("' at ") ;
    GALGAS_string temp_54 (temp_52.operator_concat (temp_53 COMMA_SOURCE_FILE_AT_LINE (83))) ;
    //--- @readerCallExpressionForGeneration
    GALGAS_string temp_55 (enumerator_3714.current_mRegisterAddress ().reader_hexString (SOURCE_FILE_AT_LINE (83))) ;
    GALGAS_string temp_56 (temp_54.operator_concat (temp_55 COMMA_SOURCE_FILE_AT_LINE (83))) ;
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_57 (" set to ") ;
    GALGAS_string temp_58 (temp_56.operator_concat (temp_57 COMMA_SOURCE_FILE_AT_LINE (83))) ;
    //--- @readerCallExpressionForGeneration
    GALGAS_string temp_59 (enumerator_3714.current_mRegisterValue ().reader_hexString (SOURCE_FILE_AT_LINE (83))) ;
    GALGAS_string temp_60 (temp_58.operator_concat (temp_59 COMMA_SOURCE_FILE_AT_LINE (83))) ;
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_61 ("\n") ;
    GALGAS_string temp_62 (temp_60.operator_concat (temp_61 COMMA_SOURCE_FILE_AT_LINE (83))) ;
    ioArgument_ioListFileContents.dotAssign_operation (temp_62 COMMA_SOURCE_FILE_AT_LINE (83)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_configRegisterMaskMap var_configRegisterMaskMap ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_luint joker_3947_0 ; // Joker input parameter
    GALGAS_luint joker_3950_0 ; // Joker input parameter
    GALGAS_illegalMaskList joker_3976_0 ; // Joker input parameter
    constinArgument_inConfigRegisterMap.method_searchKey (enumerator_3714.current_lkey (), joker_3947_0, joker_3950_0, var_configRegisterMaskMap, joker_3976_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (85)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @foreachInstructionForGeneration
    cEnumerator_configRegisterMaskMap enumerator_4024 (var_configRegisterMaskMap, true) ;
    //--- simple foreach instruction
    while (enumerator_4024.hasCurrentObject ()) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_lstring var_settingName (enumerator_4024.current_lkey ()) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_fieldSettingMap enumerator_4128 (enumerator_4024.current_mFieldSettingMap (), true) ;
      //--- simple foreach instruction
      while (enumerator_4128.hasCurrentObject ()) {
        //-------- @ifInstructionForGeneration
        //--- @equalExpressionForGeneration
        //--- @andExpressionForGeneration
        //--- @readerCallExpressionForGeneration
        GALGAS_uint temp_63 (enumerator_4024.current_mMaskValue ().reader_uint (SOURCE_FILE_AT_LINE (89))) ;
        GALGAS_uint temp_64 (enumerator_3714.current_mRegisterValue ().operator_and (temp_63 COMMA_SOURCE_FILE_AT_LINE (89))) ;
        GALGAS_bool temp_65 (kIsEqual, temp_64.objectCompare (enumerator_4128.current_mValue ())) ;
        if (temp_65.isValidAndTrue ()) {
          //-------- @appendInstructionForGeneration
          //--- @concatExpressionForGeneration
          //--- @concatExpressionForGeneration
          //--- @concatExpressionForGeneration
          //--- @concatExpressionForGeneration
          //--- @concatExpressionForGeneration
          //--- @concatExpressionForGeneration
          //--- @literalStringExpressionForGeneration
          GALGAS_string temp_66 ("  setting '") ;
          //--- @readerCallExpressionForGeneration
          GALGAS_string temp_67 (var_settingName.reader_string (SOURCE_FILE_AT_LINE (90))) ;
          GALGAS_string temp_68 (temp_66.operator_concat (temp_67 COMMA_SOURCE_FILE_AT_LINE (90))) ;
          //--- @literalStringExpressionForGeneration
          GALGAS_string temp_69 ("' set to ") ;
          GALGAS_string temp_70 (temp_68.operator_concat (temp_69 COMMA_SOURCE_FILE_AT_LINE (90))) ;
          //--- @readerCallExpressionForGeneration
          GALGAS_string temp_71 (enumerator_4128.current_mValue ().reader_hexString (SOURCE_FILE_AT_LINE (90))) ;
          GALGAS_string temp_72 (temp_70.operator_concat (temp_71 COMMA_SOURCE_FILE_AT_LINE (90))) ;
          //--- @literalStringExpressionForGeneration
          GALGAS_string temp_73 (" (\"") ;
          GALGAS_string temp_74 (temp_72.operator_concat (temp_73 COMMA_SOURCE_FILE_AT_LINE (90))) ;
          //--- @readerCallExpressionForGeneration
          GALGAS_string temp_75 (enumerator_4128.current_lkey ().reader_string (SOURCE_FILE_AT_LINE (90))) ;
          GALGAS_string temp_76 (temp_74.operator_concat (temp_75 COMMA_SOURCE_FILE_AT_LINE (90))) ;
          //--- @literalStringExpressionForGeneration
          GALGAS_string temp_77 ("\")\n") ;
          GALGAS_string temp_78 (temp_76.operator_concat (temp_77 COMMA_SOURCE_FILE_AT_LINE (90))) ;
          ioArgument_ioListFileContents.dotAssign_operation (temp_78 COMMA_SOURCE_FILE_AT_LINE (90)) ;
        }
        enumerator_4128.gotoNextObject () ;
      }
      enumerator_4024.gotoNextObject () ;
    }
    //-------- @appendInstructionForGeneration
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_79 ("\n") ;
    ioArgument_ioListFileContents.dotAssign_operation (temp_79 COMMA_SOURCE_FILE_AT_LINE (94)) ;
    enumerator_3714.gotoNextObject () ;
  }
  //-------- @foreachInstructionForGeneration
  cEnumerator_actualConfigurationMap enumerator_4531 (outArgument_outActualConfigurationMap, true) ;
  //--- simple foreach instruction
  while (enumerator_4531.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_illegalMaskList var_illegalMaskList ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_luint joker_4614_0 ; // Joker input parameter
    GALGAS_luint joker_4617_0 ; // Joker input parameter
    GALGAS_configRegisterMaskMap joker_4620_0 ; // Joker input parameter
    constinArgument_inConfigRegisterMap.method_searchKey (enumerator_4531.current_lkey (), joker_4614_0, joker_4617_0, joker_4620_0, var_illegalMaskList, inCompiler COMMA_SOURCE_FILE_AT_LINE (99)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @foreachInstructionForGeneration
    cEnumerator_illegalMaskList enumerator_4672 (var_illegalMaskList, true) ;
    //--- simple foreach instruction
    while (enumerator_4672.hasCurrentObject ()) {
      //-------- @ifInstructionForGeneration
      //--- @equalExpressionForGeneration
      //--- @andExpressionForGeneration
      //--- @readerCallExpressionForGeneration
      GALGAS_uint temp_80 (enumerator_4672.current_mIllegalMask ().reader_uint (SOURCE_FILE_AT_LINE (101))) ;
      GALGAS_uint temp_81 (enumerator_4531.current_mRegisterValue ().operator_and (temp_80 COMMA_SOURCE_FILE_AT_LINE (101))) ;
      //--- @readerCallExpressionForGeneration
      GALGAS_uint temp_82 (enumerator_4672.current_mIllegalValue ().reader_uint (SOURCE_FILE_AT_LINE (101))) ;
      GALGAS_bool temp_83 (kIsEqual, temp_81.objectCompare (temp_82)) ;
      if (temp_83.isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        GALGAS_location temp_84 (inCompiler->here ()) ;
        //--- @concatExpressionForGeneration
        //--- @concatExpressionForGeneration
        //--- @concatExpressionForGeneration
        //--- @literalStringExpressionForGeneration
        GALGAS_string temp_85 ("illegal setting for '") ;
        //--- @readerCallExpressionForGeneration
        GALGAS_string temp_86 (enumerator_4531.current_lkey ().reader_string (SOURCE_FILE_AT_LINE (102))) ;
        GALGAS_string temp_87 (temp_85.operator_concat (temp_86 COMMA_SOURCE_FILE_AT_LINE (102))) ;
        //--- @literalStringExpressionForGeneration
        GALGAS_string temp_88 ("' register: ") ;
        GALGAS_string temp_89 (temp_87.operator_concat (temp_88 COMMA_SOURCE_FILE_AT_LINE (102))) ;
        //--- @readerCallExpressionForGeneration
        GALGAS_string temp_90 (enumerator_4672.current_mDescription ().reader_string (SOURCE_FILE_AT_LINE (102))) ;
        GALGAS_string temp_91 (temp_89.operator_concat (temp_90 COMMA_SOURCE_FILE_AT_LINE (102))) ;
        inCompiler->emitSemanticError (temp_84, temp_91 COMMA_SOURCE_FILE_AT_LINE (102)) ;
        //-------- @appendInstructionForGeneration
        //--- @concatExpressionForGeneration
        //--- @concatExpressionForGeneration
        //--- @literalStringExpressionForGeneration
        GALGAS_string temp_92 ("*** ILLEGAL SETTING for register '") ;
        //--- @readerCallExpressionForGeneration
        GALGAS_string temp_93 (enumerator_4531.current_lkey ().reader_string (SOURCE_FILE_AT_LINE (103))) ;
        GALGAS_string temp_94 (temp_92.operator_concat (temp_93 COMMA_SOURCE_FILE_AT_LINE (103))) ;
        //--- @literalStringExpressionForGeneration
        GALGAS_string temp_95 ("' ***\n") ;
        GALGAS_string temp_96 (temp_94.operator_concat (temp_95 COMMA_SOURCE_FILE_AT_LINE (103))) ;
        ioArgument_ioListFileContents.dotAssign_operation (temp_96 COMMA_SOURCE_FILE_AT_LINE (103)) ;
        //-------- @appendInstructionForGeneration
        //--- @concatExpressionForGeneration
        //--- @concatExpressionForGeneration
        //--- @literalStringExpressionForGeneration
        GALGAS_string temp_97 ("  message: ") ;
        //--- @readerCallExpressionForGeneration
        GALGAS_string temp_98 (enumerator_4672.current_mDescription ().reader_string (SOURCE_FILE_AT_LINE (104))) ;
        GALGAS_string temp_99 (temp_97.operator_concat (temp_98 COMMA_SOURCE_FILE_AT_LINE (104))) ;
        //--- @literalStringExpressionForGeneration
        GALGAS_string temp_100 ("\n"
          "\n") ;
        GALGAS_string temp_101 (temp_99.operator_concat (temp_100 COMMA_SOURCE_FILE_AT_LINE (104))) ;
        ioArgument_ioListFileContents.dotAssign_operation (temp_101 COMMA_SOURCE_FILE_AT_LINE (104)) ;
      }
      enumerator_4672.gotoNextObject () ;
    }
    enumerator_4531.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                           Routine 'buildConfig'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildConfig (const GALGAS_configRegisterMap constinArgument_inConfigRegisterMap,
                          const GALGAS_configDefinitionList constinArgument_inConfigDefinitionList,
                          const GALGAS_bool constinArgument_inAcceptDefaultConfiguration,
                          GALGAS_string & ioArgument_ioListFileContents,
                          GALGAS_actualConfigurationMap & outArgument_outActualConfigurationMap,
                          C_Compiler * inCompiler
                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outActualConfigurationMap.drop () ; // Release 'out' argument
  //-------- @appendInstructionForGeneration
  //--- @concatExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  //--- @literalStringExpressionForGeneration
  GALGAS_string temp_0 ("") ;
  //--- @literalUIntExpressionForGeneration
  GALGAS_uint temp_1 ((PMUInt32) 79U) ;
  //--- @literalCharExpressionForGeneration
  GALGAS_char temp_2 (TO_UNICODE (42)) ;
  GALGAS_string temp_3 (temp_0.reader_stringByLeftAndRightPadding (temp_1, temp_2 COMMA_SOURCE_FILE_AT_LINE (120))) ;
  //--- @literalStringExpressionForGeneration
  GALGAS_string temp_4 ("\n") ;
  GALGAS_string temp_5 (temp_3.operator_concat (temp_4 COMMA_SOURCE_FILE_AT_LINE (120))) ;
  ioArgument_ioListFileContents.dotAssign_operation (temp_5 COMMA_SOURCE_FILE_AT_LINE (120)) ;
  //-------- @appendInstructionForGeneration
  //--- @concatExpressionForGeneration
  //--- @concatExpressionForGeneration
  //--- @literalStringExpressionForGeneration
  GALGAS_string temp_6 ("*") ;
  //--- @readerCallExpressionForGeneration
  //--- @literalStringExpressionForGeneration
  GALGAS_string temp_7 ("MICROCONTROLLER CONFIGURATION") ;
  //--- @literalUIntExpressionForGeneration
  GALGAS_uint temp_8 ((PMUInt32) 77U) ;
  //--- @literalCharExpressionForGeneration
  GALGAS_char temp_9 (TO_UNICODE (32)) ;
  GALGAS_string temp_10 (temp_7.reader_stringByLeftAndRightPadding (temp_8, temp_9 COMMA_SOURCE_FILE_AT_LINE (121))) ;
  GALGAS_string temp_11 (temp_6.operator_concat (temp_10 COMMA_SOURCE_FILE_AT_LINE (121))) ;
  //--- @literalStringExpressionForGeneration
  GALGAS_string temp_12 ("*\n") ;
  GALGAS_string temp_13 (temp_11.operator_concat (temp_12 COMMA_SOURCE_FILE_AT_LINE (121))) ;
  ioArgument_ioListFileContents.dotAssign_operation (temp_13 COMMA_SOURCE_FILE_AT_LINE (121)) ;
  //-------- @appendInstructionForGeneration
  //--- @concatExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  //--- @literalStringExpressionForGeneration
  GALGAS_string temp_14 ("") ;
  //--- @literalUIntExpressionForGeneration
  GALGAS_uint temp_15 ((PMUInt32) 79U) ;
  //--- @literalCharExpressionForGeneration
  GALGAS_char temp_16 (TO_UNICODE (42)) ;
  GALGAS_string temp_17 (temp_14.reader_stringByLeftAndRightPadding (temp_15, temp_16 COMMA_SOURCE_FILE_AT_LINE (122))) ;
  //--- @literalStringExpressionForGeneration
  GALGAS_string temp_18 ("\n"
    "\n") ;
  GALGAS_string temp_19 (temp_17.operator_concat (temp_18 COMMA_SOURCE_FILE_AT_LINE (122))) ;
  ioArgument_ioListFileContents.dotAssign_operation (temp_19 COMMA_SOURCE_FILE_AT_LINE (122)) ;
  //-------- @ifInstructionForGeneration
  //--- @strictGreaterExpressionForGeneration
  //--- @readerCallExpressionForGeneration
  GALGAS_uint temp_20 (constinArgument_inConfigDefinitionList.reader_length (SOURCE_FILE_AT_LINE (124))) ;
  //--- @literalUIntExpressionForGeneration
  GALGAS_uint temp_21 ((PMUInt32) 0U) ;
  GALGAS_bool temp_22 (kIsStrictSup, temp_20.objectCompare (temp_21)) ;
  if (temp_22.isValidAndTrue ()) {
    { //-------- @routineCallInstructionForGeneration
    routine_actualBuildConfig (constinArgument_inConfigRegisterMap, constinArgument_inConfigDefinitionList, constinArgument_inAcceptDefaultConfiguration, ioArgument_ioListFileContents, outArgument_outActualConfigurationMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (125)) ;
    } //-------- @routineCallInstructionForGeneration
  }else{
    //-------- @assignmentInstructionForGeneration
    GALGAS_actualConfigurationMap temp_23 (GALGAS_actualConfigurationMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (133))) ;
    outArgument_outActualConfigurationMap = temp_23 ;
    //-------- @appendInstructionForGeneration
    //--- @literalStringExpressionForGeneration
    GALGAS_string temp_24 ("No configuration.\n"
      "\n") ;
    ioArgument_ioListFileContents.dotAssign_operation (temp_24 COMMA_SOURCE_FILE_AT_LINE (134)) ;
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


