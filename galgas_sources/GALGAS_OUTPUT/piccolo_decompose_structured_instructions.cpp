//---------------------------------------------------------------------------*
//                                                                           *
//           File 'piccolo_decompose_structured_instructions.cpp'            *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      july 25th, 2008, at 12h16'52"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "piccolo_decompose_structured_instructions.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "piccolo_decompose_structured_instructions.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@piccolo_instruction.decomposeComplexInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction> gDispatchTableFor__piccolo_instruction__decomposeComplexInstruction ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction (typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__piccolo_instruction__decomposeComplexInstruction.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction
findCategoryMethod__piccolo_instruction__decomposeComplexInstruction (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__piccolo_instruction__decomposeComplexInstruction.count ()) {
    result = gDispatchTableFor__piccolo_instruction__decomposeComplexInstruction (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__piccolo_instruction__decomposeComplexInstruction (superClassPtr) ;
      gDispatchTableFor__piccolo_instruction__decomposeComplexInstruction.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@pseudo_LABEL.decomposeComplexInstruction'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__pseudo_LABEL__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_pseudo_LABEL * operand_642,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_642 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, operand_642->mTargetLabel COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_FDA.decomposeComplexInstruction'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_FDA__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_FDA * operand_944,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_944 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, operand_944->mInstructionLocation, operand_944->mInstruction_FDA_base_code, operand_944->mRegisterExpression, operand_944->m_W_isDestination COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_FA.decomposeComplexInstruction'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_FA__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_FA * operand_1336,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1336 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FA ::constructor_new (_inLexique, operand_1336->mInstructionLocation, operand_1336->mFAinstruction, operand_1336->mRegisterExpression COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_MOVFF.decomposeComplexInstruction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_MOVFF__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_MOVFF * operand_1695,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1695 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_MOVFF ::constructor_new (_inLexique, operand_1695->mInstructionLocation, operand_1695->mSourceRegisterName, operand_1695->mDestinationRegisterName COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_FBA.decomposeComplexInstruction'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_FBA__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_FBA * operand_2065,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2065 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FBA ::constructor_new (_inLexique, operand_2065->mInstructionLocation, operand_2065->mBitOrientedOp, operand_2065->mRegisterExpression, operand_2065->mBitNumber COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@instruction_conditionalBranch.decomposeComplexInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_conditionalBranch__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_conditionalBranch * operand_2453,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2453 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_conditionalBranch ::constructor_new (_inLexique, operand_2453->mInstructionLocation, operand_2453->mBranchMode, operand_2453->mConditionalBranch, operand_2453->mTargetLabel COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_BRA.decomposeComplexInstruction'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_BRA__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_BRA * operand_2839,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2839 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_BRA ::constructor_new (_inLexique, operand_2839->mInstructionLocation, operand_2839->mTargetLabel COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_CALL.decomposeComplexInstruction'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_CALL__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_CALL * operand_3171,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3171 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_CALL ::constructor_new (_inLexique, operand_3171->mInstructionLocation, operand_3171->mTargetLabel COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_GOTO.decomposeComplexInstruction'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_GOTO__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_GOTO * operand_3504,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3504 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_GOTO ::constructor_new (_inLexique, operand_3504->mInstructionLocation, operand_3504->mTargetLabel COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_RCALL.decomposeComplexInstruction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_RCALL__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_RCALL * operand_3838,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3838 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RCALL ::constructor_new (_inLexique, operand_3838->mInstructionLocation, operand_3838->mTargetLabel COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@instruction_CLRWDT.decomposeComplexInstruction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_CLRWDT__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_CLRWDT * operand_4174,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4174 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_CLRWDT ::constructor_new (_inLexique, operand_4174->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_DAW.decomposeComplexInstruction'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_DAW__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_DAW * operand_4490,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4490 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_DAW ::constructor_new (_inLexique, operand_4490->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_NOP.decomposeComplexInstruction'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_NOP__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_NOP * operand_4803,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4803 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_NOP ::constructor_new (_inLexique, operand_4803->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_POP.decomposeComplexInstruction'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_POP__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_POP * operand_5116,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5116 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_POP ::constructor_new (_inLexique, operand_5116->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_PUSH.decomposeComplexInstruction'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_PUSH__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_PUSH * operand_5430,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5430 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_PUSH ::constructor_new (_inLexique, operand_5430->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_RESET.decomposeComplexInstruction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_RESET__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_RESET * operand_5746,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5746 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RESET ::constructor_new (_inLexique, operand_5746->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@instruction_RETURN.decomposeComplexInstruction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_RETURN__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_RETURN * operand_6064,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6064 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RETURN ::constructor_new (_inLexique, operand_6064->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@instruction_RETFIE.decomposeComplexInstruction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_RETFIE__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_RETFIE * operand_6383,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6383 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RETFIE ::constructor_new (_inLexique, operand_6383->mInstructionLocation, operand_6383->mFastReturn COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_SLEEP.decomposeComplexInstruction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_SLEEP__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_SLEEP * operand_6718,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6718 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_SLEEP ::constructor_new (_inLexique, operand_6718->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@instruction_literalOperation.decomposeComplexInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_literalOperation__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_literalOperation * operand_7046,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7046 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_literalOperation ::constructor_new (_inLexique, operand_7046->mInstructionLocation, operand_7046->mLiteralInstruction, operand_7046->mLiteralValue COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_LFSR.decomposeComplexInstruction'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_LFSR__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_LFSR * operand_7417,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7417 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_LFSR ::constructor_new (_inLexique, operand_7417->mInstructionLocation, operand_7417->mFSRindex, operand_7417->mRegisterExpression COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_MOVLB.decomposeComplexInstruction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_MOVLB__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_MOVLB * operand_7773,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7773 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_MOVLB ::constructor_new (_inLexique, operand_7773->mInstructionLocation, operand_7773->mPageIndex COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_MOVAW.decomposeComplexInstruction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_MOVAW__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_MOVAW * operand_8106,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8106 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_MOVAW ::constructor_new (_inLexique, operand_8106->mInstructionLocation, operand_8106->mRegisterExpression COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_TBLRD.decomposeComplexInstruction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_TBLRD__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_TBLRD * operand_8448,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8448 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_TBLRD ::constructor_new (_inLexique, operand_8448->mInstructionLocation, operand_8448->mOption COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_TBLWT.decomposeComplexInstruction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_TBLWT__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_TBLWT * operand_8778,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8778 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_TBLWT ::constructor_new (_inLexique, operand_8778->mInstructionLocation, operand_8778->mOption COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@instruction_computed_retlw.decomposeComplexInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_computed_retlw__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_computed_retlw * operand_9117,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9117 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_computed_retlw ::constructor_new (_inLexique, operand_9117->mInstructionLocation, operand_9117->mLiteralValues, operand_9117->mUsesRelativeCall COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_MNOP.decomposeComplexInstruction'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_MNOP__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_MNOP * operand_9485,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9485 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_MNOP ::constructor_new (_inLexique, operand_9485->mInstructionLocation, operand_9485->mOccurrenceFactor COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@instruction_computed_bra.decomposeComplexInstruction'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_computed_bra__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_computed_bra * operand_9831,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9831 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_computed_bra ::constructor_new (_inLexique, operand_9831->mInstructionLocation, operand_9831->mTargetLabels, operand_9831->mUsesRelativeCall COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@instruction_computed_goto.decomposeComplexInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_computed_goto__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_computed_goto * operand_10205,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10205 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_computed_goto ::constructor_new (_inLexique, operand_10205->mInstructionLocation, operand_10205->mTargetLabels, operand_10205->mUsesRelativeCall COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@instruction_FOREVER.decomposeComplexInstruction'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_FOREVER__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_FOREVER * operand_10574,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10574 != NULL) {
    GGS_string var_cas_label0 ;
    var_cas_label0 = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (373))) ;
    var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (374)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, operand_10574->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    {
      GGS_instructionList::cEnumerator enumerator_10887 (operand_10574->mInstructionList, true) ;
      const GGS_instructionList::cElement * operand_10887 = NULL ;
      while (((operand_10887 = enumerator_10887.nextObject ()))) {
        macroValidPointer (operand_10887) ;
        const GGS_piccolo_instruction  _temp_10925 = operand_10887->mInstruction ;
        if (_temp_10925._isBuilt ()) {
          typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction _method = findCategoryMethod__piccolo_instruction__decomposeComplexInstruction (_temp_10925._galgasObjectRunTimeInfo ()) ;
          if (_method != NULL) {
            _method (_inLexique, _temp_10925 (HERE), var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (377)) ;
          }
        }
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_BRA ::constructor_new (_inLexique, operand_10574->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, operand_10574->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@instruction_IF_FA_SEMI_COLON.decomposeComplexInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_IF_FA_SEMI_COLON__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_IF_FA_SEMI_COLON * operand_11269,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11269 != NULL) {
    GGS_FA_instruction_base_code var_cas_baseCode ;
    switch (operand_11269->mOpCode.enumValue ()) {
    case GGS_if_semi_colon_op::enum_CPFSEQ:
      {
      var_cas_baseCode = GGS_FA_instruction_base_code::constructor_CPFSEQ (_inLexique COMMA_HERE) ;
      }
      break ;
    case GGS_if_semi_colon_op::enum_CPFSGT:
      {
      var_cas_baseCode = GGS_FA_instruction_base_code::constructor_CPFSGT (_inLexique COMMA_HERE) ;
      }
      break ;
    case GGS_if_semi_colon_op::enum_CPFSLT:
      {
      var_cas_baseCode = GGS_FA_instruction_base_code::constructor_CPFSLT (_inLexique COMMA_HERE) ;
      }
      break ;
    case GGS_if_semi_colon_op::enum_TSTFSZ:
      {
      var_cas_baseCode = GGS_FA_instruction_base_code::constructor_TSTFSZ (_inLexique COMMA_HERE) ;
      }
      break ;
    case GGS_if_semi_colon_op::kNotBuilt:
      break ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FA ::constructor_new (_inLexique, operand_11269->mInstructionLocation, var_cas_baseCode, operand_11269->mRegisterExpression COMMA_HERE)) ;
    const GGS_piccolo_instruction  _temp_11888 = operand_11269->mInstruction ;
    if (_temp_11888._isBuilt ()) {
      typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction _method = findCategoryMethod__piccolo_instruction__decomposeComplexInstruction (_temp_11888._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_11888 (HERE), var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (401)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@instruction_IF_BitTest.decomposeComplexInstruction'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_IF_BitTest__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_IF_BitTest * operand_12079,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12079 != NULL) {
    GGS_bit_oriented_op var_cas_baseCode ;
    if ((operand_12079->mSkipIfSet).isBuiltAndTrue ()) {
      var_cas_baseCode = GGS_bit_oriented_op::constructor_BTFSS (_inLexique COMMA_HERE) ;
    }else{
      var_cas_baseCode = GGS_bit_oriented_op::constructor_BTFSC (_inLexique COMMA_HERE) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FBA ::constructor_new (_inLexique, operand_12079->mInstructionLocation, var_cas_baseCode, operand_12079->mRegisterExpression, operand_12079->mBitNumber COMMA_HERE)) ;
    const GGS_piccolo_instruction  _temp_12531 = operand_12079->mInstruction ;
    if (_temp_12531._isBuilt ()) {
      typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction _method = findCategoryMethod__piccolo_instruction__decomposeComplexInstruction (_temp_12531._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_12531 (HERE), var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (423)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@conditionExpression.decomposeIFcondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__conditionExpression__decomposeIFcondition> gDispatchTableFor__conditionExpression__decomposeIFcondition ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__conditionExpression__decomposeIFcondition (typeCategoryMethod__conditionExpression__decomposeIFcondition inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__conditionExpression__decomposeIFcondition.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__conditionExpression__decomposeIFcondition
findCategoryMethod__conditionExpression__decomposeIFcondition (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__conditionExpression__decomposeIFcondition result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__conditionExpression__decomposeIFcondition.count ()) {
    result = gDispatchTableFor__conditionExpression__decomposeIFcondition (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__conditionExpression__decomposeIFcondition (superClassPtr) ;
      gDispatchTableFor__conditionExpression__decomposeIFcondition.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@bcc_in_structured_if_condition.decomposeIFcondition'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__bcc_in_structured_if_condition__decomposeIFcondition (C_Compiler & _inLexique,
                                const cPtr_bcc_in_structured_if_condition * operand_12994,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12994 != NULL) {
    GGS_conditional_branch var_cas_condition ;
    if ((var_cas_inComplementaryBranch).isBuiltAndTrue ()) {
      ::routine_getComplementaryBcc (_inLexique,  operand_12994->mCondition,  var_cas_condition COMMA_SOURCE_FILE_AT_LINE (444)) ;
    }else{
      var_cas_condition = operand_12994->mCondition ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_conditionalBranch ::constructor_new (_inLexique, var_cas_inInstructionLocation, GGS_condionalBranchMode::constructor_native (_inLexique COMMA_HERE), var_cas_condition, GGS_lstring ::constructor_new (_inLexique, var_cas_inTargetLabel, var_cas_inInstructionLocation COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@bitTest_in_structured_if_condition.decomposeIFcondition' *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__bitTest_in_structured_if_condition__decomposeIFcondition (C_Compiler & _inLexique,
                                const cPtr_bitTest_in_structured_if_condition * operand_13664,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13664 != NULL) {
    GGS_bit_oriented_op var_cas_op ;
    if (((operand_13664->mBTFSSinstruction)._operator_xor (var_cas_inComplementaryBranch)).isBuiltAndTrue ()) {
      var_cas_op = GGS_bit_oriented_op::constructor_BTFSS (_inLexique COMMA_HERE) ;
    }else{
      var_cas_op = GGS_bit_oriented_op::constructor_BTFSC (_inLexique COMMA_HERE) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FBA ::constructor_new (_inLexique, var_cas_inInstructionLocation, var_cas_op, operand_13664->mRegisterExpression, operand_13664->mBitNumber COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_BRA ::constructor_new (_inLexique, var_cas_inInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_inTargetLabel, var_cas_inInstructionLocation COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@instruction_structured_if.decomposeComplexInstruction'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_structured_if__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_structured_if * operand_14397,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_14397 != NULL) {
    GGS_string var_cas_label0 ;
    var_cas_label0 = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (487))) ;
    var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (487)) ;
    GGS_string var_cas_label1 ;
    var_cas_label1 = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (488))) ;
    var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (488)) ;
    const GGS_conditionExpression  _temp_14721 = operand_14397->mIfCondition ;
    if (_temp_14721._isBuilt ()) {
      typeCategoryMethod__conditionExpression__decomposeIFcondition _method = findCategoryMethod__conditionExpression__decomposeIFcondition (_temp_14721._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_14721 (HERE), GGS_bool (true, true), operand_14397->mInstructionLocation, var_cas_label0, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (490)) ;
      }
    }
    {
      GGS_instructionList::cEnumerator enumerator_14845 (operand_14397->mThenInstructionList, true) ;
      const GGS_instructionList::cElement * operand_14845 = NULL ;
      while (((operand_14845 = enumerator_14845.nextObject ()))) {
        macroValidPointer (operand_14845) ;
        const GGS_piccolo_instruction  _temp_14887 = operand_14845->mInstruction ;
        if (_temp_14887._isBuilt ()) {
          typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction _method = findCategoryMethod__piccolo_instruction__decomposeComplexInstruction (_temp_14887._galgasObjectRunTimeInfo ()) ;
          if (_method != NULL) {
            _method (_inLexique, _temp_14887 (HERE), var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (493)) ;
          }
        }
      }
    }
    if (((operand_14397->mElseInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (495)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_BRA ::constructor_new (_inLexique, operand_14397->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_label1, operand_14397->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, operand_14397->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    {
      GGS_instructionList::cEnumerator enumerator_15312 (operand_14397->mElseInstructionList, true) ;
      const GGS_instructionList::cElement * operand_15312 = NULL ;
      while (((operand_15312 = enumerator_15312.nextObject ()))) {
        macroValidPointer (operand_15312) ;
        const GGS_piccolo_instruction  _temp_15354 = operand_15312->mInstruction ;
        if (_temp_15354._isBuilt ()) {
          typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction _method = findCategoryMethod__piccolo_instruction__decomposeComplexInstruction (_temp_15354._galgasObjectRunTimeInfo ()) ;
          if (_method != NULL) {
            _method (_inLexique, _temp_15354 (HERE), var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (501)) ;
          }
        }
      }
    }
    if (((operand_14397->mElseInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (503)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label1, operand_14397->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@instruction_do_while.decomposeComplexInstruction'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_do_while__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_do_while * operand_15722,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_15722 != NULL) {
    GGS_string var_cas_label0 ;
    var_cas_label0 = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (516))) ;
    var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (516)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, operand_15722->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    {
      GGS_instructionList::cEnumerator enumerator_16102 (operand_15722->mRepeatedInstructionList, true) ;
      const GGS_instructionList::cElement * operand_16102 = NULL ;
      while (((operand_16102 = enumerator_16102.nextObject ()))) {
        macroValidPointer (operand_16102) ;
        const GGS_piccolo_instruction  _temp_16148 = operand_16102->mInstruction ;
        if (_temp_16148._isBuilt ()) {
          typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction _method = findCategoryMethod__piccolo_instruction__decomposeComplexInstruction (_temp_16148._galgasObjectRunTimeInfo ()) ;
          if (_method != NULL) {
            _method (_inLexique, _temp_16148 (HERE), var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (521)) ;
          }
        }
      }
    }
    const GGS_conditionExpression  _temp_16288 = operand_15722->mWhileCondition ;
    if (_temp_16288._isBuilt ()) {
      typeCategoryMethod__conditionExpression__decomposeIFcondition _method = findCategoryMethod__conditionExpression__decomposeIFcondition (_temp_16288._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_16288 (HERE), GGS_bool (true, false), operand_15722->mInstructionLocation, var_cas_label0, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (524)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@instruction_IF_IncDec.decomposeComplexInstruction'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_IF_IncDec__decomposeComplexInstruction (C_Compiler & _inLexique,
                                const cPtr_instruction_IF_IncDec * operand_16488,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16488 != NULL) {
    GGS_instruction_FDA_base_code var_cas_baseCode ;
    if (((operand_16488->mIncrement)._operator_and (operand_16488->mSkipIfZero)).isBuiltAndTrue ()) {
      var_cas_baseCode = GGS_instruction_FDA_base_code::constructor_INCFSZ (_inLexique COMMA_HERE) ;
    }else if (((operand_16488->mIncrement)._operator_and ((operand_16488->mSkipIfZero)._operator_not ())).isBuiltAndTrue ()) {
      var_cas_baseCode = GGS_instruction_FDA_base_code::constructor_INFSNZ (_inLexique COMMA_HERE) ;
    }else if ((((operand_16488->mIncrement)._operator_not ())._operator_and (operand_16488->mSkipIfZero)).isBuiltAndTrue ()) {
      var_cas_baseCode = GGS_instruction_FDA_base_code::constructor_DECFSZ (_inLexique COMMA_HERE) ;
    }else{
      var_cas_baseCode = GGS_instruction_FDA_base_code::constructor_DCFSNZ (_inLexique COMMA_HERE) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, operand_16488->mInstructionLocation, var_cas_baseCode, operand_16488->mRegisterExpression, operand_16488->m_W_isDestination COMMA_HERE)) ;
    const GGS_piccolo_instruction  _temp_17200 = operand_16488->mInstruction ;
    if (_temp_17200._isBuilt ()) {
      typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction _method = findCategoryMethod__piccolo_instruction__decomposeComplexInstruction (_temp_17200._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_17200 (HERE), var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (552)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "buildAssemblyInstructionList"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildAssemblyInstructionList (C_Compiler & _inLexique,
                                const GGS_piccoloModel  var_cas_inPiccoloModel,
                                const GGS_bool  var_cas_inHasHighInterrupt,
                                const GGS_bool  var_cas_inHasLowInterrupt,
                                GGS_ipic_instructionList  & var_cas_outGeneratedInstructionList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_buildAssemblyInstructionList at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outGeneratedInstructionList = GGS_ipic_instructionList ::constructor_emptyList () ;
  GGS_uint  var_cas_localLabelIndex ;
  var_cas_localLabelIndex = GGS_uint (true, 0U) ;
  var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_GOTO ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "main"), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE)) ;
  if (((var_cas_inHasLowInterrupt)._operator_and (var_cas_inHasHighInterrupt)).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_ORG ::constructor_new (_inLexique, GGS_uint (true, 8U) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_BRA ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "_fast_interrupt"), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE)) ;
  }
  if ((var_cas_inHasLowInterrupt).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_ORG ::constructor_new (_inLexique, GGS_uint (true, 24U) COMMA_HERE)) ;
    {
      GGS_interruptDefinitionList::cEnumerator enumerator_18301 (var_cas_inPiccoloModel.reader_mInterruptDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (576)), true) ;
      const GGS_interruptDefinitionList::cElement * operand_18301 = NULL ;
      while (((operand_18301 = enumerator_18301.nextObject ()))) {
        macroValidPointer (operand_18301) ;
        if (((operand_18301->mInterruptName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (577)))._operator_isEqual (GGS_string (true, "low"))).isBuiltAndTrue ()) {
          {
            GGS_instructionList::cEnumerator enumerator_18409 (operand_18301->mInstructionList, true) ;
            const GGS_instructionList::cElement * operand_18409 = NULL ;
            while (((operand_18409 = enumerator_18409.nextObject ()))) {
              macroValidPointer (operand_18409) ;
              const GGS_piccolo_instruction  _temp_18453 = operand_18409->mInstruction ;
              if (_temp_18453._isBuilt ()) {
                typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction _method = findCategoryMethod__piccolo_instruction__decomposeComplexInstruction (_temp_18453._galgasObjectRunTimeInfo ()) ;
                if (_method != NULL) {
                  _method (_inLexique, _temp_18453 (HERE), var_cas_localLabelIndex, var_cas_outGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (579)) ;
                }
              }
            }
          }
          var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RETFIE ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_bool (true, true) COMMA_HERE)) ;
        }
      }
    }
  }
  if ((var_cas_inHasHighInterrupt).isBuiltAndTrue ()) {
    if ((var_cas_inHasLowInterrupt).isBuiltAndTrue ()) {
      var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "_fast_interrupt"), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE)) ;
    }else{
      var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_ORG ::constructor_new (_inLexique, GGS_uint (true, 8U) COMMA_HERE)) ;
    }
    {
      GGS_interruptDefinitionList::cEnumerator enumerator_19033 (var_cas_inPiccoloModel.reader_mInterruptDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (593)), true) ;
      const GGS_interruptDefinitionList::cElement * operand_19033 = NULL ;
      while (((operand_19033 = enumerator_19033.nextObject ()))) {
        macroValidPointer (operand_19033) ;
        if (((operand_19033->mInterruptName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (594)))._operator_isEqual (GGS_string (true, "high"))).isBuiltAndTrue ()) {
          {
            GGS_instructionList::cEnumerator enumerator_19142 (operand_19033->mInstructionList, true) ;
            const GGS_instructionList::cElement * operand_19142 = NULL ;
            while (((operand_19142 = enumerator_19142.nextObject ()))) {
              macroValidPointer (operand_19142) ;
              const GGS_piccolo_instruction  _temp_19186 = operand_19142->mInstruction ;
              if (_temp_19186._isBuilt ()) {
                typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction _method = findCategoryMethod__piccolo_instruction__decomposeComplexInstruction (_temp_19186._galgasObjectRunTimeInfo ()) ;
                if (_method != NULL) {
                  _method (_inLexique, _temp_19186 (HERE), var_cas_localLabelIndex, var_cas_outGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (596)) ;
                }
              }
            }
          }
          var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RETFIE ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_bool (true, true) COMMA_HERE)) ;
        }
      }
    }
  }
  {
    GGS_routineDefinitionList::cEnumerator enumerator_19487 (var_cas_inPiccoloModel.reader_mRoutineDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (604)), true) ;
    const GGS_routineDefinitionList::cElement * operand_19487 = NULL ;
    while (((operand_19487 = enumerator_19487.nextObject ()))) {
      macroValidPointer (operand_19487) ;
      var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, operand_19487->mRoutineName COMMA_HERE)) ;
      {
        GGS_instructionList::cEnumerator enumerator_19619 (operand_19487->mInstructionList, true) ;
        const GGS_instructionList::cElement * operand_19619 = NULL ;
        while (((operand_19619 = enumerator_19619.nextObject ()))) {
          macroValidPointer (operand_19619) ;
          const GGS_piccolo_instruction  _temp_19659 = operand_19619->mInstruction ;
          if (_temp_19659._isBuilt ()) {
            typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction _method = findCategoryMethod__piccolo_instruction__decomposeComplexInstruction (_temp_19659._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_19659 (HERE), var_cas_localLabelIndex, var_cas_outGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (607)) ;
            }
          }
        }
      }
    }
  }
  if ((var_cas_inPiccoloModel.reader_mNeedsComputedGoto4 (_inLexique COMMA_SOURCE_FILE_AT_LINE (611))).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "_computed_goto_4"), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_instruction_FDA_base_code::constructor_ADDWF (_inLexique COMMA_HERE), GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "WREG"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE), GGS_bool (true, true) COMMA_HERE)) ;
  }
  if ((var_cas_inPiccoloModel.reader_mNeedsComputedGoto2 (_inLexique COMMA_SOURCE_FILE_AT_LINE (620))).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "_computed_goto_2"), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE)) ;
  }
  if (((var_cas_inPiccoloModel.reader_mNeedsComputedGoto2 (_inLexique COMMA_SOURCE_FILE_AT_LINE (623)))._operator_or (var_cas_inPiccoloModel.reader_mNeedsComputedGoto4 (_inLexique COMMA_SOURCE_FILE_AT_LINE (623)))).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_instruction_FDA_base_code::constructor_ADDWF (_inLexique COMMA_HERE), GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "WREG"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE), GGS_bool (true, true) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_instruction_FDA_base_code::constructor_ADDWF (_inLexique COMMA_HERE), GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "TOSL"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE), GGS_bool (true, false) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_literalOperation ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_literal_instruction_opcode::constructor_MOVLW (_inLexique COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_instruction_FDA_base_code::constructor_ADDWFC (_inLexique COMMA_HERE), GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "TOSH"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE), GGS_bool (true, false) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RETURN ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_buildAssemblyInstructionList\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_piccolo_decompose_structured_instructions (void) {
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__pseudo_LABEL__decomposeComplexInstruction, gClassInfoFor__pseudo_LABEL.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_FDA__decomposeComplexInstruction, gClassInfoFor__instruction_FDA.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_FA__decomposeComplexInstruction, gClassInfoFor__instruction_FA.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_MOVFF__decomposeComplexInstruction, gClassInfoFor__instruction_MOVFF.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_FBA__decomposeComplexInstruction, gClassInfoFor__instruction_FBA.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_conditionalBranch__decomposeComplexInstruction, gClassInfoFor__instruction_conditionalBranch.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_BRA__decomposeComplexInstruction, gClassInfoFor__instruction_BRA.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_CALL__decomposeComplexInstruction, gClassInfoFor__instruction_CALL.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_GOTO__decomposeComplexInstruction, gClassInfoFor__instruction_GOTO.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_RCALL__decomposeComplexInstruction, gClassInfoFor__instruction_RCALL.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_CLRWDT__decomposeComplexInstruction, gClassInfoFor__instruction_CLRWDT.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_DAW__decomposeComplexInstruction, gClassInfoFor__instruction_DAW.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_NOP__decomposeComplexInstruction, gClassInfoFor__instruction_NOP.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_POP__decomposeComplexInstruction, gClassInfoFor__instruction_POP.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_PUSH__decomposeComplexInstruction, gClassInfoFor__instruction_PUSH.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_RESET__decomposeComplexInstruction, gClassInfoFor__instruction_RESET.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_RETURN__decomposeComplexInstruction, gClassInfoFor__instruction_RETURN.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_RETFIE__decomposeComplexInstruction, gClassInfoFor__instruction_RETFIE.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_SLEEP__decomposeComplexInstruction, gClassInfoFor__instruction_SLEEP.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_literalOperation__decomposeComplexInstruction, gClassInfoFor__instruction_literalOperation.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_LFSR__decomposeComplexInstruction, gClassInfoFor__instruction_LFSR.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_MOVLB__decomposeComplexInstruction, gClassInfoFor__instruction_MOVLB.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_MOVAW__decomposeComplexInstruction, gClassInfoFor__instruction_MOVAW.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_TBLRD__decomposeComplexInstruction, gClassInfoFor__instruction_TBLRD.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_TBLWT__decomposeComplexInstruction, gClassInfoFor__instruction_TBLWT.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_computed_retlw__decomposeComplexInstruction, gClassInfoFor__instruction_computed_retlw.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_MNOP__decomposeComplexInstruction, gClassInfoFor__instruction_MNOP.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_computed_bra__decomposeComplexInstruction, gClassInfoFor__instruction_computed_bra.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_computed_goto__decomposeComplexInstruction, gClassInfoFor__instruction_computed_goto.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_FOREVER__decomposeComplexInstruction, gClassInfoFor__instruction_FOREVER.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_IF_FA_SEMI_COLON__decomposeComplexInstruction, gClassInfoFor__instruction_IF_FA_SEMI_COLON.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_IF_BitTest__decomposeComplexInstruction, gClassInfoFor__instruction_IF_BitTest.slotID ()) ;
 enterCategoryMethod__conditionExpression__decomposeIFcondition ((typeCategoryMethod__conditionExpression__decomposeIFcondition) category_method__bcc_in_structured_if_condition__decomposeIFcondition, gClassInfoFor__bcc_in_structured_if_condition.slotID ()) ;
 enterCategoryMethod__conditionExpression__decomposeIFcondition ((typeCategoryMethod__conditionExpression__decomposeIFcondition) category_method__bitTest_in_structured_if_condition__decomposeIFcondition, gClassInfoFor__bitTest_in_structured_if_condition.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_structured_if__decomposeComplexInstruction, gClassInfoFor__instruction_structured_if.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_do_while__decomposeComplexInstruction, gClassInfoFor__instruction_do_while.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__decomposeComplexInstruction ((typeCategoryMethod__piccolo_instruction__decomposeComplexInstruction) category_method__instruction_IF_IncDec__decomposeComplexInstruction, gClassInfoFor__instruction_IF_IncDec.slotID ()) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogueAction prologueEpilogueObjectFor_piccolo_decompose_structured_instructions (prologueRoutineFor_piccolo_decompose_structured_instructions,
                                   NULL) ;

//---------------------------------------------------------------------------*

