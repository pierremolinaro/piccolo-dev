//---------------------------------------------------------------------------*
//                                                                           *
//           File 'piccolo_decompose_structured_instructions.cpp'            *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      july 26th, 2008, at 15h24'15"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "piccolo_decompose_structured_instructions.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "piccolo_decompose_structured_instructions.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@piccolo_instruction.buildIPICinstructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__piccolo_instruction__buildIPICinstructionList> gDispatchTableFor__piccolo_instruction__buildIPICinstructionList ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__piccolo_instruction__buildIPICinstructionList (typeCategoryMethod__piccolo_instruction__buildIPICinstructionList inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__piccolo_instruction__buildIPICinstructionList.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__piccolo_instruction__buildIPICinstructionList
findCategoryMethod__piccolo_instruction__buildIPICinstructionList (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__piccolo_instruction__buildIPICinstructionList result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__piccolo_instruction__buildIPICinstructionList.count ()) {
    result = gDispatchTableFor__piccolo_instruction__buildIPICinstructionList (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (superClassPtr) ;
      gDispatchTableFor__piccolo_instruction__buildIPICinstructionList.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@pseudo_LABEL.buildIPICinstructionList'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__pseudo_LABEL__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_pseudo_LABEL * operand_639,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_639 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, operand_639->mTargetLabel COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_FDA.buildIPICinstructionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_FDA__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_FDA * operand_938,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_938 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, operand_938->mInstructionLocation, operand_938->mInstruction_FDA_base_code, operand_938->mRegisterExpression, operand_938->m_W_isDestination COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@instruction_FA.buildIPICinstructionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_FA__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_FA * operand_1327,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1327 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FA ::constructor_new (_inLexique, operand_1327->mInstructionLocation, operand_1327->mFAinstruction, operand_1327->mRegisterExpression COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_MOVFF.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_MOVFF__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_MOVFF * operand_1683,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1683 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_MOVFF ::constructor_new (_inLexique, operand_1683->mInstructionLocation, operand_1683->mSourceRegisterName, operand_1683->mDestinationRegisterName COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_FBA.buildIPICinstructionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_FBA__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_FBA * operand_2050,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2050 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FBA ::constructor_new (_inLexique, operand_2050->mInstructionLocation, operand_2050->mBitOrientedOp, operand_2050->mRegisterExpression, operand_2050->mBitNumber COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@instruction_conditionalBranch.buildIPICinstructionList'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_conditionalBranch__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_conditionalBranch * operand_2435,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2435 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_conditionalBranch ::constructor_new (_inLexique, operand_2435->mInstructionLocation, operand_2435->mBranchMode, operand_2435->mConditionalBranch, operand_2435->mTargetLabel COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_BRA.buildIPICinstructionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_BRA__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_BRA * operand_2818,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2818 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_BRA ::constructor_new (_inLexique, operand_2818->mInstructionLocation, operand_2818->mTargetLabel COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_CALL.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_CALL__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_CALL * operand_3147,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3147 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_CALL ::constructor_new (_inLexique, operand_3147->mInstructionLocation, operand_3147->mTargetLabel COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_GOTO.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_GOTO__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_GOTO * operand_3477,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3477 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_GOTO ::constructor_new (_inLexique, operand_3477->mInstructionLocation, operand_3477->mTargetLabel COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_RCALL.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_RCALL__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_RCALL * operand_3808,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3808 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RCALL ::constructor_new (_inLexique, operand_3808->mInstructionLocation, operand_3808->mTargetLabel COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_CLRWDT.buildIPICinstructionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_CLRWDT__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_CLRWDT * operand_4141,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4141 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_CLRWDT ::constructor_new (_inLexique, operand_4141->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_DAW.buildIPICinstructionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_DAW__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_DAW * operand_4454,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4454 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_DAW ::constructor_new (_inLexique, operand_4454->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_NOP.buildIPICinstructionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_NOP__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_NOP * operand_4764,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4764 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_NOP ::constructor_new (_inLexique, operand_4764->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_POP.buildIPICinstructionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_POP__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_POP * operand_5074,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5074 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_POP ::constructor_new (_inLexique, operand_5074->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_PUSH.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_PUSH__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_PUSH * operand_5385,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5385 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_PUSH ::constructor_new (_inLexique, operand_5385->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_RESET.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_RESET__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_RESET * operand_5698,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5698 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RESET ::constructor_new (_inLexique, operand_5698->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_RETURN.buildIPICinstructionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_RETURN__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_RETURN * operand_6013,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6013 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RETURN ::constructor_new (_inLexique, operand_6013->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_RETFIE.buildIPICinstructionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_RETFIE__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_RETFIE * operand_6329,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6329 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RETFIE ::constructor_new (_inLexique, operand_6329->mInstructionLocation, operand_6329->mFastReturn COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_SLEEP.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_SLEEP__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_SLEEP * operand_6661,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6661 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_SLEEP ::constructor_new (_inLexique, operand_6661->mInstructionLocation COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@instruction_literalOperation.buildIPICinstructionList'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_literalOperation__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_literalOperation * operand_6986,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6986 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_literalOperation ::constructor_new (_inLexique, operand_6986->mInstructionLocation, operand_6986->mLiteralInstruction, operand_6986->mLiteralValue COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_LFSR.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_LFSR__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_LFSR * operand_7354,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7354 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_LFSR ::constructor_new (_inLexique, operand_7354->mInstructionLocation, operand_7354->mFSRindex, operand_7354->mRegisterExpression COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_MOVLB.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_MOVLB__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_MOVLB * operand_7707,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7707 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_MOVLB ::constructor_new (_inLexique, operand_7707->mInstructionLocation, operand_7707->mPageIndex COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_MOVAW.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_MOVAW__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_MOVAW * operand_8037,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8037 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_MOVAW ::constructor_new (_inLexique, operand_8037->mInstructionLocation, operand_8037->mRegisterExpression COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_TBLRD.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_TBLRD__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_TBLRD * operand_8376,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8376 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_TBLRD ::constructor_new (_inLexique, operand_8376->mInstructionLocation, operand_8376->mOption COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@instruction_TBLWT.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_TBLWT__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_TBLWT * operand_8703,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8703 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_TBLWT ::constructor_new (_inLexique, operand_8703->mInstructionLocation, operand_8703->mOption COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@instruction_computed_retlw.buildIPICinstructionList'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_computed_retlw__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_computed_retlw * operand_9039,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9039 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_computed_retlw ::constructor_new (_inLexique, operand_9039->mInstructionLocation, operand_9039->mLiteralValues, operand_9039->mUsesRelativeCall COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@instruction_MNOP.buildIPICinstructionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_MNOP__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_MNOP * operand_9404,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9404 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_MNOP ::constructor_new (_inLexique, operand_9404->mInstructionLocation, operand_9404->mOccurrenceFactor COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@instruction_computed_bra.buildIPICinstructionList'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_computed_bra__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_computed_bra * operand_9747,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9747 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_computed_bra ::constructor_new (_inLexique, operand_9747->mInstructionLocation, operand_9747->mTargetLabels, operand_9747->mUsesRelativeCall COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@instruction_computed_goto.buildIPICinstructionList'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_computed_goto__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_computed_goto * operand_10118,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10118 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_computed_goto ::constructor_new (_inLexique, operand_10118->mInstructionLocation, operand_10118->mTargetLabels, operand_10118->mUsesRelativeCall COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_FOREVER.buildIPICinstructionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_FOREVER__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_FOREVER * operand_10484,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10484 != NULL) {
    GGS_string var_cas_label0 ;
    var_cas_label0 = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (373))) ;
    var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (374)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, operand_10484->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    {
      GGS_instructionList::cEnumerator enumerator_10794 (operand_10484->mInstructionList, true) ;
      const GGS_instructionList::cElement * operand_10794 = NULL ;
      while (((operand_10794 = enumerator_10794.nextObject ()))) {
        macroValidPointer (operand_10794) ;
        const GGS_piccolo_instruction  _temp_10832 = operand_10794->mInstruction ;
        if (_temp_10832._isBuilt ()) {
          typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_10832._galgasObjectRunTimeInfo ()) ;
          if (_method != NULL) {
            _method (_inLexique, _temp_10832 (HERE), var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (377)) ;
          }
        }
      }
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_BRA ::constructor_new (_inLexique, operand_10484->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, operand_10484->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@instruction_IF_FA_SEMI_COLON.buildIPICinstructionList'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_IF_FA_SEMI_COLON__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_IF_FA_SEMI_COLON * operand_11173,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11173 != NULL) {
    GGS_FA_instruction_base_code var_cas_baseCode ;
    switch (operand_11173->mOpCode.enumValue ()) {
    case GGS_if_semi_colon_op::enum_CPFSEQ:
      {
      var_cas_baseCode = GGS_FA_instruction_base_code::constructor_CPFSEQ (_inLexique COMMA_HERE) ;
      }
      break ;
    case GGS_if_semi_colon_op::enum_CPFSGT:
      {
      var_cas_baseCode = GGS_FA_instruction_base_code::constructor_CPFSGT (_inLexique COMMA_HERE) ;
      }
      break ;
    case GGS_if_semi_colon_op::enum_CPFSLT:
      {
      var_cas_baseCode = GGS_FA_instruction_base_code::constructor_CPFSLT (_inLexique COMMA_HERE) ;
      }
      break ;
    case GGS_if_semi_colon_op::enum_TSTFSZ:
      {
      var_cas_baseCode = GGS_FA_instruction_base_code::constructor_TSTFSZ (_inLexique COMMA_HERE) ;
      }
      break ;
    case GGS_if_semi_colon_op::kNotBuilt:
      break ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FA ::constructor_new (_inLexique, operand_11173->mInstructionLocation, var_cas_baseCode, operand_11173->mRegisterExpression COMMA_HERE)) ;
    const GGS_piccolo_instruction  _temp_11789 = operand_11173->mInstruction ;
    if (_temp_11789._isBuilt ()) {
      typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_11789._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_11789 (HERE), var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (401)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@instruction_IF_BitTest.buildIPICinstructionList'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_IF_BitTest__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_IF_BitTest * operand_11977,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11977 != NULL) {
    GGS_bit_oriented_op var_cas_baseCode ;
    if ((operand_11977->mSkipIfSet).isBuiltAndTrue ()) {
      var_cas_baseCode = GGS_bit_oriented_op::constructor_BTFSS (_inLexique COMMA_HERE) ;
    }else{
      var_cas_baseCode = GGS_bit_oriented_op::constructor_BTFSC (_inLexique COMMA_HERE) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FBA ::constructor_new (_inLexique, operand_11977->mInstructionLocation, var_cas_baseCode, operand_11977->mRegisterExpression, operand_11977->mBitNumber COMMA_HERE)) ;
    const GGS_piccolo_instruction  _temp_12426 = operand_11977->mInstruction ;
    if (_temp_12426._isBuilt ()) {
      typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_12426._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_12426 (HERE), var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (423)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@conditionExpression.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition> gDispatchTableFor__conditionExpression__buildIPICinstructionForCondition ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition (typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition inRoutine,
                     const sint32 inClassID) {
  gDispatchTableFor__conditionExpression__buildIPICinstructionForCondition.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition
findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableFor__conditionExpression__buildIPICinstructionForCondition.count ()) {
    result = gDispatchTableFor__conditionExpression__buildIPICinstructionForCondition (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (superClassPtr) ;
      gDispatchTableFor__conditionExpression__buildIPICinstructionForCondition.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@bcc_in_structured_if_condition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__bcc_in_structured_if_condition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_bcc_in_structured_if_condition * operand_12926,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12926 != NULL) {
    GGS_conditional_branch var_cas_condition ;
    if ((var_cas_inComplementaryBranch).isBuiltAndTrue ()) {
      ::routine_getComplementaryBcc (_inLexique,  operand_12926->mCondition,  var_cas_condition COMMA_SOURCE_FILE_AT_LINE (446)) ;
    }else{
      var_cas_condition = operand_12926->mCondition ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_conditionalBranch ::constructor_new (_inLexique, var_cas_inInstructionLocation, GGS_condionalBranchMode::constructor_native (_inLexique COMMA_HERE), var_cas_condition, GGS_lstring ::constructor_new (_inLexique, var_cas_inTargetLabel, var_cas_inInstructionLocation COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@registerComparisonCondition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__registerComparisonCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_registerComparisonCondition * operand_13636,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13636 != NULL) {
    GGS_registerComparison var_cas_comparison ;
    if ((var_cas_inComplementaryBranch).isBuiltAndTrue ()) {
      ::routine_getRegisterComparisonComplementary (_inLexique,  operand_13636->mComparison,  var_cas_comparison COMMA_SOURCE_FILE_AT_LINE (469)) ;
    }else{
      var_cas_comparison = operand_13636->mComparison ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_registerComparisonCondition ::constructor_new (_inLexique, var_cas_inInstructionLocation, operand_13636->mRegisterExpression, var_cas_inTargetLabel, var_cas_comparison, GGS_bool (true, true) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@incDecRegisterInCondition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__incDecRegisterInCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_incDecRegisterInCondition * operand_14347,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_14347 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_incDecRegisterInCondition ::constructor_new (_inLexique, var_cas_inInstructionLocation, operand_14347->mRegisterExpression, var_cas_inTargetLabel, operand_14347->mIncrement, operand_14347->m_W_isDestination, (operand_14347->mBranchIfZero)._operator_xor (var_cas_inComplementaryBranch), GGS_bool (true, true) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@registerTestCondition.buildIPICinstructionForCondition'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__registerTestCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_registerTestCondition * operand_14935,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_14935 != NULL) {
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_jump_test_register ::constructor_new (_inLexique, var_cas_inInstructionLocation, operand_14935->mRegisterExpression, var_cas_inTargetLabel, (operand_14935->mBranchIfZero)._operator_xor (var_cas_inComplementaryBranch), GGS_bool (true, true) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@negateCondition.buildIPICinstructionForCondition'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__negateCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_negateCondition * operand_15471,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_15471 != NULL) {
    const GGS_conditionExpression  _temp_15694 = operand_15471->mCondition ;
    if (_temp_15694._isBuilt ()) {
      typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_15694._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_15694 (HERE), var_cas_ioLocalLabelIndex, (var_cas_inComplementaryBranch)._operator_not (), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (530)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@andCondition.buildIPICinstructionForCondition'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__andCondition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_andCondition * operand_15968,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_15968 != NULL) {
    if ((var_cas_inComplementaryBranch).isBuiltAndTrue ()) {
      const GGS_conditionExpression  _temp_16230 = operand_15968->mLeftExpression ;
      if (_temp_16230._isBuilt ()) {
        typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_16230._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_16230 (HERE), var_cas_ioLocalLabelIndex, GGS_bool (true, true), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (549)) ;
        }
      }
      const GGS_conditionExpression  _temp_16416 = operand_15968->mRightExpression ;
      if (_temp_16416._isBuilt ()) {
        typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_16416._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_16416 (HERE), var_cas_ioLocalLabelIndex, GGS_bool (true, true), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (556)) ;
        }
      }
    }else{
      GGS_string var_cas_label0 ;
      var_cas_label0 = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (564))) ;
      var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (564)) ;
      const GGS_conditionExpression  _temp_16694 = operand_15968->mLeftExpression ;
      if (_temp_16694._isBuilt ()) {
        typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_16694._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_16694 (HERE), var_cas_ioLocalLabelIndex, GGS_bool (true, true), var_cas_inInstructionLocation, var_cas_label0, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (565)) ;
        }
      }
      const GGS_conditionExpression  _temp_16873 = operand_15968->mRightExpression ;
      if (_temp_16873._isBuilt ()) {
        typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_16873._galgasObjectRunTimeInfo ()) ;
        if (_method != NULL) {
          _method (_inLexique, _temp_16873 (HERE), var_cas_ioLocalLabelIndex, GGS_bool (true, false), var_cas_inInstructionLocation, var_cas_inTargetLabel, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (572)) ;
        }
      }
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, var_cas_inInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@bitTest_in_structured_if_condition.buildIPICinstructionForCondition'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__bitTest_in_structured_if_condition__buildIPICinstructionForCondition (C_Compiler & _inLexique,
                                const cPtr_bitTest_in_structured_if_condition * operand_17281,
                                GGS_uint  & /* var_cas_ioLocalLabelIndex */,
                                const GGS_bool  var_cas_inComplementaryBranch,
                                const GGS_location   var_cas_inInstructionLocation,
                                const GGS_string  var_cas_inTargetLabel,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17281 != NULL) {
    GGS_bit_oriented_op var_cas_op ;
    if (((operand_17281->mBTFSSinstruction)._operator_xor (var_cas_inComplementaryBranch)).isBuiltAndTrue ()) {
      var_cas_op = GGS_bit_oriented_op::constructor_BTFSS (_inLexique COMMA_HERE) ;
    }else{
      var_cas_op = GGS_bit_oriented_op::constructor_BTFSC (_inLexique COMMA_HERE) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FBA ::constructor_new (_inLexique, var_cas_inInstructionLocation, var_cas_op, operand_17281->mRegisterExpression, operand_17281->mBitNumber COMMA_HERE)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_BRA ::constructor_new (_inLexique, var_cas_inInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_inTargetLabel, var_cas_inInstructionLocation COMMA_HERE) COMMA_HERE)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@instruction_structured_if.buildIPICinstructionList'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_structured_if__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_structured_if * operand_18061,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18061 != NULL) {
    GGS_string var_cas_label_nextCondition ;
    var_cas_label_nextCondition = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (614))) ;
    var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (614)) ;
    GGS_string var_cas_label_endOfIfinstruction ;
    var_cas_label_endOfIfinstruction = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (615))) ;
    var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (615)) ;
    const GGS_conditionExpression  _temp_18413 = operand_18061->mIfCondition ;
    if (_temp_18413._isBuilt ()) {
      typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_18413._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_18413 (HERE), var_cas_ioLocalLabelIndex, GGS_bool (true, true), operand_18061->mInstructionLocation, var_cas_label_nextCondition, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (617)) ;
      }
    }
    {
      GGS_instructionList::cEnumerator enumerator_18582 (operand_18061->mThenInstructionList, true) ;
      const GGS_instructionList::cElement * operand_18582 = NULL ;
      while (((operand_18582 = enumerator_18582.nextObject ()))) {
        macroValidPointer (operand_18582) ;
        const GGS_piccolo_instruction  _temp_18624 = operand_18582->mInstruction ;
        if (_temp_18624._isBuilt ()) {
          typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_18624._galgasObjectRunTimeInfo ()) ;
          if (_method != NULL) {
            _method (_inLexique, _temp_18624 (HERE), var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (620)) ;
          }
        }
      }
    }
    {
      GGS_elsifPartList::cEnumerator enumerator_18746 (operand_18061->mElsifPartList, true) ;
      const GGS_elsifPartList::cElement * operand_18746 = NULL ;
      while (((operand_18746 = enumerator_18746.nextObject ()))) {
        macroValidPointer (operand_18746) ;
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_BRA ::constructor_new (_inLexique, operand_18061->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_18061->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
        var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_nextCondition, operand_18061->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
        var_cas_label_nextCondition = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (626))) ;
        var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (626)) ;
        const GGS_conditionExpression  _temp_19143 = operand_18746->mCondition ;
        if (_temp_19143._isBuilt ()) {
          typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_19143._galgasObjectRunTimeInfo ()) ;
          if (_method != NULL) {
            _method (_inLexique, _temp_19143 (HERE), var_cas_ioLocalLabelIndex, GGS_bool (true, true), operand_18061->mInstructionLocation, var_cas_label_nextCondition, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (627)) ;
          }
        }
        {
          GGS_instructionList::cEnumerator enumerator_19289 (operand_18746->mInstructionList, true) ;
          const GGS_instructionList::cElement * operand_19289 = NULL ;
          while (((operand_19289 = enumerator_19289.nextObject ()))) {
            macroValidPointer (operand_19289) ;
            const GGS_piccolo_instruction  _temp_19329 = operand_19289->mInstruction ;
            if (_temp_19329._isBuilt ()) {
              typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_19329._galgasObjectRunTimeInfo ()) ;
              if (_method != NULL) {
                _method (_inLexique, _temp_19329 (HERE), var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (629)) ;
              }
            }
          }
        }
      }
    }
    if (((operand_18061->mElseInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (633)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_BRA ::constructor_new (_inLexique, operand_18061->mInstructionLocation, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_18061->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_nextCondition, operand_18061->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    {
      GGS_instructionList::cEnumerator enumerator_19800 (operand_18061->mElseInstructionList, true) ;
      const GGS_instructionList::cElement * operand_19800 = NULL ;
      while (((operand_19800 = enumerator_19800.nextObject ()))) {
        macroValidPointer (operand_19800) ;
        const GGS_piccolo_instruction  _temp_19842 = operand_19800->mInstruction ;
        if (_temp_19842._isBuilt ()) {
          typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_19842._galgasObjectRunTimeInfo ()) ;
          if (_method != NULL) {
            _method (_inLexique, _temp_19842 (HERE), var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (638)) ;
          }
        }
      }
    }
    if ((((operand_18061->mElseInstructionList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (640)))._operator_strictSup (GGS_uint (true, 0U)))._operator_or ((operand_18061->mElsifPartList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (640)))._operator_strictSup (GGS_uint (true, 0U)))).isBuiltAndTrue ()) {
      var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label_endOfIfinstruction, operand_18061->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@instruction_do_while.buildIPICinstructionList'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_do_while__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_do_while * operand_20259,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20259 != NULL) {
    GGS_string var_cas_label0 ;
    var_cas_label0 = (GGS_string (true, "_label_"))._operator_concat (var_cas_ioLocalLabelIndex.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (653))) ;
    var_cas_ioLocalLabelIndex._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (653)) ;
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, var_cas_label0, operand_20259->mInstructionLocation COMMA_HERE) COMMA_HERE)) ;
    {
      GGS_instructionList::cEnumerator enumerator_20636 (operand_20259->mRepeatedInstructionList, true) ;
      const GGS_instructionList::cElement * operand_20636 = NULL ;
      while (((operand_20636 = enumerator_20636.nextObject ()))) {
        macroValidPointer (operand_20636) ;
        const GGS_piccolo_instruction  _temp_20682 = operand_20636->mInstruction ;
        if (_temp_20682._isBuilt ()) {
          typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_20682._galgasObjectRunTimeInfo ()) ;
          if (_method != NULL) {
            _method (_inLexique, _temp_20682 (HERE), var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (658)) ;
          }
        }
      }
    }
    const GGS_conditionExpression  _temp_20819 = operand_20259->mWhileCondition ;
    if (_temp_20819._isBuilt ()) {
      typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition _method = findCategoryMethod__conditionExpression__buildIPICinstructionForCondition (_temp_20819._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_20819 (HERE), var_cas_ioLocalLabelIndex, GGS_bool (true, false), operand_20259->mInstructionLocation, var_cas_label0, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (661)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@instruction_IF_IncDec.buildIPICinstructionList'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__instruction_IF_IncDec__buildIPICinstructionList (C_Compiler & _inLexique,
                                const cPtr_instruction_IF_IncDec * operand_21051,
                                GGS_uint  & var_cas_ioLocalLabelIndex,
                                GGS_ipic_instructionList  & var_cas_ioGeneratedInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21051 != NULL) {
    GGS_instruction_FDA_base_code var_cas_baseCode ;
    if (((operand_21051->mIncrement)._operator_and (operand_21051->mSkipIfZero)).isBuiltAndTrue ()) {
      var_cas_baseCode = GGS_instruction_FDA_base_code::constructor_INCFSZ (_inLexique COMMA_HERE) ;
    }else if (((operand_21051->mIncrement)._operator_and ((operand_21051->mSkipIfZero)._operator_not ())).isBuiltAndTrue ()) {
      var_cas_baseCode = GGS_instruction_FDA_base_code::constructor_INFSNZ (_inLexique COMMA_HERE) ;
    }else if ((((operand_21051->mIncrement)._operator_not ())._operator_and (operand_21051->mSkipIfZero)).isBuiltAndTrue ()) {
      var_cas_baseCode = GGS_instruction_FDA_base_code::constructor_DECFSZ (_inLexique COMMA_HERE) ;
    }else{
      var_cas_baseCode = GGS_instruction_FDA_base_code::constructor_DCFSNZ (_inLexique COMMA_HERE) ;
    }
    var_cas_ioGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, operand_21051->mInstructionLocation, var_cas_baseCode, operand_21051->mRegisterExpression, operand_21051->m_W_isDestination COMMA_HERE)) ;
    const GGS_piccolo_instruction  _temp_21760 = operand_21051->mInstruction ;
    if (_temp_21760._isBuilt ()) {
      typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_21760._galgasObjectRunTimeInfo ()) ;
      if (_method != NULL) {
        _method (_inLexique, _temp_21760 (HERE), var_cas_ioLocalLabelIndex, var_cas_ioGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (689)) ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "buildAssemblyInstructionList"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildAssemblyInstructionList (C_Compiler & _inLexique,
                                const GGS_piccoloModel  var_cas_inPiccoloModel,
                                const GGS_bool  var_cas_inHasHighInterrupt,
                                const GGS_bool  var_cas_inHasLowInterrupt,
                                GGS_ipic_instructionList  & var_cas_outGeneratedInstructionList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_buildAssemblyInstructionList at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outGeneratedInstructionList = GGS_ipic_instructionList ::constructor_emptyList () ;
  GGS_uint  var_cas_localLabelIndex ;
  var_cas_localLabelIndex = GGS_uint (true, 0U) ;
  if (((var_cas_inHasLowInterrupt)._operator_or (var_cas_inHasHighInterrupt)).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_GOTO ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "main"), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE)) ;
  }
  if (((var_cas_inHasLowInterrupt)._operator_and (var_cas_inHasHighInterrupt)).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_ORG ::constructor_new (_inLexique, GGS_uint (true, 8U) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_BRA ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "_fast_interrupt"), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE)) ;
  }
  if ((var_cas_inHasLowInterrupt).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_ORG ::constructor_new (_inLexique, GGS_uint (true, 24U) COMMA_HERE)) ;
    {
      GGS_interruptDefinitionList::cEnumerator enumerator_22920 (var_cas_inPiccoloModel.reader_mInterruptDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (715)), true) ;
      const GGS_interruptDefinitionList::cElement * operand_22920 = NULL ;
      while (((operand_22920 = enumerator_22920.nextObject ()))) {
        macroValidPointer (operand_22920) ;
        if (((operand_22920->mInterruptName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (716)))._operator_isEqual (GGS_string (true, "low"))).isBuiltAndTrue ()) {
          {
            GGS_instructionList::cEnumerator enumerator_23028 (operand_22920->mInstructionList, true) ;
            const GGS_instructionList::cElement * operand_23028 = NULL ;
            while (((operand_23028 = enumerator_23028.nextObject ()))) {
              macroValidPointer (operand_23028) ;
              const GGS_piccolo_instruction  _temp_23072 = operand_23028->mInstruction ;
              if (_temp_23072._isBuilt ()) {
                typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_23072._galgasObjectRunTimeInfo ()) ;
                if (_method != NULL) {
                  _method (_inLexique, _temp_23072 (HERE), var_cas_localLabelIndex, var_cas_outGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (718)) ;
                }
              }
            }
          }
          var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RETFIE ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_bool (true, true) COMMA_HERE)) ;
        }
      }
    }
  }
  if ((var_cas_inHasHighInterrupt).isBuiltAndTrue ()) {
    if ((var_cas_inHasLowInterrupt).isBuiltAndTrue ()) {
      var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "_fast_interrupt"), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE)) ;
    }else{
      var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_ORG ::constructor_new (_inLexique, GGS_uint (true, 8U) COMMA_HERE)) ;
    }
    {
      GGS_interruptDefinitionList::cEnumerator enumerator_23649 (var_cas_inPiccoloModel.reader_mInterruptDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (732)), true) ;
      const GGS_interruptDefinitionList::cElement * operand_23649 = NULL ;
      while (((operand_23649 = enumerator_23649.nextObject ()))) {
        macroValidPointer (operand_23649) ;
        if (((operand_23649->mInterruptName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (733)))._operator_isEqual (GGS_string (true, "high"))).isBuiltAndTrue ()) {
          {
            GGS_instructionList::cEnumerator enumerator_23758 (operand_23649->mInstructionList, true) ;
            const GGS_instructionList::cElement * operand_23758 = NULL ;
            while (((operand_23758 = enumerator_23758.nextObject ()))) {
              macroValidPointer (operand_23758) ;
              const GGS_piccolo_instruction  _temp_23802 = operand_23758->mInstruction ;
              if (_temp_23802._isBuilt ()) {
                typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_23802._galgasObjectRunTimeInfo ()) ;
                if (_method != NULL) {
                  _method (_inLexique, _temp_23802 (HERE), var_cas_localLabelIndex, var_cas_outGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (735)) ;
                }
              }
            }
          }
          var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RETFIE ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_bool (true, true) COMMA_HERE)) ;
        }
      }
    }
  }
  {
    GGS_routineDefinitionList::cEnumerator enumerator_24100 (var_cas_inPiccoloModel.reader_mRoutineDefinitionList (_inLexique COMMA_SOURCE_FILE_AT_LINE (743)), true) ;
    const GGS_routineDefinitionList::cElement * operand_24100 = NULL ;
    while (((operand_24100 = enumerator_24100.nextObject ()))) {
      macroValidPointer (operand_24100) ;
      var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, operand_24100->mRoutineName COMMA_HERE)) ;
      {
        GGS_instructionList::cEnumerator enumerator_24232 (operand_24100->mInstructionList, true) ;
        const GGS_instructionList::cElement * operand_24232 = NULL ;
        while (((operand_24232 = enumerator_24232.nextObject ()))) {
          macroValidPointer (operand_24232) ;
          const GGS_piccolo_instruction  _temp_24272 = operand_24232->mInstruction ;
          if (_temp_24272._isBuilt ()) {
            typeCategoryMethod__piccolo_instruction__buildIPICinstructionList _method = findCategoryMethod__piccolo_instruction__buildIPICinstructionList (_temp_24272._galgasObjectRunTimeInfo ()) ;
            if (_method != NULL) {
              _method (_inLexique, _temp_24272 (HERE), var_cas_localLabelIndex, var_cas_outGeneratedInstructionList COMMA_SOURCE_FILE_AT_LINE (746)) ;
            }
          }
        }
      }
    }
  }
  if ((var_cas_inPiccoloModel.reader_mNeedsComputedGoto4 (_inLexique COMMA_SOURCE_FILE_AT_LINE (750))).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "_computed_goto_4"), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_instruction_FDA_base_code::constructor_ADDWF (_inLexique COMMA_HERE), GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "WREG"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE), GGS_bool (true, true) COMMA_HERE)) ;
  }
  if ((var_cas_inPiccoloModel.reader_mNeedsComputedGoto2 (_inLexique COMMA_SOURCE_FILE_AT_LINE (759))).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_pseudo_LABEL ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "_computed_goto_2"), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE)) ;
  }
  if (((var_cas_inPiccoloModel.reader_mNeedsComputedGoto2 (_inLexique COMMA_SOURCE_FILE_AT_LINE (762)))._operator_or (var_cas_inPiccoloModel.reader_mNeedsComputedGoto4 (_inLexique COMMA_SOURCE_FILE_AT_LINE (762)))).isBuiltAndTrue ()) {
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_instruction_FDA_base_code::constructor_ADDWF (_inLexique COMMA_HERE), GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "WREG"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE), GGS_bool (true, true) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_instruction_FDA_base_code::constructor_ADDWF (_inLexique COMMA_HERE), GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "TOSL"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE), GGS_bool (true, false) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_literalOperation ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_literal_instruction_opcode::constructor_MOVLW (_inLexique COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_FDA ::constructor_new (_inLexique, GGS_location (_inLexique), GGS_instruction_FDA_base_code::constructor_ADDWFC (_inLexique COMMA_HERE), GGS_registerExpression ::constructor_new (_inLexique, GGS_lstring ::constructor_new (_inLexique, GGS_string (true, "TOSH"), GGS_location (_inLexique) COMMA_HERE), GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) COMMA_HERE), GGS_bool (true, false) COMMA_HERE)) ;
    var_cas_outGeneratedInstructionList._addAssign_operation (GGS_ipic_instruction_RETURN ::constructor_new (_inLexique, GGS_location (_inLexique) COMMA_HERE)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_buildAssemblyInstructionList\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_piccolo_decompose_structured_instructions (void) {
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__pseudo_LABEL__buildIPICinstructionList, gClassInfoFor__pseudo_LABEL.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_FDA__buildIPICinstructionList, gClassInfoFor__instruction_FDA.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_FA__buildIPICinstructionList, gClassInfoFor__instruction_FA.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_MOVFF__buildIPICinstructionList, gClassInfoFor__instruction_MOVFF.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_FBA__buildIPICinstructionList, gClassInfoFor__instruction_FBA.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_conditionalBranch__buildIPICinstructionList, gClassInfoFor__instruction_conditionalBranch.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_BRA__buildIPICinstructionList, gClassInfoFor__instruction_BRA.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_CALL__buildIPICinstructionList, gClassInfoFor__instruction_CALL.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_GOTO__buildIPICinstructionList, gClassInfoFor__instruction_GOTO.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_RCALL__buildIPICinstructionList, gClassInfoFor__instruction_RCALL.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_CLRWDT__buildIPICinstructionList, gClassInfoFor__instruction_CLRWDT.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_DAW__buildIPICinstructionList, gClassInfoFor__instruction_DAW.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_NOP__buildIPICinstructionList, gClassInfoFor__instruction_NOP.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_POP__buildIPICinstructionList, gClassInfoFor__instruction_POP.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_PUSH__buildIPICinstructionList, gClassInfoFor__instruction_PUSH.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_RESET__buildIPICinstructionList, gClassInfoFor__instruction_RESET.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_RETURN__buildIPICinstructionList, gClassInfoFor__instruction_RETURN.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_RETFIE__buildIPICinstructionList, gClassInfoFor__instruction_RETFIE.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_SLEEP__buildIPICinstructionList, gClassInfoFor__instruction_SLEEP.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_literalOperation__buildIPICinstructionList, gClassInfoFor__instruction_literalOperation.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_LFSR__buildIPICinstructionList, gClassInfoFor__instruction_LFSR.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_MOVLB__buildIPICinstructionList, gClassInfoFor__instruction_MOVLB.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_MOVAW__buildIPICinstructionList, gClassInfoFor__instruction_MOVAW.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_TBLRD__buildIPICinstructionList, gClassInfoFor__instruction_TBLRD.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_TBLWT__buildIPICinstructionList, gClassInfoFor__instruction_TBLWT.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_computed_retlw__buildIPICinstructionList, gClassInfoFor__instruction_computed_retlw.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_MNOP__buildIPICinstructionList, gClassInfoFor__instruction_MNOP.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_computed_bra__buildIPICinstructionList, gClassInfoFor__instruction_computed_bra.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_computed_goto__buildIPICinstructionList, gClassInfoFor__instruction_computed_goto.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_FOREVER__buildIPICinstructionList, gClassInfoFor__instruction_FOREVER.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_IF_FA_SEMI_COLON__buildIPICinstructionList, gClassInfoFor__instruction_IF_FA_SEMI_COLON.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_IF_BitTest__buildIPICinstructionList, gClassInfoFor__instruction_IF_BitTest.slotID ()) ;
 enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition) category_method__bcc_in_structured_if_condition__buildIPICinstructionForCondition, gClassInfoFor__bcc_in_structured_if_condition.slotID ()) ;
 enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition) category_method__registerComparisonCondition__buildIPICinstructionForCondition, gClassInfoFor__registerComparisonCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition) category_method__incDecRegisterInCondition__buildIPICinstructionForCondition, gClassInfoFor__incDecRegisterInCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition) category_method__registerTestCondition__buildIPICinstructionForCondition, gClassInfoFor__registerTestCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition) category_method__negateCondition__buildIPICinstructionForCondition, gClassInfoFor__negateCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition) category_method__andCondition__buildIPICinstructionForCondition, gClassInfoFor__andCondition.slotID ()) ;
 enterCategoryMethod__conditionExpression__buildIPICinstructionForCondition ((typeCategoryMethod__conditionExpression__buildIPICinstructionForCondition) category_method__bitTest_in_structured_if_condition__buildIPICinstructionForCondition, gClassInfoFor__bitTest_in_structured_if_condition.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_structured_if__buildIPICinstructionList, gClassInfoFor__instruction_structured_if.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_do_while__buildIPICinstructionList, gClassInfoFor__instruction_do_while.slotID ()) ;
 enterCategoryMethod__piccolo_instruction__buildIPICinstructionList ((typeCategoryMethod__piccolo_instruction__buildIPICinstructionList) category_method__instruction_IF_IncDec__buildIPICinstructionList, gClassInfoFor__instruction_IF_IncDec.slotID ()) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogueAction prologueEpilogueObjectFor_piccolo_decompose_structured_instructions (prologueRoutineFor_piccolo_decompose_structured_instructions,
                                   NULL) ;

//---------------------------------------------------------------------------*

