//---------------------------------------------------------------------------*
//                                                                           *
//                         File 'piccolo_grammar.h'                          *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       july 16th, 2008, at 12h1'40"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef GRAMMAR_piccolo_grammar_HAS_BEEN_DEFINED
#define GRAMMAR_piccolo_grammar_HAS_BEEN_DEFINED

//---------------------------------------------------------------------------*

#include "piccolo_syntax.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*

class piccolo_grammar : public piccolo_syntax {
  public : virtual void nt_configuration_definition_ (piccolo_lexique &) ;
  public : virtual void nt_instruction_ (piccolo_lexique &) ;
  public : virtual void nt_interrupt_definition_ (piccolo_lexique &) ;
  public : virtual void nt_optional_w_as_dest_ (piccolo_lexique &) ;
  public : virtual void nt_ram_definition_ (piccolo_lexique &) ;
  public : virtual void nt_register_parsing_ (piccolo_lexique &) ;
  public : virtual void nt_routine_definition_ (piccolo_lexique &) ;
  public : virtual void nt_start_symbol_ (piccolo_lexique &) ;
  public : static void _performSourceFileParsing_ (C_Compiler & _inCompiler,
                                GGS_string * _inSentStringPtr,
                                const GGS_lstring inFileName
                                COMMA_LOCATION_ARGS) ;
  public : static void _performSourceStringParsing_ (C_Compiler & _inCompiler,
                                GGS_string * _inSentStringPtr,
                                const GGS_string inSourceString
                                COMMA_LOCATION_ARGS) ;
  public : virtual sint16 select_repeat_piccolo_syntax_0 (piccolo_lexique &) ;
  public : virtual sint16 select_repeat_piccolo_syntax_1 (piccolo_lexique &) ;
  public : virtual sint16 select_repeat_piccolo_syntax_2 (piccolo_lexique &) ;
  public : virtual sint16 select_piccolo_syntax_3 (piccolo_lexique &) ;
  public : virtual sint16 select_piccolo_syntax_4 (piccolo_lexique &) ;
} ;

//---------------------------------------------------------------------------*

#endif
