//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'piccolo_program.cpp'                         *
//                        Generated by version 2.4.3                         *
//                      april 14th, 2013, at 16h33'46"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "piccolo_program.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/F_DisplayException.h"
#include "utilities/basic-allocation.h"
#include "utilities/cpp-allocation.h"
#include "utilities/C_PrologueEpilogue.h"
#include "command_line_interface/F_mainForLIBPM.h"
#include "command_line_interface/C_builtin_CLI_Options.h"
#include "command_line_interface/F_Analyze_CLI_Options.h"
#include "project_header.h"

//---------------------------------------------------------------------------*

#include "piccoloDevice_grammar.h"
#include "piccolo_options.h"
#include "pic18_grammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "piccolo_program.gProgram", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                      print_tool_help_message                              *
//                                                                           *
//---------------------------------------------------------------------------*

static void print_tool_help_message (void) {
  co << "Compiled with GALGAS revision NUMERO_REVISION_GALGAS\n" ;
}

//---------------------------------------------------------------------------*

static const char * kSourceFileExtensions [] = {
  "piccolo",
  NULL
} ;    

//---------------------------------------------------------------------------*

static const char * kSourceFileHelpMessages [] = {
  "a source text file with the .piccolo extension",
  NULL
} ;    

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const char * kVersionString = "version " PROJECT_VERSION_STRING " [debug]" ;
#else
  static const char * kVersionString = "version " PROJECT_VERSION_STRING ;
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                      M A I N    F O R    L I B P M                        *
//                                                                           *
//---------------------------------------------------------------------------*

int mainForLIBPM (int inArgc, const char * inArgv []) {
//--- Analyze Command Line Options
  TC_UniqueArray <C_String> sourceFilesArray ;
  F_Analyze_CLI_Options (inArgc, inArgv,
                         kVersionString,
                         sourceFilesArray,
                         kSourceFileExtensions,
                         kSourceFileHelpMessages,
                         print_tool_help_message) ;
//---
  bool verboseOptionOn = true ;
  PMSInt16 returnCode = 0 ; // No error
//--- Set Execution mode
  C_String executionModeOptionErrorMessage ;
  setExecutionMode (executionModeOptionErrorMessage) ;
  if (executionModeOptionErrorMessage.length () > 0) {
    co << executionModeOptionErrorMessage ;
    returnCode = 1 ;
  }else{
  //--- Common lexique object
    C_Compiler * commonLexique = NULL ;
    macroMyNew (commonLexique, C_Compiler (NULL, "", "" COMMA_HERE)) ;
    try{
      routine_before (commonLexique COMMA_HERE) ;
      verboseOptionOn = gOption_galgas_5F_builtin_5F_options_verbose_5F_output.mValue ;
      for (PMSInt32 i=0 ; i<sourceFilesArray.count () ; i++) {
        setCurrentCompiledFilePath (sourceFilesArray (i COMMA_HERE)) ;
        if (gOption_galgas_5F_builtin_5F_options_trace.mValue) {
          enableTraceWithPath (sourceFilesArray (i COMMA_HERE)) ;
        }
        const C_String fileExtension = sourceFilesArray (i COMMA_HERE).pathExtension () ;
        const GALGAS_string sfp = GALGAS_string (sourceFilesArray (i COMMA_HERE)) ;
        const GALGAS_location location = commonLexique->here () ;
        const GALGAS_lstring sourceFilePath (sfp, location) ;
        PMSInt16 r = 0 ;
        if (fileExtension == "piccolo") {
          routine_programRule_5F__30_ (sourceFilePath, commonLexique COMMA_HERE) ;
        }else{
          printf ("*** Error: unhandled extension for file '%s' ***\n", sourceFilesArray (i COMMA_HERE).cString (HERE)) ;
          r = 1 ;
        }
        if (r != 0) {
          returnCode = r ;
        }
        closeTrace () ;
      }
    //--- Error or warnings ?
      if (totalErrorCount () > 0) {
        returnCode = 1 ; // Error code
      }else if (totalWarningCount () > 0) {
        if (gOption_galgas_5F_builtin_5F_options_treat_5F_warnings_5F_as_5F_error.mValue) {
          returnCode = 1 ; // Error code
          if (verboseOptionOn) {
            printf ("** Note: warnings are treated as errors. **\n") ;
          }
        }
      }
    //--- Epilogue
      routine_after (commonLexique COMMA_HERE) ;
    //--- Display error and warnings count
      if (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.mValue || (totalWarningCount () > 0) || (totalErrorCount () > 0)) {
        C_String message ;
        if (totalWarningCount () == 0) {
          message << "No warning" ;
        }else if (totalWarningCount () == 1) {
          message << "1 warning" ;
        }else{
          message << cStringWithUnsigned (totalWarningCount ()) << " warnings" ;
        }
        message << ", " ;
        if (totalErrorCount () == 0) {
          message << "no error" ;
        }else if (totalErrorCount () == 1) {
          message << "1 error" ;
        }else{
          message << cStringWithUnsigned (totalErrorCount ()) << " errors" ;
        }
        message << ".\n" ;
        ggs_printMessage (message COMMA_HERE) ;
      }
    }catch (const M_STD_NAMESPACE exception & e) {
      F_default_display_exception (e) ;
      returnCode = 1 ; // Error code
    }catch (...) {
      printf ("**** Unknow exception ****\n") ;
      throw ;
    }
    macroDetachSharedObject (commonLexique) ;
  }
  return returnCode ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                             Routine 'before'                              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_before (C_Compiler * inCompiler
                     COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (gOption_piccolo_5F_options_outputDeviceList.reader_value ()).operator_or (GALGAS_bool (gOption_piccolo_5F_options_outputPic_31__38_DeviceList.reader_value ()) COMMA_SOURCE_FILE_AT_LINE (10)).operator_or (GALGAS_bool (gOption_piccolo_5F_options_outputBaselineDeviceList.reader_value ()) COMMA_SOURCE_FILE_AT_LINE (11)).operator_or (GALGAS_bool (gOption_piccolo_5F_options_outputMidrangeDeviceList.reader_value ()) COMMA_SOURCE_FILE_AT_LINE (12)).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_stringlist var_allDevices = GALGAS_filewrapper (gWrapperDirectory_0_embeddedDevices).reader_allTextFilePathes (SOURCE_FILE_AT_LINE (14)) ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_stringlist var_pic_31__38__5F_devices = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (15)) ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_stringlist var_midrange_5F_devices = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (16)) ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_stringlist var_baseline_5F_devices = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (17)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_bool var_ok = GALGAS_bool (true) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_stringlist enumerator_796 (var_allDevices, kEnumeration_up) ;
    //--- complex foreach instruction
    bool bool_1 = var_ok.isValidAndTrue () ;
    if (enumerator_796.hasCurrentObject () && bool_1) {
      while (enumerator_796.hasCurrentObject () && bool_1) {
        //-------- @localVariableDeclarationForGeneration
        GALGAS_piccoloDeviceModel var_piccoloDeviceModel ;
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_string var_name = enumerator_796.current_mValue (HERE).reader_lastPathComponent (SOURCE_FILE_AT_LINE (22)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (22)) ;
        { //-------- @routineCallInstructionForGeneration
        routine_parseDeviceDefinition (GALGAS_lstring::constructor_new (var_name, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (23)), var_piccoloDeviceModel, inCompiler COMMA_SOURCE_FILE_AT_LINE (23)) ;
        } //-------- @routineCallInstructionForGeneration
        //------- @switchInstructionForGeneration
        if (var_piccoloDeviceModel.reader_mProcessorType (SOURCE_FILE_AT_LINE (24)).isValid ()) {
          switch (var_piccoloDeviceModel.reader_mProcessorType (SOURCE_FILE_AT_LINE (24)).enumValue ()) {
          case GALGAS_processorType::kNotBuilt:
            break ;
          case GALGAS_processorType::kEnum_pic_31__38__5F__36__30_: case GALGAS_processorType::kEnum_pic_31__38__5F__38__30_: {
            //-------- @plusEqualnstructionForGeneration
            var_pic_31__38__5F_devices.addAssign_operation (var_name COMMA_SOURCE_FILE_AT_LINE (25)) ;
            } break ;
          case GALGAS_processorType::kEnum_midrange: {
            //-------- @plusEqualnstructionForGeneration
            var_midrange_5F_devices.addAssign_operation (var_name COMMA_SOURCE_FILE_AT_LINE (26)) ;
            //-------- @ifInstructionForGeneration
            const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_piccoloDeviceModel.reader_mBankCount (SOURCE_FILE_AT_LINE (27)).reader_uint (SOURCE_FILE_AT_LINE (27)).objectCompare (GALGAS_uint ((PMUInt32) 4U))).boolEnum () ;
            if (kBoolTrue == test_2) {
              //-------- @messageInstructionForGeneration
              inCompiler->printMessage (var_name.operator_concat (GALGAS_string (" has ") COMMA_SOURCE_FILE_AT_LINE (28)).operator_concat (var_piccoloDeviceModel.reader_mBankCount (SOURCE_FILE_AT_LINE (28)).reader_uint (SOURCE_FILE_AT_LINE (28)).reader_string (SOURCE_FILE_AT_LINE (28)) COMMA_SOURCE_FILE_AT_LINE (28)).operator_concat (GALGAS_string (" banks\n") COMMA_SOURCE_FILE_AT_LINE (28)) COMMA_SOURCE_FILE_AT_LINE (28)) ;
            }
            } break ;
          case GALGAS_processorType::kEnum_baseline: {
            //-------- @plusEqualnstructionForGeneration
            var_baseline_5F_devices.addAssign_operation (var_name COMMA_SOURCE_FILE_AT_LINE (30)) ;
            } break ;
          }
        }
        enumerator_796.gotoNextObject () ;
        if (enumerator_796.hasCurrentObject ()) {
          bool_1 = var_ok.isValidAndTrue () ;
        }
      }
    }
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_3 = GALGAS_bool (gOption_piccolo_5F_options_outputDeviceList.reader_value ()).operator_or (GALGAS_bool (gOption_piccolo_5F_options_outputBaselineDeviceList.reader_value ()) COMMA_SOURCE_FILE_AT_LINE (44)).boolEnum () ;
    if (kBoolTrue == test_3) {
      //-------- @messageInstructionForGeneration
      inCompiler->printMessage (var_baseline_5F_devices.reader_length (SOURCE_FILE_AT_LINE (45)).reader_string (SOURCE_FILE_AT_LINE (45)).operator_concat (GALGAS_string (" baseline devices:\n") COMMA_SOURCE_FILE_AT_LINE (45)) COMMA_SOURCE_FILE_AT_LINE (45)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_uint var_idx = GALGAS_uint ((PMUInt32) 0U) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_stringlist enumerator_2070 (var_baseline_5F_devices, kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_2070.hasCurrentObject ()) {
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (enumerator_2070.current_mValue (HERE).reader_stringByRightPadding (GALGAS_uint ((PMUInt32) 15U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (48)) COMMA_SOURCE_FILE_AT_LINE (48)) ;
        //-------- @incrementInstructionForGeneration
        var_idx.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (49)) ;
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, var_idx.objectCompare (GALGAS_uint ((PMUInt32) 5U))).boolEnum () ;
        if (kBoolTrue == test_4) {
          //-------- @assignmentInstructionForGeneration
          var_idx = GALGAS_uint ((PMUInt32) 0U) ;
          //-------- @messageInstructionForGeneration
          inCompiler->printMessage (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (52)) ;
        }
        enumerator_2070.gotoNextObject () ;
      }
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_5 = GALGAS_bool (kIsNotEqual, var_idx.objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
      if (kBoolTrue == test_5) {
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (56)) ;
      }
    }
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_6 = GALGAS_bool (gOption_piccolo_5F_options_outputDeviceList.reader_value ()).operator_or (GALGAS_bool (gOption_piccolo_5F_options_outputMidrangeDeviceList.reader_value ()) COMMA_SOURCE_FILE_AT_LINE (60)).boolEnum () ;
    if (kBoolTrue == test_6) {
      //-------- @messageInstructionForGeneration
      inCompiler->printMessage (var_midrange_5F_devices.reader_length (SOURCE_FILE_AT_LINE (61)).reader_string (SOURCE_FILE_AT_LINE (61)).operator_concat (GALGAS_string (" mid-range devices supported by Piccolo ") COMMA_SOURCE_FILE_AT_LINE (61)).operator_concat (GALGAS_string::constructor_stringWithVersionString (SOURCE_FILE_AT_LINE (61)) COMMA_SOURCE_FILE_AT_LINE (61)).operator_concat (GALGAS_string (":\n") COMMA_SOURCE_FILE_AT_LINE (61)) COMMA_SOURCE_FILE_AT_LINE (61)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_uint var_idx = GALGAS_uint ((PMUInt32) 0U) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_stringlist enumerator_2676 (var_midrange_5F_devices, kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_2676.hasCurrentObject ()) {
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (enumerator_2676.current_mValue (HERE).reader_stringByRightPadding (GALGAS_uint ((PMUInt32) 15U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (64)) COMMA_SOURCE_FILE_AT_LINE (64)) ;
        //-------- @incrementInstructionForGeneration
        var_idx.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (65)) ;
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, var_idx.objectCompare (GALGAS_uint ((PMUInt32) 5U))).boolEnum () ;
        if (kBoolTrue == test_7) {
          //-------- @assignmentInstructionForGeneration
          var_idx = GALGAS_uint ((PMUInt32) 0U) ;
          //-------- @messageInstructionForGeneration
          inCompiler->printMessage (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (68)) ;
        }
        enumerator_2676.gotoNextObject () ;
      }
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_8 = GALGAS_bool (kIsNotEqual, var_idx.objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
      if (kBoolTrue == test_8) {
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (72)) ;
      }
    }
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_9 = GALGAS_bool (gOption_piccolo_5F_options_outputDeviceList.reader_value ()).operator_or (GALGAS_bool (gOption_piccolo_5F_options_outputPic_31__38_DeviceList.reader_value ()) COMMA_SOURCE_FILE_AT_LINE (76)).boolEnum () ;
    if (kBoolTrue == test_9) {
      //-------- @messageInstructionForGeneration
      inCompiler->printMessage (var_pic_31__38__5F_devices.reader_length (SOURCE_FILE_AT_LINE (77)).reader_string (SOURCE_FILE_AT_LINE (77)).operator_concat (GALGAS_string (" pic18 devices supported by Piccolo ") COMMA_SOURCE_FILE_AT_LINE (77)).operator_concat (GALGAS_string::constructor_stringWithVersionString (SOURCE_FILE_AT_LINE (77)) COMMA_SOURCE_FILE_AT_LINE (77)).operator_concat (GALGAS_string (":\n") COMMA_SOURCE_FILE_AT_LINE (77)) COMMA_SOURCE_FILE_AT_LINE (77)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_uint var_idx = GALGAS_uint ((PMUInt32) 0U) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_stringlist enumerator_3265 (var_pic_31__38__5F_devices, kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_3265.hasCurrentObject ()) {
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (enumerator_3265.current_mValue (HERE).reader_stringByRightPadding (GALGAS_uint ((PMUInt32) 15U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (80)) COMMA_SOURCE_FILE_AT_LINE (80)) ;
        //-------- @incrementInstructionForGeneration
        var_idx.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (81)) ;
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_10 = GALGAS_bool (kIsEqual, var_idx.objectCompare (GALGAS_uint ((PMUInt32) 5U))).boolEnum () ;
        if (kBoolTrue == test_10) {
          //-------- @assignmentInstructionForGeneration
          var_idx = GALGAS_uint ((PMUInt32) 0U) ;
          //-------- @messageInstructionForGeneration
          inCompiler->printMessage (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (84)) ;
        }
        enumerator_3265.gotoNextObject () ;
      }
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_11 = GALGAS_bool (kIsNotEqual, var_idx.objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
      if (kBoolTrue == test_11) {
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (88)) ;
      }
    }
  }
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_12 = GALGAS_bool (kIsStrictSup, GALGAS_string (gOption_piccolo_5F_options_exportDeviceFiles.reader_value ()).reader_length (SOURCE_FILE_AT_LINE (94)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_12) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_dir = GALGAS_string (gOption_piccolo_5F_options_exportDeviceFiles.reader_value ()) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_13 = var_dir.reader_directoryExists (SOURCE_FILE_AT_LINE (96)).operator_not (SOURCE_FILE_AT_LINE (96)).boolEnum () ;
    if (kBoolTrue == test_13) {
      //-------- @methodCallInstructionForGeneration
      var_dir.method_makeDirectory (inCompiler COMMA_SOURCE_FILE_AT_LINE (97)) ;
      //-------- END @methodCallInstructionForGeneration
    }
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_filewrapper var_fw = GALGAS_filewrapper (gWrapperDirectory_0_embeddedDevices) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_stringlist var_allDevices = GALGAS_filewrapper (gWrapperDirectory_0_embeddedDevices).reader_allTextFilePathes (SOURCE_FILE_AT_LINE (100)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_stringlist enumerator_4004 (var_allDevices, kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_4004.hasCurrentObject ()) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_definitionString = var_fw.reader_textFileContentsAtPath (enumerator_4004.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (102)) ;
      //-------- @methodCallInstructionForGeneration
      var_definitionString.method_writeToFile (var_dir.operator_concat (enumerator_4004.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (103)), inCompiler COMMA_SOURCE_FILE_AT_LINE (103)) ;
      //-------- END @methodCallInstructionForGeneration
      enumerator_4004.gotoNextObject () ;
    }
    //-------- @messageInstructionForGeneration
    inCompiler->printMessage (var_allDevices.reader_length (SOURCE_FILE_AT_LINE (105)).reader_string (SOURCE_FILE_AT_LINE (105)).operator_concat (GALGAS_string (" devices copied in '") COMMA_SOURCE_FILE_AT_LINE (105)).operator_concat (var_dir COMMA_SOURCE_FILE_AT_LINE (105)).operator_concat (GALGAS_string ("' directory\n") COMMA_SOURCE_FILE_AT_LINE (105)) COMMA_SOURCE_FILE_AT_LINE (105)) ;
  }
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_deviceForMemoryDescription = GALGAS_string (gOption_piccolo_5F_options_memoryDescription.reader_value ()) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_14 = GALGAS_bool (kIsStrictSup, var_deviceForMemoryDescription.reader_length (SOURCE_FILE_AT_LINE (109)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_14) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_devicePath = GALGAS_string ("/").operator_concat (var_deviceForMemoryDescription COMMA_SOURCE_FILE_AT_LINE (110)).operator_concat (GALGAS_string (".piccoloDevice") COMMA_SOURCE_FILE_AT_LINE (110)) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_15 = GALGAS_filewrapper (gWrapperDirectory_0_embeddedDevices).reader_fileExistsAtPath (var_devicePath, inCompiler COMMA_SOURCE_FILE_AT_LINE (111)).boolEnum () ;
    if (kBoolTrue == test_15) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_piccoloDeviceModel var_piccoloDeviceModel ;
      { //-------- @routineCallInstructionForGeneration
      routine_parseDeviceDefinition (GALGAS_lstring::constructor_new (var_deviceForMemoryDescription, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (113)), var_piccoloDeviceModel, inCompiler COMMA_SOURCE_FILE_AT_LINE (113)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_uint var_totalRam = GALGAS_uint ((PMUInt32) 0U) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_ramBankTable enumerator_4843 (var_piccoloDeviceModel.reader_mRamBankTable (SOURCE_FILE_AT_LINE (115)), kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_4843.hasCurrentObject ()) {
        //-------- @assignmentInstructionForGeneration
        var_totalRam = var_totalRam.add_operation (enumerator_4843.current_mLastAddressPlusOne (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (116)).substract_operation (enumerator_4843.current_mFirstFreeAddress (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (116)) ;
        enumerator_4843.gotoNextObject () ;
      }
      //-------- @messageInstructionForGeneration
      inCompiler->printMessage (var_deviceForMemoryDescription.operator_concat (GALGAS_string (" device:\n") COMMA_SOURCE_FILE_AT_LINE (118)) COMMA_SOURCE_FILE_AT_LINE (118)) ;
      //-------- @messageInstructionForGeneration
      inCompiler->printMessage (GALGAS_string ("  ").operator_concat (var_piccoloDeviceModel.reader_mRamBankTable (SOURCE_FILE_AT_LINE (119)).reader_count (SOURCE_FILE_AT_LINE (119)).reader_string (SOURCE_FILE_AT_LINE (119)) COMMA_SOURCE_FILE_AT_LINE (119)).operator_concat (GALGAS_string (" RAM banks (total ") COMMA_SOURCE_FILE_AT_LINE (119)).operator_concat (var_totalRam.reader_string (SOURCE_FILE_AT_LINE (119)) COMMA_SOURCE_FILE_AT_LINE (119)).operator_concat (GALGAS_string (" bytes):\n") COMMA_SOURCE_FILE_AT_LINE (119)) COMMA_SOURCE_FILE_AT_LINE (119)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_ramBankTable enumerator_5181 (var_piccoloDeviceModel.reader_mRamBankTable (SOURCE_FILE_AT_LINE (120)), kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_5181.hasCurrentObject ()) {
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (GALGAS_string ("    bank \"").operator_concat (enumerator_5181.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (121)) COMMA_SOURCE_FILE_AT_LINE (121)).operator_concat (GALGAS_string ("\" from ") COMMA_SOURCE_FILE_AT_LINE (121)).operator_concat (enumerator_5181.current_mFirstFreeAddress (HERE).reader_hexString (SOURCE_FILE_AT_LINE (121)) COMMA_SOURCE_FILE_AT_LINE (121)).operator_concat (GALGAS_string (" to ") COMMA_SOURCE_FILE_AT_LINE (122)).operator_concat (enumerator_5181.current_mLastAddressPlusOne (HERE).substract_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (122)).reader_hexString (SOURCE_FILE_AT_LINE (122)) COMMA_SOURCE_FILE_AT_LINE (122)).operator_concat (GALGAS_string (" (") COMMA_SOURCE_FILE_AT_LINE (123)).operator_concat (enumerator_5181.current_mLastAddressPlusOne (HERE).substract_operation (enumerator_5181.current_mFirstFreeAddress (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (123)).reader_string (SOURCE_FILE_AT_LINE (123)) COMMA_SOURCE_FILE_AT_LINE (123)).operator_concat (GALGAS_string (" bytes)") COMMA_SOURCE_FILE_AT_LINE (123)) COMMA_SOURCE_FILE_AT_LINE (121)) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_uintlist enumerator_5443 (enumerator_5181.current_mMirrorOffsetList (HERE), kEnumeration_up) ;
        //--- complex foreach instruction
        const bool bool_16 = true ;
        if (enumerator_5443.hasCurrentObject () && bool_16) {
          //-------- @messageInstructionForGeneration
          inCompiler->printMessage (GALGAS_string (", mirror at ") COMMA_SOURCE_FILE_AT_LINE (125)) ;
          while (enumerator_5443.hasCurrentObject () && bool_16) {
            //-------- @messageInstructionForGeneration
            inCompiler->printMessage (enumerator_5181.current_mFirstFreeAddress (HERE).add_operation (enumerator_5443.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (126)).reader_hexString (SOURCE_FILE_AT_LINE (126)) COMMA_SOURCE_FILE_AT_LINE (126)) ;
            enumerator_5443.gotoNextObject () ;
            if (enumerator_5443.hasCurrentObject () && bool_16) {
              //-------- @messageInstructionForGeneration
              inCompiler->printMessage (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (127)) ;
            }
          }
        }
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (129)) ;
        enumerator_5181.gotoNextObject () ;
      }
      //------- @switchInstructionForGeneration
      if (var_piccoloDeviceModel.reader_mProcessorType (SOURCE_FILE_AT_LINE (131)).isValid ()) {
        switch (var_piccoloDeviceModel.reader_mProcessorType (SOURCE_FILE_AT_LINE (131)).enumValue ()) {
        case GALGAS_processorType::kNotBuilt:
          break ;
        case GALGAS_processorType::kEnum_pic_31__38__5F__36__30_: case GALGAS_processorType::kEnum_pic_31__38__5F__38__30_: {
          //-------- @messageInstructionForGeneration
          inCompiler->printMessage (GALGAS_string ("  ROM size: ").operator_concat (var_piccoloDeviceModel.reader_mRomSize (SOURCE_FILE_AT_LINE (133)).reader_uint (SOURCE_FILE_AT_LINE (133)).reader_string (SOURCE_FILE_AT_LINE (133)) COMMA_SOURCE_FILE_AT_LINE (133)).operator_concat (GALGAS_string (" bytes\n") COMMA_SOURCE_FILE_AT_LINE (133)) COMMA_SOURCE_FILE_AT_LINE (133)) ;
          } break ;
        case GALGAS_processorType::kEnum_midrange: {
          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
          GALGAS_uint var_pageCount = var_piccoloDeviceModel.reader_mRomSize (SOURCE_FILE_AT_LINE (135)).reader_uint (SOURCE_FILE_AT_LINE (135)).add_operation (GALGAS_uint ((PMUInt32) 2047U), inCompiler COMMA_SOURCE_FILE_AT_LINE (135)).divide_operation (GALGAS_uint ((PMUInt32) 2048U), inCompiler COMMA_SOURCE_FILE_AT_LINE (135)) ;
          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
          GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
          //-------- @ifInstructionForGeneration
          const enumGalgasBool test_17 = GALGAS_bool (kIsStrictSup, var_pageCount.objectCompare (GALGAS_uint ((PMUInt32) 1U))).boolEnum () ;
          if (kBoolTrue == test_17) {
            //-------- @assignmentInstructionForGeneration
            var_s = GALGAS_string ("s") ;
          }
          //-------- @messageInstructionForGeneration
          inCompiler->printMessage (GALGAS_string ("  ROM size: ").operator_concat (var_piccoloDeviceModel.reader_mRomSize (SOURCE_FILE_AT_LINE (140)).reader_uint (SOURCE_FILE_AT_LINE (140)).reader_string (SOURCE_FILE_AT_LINE (140)) COMMA_SOURCE_FILE_AT_LINE (140)).operator_concat (GALGAS_string (" instructions (") COMMA_SOURCE_FILE_AT_LINE (140)).operator_concat (var_pageCount.reader_string (SOURCE_FILE_AT_LINE (141)) COMMA_SOURCE_FILE_AT_LINE (141)).operator_concat (GALGAS_string (" page") COMMA_SOURCE_FILE_AT_LINE (141)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (141)).operator_concat (GALGAS_string (")\n") COMMA_SOURCE_FILE_AT_LINE (141)) COMMA_SOURCE_FILE_AT_LINE (140)) ;
          } break ;
        case GALGAS_processorType::kEnum_baseline: {
          //-------- @messageInstructionForGeneration
          inCompiler->printMessage (GALGAS_string ("  ROM size: ").operator_concat (var_piccoloDeviceModel.reader_mRomSize (SOURCE_FILE_AT_LINE (143)).reader_uint (SOURCE_FILE_AT_LINE (143)).reader_string (SOURCE_FILE_AT_LINE (143)) COMMA_SOURCE_FILE_AT_LINE (143)).operator_concat (GALGAS_string (" instructions\n") COMMA_SOURCE_FILE_AT_LINE (143)) COMMA_SOURCE_FILE_AT_LINE (143)) ;
          } break ;
        }
      }
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_18 = GALGAS_bool (kIsEqual, var_piccoloDeviceModel.reader_mEepromSize (SOURCE_FILE_AT_LINE (145)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
      if (kBoolTrue == test_18) {
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (GALGAS_string ("  No EEPROM\n") COMMA_SOURCE_FILE_AT_LINE (146)) ;
      }else if (kBoolFalse == test_18) {
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (GALGAS_string ("  EEPROM size: ").operator_concat (var_piccoloDeviceModel.reader_mEepromSize (SOURCE_FILE_AT_LINE (148)).reader_string (SOURCE_FILE_AT_LINE (148)) COMMA_SOURCE_FILE_AT_LINE (148)).operator_concat (GALGAS_string (" bytes (at ") COMMA_SOURCE_FILE_AT_LINE (148)).operator_concat (var_piccoloDeviceModel.reader_mEepromAddress (SOURCE_FILE_AT_LINE (149)).reader_hexString (SOURCE_FILE_AT_LINE (149)) COMMA_SOURCE_FILE_AT_LINE (149)).operator_concat (GALGAS_string (")\n") COMMA_SOURCE_FILE_AT_LINE (149)) COMMA_SOURCE_FILE_AT_LINE (148)) ;
      }
    }else if (kBoolFalse == test_15) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("The ").operator_concat (var_deviceForMemoryDescription COMMA_SOURCE_FILE_AT_LINE (152)).operator_concat (GALGAS_string (" device is not supported or does not exist") COMMA_SOURCE_FILE_AT_LINE (152)) COMMA_SOURCE_FILE_AT_LINE (152)) ;
    }
  }
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_deviceForRegistersDescription = GALGAS_string (gOption_piccolo_5F_options_registerDescription.reader_value ()) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_19 = GALGAS_bool (kIsStrictSup, var_deviceForRegistersDescription.reader_length (SOURCE_FILE_AT_LINE (157)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_19) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_devicePath = GALGAS_string ("/").operator_concat (var_deviceForRegistersDescription COMMA_SOURCE_FILE_AT_LINE (158)).operator_concat (GALGAS_string (".piccoloDevice") COMMA_SOURCE_FILE_AT_LINE (158)) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_20 = GALGAS_filewrapper (gWrapperDirectory_0_embeddedDevices).reader_fileExistsAtPath (var_devicePath, inCompiler COMMA_SOURCE_FILE_AT_LINE (159)).boolEnum () ;
    if (kBoolTrue == test_20) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_piccoloDeviceModel var_piccoloDeviceModel ;
      { //-------- @routineCallInstructionForGeneration
      routine_parseDeviceDefinition (GALGAS_lstring::constructor_new (var_deviceForRegistersDescription, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (161)), var_piccoloDeviceModel, inCompiler COMMA_SOURCE_FILE_AT_LINE (161)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @messageInstructionForGeneration
      inCompiler->printMessage (var_deviceForRegistersDescription.operator_concat (GALGAS_string (" has ") COMMA_SOURCE_FILE_AT_LINE (162)).operator_concat (var_piccoloDeviceModel.reader_mRegisterTable (SOURCE_FILE_AT_LINE (162)).reader_count (SOURCE_FILE_AT_LINE (162)).reader_string (SOURCE_FILE_AT_LINE (162)) COMMA_SOURCE_FILE_AT_LINE (162)).operator_concat (GALGAS_string (" special registers:\n") COMMA_SOURCE_FILE_AT_LINE (162)) COMMA_SOURCE_FILE_AT_LINE (162)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_registerTable enumerator_7428 (var_piccoloDeviceModel.reader_mRegisterTable (SOURCE_FILE_AT_LINE (163)), kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_7428.hasCurrentObject ()) {
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_string var_s = GALGAS_string ("  '").operator_concat (enumerator_7428.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (164)) COMMA_SOURCE_FILE_AT_LINE (164)).operator_concat (GALGAS_string ("' at ") COMMA_SOURCE_FILE_AT_LINE (164)) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_uintlist enumerator_7522 (enumerator_7428.current_mRegisterAddressList (HERE), kEnumeration_up) ;
        //--- simple foreach instruction
        while (enumerator_7522.hasCurrentObject ()) {
          //-------- @concatInstructionForGeneration
          var_s.dotAssign_operation (enumerator_7522.current_mValue (HERE).reader_hexString (SOURCE_FILE_AT_LINE (166)) COMMA_SOURCE_FILE_AT_LINE (166)) ;
          if (enumerator_7522.hasNextObject ()) {
            //-------- @concatInstructionForGeneration
            var_s.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (167)) ;
          }
          enumerator_7522.gotoNextObject () ;
        }
        //-------- @concatInstructionForGeneration
        var_s.dotAssign_operation (enumerator_7428.current_mBitDefinitionString (HERE).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (169)) COMMA_SOURCE_FILE_AT_LINE (169)) ;
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (var_s COMMA_SOURCE_FILE_AT_LINE (170)) ;
        enumerator_7428.gotoNextObject () ;
      }
    }else if (kBoolFalse == test_20) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("The ").operator_concat (var_deviceForRegistersDescription COMMA_SOURCE_FILE_AT_LINE (173)).operator_concat (GALGAS_string (" device is not supported or does not exist") COMMA_SOURCE_FILE_AT_LINE (173)) COMMA_SOURCE_FILE_AT_LINE (173)) ;
    }
  }
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_deviceForConfigDescription = GALGAS_string (gOption_piccolo_5F_options_configDescription.reader_value ()) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_21 = GALGAS_bool (kIsStrictSup, var_deviceForConfigDescription.reader_length (SOURCE_FILE_AT_LINE (178)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_21) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_devicePath = GALGAS_string ("/").operator_concat (var_deviceForConfigDescription COMMA_SOURCE_FILE_AT_LINE (179)).operator_concat (GALGAS_string (".piccoloDevice") COMMA_SOURCE_FILE_AT_LINE (179)) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_22 = GALGAS_filewrapper (gWrapperDirectory_0_embeddedDevices).reader_fileExistsAtPath (var_devicePath, inCompiler COMMA_SOURCE_FILE_AT_LINE (180)).boolEnum () ;
    if (kBoolTrue == test_22) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_piccoloDeviceModel var_piccoloDeviceModel ;
      { //-------- @routineCallInstructionForGeneration
      routine_parseDeviceDefinition (GALGAS_lstring::constructor_new (var_deviceForConfigDescription, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (182)), var_piccoloDeviceModel, inCompiler COMMA_SOURCE_FILE_AT_LINE (182)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @messageInstructionForGeneration
      inCompiler->printMessage (var_deviceForConfigDescription.operator_concat (GALGAS_string (" has ") COMMA_SOURCE_FILE_AT_LINE (183)).operator_concat (var_piccoloDeviceModel.reader_mConfigRegisterMap (SOURCE_FILE_AT_LINE (183)).reader_count (SOURCE_FILE_AT_LINE (183)).reader_string (SOURCE_FILE_AT_LINE (183)) COMMA_SOURCE_FILE_AT_LINE (183)).operator_concat (GALGAS_string (" configuration registers:\n") COMMA_SOURCE_FILE_AT_LINE (183)) COMMA_SOURCE_FILE_AT_LINE (183)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_configRegisterMap enumerator_8544 (var_piccoloDeviceModel.reader_mConfigRegisterMap (SOURCE_FILE_AT_LINE (184)), kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_8544.hasCurrentObject ()) {
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_string var_s = GALGAS_string ("REGISTER '").operator_concat (enumerator_8544.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (185)) COMMA_SOURCE_FILE_AT_LINE (185)).operator_concat (GALGAS_string ("' at ") COMMA_SOURCE_FILE_AT_LINE (185)).operator_concat (enumerator_8544.current_mRegisterAddress (HERE).reader_uint (SOURCE_FILE_AT_LINE (185)).reader_hexString (SOURCE_FILE_AT_LINE (185)) COMMA_SOURCE_FILE_AT_LINE (185)).operator_concat (GALGAS_string (", width ") COMMA_SOURCE_FILE_AT_LINE (185)).operator_concat (enumerator_8544.current_mRegisterWidth (HERE).reader_uint (SOURCE_FILE_AT_LINE (185)).reader_string (SOURCE_FILE_AT_LINE (185)) COMMA_SOURCE_FILE_AT_LINE (185)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (185)) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_illegalMaskList enumerator_8724 (enumerator_8544.current_mIllegalMaskList (HERE), kEnumeration_up) ;
        //--- simple foreach instruction
        while (enumerator_8724.hasCurrentObject ()) {
          //-------- @concatInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string ("  illegal value ").operator_concat (enumerator_8724.current_mIllegalValue (HERE).reader_uint (SOURCE_FILE_AT_LINE (187)).reader_hexString (SOURCE_FILE_AT_LINE (187)) COMMA_SOURCE_FILE_AT_LINE (187)).operator_concat (GALGAS_string (" mask ") COMMA_SOURCE_FILE_AT_LINE (187)).operator_concat (enumerator_8724.current_mIllegalMask (HERE).reader_uint (SOURCE_FILE_AT_LINE (187)).reader_hexString (SOURCE_FILE_AT_LINE (187)) COMMA_SOURCE_FILE_AT_LINE (187)).operator_concat (GALGAS_string (" description \"") COMMA_SOURCE_FILE_AT_LINE (187)).operator_concat (enumerator_8724.current_mDescription (HERE).reader_string (SOURCE_FILE_AT_LINE (187)) COMMA_SOURCE_FILE_AT_LINE (187)).operator_concat (GALGAS_string ("\"\n") COMMA_SOURCE_FILE_AT_LINE (187)) COMMA_SOURCE_FILE_AT_LINE (187)) ;
          enumerator_8724.gotoNextObject () ;
        }
        //-------- @foreachInstructionForGeneration
        cEnumerator_configRegisterMaskMap enumerator_8956 (enumerator_8544.current_mConfigRegisterMaskMap (HERE), kEnumeration_up) ;
        //--- simple foreach instruction
        while (enumerator_8956.hasCurrentObject ()) {
          //-------- @concatInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string ("  setting '").operator_concat (enumerator_8956.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (190)) COMMA_SOURCE_FILE_AT_LINE (190)).operator_concat (GALGAS_string ("': mask ") COMMA_SOURCE_FILE_AT_LINE (190)).operator_concat (enumerator_8956.current_mMaskValue (HERE).reader_uint (SOURCE_FILE_AT_LINE (190)).reader_hexString (SOURCE_FILE_AT_LINE (190)) COMMA_SOURCE_FILE_AT_LINE (190)).operator_concat (GALGAS_string (" description \"") COMMA_SOURCE_FILE_AT_LINE (190)).operator_concat (enumerator_8956.current_mDescription (HERE).reader_string (SOURCE_FILE_AT_LINE (190)) COMMA_SOURCE_FILE_AT_LINE (190)).operator_concat (GALGAS_string ("\"\n") COMMA_SOURCE_FILE_AT_LINE (190)) COMMA_SOURCE_FILE_AT_LINE (190)) ;
          //-------- @foreachInstructionForGeneration
          cEnumerator_fieldSettingMap enumerator_9168 (enumerator_8956.current_mFieldSettingMap (HERE), kEnumeration_up) ;
          //--- simple foreach instruction
          while (enumerator_9168.hasCurrentObject ()) {
            //-------- @concatInstructionForGeneration
            var_s.dotAssign_operation (GALGAS_string ("    value ").operator_concat (enumerator_9168.current_mValue (HERE).reader_hexString (SOURCE_FILE_AT_LINE (192)) COMMA_SOURCE_FILE_AT_LINE (192)).operator_concat (GALGAS_string (" description \"") COMMA_SOURCE_FILE_AT_LINE (192)).operator_concat (enumerator_9168.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (192)) COMMA_SOURCE_FILE_AT_LINE (192)).operator_concat (GALGAS_string ("\"\n") COMMA_SOURCE_FILE_AT_LINE (192)) COMMA_SOURCE_FILE_AT_LINE (192)) ;
            enumerator_9168.gotoNextObject () ;
          }
          enumerator_8956.gotoNextObject () ;
        }
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (var_s COMMA_SOURCE_FILE_AT_LINE (195)) ;
        enumerator_8544.gotoNextObject () ;
      }
    }else if (kBoolFalse == test_22) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("The ").operator_concat (var_deviceForConfigDescription COMMA_SOURCE_FILE_AT_LINE (198)).operator_concat (GALGAS_string (" device is not supported or does not exist") COMMA_SOURCE_FILE_AT_LINE (198)) COMMA_SOURCE_FILE_AT_LINE (198)) ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'programRule_0'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_programRule_5F__30_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @grammarInstructionWithSourceFileForGeneration
  cGrammar_pic_31__38__5F_grammar::_performSourceFileParsing_ (inCompiler, constinArgument_inSourceFile COMMA_SOURCE_FILE_AT_LINE (208)) ;
  } //-------- END @grammarInstructionWithSourceFileForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                              Routine 'after'                              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_after (C_Compiler * /* inCompiler */
                    COMMA_UNUSED_LOCATION_ARGS) {
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


