//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'piccolo_program.cpp'                         *
//             Generated by version version GALGAS_BETA_VERSION              *
//                    november 14th, 2010, at 16h59'40"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "piccolo_program.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/F_DisplayException.h"
#include "utilities/basic-allocation.h"
#include "utilities/cpp-allocation.h"
#include "command_line_interface/mainForLIBPM.h"
#include "command_line_interface/F_Analyze_CLI_Options.h"
#include "command_line_interface/C_builtin_CLI_Options.h"

//---------------------------------------------------------------------------*

#include "piccoloDevice_grammar.h"
#include "piccolo_options.h"
#include "piccolo_grammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "piccolo_program.gProgram", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                      M A I N    F O R    L I B P M                        *
//                                                                           *
//---------------------------------------------------------------------------*

int mainForLIBPM  (const int argc, const char * argv []) {
  bool verboseOptionOn = true ;
  PMSInt16 returnCode = 0 ; // No error
  {
  //--- Input/output parameters
    const char * extensions [] = {
      "piccolo",
      NULL
    } ;    
    const char * helpMessages [] = {
      "a source text file with the .piccolo extension",
      NULL
    } ;    
    TC_UniqueArray <C_String> sourceFilesArray ;
  //--- Analyze Command Line Options
    F_Analyze_CLI_Options (argc, argv,
      #ifndef DO_NOT_GENERATE_CHECKINGS
        "version " "version PICCOLO_BETA_VERSION" " [debug]",
      #else
        "version " "version PICCOLO_BETA_VERSION",
      #endif
                           sourceFilesArray,
                           extensions,
                           helpMessages) ;
  //--- Build galgas io object
    C_galgas_io * galgasIOptr = NULL ;
    macroMyNew (galgasIOptr, C_galgas_io (HERE)) ;
  //--- Common lexique object
    C_Compiler * commonLexique = NULL ;
    macroMyNew (commonLexique, C_Compiler (NULL, "", "", galgasIOptr COMMA_HERE)) ;
  //--- Ask Save On Close ? (Carbon and Windows SIOUX Only)
    #ifdef SIOUX_IS_IMPLEMENTED
      SIOUXSettings.asktosaveonclose = gOption_generic_5F_cli_5F_options_options_asktosaveonclose.mValue ;
    #endif
  //--- Enable 64 bit alloc debug ? Only if compiled in 64 bit and in debug mode
    #ifndef DO_NOT_GENERATE_CHECKINGS
      #ifdef __LP64__
        if (gOption_generic_5F_cli_5F_options_enable_5F_allocation_5F_debugging.mValue) {
          enableAllocDebugFor64BitTool () ;
        }
      #endif
    #endif
    try{
      verboseOptionOn = gOption_galgas_5F_cli_5F_options_verbose_5F_output.mValue ;
      routine_before (commonLexique COMMA_HERE) ;
      for (PMSInt32 i=0 ; i<sourceFilesArray.count () ; i++) {
        const C_String fileExtension = sourceFilesArray (i COMMA_HERE).pathExtension () ;
        const GALGAS_string sfp = GALGAS_string (sourceFilesArray (i COMMA_HERE)) ;
        const GALGAS_location location = commonLexique->here () ;
        const GALGAS_lstring sourceFilePath (sfp, location) ;
        PMSInt16 r = 0 ;
        if (fileExtension == "piccolo") {
          routine_programRule_5F__30_ (sourceFilePath, commonLexique COMMA_HERE) ;
        }else{
          printf ("*** Error: unhandled extension for file '%s' ***\n", sourceFilesArray (i COMMA_HERE).cString (HERE)) ;
          r = 1 ;
        }
        if (r != 0) {
          returnCode = r ;
        }
      }
    //--- Error or warnings ?
      if (commonLexique->totalErrorCount () > 0) {
        returnCode = 1 ; // Error code
      }else if (commonLexique->totalWarningCount () > 0) {
        if (gOption_galgas_5F_cli_5F_options_treat_5F_warnings_5F_as_5F_error.mValue) {
          returnCode = 1 ; // Error code
          if (verboseOptionOn) {
            printf ("** Note: warnings are treated as errors. **\n") ;
          }
        }
      }
    //--- Epilogue
      routine_after (commonLexique COMMA_HERE) ;
    }catch (const M_STD_NAMESPACE exception & e) {
      F_default_display_exception (e) ;
      returnCode = 1 ; // Error code
    }catch (...) {
      throw ;
    }
    macroDetachSharedObject (galgasIOptr) ;
    macroDetachSharedObject (commonLexique) ;
  }
  return returnCode ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                             Routine 'before'                              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_before (C_Compiler * inCompiler
                     COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (gOption_piccolo_5F_options_outputDeviceList.reader_value ()).operator_or (GALGAS_bool (gOption_piccolo_5F_options_outputPic_31__38_DeviceList.reader_value ()) COMMA_SOURCE_FILE_AT_LINE (15)).operator_or (GALGAS_bool (gOption_piccolo_5F_options_outputBaselineDeviceList.reader_value ()) COMMA_SOURCE_FILE_AT_LINE (16)).operator_or (GALGAS_bool (gOption_piccolo_5F_options_outputMidrangeDeviceList.reader_value ()) COMMA_SOURCE_FILE_AT_LINE (17)).isValidAndTrue ()) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_stringlist var_allDevices = GALGAS_filewrapper (gWrapperDirectory_0_embeddedDevices).reader_allFilePathes (SOURCE_FILE_AT_LINE (19)) ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_stringlist var_pic_31__38__5F_devices = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (20)) ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_stringlist var_midrange_5F_devices = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (21)) ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_stringlist var_baseline_5F_devices = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (22)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_bool var_ok = GALGAS_bool (true) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_stringlist enumerator_1043 (var_allDevices, true) ;
    //--- complex foreach instruction
    bool bool_0 = var_ok.isValidAndTrue () ;
    if (enumerator_1043.hasCurrentObject () && bool_0) {
      while (enumerator_1043.hasCurrentObject () && bool_0) {
        //-------- @localVariableDeclarationForGeneration
        GALGAS_piccoloDeviceModel var_piccoloDeviceModel ;
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_string var_name = enumerator_1043.current_mValue (HERE).reader_lastPathComponent (SOURCE_FILE_AT_LINE (27)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (27)) ;
        { //-------- @routineCallInstructionForGeneration
        routine_parseDeviceDefinition (GALGAS_lstring::constructor_new (var_name, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (28)), var_piccoloDeviceModel, inCompiler COMMA_SOURCE_FILE_AT_LINE (28)) ;
        } //-------- @routineCallInstructionForGeneration
        //------- @switchInstructionForGeneration
        if (var_piccoloDeviceModel.reader_mProcessorType (SOURCE_FILE_AT_LINE (29)).isValid ()) {
          switch (var_piccoloDeviceModel.reader_mProcessorType (SOURCE_FILE_AT_LINE (29)).enumValue ()) {
          case GALGAS_processorType::kNotBuilt:
            break ;
          case GALGAS_processorType::kEnum_pic_31__38__5F__36__30_: case GALGAS_processorType::kEnum_pic_31__38__5F__38__30_: {
            //-------- @addAssignInstructionForGeneration
            var_pic_31__38__5F_devices.addAssign_operation (var_name COMMA_SOURCE_FILE_AT_LINE (30)) ;
            } break ;
          case GALGAS_processorType::kEnum_midrange: {
            //-------- @addAssignInstructionForGeneration
            var_midrange_5F_devices.addAssign_operation (var_name COMMA_SOURCE_FILE_AT_LINE (31)) ;
            //-------- @ifInstructionForGeneration
            if (GALGAS_bool (kIsStrictSup, var_piccoloDeviceModel.reader_mBankCount (SOURCE_FILE_AT_LINE (32)).reader_uint (SOURCE_FILE_AT_LINE (32)).objectCompare (GALGAS_uint ((PMUInt32) 4U))).isValidAndTrue ()) {
              //-------- @messageInstructionForGeneration
              inCompiler->printMessage (var_name.operator_concat (GALGAS_string (" has ") COMMA_SOURCE_FILE_AT_LINE (33)).operator_concat (var_piccoloDeviceModel.reader_mBankCount (SOURCE_FILE_AT_LINE (33)).reader_uint (SOURCE_FILE_AT_LINE (33)).reader_string (SOURCE_FILE_AT_LINE (33)) COMMA_SOURCE_FILE_AT_LINE (33)).operator_concat (GALGAS_string (" banks\n") COMMA_SOURCE_FILE_AT_LINE (33)) COMMA_SOURCE_FILE_AT_LINE (33)) ;
            }
            } break ;
          case GALGAS_processorType::kEnum_baseline: {
            //-------- @addAssignInstructionForGeneration
            var_baseline_5F_devices.addAssign_operation (var_name COMMA_SOURCE_FILE_AT_LINE (35)) ;
            } break ;
          }
        }
        enumerator_1043.gotoNextObject () ;
        if (enumerator_1043.hasCurrentObject ()) {
          bool_0 = var_ok.isValidAndTrue () ;
        }
      }
    }
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (gOption_piccolo_5F_options_outputDeviceList.reader_value ()).operator_or (GALGAS_bool (gOption_piccolo_5F_options_outputBaselineDeviceList.reader_value ()) COMMA_SOURCE_FILE_AT_LINE (49)).isValidAndTrue ()) {
      //-------- @messageInstructionForGeneration
      inCompiler->printMessage (var_baseline_5F_devices.reader_length (SOURCE_FILE_AT_LINE (50)).reader_string (SOURCE_FILE_AT_LINE (50)).operator_concat (GALGAS_string (" baseline devices (not yet supported by Piccolo ") COMMA_SOURCE_FILE_AT_LINE (50)).operator_concat (GALGAS_string::constructor_stringWithVersionString (SOURCE_FILE_AT_LINE (50)) COMMA_SOURCE_FILE_AT_LINE (50)).operator_concat (GALGAS_string ("):\n") COMMA_SOURCE_FILE_AT_LINE (50)) COMMA_SOURCE_FILE_AT_LINE (50)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_uint var_idx = GALGAS_uint ((PMUInt32) 0U) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_stringlist enumerator_2390 (var_baseline_5F_devices, true) ;
      //--- simple foreach instruction
      while (enumerator_2390.hasCurrentObject ()) {
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (enumerator_2390.current_mValue (HERE).reader_stringByRightPadding (GALGAS_uint ((PMUInt32) 15U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (53)) COMMA_SOURCE_FILE_AT_LINE (53)) ;
        //-------- @incrementInstructionForGeneration
        var_idx.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (54)) ;
        //-------- @ifInstructionForGeneration
        if (GALGAS_bool (kIsEqual, var_idx.objectCompare (GALGAS_uint ((PMUInt32) 5U))).isValidAndTrue ()) {
          //-------- @assignmentInstructionForGeneration
          var_idx = GALGAS_uint ((PMUInt32) 0U) ;
          //-------- @messageInstructionForGeneration
          inCompiler->printMessage (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (57)) ;
        }
        enumerator_2390.gotoNextObject () ;
      }
      //-------- @ifInstructionForGeneration
      if (GALGAS_bool (kIsNotEqual, var_idx.objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (61)) ;
      }
    }
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (gOption_piccolo_5F_options_outputDeviceList.reader_value ()).operator_or (GALGAS_bool (gOption_piccolo_5F_options_outputMidrangeDeviceList.reader_value ()) COMMA_SOURCE_FILE_AT_LINE (65)).isValidAndTrue ()) {
      //-------- @messageInstructionForGeneration
      inCompiler->printMessage (var_midrange_5F_devices.reader_length (SOURCE_FILE_AT_LINE (66)).reader_string (SOURCE_FILE_AT_LINE (66)).operator_concat (GALGAS_string (" mid-range devices supported by Piccolo ") COMMA_SOURCE_FILE_AT_LINE (66)).operator_concat (GALGAS_string::constructor_stringWithVersionString (SOURCE_FILE_AT_LINE (66)) COMMA_SOURCE_FILE_AT_LINE (66)).operator_concat (GALGAS_string (":\n") COMMA_SOURCE_FILE_AT_LINE (66)) COMMA_SOURCE_FILE_AT_LINE (66)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_uint var_idx = GALGAS_uint ((PMUInt32) 0U) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_stringlist enumerator_2996 (var_midrange_5F_devices, true) ;
      //--- simple foreach instruction
      while (enumerator_2996.hasCurrentObject ()) {
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (enumerator_2996.current_mValue (HERE).reader_stringByRightPadding (GALGAS_uint ((PMUInt32) 15U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (69)) COMMA_SOURCE_FILE_AT_LINE (69)) ;
        //-------- @incrementInstructionForGeneration
        var_idx.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (70)) ;
        //-------- @ifInstructionForGeneration
        if (GALGAS_bool (kIsEqual, var_idx.objectCompare (GALGAS_uint ((PMUInt32) 5U))).isValidAndTrue ()) {
          //-------- @assignmentInstructionForGeneration
          var_idx = GALGAS_uint ((PMUInt32) 0U) ;
          //-------- @messageInstructionForGeneration
          inCompiler->printMessage (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (73)) ;
        }
        enumerator_2996.gotoNextObject () ;
      }
      //-------- @ifInstructionForGeneration
      if (GALGAS_bool (kIsNotEqual, var_idx.objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (77)) ;
      }
    }
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (gOption_piccolo_5F_options_outputDeviceList.reader_value ()).operator_or (GALGAS_bool (gOption_piccolo_5F_options_outputPic_31__38_DeviceList.reader_value ()) COMMA_SOURCE_FILE_AT_LINE (81)).isValidAndTrue ()) {
      //-------- @messageInstructionForGeneration
      inCompiler->printMessage (var_pic_31__38__5F_devices.reader_length (SOURCE_FILE_AT_LINE (82)).reader_string (SOURCE_FILE_AT_LINE (82)).operator_concat (GALGAS_string (" pic18 devices supported by Piccolo ") COMMA_SOURCE_FILE_AT_LINE (82)).operator_concat (GALGAS_string::constructor_stringWithVersionString (SOURCE_FILE_AT_LINE (82)) COMMA_SOURCE_FILE_AT_LINE (82)).operator_concat (GALGAS_string (":\n") COMMA_SOURCE_FILE_AT_LINE (82)) COMMA_SOURCE_FILE_AT_LINE (82)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_uint var_idx = GALGAS_uint ((PMUInt32) 0U) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_stringlist enumerator_3585 (var_pic_31__38__5F_devices, true) ;
      //--- simple foreach instruction
      while (enumerator_3585.hasCurrentObject ()) {
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (enumerator_3585.current_mValue (HERE).reader_stringByRightPadding (GALGAS_uint ((PMUInt32) 15U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (85)) COMMA_SOURCE_FILE_AT_LINE (85)) ;
        //-------- @incrementInstructionForGeneration
        var_idx.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (86)) ;
        //-------- @ifInstructionForGeneration
        if (GALGAS_bool (kIsEqual, var_idx.objectCompare (GALGAS_uint ((PMUInt32) 5U))).isValidAndTrue ()) {
          //-------- @assignmentInstructionForGeneration
          var_idx = GALGAS_uint ((PMUInt32) 0U) ;
          //-------- @messageInstructionForGeneration
          inCompiler->printMessage (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (89)) ;
        }
        enumerator_3585.gotoNextObject () ;
      }
      //-------- @ifInstructionForGeneration
      if (GALGAS_bool (kIsNotEqual, var_idx.objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (93)) ;
      }
    }
  }
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsStrictSup, GALGAS_string (gOption_piccolo_5F_options_exportDeviceFiles.reader_value ()).reader_length (SOURCE_FILE_AT_LINE (99)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_dir = GALGAS_string (gOption_piccolo_5F_options_exportDeviceFiles.reader_value ()) ;
    //-------- @ifInstructionForGeneration
    if (var_dir.reader_directoryExists (SOURCE_FILE_AT_LINE (101)).operator_not (SOURCE_FILE_AT_LINE (101)).isValidAndTrue ()) {
      //-------- @methodCallInstructionForGeneration
      var_dir.method_makeDirectory (inCompiler COMMA_SOURCE_FILE_AT_LINE (102)) ;
      //-------- END @methodCallInstructionForGeneration
    }
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_filewrapper var_fw = GALGAS_filewrapper (gWrapperDirectory_0_embeddedDevices) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_stringlist var_allDevices = GALGAS_filewrapper (gWrapperDirectory_0_embeddedDevices).reader_allFilePathes (SOURCE_FILE_AT_LINE (105)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_stringlist enumerator_4320 (var_allDevices, true) ;
    //--- simple foreach instruction
    while (enumerator_4320.hasCurrentObject ()) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_definitionString = var_fw.reader_fileContentsAtPath (enumerator_4320.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (107)) ;
      //-------- @methodCallInstructionForGeneration
      var_definitionString.method_writeToFile (var_dir.operator_concat (enumerator_4320.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (108)), inCompiler COMMA_SOURCE_FILE_AT_LINE (108)) ;
      //-------- END @methodCallInstructionForGeneration
      enumerator_4320.gotoNextObject () ;
    }
    //-------- @messageInstructionForGeneration
    inCompiler->printMessage (var_allDevices.reader_length (SOURCE_FILE_AT_LINE (110)).reader_string (SOURCE_FILE_AT_LINE (110)).operator_concat (GALGAS_string (" devices copied in '") COMMA_SOURCE_FILE_AT_LINE (110)).operator_concat (var_dir COMMA_SOURCE_FILE_AT_LINE (110)).operator_concat (GALGAS_string ("' directory\n") COMMA_SOURCE_FILE_AT_LINE (110)) COMMA_SOURCE_FILE_AT_LINE (110)) ;
  }
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_deviceForMemoryDescription = GALGAS_string (gOption_piccolo_5F_options_memoryDescription.reader_value ()) ;
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsStrictSup, var_deviceForMemoryDescription.reader_length (SOURCE_FILE_AT_LINE (114)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_devicePath = GALGAS_string ("/").operator_concat (var_deviceForMemoryDescription COMMA_SOURCE_FILE_AT_LINE (115)).operator_concat (GALGAS_string (".piccoloDevice") COMMA_SOURCE_FILE_AT_LINE (115)) ;
    //-------- @ifInstructionForGeneration
    if (GALGAS_filewrapper (gWrapperDirectory_0_embeddedDevices).reader_fileExistsAtPath (var_devicePath, inCompiler COMMA_SOURCE_FILE_AT_LINE (116)).isValidAndTrue ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_piccoloDeviceModel var_piccoloDeviceModel ;
      { //-------- @routineCallInstructionForGeneration
      routine_parseDeviceDefinition (GALGAS_lstring::constructor_new (var_deviceForMemoryDescription, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (118)), var_piccoloDeviceModel, inCompiler COMMA_SOURCE_FILE_AT_LINE (118)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_uint var_totalRam = GALGAS_uint ((PMUInt32) 0U) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_ramBankTable enumerator_5155 (var_piccoloDeviceModel.reader_mRamBankTable (SOURCE_FILE_AT_LINE (120)), true) ;
      //--- simple foreach instruction
      while (enumerator_5155.hasCurrentObject ()) {
        //-------- @assignmentInstructionForGeneration
        var_totalRam = var_totalRam.add_operation (enumerator_5155.current_mLastAddressPlusOne (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (121)).substract_operation (enumerator_5155.current_mFirstFreeAddress (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (121)) ;
        enumerator_5155.gotoNextObject () ;
      }
      //-------- @messageInstructionForGeneration
      inCompiler->printMessage (var_deviceForMemoryDescription.operator_concat (GALGAS_string (" device:\n") COMMA_SOURCE_FILE_AT_LINE (123)) COMMA_SOURCE_FILE_AT_LINE (123)) ;
      //-------- @messageInstructionForGeneration
      inCompiler->printMessage (GALGAS_string ("  ").operator_concat (var_piccoloDeviceModel.reader_mRamBankTable (SOURCE_FILE_AT_LINE (124)).reader_count (SOURCE_FILE_AT_LINE (124)).reader_string (SOURCE_FILE_AT_LINE (124)) COMMA_SOURCE_FILE_AT_LINE (124)).operator_concat (GALGAS_string (" RAM banks (total ") COMMA_SOURCE_FILE_AT_LINE (124)).operator_concat (var_totalRam.reader_string (SOURCE_FILE_AT_LINE (124)) COMMA_SOURCE_FILE_AT_LINE (124)).operator_concat (GALGAS_string (" bytes):\n") COMMA_SOURCE_FILE_AT_LINE (124)) COMMA_SOURCE_FILE_AT_LINE (124)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_ramBankTable enumerator_5493 (var_piccoloDeviceModel.reader_mRamBankTable (SOURCE_FILE_AT_LINE (125)), true) ;
      //--- simple foreach instruction
      while (enumerator_5493.hasCurrentObject ()) {
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (GALGAS_string ("    bank \"").operator_concat (enumerator_5493.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (126)) COMMA_SOURCE_FILE_AT_LINE (126)).operator_concat (GALGAS_string ("\" from ") COMMA_SOURCE_FILE_AT_LINE (126)).operator_concat (enumerator_5493.current_mFirstFreeAddress (HERE).reader_hexString (SOURCE_FILE_AT_LINE (126)) COMMA_SOURCE_FILE_AT_LINE (126)).operator_concat (GALGAS_string (" to ") COMMA_SOURCE_FILE_AT_LINE (127)).operator_concat (enumerator_5493.current_mLastAddressPlusOne (HERE).substract_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (127)).reader_hexString (SOURCE_FILE_AT_LINE (127)) COMMA_SOURCE_FILE_AT_LINE (127)).operator_concat (GALGAS_string (" (") COMMA_SOURCE_FILE_AT_LINE (128)).operator_concat (enumerator_5493.current_mLastAddressPlusOne (HERE).substract_operation (enumerator_5493.current_mFirstFreeAddress (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (128)).reader_string (SOURCE_FILE_AT_LINE (128)) COMMA_SOURCE_FILE_AT_LINE (128)).operator_concat (GALGAS_string (" bytes)") COMMA_SOURCE_FILE_AT_LINE (128)) COMMA_SOURCE_FILE_AT_LINE (126)) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_uintlist enumerator_5755 (enumerator_5493.current_mMirrorOffsetList (HERE), true) ;
        //--- complex foreach instruction
        const bool bool_1 = true ;
        if (enumerator_5755.hasCurrentObject () && bool_1) {
          //-------- @messageInstructionForGeneration
          inCompiler->printMessage (GALGAS_string (", mirror at ") COMMA_SOURCE_FILE_AT_LINE (130)) ;
          while (enumerator_5755.hasCurrentObject () && bool_1) {
            //-------- @messageInstructionForGeneration
            inCompiler->printMessage (enumerator_5493.current_mFirstFreeAddress (HERE).add_operation (enumerator_5755.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (131)).reader_hexString (SOURCE_FILE_AT_LINE (131)) COMMA_SOURCE_FILE_AT_LINE (131)) ;
            enumerator_5755.gotoNextObject () ;
            if (enumerator_5755.hasCurrentObject () && bool_1) {
              //-------- @messageInstructionForGeneration
              inCompiler->printMessage (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (132)) ;
            }
          }
        }
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (134)) ;
        enumerator_5493.gotoNextObject () ;
      }
      //------- @switchInstructionForGeneration
      if (var_piccoloDeviceModel.reader_mProcessorType (SOURCE_FILE_AT_LINE (136)).isValid ()) {
        switch (var_piccoloDeviceModel.reader_mProcessorType (SOURCE_FILE_AT_LINE (136)).enumValue ()) {
        case GALGAS_processorType::kNotBuilt:
          break ;
        case GALGAS_processorType::kEnum_pic_31__38__5F__36__30_: case GALGAS_processorType::kEnum_pic_31__38__5F__38__30_: {
          //-------- @messageInstructionForGeneration
          inCompiler->printMessage (GALGAS_string ("  ROM size: ").operator_concat (var_piccoloDeviceModel.reader_mRomSize (SOURCE_FILE_AT_LINE (138)).reader_uint (SOURCE_FILE_AT_LINE (138)).reader_string (SOURCE_FILE_AT_LINE (138)) COMMA_SOURCE_FILE_AT_LINE (138)).operator_concat (GALGAS_string (" bytes\n") COMMA_SOURCE_FILE_AT_LINE (138)) COMMA_SOURCE_FILE_AT_LINE (138)) ;
          } break ;
        case GALGAS_processorType::kEnum_midrange: {
          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
          GALGAS_uint var_pageCount = var_piccoloDeviceModel.reader_mRomSize (SOURCE_FILE_AT_LINE (140)).reader_uint (SOURCE_FILE_AT_LINE (140)).add_operation (GALGAS_uint ((PMUInt32) 2047U), inCompiler COMMA_SOURCE_FILE_AT_LINE (140)).divide_operation (GALGAS_uint ((PMUInt32) 2048U), inCompiler COMMA_SOURCE_FILE_AT_LINE (140)) ;
          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
          GALGAS_string var_s = GALGAS_string ("") ;
          //-------- @ifInstructionForGeneration
          if (GALGAS_bool (kIsStrictSup, var_pageCount.objectCompare (GALGAS_uint ((PMUInt32) 1U))).isValidAndTrue ()) {
            //-------- @assignmentInstructionForGeneration
            var_s = GALGAS_string ("s") ;
          }
          //-------- @messageInstructionForGeneration
          inCompiler->printMessage (GALGAS_string ("  ROM size: ").operator_concat (var_piccoloDeviceModel.reader_mRomSize (SOURCE_FILE_AT_LINE (145)).reader_uint (SOURCE_FILE_AT_LINE (145)).reader_string (SOURCE_FILE_AT_LINE (145)) COMMA_SOURCE_FILE_AT_LINE (145)).operator_concat (GALGAS_string (" instructions (") COMMA_SOURCE_FILE_AT_LINE (145)).operator_concat (var_pageCount.reader_string (SOURCE_FILE_AT_LINE (146)) COMMA_SOURCE_FILE_AT_LINE (146)).operator_concat (GALGAS_string (" page") COMMA_SOURCE_FILE_AT_LINE (146)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (146)).operator_concat (GALGAS_string (")\n") COMMA_SOURCE_FILE_AT_LINE (146)) COMMA_SOURCE_FILE_AT_LINE (145)) ;
          } break ;
        case GALGAS_processorType::kEnum_baseline: {
          //-------- @messageInstructionForGeneration
          inCompiler->printMessage (GALGAS_string ("  ROM size: ").operator_concat (var_piccoloDeviceModel.reader_mRomSize (SOURCE_FILE_AT_LINE (148)).reader_uint (SOURCE_FILE_AT_LINE (148)).reader_string (SOURCE_FILE_AT_LINE (148)) COMMA_SOURCE_FILE_AT_LINE (148)).operator_concat (GALGAS_string (" instructions\n") COMMA_SOURCE_FILE_AT_LINE (148)) COMMA_SOURCE_FILE_AT_LINE (148)) ;
          } break ;
        }
      }
      //-------- @ifInstructionForGeneration
      if (GALGAS_bool (kIsEqual, var_piccoloDeviceModel.reader_mEepromSize (SOURCE_FILE_AT_LINE (150)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (GALGAS_string ("  No EEPROM\n") COMMA_SOURCE_FILE_AT_LINE (151)) ;
      }else{
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (GALGAS_string ("  EEPROM size: ").operator_concat (var_piccoloDeviceModel.reader_mEepromSize (SOURCE_FILE_AT_LINE (153)).reader_string (SOURCE_FILE_AT_LINE (153)) COMMA_SOURCE_FILE_AT_LINE (153)).operator_concat (GALGAS_string (" bytes (at ") COMMA_SOURCE_FILE_AT_LINE (153)).operator_concat (var_piccoloDeviceModel.reader_mEepromAddress (SOURCE_FILE_AT_LINE (154)).reader_hexString (SOURCE_FILE_AT_LINE (154)) COMMA_SOURCE_FILE_AT_LINE (154)).operator_concat (GALGAS_string (")\n") COMMA_SOURCE_FILE_AT_LINE (154)) COMMA_SOURCE_FILE_AT_LINE (153)) ;
      }
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("The ").operator_concat (var_deviceForMemoryDescription COMMA_SOURCE_FILE_AT_LINE (157)).operator_concat (GALGAS_string (" device is not supported or does not exist") COMMA_SOURCE_FILE_AT_LINE (157)) COMMA_SOURCE_FILE_AT_LINE (157)) ;
    }
  }
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_deviceForRegistersDescription = GALGAS_string (gOption_piccolo_5F_options_registerDescription.reader_value ()) ;
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsStrictSup, var_deviceForRegistersDescription.reader_length (SOURCE_FILE_AT_LINE (162)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_devicePath = GALGAS_string ("/").operator_concat (var_deviceForRegistersDescription COMMA_SOURCE_FILE_AT_LINE (163)).operator_concat (GALGAS_string (".piccoloDevice") COMMA_SOURCE_FILE_AT_LINE (163)) ;
    //-------- @ifInstructionForGeneration
    if (GALGAS_filewrapper (gWrapperDirectory_0_embeddedDevices).reader_fileExistsAtPath (var_devicePath, inCompiler COMMA_SOURCE_FILE_AT_LINE (164)).isValidAndTrue ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_piccoloDeviceModel var_piccoloDeviceModel ;
      { //-------- @routineCallInstructionForGeneration
      routine_parseDeviceDefinition (GALGAS_lstring::constructor_new (var_deviceForRegistersDescription, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (166)), var_piccoloDeviceModel, inCompiler COMMA_SOURCE_FILE_AT_LINE (166)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @messageInstructionForGeneration
      inCompiler->printMessage (var_deviceForRegistersDescription.operator_concat (GALGAS_string (" has ") COMMA_SOURCE_FILE_AT_LINE (167)).operator_concat (var_piccoloDeviceModel.reader_mRegisterTable (SOURCE_FILE_AT_LINE (167)).reader_count (SOURCE_FILE_AT_LINE (167)).reader_string (SOURCE_FILE_AT_LINE (167)) COMMA_SOURCE_FILE_AT_LINE (167)).operator_concat (GALGAS_string (" special registers:\n") COMMA_SOURCE_FILE_AT_LINE (167)) COMMA_SOURCE_FILE_AT_LINE (167)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_registerTable enumerator_7740 (var_piccoloDeviceModel.reader_mRegisterTable (SOURCE_FILE_AT_LINE (168)), true) ;
      //--- simple foreach instruction
      while (enumerator_7740.hasCurrentObject ()) {
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_string var_s = GALGAS_string ("  '").operator_concat (enumerator_7740.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (169)) COMMA_SOURCE_FILE_AT_LINE (169)).operator_concat (GALGAS_string ("' at ") COMMA_SOURCE_FILE_AT_LINE (169)) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_uintlist enumerator_7834 (enumerator_7740.current_mRegisterAddressList (HERE), true) ;
        //--- simple foreach instruction
        while (enumerator_7834.hasCurrentObject ()) {
          //-------- @appendInstructionForGeneration
          var_s.dotAssign_operation (enumerator_7834.current_mValue (HERE).reader_hexString (SOURCE_FILE_AT_LINE (171)) COMMA_SOURCE_FILE_AT_LINE (171)) ;
          if (enumerator_7834.hasNextObject ()) {
            //-------- @appendInstructionForGeneration
            var_s.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (172)) ;
          }
          enumerator_7834.gotoNextObject () ;
        }
        //-------- @appendInstructionForGeneration
        var_s.dotAssign_operation (enumerator_7740.current_mBitDefinitionString (HERE).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (174)) COMMA_SOURCE_FILE_AT_LINE (174)) ;
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (var_s COMMA_SOURCE_FILE_AT_LINE (175)) ;
        enumerator_7740.gotoNextObject () ;
      }
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("The ").operator_concat (var_deviceForRegistersDescription COMMA_SOURCE_FILE_AT_LINE (178)).operator_concat (GALGAS_string (" device is not supported or does not exist") COMMA_SOURCE_FILE_AT_LINE (178)) COMMA_SOURCE_FILE_AT_LINE (178)) ;
    }
  }
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_deviceForConfigDescription = GALGAS_string (gOption_piccolo_5F_options_configDescription.reader_value ()) ;
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsStrictSup, var_deviceForConfigDescription.reader_length (SOURCE_FILE_AT_LINE (183)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_devicePath = GALGAS_string ("/").operator_concat (var_deviceForConfigDescription COMMA_SOURCE_FILE_AT_LINE (184)).operator_concat (GALGAS_string (".piccoloDevice") COMMA_SOURCE_FILE_AT_LINE (184)) ;
    //-------- @ifInstructionForGeneration
    if (GALGAS_filewrapper (gWrapperDirectory_0_embeddedDevices).reader_fileExistsAtPath (var_devicePath, inCompiler COMMA_SOURCE_FILE_AT_LINE (185)).isValidAndTrue ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_piccoloDeviceModel var_piccoloDeviceModel ;
      { //-------- @routineCallInstructionForGeneration
      routine_parseDeviceDefinition (GALGAS_lstring::constructor_new (var_deviceForConfigDescription, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (187)), var_piccoloDeviceModel, inCompiler COMMA_SOURCE_FILE_AT_LINE (187)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @messageInstructionForGeneration
      inCompiler->printMessage (var_deviceForConfigDescription.operator_concat (GALGAS_string (" has ") COMMA_SOURCE_FILE_AT_LINE (188)).operator_concat (var_piccoloDeviceModel.reader_mConfigRegisterMap (SOURCE_FILE_AT_LINE (188)).reader_count (SOURCE_FILE_AT_LINE (188)).reader_string (SOURCE_FILE_AT_LINE (188)) COMMA_SOURCE_FILE_AT_LINE (188)).operator_concat (GALGAS_string (" configuration registers:\n") COMMA_SOURCE_FILE_AT_LINE (188)) COMMA_SOURCE_FILE_AT_LINE (188)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_configRegisterMap enumerator_8856 (var_piccoloDeviceModel.reader_mConfigRegisterMap (SOURCE_FILE_AT_LINE (189)), true) ;
      //--- simple foreach instruction
      while (enumerator_8856.hasCurrentObject ()) {
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_string var_s = GALGAS_string ("REGISTER '").operator_concat (enumerator_8856.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (190)) COMMA_SOURCE_FILE_AT_LINE (190)).operator_concat (GALGAS_string ("' at ") COMMA_SOURCE_FILE_AT_LINE (190)).operator_concat (enumerator_8856.current_mRegisterAddress (HERE).reader_uint (SOURCE_FILE_AT_LINE (190)).reader_hexString (SOURCE_FILE_AT_LINE (190)) COMMA_SOURCE_FILE_AT_LINE (190)).operator_concat (GALGAS_string (", width ") COMMA_SOURCE_FILE_AT_LINE (190)).operator_concat (enumerator_8856.current_mRegisterWidth (HERE).reader_uint (SOURCE_FILE_AT_LINE (190)).reader_string (SOURCE_FILE_AT_LINE (190)) COMMA_SOURCE_FILE_AT_LINE (190)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (190)) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_illegalMaskList enumerator_9036 (enumerator_8856.current_mIllegalMaskList (HERE), true) ;
        //--- simple foreach instruction
        while (enumerator_9036.hasCurrentObject ()) {
          //-------- @appendInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string ("  illegal value ").operator_concat (enumerator_9036.current_mIllegalValue (HERE).reader_uint (SOURCE_FILE_AT_LINE (192)).reader_hexString (SOURCE_FILE_AT_LINE (192)) COMMA_SOURCE_FILE_AT_LINE (192)).operator_concat (GALGAS_string (" mask ") COMMA_SOURCE_FILE_AT_LINE (192)).operator_concat (enumerator_9036.current_mIllegalMask (HERE).reader_uint (SOURCE_FILE_AT_LINE (192)).reader_hexString (SOURCE_FILE_AT_LINE (192)) COMMA_SOURCE_FILE_AT_LINE (192)).operator_concat (GALGAS_string (" description \"") COMMA_SOURCE_FILE_AT_LINE (192)).operator_concat (enumerator_9036.current_mDescription (HERE).reader_string (SOURCE_FILE_AT_LINE (192)) COMMA_SOURCE_FILE_AT_LINE (192)).operator_concat (GALGAS_string ("\"\n") COMMA_SOURCE_FILE_AT_LINE (192)) COMMA_SOURCE_FILE_AT_LINE (192)) ;
          enumerator_9036.gotoNextObject () ;
        }
        //-------- @foreachInstructionForGeneration
        cEnumerator_configRegisterMaskMap enumerator_9268 (enumerator_8856.current_mConfigRegisterMaskMap (HERE), true) ;
        //--- simple foreach instruction
        while (enumerator_9268.hasCurrentObject ()) {
          //-------- @appendInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string ("  setting '").operator_concat (enumerator_9268.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (195)) COMMA_SOURCE_FILE_AT_LINE (195)).operator_concat (GALGAS_string ("': mask ") COMMA_SOURCE_FILE_AT_LINE (195)).operator_concat (enumerator_9268.current_mMaskValue (HERE).reader_uint (SOURCE_FILE_AT_LINE (195)).reader_hexString (SOURCE_FILE_AT_LINE (195)) COMMA_SOURCE_FILE_AT_LINE (195)).operator_concat (GALGAS_string (" description \"") COMMA_SOURCE_FILE_AT_LINE (195)).operator_concat (enumerator_9268.current_mDescription (HERE).reader_string (SOURCE_FILE_AT_LINE (195)) COMMA_SOURCE_FILE_AT_LINE (195)).operator_concat (GALGAS_string ("\"\n") COMMA_SOURCE_FILE_AT_LINE (195)) COMMA_SOURCE_FILE_AT_LINE (195)) ;
          //-------- @foreachInstructionForGeneration
          cEnumerator_fieldSettingMap enumerator_9480 (enumerator_9268.current_mFieldSettingMap (HERE), true) ;
          //--- simple foreach instruction
          while (enumerator_9480.hasCurrentObject ()) {
            //-------- @appendInstructionForGeneration
            var_s.dotAssign_operation (GALGAS_string ("    value ").operator_concat (enumerator_9480.current_mValue (HERE).reader_hexString (SOURCE_FILE_AT_LINE (197)) COMMA_SOURCE_FILE_AT_LINE (197)).operator_concat (GALGAS_string (" description \"") COMMA_SOURCE_FILE_AT_LINE (197)).operator_concat (enumerator_9480.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (197)) COMMA_SOURCE_FILE_AT_LINE (197)).operator_concat (GALGAS_string ("\"\n") COMMA_SOURCE_FILE_AT_LINE (197)) COMMA_SOURCE_FILE_AT_LINE (197)) ;
            enumerator_9480.gotoNextObject () ;
          }
          enumerator_9268.gotoNextObject () ;
        }
        //-------- @messageInstructionForGeneration
        inCompiler->printMessage (var_s COMMA_SOURCE_FILE_AT_LINE (200)) ;
        enumerator_8856.gotoNextObject () ;
      }
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("The ").operator_concat (var_deviceForConfigDescription COMMA_SOURCE_FILE_AT_LINE (203)).operator_concat (GALGAS_string (" device is not supported or does not exist") COMMA_SOURCE_FILE_AT_LINE (203)) COMMA_SOURCE_FILE_AT_LINE (203)) ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'programRule_0'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_programRule_5F__30_ (const GALGAS_lstring constinArgument_inSourceFile,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  { //-------- @grammarInstructionWithSourceFileForGeneration
  cGrammar_piccolo_5F_grammar::_performSourceFileParsing_ (inCompiler, constinArgument_inSourceFile COMMA_SOURCE_FILE_AT_LINE (213)) ;
  } //-------- END @grammarInstructionWithSourceFileForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                              Routine 'after'                              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_after (C_Compiler * /* inCompiler */
                    COMMA_UNUSED_LOCATION_ARGS) {
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


