//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'piccolo_syntax.cpp'                          *
//             Generated by version version GALGAS_BETA_VERSION              *
//                    november 15th, 2010, at 20h31'10"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "piccolo_syntax.h"
#include "galgas2/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*

#include "piccoloDevice_grammar.h"
#include "piccolo_options.h"
#include "piccolo_grammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "piccolo_syntax.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_start_5F_symbol_i0_ (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_pic_31__38_) COMMA_SOURCE_FILE_AT_LINE (130)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_programName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (131)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_lstring var_deviceNameOrBootloaderReference ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_programKind var_programKind ;
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_0 (inCompiler)) {
  case 1: {
    //-------- @assignmentInstructionForGeneration
    var_programKind = GALGAS_programKind::constructor_regularProgram (SOURCE_FILE_AT_LINE (135)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_implements) COMMA_SOURCE_FILE_AT_LINE (137)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bootloader) COMMA_SOURCE_FILE_AT_LINE (138)) ;
    //-------- @assignmentInstructionForGeneration
    var_programKind = GALGAS_programKind::constructor_bootloaderProgram (SOURCE_FILE_AT_LINE (139)) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_uses) COMMA_SOURCE_FILE_AT_LINE (141)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bootloader) COMMA_SOURCE_FILE_AT_LINE (142)) ;
    //-------- @assignmentInstructionForGeneration
    var_programKind = GALGAS_programKind::constructor_userProgram (SOURCE_FILE_AT_LINE (143)) ;
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  var_deviceNameOrBootloaderReference = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (145)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (146)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_interruptDefinitionList var_interruptDefinitionList = GALGAS_interruptDefinitionList::constructor_emptyList (SOURCE_FILE_AT_LINE (147)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_routineDefinitionList var_routineDefinitionList = GALGAS_routineDefinitionList::constructor_emptyList (SOURCE_FILE_AT_LINE (148)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_ramDefinitionList var_ramDefinitionList = GALGAS_ramDefinitionList::constructor_emptyList (SOURCE_FILE_AT_LINE (149)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_configDefinitionList var_configDefinitionList = GALGAS_configDefinitionList::constructor_emptyList (SOURCE_FILE_AT_LINE (150)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_constantDefinitionList var_constantDefinitionList = GALGAS_constantDefinitionList::constructor_emptyList (SOURCE_FILE_AT_LINE (151)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_acceptDefaultConfiguration = GALGAS_bool (false) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_needsComputedGoto_32_ = GALGAS_bool (false) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_needsComputedGoto_34_ = GALGAS_bool (false) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_piccolo_5F_syntax_1 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mark) COMMA_SOURCE_FILE_AT_LINE (157)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (158)) ;
    } break ;
    case 3: {
      //-------- @nonterminalInstructionForGeneration
      nt_configuration_5F_definition_ (var_configDefinitionList, var_acceptDefaultConfiguration, inCompiler) ;
    } break ;
    case 4: {
      //-------- @nonterminalInstructionForGeneration
      nt_ram_5F_definition_ (var_ramDefinitionList, inCompiler) ;
    } break ;
    case 5: {
      //-------- @nonterminalInstructionForGeneration
      nt_constant_5F_definition_ (var_constantDefinitionList, inCompiler) ;
    } break ;
    case 6: {
      //-------- @nonterminalInstructionForGeneration
      nt_interrupt_5F_definition_ (var_interruptDefinitionList, var_needsComputedGoto_32_, var_needsComputedGoto_34_, inCompiler) ;
    } break ;
    case 7: {
      //-------- @nonterminalInstructionForGeneration
      nt_routine_5F_definition_ (var_routineDefinitionList, var_needsComputedGoto_32_, var_needsComputedGoto_34_, inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE_AT_LINE (178)) ;
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (inCompiler COMMA_SOURCE_FILE_AT_LINE (180)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_piccoloModel var_piccoloModel = GALGAS_piccoloModel::constructor_new (var_programName, var_programKind, var_deviceNameOrBootloaderReference, var_configDefinitionList, var_acceptDefaultConfiguration, var_ramDefinitionList, var_interruptDefinitionList, var_constantDefinitionList, var_routineDefinitionList, var_needsComputedGoto_32_, var_needsComputedGoto_34_, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (181)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_pic_31__38__5F_analyze (var_piccoloModel, GALGAS_string::constructor_stringWithSourceFilePath (inCompiler COMMA_SOURCE_FILE_AT_LINE (195)), inCompiler COMMA_SOURCE_FILE_AT_LINE (195)) ;
    } //-------- @routineCallInstructionForGeneration
  }else{
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_hexDestinationFile = GALGAS_string::constructor_stringWithSourceFilePath (inCompiler COMMA_SOURCE_FILE_AT_LINE (197)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (197)).operator_concat (GALGAS_string (".hex") COMMA_SOURCE_FILE_AT_LINE (197)) ;
    //-------- @ifInstructionForGeneration
    if (var_hexDestinationFile.reader_fileExists (SOURCE_FILE_AT_LINE (198)).isValidAndTrue ()) {
      { //-------- @typeMethodInstructionForGeneration
      GALGAS_string::class_method_deleteFile (var_hexDestinationFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (199)) ;
      } //-------- @routineCallInstructionForGeneration
    }
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_asmDestinationFile = GALGAS_string::constructor_stringWithSourceFilePath (inCompiler COMMA_SOURCE_FILE_AT_LINE (201)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (201)).operator_concat (GALGAS_string (".asm") COMMA_SOURCE_FILE_AT_LINE (201)) ;
    //-------- @ifInstructionForGeneration
    if (var_asmDestinationFile.reader_fileExists (SOURCE_FILE_AT_LINE (202)).isValidAndTrue ()) {
      { //-------- @typeMethodInstructionForGeneration
      GALGAS_string::class_method_deleteFile (var_asmDestinationFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (203)) ;
      } //-------- @routineCallInstructionForGeneration
    }
  }
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_start_5F_symbol_i0_importBootloaderSpecification (GALGAS_piccoloDeviceModel & outArgument_outPiccoloDeviceModel,
                                                                                                         GALGAS_uint & outArgument_outAccessBankSplitOffset,
                                                                                                         GALGAS_ramBankTable & outArgument_outRamBank,
                                                                                                         GALGAS_registerTable & outArgument_outRegisterTable,
                                                                                                         GALGAS_bootloaderReservedRAMmap & outArgument_outBootloaderReservedRAMmap,
                                                                                                         GALGAS_routineDeclarationList & outArgument_outBootloaderRoutineDeclarationList,
                                                                                                         GALGAS_routineDeclarationList & outArgument_outUserRoutineDeclarationList,
                                                                                                         GALGAS_luint & outArgument_outBootloaderReservedROMsize,
                                                                                                         C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outPiccoloDeviceModel.drop () ; // Release 'out' argument
  outArgument_outAccessBankSplitOffset.drop () ; // Release 'out' argument
  outArgument_outRamBank.drop () ; // Release 'out' argument
  outArgument_outRegisterTable.drop () ; // Release 'out' argument
  outArgument_outBootloaderReservedRAMmap.drop () ; // Release 'out' argument
  outArgument_outBootloaderRoutineDeclarationList.drop () ; // Release 'out' argument
  outArgument_outUserRoutineDeclarationList.drop () ; // Release 'out' argument
  outArgument_outBootloaderReservedROMsize.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_pic_31__38_) COMMA_SOURCE_FILE_AT_LINE (216)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_programName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (217)) ;
  //-------- @errorInstructionForGeneration
  GALGAS_location location_0 (var_programName.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_0, GALGAS_string ("this file does not define a bootloader specification") COMMA_SOURCE_FILE_AT_LINE (218)) ;
  outArgument_outPiccoloDeviceModel.drop () ; // Release error dropped variable
  outArgument_outAccessBankSplitOffset.drop () ; // Release error dropped variable
  outArgument_outRamBank.drop () ; // Release error dropped variable
  outArgument_outRegisterTable.drop () ; // Release error dropped variable
  outArgument_outBootloaderReservedRAMmap.drop () ; // Release error dropped variable
  outArgument_outBootloaderRoutineDeclarationList.drop () ; // Release error dropped variable
  outArgument_outUserRoutineDeclarationList.drop () ; // Release error dropped variable
  outArgument_outBootloaderReservedROMsize.drop () ; // Release error dropped variable
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_0 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_implements) COMMA_SOURCE_FILE_AT_LINE (226)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bootloader) COMMA_SOURCE_FILE_AT_LINE (227)) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_uses) COMMA_SOURCE_FILE_AT_LINE (229)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bootloader) COMMA_SOURCE_FILE_AT_LINE (230)) ;
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (232)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (233)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_1 = true ;
  while (repeatFlag_1) {
    switch (select_piccolo_5F_syntax_1 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mark) COMMA_SOURCE_FILE_AT_LINE (236)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (237)) ;
    } break ;
    case 3: {
      //-------- @nonterminalInstructionForGeneration
      nt_configuration_5F_definition_parse (inCompiler) ;
    } break ;
    case 4: {
      //-------- @nonterminalInstructionForGeneration
      nt_ram_5F_definition_parse (inCompiler) ;
    } break ;
    case 5: {
      //-------- @nonterminalInstructionForGeneration
      nt_constant_5F_definition_parse (inCompiler) ;
    } break ;
    case 6: {
      //-------- @nonterminalInstructionForGeneration
      nt_interrupt_5F_definition_parse (inCompiler) ;
    } break ;
    case 7: {
      //-------- @nonterminalInstructionForGeneration
      nt_routine_5F_definition_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_1 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE_AT_LINE (249)) ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_configuration_5F_definition_i1_ (GALGAS_configDefinitionList & ioArgument_ioConfigDefinitionList,
                                                                                        GALGAS_bool & ioArgument_ioAcceptDefaultConfiguration,
                                                                                        C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_configuration) COMMA_SOURCE_FILE_AT_LINE (259)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_defLocation = inCompiler->here () ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_configSettingList var_settingList = GALGAS_configSettingList::constructor_emptyList (SOURCE_FILE_AT_LINE (261)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (262)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_piccolo_5F_syntax_2 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_default) COMMA_SOURCE_FILE_AT_LINE (265)) ;
      //-------- @ifInstructionForGeneration
      if (ioArgument_ioAcceptDefaultConfiguration.isValidAndTrue ()) {
        //-------- @warningInstructionForGeneration
        inCompiler->emitSemanticWarning (inCompiler->here (), GALGAS_string ("'default' for configuration is already set") COMMA_SOURCE_FILE_AT_LINE (267)) ;
      }
      //-------- @assignmentInstructionForGeneration
      ioArgument_ioAcceptDefaultConfiguration = GALGAS_bool (true) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      GALGAS_lstring var_settingName = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (271)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (272)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_lstring var_settingValue ;
      //-------- @selectInstructionForGeneration
      switch (select_piccolo_5F_syntax_3 (inCompiler)) {
      case 1: {
        //-------- @terminalCheckInstructionForGeneration
        var_settingValue = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (275)) ;
      } break ;
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        var_settingValue = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (277)) ;
      } break ;
      default:
        break ;
      }
      //-------- @addAssignInstructionForGeneration
      var_settingList.addAssign_operation (var_settingName, var_settingValue COMMA_SOURCE_FILE_AT_LINE (279)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (281)) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioConfigDefinitionList.addAssign_operation (var_defLocation, var_settingList COMMA_SOURCE_FILE_AT_LINE (282)) ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_configuration_5F_definition_i1_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_configuration) COMMA_SOURCE_FILE_AT_LINE (259)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (262)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_piccolo_5F_syntax_2 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_default) COMMA_SOURCE_FILE_AT_LINE (265)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (271)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (272)) ;
      //-------- @selectInstructionForGeneration
      switch (select_piccolo_5F_syntax_3 (inCompiler)) {
      case 1: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (275)) ;
      } break ;
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (277)) ;
      } break ;
      default:
        break ;
      }
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (281)) ;
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_declaration_5F_in_5F_ram_i2_ (GALGAS_declarationInRam & outArgument_outDeclaration,
                                                                                     C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outDeclaration.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_byte) COMMA_SOURCE_FILE_AT_LINE (290)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_name = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (291)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_luint var_size ;
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_4 (inCompiler)) {
  case 1: {
    //-------- @assignmentInstructionForGeneration
    var_size = GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 1U), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (294)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (296)) ;
    //-------- @terminalCheckInstructionForGeneration
    var_size = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (297)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (298)) ;
  } break ;
  default:
    break ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_bitSliceTable var_bitSliceTable = GALGAS_bitSliceTable::constructor_emptyMap (SOURCE_FILE_AT_LINE (300)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_bitDefinitionString ;
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_5 (inCompiler)) {
  case 1: {
    //-------- @assignmentInstructionForGeneration
    var_bitDefinitionString = GALGAS_string ("") ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (305)) ;
    //-------- @assignmentInstructionForGeneration
    var_bitDefinitionString = GALGAS_string (" <") ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_sint var_sliceIndex = GALGAS_sint ((PMSInt32) 8L) ;
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      //-------- @selectInstructionForGeneration
      switch (select_piccolo_5F_syntax_7 (inCompiler)) {
      case 1: {
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_uint var_sliceWidth = GALGAS_uint ((PMUInt32) 0U) ;
        //-------- @repeatInstructionForGeneration
        bool repeatFlag_1 = true ;
        while (repeatFlag_1) {
          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
          GALGAS_uint var_sliceBase = GALGAS_uint ((PMUInt32) 0U) ;
          //-------- @ifInstructionForGeneration
          if (GALGAS_bool (kIsSupOrEqual, var_sliceIndex.objectCompare (GALGAS_sint ((PMSInt32) 0L))).isValidAndTrue ()) {
            //-------- @assignmentInstructionForGeneration
            var_sliceBase = var_sliceIndex.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (314)) ;
          }
          //-------- @terminalCheckInstructionForGeneration
          GALGAS_lstring var_sliceName = inCompiler->synthetizedAttribute_tokenString () ;
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (316)) ;
          //-------- @selectInstructionForGeneration
          switch (select_piccolo_5F_syntax_9 (inCompiler)) {
          case 1: {
            //-------- @ifInstructionForGeneration
            if (GALGAS_bool (kIsNotEqual, var_sliceWidth.objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (kIsNotEqual, var_sliceWidth.objectCompare (GALGAS_uint ((PMUInt32) 1U))) COMMA_SOURCE_FILE_AT_LINE (318)).isValidAndTrue ()) {
              //-------- @errorInstructionForGeneration
              GALGAS_location location_2 (var_sliceName.reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_2, GALGAS_string ("a slice of 1 bit is expected for '").operator_concat (var_sliceName.reader_string (SOURCE_FILE_AT_LINE (319)) COMMA_SOURCE_FILE_AT_LINE (319)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (319)) COMMA_SOURCE_FILE_AT_LINE (319)) ;
            }
            //-------- @assignmentInstructionForGeneration
            var_sliceWidth = GALGAS_uint ((PMUInt32) 1U) ;
            //-------- @appendInstructionForGeneration
            var_bitDefinitionString.dotAssign_operation (var_sliceName.reader_string (SOURCE_FILE_AT_LINE (322)) COMMA_SOURCE_FILE_AT_LINE (322)) ;
          } break ;
          case 2: {
            //-------- @terminalCheckInstructionForGeneration
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (324)) ;
            //-------- @terminalCheckInstructionForGeneration
            GALGAS_luint var_sliceSize = inCompiler->synthetizedAttribute_uint_33__32_value () ;
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (325)) ;
            //-------- @ifInstructionForGeneration
            if (GALGAS_bool (kIsNotEqual, var_sliceWidth.objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (kIsNotEqual, var_sliceWidth.objectCompare (var_sliceSize.reader_uint (SOURCE_FILE_AT_LINE (326)))) COMMA_SOURCE_FILE_AT_LINE (326)).isValidAndTrue ()) {
              //-------- @errorInstructionForGeneration
              GALGAS_location location_3 (var_sliceName.reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_3, GALGAS_string ("a slice of ").operator_concat (var_sliceWidth.reader_string (SOURCE_FILE_AT_LINE (327)) COMMA_SOURCE_FILE_AT_LINE (327)).operator_concat (GALGAS_string (" bits is expected for '") COMMA_SOURCE_FILE_AT_LINE (327)).operator_concat (var_sliceName.reader_string (SOURCE_FILE_AT_LINE (327)) COMMA_SOURCE_FILE_AT_LINE (327)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (327)) COMMA_SOURCE_FILE_AT_LINE (327)) ;
            }
            //-------- @assignmentInstructionForGeneration
            var_sliceWidth = var_sliceSize.reader_uint (SOURCE_FILE_AT_LINE (329)) ;
            //-------- @assignmentInstructionForGeneration
            var_sliceBase = var_sliceBase.add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (330)).substract_operation (var_sliceSize.reader_uint (SOURCE_FILE_AT_LINE (330)), inCompiler COMMA_SOURCE_FILE_AT_LINE (330)) ;
            //-------- @appendInstructionForGeneration
            var_bitDefinitionString.dotAssign_operation (var_sliceName.reader_string (SOURCE_FILE_AT_LINE (331)).operator_concat (GALGAS_string ("[") COMMA_SOURCE_FILE_AT_LINE (331)).operator_concat (var_sliceSize.reader_uint (SOURCE_FILE_AT_LINE (331)).reader_string (SOURCE_FILE_AT_LINE (331)) COMMA_SOURCE_FILE_AT_LINE (331)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (331)) COMMA_SOURCE_FILE_AT_LINE (331)) ;
            //-------- @terminalCheckInstructionForGeneration
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (332)) ;
          } break ;
          default:
            break ;
          }
          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
          GALGAS_uint var_base = GALGAS_uint ((PMUInt32) 0U) ;
          //-------- @ifInstructionForGeneration
          if (GALGAS_bool (kIsSupOrEqual, var_sliceIndex.objectCompare (var_sliceWidth.reader_sint (inCompiler COMMA_SOURCE_FILE_AT_LINE (335)))).isValidAndTrue ()) {
            //-------- @assignmentInstructionForGeneration
            var_base = var_sliceIndex.reader_uint (inCompiler COMMA_SOURCE_FILE_AT_LINE (336)).substract_operation (var_sliceWidth, inCompiler COMMA_SOURCE_FILE_AT_LINE (336)) ;
          }
          { //-------- @modifierCallInstructionForGeneration
          var_bitSliceTable.modifier_insertKey (var_sliceName, var_base, var_sliceWidth, inCompiler COMMA_SOURCE_FILE_AT_LINE (338)) ;
          } //-------- END @typeMethodInstructionForGeneration
          switch (select_piccolo_5F_syntax_8 (inCompiler)) {
          case 2: {
            //-------- @terminalCheckInstructionForGeneration
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2F_) COMMA_SOURCE_FILE_AT_LINE (340)) ;
            //-------- @appendInstructionForGeneration
            var_bitDefinitionString.dotAssign_operation (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (341)) ;
          } break ;
          default:
            repeatFlag_1 = false ;
            break ;
          }
        }
        //-------- @assignmentInstructionForGeneration
        var_sliceIndex = var_sliceIndex.substract_operation (var_sliceWidth.reader_sint (inCompiler COMMA_SOURCE_FILE_AT_LINE (343)), inCompiler COMMA_SOURCE_FILE_AT_LINE (343)) ;
      } break ;
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (345)) ;
        //-------- @appendInstructionForGeneration
        var_bitDefinitionString.dotAssign_operation (GALGAS_string ("-") COMMA_SOURCE_FILE_AT_LINE (346)) ;
        //-------- @decrementInstructionForGeneration
        var_sliceIndex.decrement_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (347)) ;
      } break ;
      default:
        break ;
      }
      switch (select_piccolo_5F_syntax_6 (inCompiler)) {
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (350)) ;
        //-------- @appendInstructionForGeneration
        var_bitDefinitionString.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (351)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (kIsNotEqual, var_sliceIndex.objectCompare (GALGAS_sint ((PMSInt32) 0L))).isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_4 (var_name.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, GALGAS_string ("Incorrect bit definition for register '").operator_concat (var_name.reader_string (SOURCE_FILE_AT_LINE (354)) COMMA_SOURCE_FILE_AT_LINE (354)).operator_concat (GALGAS_string ("': ") COMMA_SOURCE_FILE_AT_LINE (354)).operator_concat (GALGAS_sint ((PMSInt32) 8L).substract_operation (var_sliceIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (354)).reader_string (SOURCE_FILE_AT_LINE (354)) COMMA_SOURCE_FILE_AT_LINE (354)).operator_concat (GALGAS_string (" bits (s) are defined, instead of 8") COMMA_SOURCE_FILE_AT_LINE (354)) COMMA_SOURCE_FILE_AT_LINE (354)) ;
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (356)) ;
    //-------- @appendInstructionForGeneration
    var_bitDefinitionString.dotAssign_operation (GALGAS_string (">") COMMA_SOURCE_FILE_AT_LINE (357)) ;
  } break ;
  default:
    break ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outDeclaration = GALGAS_byteDeclarationInRam::constructor_new (var_name, var_size, var_bitSliceTable, var_bitDefinitionString COMMA_SOURCE_FILE_AT_LINE (359)) ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_declaration_5F_in_5F_ram_i2_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_byte) COMMA_SOURCE_FILE_AT_LINE (290)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (291)) ;
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_4 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (296)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (297)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (298)) ;
  } break ;
  default:
    break ;
  }
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_5 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (305)) ;
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      //-------- @selectInstructionForGeneration
      switch (select_piccolo_5F_syntax_7 (inCompiler)) {
      case 1: {
        //-------- @repeatInstructionForGeneration
        bool repeatFlag_1 = true ;
        while (repeatFlag_1) {
          //-------- @terminalCheckInstructionForGeneration
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (316)) ;
          //-------- @selectInstructionForGeneration
          switch (select_piccolo_5F_syntax_9 (inCompiler)) {
          case 1: {
          } break ;
          case 2: {
            //-------- @terminalCheckInstructionForGeneration
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (324)) ;
            //-------- @terminalCheckInstructionForGeneration
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (325)) ;
            //-------- @terminalCheckInstructionForGeneration
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (332)) ;
          } break ;
          default:
            break ;
          }
          switch (select_piccolo_5F_syntax_8 (inCompiler)) {
          case 2: {
            //-------- @terminalCheckInstructionForGeneration
            inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2F_) COMMA_SOURCE_FILE_AT_LINE (340)) ;
          } break ;
          default:
            repeatFlag_1 = false ;
            break ;
          }
        }
      } break ;
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (345)) ;
      } break ;
      default:
        break ;
      }
      switch (select_piccolo_5F_syntax_6 (inCompiler)) {
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (350)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (356)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_declaration_5F_in_5F_ram_i3_ (GALGAS_declarationInRam & outArgument_outDeclaration,
                                                                                     C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outDeclaration.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_common) COMMA_SOURCE_FILE_AT_LINE (367)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_commonBranchList var_commonBranchList = GALGAS_commonBranchList::constructor_emptyList (SOURCE_FILE_AT_LINE (368)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_declarationInRamList var_declarationInRamList = GALGAS_declarationInRamList::constructor_emptyList (SOURCE_FILE_AT_LINE (370)) ;
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_1 = true ;
    while (repeatFlag_1) {
      switch (select_piccolo_5F_syntax_11 (inCompiler)) {
      case 2: {
        //-------- @localVariableDeclarationForGeneration
        GALGAS_declarationInRam var_declaration ;
        //-------- @nonterminalInstructionForGeneration
        nt_declaration_5F_in_5F_ram_ (var_declaration, inCompiler) ;
        //-------- @addAssignInstructionForGeneration
        var_declarationInRamList.addAssign_operation (var_declaration COMMA_SOURCE_FILE_AT_LINE (375)) ;
      } break ;
      default:
        repeatFlag_1 = false ;
        break ;
      }
    }
    //-------- @addAssignInstructionForGeneration
    var_commonBranchList.addAssign_operation (var_declarationInRamList, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (377)) ;
    switch (select_piccolo_5F_syntax_10 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE_AT_LINE (379)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outDeclaration = GALGAS_commonDeclarationInRam::constructor_new (var_commonBranchList COMMA_SOURCE_FILE_AT_LINE (381)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE_AT_LINE (382)) ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_declaration_5F_in_5F_ram_i3_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_common) COMMA_SOURCE_FILE_AT_LINE (367)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_1 = true ;
    while (repeatFlag_1) {
      switch (select_piccolo_5F_syntax_11 (inCompiler)) {
      case 2: {
        //-------- @nonterminalInstructionForGeneration
        nt_declaration_5F_in_5F_ram_parse (inCompiler) ;
      } break ;
      default:
        repeatFlag_1 = false ;
        break ;
      }
    }
    switch (select_piccolo_5F_syntax_10 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE_AT_LINE (379)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE_AT_LINE (382)) ;
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_ram_5F_definition_i4_ (GALGAS_ramDefinitionList & ioArgument_ioRamDefinitionList,
                                                                              C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ram) COMMA_SOURCE_FILE_AT_LINE (390)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_bankName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (391)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (392)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_declarationInRamList var_declarationInRamList = GALGAS_declarationInRamList::constructor_emptyList (SOURCE_FILE_AT_LINE (393)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_piccolo_5F_syntax_12 (inCompiler)) {
    case 2: {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_declarationInRam var_declaration ;
      //-------- @nonterminalInstructionForGeneration
      nt_declaration_5F_in_5F_ram_ (var_declaration, inCompiler) ;
      //-------- @addAssignInstructionForGeneration
      var_declarationInRamList.addAssign_operation (var_declaration COMMA_SOURCE_FILE_AT_LINE (398)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioRamDefinitionList.addAssign_operation (var_bankName, var_declarationInRamList COMMA_SOURCE_FILE_AT_LINE (400)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (401)) ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_ram_5F_definition_i4_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ram) COMMA_SOURCE_FILE_AT_LINE (390)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (391)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (392)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_piccolo_5F_syntax_12 (inCompiler)) {
    case 2: {
      //-------- @nonterminalInstructionForGeneration
      nt_declaration_5F_in_5F_ram_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (401)) ;
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_constant_5F_definition_i5_ (GALGAS_constantDefinitionList & ioArgument_ioConstantDefinitionList,
                                                                                   C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_const) COMMA_SOURCE_FILE_AT_LINE (409)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_constantName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (410)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE_AT_LINE (411)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_immediatExpression var_expression ;
  //-------- @nonterminalInstructionForGeneration
  nt_immediate_5F_expression_ (var_expression, inCompiler) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioConstantDefinitionList.addAssign_operation (var_constantName, var_expression COMMA_SOURCE_FILE_AT_LINE (414)) ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_constant_5F_definition_i5_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_const) COMMA_SOURCE_FILE_AT_LINE (409)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (410)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D_) COMMA_SOURCE_FILE_AT_LINE (411)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_immediate_5F_expression_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_instruction_5F_list_i6_ (GALGAS_instructionList & outArgument_outInstructionList,
                                                                                GALGAS_bool & ioArgument_ioNeedsComputedGoto_32_,
                                                                                GALGAS_bool & ioArgument_ioNeedsComputedGoto_34_,
                                                                                C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outInstructionList.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outInstructionList = GALGAS_instructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (424)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_piccolo_5F_syntax_13 (inCompiler)) {
    case 2: {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_piccolo_5F_instruction var_instruction ;
      //-------- @nonterminalInstructionForGeneration
      nt_simple_5F_instruction_ (var_instruction, inCompiler) ;
      //-------- @addAssignInstructionForGeneration
      outArgument_outInstructionList.addAssign_operation (var_instruction COMMA_SOURCE_FILE_AT_LINE (429)) ;
    } break ;
    case 3: {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_piccolo_5F_instruction var_instruction ;
      //-------- @nonterminalInstructionForGeneration
      nt_structured_5F_instruction_ (var_instruction, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
      //-------- @addAssignInstructionForGeneration
      outArgument_outInstructionList.addAssign_operation (var_instruction COMMA_SOURCE_FILE_AT_LINE (437)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_instruction_5F_list_i6_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_piccolo_5F_syntax_13 (inCompiler)) {
    case 2: {
      //-------- @nonterminalInstructionForGeneration
      nt_simple_5F_instruction_parse (inCompiler) ;
    } break ;
    case 3: {
      //-------- @nonterminalInstructionForGeneration
      nt_structured_5F_instruction_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_interrupt_5F_definition_i7_ (GALGAS_interruptDefinitionList & ioArgument_ioInterruptDefinitionList,
                                                                                    GALGAS_bool & ioArgument_ioNeedsComputedGoto_32_,
                                                                                    GALGAS_bool & ioArgument_ioNeedsComputedGoto_34_,
                                                                                    C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_interrupt) COMMA_SOURCE_FILE_AT_LINE (448)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_interruptName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (449)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_bool var_isFast ;
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_14 (inCompiler)) {
  case 1: {
    //-------- @assignmentInstructionForGeneration
    var_isFast = GALGAS_bool (false) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_fast) COMMA_SOURCE_FILE_AT_LINE (454)) ;
    //-------- @assignmentInstructionForGeneration
    var_isFast = GALGAS_bool (true) ;
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (457)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_instructionList var_instructionList ;
  //-------- @nonterminalInstructionForGeneration
  nt_instruction_5F_list_ (var_instructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (464)) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioInterruptDefinitionList.addAssign_operation (var_interruptName, var_isFast, var_instructionList, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (465)) ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_interrupt_5F_definition_i7_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_interrupt) COMMA_SOURCE_FILE_AT_LINE (448)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (449)) ;
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_14 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_fast) COMMA_SOURCE_FILE_AT_LINE (454)) ;
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (457)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_instruction_5F_list_parse (inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (464)) ;
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_routine_5F_definition_i8_ (GALGAS_routineDefinitionList & ioArgument_ioRoutineDefinitionList,
                                                                                  GALGAS_bool & ioArgument_ioNeedsComputedGoto_32_,
                                                                                  GALGAS_bool & ioArgument_ioNeedsComputedGoto_34_,
                                                                                  C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @localVariableDeclarationForGeneration
  GALGAS_bool var_noreturn ;
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_15 (inCompiler)) {
  case 1: {
    //-------- @assignmentInstructionForGeneration
    var_noreturn = GALGAS_bool (false) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_noreturn) COMMA_SOURCE_FILE_AT_LINE (479)) ;
    //-------- @assignmentInstructionForGeneration
    var_noreturn = GALGAS_bool (true) ;
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE_AT_LINE (482)) ;
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_routineName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (483)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_luint var_requiredBank ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_luint var_returnedBank ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_bool var_preservesBank ;
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_16 (inCompiler)) {
  case 1: {
    //-------- @assignmentInstructionForGeneration
    var_requiredBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (488)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (488)) ;
    //-------- @assignmentInstructionForGeneration
    var_returnedBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (489)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (489)) ;
    //-------- @assignmentInstructionForGeneration
    var_preservesBank = GALGAS_bool (false) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bank) COMMA_SOURCE_FILE_AT_LINE (492)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (493)) ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_17 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_preserved) COMMA_SOURCE_FILE_AT_LINE (495)) ;
      //-------- @ifInstructionForGeneration
      if (var_noreturn.isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("a \"noreturn\" routine cannot accept \"bank:preserved\" setting") COMMA_SOURCE_FILE_AT_LINE (497)) ;
      }
      //-------- @assignmentInstructionForGeneration
      var_preservesBank = GALGAS_bool (true) ;
      //-------- @assignmentInstructionForGeneration
      var_requiredBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (500)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (500)) ;
      //-------- @assignmentInstructionForGeneration
      var_returnedBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (501)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (501)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_requires) COMMA_SOURCE_FILE_AT_LINE (503)) ;
      //-------- @terminalCheckInstructionForGeneration
      var_requiredBank = inCompiler->synthetizedAttribute_uint_33__32_value () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (504)) ;
      //-------- @assignmentInstructionForGeneration
      var_preservesBank = GALGAS_bool (false) ;
      //-------- @selectInstructionForGeneration
      switch (select_piccolo_5F_syntax_18 (inCompiler)) {
      case 1: {
        //-------- @assignmentInstructionForGeneration
        var_returnedBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (507)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (507)) ;
      } break ;
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE_AT_LINE (509)) ;
        //-------- @terminalCheckInstructionForGeneration
        var_returnedBank = inCompiler->synthetizedAttribute_uint_33__32_value () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (510)) ;
        //-------- @ifInstructionForGeneration
        if (var_noreturn.isValidAndTrue ()) {
          //-------- @errorInstructionForGeneration
          inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("a \"noreturn\" routine cannot accept \"bank:returned\" setting") COMMA_SOURCE_FILE_AT_LINE (512)) ;
        }
      } break ;
      default:
        break ;
      }
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE_AT_LINE (516)) ;
      //-------- @terminalCheckInstructionForGeneration
      var_returnedBank = inCompiler->synthetizedAttribute_uint_33__32_value () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (517)) ;
      //-------- @ifInstructionForGeneration
      if (var_noreturn.isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (inCompiler->here (), GALGAS_string ("a \"noreturn\" routine cannot accept \"bank:returned\" setting") COMMA_SOURCE_FILE_AT_LINE (519)) ;
      }
      //-------- @assignmentInstructionForGeneration
      var_preservesBank = GALGAS_bool (false) ;
      //-------- @assignmentInstructionForGeneration
      var_requiredBank = GALGAS_luint::constructor_new (GALGAS_uint::constructor_max (SOURCE_FILE_AT_LINE (522)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (522)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (525)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_instructionList var_instructionList ;
  //-------- @nonterminalInstructionForGeneration
  nt_instruction_5F_list_ (var_instructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (532)) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioRoutineDefinitionList.addAssign_operation (var_routineName, var_requiredBank, var_returnedBank, var_preservesBank, var_noreturn, var_instructionList, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (533)) ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_routine_5F_definition_i8_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_15 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_noreturn) COMMA_SOURCE_FILE_AT_LINE (479)) ;
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_routine) COMMA_SOURCE_FILE_AT_LINE (482)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (483)) ;
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_16 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bank) COMMA_SOURCE_FILE_AT_LINE (492)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (493)) ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_17 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_preserved) COMMA_SOURCE_FILE_AT_LINE (495)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_requires) COMMA_SOURCE_FILE_AT_LINE (503)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (504)) ;
      //-------- @selectInstructionForGeneration
      switch (select_piccolo_5F_syntax_18 (inCompiler)) {
      case 1: {
      } break ;
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE_AT_LINE (509)) ;
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (510)) ;
      } break ;
      default:
        break ;
      }
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_ensures) COMMA_SOURCE_FILE_AT_LINE (516)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (517)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7B_) COMMA_SOURCE_FILE_AT_LINE (525)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_instruction_5F_list_parse (inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7D_) COMMA_SOURCE_FILE_AT_LINE (532)) ;
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_register_5F_parsing_i9_ (GALGAS_registerExpression & outArgument_outRegisterExpression,
                                                                                C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outRegisterExpression.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_registerName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (539)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_luint var_offset ;
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_19 (inCompiler)) {
  case 1: {
    //-------- @assignmentInstructionForGeneration
    var_offset = GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (542)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (544)) ;
    //-------- @terminalCheckInstructionForGeneration
    var_offset = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (545)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (546)) ;
  } break ;
  default:
    break ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outRegisterExpression = GALGAS_registerExpression::constructor_new (var_registerName, var_offset COMMA_SOURCE_FILE_AT_LINE (548)) ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_register_5F_parsing_i9_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (539)) ;
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_19 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (544)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (545)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (546)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_bit_5F_number_5F_parsing_i10_ (GALGAS_bitNumberExpression & outArgument_outBitNumber,
                                                                                      C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outBitNumber.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_bitNumberLabel = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (557)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_luint var_bitIndex ;
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_20 (inCompiler)) {
  case 1: {
    //-------- @assignmentInstructionForGeneration
    var_bitIndex = GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (560)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (562)) ;
    //-------- @terminalCheckInstructionForGeneration
    var_bitIndex = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (563)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (564)) ;
  } break ;
  default:
    break ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outBitNumber = GALGAS_bitNumberLabelValue::constructor_new (var_bitNumberLabel, var_bitIndex COMMA_SOURCE_FILE_AT_LINE (566)) ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_bit_5F_number_5F_parsing_i10_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (557)) ;
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_20 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (562)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (563)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (564)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_bit_5F_number_5F_parsing_i11_ (GALGAS_bitNumberExpression & outArgument_outBitNumber,
                                                                                      C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outBitNumber.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_luint var_bitNumberLiteral = inCompiler->synthetizedAttribute_uint_33__32_value () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (572)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outBitNumber = GALGAS_bitNumberLiteralValue::constructor_new (var_bitNumberLiteral COMMA_SOURCE_FILE_AT_LINE (573)) ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_bit_5F_number_5F_parsing_i11_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (572)) ;
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_optional_5F_w_5F_as_5F_dest_i12_ (GALGAS_bool & outArgument_out_5F_W_5F_isDestination,
                                                                                         C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_out_5F_W_5F_isDestination.drop () ; // Release 'out' argument
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_21 (inCompiler)) {
  case 1: {
    //-------- @assignmentInstructionForGeneration
    outArgument_out_5F_W_5F_isDestination = GALGAS_bool (false) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (582)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (583)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_out_5F_W_5F_isDestination = GALGAS_bool (true) ;
  } break ;
  default:
    break ;
  }
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_optional_5F_w_5F_as_5F_dest_i12_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_21 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (582)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (583)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_condition_5F_factor_i13_ (GALGAS_conditionExpression & outArgument_outCondition,
                                                                                 C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE_AT_LINE (593)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_conditionExpression var_condition ;
  //-------- @nonterminalInstructionForGeneration
  nt_condition_5F_factor_ (var_condition, inCompiler) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outCondition = GALGAS_negateCondition::constructor_new (var_condition COMMA_SOURCE_FILE_AT_LINE (596)) ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_condition_5F_factor_i13_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE_AT_LINE (593)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_condition_5F_factor_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_condition_5F_factor_i14_ (GALGAS_conditionExpression & outArgument_outCondition,
                                                                                 C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_condition_5F_expression_ (outArgument_outCondition, inCompiler) ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_condition_5F_factor_i14_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_condition_5F_expression_parse (inCompiler) ;
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_condition_5F_factor_i15_ (GALGAS_conditionExpression & outArgument_outCondition,
                                                                                 C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_22 (inCompiler)) {
  case 1: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_isIncrement ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_23 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE_AT_LINE (615)) ;
      //-------- @assignmentInstructionForGeneration
      var_isIncrement = GALGAS_bool (true) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE_AT_LINE (617)) ;
      //-------- @assignmentInstructionForGeneration
      var_isIncrement = GALGAS_bool (false) ;
    } break ;
    default:
      break ;
    }
    //-------- @localVariableDeclarationForGeneration
    GALGAS_registerExpression var_registerExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_W_5F_isDestination ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_24 (inCompiler)) {
    case 1: {
      //-------- @assignmentInstructionForGeneration
      var_W_5F_isDestination = GALGAS_bool (false) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (625)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (625)) ;
      //-------- @assignmentInstructionForGeneration
      var_W_5F_isDestination = GALGAS_bool (true) ;
    } break ;
    default:
      break ;
    }
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (627)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE_AT_LINE (628)).reader_uppercaseString (SOURCE_FILE_AT_LINE (628)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_branchIfZero ;
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("Z"))).isValidAndTrue ()) {
      //-------- @assignmentInstructionForGeneration
      var_branchIfZero = GALGAS_bool (true) ;
    }else{
      //-------- @ifInstructionForGeneration
      if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).isValidAndTrue ()) {
        //-------- @assignmentInstructionForGeneration
        var_branchIfZero = GALGAS_bool (false) ;
      }else{
        //-------- @errorInstructionForGeneration
        GALGAS_location location_0 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_0, GALGAS_string ("invalid '").operator_concat (var_conditionString.reader_string (SOURCE_FILE_AT_LINE (635)) COMMA_SOURCE_FILE_AT_LINE (635)).operator_concat (GALGAS_string ("' condition; valid ones are: 'z' and 'nz'") COMMA_SOURCE_FILE_AT_LINE (636)) COMMA_SOURCE_FILE_AT_LINE (635)) ;
        var_branchIfZero.drop () ; // Release error dropped variable
      }
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outCondition = GALGAS_incDecRegisterInCondition::constructor_new (var_registerExpression, var_isIncrement, var_W_5F_isDestination, var_branchIfZero COMMA_SOURCE_FILE_AT_LINE (640)) ;
  } break ;
  case 2: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_registerExpression var_registerExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_registerComparison var_comparison ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_25 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21__3D_) COMMA_SOURCE_FILE_AT_LINE (651)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (651)) ;
      //-------- @assignmentInstructionForGeneration
      var_comparison = GALGAS_registerComparison::constructor_notEqual (SOURCE_FILE_AT_LINE (651)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D__3D_) COMMA_SOURCE_FILE_AT_LINE (653)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (653)) ;
      //-------- @assignmentInstructionForGeneration
      var_comparison = GALGAS_registerComparison::constructor_equal (SOURCE_FILE_AT_LINE (653)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3D_) COMMA_SOURCE_FILE_AT_LINE (655)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (655)) ;
      //-------- @assignmentInstructionForGeneration
      var_comparison = GALGAS_registerComparison::constructor_lowerOrEqual (SOURCE_FILE_AT_LINE (655)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3D_) COMMA_SOURCE_FILE_AT_LINE (657)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (657)) ;
      //-------- @assignmentInstructionForGeneration
      var_comparison = GALGAS_registerComparison::constructor_greaterOrEqual (SOURCE_FILE_AT_LINE (657)) ;
    } break ;
    case 5: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (659)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (659)) ;
      //-------- @assignmentInstructionForGeneration
      var_comparison = GALGAS_registerComparison::constructor_lower (SOURCE_FILE_AT_LINE (659)) ;
    } break ;
    case 6: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (661)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (661)) ;
      //-------- @assignmentInstructionForGeneration
      var_comparison = GALGAS_registerComparison::constructor_greater (SOURCE_FILE_AT_LINE (661)) ;
    } break ;
    default:
      break ;
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outCondition = GALGAS_registerComparisonCondition::constructor_new (var_registerExpression, var_comparison COMMA_SOURCE_FILE_AT_LINE (663)) ;
  } break ;
  case 3: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_registerExpression var_registerExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_ (var_registerExpression, inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (670)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bitNumberExpression var_bitNumberExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_bit_5F_number_5F_parsing_ (var_bitNumberExpression, inCompiler) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_BTFSSinstruction ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_26 (inCompiler)) {
    case 1: {
      //-------- @assignmentInstructionForGeneration
      var_BTFSSinstruction = GALGAS_bool (false) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (677)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE_AT_LINE (678)).reader_uppercaseString (SOURCE_FILE_AT_LINE (678)) ;
      //-------- @ifInstructionForGeneration
      if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("Z"))).isValidAndTrue ()) {
        //-------- @assignmentInstructionForGeneration
        var_BTFSSinstruction = GALGAS_bool (true) ;
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_string var_s = GALGAS_string ("! ").operator_concat (var_registerExpression.reader_mRegisterName (SOURCE_FILE_AT_LINE (681)).reader_string (SOURCE_FILE_AT_LINE (681)) COMMA_SOURCE_FILE_AT_LINE (681)) ;
        //-------- @ifInstructionForGeneration
        if (GALGAS_bool (kIsStrictSup, var_registerExpression.reader_mOffset (SOURCE_FILE_AT_LINE (682)).reader_uint (SOURCE_FILE_AT_LINE (682)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
          //-------- @appendInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string (" [").operator_concat (var_registerExpression.reader_mOffset (SOURCE_FILE_AT_LINE (683)).reader_uint (SOURCE_FILE_AT_LINE (683)).reader_string (SOURCE_FILE_AT_LINE (683)) COMMA_SOURCE_FILE_AT_LINE (683)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (683)) COMMA_SOURCE_FILE_AT_LINE (683)) ;
        }
        //-------- @appendInstructionForGeneration
        var_s.dotAssign_operation (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (685)) ;
        //-------- @methodCallInstructionForGeneration
        var_bitNumberExpression.method_display (var_s, inCompiler COMMA_SOURCE_FILE_AT_LINE (685)) ;
        //-------- END @methodCallInstructionForGeneration
        //-------- @warningInstructionForGeneration
        GALGAS_location location_1 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticWarning (location_1, GALGAS_string ("In Piccolo 1.2.0 and later, this construction is deprecated; use '").operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (686)).operator_concat (GALGAS_string ("' instead") COMMA_SOURCE_FILE_AT_LINE (686)) COMMA_SOURCE_FILE_AT_LINE (686)) ;
      }else{
        //-------- @ifInstructionForGeneration
        if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).isValidAndTrue ()) {
          //-------- @assignmentInstructionForGeneration
          var_BTFSSinstruction = GALGAS_bool (false) ;
          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
          GALGAS_string var_s = var_registerExpression.reader_mRegisterName (SOURCE_FILE_AT_LINE (689)).reader_string (SOURCE_FILE_AT_LINE (689)) ;
          //-------- @ifInstructionForGeneration
          if (GALGAS_bool (kIsStrictSup, var_registerExpression.reader_mOffset (SOURCE_FILE_AT_LINE (690)).reader_uint (SOURCE_FILE_AT_LINE (690)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
            //-------- @appendInstructionForGeneration
            var_s.dotAssign_operation (GALGAS_string (" [").operator_concat (var_registerExpression.reader_mOffset (SOURCE_FILE_AT_LINE (691)).reader_uint (SOURCE_FILE_AT_LINE (691)).reader_string (SOURCE_FILE_AT_LINE (691)) COMMA_SOURCE_FILE_AT_LINE (691)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (691)) COMMA_SOURCE_FILE_AT_LINE (691)) ;
          }
          //-------- @appendInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (693)) ;
          //-------- @methodCallInstructionForGeneration
          var_bitNumberExpression.method_display (var_s, inCompiler COMMA_SOURCE_FILE_AT_LINE (693)) ;
          //-------- END @methodCallInstructionForGeneration
          //-------- @warningInstructionForGeneration
          GALGAS_location location_2 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticWarning (location_2, GALGAS_string ("In Piccolo 1.2.0 and later, this construction is deprecated; use '").operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (694)).operator_concat (GALGAS_string ("' instead") COMMA_SOURCE_FILE_AT_LINE (694)) COMMA_SOURCE_FILE_AT_LINE (694)) ;
        }else{
          //-------- @errorInstructionForGeneration
          GALGAS_location location_3 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_3, GALGAS_string ("invalid '").operator_concat (var_conditionString.reader_string (SOURCE_FILE_AT_LINE (696)) COMMA_SOURCE_FILE_AT_LINE (696)).operator_concat (GALGAS_string ("' condition; valid ones are: 'z' and 'nz'") COMMA_SOURCE_FILE_AT_LINE (697)) COMMA_SOURCE_FILE_AT_LINE (696)) ;
          var_BTFSSinstruction.drop () ; // Release error dropped variable
        }
      }
    } break ;
    default:
      break ;
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outCondition = GALGAS_bitTest_5F_in_5F_structured_5F_if_5F_condition::constructor_new (var_registerExpression, var_bitNumberExpression, var_BTFSSinstruction COMMA_SOURCE_FILE_AT_LINE (702)) ;
  } break ;
  case 4: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_registerExpression var_registerName ;
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_ (var_registerName, inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (710)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE_AT_LINE (711)).reader_uppercaseString (SOURCE_FILE_AT_LINE (711)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_branchIfZero ;
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("Z"))).isValidAndTrue ()) {
      //-------- @assignmentInstructionForGeneration
      var_branchIfZero = GALGAS_bool (true) ;
    }else{
      //-------- @ifInstructionForGeneration
      if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).isValidAndTrue ()) {
        //-------- @assignmentInstructionForGeneration
        var_branchIfZero = GALGAS_bool (false) ;
      }else{
        //-------- @errorInstructionForGeneration
        GALGAS_location location_4 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_4, GALGAS_string ("invalid '").operator_concat (var_conditionString.reader_string (SOURCE_FILE_AT_LINE (718)) COMMA_SOURCE_FILE_AT_LINE (718)).operator_concat (GALGAS_string ("' condition; valid ones are: 'z' and 'nz'") COMMA_SOURCE_FILE_AT_LINE (719)) COMMA_SOURCE_FILE_AT_LINE (718)) ;
        var_branchIfZero.drop () ; // Release error dropped variable
      }
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outCondition = GALGAS_registerTestCondition::constructor_new (var_registerName, var_branchIfZero COMMA_SOURCE_FILE_AT_LINE (723)) ;
  } break ;
  case 5: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_conditional_5F_branch var_conditional_5F_branch ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (726)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE_AT_LINE (727)).reader_uppercaseString (SOURCE_FILE_AT_LINE (727)) ;
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("Z"))).isValidAndTrue ()) {
      //-------- @assignmentInstructionForGeneration
      var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bz (SOURCE_FILE_AT_LINE (729)) ;
    }else{
      //-------- @ifInstructionForGeneration
      if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).isValidAndTrue ()) {
        //-------- @assignmentInstructionForGeneration
        var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bnz (SOURCE_FILE_AT_LINE (731)) ;
      }else{
        //-------- @ifInstructionForGeneration
        if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NN"))).isValidAndTrue ()) {
          //-------- @assignmentInstructionForGeneration
          var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bnn (SOURCE_FILE_AT_LINE (733)) ;
        }else{
          //-------- @ifInstructionForGeneration
          if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("N"))).isValidAndTrue ()) {
            //-------- @assignmentInstructionForGeneration
            var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bn (SOURCE_FILE_AT_LINE (735)) ;
          }else{
            //-------- @ifInstructionForGeneration
            if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("C"))).isValidAndTrue ()) {
              //-------- @assignmentInstructionForGeneration
              var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bc (SOURCE_FILE_AT_LINE (737)) ;
            }else{
              //-------- @ifInstructionForGeneration
              if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NC"))).isValidAndTrue ()) {
                //-------- @assignmentInstructionForGeneration
                var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bnc (SOURCE_FILE_AT_LINE (739)) ;
              }else{
                //-------- @ifInstructionForGeneration
                if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("OV"))).isValidAndTrue ()) {
                  //-------- @assignmentInstructionForGeneration
                  var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bov (SOURCE_FILE_AT_LINE (741)) ;
                }else{
                  //-------- @ifInstructionForGeneration
                  if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NOV"))).isValidAndTrue ()) {
                    //-------- @assignmentInstructionForGeneration
                    var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bnov (SOURCE_FILE_AT_LINE (743)) ;
                  }else{
                    //-------- @errorInstructionForGeneration
                    GALGAS_location location_5 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
                    inCompiler->emitSemanticError (location_5, GALGAS_string ("invalid '").operator_concat (var_conditionString.reader_string (SOURCE_FILE_AT_LINE (745)) COMMA_SOURCE_FILE_AT_LINE (745)).operator_concat (GALGAS_string ("' condition; valid ones are: 'z', 'nz', 'n', 'nn', 'c', 'nc', 'ov' and 'nov'") COMMA_SOURCE_FILE_AT_LINE (746)) COMMA_SOURCE_FILE_AT_LINE (745)) ;
                    var_conditional_5F_branch.drop () ; // Release error dropped variable
                  }
                }
              }
            }
          }
        }
      }
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outCondition = GALGAS_bcc_5F_in_5F_structured_5F_if_5F_condition::constructor_new (var_conditional_5F_branch COMMA_SOURCE_FILE_AT_LINE (750)) ;
  } break ;
  default:
    break ;
  }
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_condition_5F_factor_i15_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_22 (inCompiler)) {
  case 1: {
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_23 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE_AT_LINE (615)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE_AT_LINE (617)) ;
    } break ;
    default:
      break ;
    }
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_parse (inCompiler) ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_24 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (625)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (625)) ;
    } break ;
    default:
      break ;
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (627)) ;
  } break ;
  case 2: {
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_parse (inCompiler) ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_25 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21__3D_) COMMA_SOURCE_FILE_AT_LINE (651)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (651)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D__3D_) COMMA_SOURCE_FILE_AT_LINE (653)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (653)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3D_) COMMA_SOURCE_FILE_AT_LINE (655)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (655)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3D_) COMMA_SOURCE_FILE_AT_LINE (657)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (657)) ;
    } break ;
    case 5: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (659)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (659)) ;
    } break ;
    case 6: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (661)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (661)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 3: {
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_parse (inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (670)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_bit_5F_number_5F_parsing_parse (inCompiler) ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_26 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (677)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 4: {
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_parse (inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (710)) ;
  } break ;
  case 5: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (726)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_condition_5F_expression_i16_ (GALGAS_conditionExpression & outArgument_outCondition,
                                                                                     C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (759)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_condition_5F_term_ (outArgument_outCondition, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_piccolo_5F_syntax_27 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE_AT_LINE (763)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_conditionExpression var_c ;
      //-------- @nonterminalInstructionForGeneration
      nt_condition_5F_term_ (var_c, inCompiler) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_conditionExpression var_rc = GALGAS_negateCondition::constructor_new (var_c COMMA_SOURCE_FILE_AT_LINE (766)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_conditionExpression var_lc = GALGAS_negateCondition::constructor_new (outArgument_outCondition COMMA_SOURCE_FILE_AT_LINE (767)) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outCondition = GALGAS_negateCondition::constructor_new (GALGAS_andCondition::constructor_new (var_lc, var_rc COMMA_SOURCE_FILE_AT_LINE (768)) COMMA_SOURCE_FILE_AT_LINE (768)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (770)) ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_condition_5F_expression_i16_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (759)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_condition_5F_term_parse (inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_piccolo_5F_syntax_27 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE_AT_LINE (763)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_condition_5F_term_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (770)) ;
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_condition_5F_term_i17_ (GALGAS_conditionExpression & outArgument_outCondition,
                                                                               C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outCondition.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_condition_5F_factor_ (outArgument_outCondition, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_piccolo_5F_syntax_28 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__26_) COMMA_SOURCE_FILE_AT_LINE (781)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_conditionExpression var_c ;
      //-------- @nonterminalInstructionForGeneration
      nt_condition_5F_factor_ (var_c, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outCondition = GALGAS_andCondition::constructor_new (outArgument_outCondition, var_c COMMA_SOURCE_FILE_AT_LINE (784)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_condition_5F_term_i17_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_condition_5F_factor_parse (inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_piccolo_5F_syntax_28 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__26_) COMMA_SOURCE_FILE_AT_LINE (781)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_condition_5F_factor_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_structured_5F_instruction_i18_ (GALGAS_piccolo_5F_instruction & outArgument_outInstruction,
                                                                                       GALGAS_bool & ioArgument_ioNeedsComputedGoto_32_,
                                                                                       GALGAS_bool & ioArgument_ioNeedsComputedGoto_34_,
                                                                                       C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_29 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_banksel) COMMA_SOURCE_FILE_AT_LINE (796)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_luint var_bank = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (798)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_banksel::constructor_new (var_instructionLocation, var_bank COMMA_SOURCE_FILE_AT_LINE (799)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_nobank) COMMA_SOURCE_FILE_AT_LINE (801)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_nobanksel::constructor_new (inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (802)) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_banksave) COMMA_SOURCE_FILE_AT_LINE (804)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_registerExpression var_register ;
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_ (var_register, inCompiler) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_instructionList var_instructionList ;
    //-------- @nonterminalInstructionForGeneration
    nt_instruction_5F_list_ (var_instructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE_AT_LINE (810)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_savebank::constructor_new (var_instructionLocation, var_register, var_instructionList, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (811)) ;
  } break ;
  case 4: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_computed) COMMA_SOURCE_FILE_AT_LINE (818)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (820)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_immediatExpression var_sizeExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_expression_ (var_sizeExpression, inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (823)) ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_30 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_retlw) COMMA_SOURCE_FILE_AT_LINE (825)) ;
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_immediatExpressionList var_argumentList = GALGAS_immediatExpressionList::constructor_emptyList (SOURCE_FILE_AT_LINE (826)) ;
      //-------- @repeatInstructionForGeneration
      bool repeatFlag_0 = true ;
      while (repeatFlag_0) {
        //-------- @localVariableDeclarationForGeneration
        GALGAS_immediatExpression var_expression ;
        //-------- @nonterminalInstructionForGeneration
        nt_immediate_5F_expression_ (var_expression, inCompiler) ;
        //-------- @addAssignInstructionForGeneration
        var_argumentList.addAssign_operation (var_expression COMMA_SOURCE_FILE_AT_LINE (830)) ;
        switch (select_piccolo_5F_syntax_31 (inCompiler)) {
        case 2: {
          //-------- @terminalCheckInstructionForGeneration
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (832)) ;
        } break ;
        default:
          repeatFlag_0 = false ;
          break ;
        }
      }
      //-------- @assignmentInstructionForGeneration
      outArgument_outInstruction = GALGAS_instruction_5F_computed_5F_retlw::constructor_new (var_instructionLocation, var_sizeExpression, var_argumentList, GALGAS_bool (true) COMMA_SOURCE_FILE_AT_LINE (834)) ;
      //-------- @assignmentInstructionForGeneration
      ioArgument_ioNeedsComputedGoto_32_ = GALGAS_bool (true) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bra) COMMA_SOURCE_FILE_AT_LINE (842)) ;
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_lstringlist var_argumentList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (843)) ;
      //-------- @repeatInstructionForGeneration
      bool repeatFlag_1 = true ;
      while (repeatFlag_1) {
        //-------- @terminalCheckInstructionForGeneration
        GALGAS_lstring var_targetRoutine = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (845)) ;
        //-------- @addAssignInstructionForGeneration
        var_argumentList.addAssign_operation (var_targetRoutine COMMA_SOURCE_FILE_AT_LINE (846)) ;
        switch (select_piccolo_5F_syntax_32 (inCompiler)) {
        case 2: {
          //-------- @terminalCheckInstructionForGeneration
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (848)) ;
        } break ;
        default:
          repeatFlag_1 = false ;
          break ;
        }
      }
      //-------- @assignmentInstructionForGeneration
      outArgument_outInstruction = GALGAS_instruction_5F_computed_5F_bra::constructor_new (var_instructionLocation, var_sizeExpression, var_argumentList, GALGAS_bool (true) COMMA_SOURCE_FILE_AT_LINE (850)) ;
      //-------- @assignmentInstructionForGeneration
      ioArgument_ioNeedsComputedGoto_32_ = GALGAS_bool (true) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_goto) COMMA_SOURCE_FILE_AT_LINE (858)) ;
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_lstringlist var_argumentList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (859)) ;
      //-------- @repeatInstructionForGeneration
      bool repeatFlag_2 = true ;
      while (repeatFlag_2) {
        //-------- @terminalCheckInstructionForGeneration
        GALGAS_lstring var_targetRoutine = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (861)) ;
        //-------- @addAssignInstructionForGeneration
        var_argumentList.addAssign_operation (var_targetRoutine COMMA_SOURCE_FILE_AT_LINE (862)) ;
        switch (select_piccolo_5F_syntax_33 (inCompiler)) {
        case 2: {
          //-------- @terminalCheckInstructionForGeneration
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (864)) ;
        } break ;
        default:
          repeatFlag_2 = false ;
          break ;
        }
      }
      //-------- @assignmentInstructionForGeneration
      outArgument_outInstruction = GALGAS_instruction_5F_computed_5F_goto::constructor_new (var_instructionLocation, var_sizeExpression, var_argumentList, GALGAS_bool (true) COMMA_SOURCE_FILE_AT_LINE (866)) ;
      //-------- @assignmentInstructionForGeneration
      ioArgument_ioNeedsComputedGoto_34_ = GALGAS_bool (true) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rcall) COMMA_SOURCE_FILE_AT_LINE (874)) ;
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_lstringlist var_argumentList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (875)) ;
      //-------- @repeatInstructionForGeneration
      bool repeatFlag_3 = true ;
      while (repeatFlag_3) {
        //-------- @terminalCheckInstructionForGeneration
        GALGAS_lstring var_targetRoutine = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (877)) ;
        //-------- @addAssignInstructionForGeneration
        var_argumentList.addAssign_operation (var_targetRoutine COMMA_SOURCE_FILE_AT_LINE (878)) ;
        switch (select_piccolo_5F_syntax_34 (inCompiler)) {
        case 2: {
          //-------- @terminalCheckInstructionForGeneration
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (880)) ;
        } break ;
        default:
          repeatFlag_3 = false ;
          break ;
        }
      }
      //-------- @assignmentInstructionForGeneration
      outArgument_outInstruction = GALGAS_instruction_5F_computed_5F_rcall::constructor_new (var_instructionLocation, var_sizeExpression, var_argumentList, GALGAS_bool (true) COMMA_SOURCE_FILE_AT_LINE (882)) ;
      //-------- @assignmentInstructionForGeneration
      ioArgument_ioNeedsComputedGoto_34_ = GALGAS_bool (true) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 5: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_forever) COMMA_SOURCE_FILE_AT_LINE (891)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_instructionList var_instructionList ;
    //-------- @nonterminalInstructionForGeneration
    nt_instruction_5F_list_ (var_instructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE_AT_LINE (895)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_FOREVER::constructor_new (var_instructionLocation, var_instructionList, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (896)) ;
  } break ;
  case 6: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE_AT_LINE (902)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_registerExpression var_registerName ;
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_ (var_registerName, inCompiler) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_if_5F_semi_5F_colon_5F_op var_opCode ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_35 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21__3D_) COMMA_SOURCE_FILE_AT_LINE (908)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (908)) ;
      //-------- @assignmentInstructionForGeneration
      var_opCode = GALGAS_if_5F_semi_5F_colon_5F_op::constructor_CPFSEQ (SOURCE_FILE_AT_LINE (908)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3D_) COMMA_SOURCE_FILE_AT_LINE (910)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (910)) ;
      //-------- @assignmentInstructionForGeneration
      var_opCode = GALGAS_if_5F_semi_5F_colon_5F_op::constructor_CPFSGT (SOURCE_FILE_AT_LINE (910)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3D_) COMMA_SOURCE_FILE_AT_LINE (912)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (912)) ;
      //-------- @assignmentInstructionForGeneration
      var_opCode = GALGAS_if_5F_semi_5F_colon_5F_op::constructor_CPFSLT (SOURCE_FILE_AT_LINE (912)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (914)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE_AT_LINE (915)).reader_uppercaseString (SOURCE_FILE_AT_LINE (915)) ;
      //-------- @ifInstructionForGeneration
      if (GALGAS_bool (kIsNotEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        GALGAS_location location_4 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_4, GALGAS_string ("invalid '").operator_concat (var_condition COMMA_SOURCE_FILE_AT_LINE (917)).operator_concat (GALGAS_string ("' condition; it should be 'nz'") COMMA_SOURCE_FILE_AT_LINE (917)) COMMA_SOURCE_FILE_AT_LINE (917)) ;
      }
      //-------- @assignmentInstructionForGeneration
      var_opCode = GALGAS_if_5F_semi_5F_colon_5F_op::constructor_TSTFSZ (SOURCE_FILE_AT_LINE (919)) ;
    } break ;
    default:
      break ;
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (921)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_piccolo_5F_instruction var_instruction ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_instruction_ (var_instruction, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_IF_5F_FA_5F_SEMI_5F_COLON::constructor_new (var_instructionLocation, var_instruction, var_opCode, var_registerName COMMA_SOURCE_FILE_AT_LINE (924)) ;
  } break ;
  case 7: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE_AT_LINE (931)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_registerExpression var_registerName ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bitNumberExpression var_bitNumber ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_skipIfSet ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_36 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE_AT_LINE (937)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_register_5F_parsing_ (var_registerName, inCompiler) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (939)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_bit_5F_number_5F_parsing_ (var_bitNumber, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      var_skipIfSet = GALGAS_bool (true) ;
    } break ;
    case 2: {
      //-------- @nonterminalInstructionForGeneration
      nt_register_5F_parsing_ (var_registerName, inCompiler) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (944)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_bit_5F_number_5F_parsing_ (var_bitNumber, inCompiler) ;
      //-------- @selectInstructionForGeneration
      switch (select_piccolo_5F_syntax_37 (inCompiler)) {
      case 1: {
        //-------- @assignmentInstructionForGeneration
        var_skipIfSet = GALGAS_bool (false) ;
      } break ;
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (949)) ;
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE_AT_LINE (950)).reader_uppercaseString (SOURCE_FILE_AT_LINE (950)) ;
        //-------- @ifInstructionForGeneration
        if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("Z"))).isValidAndTrue ()) {
          //-------- @assignmentInstructionForGeneration
          var_skipIfSet = GALGAS_bool (true) ;
          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
          GALGAS_string var_s = GALGAS_string ("if ! ").operator_concat (var_registerName.reader_mRegisterName (SOURCE_FILE_AT_LINE (953)).reader_string (SOURCE_FILE_AT_LINE (953)) COMMA_SOURCE_FILE_AT_LINE (953)) ;
          //-------- @ifInstructionForGeneration
          if (GALGAS_bool (kIsStrictSup, var_registerName.reader_mOffset (SOURCE_FILE_AT_LINE (954)).reader_uint (SOURCE_FILE_AT_LINE (954)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
            //-------- @appendInstructionForGeneration
            var_s.dotAssign_operation (GALGAS_string (" [").operator_concat (var_registerName.reader_mOffset (SOURCE_FILE_AT_LINE (955)).reader_uint (SOURCE_FILE_AT_LINE (955)).reader_string (SOURCE_FILE_AT_LINE (955)) COMMA_SOURCE_FILE_AT_LINE (955)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (955)) COMMA_SOURCE_FILE_AT_LINE (955)) ;
          }
          //-------- @appendInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (957)) ;
          //-------- @methodCallInstructionForGeneration
          var_bitNumber.method_display (var_s, inCompiler COMMA_SOURCE_FILE_AT_LINE (957)) ;
          //-------- END @methodCallInstructionForGeneration
          //-------- @appendInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string (" :") COMMA_SOURCE_FILE_AT_LINE (958)) ;
          //-------- @warningInstructionForGeneration
          GALGAS_location location_5 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticWarning (location_5, GALGAS_string ("In Piccolo 1.2.0 and later, this construction is deprecated; use '").operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (959)).operator_concat (GALGAS_string ("' instead") COMMA_SOURCE_FILE_AT_LINE (959)) COMMA_SOURCE_FILE_AT_LINE (959)) ;
        }else{
          //-------- @ifInstructionForGeneration
          if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).isValidAndTrue ()) {
            //-------- @assignmentInstructionForGeneration
            var_skipIfSet = GALGAS_bool (false) ;
            //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
            GALGAS_string var_s = GALGAS_string ("if ").operator_concat (var_registerName.reader_mRegisterName (SOURCE_FILE_AT_LINE (962)).reader_string (SOURCE_FILE_AT_LINE (962)) COMMA_SOURCE_FILE_AT_LINE (962)) ;
            //-------- @ifInstructionForGeneration
            if (GALGAS_bool (kIsStrictSup, var_registerName.reader_mOffset (SOURCE_FILE_AT_LINE (963)).reader_uint (SOURCE_FILE_AT_LINE (963)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
              //-------- @appendInstructionForGeneration
              var_s.dotAssign_operation (GALGAS_string (" [").operator_concat (var_registerName.reader_mOffset (SOURCE_FILE_AT_LINE (964)).reader_uint (SOURCE_FILE_AT_LINE (964)).reader_string (SOURCE_FILE_AT_LINE (964)) COMMA_SOURCE_FILE_AT_LINE (964)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (964)) COMMA_SOURCE_FILE_AT_LINE (964)) ;
            }
            //-------- @appendInstructionForGeneration
            var_s.dotAssign_operation (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (966)) ;
            //-------- @methodCallInstructionForGeneration
            var_bitNumber.method_display (var_s, inCompiler COMMA_SOURCE_FILE_AT_LINE (966)) ;
            //-------- END @methodCallInstructionForGeneration
            //-------- @appendInstructionForGeneration
            var_s.dotAssign_operation (GALGAS_string (" :") COMMA_SOURCE_FILE_AT_LINE (967)) ;
            //-------- @warningInstructionForGeneration
            GALGAS_location location_6 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticWarning (location_6, GALGAS_string ("In Piccolo 1.2.0 and later, this construction is deprecated; use '").operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (968)).operator_concat (GALGAS_string ("' instead") COMMA_SOURCE_FILE_AT_LINE (968)) COMMA_SOURCE_FILE_AT_LINE (968)) ;
          }else{
            //-------- @errorInstructionForGeneration
            GALGAS_location location_7 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_7, GALGAS_string ("invalid '").operator_concat (var_condition COMMA_SOURCE_FILE_AT_LINE (970)).operator_concat (GALGAS_string ("' condition; it should be 'z' or 'nz'") COMMA_SOURCE_FILE_AT_LINE (970)) COMMA_SOURCE_FILE_AT_LINE (970)) ;
            var_skipIfSet.drop () ; // Release error dropped variable
          }
        }
      } break ;
      default:
        break ;
      }
    } break ;
    default:
      break ;
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (974)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_piccolo_5F_instruction var_instruction ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_instruction_ (var_instruction, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_IF_5F_BitTest::constructor_new (var_instructionLocation, var_instruction, var_skipIfSet, var_registerName, var_bitNumber COMMA_SOURCE_FILE_AT_LINE (977)) ;
  } break ;
  case 8: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE_AT_LINE (985)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_increment ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_38 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE_AT_LINE (989)) ;
      //-------- @assignmentInstructionForGeneration
      var_increment = GALGAS_bool (false) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE_AT_LINE (991)) ;
      //-------- @assignmentInstructionForGeneration
      var_increment = GALGAS_bool (true) ;
    } break ;
    default:
      break ;
    }
    //-------- @localVariableDeclarationForGeneration
    GALGAS_registerExpression var_registerName ;
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_ (var_registerName, inCompiler) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_w_5F_isTarget ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_39 (inCompiler)) {
    case 1: {
      //-------- @assignmentInstructionForGeneration
      var_w_5F_isTarget = GALGAS_bool (false) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (999)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (999)) ;
      //-------- @assignmentInstructionForGeneration
      var_w_5F_isTarget = GALGAS_bool (true) ;
    } break ;
    default:
      break ;
    }
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_skipIfZero ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1002)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE_AT_LINE (1003)).reader_uppercaseString (SOURCE_FILE_AT_LINE (1003)) ;
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("Z"))).isValidAndTrue ()) {
      //-------- @assignmentInstructionForGeneration
      var_skipIfZero = GALGAS_bool (false) ;
    }else{
      //-------- @ifInstructionForGeneration
      if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).isValidAndTrue ()) {
        //-------- @assignmentInstructionForGeneration
        var_skipIfZero = GALGAS_bool (true) ;
      }else{
        //-------- @errorInstructionForGeneration
        GALGAS_location location_8 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_8, GALGAS_string ("invalid '").operator_concat (var_condition COMMA_SOURCE_FILE_AT_LINE (1009)).operator_concat (GALGAS_string ("' condition; it should be 'z' or 'nz'") COMMA_SOURCE_FILE_AT_LINE (1009)) COMMA_SOURCE_FILE_AT_LINE (1009)) ;
        var_skipIfZero.drop () ; // Release error dropped variable
      }
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (1011)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_piccolo_5F_instruction var_instruction ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_instruction_ (var_instruction, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_IF_5F_IncDec::constructor_new (var_instructionLocation, var_instruction, var_increment, var_skipIfZero, var_registerName, var_w_5F_isTarget COMMA_SOURCE_FILE_AT_LINE (1014)) ;
  } break ;
  case 9: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE_AT_LINE (1023)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_structured_5F_if_5F_instruction_ (outArgument_outInstruction, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE_AT_LINE (1029)) ;
  } break ;
  case 10: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_do) COMMA_SOURCE_FILE_AT_LINE (1031)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_instructionList var_repeatedInstructionList ;
    //-------- @nonterminalInstructionForGeneration
    nt_instruction_5F_list_ (var_repeatedInstructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_endOfRepeatedInstructionList = inCompiler->here () ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_partList var_whilePartList = GALGAS_partList::constructor_emptyList (SOURCE_FILE_AT_LINE (1040)) ;
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_9 = true ;
    while (repeatFlag_9) {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_while) COMMA_SOURCE_FILE_AT_LINE (1042)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_conditionExpression var_whileCondition ;
      //-------- @nonterminalInstructionForGeneration
      nt_condition_5F_expression_ (var_whileCondition, inCompiler) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_instructionList var_instructionList ;
      //-------- @nonterminalInstructionForGeneration
      nt_instruction_5F_list_ (var_instructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
      //-------- @addAssignInstructionForGeneration
      var_whilePartList.addAssign_operation (var_whileCondition, var_instructionList, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1051)) ;
      switch (select_piccolo_5F_syntax_40 (inCompiler)) {
      case 2: {
      } break ;
      default:
        repeatFlag_9 = false ;
        break ;
      }
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE_AT_LINE (1054)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_do_5F_while::constructor_new (var_instructionLocation, var_repeatedInstructionList, var_endOfRepeatedInstructionList, var_whilePartList COMMA_SOURCE_FILE_AT_LINE (1055)) ;
  } break ;
  case 11: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mnop) COMMA_SOURCE_FILE_AT_LINE (1062)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_luint var_occurrenceFactor = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (1064)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_MNOP::constructor_new (var_instructionLocation, var_occurrenceFactor COMMA_SOURCE_FILE_AT_LINE (1065)) ;
  } break ;
  default:
    break ;
  }
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_structured_5F_instruction_i18_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_29 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_banksel) COMMA_SOURCE_FILE_AT_LINE (796)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (798)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_nobank) COMMA_SOURCE_FILE_AT_LINE (801)) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_banksave) COMMA_SOURCE_FILE_AT_LINE (804)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_parse (inCompiler) ;
    //-------- @nonterminalInstructionForGeneration
    nt_instruction_5F_list_parse (inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE_AT_LINE (810)) ;
  } break ;
  case 4: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_computed) COMMA_SOURCE_FILE_AT_LINE (818)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (820)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_expression_parse (inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (823)) ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_30 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_retlw) COMMA_SOURCE_FILE_AT_LINE (825)) ;
      //-------- @repeatInstructionForGeneration
      bool repeatFlag_0 = true ;
      while (repeatFlag_0) {
        //-------- @nonterminalInstructionForGeneration
        nt_immediate_5F_expression_parse (inCompiler) ;
        switch (select_piccolo_5F_syntax_31 (inCompiler)) {
        case 2: {
          //-------- @terminalCheckInstructionForGeneration
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (832)) ;
        } break ;
        default:
          repeatFlag_0 = false ;
          break ;
        }
      }
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bra) COMMA_SOURCE_FILE_AT_LINE (842)) ;
      //-------- @repeatInstructionForGeneration
      bool repeatFlag_1 = true ;
      while (repeatFlag_1) {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (845)) ;
        switch (select_piccolo_5F_syntax_32 (inCompiler)) {
        case 2: {
          //-------- @terminalCheckInstructionForGeneration
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (848)) ;
        } break ;
        default:
          repeatFlag_1 = false ;
          break ;
        }
      }
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_goto) COMMA_SOURCE_FILE_AT_LINE (858)) ;
      //-------- @repeatInstructionForGeneration
      bool repeatFlag_2 = true ;
      while (repeatFlag_2) {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (861)) ;
        switch (select_piccolo_5F_syntax_33 (inCompiler)) {
        case 2: {
          //-------- @terminalCheckInstructionForGeneration
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (864)) ;
        } break ;
        default:
          repeatFlag_2 = false ;
          break ;
        }
      }
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rcall) COMMA_SOURCE_FILE_AT_LINE (874)) ;
      //-------- @repeatInstructionForGeneration
      bool repeatFlag_3 = true ;
      while (repeatFlag_3) {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (877)) ;
        switch (select_piccolo_5F_syntax_34 (inCompiler)) {
        case 2: {
          //-------- @terminalCheckInstructionForGeneration
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (880)) ;
        } break ;
        default:
          repeatFlag_3 = false ;
          break ;
        }
      }
    } break ;
    default:
      break ;
    }
  } break ;
  case 5: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_forever) COMMA_SOURCE_FILE_AT_LINE (891)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_instruction_5F_list_parse (inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE_AT_LINE (895)) ;
  } break ;
  case 6: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE_AT_LINE (902)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_parse (inCompiler) ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_35 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21__3D_) COMMA_SOURCE_FILE_AT_LINE (908)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (908)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3D_) COMMA_SOURCE_FILE_AT_LINE (910)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (910)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3D_) COMMA_SOURCE_FILE_AT_LINE (912)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (912)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (914)) ;
    } break ;
    default:
      break ;
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (921)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_instruction_parse (inCompiler) ;
  } break ;
  case 7: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE_AT_LINE (931)) ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_36 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21_) COMMA_SOURCE_FILE_AT_LINE (937)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_register_5F_parsing_parse (inCompiler) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (939)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_bit_5F_number_5F_parsing_parse (inCompiler) ;
    } break ;
    case 2: {
      //-------- @nonterminalInstructionForGeneration
      nt_register_5F_parsing_parse (inCompiler) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (944)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_bit_5F_number_5F_parsing_parse (inCompiler) ;
      //-------- @selectInstructionForGeneration
      switch (select_piccolo_5F_syntax_37 (inCompiler)) {
      case 1: {
      } break ;
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (949)) ;
      } break ;
      default:
        break ;
      }
    } break ;
    default:
      break ;
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (974)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_instruction_parse (inCompiler) ;
  } break ;
  case 8: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE_AT_LINE (985)) ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_38 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE_AT_LINE (989)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE_AT_LINE (991)) ;
    } break ;
    default:
      break ;
    }
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_parse (inCompiler) ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_39 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (999)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_w) COMMA_SOURCE_FILE_AT_LINE (999)) ;
    } break ;
    default:
      break ;
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1002)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (1011)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_instruction_parse (inCompiler) ;
  } break ;
  case 9: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_if) COMMA_SOURCE_FILE_AT_LINE (1023)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_structured_5F_if_5F_instruction_parse (inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE_AT_LINE (1029)) ;
  } break ;
  case 10: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_do) COMMA_SOURCE_FILE_AT_LINE (1031)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_instruction_5F_list_parse (inCompiler) ;
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_4 = true ;
    while (repeatFlag_4) {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_while) COMMA_SOURCE_FILE_AT_LINE (1042)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_condition_5F_expression_parse (inCompiler) ;
      //-------- @nonterminalInstructionForGeneration
      nt_instruction_5F_list_parse (inCompiler) ;
      switch (select_piccolo_5F_syntax_40 (inCompiler)) {
      case 2: {
      } break ;
      default:
        repeatFlag_4 = false ;
        break ;
      }
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_end) COMMA_SOURCE_FILE_AT_LINE (1054)) ;
  } break ;
  case 11: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mnop) COMMA_SOURCE_FILE_AT_LINE (1062)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (1064)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_structured_5F_if_5F_instruction_i19_ (GALGAS_piccolo_5F_instruction & outArgument_outInstruction,
                                                                                             GALGAS_bool & ioArgument_ioNeedsComputedGoto_32_,
                                                                                             GALGAS_bool & ioArgument_ioNeedsComputedGoto_34_,
                                                                                             C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_instructionLocation = inCompiler->here () ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_conditionExpression var_structured_5F_if_5F_condition ;
  //-------- @nonterminalInstructionForGeneration
  nt_condition_5F_expression_ (var_structured_5F_if_5F_condition, inCompiler) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_instructionList var_thenInstructionList ;
  //-------- @nonterminalInstructionForGeneration
  nt_instruction_5F_list_ (var_thenInstructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_instructionList var_elseInstructionList ;
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_41 (inCompiler)) {
  case 1: {
    //-------- @assignmentInstructionForGeneration
    var_elseInstructionList = GALGAS_instructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1087)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_elsif) COMMA_SOURCE_FILE_AT_LINE (1089)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_piccolo_5F_instruction var_elsifPartInstruction ;
    //-------- @nonterminalInstructionForGeneration
    nt_structured_5F_if_5F_instruction_ (var_elsifPartInstruction, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    var_elseInstructionList = GALGAS_instructionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1096)) ;
    //-------- @addAssignInstructionForGeneration
    var_elseInstructionList.addAssign_operation (var_elsifPartInstruction COMMA_SOURCE_FILE_AT_LINE (1097)) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_else) COMMA_SOURCE_FILE_AT_LINE (1099)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_instruction_5F_list_ (var_elseInstructionList, ioArgument_ioNeedsComputedGoto_32_, ioArgument_ioNeedsComputedGoto_34_, inCompiler) ;
  } break ;
  default:
    break ;
  }
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_endOfElsePartLocation = inCompiler->here () ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outInstruction = GALGAS_instruction_5F_structured_5F_if::constructor_new (var_instructionLocation, var_structured_5F_if_5F_condition, var_thenInstructionList, var_elseInstructionList, var_endOfElsePartLocation COMMA_SOURCE_FILE_AT_LINE (1107)) ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_structured_5F_if_5F_instruction_i19_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_condition_5F_expression_parse (inCompiler) ;
  //-------- @nonterminalInstructionForGeneration
  nt_instruction_5F_list_parse (inCompiler) ;
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_41 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_elsif) COMMA_SOURCE_FILE_AT_LINE (1089)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_structured_5F_if_5F_instruction_parse (inCompiler) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_else) COMMA_SOURCE_FILE_AT_LINE (1099)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_instruction_5F_list_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_simple_5F_instruction_i20_ (GALGAS_piccolo_5F_instruction & outArgument_outInstruction,
                                                                                   C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outInstruction.drop () ; // Release 'out' argument
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_42 (inCompiler)) {
  case 1: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_instruction_5F_FDA_5F_base_5F_code var_baseCode ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_43 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addwf) COMMA_SOURCE_FILE_AT_LINE (1122)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_ADDWF (SOURCE_FILE_AT_LINE (1123)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addwfc) COMMA_SOURCE_FILE_AT_LINE (1125)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_ADDWFC (SOURCE_FILE_AT_LINE (1126)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andwf) COMMA_SOURCE_FILE_AT_LINE (1128)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_ANDWF (SOURCE_FILE_AT_LINE (1129)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_comf) COMMA_SOURCE_FILE_AT_LINE (1131)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_COMF (SOURCE_FILE_AT_LINE (1132)) ;
    } break ;
    case 5: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE_AT_LINE (1134)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_DECF (SOURCE_FILE_AT_LINE (1135)) ;
    } break ;
    case 6: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE_AT_LINE (1137)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_INCF (SOURCE_FILE_AT_LINE (1138)) ;
    } break ;
    case 7: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorwf) COMMA_SOURCE_FILE_AT_LINE (1140)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_IORWF (SOURCE_FILE_AT_LINE (1141)) ;
    } break ;
    case 8: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movf) COMMA_SOURCE_FILE_AT_LINE (1143)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_MOVF (SOURCE_FILE_AT_LINE (1144)) ;
    } break ;
    case 9: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rlcf) COMMA_SOURCE_FILE_AT_LINE (1146)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_RLCF (SOURCE_FILE_AT_LINE (1147)) ;
    } break ;
    case 10: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rlncf) COMMA_SOURCE_FILE_AT_LINE (1149)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_RLNCF (SOURCE_FILE_AT_LINE (1150)) ;
    } break ;
    case 11: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rrcf) COMMA_SOURCE_FILE_AT_LINE (1152)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_RRCF (SOURCE_FILE_AT_LINE (1153)) ;
    } break ;
    case 12: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rrncf) COMMA_SOURCE_FILE_AT_LINE (1155)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_RRNCF (SOURCE_FILE_AT_LINE (1156)) ;
    } break ;
    case 13: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subfwb) COMMA_SOURCE_FILE_AT_LINE (1158)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_SUBFWB (SOURCE_FILE_AT_LINE (1159)) ;
    } break ;
    case 14: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subwf) COMMA_SOURCE_FILE_AT_LINE (1161)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_SUBWF (SOURCE_FILE_AT_LINE (1162)) ;
    } break ;
    case 15: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subwfb) COMMA_SOURCE_FILE_AT_LINE (1164)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_SUBWFB (SOURCE_FILE_AT_LINE (1165)) ;
    } break ;
    case 16: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_swapf) COMMA_SOURCE_FILE_AT_LINE (1167)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_SWAPF (SOURCE_FILE_AT_LINE (1168)) ;
    } break ;
    case 17: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorwf) COMMA_SOURCE_FILE_AT_LINE (1170)) ;
      //-------- @assignmentInstructionForGeneration
      var_baseCode = GALGAS_instruction_5F_FDA_5F_base_5F_code::constructor_XORWF (SOURCE_FILE_AT_LINE (1171)) ;
    } break ;
    default:
      break ;
    }
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_registerExpression var_registerName ;
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_ (var_registerName, inCompiler) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_W_5F_isDestination ;
    //-------- @nonterminalInstructionForGeneration
    nt_optional_5F_w_5F_as_5F_dest_ (var_W_5F_isDestination, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_FDA::constructor_new (var_instructionLocation, var_baseCode, var_registerName, var_W_5F_isDestination COMMA_SOURCE_FILE_AT_LINE (1178)) ;
  } break ;
  case 2: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_FA_5F_instruction_5F_base_5F_code var_FAinstruction ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_44 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrf) COMMA_SOURCE_FILE_AT_LINE (1187)) ;
      //-------- @assignmentInstructionForGeneration
      var_FAinstruction = GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_CLRF (SOURCE_FILE_AT_LINE (1188)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movwf) COMMA_SOURCE_FILE_AT_LINE (1190)) ;
      //-------- @assignmentInstructionForGeneration
      var_FAinstruction = GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_MOVWF (SOURCE_FILE_AT_LINE (1191)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mulwf) COMMA_SOURCE_FILE_AT_LINE (1193)) ;
      //-------- @assignmentInstructionForGeneration
      var_FAinstruction = GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_MULWF (SOURCE_FILE_AT_LINE (1194)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_negf) COMMA_SOURCE_FILE_AT_LINE (1196)) ;
      //-------- @assignmentInstructionForGeneration
      var_FAinstruction = GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_NEGF (SOURCE_FILE_AT_LINE (1197)) ;
    } break ;
    case 5: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_setf) COMMA_SOURCE_FILE_AT_LINE (1199)) ;
      //-------- @assignmentInstructionForGeneration
      var_FAinstruction = GALGAS_FA_5F_instruction_5F_base_5F_code::constructor_SETF (SOURCE_FILE_AT_LINE (1200)) ;
    } break ;
    default:
      break ;
    }
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_registerExpression var_registerName ;
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_ (var_registerName, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_FA::constructor_new (var_instructionLocation, var_FAinstruction, var_registerName COMMA_SOURCE_FILE_AT_LINE (1205)) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movff) COMMA_SOURCE_FILE_AT_LINE (1211)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_registerExpression var_sourceRegisterName ;
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_ (var_sourceRegisterName, inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (1215)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_registerExpression var_destinationRegisterName ;
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_ (var_destinationRegisterName, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_MOVFF::constructor_new (var_instructionLocation, var_sourceRegisterName, var_destinationRegisterName COMMA_SOURCE_FILE_AT_LINE (1218)) ;
  } break ;
  case 4: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bit_5F_oriented_5F_op var_bitOrientedOp ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_45 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bcf) COMMA_SOURCE_FILE_AT_LINE (1226)) ;
      //-------- @assignmentInstructionForGeneration
      var_bitOrientedOp = GALGAS_bit_5F_oriented_5F_op::constructor_BCF (SOURCE_FILE_AT_LINE (1226)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bsf) COMMA_SOURCE_FILE_AT_LINE (1228)) ;
      //-------- @assignmentInstructionForGeneration
      var_bitOrientedOp = GALGAS_bit_5F_oriented_5F_op::constructor_BSF (SOURCE_FILE_AT_LINE (1228)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_btg) COMMA_SOURCE_FILE_AT_LINE (1230)) ;
      //-------- @assignmentInstructionForGeneration
      var_bitOrientedOp = GALGAS_bit_5F_oriented_5F_op::constructor_BTG (SOURCE_FILE_AT_LINE (1230)) ;
    } break ;
    default:
      break ;
    }
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_registerExpression var_registerName ;
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_ (var_registerName, inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (1235)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bitNumberExpression var_bitNumber ;
    //-------- @nonterminalInstructionForGeneration
    nt_bit_5F_number_5F_parsing_ (var_bitNumber, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_FBA::constructor_new (var_instructionLocation, var_bitOrientedOp, var_registerName, var_bitNumber COMMA_SOURCE_FILE_AT_LINE (1238)) ;
  } break ;
  case 5: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jsr) COMMA_SOURCE_FILE_AT_LINE (1245)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1247)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_JSR::constructor_new (var_instructionLocation, var_targetLabelName, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1251)) COMMA_SOURCE_FILE_AT_LINE (1248)) ;
  } break ;
  case 6: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_call) COMMA_SOURCE_FILE_AT_LINE (1254)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1256)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_JSR::constructor_new (var_instructionLocation, var_targetLabelName, GALGAS_jumpInstructionKind::constructor_absolute (SOURCE_FILE_AT_LINE (1260)) COMMA_SOURCE_FILE_AT_LINE (1257)) ;
  } break ;
  case 7: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rcall) COMMA_SOURCE_FILE_AT_LINE (1263)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1265)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_JSR::constructor_new (var_instructionLocation, var_targetLabelName, GALGAS_jumpInstructionKind::constructor_relative (SOURCE_FILE_AT_LINE (1269)) COMMA_SOURCE_FILE_AT_LINE (1266)) ;
  } break ;
  case 8: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jump) COMMA_SOURCE_FILE_AT_LINE (1272)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1274)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_JUMP::constructor_new (var_instructionLocation, var_targetLabelName, GALGAS_jumpInstructionKind::constructor_ipicRelative (SOURCE_FILE_AT_LINE (1278)) COMMA_SOURCE_FILE_AT_LINE (1275)) ;
  } break ;
  case 9: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_goto) COMMA_SOURCE_FILE_AT_LINE (1281)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1283)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_JUMP::constructor_new (var_instructionLocation, var_targetLabelName, GALGAS_jumpInstructionKind::constructor_absolute (SOURCE_FILE_AT_LINE (1287)) COMMA_SOURCE_FILE_AT_LINE (1284)) ;
  } break ;
  case 10: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bra) COMMA_SOURCE_FILE_AT_LINE (1290)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1292)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_JUMP::constructor_new (var_instructionLocation, var_targetLabelName, GALGAS_jumpInstructionKind::constructor_relative (SOURCE_FILE_AT_LINE (1296)) COMMA_SOURCE_FILE_AT_LINE (1293)) ;
  } break ;
  case 11: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_conditional_5F_branch var_condition ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_46 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bc) COMMA_SOURCE_FILE_AT_LINE (1301)) ;
      //-------- @assignmentInstructionForGeneration
      var_condition = GALGAS_conditional_5F_branch::constructor_bc (SOURCE_FILE_AT_LINE (1301)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bnc) COMMA_SOURCE_FILE_AT_LINE (1303)) ;
      //-------- @assignmentInstructionForGeneration
      var_condition = GALGAS_conditional_5F_branch::constructor_bnc (SOURCE_FILE_AT_LINE (1303)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bn) COMMA_SOURCE_FILE_AT_LINE (1305)) ;
      //-------- @assignmentInstructionForGeneration
      var_condition = GALGAS_conditional_5F_branch::constructor_bn (SOURCE_FILE_AT_LINE (1305)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bnn) COMMA_SOURCE_FILE_AT_LINE (1307)) ;
      //-------- @assignmentInstructionForGeneration
      var_condition = GALGAS_conditional_5F_branch::constructor_bnn (SOURCE_FILE_AT_LINE (1307)) ;
    } break ;
    case 5: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bov) COMMA_SOURCE_FILE_AT_LINE (1309)) ;
      //-------- @assignmentInstructionForGeneration
      var_condition = GALGAS_conditional_5F_branch::constructor_bov (SOURCE_FILE_AT_LINE (1309)) ;
    } break ;
    case 6: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bnov) COMMA_SOURCE_FILE_AT_LINE (1311)) ;
      //-------- @assignmentInstructionForGeneration
      var_condition = GALGAS_conditional_5F_branch::constructor_bnov (SOURCE_FILE_AT_LINE (1311)) ;
    } break ;
    case 7: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bz) COMMA_SOURCE_FILE_AT_LINE (1313)) ;
      //-------- @assignmentInstructionForGeneration
      var_condition = GALGAS_conditional_5F_branch::constructor_bz (SOURCE_FILE_AT_LINE (1313)) ;
    } break ;
    case 8: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bnz) COMMA_SOURCE_FILE_AT_LINE (1315)) ;
      //-------- @assignmentInstructionForGeneration
      var_condition = GALGAS_conditional_5F_branch::constructor_bnz (SOURCE_FILE_AT_LINE (1315)) ;
    } break ;
    default:
      break ;
    }
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1318)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_JUMPCC::constructor_new (var_instructionLocation, var_targetLabelName, var_condition, GALGAS_bool (true) COMMA_SOURCE_FILE_AT_LINE (1319)) ;
  } break ;
  case 12: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jump) COMMA_SOURCE_FILE_AT_LINE (1326)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_conditional_5F_branch var_conditional_5F_branch ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_conditionString = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1329)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_condition = var_conditionString.reader_string (SOURCE_FILE_AT_LINE (1330)).reader_uppercaseString (SOURCE_FILE_AT_LINE (1330)) ;
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("Z"))).isValidAndTrue ()) {
      //-------- @assignmentInstructionForGeneration
      var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bz (SOURCE_FILE_AT_LINE (1332)) ;
    }else{
      //-------- @ifInstructionForGeneration
      if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NZ"))).isValidAndTrue ()) {
        //-------- @assignmentInstructionForGeneration
        var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bnz (SOURCE_FILE_AT_LINE (1334)) ;
      }else{
        //-------- @ifInstructionForGeneration
        if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NN"))).isValidAndTrue ()) {
          //-------- @assignmentInstructionForGeneration
          var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bnn (SOURCE_FILE_AT_LINE (1336)) ;
        }else{
          //-------- @ifInstructionForGeneration
          if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("N"))).isValidAndTrue ()) {
            //-------- @assignmentInstructionForGeneration
            var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bn (SOURCE_FILE_AT_LINE (1338)) ;
          }else{
            //-------- @ifInstructionForGeneration
            if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("C"))).isValidAndTrue ()) {
              //-------- @assignmentInstructionForGeneration
              var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bc (SOURCE_FILE_AT_LINE (1340)) ;
            }else{
              //-------- @ifInstructionForGeneration
              if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NC"))).isValidAndTrue ()) {
                //-------- @assignmentInstructionForGeneration
                var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bnc (SOURCE_FILE_AT_LINE (1342)) ;
              }else{
                //-------- @ifInstructionForGeneration
                if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("OV"))).isValidAndTrue ()) {
                  //-------- @assignmentInstructionForGeneration
                  var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bov (SOURCE_FILE_AT_LINE (1344)) ;
                }else{
                  //-------- @ifInstructionForGeneration
                  if (GALGAS_bool (kIsEqual, var_condition.objectCompare (GALGAS_string ("NOV"))).isValidAndTrue ()) {
                    //-------- @assignmentInstructionForGeneration
                    var_conditional_5F_branch = GALGAS_conditional_5F_branch::constructor_bnov (SOURCE_FILE_AT_LINE (1346)) ;
                  }else{
                    //-------- @errorInstructionForGeneration
                    GALGAS_location location_0 (var_conditionString.reader_location (HERE)) ; // Implicit use of 'location' reader
                    inCompiler->emitSemanticError (location_0, GALGAS_string ("invalid '").operator_concat (var_conditionString.reader_string (SOURCE_FILE_AT_LINE (1348)) COMMA_SOURCE_FILE_AT_LINE (1348)).operator_concat (GALGAS_string ("' condition; valid ones are: 'z', 'nz', 'n', 'nn', 'c', 'nc', 'ov' and 'nov'") COMMA_SOURCE_FILE_AT_LINE (1349)) COMMA_SOURCE_FILE_AT_LINE (1348)) ;
                    var_conditional_5F_branch.drop () ; // Release error dropped variable
                  }
                }
              }
            }
          }
        }
      }
    }
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_targetLabelName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1353)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_JUMPCC::constructor_new (var_instructionLocation, var_targetLabelName, var_conditional_5F_branch, GALGAS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1354)) ;
  } break ;
  case 13: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrwdt) COMMA_SOURCE_FILE_AT_LINE (1361)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_CLRWDT::constructor_new (inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1362)) ;
  } break ;
  case 14: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_daw) COMMA_SOURCE_FILE_AT_LINE (1364)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_DAW::constructor_new (inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1365)) ;
  } break ;
  case 15: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_nop) COMMA_SOURCE_FILE_AT_LINE (1367)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_NOP::constructor_new (inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1368)) ;
  } break ;
  case 16: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_pop) COMMA_SOURCE_FILE_AT_LINE (1370)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_POP::constructor_new (inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1371)) ;
  } break ;
  case 17: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_push) COMMA_SOURCE_FILE_AT_LINE (1373)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_PUSH::constructor_new (inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1374)) ;
  } break ;
  case 18: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_reset) COMMA_SOURCE_FILE_AT_LINE (1376)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_RESET::constructor_new (inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1377)) ;
  } break ;
  case 19: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_sleep) COMMA_SOURCE_FILE_AT_LINE (1379)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_SLEEP::constructor_new (inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1380)) ;
  } break ;
  case 20: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_literal_5F_instruction_5F_opcode var_literalInstruction ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_47 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addlw) COMMA_SOURCE_FILE_AT_LINE (1384)) ;
      //-------- @assignmentInstructionForGeneration
      var_literalInstruction = GALGAS_literal_5F_instruction_5F_opcode::constructor_ADDLW (SOURCE_FILE_AT_LINE (1384)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andlw) COMMA_SOURCE_FILE_AT_LINE (1386)) ;
      //-------- @assignmentInstructionForGeneration
      var_literalInstruction = GALGAS_literal_5F_instruction_5F_opcode::constructor_ANDLW (SOURCE_FILE_AT_LINE (1386)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorlw) COMMA_SOURCE_FILE_AT_LINE (1388)) ;
      //-------- @assignmentInstructionForGeneration
      var_literalInstruction = GALGAS_literal_5F_instruction_5F_opcode::constructor_IORLW (SOURCE_FILE_AT_LINE (1388)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movlw) COMMA_SOURCE_FILE_AT_LINE (1390)) ;
      //-------- @assignmentInstructionForGeneration
      var_literalInstruction = GALGAS_literal_5F_instruction_5F_opcode::constructor_MOVLW (SOURCE_FILE_AT_LINE (1390)) ;
    } break ;
    case 5: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mullw) COMMA_SOURCE_FILE_AT_LINE (1392)) ;
      //-------- @assignmentInstructionForGeneration
      var_literalInstruction = GALGAS_literal_5F_instruction_5F_opcode::constructor_MULLW (SOURCE_FILE_AT_LINE (1392)) ;
    } break ;
    case 6: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_sublw) COMMA_SOURCE_FILE_AT_LINE (1394)) ;
      //-------- @assignmentInstructionForGeneration
      var_literalInstruction = GALGAS_literal_5F_instruction_5F_opcode::constructor_SUBLW (SOURCE_FILE_AT_LINE (1394)) ;
    } break ;
    case 7: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorlw) COMMA_SOURCE_FILE_AT_LINE (1396)) ;
      //-------- @assignmentInstructionForGeneration
      var_literalInstruction = GALGAS_literal_5F_instruction_5F_opcode::constructor_XORLW (SOURCE_FILE_AT_LINE (1396)) ;
    } break ;
    default:
      break ;
    }
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_immediatExpression var_expression ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_expression_ (var_expression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_literalOperation::constructor_new (var_instructionLocation, var_literalInstruction, var_expression COMMA_SOURCE_FILE_AT_LINE (1401)) ;
  } break ;
  case 21: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_lfsr) COMMA_SOURCE_FILE_AT_LINE (1407)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_luint var_FSRindex = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (1409)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (1410)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_immediatExpression var_expression ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_expression_ (var_expression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_LFSR::constructor_new (var_instructionLocation, var_FSRindex, var_expression COMMA_SOURCE_FILE_AT_LINE (1413)) ;
  } break ;
  case 22: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_tblrd) COMMA_SOURCE_FILE_AT_LINE (1415)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_tableAccessOption var_accessOption ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_48 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE_AT_LINE (1419)) ;
      //-------- @assignmentInstructionForGeneration
      var_accessOption = GALGAS_tableAccessOption::constructor_simpleAccess (SOURCE_FILE_AT_LINE (1420)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A__2B_) COMMA_SOURCE_FILE_AT_LINE (1422)) ;
      //-------- @assignmentInstructionForGeneration
      var_accessOption = GALGAS_tableAccessOption::constructor_postIncrement (SOURCE_FILE_AT_LINE (1423)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A__2D_) COMMA_SOURCE_FILE_AT_LINE (1425)) ;
      //-------- @assignmentInstructionForGeneration
      var_accessOption = GALGAS_tableAccessOption::constructor_postDecrement (SOURCE_FILE_AT_LINE (1426)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2B__2A_) COMMA_SOURCE_FILE_AT_LINE (1428)) ;
      //-------- @assignmentInstructionForGeneration
      var_accessOption = GALGAS_tableAccessOption::constructor_preIncrement (SOURCE_FILE_AT_LINE (1429)) ;
    } break ;
    default:
      break ;
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_TBLRD::constructor_new (var_instructionLocation, var_accessOption COMMA_SOURCE_FILE_AT_LINE (1431)) ;
  } break ;
  case 23: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_tblwt) COMMA_SOURCE_FILE_AT_LINE (1433)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_instructionLocation = inCompiler->here () ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_tableAccessOption var_accessOption ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_49 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE_AT_LINE (1437)) ;
      //-------- @assignmentInstructionForGeneration
      var_accessOption = GALGAS_tableAccessOption::constructor_simpleAccess (SOURCE_FILE_AT_LINE (1438)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A__2B_) COMMA_SOURCE_FILE_AT_LINE (1440)) ;
      //-------- @assignmentInstructionForGeneration
      var_accessOption = GALGAS_tableAccessOption::constructor_postIncrement (SOURCE_FILE_AT_LINE (1441)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A__2D_) COMMA_SOURCE_FILE_AT_LINE (1443)) ;
      //-------- @assignmentInstructionForGeneration
      var_accessOption = GALGAS_tableAccessOption::constructor_postDecrement (SOURCE_FILE_AT_LINE (1444)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2B__2A_) COMMA_SOURCE_FILE_AT_LINE (1446)) ;
      //-------- @assignmentInstructionForGeneration
      var_accessOption = GALGAS_tableAccessOption::constructor_preIncrement (SOURCE_FILE_AT_LINE (1447)) ;
    } break ;
    default:
      break ;
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outInstruction = GALGAS_instruction_5F_TBLWT::constructor_new (var_instructionLocation, var_accessOption COMMA_SOURCE_FILE_AT_LINE (1449)) ;
  } break ;
  default:
    break ;
  }
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_simple_5F_instruction_i20_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_42 (inCompiler)) {
  case 1: {
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_43 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addwf) COMMA_SOURCE_FILE_AT_LINE (1122)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addwfc) COMMA_SOURCE_FILE_AT_LINE (1125)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andwf) COMMA_SOURCE_FILE_AT_LINE (1128)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_comf) COMMA_SOURCE_FILE_AT_LINE (1131)) ;
    } break ;
    case 5: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_decf) COMMA_SOURCE_FILE_AT_LINE (1134)) ;
    } break ;
    case 6: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_incf) COMMA_SOURCE_FILE_AT_LINE (1137)) ;
    } break ;
    case 7: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorwf) COMMA_SOURCE_FILE_AT_LINE (1140)) ;
    } break ;
    case 8: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movf) COMMA_SOURCE_FILE_AT_LINE (1143)) ;
    } break ;
    case 9: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rlcf) COMMA_SOURCE_FILE_AT_LINE (1146)) ;
    } break ;
    case 10: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rlncf) COMMA_SOURCE_FILE_AT_LINE (1149)) ;
    } break ;
    case 11: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rrcf) COMMA_SOURCE_FILE_AT_LINE (1152)) ;
    } break ;
    case 12: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rrncf) COMMA_SOURCE_FILE_AT_LINE (1155)) ;
    } break ;
    case 13: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subfwb) COMMA_SOURCE_FILE_AT_LINE (1158)) ;
    } break ;
    case 14: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subwf) COMMA_SOURCE_FILE_AT_LINE (1161)) ;
    } break ;
    case 15: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_subwfb) COMMA_SOURCE_FILE_AT_LINE (1164)) ;
    } break ;
    case 16: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_swapf) COMMA_SOURCE_FILE_AT_LINE (1167)) ;
    } break ;
    case 17: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorwf) COMMA_SOURCE_FILE_AT_LINE (1170)) ;
    } break ;
    default:
      break ;
    }
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_parse (inCompiler) ;
    //-------- @nonterminalInstructionForGeneration
    nt_optional_5F_w_5F_as_5F_dest_parse (inCompiler) ;
  } break ;
  case 2: {
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_44 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrf) COMMA_SOURCE_FILE_AT_LINE (1187)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movwf) COMMA_SOURCE_FILE_AT_LINE (1190)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mulwf) COMMA_SOURCE_FILE_AT_LINE (1193)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_negf) COMMA_SOURCE_FILE_AT_LINE (1196)) ;
    } break ;
    case 5: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_setf) COMMA_SOURCE_FILE_AT_LINE (1199)) ;
    } break ;
    default:
      break ;
    }
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_parse (inCompiler) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movff) COMMA_SOURCE_FILE_AT_LINE (1211)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_parse (inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (1215)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_parse (inCompiler) ;
  } break ;
  case 4: {
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_45 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bcf) COMMA_SOURCE_FILE_AT_LINE (1226)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bsf) COMMA_SOURCE_FILE_AT_LINE (1228)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_btg) COMMA_SOURCE_FILE_AT_LINE (1230)) ;
    } break ;
    default:
      break ;
    }
    //-------- @nonterminalInstructionForGeneration
    nt_register_5F_parsing_parse (inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (1235)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_bit_5F_number_5F_parsing_parse (inCompiler) ;
  } break ;
  case 5: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jsr) COMMA_SOURCE_FILE_AT_LINE (1245)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1247)) ;
  } break ;
  case 6: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_call) COMMA_SOURCE_FILE_AT_LINE (1254)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1256)) ;
  } break ;
  case 7: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_rcall) COMMA_SOURCE_FILE_AT_LINE (1263)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1265)) ;
  } break ;
  case 8: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jump) COMMA_SOURCE_FILE_AT_LINE (1272)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1274)) ;
  } break ;
  case 9: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_goto) COMMA_SOURCE_FILE_AT_LINE (1281)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1283)) ;
  } break ;
  case 10: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bra) COMMA_SOURCE_FILE_AT_LINE (1290)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1292)) ;
  } break ;
  case 11: {
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_46 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bc) COMMA_SOURCE_FILE_AT_LINE (1301)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bnc) COMMA_SOURCE_FILE_AT_LINE (1303)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bn) COMMA_SOURCE_FILE_AT_LINE (1305)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bnn) COMMA_SOURCE_FILE_AT_LINE (1307)) ;
    } break ;
    case 5: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bov) COMMA_SOURCE_FILE_AT_LINE (1309)) ;
    } break ;
    case 6: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bnov) COMMA_SOURCE_FILE_AT_LINE (1311)) ;
    } break ;
    case 7: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bz) COMMA_SOURCE_FILE_AT_LINE (1313)) ;
    } break ;
    case 8: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_bnz) COMMA_SOURCE_FILE_AT_LINE (1315)) ;
    } break ;
    default:
      break ;
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1318)) ;
  } break ;
  case 12: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_jump) COMMA_SOURCE_FILE_AT_LINE (1326)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1329)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1353)) ;
  } break ;
  case 13: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_clrwdt) COMMA_SOURCE_FILE_AT_LINE (1361)) ;
  } break ;
  case 14: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_daw) COMMA_SOURCE_FILE_AT_LINE (1364)) ;
  } break ;
  case 15: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_nop) COMMA_SOURCE_FILE_AT_LINE (1367)) ;
  } break ;
  case 16: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_pop) COMMA_SOURCE_FILE_AT_LINE (1370)) ;
  } break ;
  case 17: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_push) COMMA_SOURCE_FILE_AT_LINE (1373)) ;
  } break ;
  case 18: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_reset) COMMA_SOURCE_FILE_AT_LINE (1376)) ;
  } break ;
  case 19: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_sleep) COMMA_SOURCE_FILE_AT_LINE (1379)) ;
  } break ;
  case 20: {
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_47 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_addlw) COMMA_SOURCE_FILE_AT_LINE (1384)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_andlw) COMMA_SOURCE_FILE_AT_LINE (1386)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_iorlw) COMMA_SOURCE_FILE_AT_LINE (1388)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_movlw) COMMA_SOURCE_FILE_AT_LINE (1390)) ;
    } break ;
    case 5: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_mullw) COMMA_SOURCE_FILE_AT_LINE (1392)) ;
    } break ;
    case 6: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_sublw) COMMA_SOURCE_FILE_AT_LINE (1394)) ;
    } break ;
    case 7: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_xorlw) COMMA_SOURCE_FILE_AT_LINE (1396)) ;
    } break ;
    default:
      break ;
    }
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_expression_parse (inCompiler) ;
  } break ;
  case 21: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_lfsr) COMMA_SOURCE_FILE_AT_LINE (1407)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (1409)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (1410)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_expression_parse (inCompiler) ;
  } break ;
  case 22: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_tblrd) COMMA_SOURCE_FILE_AT_LINE (1415)) ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_48 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE_AT_LINE (1419)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A__2B_) COMMA_SOURCE_FILE_AT_LINE (1422)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A__2D_) COMMA_SOURCE_FILE_AT_LINE (1425)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2B__2A_) COMMA_SOURCE_FILE_AT_LINE (1428)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 23: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_tblwt) COMMA_SOURCE_FILE_AT_LINE (1433)) ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_49 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE_AT_LINE (1437)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A__2B_) COMMA_SOURCE_FILE_AT_LINE (1440)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A__2D_) COMMA_SOURCE_FILE_AT_LINE (1443)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2B__2A_) COMMA_SOURCE_FILE_AT_LINE (1446)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_immediate_5F_expression_i21_ (GALGAS_immediatExpression & outArgument_outExpression,
                                                                                     C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_immediate_5F_bitwise_5F_term_ (outArgument_outExpression, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_piccolo_5F_syntax_50 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE_AT_LINE (1459)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_immediatExpression var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_immediate_5F_bitwise_5F_term_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_immediatOr::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1462)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5E_) COMMA_SOURCE_FILE_AT_LINE (1464)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_immediatExpression var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_immediate_5F_bitwise_5F_term_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_immediatXor::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1467)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_immediate_5F_expression_i21_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_immediate_5F_bitwise_5F_term_parse (inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_piccolo_5F_syntax_50 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7C_) COMMA_SOURCE_FILE_AT_LINE (1459)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_immediate_5F_bitwise_5F_term_parse (inCompiler) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5E_) COMMA_SOURCE_FILE_AT_LINE (1464)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_immediate_5F_bitwise_5F_term_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_immediate_5F_bitwise_5F_term_i22_ (GALGAS_immediatExpression & outArgument_outExpression,
                                                                                          C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_immediate_5F_bitwise_5F_factor_ (outArgument_outExpression, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_piccolo_5F_syntax_51 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__26_) COMMA_SOURCE_FILE_AT_LINE (1477)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_immediatExpression var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_immediate_5F_bitwise_5F_factor_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_immediatAnd::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1480)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_immediate_5F_bitwise_5F_term_i22_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_immediate_5F_bitwise_5F_factor_parse (inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_piccolo_5F_syntax_51 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__26_) COMMA_SOURCE_FILE_AT_LINE (1477)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_immediate_5F_bitwise_5F_factor_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_immediate_5F_bitwise_5F_factor_i23_ (GALGAS_immediatExpression & outArgument_outExpression,
                                                                                            C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_immediate_5F_term_ (outArgument_outExpression, inCompiler) ;
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_52 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D__3D_) COMMA_SOURCE_FILE_AT_LINE (1490)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_immediatExpression var_rightExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_term_ (var_rightExpression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_immediatEqualTest::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1493)) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21__3D_) COMMA_SOURCE_FILE_AT_LINE (1495)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_immediatExpression var_rightExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_term_ (var_rightExpression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_immediatNotEqualTest::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1498)) ;
  } break ;
  case 4: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3D_) COMMA_SOURCE_FILE_AT_LINE (1500)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_immediatExpression var_rightExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_term_ (var_rightExpression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_immediatGreaterOrEqualTest::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1503)) ;
  } break ;
  case 5: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3D_) COMMA_SOURCE_FILE_AT_LINE (1505)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_immediatExpression var_rightExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_term_ (var_rightExpression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_immediatLowerOrEqualTest::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1508)) ;
  } break ;
  case 6: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (1510)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_immediatExpression var_rightExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_term_ (var_rightExpression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_immediatGreaterTest::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1513)) ;
  } break ;
  case 7: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (1515)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_immediatExpression var_rightExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_term_ (var_rightExpression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_immediatLowerTest::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1518)) ;
  } break ;
  default:
    break ;
  }
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_immediate_5F_bitwise_5F_factor_i23_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_immediate_5F_term_parse (inCompiler) ;
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_52 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3D__3D_) COMMA_SOURCE_FILE_AT_LINE (1490)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_term_parse (inCompiler) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__21__3D_) COMMA_SOURCE_FILE_AT_LINE (1495)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_term_parse (inCompiler) ;
  } break ;
  case 4: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3D_) COMMA_SOURCE_FILE_AT_LINE (1500)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_term_parse (inCompiler) ;
  } break ;
  case 5: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3D_) COMMA_SOURCE_FILE_AT_LINE (1505)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_term_parse (inCompiler) ;
  } break ;
  case 6: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (1510)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_term_parse (inCompiler) ;
  } break ;
  case 7: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (1515)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_term_parse (inCompiler) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_immediate_5F_term_i24_ (GALGAS_immediatExpression & outArgument_outExpression,
                                                                               C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_immediate_5F_factor_ (outArgument_outExpression, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_piccolo_5F_syntax_53 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2B_) COMMA_SOURCE_FILE_AT_LINE (1528)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_immediatExpression var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_immediate_5F_factor_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_immediatAdd::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1531)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (1533)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_immediatExpression var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_immediate_5F_factor_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_immediatSub::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1536)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3C_) COMMA_SOURCE_FILE_AT_LINE (1538)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_immediatExpression var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_immediate_5F_factor_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_immediatLeftShift::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1541)) ;
    } break ;
    case 5: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3E_) COMMA_SOURCE_FILE_AT_LINE (1543)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_immediatExpression var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_immediate_5F_factor_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_immediatRightShift::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1546)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_immediate_5F_term_i24_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_immediate_5F_factor_parse (inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_piccolo_5F_syntax_53 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2B_) COMMA_SOURCE_FILE_AT_LINE (1528)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_immediate_5F_factor_parse (inCompiler) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (1533)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_immediate_5F_factor_parse (inCompiler) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3C__3C_) COMMA_SOURCE_FILE_AT_LINE (1538)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_immediate_5F_factor_parse (inCompiler) ;
    } break ;
    case 5: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3E__3E_) COMMA_SOURCE_FILE_AT_LINE (1543)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_immediate_5F_factor_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_immediate_5F_factor_i25_ (GALGAS_immediatExpression & outArgument_outExpression,
                                                                                 C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_immediate_5F_primary_ (outArgument_outExpression, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_piccolo_5F_syntax_54 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE_AT_LINE (1556)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_immediatExpression var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_immediate_5F_primary_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_immediatMul::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1559)) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__25_) COMMA_SOURCE_FILE_AT_LINE (1561)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_immediatExpression var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_immediate_5F_primary_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_immediatMod::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1564)) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2F_) COMMA_SOURCE_FILE_AT_LINE (1566)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_immediatExpression var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_immediate_5F_primary_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_immediatDiv::constructor_new (outArgument_outExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1569)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_immediate_5F_factor_i25_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @nonterminalInstructionForGeneration
  nt_immediate_5F_primary_parse (inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_piccolo_5F_syntax_54 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2A_) COMMA_SOURCE_FILE_AT_LINE (1556)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_immediate_5F_primary_parse (inCompiler) ;
    } break ;
    case 3: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__25_) COMMA_SOURCE_FILE_AT_LINE (1561)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_immediate_5F_primary_parse (inCompiler) ;
    } break ;
    case 4: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2F_) COMMA_SOURCE_FILE_AT_LINE (1566)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_immediate_5F_primary_parse (inCompiler) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  inCompiler->resetTemplateString () ;
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_immediate_5F_primary_i26_ (GALGAS_immediatExpression & outArgument_outExpression,
                                                                                  C_Lexique_piccolo_5F_lexique * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_55 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (1578)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_immediatExpression var_expression ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_primary_ (var_expression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_immediatNegate::constructor_new (var_expression COMMA_SOURCE_FILE_AT_LINE (1581)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7E_) COMMA_SOURCE_FILE_AT_LINE (1583)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_immediatExpression var_expression ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_primary_ (var_expression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_immediatComplement::constructor_new (var_expression COMMA_SOURCE_FILE_AT_LINE (1586)) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_luint var_constant = inCompiler->synthetizedAttribute_uint_33__32_value () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (1588)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_immediatInteger::constructor_new (var_constant COMMA_SOURCE_FILE_AT_LINE (1589)) ;
  } break ;
  case 4: {
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lchar var_literalCharValue = inCompiler->synthetizedAttribute_charValue () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char) COMMA_SOURCE_FILE_AT_LINE (1591)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_immediatInteger::constructor_new (GALGAS_luint::constructor_new (var_literalCharValue.reader_char (SOURCE_FILE_AT_LINE (1592)).reader_uint (SOURCE_FILE_AT_LINE (1592)), var_literalCharValue.reader_location (SOURCE_FILE_AT_LINE (1592)) COMMA_SOURCE_FILE_AT_LINE (1592)) COMMA_SOURCE_FILE_AT_LINE (1592)) ;
  } break ;
  case 5: {
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_registerName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1594)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_luint var_offset ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_56 (inCompiler)) {
    case 1: {
      //-------- @assignmentInstructionForGeneration
      var_offset = GALGAS_luint::constructor_new (GALGAS_uint ((PMUInt32) 0U), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1597)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (1599)) ;
      //-------- @terminalCheckInstructionForGeneration
      var_offset = inCompiler->synthetizedAttribute_uint_33__32_value () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (1600)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (1601)) ;
    } break ;
    default:
      break ;
    }
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_registerExpression var_registerExpression = GALGAS_registerExpression::constructor_new (var_registerName, var_offset COMMA_SOURCE_FILE_AT_LINE (1603)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_immediatRegister::constructor_new (var_registerExpression COMMA_SOURCE_FILE_AT_LINE (1607)) ;
  } break ;
  case 6: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (1609)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_expression_ (outArgument_outExpression, inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (1611)) ;
  } break ;
  case 7: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__40_) COMMA_SOURCE_FILE_AT_LINE (1613)) ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_registerName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1614)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (1615)) ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_immediatSliceExpressionList var_sliceExpressionList = GALGAS_immediatSliceExpressionList::constructor_emptyList (SOURCE_FILE_AT_LINE (1616)) ;
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      //-------- @terminalCheckInstructionForGeneration
      GALGAS_lstring var_sliceName = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1618)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (1619)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_immediatExpression var_expression ;
      //-------- @nonterminalInstructionForGeneration
      nt_immediate_5F_expression_ (var_expression, inCompiler) ;
      //-------- @addAssignInstructionForGeneration
      var_sliceExpressionList.addAssign_operation (var_sliceName, var_expression COMMA_SOURCE_FILE_AT_LINE (1622)) ;
      switch (select_piccolo_5F_syntax_57 (inCompiler)) {
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (1624)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (1626)) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_immediatSlice::constructor_new (var_registerName, var_sliceExpressionList COMMA_SOURCE_FILE_AT_LINE (1627)) ;
  } break ;
  default:
    break ;
  }
}

void cParser_piccolo_5F_syntax::rule_piccolo_5F_syntax_immediate_5F_primary_i26_parse (C_Lexique_piccolo_5F_lexique * inCompiler) {
  //-------- @selectInstructionForGeneration
  switch (select_piccolo_5F_syntax_55 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (1578)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_primary_parse (inCompiler) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__7E_) COMMA_SOURCE_FILE_AT_LINE (1583)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_primary_parse (inCompiler) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (1588)) ;
  } break ;
  case 4: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_literal_5F_char) COMMA_SOURCE_FILE_AT_LINE (1591)) ;
  } break ;
  case 5: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1594)) ;
    //-------- @selectInstructionForGeneration
    switch (select_piccolo_5F_syntax_56 (inCompiler)) {
    case 1: {
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (1599)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_integer) COMMA_SOURCE_FILE_AT_LINE (1600)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (1601)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  case 6: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (1609)) ;
    //-------- @nonterminalInstructionForGeneration
    nt_immediate_5F_expression_parse (inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (1611)) ;
  } break ;
  case 7: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__40_) COMMA_SOURCE_FILE_AT_LINE (1613)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1614)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (1615)) ;
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (1618)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (1619)) ;
      //-------- @nonterminalInstructionForGeneration
      nt_immediate_5F_expression_parse (inCompiler) ;
      switch (select_piccolo_5F_syntax_57 (inCompiler)) {
      case 2: {
        //-------- @terminalCheckInstructionForGeneration
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (1624)) ;
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_piccolo_5F_lexique::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (1626)) ;
  } break ;
  default:
    break ;
  }
  inCompiler->resetTemplateString () ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


