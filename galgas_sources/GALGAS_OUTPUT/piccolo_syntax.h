//---------------------------------------------------------------------------*
//                                                                           *
//                         File 'piccolo_syntax.h'                           *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     november 9th, 2009, at 17h27'21"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef piccolo_syntax_DEFINED
#define piccolo_syntax_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/C_GGS_Object.h"
#include "galgas/GGS_location.h"
#include "galgas/GGS_data.h"
#include "galgas/GGS_lbool.h"
#include "galgas/GGS_lchar.h"
#include "galgas/GGS_lstring.h"
#include "galgas/GGS_ldouble.h"
#include "galgas/GGS_luint.h"
#include "galgas/GGS_lsint.h"
#include "galgas/GGS_luint64.h"
#include "galgas/GGS_lsint64.h"
#include "galgas/GGS_stringset.h"
#include "galgas/GGS_binaryset.h"
#include "galgas/GGS_filewrapper.h"
#include "galgas/predefined_types.h"
#include "galgas/AC_galgas_class.h"
#include "galgas/AC_galgas_domain.h"
#include "galgas/AC_galgas_mapindex.h"
#include "galgas/AC_galgas_map.h"
#include "galgas/AC_galgas_listmap.h"
#include "galgas/AC_galgas_list.h"
#include "galgas/AC_galgas_sortedlist.h"

//---------------------------------------------------------------------------*

#include "piccolo_lexique.h"

// Include imported semantics
#include "pic18_metamodel.h"
#include "pic18_semantics.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*
//                                                                           *
//                 Parser class piccolo_syntax declaration                   *
//                                                                           *
//---------------------------------------------------------------------------*

class piccolo_syntax {
  public : virtual ~piccolo_syntax (void) {}

  protected : virtual void nt_configuration_definition_ (piccolo_lexique &,
                                GGS_configDefinitionList  &,
                                GGS_bool &) = 0 ;

  protected : virtual void nt_configuration_definition_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_declaration_in_ram_ (piccolo_lexique &,
                                GGS_declarationInRam  &) = 0 ;

  protected : virtual void nt_declaration_in_ram_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_ram_definition_ (piccolo_lexique &,
                                GGS_ramDefinitionList  &) = 0 ;

  protected : virtual void nt_ram_definition_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_constant_definition_ (piccolo_lexique &,
                                GGS_constantDefinitionList  &) = 0 ;

  protected : virtual void nt_constant_definition_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_interrupt_definition_ (piccolo_lexique &,
                                GGS_interruptDefinitionList  &,
                                GGS_bool &,
                                GGS_bool &) = 0 ;

  protected : virtual void nt_interrupt_definition_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_routine_definition_ (piccolo_lexique &,
                                GGS_routineDefinitionList  &,
                                GGS_bool &,
                                GGS_bool &) = 0 ;

  protected : virtual void nt_routine_definition_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_simple_instruction_ (piccolo_lexique &,
                                GGS_piccolo_instruction  &) = 0 ;

  protected : virtual void nt_simple_instruction_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_structured_instruction_ (piccolo_lexique &,
                                GGS_piccolo_instruction  &,
                                GGS_bool &,
                                GGS_bool &) = 0 ;

  protected : virtual void nt_structured_instruction_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_instruction_list_ (piccolo_lexique &,
                                GGS_instructionList  &,
                                GGS_bool &,
                                GGS_bool &) = 0 ;

  protected : virtual void nt_instruction_list_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_structured_if_instruction_ (piccolo_lexique &,
                                GGS_piccolo_instruction  &,
                                GGS_bool &,
                                GGS_bool &) = 0 ;

  protected : virtual void nt_structured_if_instruction_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_start_symbol_ (piccolo_lexique &) = 0 ;

  protected : virtual void nt_start_symbol_importBootloaderSpecification (piccolo_lexique &,
                                GGS_piccoloDeviceModel &,
                                GGS_uint  &,
                                GGS_ramBankTable  &,
                                GGS_registerTable  &,
                                GGS_bootloaderReservedRAMmap  &,
                                GGS_routineDeclarationList  &,
                                GGS_routineDeclarationList  &,
                                GGS_luint  &) = 0 ;

  protected : virtual void nt_register_parsing_ (piccolo_lexique &,
                                GGS_registerExpression  &) = 0 ;

  protected : virtual void nt_register_parsing_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_optional_w_as_dest_ (piccolo_lexique &,
                                GGS_bool &) = 0 ;

  protected : virtual void nt_optional_w_as_dest_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_bit_number_parsing_ (piccolo_lexique &,
                                GGS_bitNumberExpression  &) = 0 ;

  protected : virtual void nt_bit_number_parsing_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_condition_factor_ (piccolo_lexique &,
                                GGS_conditionExpression  &) = 0 ;

  protected : virtual void nt_condition_factor_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_condition_term_ (piccolo_lexique &,
                                GGS_conditionExpression  &) = 0 ;

  protected : virtual void nt_condition_term_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_condition_expression_ (piccolo_lexique &,
                                GGS_conditionExpression  &) = 0 ;

  protected : virtual void nt_condition_expression_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_immediate_expression_ (piccolo_lexique &,
                                GGS_immediatExpression  &) = 0 ;

  protected : virtual void nt_immediate_expression_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_immediate_bitwise_term_ (piccolo_lexique &,
                                GGS_immediatExpression  &) = 0 ;

  protected : virtual void nt_immediate_bitwise_term_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_immediate_bitwise_factor_ (piccolo_lexique &,
                                GGS_immediatExpression  &) = 0 ;

  protected : virtual void nt_immediate_bitwise_factor_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_immediate_term_ (piccolo_lexique &,
                                GGS_immediatExpression  &) = 0 ;

  protected : virtual void nt_immediate_term_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_immediate_factor_ (piccolo_lexique &,
                                GGS_immediatExpression  &) = 0 ;

  protected : virtual void nt_immediate_factor_parse (piccolo_lexique &) = 0 ;

  protected : virtual void nt_immediate_primary_ (piccolo_lexique &,
                                GGS_immediatExpression  &) = 0 ;

  protected : virtual void nt_immediate_primary_parse (piccolo_lexique &) = 0 ;

  protected : void pr_start_symbol_piccolo_syntax_131_19_ (piccolo_lexique &) ;

  protected : virtual PMSInt16 select_piccolo_syntax_0 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_repeat_piccolo_syntax_1 (piccolo_lexique &) = 0 ;

  protected : void pr_start_symbol_piccolo_syntax_131_19_importBootloaderSpecification (piccolo_lexique &,
                                GGS_piccoloDeviceModel &,
                                GGS_uint  &,
                                GGS_ramBankTable  &,
                                GGS_registerTable  &,
                                GGS_bootloaderReservedRAMmap  &,
                                GGS_routineDeclarationList  &,
                                GGS_routineDeclarationList  &,
                                GGS_luint  &) ;

  protected : void pr_configuration_definition_piccolo_syntax_257_31_ (piccolo_lexique &,
                                GGS_configDefinitionList  &,
                                GGS_bool &) ;

  protected : virtual PMSInt16 select_repeat_piccolo_syntax_2 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_3 (piccolo_lexique &) = 0 ;

  protected : void pr_configuration_definition_piccolo_syntax_257_31_parse (piccolo_lexique & inLexique) ;

  protected : void pr_declaration_in_ram_piccolo_syntax_289_25_ (piccolo_lexique &,
                                GGS_declarationInRam  &) ;

  protected : virtual PMSInt16 select_piccolo_syntax_4 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_5 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_repeat_piccolo_syntax_6 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_7 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_repeat_piccolo_syntax_8 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_9 (piccolo_lexique &) = 0 ;

  protected : void pr_declaration_in_ram_piccolo_syntax_289_25_parse (piccolo_lexique & inLexique) ;

  protected : void pr_declaration_in_ram_piccolo_syntax_366_25_ (piccolo_lexique &,
                                GGS_declarationInRam  &) ;

  protected : virtual PMSInt16 select_repeat_piccolo_syntax_10 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_repeat_piccolo_syntax_11 (piccolo_lexique &) = 0 ;

  protected : void pr_declaration_in_ram_piccolo_syntax_366_25_parse (piccolo_lexique & inLexique) ;

  protected : void pr_ram_definition_piccolo_syntax_389_21_ (piccolo_lexique &,
                                GGS_ramDefinitionList  &) ;

  protected : virtual PMSInt16 select_repeat_piccolo_syntax_12 (piccolo_lexique &) = 0 ;

  protected : void pr_ram_definition_piccolo_syntax_389_21_parse (piccolo_lexique & inLexique) ;

  protected : void pr_constant_definition_piccolo_syntax_408_26_ (piccolo_lexique &,
                                GGS_constantDefinitionList  &) ;

  protected : void pr_constant_definition_piccolo_syntax_408_26_parse (piccolo_lexique & inLexique) ;

  protected : void pr_instruction_list_piccolo_syntax_421_23_ (piccolo_lexique &,
                                GGS_instructionList  &,
                                GGS_bool &,
                                GGS_bool &) ;

  protected : virtual PMSInt16 select_repeat_piccolo_syntax_13 (piccolo_lexique &) = 0 ;

  protected : void pr_instruction_list_piccolo_syntax_421_23_parse (piccolo_lexique & inLexique) ;

  protected : void pr_interrupt_definition_piccolo_syntax_445_27_ (piccolo_lexique &,
                                GGS_interruptDefinitionList  &,
                                GGS_bool &,
                                GGS_bool &) ;

  protected : virtual PMSInt16 select_piccolo_syntax_14 (piccolo_lexique &) = 0 ;

  protected : void pr_interrupt_definition_piccolo_syntax_445_27_parse (piccolo_lexique & inLexique) ;

  protected : void pr_routine_definition_piccolo_syntax_472_25_ (piccolo_lexique &,
                                GGS_routineDefinitionList  &,
                                GGS_bool &,
                                GGS_bool &) ;

  protected : virtual PMSInt16 select_piccolo_syntax_15 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_16 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_17 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_18 (piccolo_lexique &) = 0 ;

  protected : void pr_routine_definition_piccolo_syntax_472_25_parse (piccolo_lexique & inLexique) ;

  protected : void pr_register_parsing_piccolo_syntax_540_23_ (piccolo_lexique &,
                                GGS_registerExpression  &) ;

  protected : virtual PMSInt16 select_piccolo_syntax_19 (piccolo_lexique &) = 0 ;

  protected : void pr_register_parsing_piccolo_syntax_540_23_parse (piccolo_lexique & inLexique) ;

  protected : void pr_bit_number_parsing_piccolo_syntax_558_25_ (piccolo_lexique &,
                                GGS_bitNumberExpression  &) ;

  protected : virtual PMSInt16 select_piccolo_syntax_20 (piccolo_lexique &) = 0 ;

  protected : void pr_bit_number_parsing_piccolo_syntax_558_25_parse (piccolo_lexique & inLexique) ;

  protected : void pr_bit_number_parsing_piccolo_syntax_573_25_ (piccolo_lexique &,
                                GGS_bitNumberExpression  &) ;

  protected : void pr_bit_number_parsing_piccolo_syntax_573_25_parse (piccolo_lexique & inLexique) ;

  protected : void pr_optional_w_as_dest_piccolo_syntax_580_25_ (piccolo_lexique &,
                                GGS_bool &) ;

  protected : virtual PMSInt16 select_piccolo_syntax_21 (piccolo_lexique &) = 0 ;

  protected : void pr_optional_w_as_dest_piccolo_syntax_580_25_parse (piccolo_lexique & inLexique) ;

  protected : void pr_condition_factor_piccolo_syntax_592_23_ (piccolo_lexique &,
                                GGS_conditionExpression  &) ;

  protected : void pr_condition_factor_piccolo_syntax_592_23_parse (piccolo_lexique & inLexique) ;

  protected : void pr_condition_factor_piccolo_syntax_603_23_ (piccolo_lexique &,
                                GGS_conditionExpression  &) ;

  protected : void pr_condition_factor_piccolo_syntax_603_23_parse (piccolo_lexique & inLexique) ;

  protected : void pr_condition_factor_piccolo_syntax_611_23_ (piccolo_lexique &,
                                GGS_conditionExpression  &) ;

  protected : virtual PMSInt16 select_piccolo_syntax_22 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_23 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_24 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_25 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_26 (piccolo_lexique &) = 0 ;

  protected : void pr_condition_factor_piccolo_syntax_611_23_parse (piccolo_lexique & inLexique) ;

  protected : void pr_condition_expression_piccolo_syntax_758_27_ (piccolo_lexique &,
                                GGS_conditionExpression  &) ;

  protected : virtual PMSInt16 select_repeat_piccolo_syntax_27 (piccolo_lexique &) = 0 ;

  protected : void pr_condition_expression_piccolo_syntax_758_27_parse (piccolo_lexique & inLexique) ;

  protected : void pr_condition_term_piccolo_syntax_777_21_ (piccolo_lexique &,
                                GGS_conditionExpression  &) ;

  protected : virtual PMSInt16 select_repeat_piccolo_syntax_28 (piccolo_lexique &) = 0 ;

  protected : void pr_condition_term_piccolo_syntax_777_21_parse (piccolo_lexique & inLexique) ;

  protected : void pr_structured_instruction_piccolo_syntax_792_29_ (piccolo_lexique &,
                                GGS_piccolo_instruction  &,
                                GGS_bool &,
                                GGS_bool &) ;

  protected : virtual PMSInt16 select_piccolo_syntax_29 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_30 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_repeat_piccolo_syntax_31 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_repeat_piccolo_syntax_32 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_repeat_piccolo_syntax_33 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_repeat_piccolo_syntax_34 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_35 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_36 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_37 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_38 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_39 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_repeat_piccolo_syntax_40 (piccolo_lexique &) = 0 ;

  protected : void pr_structured_instruction_piccolo_syntax_792_29_parse (piccolo_lexique & inLexique) ;

  protected : void pr_structured_if_instruction_piccolo_syntax_1073_32_ (piccolo_lexique &,
                                GGS_piccolo_instruction  &,
                                GGS_bool &,
                                GGS_bool &) ;

  protected : virtual PMSInt16 select_piccolo_syntax_41 (piccolo_lexique &) = 0 ;

  protected : void pr_structured_if_instruction_piccolo_syntax_1073_32_parse (piccolo_lexique & inLexique) ;

  protected : void pr_simple_instruction_piccolo_syntax_1120_25_ (piccolo_lexique &,
                                GGS_piccolo_instruction  &) ;

  protected : virtual PMSInt16 select_piccolo_syntax_42 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_43 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_44 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_45 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_46 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_47 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_48 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_49 (piccolo_lexique &) = 0 ;

  protected : void pr_simple_instruction_piccolo_syntax_1120_25_parse (piccolo_lexique & inLexique) ;

  protected : void pr_immediate_expression_piccolo_syntax_1457_27_ (piccolo_lexique &,
                                GGS_immediatExpression  &) ;

  protected : virtual PMSInt16 select_repeat_piccolo_syntax_50 (piccolo_lexique &) = 0 ;

  protected : void pr_immediate_expression_piccolo_syntax_1457_27_parse (piccolo_lexique & inLexique) ;

  protected : void pr_immediate_bitwise_term_piccolo_syntax_1475_30_ (piccolo_lexique &,
                                GGS_immediatExpression  &) ;

  protected : virtual PMSInt16 select_repeat_piccolo_syntax_51 (piccolo_lexique &) = 0 ;

  protected : void pr_immediate_bitwise_term_piccolo_syntax_1475_30_parse (piccolo_lexique & inLexique) ;

  protected : void pr_immediate_bitwise_factor_piccolo_syntax_1488_31_ (piccolo_lexique &,
                                GGS_immediatExpression  &) ;

  protected : virtual PMSInt16 select_piccolo_syntax_52 (piccolo_lexique &) = 0 ;

  protected : void pr_immediate_bitwise_factor_piccolo_syntax_1488_31_parse (piccolo_lexique & inLexique) ;

  protected : void pr_immediate_term_piccolo_syntax_1526_21_ (piccolo_lexique &,
                                GGS_immediatExpression  &) ;

  protected : virtual PMSInt16 select_repeat_piccolo_syntax_53 (piccolo_lexique &) = 0 ;

  protected : void pr_immediate_term_piccolo_syntax_1526_21_parse (piccolo_lexique & inLexique) ;

  protected : void pr_immediate_factor_piccolo_syntax_1554_23_ (piccolo_lexique &,
                                GGS_immediatExpression  &) ;

  protected : virtual PMSInt16 select_repeat_piccolo_syntax_54 (piccolo_lexique &) = 0 ;

  protected : void pr_immediate_factor_piccolo_syntax_1554_23_parse (piccolo_lexique & inLexique) ;

  protected : void pr_immediate_primary_piccolo_syntax_1578_24_ (piccolo_lexique &,
                                GGS_immediatExpression  &) ;

  protected : virtual PMSInt16 select_piccolo_syntax_55 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_piccolo_syntax_56 (piccolo_lexique &) = 0 ;

  protected : virtual PMSInt16 select_repeat_piccolo_syntax_57 (piccolo_lexique &) = 0 ;

  protected : void pr_immediate_primary_piccolo_syntax_1578_24_parse (piccolo_lexique & inLexique) ;

} ;

//---------------------------------------------------------------------------*

#endif
