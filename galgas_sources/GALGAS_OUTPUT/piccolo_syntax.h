//---------------------------------------------------------------------------*
//                                                                           *
//                         File 'piccolo_syntax.h'                           *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       july 16th, 2008, at 12h1'38"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef piccolo_syntax_DEFINED
#define piccolo_syntax_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/C_GGS_Object.h"
#include "galgas/GGS_location.h"
#include "galgas/GGS_lbool.h"
#include "galgas/GGS_lchar.h"
#include "galgas/GGS_lstring.h"
#include "galgas/GGS_ldouble.h"
#include "galgas/GGS_luint.h"
#include "galgas/GGS_lsint.h"
#include "galgas/GGS_luint64.h"
#include "galgas/GGS_lsint64.h"
#include "galgas/GGS_stringset.h"
#include "galgas/GGS_binaryset.h"
#include "galgas/GGS_filewrapper.h"
#include "galgas/predefined_types.h"
#include "galgas/AC_galgas_class.h"
#include "galgas/AC_galgas_domain.h"
#include "galgas/AC_galgas_mapindex.h"
#include "galgas/AC_galgas_map.h"
#include "galgas/AC_galgas_listmap.h"
#include "galgas/AC_galgas_list.h"
#include "galgas/AC_galgas_sortedlist.h"

//---------------------------------------------------------------------------*

#include "piccolo_lexique.h"

// Include imported semantics
#include "piccolo_options.h"
#include "piccolo_semantics.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*
//                                                                           *
//                 Parser class piccolo_syntax declaration                   *
//                                                                           *
//---------------------------------------------------------------------------*

class piccolo_syntax {
  public : virtual ~piccolo_syntax (void) {}

  protected : virtual void nt_configuration_definition_ (piccolo_lexique &) = 0 ;

  protected : virtual void nt_ram_definition_ (piccolo_lexique &) = 0 ;

  protected : virtual void nt_interrupt_definition_ (piccolo_lexique &) = 0 ;

  protected : virtual void nt_routine_definition_ (piccolo_lexique &) = 0 ;

  protected : virtual void nt_instruction_ (piccolo_lexique &) = 0 ;

  protected : virtual void nt_start_symbol_ (piccolo_lexique &) = 0 ;

  protected : virtual void nt_register_parsing_ (piccolo_lexique &) = 0 ;

  protected : virtual void nt_optional_w_as_dest_ (piccolo_lexique &) = 0 ;

  protected : void pr_start_symbol_piccolo_syntax_19_4_ (piccolo_lexique &) ;

  protected : virtual sint16 select_repeat_piccolo_syntax_0 (piccolo_lexique &) = 0 ;

  protected : void pr_configuration_definition_piccolo_syntax_39_4_ (piccolo_lexique &) ;

  protected : void pr_ram_definition_piccolo_syntax_47_4_ (piccolo_lexique &) ;

  protected : void pr_interrupt_definition_piccolo_syntax_55_4_ (piccolo_lexique &) ;

  protected : virtual sint16 select_repeat_piccolo_syntax_1 (piccolo_lexique &) = 0 ;

  protected : void pr_routine_definition_piccolo_syntax_67_4_ (piccolo_lexique &) ;

  protected : virtual sint16 select_repeat_piccolo_syntax_2 (piccolo_lexique &) = 0 ;

  protected : void pr_instruction_piccolo_syntax_82_4_ (piccolo_lexique &) ;

  protected : virtual sint16 select_piccolo_syntax_3 (piccolo_lexique &) = 0 ;

  protected : void pr_register_parsing_piccolo_syntax_96_4_ (piccolo_lexique &) ;

  protected : void pr_optional_w_as_dest_piccolo_syntax_102_4_ (piccolo_lexique &) ;

  protected : virtual sint16 select_piccolo_syntax_4 (piccolo_lexique &) = 0 ;

} ;

//---------------------------------------------------------------------------*

#endif
