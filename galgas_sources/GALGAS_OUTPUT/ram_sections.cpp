//---------------------------------------------------------------------------*
//                                                                           *
//                         File 'ram_sections.cpp'                           *
//             Generated by version version GALGAS_BETA_VERSION              *
//                    november 13th, 2010, at 23h25'43"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "ram_sections.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*

#include "piccolo_options.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "ram_sections.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'analyze_ram_sections'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyze_5F_ram_5F_sections (const GALGAS_string constinArgument_inListingTitle,
                                         const GALGAS_ramDefinitionList constinArgument_inRamDefinitionList,
                                         GALGAS_ramBankTable & ioArgument_ioRamBankTable,
                                         const GALGAS_registerTable constinArgument_inSpecialRegisterTable,
                                         GALGAS_string & ioArgument_ioListFileContents,
                                         GALGAS_registerTable & ioArgument_ioAllRegisters,
                                         C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @foreachInstructionForGeneration
  cEnumerator_ramDefinitionList enumerator_3891 (constinArgument_inRamDefinitionList, true) ;
  //--- simple foreach instruction
  while (enumerator_3891.hasCurrentObject ()) {
    //-------- @foreachInstructionForGeneration
    cEnumerator_declarationInRamList enumerator_3919 (enumerator_3891.current_mDeclaration (HERE), true) ;
    //--- simple foreach instruction
    while (enumerator_3919.hasCurrentObject ()) {
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_handleDeclaration ((const cPtr_declarationInRam *) enumerator_3919.current_mDeclarationInRAM (HERE).ptr (), ioArgument_ioRamBankTable, ioArgument_ioAllRegisters, enumerator_3891.current_mBankName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (94)) ;
      //-------- END @methodCallInstructionForGeneration
      enumerator_3919.gotoNextObject () ;
    }
    enumerator_3891.gotoNextObject () ;
  }
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (gOption_piccolo_5F_options_ouputListingFile.reader_value ()).isValidAndTrue ()) {
    //-------- @appendInstructionForGeneration
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("").reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (98)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (98)) COMMA_SOURCE_FILE_AT_LINE (98)) ;
    //-------- @appendInstructionForGeneration
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*").operator_concat (constinArgument_inListingTitle.reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 77U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (99)) COMMA_SOURCE_FILE_AT_LINE (99)).operator_concat (GALGAS_string ("*\n") COMMA_SOURCE_FILE_AT_LINE (99)) COMMA_SOURCE_FILE_AT_LINE (99)) ;
    //-------- @appendInstructionForGeneration
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("").reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (100)).operator_concat (GALGAS_string ("\n"
      "\n") COMMA_SOURCE_FILE_AT_LINE (100)) COMMA_SOURCE_FILE_AT_LINE (100)) ;
    //-------- @appendInstructionForGeneration
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("Variable").reader_stringByLeftPadding (GALGAS_uint ((PMUInt32) 40U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (101)).operator_concat (GALGAS_string (" Address\n") COMMA_SOURCE_FILE_AT_LINE (101)) COMMA_SOURCE_FILE_AT_LINE (101)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_registerTable enumerator_4469 (ioArgument_ioAllRegisters, true) ;
    //--- simple foreach instruction
    while (enumerator_4469.hasCurrentObject ()) {
      //-------- @ifInstructionForGeneration
      if (constinArgument_inSpecialRegisterTable.reader_hasKey (enumerator_4469.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (103)) COMMA_SOURCE_FILE_AT_LINE (103)).operator_not (SOURCE_FILE_AT_LINE (103)).isValidAndTrue ()) {
        //-------- @appendInstructionForGeneration
        ioArgument_ioListFileContents.dotAssign_operation (enumerator_4469.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (104)).reader_stringByLeftPadding (GALGAS_uint ((PMUInt32) 40U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (104)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (104)) COMMA_SOURCE_FILE_AT_LINE (104)) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_uintlist enumerator_4665 (enumerator_4469.current_mRegisterAddressList (HERE), true) ;
        //--- simple foreach instruction
        while (enumerator_4665.hasCurrentObject ()) {
          //-------- @appendInstructionForGeneration
          ioArgument_ioListFileContents.dotAssign_operation (enumerator_4665.current_mValue (HERE).reader_hexString (SOURCE_FILE_AT_LINE (106)) COMMA_SOURCE_FILE_AT_LINE (106)) ;
          if (enumerator_4665.hasNextObject ()) {
            //-------- @appendInstructionForGeneration
            ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (107)) ;
          }
          enumerator_4665.gotoNextObject () ;
        }
        //-------- @appendInstructionForGeneration
        ioArgument_ioListFileContents.dotAssign_operation (enumerator_4469.current_mBitDefinitionString (HERE).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (109)) COMMA_SOURCE_FILE_AT_LINE (109)) ;
      }
      enumerator_4469.gotoNextObject () ;
    }
    //-------- @appendInstructionForGeneration
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (112)) ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//      Abstract category method '@declarationInRam handleDeclaration'       *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_declarationInRam_handleDeclaration> gCategoryMethodTable_declarationInRam_handleDeclaration ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_handleDeclaration (const PMSInt32 inClassIndex,
                                            categoryMethodSignature_declarationInRam_handleDeclaration inMethod) {
  gCategoryMethodTable_declarationInRam_handleDeclaration.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_declarationInRam_handleDeclaration (void) {
  gCategoryMethodTable_declarationInRam_handleDeclaration.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_declarationInRam_handleDeclaration (NULL,
                                                               freeCategoryMethod_declarationInRam_handleDeclaration) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_handleDeclaration (const cPtr_declarationInRam * inObject,
                                           GALGAS_ramBankTable & io_ioRamBank,
                                           GALGAS_registerTable & io_ioRegisterTable,
                                           const GALGAS_lstring constin_inCurrentRamBank,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_declarationInRam) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_declarationInRam_handleDeclaration f = NULL ;
    if (classIndex < gCategoryMethodTable_declarationInRam_handleDeclaration.count ()) {
      f = gCategoryMethodTable_declarationInRam_handleDeclaration (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_declarationInRam_handleDeclaration.count ()) {
           f = gCategoryMethodTable_declarationInRam_handleDeclaration (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_declarationInRam_handleDeclaration.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    f (inObject, io_ioRamBank, io_ioRegisterTable, constin_inCurrentRamBank, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@commonDeclarationInRam handleDeclaration'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_commonDeclarationInRam_handleDeclaration (const cPtr_declarationInRam * inObject,
                                                                     GALGAS_ramBankTable & ioArgument_ioRamBank,
                                                                     GALGAS_registerTable & ioArgument_ioRegisterTable,
                                                                     const GALGAS_lstring constinArgument_inCurrentRamBank,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_commonDeclarationInRam * object = (const cPtr_commonDeclarationInRam *) inObject ;
  macroValidSharedObject (object, const cPtr_commonDeclarationInRam) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_uint var_firstFreeAddressBeforeCommon ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_uint joker_1219_0 ; // Joker input parameter
  GALGAS_uint joker_1252_0 ; // Joker input parameter
  GALGAS_uintlist joker_1255_0 ; // Joker input parameter
  ioArgument_ioRamBank.method_searchKey (constinArgument_inCurrentRamBank, joker_1219_0, var_firstFreeAddressBeforeCommon, joker_1252_0, joker_1255_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (31)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_firstFreeAddressDefined = GALGAS_bool (false) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_uint var_firstFreeAddress = GALGAS_uint ((PMUInt32) 0U) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_commonBranchList enumerator_1358 (object->mAttribute_mBranchList, true) ;
  //--- simple foreach instruction
  while (enumerator_1358.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_ramBankTable var_ramBank = ioArgument_ioRamBank ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_declarationInRamList enumerator_1428 (enumerator_1358.current_mDeclarations (HERE), true) ;
    //--- simple foreach instruction
    while (enumerator_1428.hasCurrentObject ()) {
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_handleDeclaration ((const cPtr_declarationInRam *) enumerator_1428.current_mDeclarationInRAM (HERE).ptr (), var_ramBank, ioArgument_ioRegisterTable, constinArgument_inCurrentRamBank, inCompiler COMMA_SOURCE_FILE_AT_LINE (37)) ;
      //-------- END @methodCallInstructionForGeneration
      enumerator_1428.gotoNextObject () ;
    }
    //-------- @localVariableDeclarationForGeneration
    GALGAS_uint var_ffa ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_uint joker_1598_0 ; // Joker input parameter
    GALGAS_uint joker_1606_0 ; // Joker input parameter
    GALGAS_uintlist joker_1609_0 ; // Joker input parameter
    var_ramBank.method_searchKey (constinArgument_inCurrentRamBank, joker_1598_0, var_ffa, joker_1606_0, joker_1609_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (40)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @ifInstructionForGeneration
    if (var_firstFreeAddressDefined.operator_not (SOURCE_FILE_AT_LINE (41)).isValidAndTrue ()) {
      //-------- @assignmentInstructionForGeneration
      var_firstFreeAddress = var_ffa ;
      //-------- @assignmentInstructionForGeneration
      var_firstFreeAddressDefined = GALGAS_bool (true) ;
    }else{
      //-------- @ifInstructionForGeneration
      if (GALGAS_bool (kIsNotEqual, var_ffa.objectCompare (var_firstFreeAddress)).isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (enumerator_1358.current_mEndOfBranchLocation (HERE), GALGAS_string ("this branch allocates ").operator_concat (var_ffa.substract_operation (var_firstFreeAddressBeforeCommon, inCompiler COMMA_SOURCE_FILE_AT_LINE (45)).reader_string (SOURCE_FILE_AT_LINE (45)) COMMA_SOURCE_FILE_AT_LINE (45)).operator_concat (GALGAS_string (" byte(s), while the first branch allocates ") COMMA_SOURCE_FILE_AT_LINE (46)).operator_concat (var_firstFreeAddress.substract_operation (var_firstFreeAddressBeforeCommon, inCompiler COMMA_SOURCE_FILE_AT_LINE (47)).reader_string (SOURCE_FILE_AT_LINE (47)) COMMA_SOURCE_FILE_AT_LINE (47)).operator_concat (GALGAS_string (" byte(s)") COMMA_SOURCE_FILE_AT_LINE (47)) COMMA_SOURCE_FILE_AT_LINE (45)) ;
      }
    }
    enumerator_1358.gotoNextObject () ;
  }
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioRamBank.modifier_setMFirstFreeAddressForKey (var_firstFreeAddress, constinArgument_inCurrentRamBank.reader_string (SOURCE_FILE_AT_LINE (50)), inCompiler COMMA_SOURCE_FILE_AT_LINE (50)) ;
  } //-------- END @typeMethodInstructionForGeneration
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_commonDeclarationInRam_handleDeclaration (void) {
  enterCategoryMethod_handleDeclaration (kTypeDescriptor_GALGAS_commonDeclarationInRam.mSlotID,
                                         categoryMethod_commonDeclarationInRam_handleDeclaration) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_commonDeclarationInRam_handleDeclaration (defineCategoryMethod_commonDeclarationInRam_handleDeclaration, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@byteDeclarationInRam handleDeclaration'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_byteDeclarationInRam_handleDeclaration (const cPtr_declarationInRam * inObject,
                                                                   GALGAS_ramBankTable & ioArgument_ioRamBank,
                                                                   GALGAS_registerTable & ioArgument_ioRegisterTable,
                                                                   const GALGAS_lstring constinArgument_inCurrentRamBank,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_byteDeclarationInRam * object = (const cPtr_byteDeclarationInRam *) inObject ;
  macroValidSharedObject (object, const cPtr_byteDeclarationInRam) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_uint var_lastAddressPlusOne ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_uint var_firstFreeAddress ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_uintlist var_mirrorOffsetList ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_uint joker_2497_0 ; // Joker input parameter
  ioArgument_ioRamBank.method_searchKey (constinArgument_inCurrentRamBank, joker_2497_0, var_firstFreeAddress, var_lastAddressPlusOne, var_mirrorOffsetList, inCompiler COMMA_SOURCE_FILE_AT_LINE (63)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsEqual, object->mAttribute_mSize.reader_uint (SOURCE_FILE_AT_LINE (64)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_0 (object->mAttribute_mSize.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_0, GALGAS_string ("zero size is not allowed") COMMA_SOURCE_FILE_AT_LINE (65)) ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_uintlist var_addressList = GALGAS_uintlist::constructor_listWithValue (var_firstFreeAddress COMMA_SOURCE_FILE_AT_LINE (67)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_uintlist enumerator_2731 (var_mirrorOffsetList, true) ;
  //--- simple foreach instruction
  while (enumerator_2731.hasCurrentObject ()) {
    //-------- @addAssignInstructionForGeneration
    var_addressList.addAssign_operation (var_firstFreeAddress.add_operation (enumerator_2731.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (69)) COMMA_SOURCE_FILE_AT_LINE (69)) ;
    enumerator_2731.gotoNextObject () ;
  }
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioRegisterTable.modifier_insertKey (object->mAttribute_mName, var_addressList, object->mAttribute_mSize.reader_uint (SOURCE_FILE_AT_LINE (71)), object->mAttribute_mBitSliceTable, object->mAttribute_mBitDefinitionString, inCompiler COMMA_SOURCE_FILE_AT_LINE (71)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  var_firstFreeAddress = var_firstFreeAddress.add_operation (object->mAttribute_mSize.reader_uint (SOURCE_FILE_AT_LINE (72)), inCompiler COMMA_SOURCE_FILE_AT_LINE (72)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioRamBank.modifier_setMFirstFreeAddressForKey (var_firstFreeAddress, constinArgument_inCurrentRamBank.reader_string (SOURCE_FILE_AT_LINE (73)), inCompiler COMMA_SOURCE_FILE_AT_LINE (73)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsStrictSup, var_firstFreeAddress.objectCompare (var_lastAddressPlusOne)).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_1 (object->mAttribute_mName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("overflow in '").operator_concat (constinArgument_inCurrentRamBank.reader_string (SOURCE_FILE_AT_LINE (75)) COMMA_SOURCE_FILE_AT_LINE (75)).operator_concat (GALGAS_string ("' ram bank for '") COMMA_SOURCE_FILE_AT_LINE (75)).operator_concat (object->mAttribute_mName.reader_string (SOURCE_FILE_AT_LINE (75)) COMMA_SOURCE_FILE_AT_LINE (75)).operator_concat (GALGAS_string ("' declaration") COMMA_SOURCE_FILE_AT_LINE (75)) COMMA_SOURCE_FILE_AT_LINE (75)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_byteDeclarationInRam_handleDeclaration (void) {
  enterCategoryMethod_handleDeclaration (kTypeDescriptor_GALGAS_byteDeclarationInRam.mSlotID,
                                         categoryMethod_byteDeclarationInRam_handleDeclaration) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_byteDeclarationInRam_handleDeclaration (defineCategoryMethod_byteDeclarationInRam_handleDeclaration, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


