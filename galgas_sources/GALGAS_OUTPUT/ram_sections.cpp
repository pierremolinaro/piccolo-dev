//---------------------------------------------------------------------------*
//                                                                           *
//                         File 'ram_sections.cpp'                           *
//                        Generated by version 2.4.3                         *
//                       may 13th, 2013, at 13h40'14"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "ram_sections.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "piccolo_options.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "ram_sections.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'analyze_ram_sections'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyze_5F_ram_5F_sections (const GALGAS_string constinArgument_inListingTitle,
                                         const GALGAS_ramDefinitionList constinArgument_inRamDefinitionList,
                                         GALGAS_ramBankTable & ioArgument_ioRamBankTable,
                                         const GALGAS_registerTable constinArgument_inSpecialRegisterTable,
                                         GALGAS_string & ioArgument_ioListFileContents,
                                         GALGAS_registerTable & ioArgument_ioAllRegisters,
                                         C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @foreachInstructionForGeneration
  cEnumerator_ramDefinitionList enumerator_2445 (constinArgument_inRamDefinitionList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_2445.hasCurrentObject ()) {
    //-------- @foreachInstructionForGeneration
    cEnumerator_declarationInRamList enumerator_2473 (enumerator_2445.current_mDeclaration (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_2473.hasCurrentObject ()) {
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_handleDeclaration ((const cPtr_declarationInRam *) enumerator_2473.current_mDeclarationInRAM (HERE).ptr (), ioArgument_ioRamBankTable, ioArgument_ioAllRegisters, enumerator_2445.current_mBankName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (61)) ;
      //-------- END @methodCallInstructionForGeneration
      enumerator_2473.gotoNextObject () ;
    }
    enumerator_2445.gotoNextObject () ;
  }
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (gOption_piccolo_5F_options_ouputListingFile.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @concatInstructionForGeneration
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string::makeEmptyString ().reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (65)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (65)) COMMA_SOURCE_FILE_AT_LINE (65)) ;
    //-------- @concatInstructionForGeneration
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("*").operator_concat (constinArgument_inListingTitle.reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 77U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (66)) COMMA_SOURCE_FILE_AT_LINE (66)).operator_concat (GALGAS_string ("*\n") COMMA_SOURCE_FILE_AT_LINE (66)) COMMA_SOURCE_FILE_AT_LINE (66)) ;
    //-------- @concatInstructionForGeneration
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string::makeEmptyString ().reader_stringByLeftAndRightPadding (GALGAS_uint ((PMUInt32) 79U), GALGAS_char (TO_UNICODE (42)) COMMA_SOURCE_FILE_AT_LINE (67)).operator_concat (GALGAS_string ("\n"
      "\n") COMMA_SOURCE_FILE_AT_LINE (67)) COMMA_SOURCE_FILE_AT_LINE (67)) ;
    //-------- @concatInstructionForGeneration
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("Variable").reader_stringByLeftPadding (GALGAS_uint ((PMUInt32) 40U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (68)).operator_concat (GALGAS_string (" Address\n") COMMA_SOURCE_FILE_AT_LINE (68)) COMMA_SOURCE_FILE_AT_LINE (68)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_registerTable enumerator_3023 (ioArgument_ioAllRegisters, kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_3023.hasCurrentObject ()) {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_1 = constinArgument_inSpecialRegisterTable.reader_hasKey (enumerator_3023.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (70)) COMMA_SOURCE_FILE_AT_LINE (70)).operator_not (SOURCE_FILE_AT_LINE (70)).boolEnum () ;
      if (kBoolTrue == test_1) {
        //-------- @concatInstructionForGeneration
        ioArgument_ioListFileContents.dotAssign_operation (enumerator_3023.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (71)).reader_stringByLeftPadding (GALGAS_uint ((PMUInt32) 40U), GALGAS_char (TO_UNICODE (32)) COMMA_SOURCE_FILE_AT_LINE (71)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (71)) COMMA_SOURCE_FILE_AT_LINE (71)) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_uintlist enumerator_3219 (enumerator_3023.current_mRegisterAddressList (HERE), kEnumeration_up) ;
        //--- simple foreach instruction
        while (enumerator_3219.hasCurrentObject ()) {
          //-------- @concatInstructionForGeneration
          ioArgument_ioListFileContents.dotAssign_operation (enumerator_3219.current_mValue (HERE).reader_hexString (SOURCE_FILE_AT_LINE (73)) COMMA_SOURCE_FILE_AT_LINE (73)) ;
          if (enumerator_3219.hasNextObject ()) {
            //-------- @concatInstructionForGeneration
            ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (74)) ;
          }
          enumerator_3219.gotoNextObject () ;
        }
        //-------- @concatInstructionForGeneration
        ioArgument_ioListFileContents.dotAssign_operation (enumerator_3023.current_mBitDefinitionString (HERE).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (76)) COMMA_SOURCE_FILE_AT_LINE (76)) ;
      }
      enumerator_3023.gotoNextObject () ;
    }
    //-------- @concatInstructionForGeneration
    ioArgument_ioListFileContents.dotAssign_operation (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (79)) ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//      Abstract category method '@declarationInRam handleDeclaration'       *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_declarationInRam_handleDeclaration> gCategoryMethodTable_declarationInRam_handleDeclaration ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_handleDeclaration (const PMSInt32 inClassIndex,
                                            categoryMethodSignature_declarationInRam_handleDeclaration inMethod) {
  gCategoryMethodTable_declarationInRam_handleDeclaration.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_declarationInRam_handleDeclaration (void) {
  gCategoryMethodTable_declarationInRam_handleDeclaration.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_declarationInRam_handleDeclaration (NULL,
                                                               freeCategoryMethod_declarationInRam_handleDeclaration) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_handleDeclaration (const cPtr_declarationInRam * inObject,
                                           GALGAS_ramBankTable & io_ioRamBank,
                                           GALGAS_registerTable & io_ioRegisterTable,
                                           const GALGAS_lstring constin_inCurrentRamBank,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_declarationInRam) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_declarationInRam_handleDeclaration f = NULL ;
    if (classIndex < gCategoryMethodTable_declarationInRam_handleDeclaration.count ()) {
      f = gCategoryMethodTable_declarationInRam_handleDeclaration (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_declarationInRam_handleDeclaration.count ()) {
           f = gCategoryMethodTable_declarationInRam_handleDeclaration (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_declarationInRam_handleDeclaration.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, io_ioRamBank, io_ioRegisterTable, constin_inCurrentRamBank, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@byteDeclarationInRam handleDeclaration'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_byteDeclarationInRam_handleDeclaration (const cPtr_declarationInRam * inObject,
                                                                   GALGAS_ramBankTable & ioArgument_ioRamBank,
                                                                   GALGAS_registerTable & ioArgument_ioRegisterTable,
                                                                   const GALGAS_lstring constinArgument_inCurrentRamBank,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_byteDeclarationInRam * object = (const cPtr_byteDeclarationInRam *) inObject ;
  macroValidSharedObject (object, const cPtr_byteDeclarationInRam) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_uint var_lastAddressPlusOne ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_uint var_firstFreeAddress ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_uintlist var_mirrorOffsetList ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_uint joker_1051_0 ; // Joker input parameter
  ioArgument_ioRamBank.method_searchKey (constinArgument_inCurrentRamBank, joker_1051_0, var_firstFreeAddress, var_lastAddressPlusOne, var_mirrorOffsetList, inCompiler COMMA_SOURCE_FILE_AT_LINE (29)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mSize.reader_uint (SOURCE_FILE_AT_LINE (30)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_1 (object->mAttribute_mSize.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("zero size is not allowed") COMMA_SOURCE_FILE_AT_LINE (31)) ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_uintlist var_addressList = GALGAS_uintlist::constructor_listWithValue (var_firstFreeAddress COMMA_SOURCE_FILE_AT_LINE (33)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_uintlist enumerator_1285 (var_mirrorOffsetList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_1285.hasCurrentObject ()) {
    //-------- @plusEqualnstructionForGeneration
    var_addressList.addAssign_operation (var_firstFreeAddress.add_operation (enumerator_1285.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (35)) COMMA_SOURCE_FILE_AT_LINE (35)) ;
    enumerator_1285.gotoNextObject () ;
  }
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioRegisterTable.modifier_insertKey (object->mAttribute_mName, var_addressList, object->mAttribute_mSize.reader_uint (SOURCE_FILE_AT_LINE (37)), object->mAttribute_mBitSliceTable, object->mAttribute_mBitDefinitionString, inCompiler COMMA_SOURCE_FILE_AT_LINE (37)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  var_firstFreeAddress = var_firstFreeAddress.add_operation (object->mAttribute_mSize.reader_uint (SOURCE_FILE_AT_LINE (38)), inCompiler COMMA_SOURCE_FILE_AT_LINE (38)) ;
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioRamBank.modifier_setMFirstFreeAddressForKey (var_firstFreeAddress, constinArgument_inCurrentRamBank.reader_string (SOURCE_FILE_AT_LINE (39)), inCompiler COMMA_SOURCE_FILE_AT_LINE (39)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_firstFreeAddress.objectCompare (var_lastAddressPlusOne)).boolEnum () ;
  if (kBoolTrue == test_2) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_3 (object->mAttribute_mName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_3, GALGAS_string ("overflow in '").operator_concat (constinArgument_inCurrentRamBank.reader_string (SOURCE_FILE_AT_LINE (41)) COMMA_SOURCE_FILE_AT_LINE (41)).operator_concat (GALGAS_string ("' ram bank for '") COMMA_SOURCE_FILE_AT_LINE (41)).operator_concat (object->mAttribute_mName.reader_string (SOURCE_FILE_AT_LINE (41)) COMMA_SOURCE_FILE_AT_LINE (41)).operator_concat (GALGAS_string ("' declaration") COMMA_SOURCE_FILE_AT_LINE (41)) COMMA_SOURCE_FILE_AT_LINE (41)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_byteDeclarationInRam_handleDeclaration (void) {
  enterCategoryMethod_handleDeclaration (kTypeDescriptor_GALGAS_byteDeclarationInRam.mSlotID,
                                         categoryMethod_byteDeclarationInRam_handleDeclaration) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_byteDeclarationInRam_handleDeclaration (defineCategoryMethod_byteDeclarationInRam_handleDeclaration, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


