//-----------------------------------------------------------------------------*
//                                                                             *
//                           File 'ram_sections.h'                             *
//                         Generated by version 2.5.8                          *
//                        may 19th, 2014, at 19h44'43"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef ram_sections_ENTITIES_DEFINED
#define ram_sections_ENTITIES_DEFINED

//-----------------------------------------------------------------------------*

#include "galgas2/predefined-types.h"

//-----------------------------------------------------------------------------*

#include "piccoloDevice_semantics.h"
#include "generic_metamodel.h"

//-----------------------------------------------------------------------------*


//-----------------------------------------------------------------------------*
//                                                                             *
//                      Routine 'analyze_ram_sections'                       *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_analyze_5F_ram_5F_sections (const GALGAS_string constinArgument0,
                                         const GALGAS_ramDefinitionList constinArgument1,
                                         GALGAS_ramBankTable & ioArgument2,
                                         const GALGAS_registerTable constinArgument3,
                                         GALGAS_string & ioArgument4,
                                         GALGAS_registerTable & ioArgument5,
                                         GALGAS_declaredByteMap & outArgument6,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//      Abstract category method '@declarationInRam handleDeclaration'       *
//                                                                             *
//-----------------------------------------------------------------------------*

typedef void (*categoryMethodSignature_declarationInRam_handleDeclaration) (const cPtr_declarationInRam * inObject,
                                                                            GALGAS_ramBankTable & ioArgument0,
                                                                            GALGAS_registerTable & ioArgument1,
                                                                            const GALGAS_lstring constinArgument2,
                                                                            GALGAS_declaredByteMap & ioArgument3,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) ;

//-----------------------------------------------------------------------------*

void enterCategoryMethod_handleDeclaration (const int32_t inClassIndex,
                                            categoryMethodSignature_declarationInRam_handleDeclaration inMethod) ;

//-----------------------------------------------------------------------------*

void callCategoryMethod_handleDeclaration (const cPtr_declarationInRam * inObject,
                                           GALGAS_ramBankTable & io_ioRamBank,
                                           GALGAS_registerTable & io_ioRegisterTable,
                                           const GALGAS_lstring constin_inCurrentRamBank,
                                           GALGAS_declaredByteMap & io_ioDeclaredByteMap,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

#endif
