semantics baseline_assembly_classes :
import "baseline_instruction_groups.gSemantics" ;
import "baseline_intermediate_classes.gSemantics" ;

#-------------------------------------------------------------------------------*

abstract class @baseline_assembly_instruction {
}

#-------------------------------------------------------------------------------*

list @baseline_assembly_instructionList {
  @baseline_assembly_instruction mInstruction feature setter ;
}

#-------------------------------------------------------------------------------*

class @baseline_assembly_pseudo_ORG extends @baseline_assembly_instruction {
  @uint mOrigin ;
}

#-------------------------------------------------------------------------------*

class @baseline_assembly_pseudo_INPAGE extends @baseline_assembly_instruction {
  @lstring mRoutineName ;
  @uint mPage ;
}

#-------------------------------------------------------------------------------*

class @baseline_assembly_pseudo_LABEL extends @baseline_assembly_instruction {
  @lstring mLabel ;
}

#-------------------------------------------------------------------------------*

abstract class @baseline_assembly_actualInstruction extends @baseline_assembly_instruction {
  @location mInstructionLocation ;
}

#-------------------------------------------------------------------------------*

class @baseline_assembly_instruction_FD extends @baseline_assembly_actualInstruction {
  @baseline_instruction_FD_base_code mInstruction ;
  @baseline_intermediate_registerExpression mRegisterDescription ;
  @bool m_W_isDestination ;
}

#-------------------------------------------------------------------------------*

class @baseline_assembly_instruction_F extends @baseline_assembly_actualInstruction {
  @baseline_F_instruction_base_code mInstruction ;
  @baseline_intermediate_registerExpression mRegisterDescription ;
}

#-------------------------------------------------------------------------------*

class @baseline_assembly_instruction_FB extends @baseline_assembly_actualInstruction {
  @baseline_bit_oriented_op mInstruction ;
  @baseline_intermediate_registerExpression mRegisterDescription ;
  @uint mBitNumber ;
}

#-------------------------------------------------------------------------------*

class @baseline_assembly_instruction_BitTestSkip extends @baseline_assembly_actualInstruction {
  @bool mSkipIfSet ;
  @baseline_intermediate_registerExpression mRegisterDescription ;
  @uint mBitNumber ;
}

#-------------------------------------------------------------------------------*

class @baseline_assembly_GOTO extends @baseline_assembly_actualInstruction {
  @lstring mTargetLabel ;
}

#-------------------------------------------------------------------------------*

class @baseline_assembly_SKIP extends @baseline_assembly_actualInstruction {
}

#-------------------------------------------------------------------------------*

class @baseline_assembly_CALL extends @baseline_assembly_actualInstruction {
  @lstring mTargetLabel ;
}

#----------------------------------------------------*

class @baseline_assembly_WO_OPERAND extends @baseline_assembly_actualInstruction {
  @baseline_WO_OPERAND_group mInstruction ;
}

#----------------------------------------------------*

class @baseline_assembly_TRIS extends @baseline_assembly_actualInstruction {
  @lstring mOperand ;
  @uint mOpcode ;
}

#-------------------------------------------------------------------------------*

class @baseline_assembly_instruction_literalOperation extends @baseline_assembly_actualInstruction {
  @baseline_literal_instruction_opcode mInstruction ;
  @uint mLiteralValue ;
}

#-------------------------------------------------------------------------------*

class @baseline_assembly_incDecRegisterInCondition extends @baseline_assembly_actualInstruction {
  @baseline_intermediate_registerExpression mRegisterDescription ;
  @bool mIncrement ;
  @bool m_W_isDestination ;
}

#-------------------------------------------------------------------------------*

end semantics ;
