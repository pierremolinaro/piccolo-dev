semantics baseline_instruction_groups :
#----------------------------------------------------*

enum @baseline_instruction_FD_base_code {
  ADDWF, ANDWF, COMF, DECF, DECFSZ, INCF, INCFSZ, IORWF, MOVF, RLF, RRF, SUBWF, SWAPF, XORWF
}{
}

reader @baseline_instruction_FD_base_code mnemonic -> @string outResult :
  switch selfcopy
    when ADDWF : outResult := "ADDWF" ;
    when ANDWF : outResult := "ANDWF" ;
    when COMF : outResult := "COMF" ;
    when DECF : outResult := "DECF" ;
    when DECFSZ : outResult := "DECFSZ" ;
    when INCF : outResult := "INCF" ;
    when INCFSZ : outResult := "INCFSZ" ;
    when IORWF : outResult := "IORWF" ;
    when MOVF : outResult := "MOVF" ;
    when RLF : outResult := "RLF" ;
    when RRF : outResult := "RRF" ;
    when SUBWF : outResult := "SUBWF" ;
    when SWAPF : outResult := "SWAPF" ;
    when XORWF : outResult := "XORWF" ;
  end switch ;
end reader ;

#----------------------------------------------------*

enum @baseline_F_instruction_base_code {
  CLRF, MOVWF
}{
}

reader @baseline_F_instruction_base_code mnemonic -> @string outResult :
  switch selfcopy
    when CLRF   : outResult := "CLRF" ;
    when MOVWF  : outResult := "MOVWF" ;
  end switch ;
end reader ;

#----------------------------------------------------*

enum @baseline_bit_oriented_op {
  BCF, BSF
}{
}

#----------------------------------------------------*

reader @baseline_bit_oriented_op mnemonic -> @string outResult :
  switch selfcopy
    when BCF : outResult := "BCF" ;
    when BSF : outResult := "BSF" ;
  end switch ;
end reader ;

#----------------------------------------------------*

enum @baseline_literal_instruction_opcode {
  ANDLW, IORLW, MOVLW, RETLW, XORLW
}{
}

#----------------------------------------------------*

reader @baseline_literal_instruction_opcode mnemonic -> @string outResult :
  switch selfcopy
    when ANDLW : outResult := "ANDLW" ;
    when IORLW : outResult := "IORLW" ;
    when MOVLW : outResult := "MOVLW" ;
    when RETLW : outResult := "RETLW" ;
    when XORLW : outResult := "XORLW" ;
  end switch ;
end reader ;

#----------------------------------------------------*

enum @baseline_IF_BitTest_opcode {
  BTFSS, BTFSC
}{
}

#----------------------------------------------------*

reader @baseline_IF_BitTest_opcode mnemonic -> @string outResult :
  switch selfcopy
  when BTFSS : outResult := "BTFSS" ;
  when BTFSC : outResult := "BTFSC" ;
  end switch ;
end reader ; 

#----------------------------------------------------*

enum @baseline_WO_OPERAND_group {
  CLRW, NOP, CLRWDT, OPTION_, SLEEP
}{
}

#----------------------------------------------------*

reader @baseline_WO_OPERAND_group mnemonic -> @string outResult :
  switch selfcopy
  when NOP     : outResult := "NOP" ;
  when CLRW    : outResult := "CLRW" ;
  when CLRWDT  : outResult := "CLRWDT" ;
  when OPTION_ : outResult := "OPTION" ;
  when SLEEP   : outResult := "SLEEP" ;
  end switch ;
end reader ; 

#----------------------------------------------------*

end semantics ;
