semantics baseline_intermediate_instruction_length :
import "baseline_intermediate_classes.gSemantics" ;

#-------------------------------------------------------------------------------*

abstract reader @baseline_intermediate_instruction length -> @uint outLength ;

#-------------------------------------------------------------------------------*

override reader @baseline_intermediate_NULL length -> @uint outLength :
  outLength := 0 ;
end reader ;

#-------------------------------------------------------------------------------*

override reader @baseline_intermediate_pseudo_PAGE length -> @uint outLength :
  outLength := 0 ;
end reader ;

#-------------------------------------------------------------------------------*

override reader @baseline_intermediate_pseudo_LABEL length -> @uint outLength :
  outLength := 0 ;
end reader ;

#-------------------------------------------------------------------------------*

override reader @baseline_intermediate_actualInstruction length -> @uint outLength :
  outLength := 1 ;
end reader ;

#-------------------------------------------------------------------------------*

override
reader @baseline_intermediate_instruction_MNOP length -> @uint outLength :
  outLength := [mOccurrenceFactor uint] ;
end reader ;

#-------------------------------------------------------------------------------*


override reader @baseline_intermediate_incDecRegisterInCondition length -> @uint outLength :
  if mBranchIfZero then
    outLength := 3 ;
  else
    outLength := 2 ;
  end if ; 
end reader ;

#-------------------------------------------------------------------------------*

end semantics ;
