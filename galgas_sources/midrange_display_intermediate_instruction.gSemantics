semantics midrange_display_intermediate_instruction :
import "midrange_intermediate_classes.gSemantics" ;
import "midrange_intermediate_instruction_length.gSemantics" ;

#----------------------------------------------------------------------------*

abstract method @midrange_intermediate_instruction displayIPICinstruction ?!@string ioListFileContents ;

#----------------------------------------------------------------------------*

override
method @midrange_intermediate_NULL displayIPICinstruction ?!@string ioListFileContents :
  ioListFileContents .= "-" ;
end method ;

#----------------------------------------------------------------------------*

override
method @midrange_intermediate_pseudo_ORG displayIPICinstruction ?!@string ioListFileContents :
  ioListFileContents .= "ORG " . [mOrigin hexString] ;
end method ;

#----------------------------------------------------------------------------*

override
method @midrange_intermediate_pseudo_LABEL displayIPICinstruction ?!@string ioListFileContents :
  ioListFileContents .= "LABEL " . mLabel ;
end method ;

#----------------------------------------------------------------------------*

override
method @midrange_intermediate_instruction_FD displayIPICinstruction ?!@string ioListFileContents :
  ioListFileContents .= [mInstruction_FD_base_code mnemonic] . " " . [mRegisterDescription mAssemblyString] ;
  if m_W_isDestination then
    ioListFileContents .= ", W" ;
  end if ;
end method ;

#----------------------------------------------------------------------------*

override
method @midrange_intermediate_instruction_F displayIPICinstruction ?!@string ioListFileContents :
  ioListFileContents .= [mFinstruction mnemonic] . " " . [mRegisterDescription mAssemblyString] ;
end method ;

#----------------------------------------------------------------------------*

override
method @midrange_intermediate_instruction_FB displayIPICinstruction ?!@string ioListFileContents :
  ioListFileContents .= [mBitOrientedOp mnemonic] . " " . [mRegisterDescription mAssemblyString] . ", " . [mBitNumber string] ;
end method ;

#----------------------------------------------------------------------------*

override
method @midrange_intermediate_instruction_BitTestSkip displayIPICinstruction ?!@string ioListFileContents :
  if mSkipIfSet then
    ioListFileContents .= "BTFSS" ;
  else
    ioListFileContents .= "BTFSC" ;
  end if ;
  ioListFileContents .= " " . [mRegisterDescription mAssemblyString] . ", " . [mBitNumber string] ;
end method ;

#----------------------------------------------------------------------------*

override
method @midrange_intermediate_JUMP displayIPICinstruction ?!@string ioListFileContents :
  ioListFileContents .= "JUMP " . mTargetLabel ;
end method ;

#----------------------------------------------------------------------------*

override
method @midrange_intermediate_GOTO displayIPICinstruction ?!@string ioListFileContents :
  ioListFileContents .= "GOTO " . mTargetLabel ;
end method ;

#----------------------------------------------------------------------------*

override
method @midrange_intermediate_CALL displayIPICinstruction ?!@string ioListFileContents :
  ioListFileContents .= "CALL " . mTargetLabel ;
end method ;

#----------------------------------------------------------------------------*

override
method @midrange_intermediate_JSR displayIPICinstruction ?!@string ioListFileContents :
  ioListFileContents .= "CALL " . mTargetLabel ;
end method ;

#----------------------------------------------------------------------------*

override
method @midrange_intermediate_instruction_CLRWDT displayIPICinstruction ?!@string ioListFileContents :
  ioListFileContents .= "CLRWDT" ;
end method ;

#----------------------------------------------------------------------------*

override
method @midrange_intermediate_instruction_CLRW displayIPICinstruction ?!@string ioListFileContents :
  ioListFileContents .= "CLRW" ;
end method ;


#----------------------------------------------------------------------------*

override
method @midrange_intermediate_instruction_NOP displayIPICinstruction ?!@string ioListFileContents :
  ioListFileContents .= "NOP" ;
end method ;

#----------------------------------------------------------------------------*

override
method @midrange_intermediate_instruction_RETURN displayIPICinstruction ?!@string ioListFileContents :
  ioListFileContents .= "RETURN" ;
end method ;

#----------------------------------------------------------------------------*

override
method @midrange_intermediate_instruction_RETFIE displayIPICinstruction ?!@string ioListFileContents :
  ioListFileContents .= "RETFIE" ;
end method ;

#----------------------------------------------------------------------------*

override
method @midrange_intermediate_instruction_SLEEP displayIPICinstruction ?!@string ioListFileContents :
  ioListFileContents .= "SLEEP" ;
end method ;

#----------------------------------------------------------------------------*

override
method @midrange_intermediate_instruction_literalOperation displayIPICinstruction ?!@string ioListFileContents :
  ioListFileContents .= [mLiteralInstruction mnemonic] . " " . [mLiteralValue hexString] ;
end method ;

#----------------------------------------------------------------------------*

override
method @midrange_intermediate_instruction_MNOP displayIPICinstruction ?!@string ioListFileContents :
  ioListFileContents .= "MNOP " . [[mOccurrenceFactor uint] string] ;
end method ;

#----------------------------------------------------------------------------*

override
method @midrange_intermediate_incDecRegisterInCondition displayIPICinstruction ?!@string ioListFileContents :
  ioListFileContents .= "JUMP " ;
  if mIncrement then
    ioListFileContents .= "INCF " ;
  else
    ioListFileContents .= "DECF " ;
  end if ;
  ioListFileContents .= [mRegisterDescription mAssemblyString] ;
  if m_W_isDestination then
    ioListFileContents .= ", W" ;
  end if ;
  if mBranchIfZero then
    ioListFileContents .= " Z" ;
  else
    ioListFileContents .= " NZ" ;
  end if ;
  ioListFileContents .= " " . mTargetLabel ;
end method ;

#----------------------------------------------------------------------------*

end semantics ;
